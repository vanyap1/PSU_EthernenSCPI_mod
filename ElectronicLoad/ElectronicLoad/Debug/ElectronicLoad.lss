
ElectronicLoad.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00014498  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00014498  00014498  00024498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a18  20000000  000144a0  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000c64  20000a18  00014eb8  00030a18  2**2
                  ALLOC
  4 .stack        00002004  2000167c  00015b1c  00030a18  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00030a18  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00030a42  2**0
                  CONTENTS, READONLY
  7 .debug_info   00030c73  00000000  00000000  00030a9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004cdd  00000000  00000000  0006170e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000140a1  00000000  00000000  000663eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000010b0  00000000  00000000  0007a48c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001140  00000000  00000000  0007b53c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00009afb  00000000  00000000  0007c67c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000142eb  00000000  00000000  00086177  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005f1ef  00000000  00000000  0009a462  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00004918  00000000  00000000  000f9654  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	80 36 00 20 09 01 00 00 05 01 00 00 05 01 00 00     .6. ............
	...
      2c:	05 01 00 00 00 00 00 00 00 00 00 00 05 01 00 00     ................
      3c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
      4c:	8d 0f 00 00 71 0d 00 00 05 01 00 00 05 01 00 00     ....q...........
      5c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
      6c:	f1 13 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
      7c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
      8c:	1d 1b 00 00 31 1b 00 00 05 01 00 00 05 01 00 00     ....1...........
      9c:	05 01 00 00 05 01 00 00                             ........

000000a4 <__do_global_dtors_aux>:
      a4:	b510      	push	{r4, lr}
      a6:	4c06      	ldr	r4, [pc, #24]	; (c0 <__do_global_dtors_aux+0x1c>)
      a8:	7823      	ldrb	r3, [r4, #0]
      aa:	2b00      	cmp	r3, #0
      ac:	d107      	bne.n	be <__do_global_dtors_aux+0x1a>
      ae:	4b05      	ldr	r3, [pc, #20]	; (c4 <__do_global_dtors_aux+0x20>)
      b0:	2b00      	cmp	r3, #0
      b2:	d002      	beq.n	ba <__do_global_dtors_aux+0x16>
      b4:	4804      	ldr	r0, [pc, #16]	; (c8 <__do_global_dtors_aux+0x24>)
      b6:	e000      	b.n	ba <__do_global_dtors_aux+0x16>
      b8:	bf00      	nop
      ba:	2301      	movs	r3, #1
      bc:	7023      	strb	r3, [r4, #0]
      be:	bd10      	pop	{r4, pc}
      c0:	20000a18 	.word	0x20000a18
      c4:	00000000 	.word	0x00000000
      c8:	000144a0 	.word	0x000144a0

000000cc <frame_dummy>:
      cc:	4b08      	ldr	r3, [pc, #32]	; (f0 <frame_dummy+0x24>)
      ce:	b510      	push	{r4, lr}
      d0:	2b00      	cmp	r3, #0
      d2:	d003      	beq.n	dc <frame_dummy+0x10>
      d4:	4907      	ldr	r1, [pc, #28]	; (f4 <frame_dummy+0x28>)
      d6:	4808      	ldr	r0, [pc, #32]	; (f8 <frame_dummy+0x2c>)
      d8:	e000      	b.n	dc <frame_dummy+0x10>
      da:	bf00      	nop
      dc:	4807      	ldr	r0, [pc, #28]	; (fc <frame_dummy+0x30>)
      de:	6803      	ldr	r3, [r0, #0]
      e0:	2b00      	cmp	r3, #0
      e2:	d100      	bne.n	e6 <frame_dummy+0x1a>
      e4:	bd10      	pop	{r4, pc}
      e6:	4b06      	ldr	r3, [pc, #24]	; (100 <frame_dummy+0x34>)
      e8:	2b00      	cmp	r3, #0
      ea:	d0fb      	beq.n	e4 <frame_dummy+0x18>
      ec:	4798      	blx	r3
      ee:	e7f9      	b.n	e4 <frame_dummy+0x18>
      f0:	00000000 	.word	0x00000000
      f4:	20000a1c 	.word	0x20000a1c
      f8:	000144a0 	.word	0x000144a0
      fc:	000144a0 	.word	0x000144a0
     100:	00000000 	.word	0x00000000

00000104 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     104:	e7fe      	b.n	104 <Dummy_Handler>
	...

00000108 <Reset_Handler>:
{
     108:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     10a:	4a12      	ldr	r2, [pc, #72]	; (154 <Reset_Handler+0x4c>)
     10c:	4b12      	ldr	r3, [pc, #72]	; (158 <Reset_Handler+0x50>)
     10e:	429a      	cmp	r2, r3
     110:	d009      	beq.n	126 <Reset_Handler+0x1e>
     112:	4b11      	ldr	r3, [pc, #68]	; (158 <Reset_Handler+0x50>)
     114:	4a0f      	ldr	r2, [pc, #60]	; (154 <Reset_Handler+0x4c>)
     116:	e003      	b.n	120 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     118:	6811      	ldr	r1, [r2, #0]
     11a:	6019      	str	r1, [r3, #0]
     11c:	3304      	adds	r3, #4
     11e:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     120:	490e      	ldr	r1, [pc, #56]	; (15c <Reset_Handler+0x54>)
     122:	428b      	cmp	r3, r1
     124:	d3f8      	bcc.n	118 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     126:	4b0e      	ldr	r3, [pc, #56]	; (160 <Reset_Handler+0x58>)
     128:	e002      	b.n	130 <Reset_Handler+0x28>
                *pDest++ = 0;
     12a:	2200      	movs	r2, #0
     12c:	601a      	str	r2, [r3, #0]
     12e:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     130:	4a0c      	ldr	r2, [pc, #48]	; (164 <Reset_Handler+0x5c>)
     132:	4293      	cmp	r3, r2
     134:	d3f9      	bcc.n	12a <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     136:	4a0c      	ldr	r2, [pc, #48]	; (168 <Reset_Handler+0x60>)
     138:	21ff      	movs	r1, #255	; 0xff
     13a:	4b0c      	ldr	r3, [pc, #48]	; (16c <Reset_Handler+0x64>)
     13c:	438b      	bics	r3, r1
     13e:	6093      	str	r3, [r2, #8]
        NVMCTRL->CTRLB.bit.MANW = 1;
     140:	4a0b      	ldr	r2, [pc, #44]	; (170 <Reset_Handler+0x68>)
     142:	6851      	ldr	r1, [r2, #4]
     144:	2380      	movs	r3, #128	; 0x80
     146:	430b      	orrs	r3, r1
     148:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     14a:	4b0a      	ldr	r3, [pc, #40]	; (174 <Reset_Handler+0x6c>)
     14c:	4798      	blx	r3
        main();
     14e:	4b0a      	ldr	r3, [pc, #40]	; (178 <Reset_Handler+0x70>)
     150:	4798      	blx	r3
     152:	e7fe      	b.n	152 <Reset_Handler+0x4a>
     154:	000144a0 	.word	0x000144a0
     158:	20000000 	.word	0x20000000
     15c:	20000a18 	.word	0x20000a18
     160:	20000a18 	.word	0x20000a18
     164:	2000167c 	.word	0x2000167c
     168:	e000ed00 	.word	0xe000ed00
     16c:	00000000 	.word	0x00000000
     170:	41004000 	.word	0x41004000
     174:	00006c15 	.word	0x00006c15
     178:	000043c1 	.word	0x000043c1

0000017c <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
     17c:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
     180:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
     182:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     184:	f3bf 8f5f 	dmb	sy
	__disable_irq();
	__DMB();
}
     188:	4770      	bx	lr

0000018a <atomic_leave_critical>:
     18a:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     18e:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     190:	f383 8810 	msr	PRIMASK, r3
}
     194:	4770      	bx	lr
	...

00000198 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     198:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     19a:	4b04      	ldr	r3, [pc, #16]	; (1ac <delay_ms+0x14>)
     19c:	681c      	ldr	r4, [r3, #0]
     19e:	4b04      	ldr	r3, [pc, #16]	; (1b0 <delay_ms+0x18>)
     1a0:	4798      	blx	r3
     1a2:	0001      	movs	r1, r0
     1a4:	0020      	movs	r0, r4
     1a6:	4b03      	ldr	r3, [pc, #12]	; (1b4 <delay_ms+0x1c>)
     1a8:	4798      	blx	r3
}
     1aa:	bd10      	pop	{r4, pc}
     1ac:	20000a34 	.word	0x20000a34
     1b0:	00000c39 	.word	0x00000c39
     1b4:	00000c55 	.word	0x00000c55

000001b8 <process_ext_irq>:
 * \brief Interrupt processing routine
 *
 * \param[in] pin The pin which triggered the interrupt
 */
static void process_ext_irq(const uint32_t pin)
{
     1b8:	b570      	push	{r4, r5, r6, lr}
	uint8_t lower = 0, middle, upper = EXT_IRQ_AMOUNT;
     1ba:	2501      	movs	r5, #1
     1bc:	2400      	movs	r4, #0

	while (upper >= lower) {
     1be:	e007      	b.n	1d0 <process_ext_irq+0x18>
		if (middle >= EXT_IRQ_AMOUNT) {
			return;
		}

		if (ext_irqs[middle].pin == pin) {
			if (ext_irqs[middle].cb) {
     1c0:	4a0d      	ldr	r2, [pc, #52]	; (1f8 <process_ext_irq+0x40>)
     1c2:	58b3      	ldr	r3, [r6, r2]
     1c4:	2b00      	cmp	r3, #0
     1c6:	d000      	beq.n	1ca <process_ext_irq+0x12>
				ext_irqs[middle].cb();
     1c8:	4798      	blx	r3
			lower = middle + 1;
		} else {
			upper = middle - 1;
		}
	}
}
     1ca:	bd70      	pop	{r4, r5, r6, pc}
			upper = middle - 1;
     1cc:	3a01      	subs	r2, #1
     1ce:	b2d5      	uxtb	r5, r2
	while (upper >= lower) {
     1d0:	42ac      	cmp	r4, r5
     1d2:	d8fa      	bhi.n	1ca <process_ext_irq+0x12>
		middle = (upper + lower) >> 1;
     1d4:	192b      	adds	r3, r5, r4
     1d6:	105b      	asrs	r3, r3, #1
     1d8:	b2da      	uxtb	r2, r3
		if (middle >= EXT_IRQ_AMOUNT) {
     1da:	2a00      	cmp	r2, #0
     1dc:	d1f5      	bne.n	1ca <process_ext_irq+0x12>
     1de:	21ff      	movs	r1, #255	; 0xff
     1e0:	400b      	ands	r3, r1
		if (ext_irqs[middle].pin == pin) {
     1e2:	00de      	lsls	r6, r3, #3
     1e4:	4904      	ldr	r1, [pc, #16]	; (1f8 <process_ext_irq+0x40>)
     1e6:	1989      	adds	r1, r1, r6
     1e8:	6849      	ldr	r1, [r1, #4]
     1ea:	4281      	cmp	r1, r0
     1ec:	d0e8      	beq.n	1c0 <process_ext_irq+0x8>
		if (ext_irqs[middle].pin < pin) {
     1ee:	d2ed      	bcs.n	1cc <process_ext_irq+0x14>
			lower = middle + 1;
     1f0:	3201      	adds	r2, #1
     1f2:	b2d4      	uxtb	r4, r2
     1f4:	e7ec      	b.n	1d0 <process_ext_irq+0x18>
     1f6:	46c0      	nop			; (mov r8, r8)
     1f8:	20000a38 	.word	0x20000a38

000001fc <ext_irq_init>:
{
     1fc:	b510      	push	{r4, lr}
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     1fe:	2300      	movs	r3, #0
     200:	2b00      	cmp	r3, #0
     202:	d003      	beq.n	20c <ext_irq_init+0x10>
	return _ext_irq_init(process_ext_irq);
     204:	4807      	ldr	r0, [pc, #28]	; (224 <ext_irq_init+0x28>)
     206:	4b08      	ldr	r3, [pc, #32]	; (228 <ext_irq_init+0x2c>)
     208:	4798      	blx	r3
}
     20a:	bd10      	pop	{r4, pc}
		ext_irqs[i].pin = 0xFFFFFFFF;
     20c:	4a07      	ldr	r2, [pc, #28]	; (22c <ext_irq_init+0x30>)
     20e:	00d9      	lsls	r1, r3, #3
     210:	1850      	adds	r0, r2, r1
     212:	2401      	movs	r4, #1
     214:	4264      	negs	r4, r4
     216:	6044      	str	r4, [r0, #4]
		ext_irqs[i].cb  = NULL;
     218:	2000      	movs	r0, #0
     21a:	5088      	str	r0, [r1, r2]
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     21c:	3301      	adds	r3, #1
     21e:	b29b      	uxth	r3, r3
     220:	e7ee      	b.n	200 <ext_irq_init+0x4>
     222:	46c0      	nop			; (mov r8, r8)
     224:	000001b9 	.word	0x000001b9
     228:	00000c95 	.word	0x00000c95
     22c:	20000a38 	.word	0x20000a38

00000230 <ext_irq_register>:
{
     230:	b5f0      	push	{r4, r5, r6, r7, lr}
     232:	46c6      	mov	lr, r8
     234:	b500      	push	{lr}
     236:	b084      	sub	sp, #16
     238:	9001      	str	r0, [sp, #4]
	uint8_t i = 0, j = 0;
     23a:	2300      	movs	r3, #0
	for (; i < EXT_IRQ_AMOUNT; i++) {
     23c:	2b00      	cmp	r3, #0
     23e:	d010      	beq.n	262 <ext_irq_register+0x32>
	bool    found = false;
     240:	2300      	movs	r3, #0
     242:	4698      	mov	r8, r3
	if (NULL == cb) {
     244:	2900      	cmp	r1, #0
     246:	d01b      	beq.n	280 <ext_irq_register+0x50>
	if (!found) {
     248:	4643      	mov	r3, r8
     24a:	2b00      	cmp	r3, #0
     24c:	d146      	bne.n	2dc <ext_irq_register+0xac>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     24e:	2b00      	cmp	r3, #0
     250:	d124      	bne.n	29c <ext_irq_register+0x6c>
			if (NULL == ext_irqs[i].cb) {
     252:	00da      	lsls	r2, r3, #3
     254:	4c2a      	ldr	r4, [pc, #168]	; (300 <ext_irq_register+0xd0>)
     256:	5912      	ldr	r2, [r2, r4]
     258:	2a00      	cmp	r2, #0
     25a:	d018      	beq.n	28e <ext_irq_register+0x5e>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     25c:	3301      	adds	r3, #1
     25e:	b2db      	uxtb	r3, r3
     260:	e7f5      	b.n	24e <ext_irq_register+0x1e>
		if (ext_irqs[i].pin == pin) {
     262:	00dc      	lsls	r4, r3, #3
     264:	4a26      	ldr	r2, [pc, #152]	; (300 <ext_irq_register+0xd0>)
     266:	1912      	adds	r2, r2, r4
     268:	6852      	ldr	r2, [r2, #4]
     26a:	9801      	ldr	r0, [sp, #4]
     26c:	4282      	cmp	r2, r0
     26e:	d002      	beq.n	276 <ext_irq_register+0x46>
	for (; i < EXT_IRQ_AMOUNT; i++) {
     270:	3301      	adds	r3, #1
     272:	b2db      	uxtb	r3, r3
     274:	e7e2      	b.n	23c <ext_irq_register+0xc>
			ext_irqs[i].cb = cb;
     276:	4b22      	ldr	r3, [pc, #136]	; (300 <ext_irq_register+0xd0>)
     278:	50e1      	str	r1, [r4, r3]
			found          = true;
     27a:	2301      	movs	r3, #1
     27c:	4698      	mov	r8, r3
			break;
     27e:	e7e1      	b.n	244 <ext_irq_register+0x14>
		if (!found) {
     280:	4643      	mov	r3, r8
     282:	2b00      	cmp	r3, #0
     284:	d035      	beq.n	2f2 <ext_irq_register+0xc2>
		return _ext_irq_enable(pin, false);
     286:	9801      	ldr	r0, [sp, #4]
     288:	4b1e      	ldr	r3, [pc, #120]	; (304 <ext_irq_register+0xd4>)
     28a:	4798      	blx	r3
     28c:	e02d      	b.n	2ea <ext_irq_register+0xba>
				ext_irqs[i].cb  = cb;
     28e:	00dd      	lsls	r5, r3, #3
     290:	5129      	str	r1, [r5, r4]
				ext_irqs[i].pin = pin;
     292:	1965      	adds	r5, r4, r5
     294:	9a01      	ldr	r2, [sp, #4]
     296:	606a      	str	r2, [r5, #4]
				found           = true;
     298:	2201      	movs	r2, #1
     29a:	4690      	mov	r8, r2
     29c:	2200      	movs	r2, #0
     29e:	e001      	b.n	2a4 <ext_irq_register+0x74>
		for (; (j < EXT_IRQ_AMOUNT) && (i < EXT_IRQ_AMOUNT); j++) {
     2a0:	3201      	adds	r2, #1
     2a2:	b2d2      	uxtb	r2, r2
     2a4:	0019      	movs	r1, r3
     2a6:	4311      	orrs	r1, r2
     2a8:	d118      	bne.n	2dc <ext_irq_register+0xac>
			if ((ext_irqs[i].pin < ext_irqs[j].pin) && (ext_irqs[j].pin != 0xFFFFFFFF)) {
     2aa:	4915      	ldr	r1, [pc, #84]	; (300 <ext_irq_register+0xd0>)
     2ac:	00dc      	lsls	r4, r3, #3
     2ae:	190c      	adds	r4, r1, r4
     2b0:	6867      	ldr	r7, [r4, #4]
     2b2:	00d4      	lsls	r4, r2, #3
     2b4:	1909      	adds	r1, r1, r4
     2b6:	6849      	ldr	r1, [r1, #4]
     2b8:	428f      	cmp	r7, r1
     2ba:	d2f1      	bcs.n	2a0 <ext_irq_register+0x70>
     2bc:	1c4c      	adds	r4, r1, #1
     2be:	d0ef      	beq.n	2a0 <ext_irq_register+0x70>
				struct ext_irq tmp = ext_irqs[j];
     2c0:	a902      	add	r1, sp, #8
     2c2:	468c      	mov	ip, r1
     2c4:	4f0e      	ldr	r7, [pc, #56]	; (300 <ext_irq_register+0xd0>)
     2c6:	00d1      	lsls	r1, r2, #3
     2c8:	1879      	adds	r1, r7, r1
     2ca:	4664      	mov	r4, ip
     2cc:	c941      	ldmia	r1!, {r0, r6}
     2ce:	c441      	stmia	r4!, {r0, r6}
				ext_irqs[i] = tmp;
     2d0:	00dd      	lsls	r5, r3, #3
     2d2:	197d      	adds	r5, r7, r5
     2d4:	4661      	mov	r1, ip
     2d6:	c911      	ldmia	r1!, {r0, r4}
     2d8:	c511      	stmia	r5!, {r0, r4}
     2da:	e7e1      	b.n	2a0 <ext_irq_register+0x70>
	if (!found) {
     2dc:	4643      	mov	r3, r8
     2de:	2b00      	cmp	r3, #0
     2e0:	d00a      	beq.n	2f8 <ext_irq_register+0xc8>
	return _ext_irq_enable(pin, true);
     2e2:	2101      	movs	r1, #1
     2e4:	9801      	ldr	r0, [sp, #4]
     2e6:	4b07      	ldr	r3, [pc, #28]	; (304 <ext_irq_register+0xd4>)
     2e8:	4798      	blx	r3
}
     2ea:	b004      	add	sp, #16
     2ec:	bc04      	pop	{r2}
     2ee:	4690      	mov	r8, r2
     2f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return ERR_INVALID_ARG;
     2f2:	200d      	movs	r0, #13
     2f4:	4240      	negs	r0, r0
     2f6:	e7f8      	b.n	2ea <ext_irq_register+0xba>
		return ERR_INVALID_ARG;
     2f8:	200d      	movs	r0, #13
     2fa:	4240      	negs	r0, r0
     2fc:	e7f5      	b.n	2ea <ext_irq_register+0xba>
     2fe:	46c0      	nop			; (mov r8, r8)
     300:	20000a38 	.word	0x20000a38
     304:	00000d25 	.word	0x00000d25

00000308 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     308:	b510      	push	{r4, lr}
     30a:	b084      	sub	sp, #16
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     30c:	3814      	subs	r0, #20
     30e:	8b84      	ldrh	r4, [r0, #28]
     310:	ab01      	add	r3, sp, #4
     312:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     314:	0014      	movs	r4, r2
     316:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP;
     318:	4a06      	ldr	r2, [pc, #24]	; (334 <i2c_m_sync_write+0x2c>)
     31a:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     31c:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     31e:	0019      	movs	r1, r3
     320:	4b05      	ldr	r3, [pc, #20]	; (338 <i2c_m_sync_write+0x30>)
     322:	4798      	blx	r3

	if (ret) {
     324:	2800      	cmp	r0, #0
     326:	d102      	bne.n	32e <i2c_m_sync_write+0x26>
		return ret;
	}

	return n;
}
     328:	0020      	movs	r0, r4
     32a:	b004      	add	sp, #16
     32c:	bd10      	pop	{r4, pc}
		return ret;
     32e:	0004      	movs	r4, r0
     330:	e7fa      	b.n	328 <i2c_m_sync_write+0x20>
     332:	46c0      	nop			; (mov r8, r8)
     334:	ffff8000 	.word	0xffff8000
     338:	00001529 	.word	0x00001529

0000033c <i2c_m_sync_read>:
{
     33c:	b510      	push	{r4, lr}
     33e:	b084      	sub	sp, #16
	msg.addr   = i2c->slave_addr;
     340:	3814      	subs	r0, #20
     342:	8b84      	ldrh	r4, [r0, #28]
     344:	ab01      	add	r3, sp, #4
     346:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     348:	0014      	movs	r4, r2
     34a:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     34c:	4a06      	ldr	r2, [pc, #24]	; (368 <i2c_m_sync_read+0x2c>)
     34e:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     350:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     352:	0019      	movs	r1, r3
     354:	4b05      	ldr	r3, [pc, #20]	; (36c <i2c_m_sync_read+0x30>)
     356:	4798      	blx	r3
	if (ret) {
     358:	2800      	cmp	r0, #0
     35a:	d102      	bne.n	362 <i2c_m_sync_read+0x26>
}
     35c:	0020      	movs	r0, r4
     35e:	b004      	add	sp, #16
     360:	bd10      	pop	{r4, pc}
		return ret;
     362:	0004      	movs	r4, r0
     364:	e7fa      	b.n	35c <i2c_m_sync_read+0x20>
     366:	46c0      	nop			; (mov r8, r8)
     368:	ffff8001 	.word	0xffff8001
     36c:	00001529 	.word	0x00001529

00000370 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     370:	b570      	push	{r4, r5, r6, lr}
     372:	0004      	movs	r4, r0
     374:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     376:	1e43      	subs	r3, r0, #1
     378:	4198      	sbcs	r0, r3
     37a:	b2c0      	uxtb	r0, r0
     37c:	225e      	movs	r2, #94	; 0x5e
     37e:	4907      	ldr	r1, [pc, #28]	; (39c <i2c_m_sync_init+0x2c>)
     380:	4b07      	ldr	r3, [pc, #28]	; (3a0 <i2c_m_sync_init+0x30>)
     382:	4798      	blx	r3

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     384:	0029      	movs	r1, r5
     386:	0020      	movs	r0, r4
     388:	4b06      	ldr	r3, [pc, #24]	; (3a4 <i2c_m_sync_init+0x34>)
     38a:	4798      	blx	r3
	if (init_status) {
     38c:	2800      	cmp	r0, #0
     38e:	d103      	bne.n	398 <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     390:	4b05      	ldr	r3, [pc, #20]	; (3a8 <i2c_m_sync_init+0x38>)
     392:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     394:	4b05      	ldr	r3, [pc, #20]	; (3ac <i2c_m_sync_init+0x3c>)
     396:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     398:	bd70      	pop	{r4, r5, r6, pc}
     39a:	46c0      	nop			; (mov r8, r8)
     39c:	00010f90 	.word	0x00010f90
     3a0:	00000a99 	.word	0x00000a99
     3a4:	00001405 	.word	0x00001405
     3a8:	0000033d 	.word	0x0000033d
     3ac:	00000309 	.word	0x00000309

000003b0 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     3b0:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     3b2:	4b01      	ldr	r3, [pc, #4]	; (3b8 <i2c_m_sync_enable+0x8>)
     3b4:	4798      	blx	r3
}
     3b6:	bd10      	pop	{r4, pc}
     3b8:	000014b1 	.word	0x000014b1

000003bc <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
     3bc:	0589      	lsls	r1, r1, #22
     3be:	0d89      	lsrs	r1, r1, #22
     3c0:	2380      	movs	r3, #128	; 0x80
     3c2:	00db      	lsls	r3, r3, #3
     3c4:	401a      	ands	r2, r3
     3c6:	430a      	orrs	r2, r1
     3c8:	8382      	strh	r2, [r0, #28]
}
     3ca:	0010      	movs	r0, r2
     3cc:	4770      	bx	lr
	...

000003d0 <i2c_m_sync_cmd_read>:

/**
 * \brief Sync version of i2c read command
 */
int32_t i2c_m_sync_cmd_read(struct i2c_m_sync_desc *i2c, uint8_t reg, uint8_t *buffer, uint8_t length)
{
     3d0:	b570      	push	{r4, r5, r6, lr}
     3d2:	b086      	sub	sp, #24
     3d4:	0004      	movs	r4, r0
     3d6:	0016      	movs	r6, r2
     3d8:	001d      	movs	r5, r3
     3da:	466b      	mov	r3, sp
     3dc:	71d9      	strb	r1, [r3, #7]
     3de:	3307      	adds	r3, #7
	struct _i2c_m_msg msg;
	int32_t           ret;

	msg.addr   = i2c->slave_addr;
     3e0:	8b82      	ldrh	r2, [r0, #28]
     3e2:	a903      	add	r1, sp, #12
     3e4:	800a      	strh	r2, [r1, #0]
	msg.len    = 1;
     3e6:	2201      	movs	r2, #1
     3e8:	604a      	str	r2, [r1, #4]
	msg.flags  = 0;
     3ea:	2200      	movs	r2, #0
     3ec:	804a      	strh	r2, [r1, #2]
	msg.buffer = &reg;
     3ee:	608b      	str	r3, [r1, #8]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     3f0:	4b07      	ldr	r3, [pc, #28]	; (410 <i2c_m_sync_cmd_read+0x40>)
     3f2:	4798      	blx	r3

	if (ret != 0) {
     3f4:	2800      	cmp	r0, #0
     3f6:	d001      	beq.n	3fc <i2c_m_sync_cmd_read+0x2c>
		/* error occurred */
		return ret;
	}

	return ERR_NONE;
}
     3f8:	b006      	add	sp, #24
     3fa:	bd70      	pop	{r4, r5, r6, pc}
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     3fc:	a903      	add	r1, sp, #12
     3fe:	4b05      	ldr	r3, [pc, #20]	; (414 <i2c_m_sync_cmd_read+0x44>)
     400:	804b      	strh	r3, [r1, #2]
	msg.buffer = buffer;
     402:	608e      	str	r6, [r1, #8]
	msg.len    = length;
     404:	604d      	str	r5, [r1, #4]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     406:	0020      	movs	r0, r4
     408:	4b01      	ldr	r3, [pc, #4]	; (410 <i2c_m_sync_cmd_read+0x40>)
     40a:	4798      	blx	r3
     40c:	e7f4      	b.n	3f8 <i2c_m_sync_cmd_read+0x28>
     40e:	46c0      	nop			; (mov r8, r8)
     410:	00001529 	.word	0x00001529
     414:	ffff8001 	.word	0xffff8001

00000418 <i2c_m_sync_get_io_descriptor>:
/**
 * \brief Retrieve I/O descriptor
 */
int32_t i2c_m_sync_get_io_descriptor(struct i2c_m_sync_desc *const i2c, struct io_descriptor **io)
{
	*io = &i2c->io;
     418:	3014      	adds	r0, #20
     41a:	6008      	str	r0, [r1, #0]
	return ERR_NONE;
}
     41c:	2000      	movs	r0, #0
     41e:	4770      	bx	lr

00000420 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     420:	b510      	push	{r4, lr}
	//ASSERT(io_descr && buf);
	return io_descr->write(io_descr, buf, length);
     422:	6803      	ldr	r3, [r0, #0]
     424:	4798      	blx	r3
}
     426:	bd10      	pop	{r4, pc}

00000428 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     428:	b570      	push	{r4, r5, r6, lr}
     42a:	0004      	movs	r4, r0
     42c:	000d      	movs	r5, r1
     42e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     430:	2800      	cmp	r0, #0
     432:	d00e      	beq.n	452 <io_read+0x2a>
     434:	2900      	cmp	r1, #0
     436:	d00a      	beq.n	44e <io_read+0x26>
     438:	2001      	movs	r0, #1
     43a:	223d      	movs	r2, #61	; 0x3d
     43c:	4906      	ldr	r1, [pc, #24]	; (458 <io_read+0x30>)
     43e:	4b07      	ldr	r3, [pc, #28]	; (45c <io_read+0x34>)
     440:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     442:	6863      	ldr	r3, [r4, #4]
     444:	0032      	movs	r2, r6
     446:	0029      	movs	r1, r5
     448:	0020      	movs	r0, r4
     44a:	4798      	blx	r3
}
     44c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     44e:	2000      	movs	r0, #0
     450:	e7f3      	b.n	43a <io_read+0x12>
     452:	2000      	movs	r0, #0
     454:	e7f1      	b.n	43a <io_read+0x12>
     456:	46c0      	nop			; (mov r8, r8)
     458:	00010fac 	.word	0x00010fac
     45c:	00000a99 	.word	0x00000a99

00000460 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
     460:	b570      	push	{r4, r5, r6, lr}
     462:	0004      	movs	r4, r0
     464:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
     466:	2800      	cmp	r0, #0
     468:	d017      	beq.n	49a <spi_m_sync_init+0x3a>
     46a:	2900      	cmp	r1, #0
     46c:	d013      	beq.n	496 <spi_m_sync_init+0x36>
     46e:	2001      	movs	r0, #1
     470:	2240      	movs	r2, #64	; 0x40
     472:	490b      	ldr	r1, [pc, #44]	; (4a0 <spi_m_sync_init+0x40>)
     474:	4b0b      	ldr	r3, [pc, #44]	; (4a4 <spi_m_sync_init+0x44>)
     476:	4798      	blx	r3
	spi->dev.prvt = (void *)hw;
     478:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
     47a:	1d20      	adds	r0, r4, #4
     47c:	0029      	movs	r1, r5
     47e:	4b0a      	ldr	r3, [pc, #40]	; (4a8 <spi_m_sync_init+0x48>)
     480:	4798      	blx	r3

	if (rc < 0) {
     482:	2800      	cmp	r0, #0
     484:	db06      	blt.n	494 <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
     486:	4b09      	ldr	r3, [pc, #36]	; (4ac <spi_m_sync_init+0x4c>)
     488:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
     48a:	4b09      	ldr	r3, [pc, #36]	; (4b0 <spi_m_sync_init+0x50>)
     48c:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
     48e:	4b09      	ldr	r3, [pc, #36]	; (4b4 <spi_m_sync_init+0x54>)
     490:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
     492:	2000      	movs	r0, #0
}
     494:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
     496:	2000      	movs	r0, #0
     498:	e7ea      	b.n	470 <spi_m_sync_init+0x10>
     49a:	2000      	movs	r0, #0
     49c:	e7e8      	b.n	470 <spi_m_sync_init+0x10>
     49e:	46c0      	nop			; (mov r8, r8)
     4a0:	00010fc0 	.word	0x00010fc0
     4a4:	00000a99 	.word	0x00000a99
     4a8:	00001745 	.word	0x00001745
     4ac:	ffff8000 	.word	0xffff8000
     4b0:	00000565 	.word	0x00000565
     4b4:	00000529 	.word	0x00000529

000004b8 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
     4b8:	b510      	push	{r4, lr}
     4ba:	0004      	movs	r4, r0
	ASSERT(spi);
     4bc:	1e43      	subs	r3, r0, #1
     4be:	4198      	sbcs	r0, r3
     4c0:	b2c0      	uxtb	r0, r0
     4c2:	2257      	movs	r2, #87	; 0x57
     4c4:	4903      	ldr	r1, [pc, #12]	; (4d4 <spi_m_sync_enable+0x1c>)
     4c6:	4b04      	ldr	r3, [pc, #16]	; (4d8 <spi_m_sync_enable+0x20>)
     4c8:	4798      	blx	r3
	_spi_m_sync_enable(&spi->dev);
     4ca:	1d20      	adds	r0, r4, #4
     4cc:	4b03      	ldr	r3, [pc, #12]	; (4dc <spi_m_sync_enable+0x24>)
     4ce:	4798      	blx	r3
}
     4d0:	bd10      	pop	{r4, pc}
     4d2:	46c0      	nop			; (mov r8, r8)
     4d4:	00010fc0 	.word	0x00010fc0
     4d8:	00000a99 	.word	0x00000a99
     4dc:	00001901 	.word	0x00001901

000004e0 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
     4e0:	b530      	push	{r4, r5, lr}
     4e2:	b087      	sub	sp, #28
     4e4:	0004      	movs	r4, r0
     4e6:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
     4e8:	2800      	cmp	r0, #0
     4ea:	d015      	beq.n	518 <spi_m_sync_transfer+0x38>
     4ec:	2900      	cmp	r1, #0
     4ee:	d011      	beq.n	514 <spi_m_sync_transfer+0x34>
     4f0:	2001      	movs	r0, #1
     4f2:	22b3      	movs	r2, #179	; 0xb3
     4f4:	4909      	ldr	r1, [pc, #36]	; (51c <spi_m_sync_transfer+0x3c>)
     4f6:	4b0a      	ldr	r3, [pc, #40]	; (520 <spi_m_sync_transfer+0x40>)
     4f8:	4798      	blx	r3

	msg.txbuf = p_xfer->txbuf;
     4fa:	682b      	ldr	r3, [r5, #0]
     4fc:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
     4fe:	686b      	ldr	r3, [r5, #4]
     500:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
     502:	68ab      	ldr	r3, [r5, #8]
     504:	9301      	str	r3, [sp, #4]
     506:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
     508:	1d20      	adds	r0, r4, #4
     50a:	a903      	add	r1, sp, #12
     50c:	4b05      	ldr	r3, [pc, #20]	; (524 <spi_m_sync_transfer+0x44>)
     50e:	4798      	blx	r3
}
     510:	b007      	add	sp, #28
     512:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
     514:	2000      	movs	r0, #0
     516:	e7ec      	b.n	4f2 <spi_m_sync_transfer+0x12>
     518:	2000      	movs	r0, #0
     51a:	e7ea      	b.n	4f2 <spi_m_sync_transfer+0x12>
     51c:	00010fc0 	.word	0x00010fc0
     520:	00000a99 	.word	0x00000a99
     524:	00001939 	.word	0x00001939

00000528 <_spi_m_sync_io_write>:
{
     528:	b570      	push	{r4, r5, r6, lr}
     52a:	b084      	sub	sp, #16
     52c:	0004      	movs	r4, r0
     52e:	000e      	movs	r6, r1
     530:	0015      	movs	r5, r2
	ASSERT(io);
     532:	1e43      	subs	r3, r0, #1
     534:	4198      	sbcs	r0, r3
     536:	b2c0      	uxtb	r0, r0
     538:	22a3      	movs	r2, #163	; 0xa3
     53a:	4907      	ldr	r1, [pc, #28]	; (558 <_spi_m_sync_io_write+0x30>)
     53c:	4b07      	ldr	r3, [pc, #28]	; (55c <_spi_m_sync_io_write+0x34>)
     53e:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     540:	0020      	movs	r0, r4
     542:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
     544:	2300      	movs	r3, #0
     546:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
     548:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
     54a:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     54c:	a901      	add	r1, sp, #4
     54e:	4b04      	ldr	r3, [pc, #16]	; (560 <_spi_m_sync_io_write+0x38>)
     550:	4798      	blx	r3
}
     552:	b004      	add	sp, #16
     554:	bd70      	pop	{r4, r5, r6, pc}
     556:	46c0      	nop			; (mov r8, r8)
     558:	00010fc0 	.word	0x00010fc0
     55c:	00000a99 	.word	0x00000a99
     560:	000004e1 	.word	0x000004e1

00000564 <_spi_m_sync_io_read>:
{
     564:	b570      	push	{r4, r5, r6, lr}
     566:	b084      	sub	sp, #16
     568:	0004      	movs	r4, r0
     56a:	000e      	movs	r6, r1
     56c:	0015      	movs	r5, r2
	ASSERT(io);
     56e:	1e43      	subs	r3, r0, #1
     570:	4198      	sbcs	r0, r3
     572:	b2c0      	uxtb	r0, r0
     574:	2287      	movs	r2, #135	; 0x87
     576:	4907      	ldr	r1, [pc, #28]	; (594 <_spi_m_sync_io_read+0x30>)
     578:	4b07      	ldr	r3, [pc, #28]	; (598 <_spi_m_sync_io_read+0x34>)
     57a:	4798      	blx	r3
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     57c:	0020      	movs	r0, r4
     57e:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
     580:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
     582:	2300      	movs	r3, #0
     584:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
     586:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     588:	a901      	add	r1, sp, #4
     58a:	4b04      	ldr	r3, [pc, #16]	; (59c <_spi_m_sync_io_read+0x38>)
     58c:	4798      	blx	r3
}
     58e:	b004      	add	sp, #16
     590:	bd70      	pop	{r4, r5, r6, pc}
     592:	46c0      	nop			; (mov r8, r8)
     594:	00010fc0 	.word	0x00010fc0
     598:	00000a99 	.word	0x00000a99
     59c:	000004e1 	.word	0x000004e1

000005a0 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
     5a0:	b570      	push	{r4, r5, r6, lr}
     5a2:	0004      	movs	r4, r0
     5a4:	000d      	movs	r5, r1
	ASSERT(spi && io);
     5a6:	2800      	cmp	r0, #0
     5a8:	d00c      	beq.n	5c4 <spi_m_sync_get_io_descriptor+0x24>
     5aa:	2900      	cmp	r1, #0
     5ac:	d008      	beq.n	5c0 <spi_m_sync_get_io_descriptor+0x20>
     5ae:	2001      	movs	r0, #1
     5b0:	22bd      	movs	r2, #189	; 0xbd
     5b2:	4905      	ldr	r1, [pc, #20]	; (5c8 <spi_m_sync_get_io_descriptor+0x28>)
     5b4:	4b05      	ldr	r3, [pc, #20]	; (5cc <spi_m_sync_get_io_descriptor+0x2c>)
     5b6:	4798      	blx	r3
	*io = &spi->io;
     5b8:	340c      	adds	r4, #12
     5ba:	602c      	str	r4, [r5, #0]
	return 0;
}
     5bc:	2000      	movs	r0, #0
     5be:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
     5c0:	2000      	movs	r0, #0
     5c2:	e7f5      	b.n	5b0 <spi_m_sync_get_io_descriptor+0x10>
     5c4:	2000      	movs	r0, #0
     5c6:	e7f3      	b.n	5b0 <spi_m_sync_get_io_descriptor+0x10>
     5c8:	00010fc0 	.word	0x00010fc0
     5cc:	00000a99 	.word	0x00000a99

000005d0 <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     5d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     5d2:	6806      	ldr	r6, [r0, #0]
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     5d4:	2e00      	cmp	r6, #0
     5d6:	d002      	beq.n	5de <timer_add_timer_task+0xe>
     5d8:	0033      	movs	r3, r6
     5da:	2500      	movs	r5, #0
     5dc:	e00c      	b.n	5f8 <timer_add_timer_task+0x28>
		list_insert_as_head(list, new_task);
     5de:	4b10      	ldr	r3, [pc, #64]	; (620 <timer_add_timer_task+0x50>)
     5e0:	4798      	blx	r3
		return;
     5e2:	e018      	b.n	616 <timer_add_timer_task+0x46>
		uint32_t time_left;

		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     5e4:	689f      	ldr	r7, [r3, #8]
     5e6:	46bc      	mov	ip, r7
     5e8:	4464      	add	r4, ip
     5ea:	1aa4      	subs	r4, r4, r2
     5ec:	3401      	adds	r4, #1
		}
		if (time_left >= new_task->interval)
     5ee:	688f      	ldr	r7, [r1, #8]
     5f0:	42bc      	cmp	r4, r7
     5f2:	d20b      	bcs.n	60c <timer_add_timer_task+0x3c>
			break;
		prev = it;
     5f4:	001d      	movs	r5, r3
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     5f6:	681b      	ldr	r3, [r3, #0]
     5f8:	2b00      	cmp	r3, #0
     5fa:	d007      	beq.n	60c <timer_add_timer_task+0x3c>
		if (it->time_label <= time) {
     5fc:	685c      	ldr	r4, [r3, #4]
     5fe:	4294      	cmp	r4, r2
     600:	d8f0      	bhi.n	5e4 <timer_add_timer_task+0x14>
			time_left = it->interval - (time - it->time_label);
     602:	1aa4      	subs	r4, r4, r2
     604:	689f      	ldr	r7, [r3, #8]
     606:	46bc      	mov	ip, r7
     608:	4464      	add	r4, ip
     60a:	e7f0      	b.n	5ee <timer_add_timer_task+0x1e>
	}

	if (it == head) {
     60c:	42b3      	cmp	r3, r6
     60e:	d003      	beq.n	618 <timer_add_timer_task+0x48>
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     610:	0028      	movs	r0, r5
     612:	4b04      	ldr	r3, [pc, #16]	; (624 <timer_add_timer_task+0x54>)
     614:	4798      	blx	r3
	}
}
     616:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     618:	4b01      	ldr	r3, [pc, #4]	; (620 <timer_add_timer_task+0x50>)
     61a:	4798      	blx	r3
     61c:	e7fb      	b.n	616 <timer_add_timer_task+0x46>
     61e:	46c0      	nop			; (mov r8, r8)
     620:	00000ab9 	.word	0x00000ab9
     624:	00000ae5 	.word	0x00000ae5

00000628 <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     62a:	0005      	movs	r5, r0
     62c:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     62e:	6903      	ldr	r3, [r0, #16]
     630:	1c5e      	adds	r6, r3, #1
     632:	6106      	str	r6, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     634:	7e03      	ldrb	r3, [r0, #24]
     636:	07db      	lsls	r3, r3, #31
     638:	d402      	bmi.n	640 <timer_process_counted+0x18>
     63a:	7e03      	ldrb	r3, [r0, #24]
     63c:	079b      	lsls	r3, r3, #30
     63e:	d50a      	bpl.n	656 <timer_process_counted+0x2e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     640:	7e2b      	ldrb	r3, [r5, #24]
     642:	2202      	movs	r2, #2
     644:	4313      	orrs	r3, r2
     646:	b2db      	uxtb	r3, r3
     648:	762b      	strb	r3, [r5, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     64a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     64c:	696f      	ldr	r7, [r5, #20]
		tmp->cb(tmp);
     64e:	68e3      	ldr	r3, [r4, #12]
     650:	0020      	movs	r0, r4
     652:	4798      	blx	r3
		it = (struct timer_task *)list_get_head(&timer->tasks);
     654:	003c      	movs	r4, r7
	while (it && ((time - it->time_label) >= it->interval)) {
     656:	2c00      	cmp	r4, #0
     658:	d0f7      	beq.n	64a <timer_process_counted+0x22>
     65a:	6863      	ldr	r3, [r4, #4]
     65c:	1af3      	subs	r3, r6, r3
     65e:	68a2      	ldr	r2, [r4, #8]
     660:	4293      	cmp	r3, r2
     662:	d3f2      	bcc.n	64a <timer_process_counted+0x22>
		list_remove_head(&timer->tasks);
     664:	002f      	movs	r7, r5
     666:	3714      	adds	r7, #20
     668:	0038      	movs	r0, r7
     66a:	4b06      	ldr	r3, [pc, #24]	; (684 <timer_process_counted+0x5c>)
     66c:	4798      	blx	r3
		if (TIMER_TASK_REPEAT == tmp->mode) {
     66e:	7c23      	ldrb	r3, [r4, #16]
     670:	2b01      	cmp	r3, #1
     672:	d1eb      	bne.n	64c <timer_process_counted+0x24>
			tmp->time_label = time;
     674:	6066      	str	r6, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     676:	0032      	movs	r2, r6
     678:	0021      	movs	r1, r4
     67a:	0038      	movs	r0, r7
     67c:	4b02      	ldr	r3, [pc, #8]	; (688 <timer_process_counted+0x60>)
     67e:	4798      	blx	r3
     680:	e7e4      	b.n	64c <timer_process_counted+0x24>
     682:	46c0      	nop			; (mov r8, r8)
     684:	00000aed 	.word	0x00000aed
     688:	000005d1 	.word	0x000005d1

0000068c <timer_init>:
{
     68c:	b570      	push	{r4, r5, r6, lr}
     68e:	0004      	movs	r4, r0
     690:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     692:	2800      	cmp	r0, #0
     694:	d012      	beq.n	6bc <timer_init+0x30>
     696:	2900      	cmp	r1, #0
     698:	d00e      	beq.n	6b8 <timer_init+0x2c>
     69a:	2001      	movs	r0, #1
     69c:	223b      	movs	r2, #59	; 0x3b
     69e:	4908      	ldr	r1, [pc, #32]	; (6c0 <timer_init+0x34>)
     6a0:	4b08      	ldr	r3, [pc, #32]	; (6c4 <timer_init+0x38>)
     6a2:	4798      	blx	r3
	_timer_init(&descr->device, hw);
     6a4:	0029      	movs	r1, r5
     6a6:	0020      	movs	r0, r4
     6a8:	4b07      	ldr	r3, [pc, #28]	; (6c8 <timer_init+0x3c>)
     6aa:	4798      	blx	r3
	descr->time                           = 0;
     6ac:	2300      	movs	r3, #0
     6ae:	6123      	str	r3, [r4, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     6b0:	4b06      	ldr	r3, [pc, #24]	; (6cc <timer_init+0x40>)
     6b2:	6023      	str	r3, [r4, #0]
}
     6b4:	2000      	movs	r0, #0
     6b6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     6b8:	2000      	movs	r0, #0
     6ba:	e7ef      	b.n	69c <timer_init+0x10>
     6bc:	2000      	movs	r0, #0
     6be:	e7ed      	b.n	69c <timer_init+0x10>
     6c0:	00010fdc 	.word	0x00010fdc
     6c4:	00000a99 	.word	0x00000a99
     6c8:	00000ec1 	.word	0x00000ec1
     6cc:	00000629 	.word	0x00000629

000006d0 <timer_start>:
{
     6d0:	b510      	push	{r4, lr}
     6d2:	0004      	movs	r4, r0
	ASSERT(descr);
     6d4:	1e43      	subs	r3, r0, #1
     6d6:	4198      	sbcs	r0, r3
     6d8:	b2c0      	uxtb	r0, r0
     6da:	2253      	movs	r2, #83	; 0x53
     6dc:	4907      	ldr	r1, [pc, #28]	; (6fc <timer_start+0x2c>)
     6de:	4b08      	ldr	r3, [pc, #32]	; (700 <timer_start+0x30>)
     6e0:	4798      	blx	r3
	if (_timer_is_started(&descr->device)) {
     6e2:	0020      	movs	r0, r4
     6e4:	4b07      	ldr	r3, [pc, #28]	; (704 <timer_start+0x34>)
     6e6:	4798      	blx	r3
     6e8:	2800      	cmp	r0, #0
     6ea:	d104      	bne.n	6f6 <timer_start+0x26>
	_timer_start(&descr->device);
     6ec:	0020      	movs	r0, r4
     6ee:	4b06      	ldr	r3, [pc, #24]	; (708 <timer_start+0x38>)
     6f0:	4798      	blx	r3
	return ERR_NONE;
     6f2:	2000      	movs	r0, #0
}
     6f4:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     6f6:	2011      	movs	r0, #17
     6f8:	4240      	negs	r0, r0
     6fa:	e7fb      	b.n	6f4 <timer_start+0x24>
     6fc:	00010fdc 	.word	0x00010fdc
     700:	00000a99 	.word	0x00000a99
     704:	00000f75 	.word	0x00000f75
     708:	00000f1d 	.word	0x00000f1d

0000070c <timer_add_task>:
{
     70c:	b570      	push	{r4, r5, r6, lr}
     70e:	b082      	sub	sp, #8
     710:	0004      	movs	r4, r0
     712:	000d      	movs	r5, r1
	ASSERT(descr && task);
     714:	2800      	cmp	r0, #0
     716:	d026      	beq.n	766 <timer_add_task+0x5a>
     718:	2900      	cmp	r1, #0
     71a:	d022      	beq.n	762 <timer_add_task+0x56>
     71c:	2001      	movs	r0, #1
     71e:	227a      	movs	r2, #122	; 0x7a
     720:	491f      	ldr	r1, [pc, #124]	; (7a0 <timer_add_task+0x94>)
     722:	4b20      	ldr	r3, [pc, #128]	; (7a4 <timer_add_task+0x98>)
     724:	4798      	blx	r3
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     726:	7e23      	ldrb	r3, [r4, #24]
     728:	2201      	movs	r2, #1
     72a:	4313      	orrs	r3, r2
     72c:	b2db      	uxtb	r3, r3
     72e:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     730:	0026      	movs	r6, r4
     732:	3614      	adds	r6, #20
     734:	0029      	movs	r1, r5
     736:	0030      	movs	r0, r6
     738:	4b1b      	ldr	r3, [pc, #108]	; (7a8 <timer_add_task+0x9c>)
     73a:	4798      	blx	r3
     73c:	2800      	cmp	r0, #0
     73e:	d114      	bne.n	76a <timer_add_task+0x5e>
	task->time_label = descr->time;
     740:	6923      	ldr	r3, [r4, #16]
     742:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     744:	6922      	ldr	r2, [r4, #16]
     746:	0029      	movs	r1, r5
     748:	0030      	movs	r0, r6
     74a:	4b18      	ldr	r3, [pc, #96]	; (7ac <timer_add_task+0xa0>)
     74c:	4798      	blx	r3
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     74e:	7e23      	ldrb	r3, [r4, #24]
     750:	2201      	movs	r2, #1
     752:	4393      	bics	r3, r2
     754:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     756:	7e23      	ldrb	r3, [r4, #24]
     758:	079b      	lsls	r3, r3, #30
     75a:	d412      	bmi.n	782 <timer_add_task+0x76>
	return ERR_NONE;
     75c:	2000      	movs	r0, #0
}
     75e:	b002      	add	sp, #8
     760:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && task);
     762:	2000      	movs	r0, #0
     764:	e7db      	b.n	71e <timer_add_task+0x12>
     766:	2000      	movs	r0, #0
     768:	e7d9      	b.n	71e <timer_add_task+0x12>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     76a:	7e23      	ldrb	r3, [r4, #24]
     76c:	2201      	movs	r2, #1
     76e:	4393      	bics	r3, r2
     770:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     772:	327e      	adds	r2, #126	; 0x7e
     774:	490a      	ldr	r1, [pc, #40]	; (7a0 <timer_add_task+0x94>)
     776:	2000      	movs	r0, #0
     778:	4b0a      	ldr	r3, [pc, #40]	; (7a4 <timer_add_task+0x98>)
     77a:	4798      	blx	r3
		return ERR_ALREADY_INITIALIZED;
     77c:	2012      	movs	r0, #18
     77e:	4240      	negs	r0, r0
     780:	e7ed      	b.n	75e <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     782:	a801      	add	r0, sp, #4
     784:	4b0a      	ldr	r3, [pc, #40]	; (7b0 <timer_add_task+0xa4>)
     786:	4798      	blx	r3
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     788:	7e23      	ldrb	r3, [r4, #24]
     78a:	2202      	movs	r2, #2
     78c:	4393      	bics	r3, r2
     78e:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     790:	0020      	movs	r0, r4
     792:	4b08      	ldr	r3, [pc, #32]	; (7b4 <timer_add_task+0xa8>)
     794:	4798      	blx	r3
		CRITICAL_SECTION_LEAVE()
     796:	a801      	add	r0, sp, #4
     798:	4b07      	ldr	r3, [pc, #28]	; (7b8 <timer_add_task+0xac>)
     79a:	4798      	blx	r3
	return ERR_NONE;
     79c:	2000      	movs	r0, #0
     79e:	e7de      	b.n	75e <timer_add_task+0x52>
     7a0:	00010fdc 	.word	0x00010fdc
     7a4:	00000a99 	.word	0x00000a99
     7a8:	00000aa1 	.word	0x00000aa1
     7ac:	000005d1 	.word	0x000005d1
     7b0:	0000017d 	.word	0x0000017d
     7b4:	00000f87 	.word	0x00000f87
     7b8:	0000018b 	.word	0x0000018b

000007bc <usart_transmission_complete>:
 * \brief Process completion of data sending
 *
 * \param[in] device The pointer to device structure
 */
static void usart_transmission_complete(struct _usart_async_device *device)
{
     7bc:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     7be:	3808      	subs	r0, #8

	descr->stat = 0;
     7c0:	2300      	movs	r3, #0
     7c2:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.tx_done) {
     7c4:	6a43      	ldr	r3, [r0, #36]	; 0x24
     7c6:	2b00      	cmp	r3, #0
     7c8:	d000      	beq.n	7cc <usart_transmission_complete+0x10>
		descr->usart_cb.tx_done(descr);
     7ca:	4798      	blx	r3
	}
}
     7cc:	bd10      	pop	{r4, pc}

000007ce <usart_error>:
 * \brief Process error interrupt
 *
 * \param[in] device The pointer to device structure
 */
static void usart_error(struct _usart_async_device *device)
{
     7ce:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     7d0:	3808      	subs	r0, #8

	descr->stat = 0;
     7d2:	2300      	movs	r3, #0
     7d4:	6303      	str	r3, [r0, #48]	; 0x30
	if (descr->usart_cb.error) {
     7d6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     7d8:	2b00      	cmp	r3, #0
     7da:	d000      	beq.n	7de <usart_error+0x10>
		descr->usart_cb.error(descr);
     7dc:	4798      	blx	r3
	}
}
     7de:	bd10      	pop	{r4, pc}

000007e0 <usart_fill_rx_buffer>:
{
     7e0:	b510      	push	{r4, lr}
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     7e2:	0004      	movs	r4, r0
	ringbuffer_put(&descr->rx, data);
     7e4:	302c      	adds	r0, #44	; 0x2c
     7e6:	4b04      	ldr	r3, [pc, #16]	; (7f8 <usart_fill_rx_buffer+0x18>)
     7e8:	4798      	blx	r3
	if (descr->usart_cb.rx_done) {
     7ea:	6a23      	ldr	r3, [r4, #32]
	struct usart_async_descriptor *descr = CONTAINER_OF(device, struct usart_async_descriptor, device);
     7ec:	3c08      	subs	r4, #8
	if (descr->usart_cb.rx_done) {
     7ee:	2b00      	cmp	r3, #0
     7f0:	d001      	beq.n	7f6 <usart_fill_rx_buffer+0x16>
		descr->usart_cb.rx_done(descr);
     7f2:	0020      	movs	r0, r4
     7f4:	4798      	blx	r3
}
     7f6:	bd10      	pop	{r4, pc}
     7f8:	00000b99 	.word	0x00000b99

000007fc <usart_async_write>:
{
     7fc:	b570      	push	{r4, r5, r6, lr}
     7fe:	0004      	movs	r4, r0
     800:	000e      	movs	r6, r1
     802:	0015      	movs	r5, r2
	ASSERT(descr && buf && length);
     804:	2800      	cmp	r0, #0
     806:	d01d      	beq.n	844 <usart_async_write+0x48>
     808:	2900      	cmp	r1, #0
     80a:	d01d      	beq.n	848 <usart_async_write+0x4c>
     80c:	2a00      	cmp	r2, #0
     80e:	d11d      	bne.n	84c <usart_async_write+0x50>
     810:	2000      	movs	r0, #0
     812:	223c      	movs	r2, #60	; 0x3c
     814:	32ff      	adds	r2, #255	; 0xff
     816:	4910      	ldr	r1, [pc, #64]	; (858 <usart_async_write+0x5c>)
     818:	4b10      	ldr	r3, [pc, #64]	; (85c <usart_async_write+0x60>)
     81a:	4798      	blx	r3
	if (descr->tx_por != descr->tx_buffer_length) {
     81c:	2344      	movs	r3, #68	; 0x44
     81e:	5ae2      	ldrh	r2, [r4, r3]
     820:	3308      	adds	r3, #8
     822:	5ae3      	ldrh	r3, [r4, r3]
     824:	429a      	cmp	r2, r3
     826:	d113      	bne.n	850 <usart_async_write+0x54>
	descr->tx_buffer        = (uint8_t *)buf;
     828:	64a6      	str	r6, [r4, #72]	; 0x48
	descr->tx_buffer_length = length;
     82a:	234c      	movs	r3, #76	; 0x4c
     82c:	52e5      	strh	r5, [r4, r3]
	descr->tx_por           = 0;
     82e:	2200      	movs	r2, #0
     830:	3b08      	subs	r3, #8
     832:	52e2      	strh	r2, [r4, r3]
	descr->stat             = USART_ASYNC_STATUS_BUSY;
     834:	3b43      	subs	r3, #67	; 0x43
     836:	6323      	str	r3, [r4, #48]	; 0x30
	_usart_async_enable_byte_sent_irq(&descr->device);
     838:	0020      	movs	r0, r4
     83a:	3008      	adds	r0, #8
     83c:	4b08      	ldr	r3, [pc, #32]	; (860 <usart_async_write+0x64>)
     83e:	4798      	blx	r3
	return (int32_t)length;
     840:	0028      	movs	r0, r5
}
     842:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && buf && length);
     844:	2000      	movs	r0, #0
     846:	e7e4      	b.n	812 <usart_async_write+0x16>
     848:	2000      	movs	r0, #0
     84a:	e7e2      	b.n	812 <usart_async_write+0x16>
     84c:	2001      	movs	r0, #1
     84e:	e7e0      	b.n	812 <usart_async_write+0x16>
		return ERR_NO_RESOURCE;
     850:	201c      	movs	r0, #28
     852:	4240      	negs	r0, r0
     854:	e7f5      	b.n	842 <usart_async_write+0x46>
     856:	46c0      	nop			; (mov r8, r8)
     858:	00010ff4 	.word	0x00010ff4
     85c:	00000a99 	.word	0x00000a99
     860:	0000137f 	.word	0x0000137f

00000864 <usart_process_byte_sent>:
{
     864:	b570      	push	{r4, r5, r6, lr}
     866:	0004      	movs	r4, r0
	if (descr->tx_por != descr->tx_buffer_length) {
     868:	0002      	movs	r2, r0
     86a:	3a08      	subs	r2, #8
     86c:	2344      	movs	r3, #68	; 0x44
     86e:	5ad3      	ldrh	r3, [r2, r3]
     870:	214c      	movs	r1, #76	; 0x4c
     872:	5a52      	ldrh	r2, [r2, r1]
     874:	4293      	cmp	r3, r2
     876:	d00d      	beq.n	894 <usart_process_byte_sent+0x30>
		_usart_async_write_byte(&descr->device, descr->tx_buffer[descr->tx_por++]);
     878:	0002      	movs	r2, r0
     87a:	6c01      	ldr	r1, [r0, #64]	; 0x40
     87c:	3a08      	subs	r2, #8
     87e:	1c5d      	adds	r5, r3, #1
     880:	2044      	movs	r0, #68	; 0x44
     882:	5215      	strh	r5, [r2, r0]
     884:	5cc9      	ldrb	r1, [r1, r3]
     886:	0020      	movs	r0, r4
     888:	4b04      	ldr	r3, [pc, #16]	; (89c <usart_process_byte_sent+0x38>)
     88a:	4798      	blx	r3
		_usart_async_enable_byte_sent_irq(&descr->device);
     88c:	0020      	movs	r0, r4
     88e:	4b04      	ldr	r3, [pc, #16]	; (8a0 <usart_process_byte_sent+0x3c>)
     890:	4798      	blx	r3
}
     892:	bd70      	pop	{r4, r5, r6, pc}
		_usart_async_enable_tx_done_irq(&descr->device);
     894:	4b03      	ldr	r3, [pc, #12]	; (8a4 <usart_process_byte_sent+0x40>)
     896:	4798      	blx	r3
}
     898:	e7fb      	b.n	892 <usart_process_byte_sent+0x2e>
     89a:	46c0      	nop			; (mov r8, r8)
     89c:	00001377 	.word	0x00001377
     8a0:	0000137f 	.word	0x0000137f
     8a4:	00001387 	.word	0x00001387

000008a8 <usart_async_read>:
{
     8a8:	b5f0      	push	{r4, r5, r6, r7, lr}
     8aa:	b085      	sub	sp, #20
     8ac:	0004      	movs	r4, r0
     8ae:	000d      	movs	r5, r1
     8b0:	0016      	movs	r6, r2
	ASSERT(descr && buf && length);
     8b2:	2800      	cmp	r0, #0
     8b4:	d017      	beq.n	8e6 <usart_async_read+0x3e>
     8b6:	2900      	cmp	r1, #0
     8b8:	d017      	beq.n	8ea <usart_async_read+0x42>
     8ba:	2a00      	cmp	r2, #0
     8bc:	d117      	bne.n	8ee <usart_async_read+0x46>
     8be:	2000      	movs	r0, #0
     8c0:	22ac      	movs	r2, #172	; 0xac
     8c2:	0052      	lsls	r2, r2, #1
     8c4:	4912      	ldr	r1, [pc, #72]	; (910 <usart_async_read+0x68>)
     8c6:	4b13      	ldr	r3, [pc, #76]	; (914 <usart_async_read+0x6c>)
     8c8:	4798      	blx	r3
	CRITICAL_SECTION_ENTER()
     8ca:	a803      	add	r0, sp, #12
     8cc:	4b12      	ldr	r3, [pc, #72]	; (918 <usart_async_read+0x70>)
     8ce:	4798      	blx	r3
	num = ringbuffer_num(&descr->rx);
     8d0:	3434      	adds	r4, #52	; 0x34
     8d2:	0020      	movs	r0, r4
     8d4:	9401      	str	r4, [sp, #4]
     8d6:	4b11      	ldr	r3, [pc, #68]	; (91c <usart_async_read+0x74>)
     8d8:	4798      	blx	r3
     8da:	0007      	movs	r7, r0
	CRITICAL_SECTION_LEAVE()
     8dc:	a803      	add	r0, sp, #12
     8de:	4b10      	ldr	r3, [pc, #64]	; (920 <usart_async_read+0x78>)
     8e0:	4798      	blx	r3
	uint16_t                       was_read = 0;
     8e2:	2400      	movs	r4, #0
	while ((was_read < num) && (was_read < length)) {
     8e4:	e00b      	b.n	8fe <usart_async_read+0x56>
	ASSERT(descr && buf && length);
     8e6:	2000      	movs	r0, #0
     8e8:	e7ea      	b.n	8c0 <usart_async_read+0x18>
     8ea:	2000      	movs	r0, #0
     8ec:	e7e8      	b.n	8c0 <usart_async_read+0x18>
     8ee:	2001      	movs	r0, #1
     8f0:	e7e6      	b.n	8c0 <usart_async_read+0x18>
		ringbuffer_get(&descr->rx, &buf[was_read++]);
     8f2:	3401      	adds	r4, #1
     8f4:	b2a4      	uxth	r4, r4
     8f6:	1869      	adds	r1, r5, r1
     8f8:	9801      	ldr	r0, [sp, #4]
     8fa:	4b0a      	ldr	r3, [pc, #40]	; (924 <usart_async_read+0x7c>)
     8fc:	4798      	blx	r3
	while ((was_read < num) && (was_read < length)) {
     8fe:	0021      	movs	r1, r4
     900:	42a7      	cmp	r7, r4
     902:	d901      	bls.n	908 <usart_async_read+0x60>
     904:	42b4      	cmp	r4, r6
     906:	d3f4      	bcc.n	8f2 <usart_async_read+0x4a>
}
     908:	0020      	movs	r0, r4
     90a:	b005      	add	sp, #20
     90c:	bdf0      	pop	{r4, r5, r6, r7, pc}
     90e:	46c0      	nop			; (mov r8, r8)
     910:	00010ff4 	.word	0x00010ff4
     914:	00000a99 	.word	0x00000a99
     918:	0000017d 	.word	0x0000017d
     91c:	00000bd9 	.word	0x00000bd9
     920:	0000018b 	.word	0x0000018b
     924:	00000b4d 	.word	0x00000b4d

00000928 <usart_async_init>:
{
     928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     92a:	0004      	movs	r4, r0
     92c:	000d      	movs	r5, r1
     92e:	0016      	movs	r6, r2
     930:	001f      	movs	r7, r3
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     932:	2800      	cmp	r0, #0
     934:	d026      	beq.n	984 <usart_async_init+0x5c>
     936:	2900      	cmp	r1, #0
     938:	d026      	beq.n	988 <usart_async_init+0x60>
     93a:	2a00      	cmp	r2, #0
     93c:	d026      	beq.n	98c <usart_async_init+0x64>
     93e:	2b00      	cmp	r3, #0
     940:	d126      	bne.n	990 <usart_async_init+0x68>
     942:	2000      	movs	r0, #0
     944:	223a      	movs	r2, #58	; 0x3a
     946:	4915      	ldr	r1, [pc, #84]	; (99c <usart_async_init+0x74>)
     948:	4b15      	ldr	r3, [pc, #84]	; (9a0 <usart_async_init+0x78>)
     94a:	4798      	blx	r3
	if (ERR_NONE != ringbuffer_init(&descr->rx, rx_buffer, rx_buffer_length)) {
     94c:	0020      	movs	r0, r4
     94e:	3034      	adds	r0, #52	; 0x34
     950:	003a      	movs	r2, r7
     952:	0031      	movs	r1, r6
     954:	4b13      	ldr	r3, [pc, #76]	; (9a4 <usart_async_init+0x7c>)
     956:	4798      	blx	r3
     958:	2800      	cmp	r0, #0
     95a:	d11b      	bne.n	994 <usart_async_init+0x6c>
	init_status = _usart_async_init(&descr->device, hw);
     95c:	0020      	movs	r0, r4
     95e:	3008      	adds	r0, #8
     960:	0029      	movs	r1, r5
     962:	4b11      	ldr	r3, [pc, #68]	; (9a8 <usart_async_init+0x80>)
     964:	4798      	blx	r3
	if (init_status) {
     966:	2800      	cmp	r0, #0
     968:	d10b      	bne.n	982 <usart_async_init+0x5a>
	descr->io.read  = usart_async_read;
     96a:	4b10      	ldr	r3, [pc, #64]	; (9ac <usart_async_init+0x84>)
     96c:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_async_write;
     96e:	4b10      	ldr	r3, [pc, #64]	; (9b0 <usart_async_init+0x88>)
     970:	6023      	str	r3, [r4, #0]
	descr->device.usart_cb.tx_byte_sent = usart_process_byte_sent;
     972:	4b10      	ldr	r3, [pc, #64]	; (9b4 <usart_async_init+0x8c>)
     974:	60a3      	str	r3, [r4, #8]
	descr->device.usart_cb.rx_done_cb   = usart_fill_rx_buffer;
     976:	4b10      	ldr	r3, [pc, #64]	; (9b8 <usart_async_init+0x90>)
     978:	60e3      	str	r3, [r4, #12]
	descr->device.usart_cb.tx_done_cb   = usart_transmission_complete;
     97a:	4b10      	ldr	r3, [pc, #64]	; (9bc <usart_async_init+0x94>)
     97c:	6123      	str	r3, [r4, #16]
	descr->device.usart_cb.error_cb     = usart_error;
     97e:	4b10      	ldr	r3, [pc, #64]	; (9c0 <usart_async_init+0x98>)
     980:	6163      	str	r3, [r4, #20]
}
     982:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(descr && hw && rx_buffer && rx_buffer_length);
     984:	2000      	movs	r0, #0
     986:	e7dd      	b.n	944 <usart_async_init+0x1c>
     988:	2000      	movs	r0, #0
     98a:	e7db      	b.n	944 <usart_async_init+0x1c>
     98c:	2000      	movs	r0, #0
     98e:	e7d9      	b.n	944 <usart_async_init+0x1c>
     990:	2001      	movs	r0, #1
     992:	e7d7      	b.n	944 <usart_async_init+0x1c>
		return ERR_INVALID_ARG;
     994:	200d      	movs	r0, #13
     996:	4240      	negs	r0, r0
     998:	e7f3      	b.n	982 <usart_async_init+0x5a>
     99a:	46c0      	nop			; (mov r8, r8)
     99c:	00010ff4 	.word	0x00010ff4
     9a0:	00000a99 	.word	0x00000a99
     9a4:	00000b01 	.word	0x00000b01
     9a8:	000012d9 	.word	0x000012d9
     9ac:	000008a9 	.word	0x000008a9
     9b0:	000007fd 	.word	0x000007fd
     9b4:	00000865 	.word	0x00000865
     9b8:	000007e1 	.word	0x000007e1
     9bc:	000007bd 	.word	0x000007bd
     9c0:	000007cf 	.word	0x000007cf

000009c4 <usart_async_enable>:
{
     9c4:	b510      	push	{r4, lr}
     9c6:	0004      	movs	r4, r0
	ASSERT(descr);
     9c8:	1e43      	subs	r3, r0, #1
     9ca:	4198      	sbcs	r0, r3
     9cc:	b2c0      	uxtb	r0, r0
     9ce:	2261      	movs	r2, #97	; 0x61
     9d0:	4904      	ldr	r1, [pc, #16]	; (9e4 <usart_async_enable+0x20>)
     9d2:	4b05      	ldr	r3, [pc, #20]	; (9e8 <usart_async_enable+0x24>)
     9d4:	4798      	blx	r3
	_usart_async_enable(&descr->device);
     9d6:	0020      	movs	r0, r4
     9d8:	3008      	adds	r0, #8
     9da:	4b04      	ldr	r3, [pc, #16]	; (9ec <usart_async_enable+0x28>)
     9dc:	4798      	blx	r3
}
     9de:	2000      	movs	r0, #0
     9e0:	bd10      	pop	{r4, pc}
     9e2:	46c0      	nop			; (mov r8, r8)
     9e4:	00010ff4 	.word	0x00010ff4
     9e8:	00000a99 	.word	0x00000a99
     9ec:	00001365 	.word	0x00001365

000009f0 <usart_async_get_io_descriptor>:
{
     9f0:	b570      	push	{r4, r5, r6, lr}
     9f2:	0004      	movs	r4, r0
     9f4:	000d      	movs	r5, r1
	ASSERT(descr && io);
     9f6:	2800      	cmp	r0, #0
     9f8:	d00b      	beq.n	a12 <usart_async_get_io_descriptor+0x22>
     9fa:	2900      	cmp	r1, #0
     9fc:	d007      	beq.n	a0e <usart_async_get_io_descriptor+0x1e>
     9fe:	2001      	movs	r0, #1
     a00:	2277      	movs	r2, #119	; 0x77
     a02:	4905      	ldr	r1, [pc, #20]	; (a18 <usart_async_get_io_descriptor+0x28>)
     a04:	4b05      	ldr	r3, [pc, #20]	; (a1c <usart_async_get_io_descriptor+0x2c>)
     a06:	4798      	blx	r3
	*io = &descr->io;
     a08:	602c      	str	r4, [r5, #0]
}
     a0a:	2000      	movs	r0, #0
     a0c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && io);
     a0e:	2000      	movs	r0, #0
     a10:	e7f6      	b.n	a00 <usart_async_get_io_descriptor+0x10>
     a12:	2000      	movs	r0, #0
     a14:	e7f4      	b.n	a00 <usart_async_get_io_descriptor+0x10>
     a16:	46c0      	nop			; (mov r8, r8)
     a18:	00010ff4 	.word	0x00010ff4
     a1c:	00000a99 	.word	0x00000a99

00000a20 <usart_async_register_callback>:
{
     a20:	b570      	push	{r4, r5, r6, lr}
     a22:	0005      	movs	r5, r0
     a24:	000e      	movs	r6, r1
     a26:	0014      	movs	r4, r2
	ASSERT(descr);
     a28:	1e43      	subs	r3, r0, #1
     a2a:	4198      	sbcs	r0, r3
     a2c:	b2c0      	uxtb	r0, r0
     a2e:	2283      	movs	r2, #131	; 0x83
     a30:	4916      	ldr	r1, [pc, #88]	; (a8c <usart_async_register_callback+0x6c>)
     a32:	4b17      	ldr	r3, [pc, #92]	; (a90 <usart_async_register_callback+0x70>)
     a34:	4798      	blx	r3
	switch (type) {
     a36:	2e01      	cmp	r6, #1
     a38:	d011      	beq.n	a5e <usart_async_register_callback+0x3e>
     a3a:	2e00      	cmp	r6, #0
     a3c:	d004      	beq.n	a48 <usart_async_register_callback+0x28>
     a3e:	2e02      	cmp	r6, #2
     a40:	d018      	beq.n	a74 <usart_async_register_callback+0x54>
		return ERR_INVALID_ARG;
     a42:	200d      	movs	r0, #13
     a44:	4240      	negs	r0, r0
     a46:	e009      	b.n	a5c <usart_async_register_callback+0x3c>
		descr->usart_cb.rx_done = cb;
     a48:	62ac      	str	r4, [r5, #40]	; 0x28
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_RX_DONE, NULL != cb);
     a4a:	1e62      	subs	r2, r4, #1
     a4c:	4194      	sbcs	r4, r2
     a4e:	b2e2      	uxtb	r2, r4
     a50:	0028      	movs	r0, r5
     a52:	3008      	adds	r0, #8
     a54:	2101      	movs	r1, #1
     a56:	4b0f      	ldr	r3, [pc, #60]	; (a94 <usart_async_register_callback+0x74>)
     a58:	4798      	blx	r3
	return ERR_NONE;
     a5a:	2000      	movs	r0, #0
}
     a5c:	bd70      	pop	{r4, r5, r6, pc}
		descr->usart_cb.tx_done = cb;
     a5e:	626c      	str	r4, [r5, #36]	; 0x24
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_TX_DONE, NULL != cb);
     a60:	1e62      	subs	r2, r4, #1
     a62:	4194      	sbcs	r4, r2
     a64:	b2e2      	uxtb	r2, r4
     a66:	0028      	movs	r0, r5
     a68:	3008      	adds	r0, #8
     a6a:	2102      	movs	r1, #2
     a6c:	4b09      	ldr	r3, [pc, #36]	; (a94 <usart_async_register_callback+0x74>)
     a6e:	4798      	blx	r3
	return ERR_NONE;
     a70:	2000      	movs	r0, #0
		break;
     a72:	e7f3      	b.n	a5c <usart_async_register_callback+0x3c>
		descr->usart_cb.error = cb;
     a74:	62ec      	str	r4, [r5, #44]	; 0x2c
		_usart_async_set_irq_state(&descr->device, USART_ASYNC_ERROR, NULL != cb);
     a76:	1e62      	subs	r2, r4, #1
     a78:	4194      	sbcs	r4, r2
     a7a:	b2e2      	uxtb	r2, r4
     a7c:	0028      	movs	r0, r5
     a7e:	3008      	adds	r0, #8
     a80:	2103      	movs	r1, #3
     a82:	4b04      	ldr	r3, [pc, #16]	; (a94 <usart_async_register_callback+0x74>)
     a84:	4798      	blx	r3
	return ERR_NONE;
     a86:	2000      	movs	r0, #0
		break;
     a88:	e7e8      	b.n	a5c <usart_async_register_callback+0x3c>
     a8a:	46c0      	nop			; (mov r8, r8)
     a8c:	00010ff4 	.word	0x00010ff4
     a90:	00000a99 	.word	0x00000a99
     a94:	00001391 	.word	0x00001391

00000a98 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     a98:	2800      	cmp	r0, #0
     a9a:	d100      	bne.n	a9e <assert+0x6>
		__asm("BKPT #0");
     a9c:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     a9e:	4770      	bx	lr

00000aa0 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
     aa0:	6803      	ldr	r3, [r0, #0]
     aa2:	2b00      	cmp	r3, #0
     aa4:	d003      	beq.n	aae <is_list_element+0xe>
		if (it == element) {
     aa6:	428b      	cmp	r3, r1
     aa8:	d003      	beq.n	ab2 <is_list_element+0x12>
	for (it = list->head; it; it = it->next) {
     aaa:	681b      	ldr	r3, [r3, #0]
     aac:	e7f9      	b.n	aa2 <is_list_element+0x2>
			return true;
		}
	}

	return false;
     aae:	2000      	movs	r0, #0
}
     ab0:	4770      	bx	lr
			return true;
     ab2:	2001      	movs	r0, #1
     ab4:	e7fc      	b.n	ab0 <is_list_element+0x10>
	...

00000ab8 <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
     ab8:	b570      	push	{r4, r5, r6, lr}
     aba:	0004      	movs	r4, r0
     abc:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
     abe:	4b06      	ldr	r3, [pc, #24]	; (ad8 <list_insert_as_head+0x20>)
     ac0:	4798      	blx	r3
     ac2:	2301      	movs	r3, #1
     ac4:	4058      	eors	r0, r3
     ac6:	b2c0      	uxtb	r0, r0
     ac8:	2239      	movs	r2, #57	; 0x39
     aca:	4904      	ldr	r1, [pc, #16]	; (adc <list_insert_as_head+0x24>)
     acc:	4b04      	ldr	r3, [pc, #16]	; (ae0 <list_insert_as_head+0x28>)
     ace:	4798      	blx	r3

	((struct list_element *)element)->next = list->head;
     ad0:	6823      	ldr	r3, [r4, #0]
     ad2:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
     ad4:	6025      	str	r5, [r4, #0]
}
     ad6:	bd70      	pop	{r4, r5, r6, pc}
     ad8:	00000aa1 	.word	0x00000aa1
     adc:	00011014 	.word	0x00011014
     ae0:	00000a99 	.word	0x00000a99

00000ae4 <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
     ae4:	6803      	ldr	r3, [r0, #0]
     ae6:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
     ae8:	6001      	str	r1, [r0, #0]
}
     aea:	4770      	bx	lr

00000aec <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
     aec:	6803      	ldr	r3, [r0, #0]
     aee:	2b00      	cmp	r3, #0
     af0:	d003      	beq.n	afa <list_remove_head+0xe>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
     af2:	681a      	ldr	r2, [r3, #0]
     af4:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
     af6:	0018      	movs	r0, r3
	}

	return NULL;
}
     af8:	4770      	bx	lr
	return NULL;
     afa:	2000      	movs	r0, #0
     afc:	e7fc      	b.n	af8 <list_remove_head+0xc>
	...

00000b00 <ringbuffer_init>:

/**
 * \brief Ringbuffer init
 */
int32_t ringbuffer_init(struct ringbuffer *const rb, void *buf, uint32_t size)
{
     b00:	b570      	push	{r4, r5, r6, lr}
     b02:	0004      	movs	r4, r0
     b04:	000e      	movs	r6, r1
     b06:	0015      	movs	r5, r2
	ASSERT(rb && buf && size);
     b08:	2800      	cmp	r0, #0
     b0a:	d012      	beq.n	b32 <ringbuffer_init+0x32>
     b0c:	2900      	cmp	r1, #0
     b0e:	d012      	beq.n	b36 <ringbuffer_init+0x36>
     b10:	2a00      	cmp	r2, #0
     b12:	d112      	bne.n	b3a <ringbuffer_init+0x3a>
     b14:	2000      	movs	r0, #0
     b16:	2228      	movs	r2, #40	; 0x28
     b18:	490a      	ldr	r1, [pc, #40]	; (b44 <ringbuffer_init+0x44>)
     b1a:	4b0b      	ldr	r3, [pc, #44]	; (b48 <ringbuffer_init+0x48>)
     b1c:	4798      	blx	r3

	/*
	 * buf size must be aligned to power of 2
	 */
	if ((size & (size - 1)) != 0) {
     b1e:	1e6b      	subs	r3, r5, #1
     b20:	422b      	tst	r3, r5
     b22:	d10c      	bne.n	b3e <ringbuffer_init+0x3e>
		return ERR_INVALID_ARG;
	}

	/* size - 1 is faster in calculation */
	rb->size        = size - 1;
     b24:	6063      	str	r3, [r4, #4]
	rb->read_index  = 0;
     b26:	2300      	movs	r3, #0
     b28:	60a3      	str	r3, [r4, #8]
	rb->write_index = rb->read_index;
     b2a:	60e3      	str	r3, [r4, #12]
	rb->buf         = (uint8_t *)buf;
     b2c:	6026      	str	r6, [r4, #0]

	return ERR_NONE;
     b2e:	2000      	movs	r0, #0
}
     b30:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && buf && size);
     b32:	2000      	movs	r0, #0
     b34:	e7ef      	b.n	b16 <ringbuffer_init+0x16>
     b36:	2000      	movs	r0, #0
     b38:	e7ed      	b.n	b16 <ringbuffer_init+0x16>
     b3a:	2001      	movs	r0, #1
     b3c:	e7eb      	b.n	b16 <ringbuffer_init+0x16>
		return ERR_INVALID_ARG;
     b3e:	200d      	movs	r0, #13
     b40:	4240      	negs	r0, r0
     b42:	e7f5      	b.n	b30 <ringbuffer_init+0x30>
     b44:	00011034 	.word	0x00011034
     b48:	00000a99 	.word	0x00000a99

00000b4c <ringbuffer_get>:
/**
 * \brief Get one byte from ringbuffer
 *
 */
int32_t ringbuffer_get(struct ringbuffer *const rb, uint8_t *data)
{
     b4c:	b570      	push	{r4, r5, r6, lr}
     b4e:	0004      	movs	r4, r0
     b50:	000d      	movs	r5, r1
	ASSERT(rb && data);
     b52:	2800      	cmp	r0, #0
     b54:	d016      	beq.n	b84 <ringbuffer_get+0x38>
     b56:	2900      	cmp	r1, #0
     b58:	d012      	beq.n	b80 <ringbuffer_get+0x34>
     b5a:	2001      	movs	r0, #1
     b5c:	2240      	movs	r2, #64	; 0x40
     b5e:	490c      	ldr	r1, [pc, #48]	; (b90 <ringbuffer_get+0x44>)
     b60:	4b0c      	ldr	r3, [pc, #48]	; (b94 <ringbuffer_get+0x48>)
     b62:	4798      	blx	r3

	if (rb->write_index != rb->read_index) {
     b64:	68a3      	ldr	r3, [r4, #8]
     b66:	68e2      	ldr	r2, [r4, #12]
     b68:	429a      	cmp	r2, r3
     b6a:	d00d      	beq.n	b88 <ringbuffer_get+0x3c>
		*data = rb->buf[rb->read_index & rb->size];
     b6c:	6862      	ldr	r2, [r4, #4]
     b6e:	4013      	ands	r3, r2
     b70:	6822      	ldr	r2, [r4, #0]
     b72:	5cd3      	ldrb	r3, [r2, r3]
     b74:	702b      	strb	r3, [r5, #0]
		rb->read_index++;
     b76:	68a3      	ldr	r3, [r4, #8]
     b78:	3301      	adds	r3, #1
     b7a:	60a3      	str	r3, [r4, #8]
		return ERR_NONE;
     b7c:	2000      	movs	r0, #0
	}

	return ERR_NOT_FOUND;
}
     b7e:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(rb && data);
     b80:	2000      	movs	r0, #0
     b82:	e7eb      	b.n	b5c <ringbuffer_get+0x10>
     b84:	2000      	movs	r0, #0
     b86:	e7e9      	b.n	b5c <ringbuffer_get+0x10>
	return ERR_NOT_FOUND;
     b88:	200a      	movs	r0, #10
     b8a:	4240      	negs	r0, r0
     b8c:	e7f7      	b.n	b7e <ringbuffer_get+0x32>
     b8e:	46c0      	nop			; (mov r8, r8)
     b90:	00011034 	.word	0x00011034
     b94:	00000a99 	.word	0x00000a99

00000b98 <ringbuffer_put>:
/**
 * \brief Put one byte to ringbuffer
 *
 */
int32_t ringbuffer_put(struct ringbuffer *const rb, uint8_t data)
{
     b98:	b570      	push	{r4, r5, r6, lr}
     b9a:	0004      	movs	r4, r0
     b9c:	000d      	movs	r5, r1
	ASSERT(rb);
     b9e:	1e43      	subs	r3, r0, #1
     ba0:	4198      	sbcs	r0, r3
     ba2:	b2c0      	uxtb	r0, r0
     ba4:	2251      	movs	r2, #81	; 0x51
     ba6:	490a      	ldr	r1, [pc, #40]	; (bd0 <ringbuffer_put+0x38>)
     ba8:	4b0a      	ldr	r3, [pc, #40]	; (bd4 <ringbuffer_put+0x3c>)
     baa:	4798      	blx	r3

	rb->buf[rb->write_index & rb->size] = data;
     bac:	6863      	ldr	r3, [r4, #4]
     bae:	68e2      	ldr	r2, [r4, #12]
     bb0:	4013      	ands	r3, r2
     bb2:	6822      	ldr	r2, [r4, #0]
     bb4:	54d5      	strb	r5, [r2, r3]

	/*
	 * buffer full strategy: new data will overwrite the oldest data in
	 * the buffer
	 */
	if ((rb->write_index - rb->read_index) > rb->size) {
     bb6:	68e3      	ldr	r3, [r4, #12]
     bb8:	68a2      	ldr	r2, [r4, #8]
     bba:	1a9a      	subs	r2, r3, r2
     bbc:	6861      	ldr	r1, [r4, #4]
     bbe:	428a      	cmp	r2, r1
     bc0:	d901      	bls.n	bc6 <ringbuffer_put+0x2e>
		rb->read_index = rb->write_index - rb->size;
     bc2:	1a59      	subs	r1, r3, r1
     bc4:	60a1      	str	r1, [r4, #8]
	}

	rb->write_index++;
     bc6:	3301      	adds	r3, #1
     bc8:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
}
     bca:	2000      	movs	r0, #0
     bcc:	bd70      	pop	{r4, r5, r6, pc}
     bce:	46c0      	nop			; (mov r8, r8)
     bd0:	00011034 	.word	0x00011034
     bd4:	00000a99 	.word	0x00000a99

00000bd8 <ringbuffer_num>:

/**
 * \brief Return the element number of ringbuffer
 */
uint32_t ringbuffer_num(const struct ringbuffer *const rb)
{
     bd8:	b510      	push	{r4, lr}
     bda:	0004      	movs	r4, r0
	ASSERT(rb);
     bdc:	1e43      	subs	r3, r0, #1
     bde:	4198      	sbcs	r0, r3
     be0:	b2c0      	uxtb	r0, r0
     be2:	2267      	movs	r2, #103	; 0x67
     be4:	4903      	ldr	r1, [pc, #12]	; (bf4 <ringbuffer_num+0x1c>)
     be6:	4b04      	ldr	r3, [pc, #16]	; (bf8 <ringbuffer_num+0x20>)
     be8:	4798      	blx	r3

	return rb->write_index - rb->read_index;
     bea:	68e0      	ldr	r0, [r4, #12]
     bec:	68a3      	ldr	r3, [r4, #8]
     bee:	1ac0      	subs	r0, r0, r3
}
     bf0:	bd10      	pop	{r4, pc}
     bf2:	46c0      	nop			; (mov r8, r8)
     bf4:	00011034 	.word	0x00011034
     bf8:	00000a99 	.word	0x00000a99

00000bfc <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     bfc:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     bfe:	4a06      	ldr	r2, [pc, #24]	; (c18 <_sbrk+0x1c>)
     c00:	6812      	ldr	r2, [r2, #0]
     c02:	2a00      	cmp	r2, #0
     c04:	d004      	beq.n	c10 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     c06:	4a04      	ldr	r2, [pc, #16]	; (c18 <_sbrk+0x1c>)
     c08:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     c0a:	18c3      	adds	r3, r0, r3
     c0c:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     c0e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     c10:	4902      	ldr	r1, [pc, #8]	; (c1c <_sbrk+0x20>)
     c12:	4a01      	ldr	r2, [pc, #4]	; (c18 <_sbrk+0x1c>)
     c14:	6011      	str	r1, [r2, #0]
     c16:	e7f6      	b.n	c06 <_sbrk+0xa>
     c18:	20000a40 	.word	0x20000a40
     c1c:	20003680 	.word	0x20003680

00000c20 <_close>:
 */
extern int _close(int file)
{
	(void)file;
	return -1;
}
     c20:	2001      	movs	r0, #1
     c22:	4240      	negs	r0, r0
     c24:	4770      	bx	lr

00000c26 <_fstat>:
 * \brief Replacement of C library of _fstat
 */
extern int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
     c26:	2380      	movs	r3, #128	; 0x80
     c28:	019b      	lsls	r3, r3, #6
     c2a:	604b      	str	r3, [r1, #4]

	return 0;
}
     c2c:	2000      	movs	r0, #0
     c2e:	4770      	bx	lr

00000c30 <_isatty>:
 */
extern int _isatty(int file)
{
	(void)file;
	return 1;
}
     c30:	2001      	movs	r0, #1
     c32:	4770      	bx	lr

00000c34 <_lseek>:
 */
extern int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
     c34:	2000      	movs	r0, #0
     c36:	4770      	bx	lr

00000c38 <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
     c38:	b510      	push	{r4, lr}
		return (ms * (freq / 100000) + 2) / 3 * 100;
     c3a:	0103      	lsls	r3, r0, #4
     c3c:	1a1b      	subs	r3, r3, r0
     c3e:	0158      	lsls	r0, r3, #5
     c40:	3002      	adds	r0, #2
     c42:	2103      	movs	r1, #3
     c44:	4b02      	ldr	r3, [pc, #8]	; (c50 <_get_cycles_for_ms+0x18>)
     c46:	4798      	blx	r3
     c48:	2364      	movs	r3, #100	; 0x64
     c4a:	4358      	muls	r0, r3
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     c4c:	bd10      	pop	{r4, pc}
     c4e:	46c0      	nop			; (mov r8, r8)
     c50:	000046c1 	.word	0x000046c1

00000c54 <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
     c54:	3901      	subs	r1, #1
     c56:	d8fd      	bhi.n	c54 <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
     c58:	4770      	bx	lr
	...

00000c5c <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     c5c:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     c5e:	4a08      	ldr	r2, [pc, #32]	; (c80 <_init_chip+0x24>)
     c60:	6853      	ldr	r3, [r2, #4]
     c62:	2106      	movs	r1, #6
     c64:	430b      	orrs	r3, r1
     c66:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
     c68:	4b06      	ldr	r3, [pc, #24]	; (c84 <_init_chip+0x28>)
     c6a:	4798      	blx	r3
	_sysctrl_init_sources();
     c6c:	4b06      	ldr	r3, [pc, #24]	; (c88 <_init_chip+0x2c>)
     c6e:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
     c70:	2008      	movs	r0, #8
     c72:	4c06      	ldr	r4, [pc, #24]	; (c8c <_init_chip+0x30>)
     c74:	47a0      	blx	r4
#endif
	_sysctrl_init_referenced_generators();
     c76:	4b06      	ldr	r3, [pc, #24]	; (c90 <_init_chip+0x34>)
     c78:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     c7a:	20f7      	movs	r0, #247	; 0xf7
     c7c:	47a0      	blx	r4
}
     c7e:	bd10      	pop	{r4, pc}
     c80:	41004000 	.word	0x41004000
     c84:	00000e85 	.word	0x00000e85
     c88:	00001a21 	.word	0x00001a21
     c8c:	00000e29 	.word	0x00000e29
     c90:	00001a6d 	.word	0x00001a6d

00000c94 <_ext_irq_init>:
typedef uint8_t  hri_eic_nmiflag_reg_t;
typedef uint8_t  hri_eic_status_reg_t;

static inline void hri_eic_wait_for_sync(const void *const hw)
{
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     c94:	4b20      	ldr	r3, [pc, #128]	; (d18 <_ext_irq_init+0x84>)
     c96:	785b      	ldrb	r3, [r3, #1]
     c98:	09db      	lsrs	r3, r3, #7
     c9a:	d1fb      	bne.n	c94 <_ext_irq_init>
     c9c:	4b1e      	ldr	r3, [pc, #120]	; (d18 <_ext_irq_init+0x84>)
     c9e:	785b      	ldrb	r3, [r3, #1]
     ca0:	09db      	lsrs	r3, r3, #7
     ca2:	d1fb      	bne.n	c9c <_ext_irq_init+0x8>

static inline hri_eic_ctrl_reg_t hri_eic_get_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t mask)
{
	uint8_t tmp;
	hri_eic_wait_for_sync(hw);
	tmp = ((Eic *)hw)->CTRL.reg;
     ca4:	4b1c      	ldr	r3, [pc, #112]	; (d18 <_ext_irq_init+0x84>)
     ca6:	781b      	ldrb	r3, [r3, #0]
 * \brief Initialize external interrupt module
 */
int32_t _ext_irq_init(void (*cb)(const uint32_t pin))
{
	hri_eic_wait_for_sync(EIC);
	if (hri_eic_get_CTRL_reg(EIC, EIC_CTRL_ENABLE)) {
     ca8:	079b      	lsls	r3, r3, #30
     caa:	d50a      	bpl.n	cc2 <_ext_irq_init+0x2e>
}

static inline void hri_eic_write_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CTRL.reg = data;
     cac:	2200      	movs	r2, #0
     cae:	4b1a      	ldr	r3, [pc, #104]	; (d18 <_ext_irq_init+0x84>)
     cb0:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     cb2:	4b19      	ldr	r3, [pc, #100]	; (d18 <_ext_irq_init+0x84>)
     cb4:	785b      	ldrb	r3, [r3, #1]
     cb6:	09db      	lsrs	r3, r3, #7
     cb8:	d1fb      	bne.n	cb2 <_ext_irq_init+0x1e>
     cba:	4b17      	ldr	r3, [pc, #92]	; (d18 <_ext_irq_init+0x84>)
     cbc:	785b      	ldrb	r3, [r3, #1]
     cbe:	09db      	lsrs	r3, r3, #7
     cc0:	d1fb      	bne.n	cba <_ext_irq_init+0x26>
	((Eic *)hw)->CTRL.reg = data;
     cc2:	2201      	movs	r2, #1
     cc4:	4b14      	ldr	r3, [pc, #80]	; (d18 <_ext_irq_init+0x84>)
     cc6:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     cc8:	4b13      	ldr	r3, [pc, #76]	; (d18 <_ext_irq_init+0x84>)
     cca:	785b      	ldrb	r3, [r3, #1]
     ccc:	09db      	lsrs	r3, r3, #7
     cce:	d1fb      	bne.n	cc8 <_ext_irq_init+0x34>
     cd0:	4b11      	ldr	r3, [pc, #68]	; (d18 <_ext_irq_init+0x84>)
     cd2:	785b      	ldrb	r3, [r3, #1]
     cd4:	09db      	lsrs	r3, r3, #7
     cd6:	d1fb      	bne.n	cd0 <_ext_irq_init+0x3c>
}

static inline void hri_eic_write_NMICTRL_reg(const void *const hw, hri_eic_nmictrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->NMICTRL.reg = data;
     cd8:	4b0f      	ldr	r3, [pc, #60]	; (d18 <_ext_irq_init+0x84>)
     cda:	2200      	movs	r2, #0
     cdc:	709a      	strb	r2, [r3, #2]
}

static inline void hri_eic_write_EVCTRL_reg(const void *const hw, hri_eic_evctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->EVCTRL.reg = data;
     cde:	605a      	str	r2, [r3, #4]
}

static inline void hri_eic_write_WAKEUP_reg(const void *const hw, hri_eic_wakeup_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->WAKEUP.reg = data;
     ce0:	615a      	str	r2, [r3, #20]
}

static inline void hri_eic_write_CONFIG_reg(const void *const hw, uint8_t index, hri_eic_config_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CONFIG[index].reg = data;
     ce2:	619a      	str	r2, [r3, #24]
     ce4:	61da      	str	r2, [r3, #28]
	((Eic *)hw)->CTRL.reg |= EIC_CTRL_ENABLE;
     ce6:	781a      	ldrb	r2, [r3, #0]
     ce8:	2102      	movs	r1, #2
     cea:	430a      	orrs	r2, r1
     cec:	b2d2      	uxtb	r2, r2
     cee:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     cf0:	4b09      	ldr	r3, [pc, #36]	; (d18 <_ext_irq_init+0x84>)
     cf2:	785b      	ldrb	r3, [r3, #1]
     cf4:	09db      	lsrs	r3, r3, #7
     cf6:	d1fb      	bne.n	cf0 <_ext_irq_init+0x5c>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     cf8:	4b08      	ldr	r3, [pc, #32]	; (d1c <_ext_irq_init+0x88>)
     cfa:	2210      	movs	r2, #16
     cfc:	2180      	movs	r1, #128	; 0x80
     cfe:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
     d00:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
     d04:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     d08:	3101      	adds	r1, #1
     d0a:	31ff      	adds	r1, #255	; 0xff
     d0c:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     d0e:	601a      	str	r2, [r3, #0]

	NVIC_DisableIRQ(EIC_IRQn);
	NVIC_ClearPendingIRQ(EIC_IRQn);
	NVIC_EnableIRQ(EIC_IRQn);

	callback = cb;
     d10:	4b03      	ldr	r3, [pc, #12]	; (d20 <_ext_irq_init+0x8c>)
     d12:	6018      	str	r0, [r3, #0]

	return ERR_NONE;
}
     d14:	2000      	movs	r0, #0
     d16:	4770      	bx	lr
     d18:	40001800 	.word	0x40001800
     d1c:	e000e100 	.word	0xe000e100
     d20:	20000a44 	.word	0x20000a44

00000d24 <_ext_irq_enable>:
 * \brief Enable / disable external irq
 */
int32_t _ext_irq_enable(const uint32_t pin, const bool enable)
{
	uint8_t extint = INVALID_EXTINT_NUMBER;
	uint8_t i      = 0;
     d24:	2300      	movs	r3, #0

	for (; i < ARRAY_SIZE(_map); i++) {
     d26:	2b00      	cmp	r3, #0
     d28:	d00b      	beq.n	d42 <_ext_irq_enable+0x1e>
	uint8_t extint = INVALID_EXTINT_NUMBER;
     d2a:	22ff      	movs	r2, #255	; 0xff
		if (_map[i].pin == pin) {
			extint = _map[i].extint;
			break;
		}
	}
	if (INVALID_EXTINT_NUMBER == extint) {
     d2c:	2aff      	cmp	r2, #255	; 0xff
     d2e:	d017      	beq.n	d60 <_ext_irq_enable+0x3c>
		return ERR_INVALID_ARG;
	}

	if (enable) {
     d30:	2900      	cmp	r1, #0
     d32:	d10f      	bne.n	d54 <_ext_irq_enable+0x30>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
	} else {
		hri_eic_clear_INTEN_reg(EIC, 1ul << extint);
     d34:	2301      	movs	r3, #1
     d36:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENCLR.reg = mask;
     d38:	4a0b      	ldr	r2, [pc, #44]	; (d68 <_ext_irq_enable+0x44>)
     d3a:	6093      	str	r3, [r2, #8]
	((Eic *)hw)->INTFLAG.reg = mask;
     d3c:	6113      	str	r3, [r2, #16]
		hri_eic_clear_INTFLAG_reg(EIC, 1ul << extint);
	}

	return ERR_NONE;
     d3e:	2000      	movs	r0, #0
}
     d40:	4770      	bx	lr
		if (_map[i].pin == pin) {
     d42:	2828      	cmp	r0, #40	; 0x28
     d44:	d002      	beq.n	d4c <_ext_irq_enable+0x28>
	for (; i < ARRAY_SIZE(_map); i++) {
     d46:	3301      	adds	r3, #1
     d48:	b2db      	uxtb	r3, r3
     d4a:	e7ec      	b.n	d26 <_ext_irq_enable+0x2>
			extint = _map[i].extint;
     d4c:	00da      	lsls	r2, r3, #3
     d4e:	4b07      	ldr	r3, [pc, #28]	; (d6c <_ext_irq_enable+0x48>)
     d50:	5cd2      	ldrb	r2, [r2, r3]
			break;
     d52:	e7eb      	b.n	d2c <_ext_irq_enable+0x8>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
     d54:	2301      	movs	r3, #1
     d56:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENSET.reg = mask;
     d58:	4a03      	ldr	r2, [pc, #12]	; (d68 <_ext_irq_enable+0x44>)
     d5a:	60d3      	str	r3, [r2, #12]
	return ERR_NONE;
     d5c:	2000      	movs	r0, #0
     d5e:	e7ef      	b.n	d40 <_ext_irq_enable+0x1c>
		return ERR_INVALID_ARG;
     d60:	200d      	movs	r0, #13
     d62:	4240      	negs	r0, r0
     d64:	e7ec      	b.n	d40 <_ext_irq_enable+0x1c>
     d66:	46c0      	nop			; (mov r8, r8)
     d68:	40001800 	.word	0x40001800
     d6c:	00011070 	.word	0x00011070

00000d70 <EIC_Handler>:

/**
 * \brief EIC interrupt handler
 */
void EIC_Handler(void)
{
     d70:	b570      	push	{r4, r5, r6, lr}
     d72:	b082      	sub	sp, #8
	return ((Eic *)hw)->INTFLAG.reg;
     d74:	4b26      	ldr	r3, [pc, #152]	; (e10 <EIC_Handler+0xa0>)
     d76:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     d78:	68d9      	ldr	r1, [r3, #12]
	volatile uint32_t flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     d7a:	400a      	ands	r2, r1
     d7c:	9201      	str	r2, [sp, #4]
	int8_t            pos;
	uint32_t          pin = INVALID_PIN_NUMBER;

	hri_eic_clear_INTFLAG_reg(EIC, flags);
     d7e:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     d80:	611a      	str	r2, [r3, #16]

	ASSERT(callback);
     d82:	4b24      	ldr	r3, [pc, #144]	; (e14 <EIC_Handler+0xa4>)
     d84:	6818      	ldr	r0, [r3, #0]
     d86:	1e43      	subs	r3, r0, #1
     d88:	4198      	sbcs	r0, r3
     d8a:	b2c0      	uxtb	r0, r0
     d8c:	22d2      	movs	r2, #210	; 0xd2
     d8e:	4922      	ldr	r1, [pc, #136]	; (e18 <EIC_Handler+0xa8>)
     d90:	4b22      	ldr	r3, [pc, #136]	; (e1c <EIC_Handler+0xac>)
     d92:	4798      	blx	r3
	uint32_t          pin = INVALID_PIN_NUMBER;
     d94:	2501      	movs	r5, #1
     d96:	426d      	negs	r5, r5

	while (flags) {
     d98:	e02e      	b.n	df8 <EIC_Handler+0x88>
					break;
				}
				if (_map[middle].extint < pos) {
					lower = middle + 1;
				} else {
					upper = middle - 1;
     d9a:	3901      	subs	r1, #1
     d9c:	b2ce      	uxtb	r6, r1
			while (upper >= lower) {
     d9e:	42b0      	cmp	r0, r6
     da0:	d80e      	bhi.n	dc0 <EIC_Handler+0x50>
				middle = (upper + lower) >> 1;
     da2:	1832      	adds	r2, r6, r0
     da4:	1052      	asrs	r2, r2, #1
     da6:	b2d1      	uxtb	r1, r2
				if (_map[middle].extint == pos) {
     da8:	23ff      	movs	r3, #255	; 0xff
     daa:	4013      	ands	r3, r2
     dac:	00db      	lsls	r3, r3, #3
     dae:	4a1c      	ldr	r2, [pc, #112]	; (e20 <EIC_Handler+0xb0>)
     db0:	5c9b      	ldrb	r3, [r3, r2]
     db2:	42a3      	cmp	r3, r4
     db4:	d003      	beq.n	dbe <EIC_Handler+0x4e>
				if (_map[middle].extint < pos) {
     db6:	daf0      	bge.n	d9a <EIC_Handler+0x2a>
					lower = middle + 1;
     db8:	3101      	adds	r1, #1
     dba:	b2c8      	uxtb	r0, r1
     dbc:	e7ef      	b.n	d9e <EIC_Handler+0x2e>
					pin = _map[middle].pin;
     dbe:	2528      	movs	r5, #40	; 0x28
				}
			}

			if (INVALID_PIN_NUMBER != pin) {
     dc0:	1c6b      	adds	r3, r5, #1
     dc2:	d003      	beq.n	dcc <EIC_Handler+0x5c>
				callback(pin);
     dc4:	4b13      	ldr	r3, [pc, #76]	; (e14 <EIC_Handler+0xa4>)
     dc6:	681b      	ldr	r3, [r3, #0]
     dc8:	0028      	movs	r0, r5
     dca:	4798      	blx	r3
			}
			flags &= ~(1ul << pos);
     dcc:	2201      	movs	r2, #1
     dce:	40a2      	lsls	r2, r4
     dd0:	9b01      	ldr	r3, [sp, #4]
     dd2:	4393      	bics	r3, r2
     dd4:	9301      	str	r3, [sp, #4]
			pos = ffs(flags) - 1;
     dd6:	9801      	ldr	r0, [sp, #4]
     dd8:	4b12      	ldr	r3, [pc, #72]	; (e24 <EIC_Handler+0xb4>)
     dda:	4798      	blx	r3
     ddc:	3801      	subs	r0, #1
     dde:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     de0:	1c63      	adds	r3, r4, #1
     de2:	d002      	beq.n	dea <EIC_Handler+0x7a>
     de4:	2601      	movs	r6, #1
     de6:	2000      	movs	r0, #0
     de8:	e7d9      	b.n	d9e <EIC_Handler+0x2e>
	return ((Eic *)hw)->INTFLAG.reg;
     dea:	4b09      	ldr	r3, [pc, #36]	; (e10 <EIC_Handler+0xa0>)
     dec:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     dee:	68d9      	ldr	r1, [r3, #12]
		}
		flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     df0:	400a      	ands	r2, r1
     df2:	9201      	str	r2, [sp, #4]
		hri_eic_clear_INTFLAG_reg(EIC, flags);
     df4:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     df6:	611a      	str	r2, [r3, #16]
	while (flags) {
     df8:	9b01      	ldr	r3, [sp, #4]
     dfa:	2b00      	cmp	r3, #0
     dfc:	d005      	beq.n	e0a <EIC_Handler+0x9a>
		pos = ffs(flags) - 1;
     dfe:	9801      	ldr	r0, [sp, #4]
     e00:	4b08      	ldr	r3, [pc, #32]	; (e24 <EIC_Handler+0xb4>)
     e02:	4798      	blx	r3
     e04:	3801      	subs	r0, #1
     e06:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     e08:	e7ea      	b.n	de0 <EIC_Handler+0x70>
	}
}
     e0a:	b002      	add	sp, #8
     e0c:	bd70      	pop	{r4, r5, r6, pc}
     e0e:	46c0      	nop			; (mov r8, r8)
     e10:	40001800 	.word	0x40001800
     e14:	20000a44 	.word	0x20000a44
     e18:	00011058 	.word	0x00011058
     e1c:	00000a99 	.word	0x00000a99
     e20:	00011070 	.word	0x00011070
     e24:	00004ab5 	.word	0x00004ab5

00000e28 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     e28:	07c3      	lsls	r3, r0, #31
     e2a:	d509      	bpl.n	e40 <_gclk_init_generators_by_fref+0x18>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
     e2c:	4b11      	ldr	r3, [pc, #68]	; (e74 <_gclk_init_generators_by_fref+0x4c>)
     e2e:	2280      	movs	r2, #128	; 0x80
     e30:	0052      	lsls	r2, r2, #1
     e32:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     e34:	4a10      	ldr	r2, [pc, #64]	; (e78 <_gclk_init_generators_by_fref+0x50>)
     e36:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     e38:	4b0e      	ldr	r3, [pc, #56]	; (e74 <_gclk_init_generators_by_fref+0x4c>)
     e3a:	785b      	ldrb	r3, [r3, #1]
     e3c:	09db      	lsrs	r3, r3, #7
     e3e:	d1fb      	bne.n	e38 <_gclk_init_generators_by_fref+0x10>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SRC | GCLK_GENCTRL_ID(0));
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
     e40:	0783      	lsls	r3, r0, #30
     e42:	d509      	bpl.n	e58 <_gclk_init_generators_by_fref+0x30>
	((Gclk *)hw)->GENDIV.reg = data;
     e44:	4b0b      	ldr	r3, [pc, #44]	; (e74 <_gclk_init_generators_by_fref+0x4c>)
     e46:	2202      	movs	r2, #2
     e48:	32ff      	adds	r2, #255	; 0xff
     e4a:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     e4c:	4a0b      	ldr	r2, [pc, #44]	; (e7c <_gclk_init_generators_by_fref+0x54>)
     e4e:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     e50:	4b08      	ldr	r3, [pc, #32]	; (e74 <_gclk_init_generators_by_fref+0x4c>)
     e52:	785b      	ldrb	r3, [r3, #1]
     e54:	09db      	lsrs	r3, r3, #7
     e56:	d1fb      	bne.n	e50 <_gclk_init_generators_by_fref+0x28>
		        | (CONF_GCLK_GENERATOR_2_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_2_SRC | GCLK_GENCTRL_ID(2));
	}
#endif

#if CONF_GCLK_GENERATOR_3_CONFIG == 1
	if (bm & (1ul << 3)) {
     e58:	0703      	lsls	r3, r0, #28
     e5a:	d509      	bpl.n	e70 <_gclk_init_generators_by_fref+0x48>
	((Gclk *)hw)->GENDIV.reg = data;
     e5c:	4b05      	ldr	r3, [pc, #20]	; (e74 <_gclk_init_generators_by_fref+0x4c>)
     e5e:	2204      	movs	r2, #4
     e60:	32ff      	adds	r2, #255	; 0xff
     e62:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     e64:	4a06      	ldr	r2, [pc, #24]	; (e80 <_gclk_init_generators_by_fref+0x58>)
     e66:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     e68:	4b02      	ldr	r3, [pc, #8]	; (e74 <_gclk_init_generators_by_fref+0x4c>)
     e6a:	785b      	ldrb	r3, [r3, #1]
     e6c:	09db      	lsrs	r3, r3, #7
     e6e:	d1fb      	bne.n	e68 <_gclk_init_generators_by_fref+0x40>
		        | (CONF_GCLK_GEN_7_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_7_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_7_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_7_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_7_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_7_SRC | GCLK_GENCTRL_ID(7));
	}
#endif
}
     e70:	4770      	bx	lr
     e72:	46c0      	nop			; (mov r8, r8)
     e74:	40000c00 	.word	0x40000c00
     e78:	00010700 	.word	0x00010700
     e7c:	00010601 	.word	0x00010601
     e80:	00010303 	.word	0x00010303

00000e84 <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
     e84:	4b06      	ldr	r3, [pc, #24]	; (ea0 <_pm_init+0x1c>)
     e86:	7a1a      	ldrb	r2, [r3, #8]
     e88:	b2d2      	uxtb	r2, r2
     e8a:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
     e8c:	7a5a      	ldrb	r2, [r3, #9]
     e8e:	b2d2      	uxtb	r2, r2
     e90:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
     e92:	7a9a      	ldrb	r2, [r3, #10]
     e94:	b2d2      	uxtb	r2, r2
     e96:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
     e98:	7ada      	ldrb	r2, [r3, #11]
     e9a:	b2d2      	uxtb	r2, r2
     e9c:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
     e9e:	4770      	bx	lr
     ea0:	40000400 	.word	0x40000400

00000ea4 <_rtc_timer_interrupt_handler>:
 * \brief RTC Timer interrupt handler
 *
 * \param[in] p The pointer to calendar device struct
 */
static void _rtc_timer_interrupt_handler(struct _timer_device *dev)
{
     ea4:	b510      	push	{r4, lr}
     ea6:	0004      	movs	r4, r0
	return tmp;
}

static inline hri_rtcmode0_intflag_reg_t hri_rtcmode0_read_INTFLAG_reg(const void *const hw)
{
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
     ea8:	68c3      	ldr	r3, [r0, #12]
     eaa:	7a1b      	ldrb	r3, [r3, #8]
	/* Read and mask interrupt flag register */
	uint16_t flag = hri_rtcmode0_read_INTFLAG_reg(dev->hw);

	if (flag & RTC_MODE0_INTFLAG_CMP0) {
     eac:	07db      	lsls	r3, r3, #31
     eae:	d506      	bpl.n	ebe <_rtc_timer_interrupt_handler+0x1a>
		if (dev->timer_cb.period_expired) {
     eb0:	6803      	ldr	r3, [r0, #0]
     eb2:	2b00      	cmp	r3, #0
     eb4:	d000      	beq.n	eb8 <_rtc_timer_interrupt_handler+0x14>
			dev->timer_cb.period_expired(dev);
     eb6:	4798      	blx	r3
		}

		/* Clear interrupt flag */
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
     eb8:	68e3      	ldr	r3, [r4, #12]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
     eba:	2201      	movs	r2, #1
     ebc:	721a      	strb	r2, [r3, #8]
	}
}
     ebe:	bd10      	pop	{r4, pc}

00000ec0 <_timer_init>:
{
     ec0:	b570      	push	{r4, r5, r6, lr}
     ec2:	0004      	movs	r4, r0
     ec4:	000d      	movs	r5, r1
	ASSERT(dev);
     ec6:	1e43      	subs	r3, r0, #1
     ec8:	4198      	sbcs	r0, r3
     eca:	b2c0      	uxtb	r0, r0
     ecc:	2230      	movs	r2, #48	; 0x30
     ece:	4910      	ldr	r1, [pc, #64]	; (f10 <_timer_init+0x50>)
     ed0:	4b10      	ldr	r3, [pc, #64]	; (f14 <_timer_init+0x54>)
     ed2:	4798      	blx	r3
	dev->hw = hw;
     ed4:	60e5      	str	r5, [r4, #12]
}

static inline void hri_rtcmode0_write_CTRL_reg(const void *const hw, hri_rtcmode0_ctrl_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     ed6:	2301      	movs	r3, #1
     ed8:	802b      	strh	r3, [r5, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     eda:	7aab      	ldrb	r3, [r5, #10]
     edc:	09db      	lsrs	r3, r3, #7
     ede:	d1fc      	bne.n	eda <_timer_init+0x1a>
	hri_rtcmode0_wait_for_sync(dev->hw);
     ee0:	68e2      	ldr	r2, [r4, #12]
     ee2:	7a93      	ldrb	r3, [r2, #10]
     ee4:	09db      	lsrs	r3, r3, #7
     ee6:	d1fc      	bne.n	ee2 <_timer_init+0x22>
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     ee8:	3380      	adds	r3, #128	; 0x80
     eea:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     eec:	7a93      	ldrb	r3, [r2, #10]
     eee:	09db      	lsrs	r3, r3, #7
     ef0:	d1fc      	bne.n	eec <_timer_init+0x2c>
	hri_rtcmode0_write_COMP_COMP_bf(dev->hw, 0, CONF_RTC_COMP_VAL);
     ef2:	68e2      	ldr	r2, [r4, #12]

static inline void hri_rtcmode0_write_COMP_COMP_bf(const void *const hw, uint8_t index, hri_rtcmode0_comp_reg_t data)
{
	uint32_t tmp;
	RTC_CRITICAL_SECTION_ENTER();
	tmp = ((Rtc *)hw)->MODE0.COMP[index].reg;
     ef4:	6993      	ldr	r3, [r2, #24]
	tmp &= ~RTC_MODE0_COMP_COMP_Msk;
	tmp |= RTC_MODE0_COMP_COMP(data);
	((Rtc *)hw)->MODE0.COMP[index].reg = tmp;
     ef6:	230a      	movs	r3, #10
     ef8:	6193      	str	r3, [r2, #24]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     efa:	7a93      	ldrb	r3, [r2, #10]
     efc:	09db      	lsrs	r3, r3, #7
     efe:	d1fc      	bne.n	efa <_timer_init+0x3a>
	((Rtc *)hw)->MODE0.INTENSET.reg = RTC_MODE0_INTENSET_CMP0;
     f00:	3301      	adds	r3, #1
     f02:	68e2      	ldr	r2, [r4, #12]
     f04:	71d3      	strb	r3, [r2, #7]
	_rtc_dev = dev;
     f06:	4b04      	ldr	r3, [pc, #16]	; (f18 <_timer_init+0x58>)
     f08:	601c      	str	r4, [r3, #0]
}
     f0a:	2000      	movs	r0, #0
     f0c:	bd70      	pop	{r4, r5, r6, pc}
     f0e:	46c0      	nop			; (mov r8, r8)
     f10:	00011078 	.word	0x00011078
     f14:	00000a99 	.word	0x00000a99
     f18:	20000a48 	.word	0x20000a48

00000f1c <_timer_start>:
{
     f1c:	b510      	push	{r4, lr}
     f1e:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->hw);
     f20:	d020      	beq.n	f64 <_timer_start+0x48>
     f22:	68c3      	ldr	r3, [r0, #12]
     f24:	2b00      	cmp	r3, #0
     f26:	d01b      	beq.n	f60 <_timer_start+0x44>
     f28:	2001      	movs	r0, #1
     f2a:	2267      	movs	r2, #103	; 0x67
     f2c:	490e      	ldr	r1, [pc, #56]	; (f68 <_timer_start+0x4c>)
     f2e:	4b0f      	ldr	r3, [pc, #60]	; (f6c <_timer_start+0x50>)
     f30:	4798      	blx	r3
     f32:	2208      	movs	r2, #8
     f34:	4b0e      	ldr	r3, [pc, #56]	; (f70 <_timer_start+0x54>)
     f36:	601a      	str	r2, [r3, #0]
	hri_rtcmode0_write_COUNT_COUNT_bf(dev->hw, 0);
     f38:	68e2      	ldr	r2, [r4, #12]
	tmp = ((Rtc *)hw)->MODE0.COUNT.reg;
     f3a:	6913      	ldr	r3, [r2, #16]
	((Rtc *)hw)->MODE0.COUNT.reg = tmp;
     f3c:	2300      	movs	r3, #0
     f3e:	6113      	str	r3, [r2, #16]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     f40:	7a93      	ldrb	r3, [r2, #10]
     f42:	09db      	lsrs	r3, r3, #7
     f44:	d1fc      	bne.n	f40 <_timer_start+0x24>
	hri_rtcmode0_wait_for_sync(dev->hw);
     f46:	68e2      	ldr	r2, [r4, #12]
     f48:	7a93      	ldrb	r3, [r2, #10]
     f4a:	09db      	lsrs	r3, r3, #7
     f4c:	d1fc      	bne.n	f48 <_timer_start+0x2c>
	((Rtc *)hw)->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
     f4e:	8813      	ldrh	r3, [r2, #0]
     f50:	2102      	movs	r1, #2
     f52:	430b      	orrs	r3, r1
     f54:	b29b      	uxth	r3, r3
     f56:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     f58:	7a93      	ldrb	r3, [r2, #10]
     f5a:	09db      	lsrs	r3, r3, #7
     f5c:	d1fc      	bne.n	f58 <_timer_start+0x3c>
}
     f5e:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->hw);
     f60:	2000      	movs	r0, #0
     f62:	e7e2      	b.n	f2a <_timer_start+0xe>
     f64:	2000      	movs	r0, #0
     f66:	e7e0      	b.n	f2a <_timer_start+0xe>
     f68:	00011078 	.word	0x00011078
     f6c:	00000a99 	.word	0x00000a99
     f70:	e000e100 	.word	0xe000e100

00000f74 <_timer_is_started>:
	return hri_rtcmode0_get_CTRL_ENABLE_bit(dev->hw);
     f74:	68c2      	ldr	r2, [r0, #12]
     f76:	7a93      	ldrb	r3, [r2, #10]
     f78:	09db      	lsrs	r3, r3, #7
     f7a:	d1fc      	bne.n	f76 <_timer_is_started+0x2>
	tmp = ((Rtc *)hw)->MODE0.CTRL.reg;
     f7c:	8813      	ldrh	r3, [r2, #0]
	tmp = (tmp & RTC_MODE0_CTRL_ENABLE) >> RTC_MODE0_CTRL_ENABLE_Pos;
     f7e:	085b      	lsrs	r3, r3, #1
	return (bool)tmp;
     f80:	2001      	movs	r0, #1
     f82:	4018      	ands	r0, r3
}
     f84:	4770      	bx	lr

00000f86 <_timer_set_irq>:
}
     f86:	4770      	bx	lr

00000f88 <_rtc_get_timer>:
 * \brief Retrieve timer helper functions
 */
struct _timer_hpl_interface *_rtc_get_timer(void)
{
	return NULL;
}
     f88:	2000      	movs	r0, #0
     f8a:	4770      	bx	lr

00000f8c <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
     f8c:	b510      	push	{r4, lr}
	_rtc_timer_interrupt_handler(_rtc_dev);
     f8e:	4b02      	ldr	r3, [pc, #8]	; (f98 <RTC_Handler+0xc>)
     f90:	6818      	ldr	r0, [r3, #0]
     f92:	4b02      	ldr	r3, [pc, #8]	; (f9c <RTC_Handler+0x10>)
     f94:	4798      	blx	r3
}
     f96:	bd10      	pop	{r4, pc}
     f98:	20000a48 	.word	0x20000a48
     f9c:	00000ea5 	.word	0x00000ea5

00000fa0 <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
     fa0:	4b02      	ldr	r3, [pc, #8]	; (fac <_sercom_get_hardware_index+0xc>)
     fa2:	469c      	mov	ip, r3
     fa4:	4460      	add	r0, ip
     fa6:	0a80      	lsrs	r0, r0, #10
     fa8:	b2c0      	uxtb	r0, r0
}
     faa:	4770      	bx	lr
     fac:	bdfff800 	.word	0xbdfff800

00000fb0 <_sercom_usart_interrupt_handler>:
 * \internal Sercom interrupt handler
 *
 * \param[in] p The pointer to interrupt parameter
 */
static void _sercom_usart_interrupt_handler(struct _usart_async_device *device)
{
     fb0:	b510      	push	{r4, lr}
	void *hw = device->hw;
     fb2:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTFLAG.reg = SERCOM_USART_INTFLAG_RXS;
}

static inline bool hri_sercomusart_get_interrupt_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
     fb4:	7b9a      	ldrb	r2, [r3, #14]

	if (hri_sercomusart_get_interrupt_DRE_bit(hw) && hri_sercomusart_get_INTEN_DRE_bit(hw)) {
     fb6:	07d2      	lsls	r2, r2, #31
     fb8:	d502      	bpl.n	fc0 <_sercom_usart_interrupt_handler+0x10>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
}

static inline bool hri_sercomusart_get_INTEN_DRE_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_DRE) >> SERCOM_USART_INTENSET_DRE_Pos;
     fba:	7b5a      	ldrb	r2, [r3, #13]
     fbc:	07d2      	lsls	r2, r2, #31
     fbe:	d40e      	bmi.n	fde <_sercom_usart_interrupt_handler+0x2e>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
     fc0:	7b9a      	ldrb	r2, [r3, #14]
		hri_sercomusart_clear_INTEN_DRE_bit(hw);
		device->usart_cb.tx_byte_sent(device);
	} else if (hri_sercomusart_get_interrupt_TXC_bit(hw) && hri_sercomusart_get_INTEN_TXC_bit(hw)) {
     fc2:	0792      	lsls	r2, r2, #30
     fc4:	d502      	bpl.n	fcc <_sercom_usart_interrupt_handler+0x1c>
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
}

static inline bool hri_sercomusart_get_INTEN_TXC_bit(const void *const hw)
{
	return (((Sercom *)hw)->USART.INTENSET.reg & SERCOM_USART_INTENSET_TXC) >> SERCOM_USART_INTENSET_TXC_Pos;
     fc6:	7b5a      	ldrb	r2, [r3, #13]
     fc8:	0792      	lsls	r2, r2, #30
     fca:	d40d      	bmi.n	fe8 <_sercom_usart_interrupt_handler+0x38>
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
     fcc:	7b9a      	ldrb	r2, [r3, #14]
		hri_sercomusart_clear_INTEN_TXC_bit(hw);
		device->usart_cb.tx_done_cb(device);
	} else if (hri_sercomusart_get_interrupt_RXC_bit(hw)) {
     fce:	0752      	lsls	r2, r2, #29
     fd0:	d504      	bpl.n	fdc <_sercom_usart_interrupt_handler+0x2c>
	SERCOM_CRITICAL_SECTION_LEAVE();
}

static inline hri_sercomusart_status_reg_t hri_sercomusart_read_STATUS_reg(const void *const hw)
{
	return ((Sercom *)hw)->USART.STATUS.reg;
     fd2:	8a1a      	ldrh	r2, [r3, #16]
		if (hri_sercomusart_read_STATUS_reg(hw)
     fd4:	0752      	lsls	r2, r2, #29
     fd6:	d00c      	beq.n	ff2 <_sercom_usart_interrupt_handler+0x42>
	((Sercom *)hw)->USART.STATUS.reg = mask;
     fd8:	4a08      	ldr	r2, [pc, #32]	; (ffc <_sercom_usart_interrupt_handler+0x4c>)
     fda:	821a      	strh	r2, [r3, #16]
			return;
		}

		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
	}
}
     fdc:	bd10      	pop	{r4, pc}
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
     fde:	2201      	movs	r2, #1
     fe0:	731a      	strb	r2, [r3, #12]
		device->usart_cb.tx_byte_sent(device);
     fe2:	6803      	ldr	r3, [r0, #0]
     fe4:	4798      	blx	r3
     fe6:	e7f9      	b.n	fdc <_sercom_usart_interrupt_handler+0x2c>
	((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
     fe8:	2202      	movs	r2, #2
     fea:	731a      	strb	r2, [r3, #12]
		device->usart_cb.tx_done_cb(device);
     fec:	6883      	ldr	r3, [r0, #8]
     fee:	4798      	blx	r3
     ff0:	e7f4      	b.n	fdc <_sercom_usart_interrupt_handler+0x2c>
		device->usart_cb.rx_done_cb(device, hri_sercomusart_read_DATA_reg(hw));
     ff2:	6842      	ldr	r2, [r0, #4]
	return ((Sercom *)hw)->USART.DATA.reg;
     ff4:	8b19      	ldrh	r1, [r3, #24]
     ff6:	b2c9      	uxtb	r1, r1
     ff8:	4790      	blx	r2
     ffa:	e7ef      	b.n	fdc <_sercom_usart_interrupt_handler+0x2c>
     ffc:	ffff8007 	.word	0xffff8007

00001000 <_sercom_get_irq_num>:

/**
 * \brief Retrieve IRQ number for the given hardware instance
 */
static uint8_t _sercom_get_irq_num(const void *const hw)
{
    1000:	b510      	push	{r4, lr}
	return SERCOM0_IRQn + _sercom_get_hardware_index(hw);
    1002:	4b02      	ldr	r3, [pc, #8]	; (100c <_sercom_get_irq_num+0xc>)
    1004:	4798      	blx	r3
    1006:	3007      	adds	r0, #7
    1008:	b2c0      	uxtb	r0, r0
}
    100a:	bd10      	pop	{r4, pc}
    100c:	00000fa1 	.word	0x00000fa1

00001010 <_sercom_init_irq_param>:
 * \brief Init irq param with the given sercom hardware instance
 */
static void _sercom_init_irq_param(const void *const hw, void *dev)
{

	if (hw == SERCOM4) {
    1010:	4b03      	ldr	r3, [pc, #12]	; (1020 <_sercom_init_irq_param+0x10>)
    1012:	4298      	cmp	r0, r3
    1014:	d000      	beq.n	1018 <_sercom_init_irq_param+0x8>
		_sercom4_dev = (struct _usart_async_device *)dev;
	}
}
    1016:	4770      	bx	lr
		_sercom4_dev = (struct _usart_async_device *)dev;
    1018:	4b02      	ldr	r3, [pc, #8]	; (1024 <_sercom_init_irq_param+0x14>)
    101a:	6019      	str	r1, [r3, #0]
}
    101c:	e7fb      	b.n	1016 <_sercom_init_irq_param+0x6>
    101e:	46c0      	nop			; (mov r8, r8)
    1020:	42001800 	.word	0x42001800
    1024:	20000a4c 	.word	0x20000a4c

00001028 <_spi_sync_enable>:
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
    1028:	8a03      	ldrh	r3, [r0, #16]
    102a:	0bdb      	lsrs	r3, r3, #15
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw)) {
    102c:	d108      	bne.n	1040 <_spi_sync_enable+0x18>
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    102e:	6803      	ldr	r3, [r0, #0]
    1030:	2202      	movs	r2, #2
    1032:	4313      	orrs	r3, r2
    1034:	6003      	str	r3, [r0, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1036:	8a03      	ldrh	r3, [r0, #16]
    1038:	0bdb      	lsrs	r3, r3, #15
    103a:	d1fc      	bne.n	1036 <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
    103c:	2000      	movs	r0, #0
}
    103e:	4770      	bx	lr
		return ERR_BUSY;
    1040:	2004      	movs	r0, #4
    1042:	4240      	negs	r0, r0
    1044:	e7fb      	b.n	103e <_spi_sync_enable+0x16>
	...

00001048 <_get_sercom_index>:
{
    1048:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
    104a:	4b0a      	ldr	r3, [pc, #40]	; (1074 <_get_sercom_index+0x2c>)
    104c:	4798      	blx	r3
    104e:	0003      	movs	r3, r0
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
    1050:	2000      	movs	r0, #0
    1052:	2800      	cmp	r0, #0
    1054:	d006      	beq.n	1064 <_get_sercom_index+0x1c>
	ASSERT(false);
    1056:	4a08      	ldr	r2, [pc, #32]	; (1078 <_get_sercom_index+0x30>)
    1058:	4908      	ldr	r1, [pc, #32]	; (107c <_get_sercom_index+0x34>)
    105a:	2000      	movs	r0, #0
    105c:	4b08      	ldr	r3, [pc, #32]	; (1080 <_get_sercom_index+0x38>)
    105e:	4798      	blx	r3
	return 0;
    1060:	2000      	movs	r0, #0
}
    1062:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
    1064:	0102      	lsls	r2, r0, #4
    1066:	4907      	ldr	r1, [pc, #28]	; (1084 <_get_sercom_index+0x3c>)
    1068:	5c52      	ldrb	r2, [r2, r1]
    106a:	4293      	cmp	r3, r2
    106c:	d0f9      	beq.n	1062 <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
    106e:	3001      	adds	r0, #1
    1070:	b2c0      	uxtb	r0, r0
    1072:	e7ee      	b.n	1052 <_get_sercom_index+0xa>
    1074:	00000fa1 	.word	0x00000fa1
    1078:	0000024e 	.word	0x0000024e
    107c:	00011090 	.word	0x00011090
    1080:	00000a99 	.word	0x00000a99
    1084:	000110c4 	.word	0x000110c4

00001088 <_usart_init>:
{
    1088:	b510      	push	{r4, lr}
    108a:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
    108c:	4b19      	ldr	r3, [pc, #100]	; (10f4 <_usart_init+0x6c>)
    108e:	4798      	blx	r3
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
    1090:	8a23      	ldrh	r3, [r4, #16]
    1092:	0bdb      	lsrs	r3, r3, #15
    1094:	d1fc      	bne.n	1090 <_usart_init+0x8>
    1096:	8a23      	ldrh	r3, [r4, #16]
    1098:	0bdb      	lsrs	r3, r3, #15
    109a:	d1fc      	bne.n	1096 <_usart_init+0xe>
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
    109c:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
    109e:	079b      	lsls	r3, r3, #30
    10a0:	d507      	bpl.n	10b2 <_usart_init+0x2a>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    10a2:	2300      	movs	r3, #0
    10a4:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
    10a6:	8a23      	ldrh	r3, [r4, #16]
    10a8:	0bdb      	lsrs	r3, r3, #15
    10aa:	d1fc      	bne.n	10a6 <_usart_init+0x1e>
    10ac:	8a23      	ldrh	r3, [r4, #16]
    10ae:	0bdb      	lsrs	r3, r3, #15
    10b0:	d1fc      	bne.n	10ac <_usart_init+0x24>
	((Sercom *)hw)->USART.CTRLA.reg = data;
    10b2:	2301      	movs	r3, #1
    10b4:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
    10b6:	8a23      	ldrh	r3, [r4, #16]
    10b8:	0bdb      	lsrs	r3, r3, #15
    10ba:	d1fc      	bne.n	10b6 <_usart_init+0x2e>
    10bc:	8a23      	ldrh	r3, [r4, #16]
    10be:	0bdb      	lsrs	r3, r3, #15
    10c0:	d1fc      	bne.n	10bc <_usart_init+0x34>
	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
    10c2:	0102      	lsls	r2, r0, #4
    10c4:	4b0c      	ldr	r3, [pc, #48]	; (10f8 <_usart_init+0x70>)
    10c6:	189b      	adds	r3, r3, r2
    10c8:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
    10ca:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
    10cc:	8a23      	ldrh	r3, [r4, #16]
    10ce:	0bdb      	lsrs	r3, r3, #15
    10d0:	d1fc      	bne.n	10cc <_usart_init+0x44>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
    10d2:	0102      	lsls	r2, r0, #4
    10d4:	4b08      	ldr	r3, [pc, #32]	; (10f8 <_usart_init+0x70>)
    10d6:	189b      	adds	r3, r3, r2
    10d8:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->USART.CTRLB.reg = data;
    10da:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
    10dc:	8a23      	ldrh	r3, [r4, #16]
    10de:	0bdb      	lsrs	r3, r3, #15
    10e0:	d1fc      	bne.n	10dc <_usart_init+0x54>
	hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
    10e2:	0100      	lsls	r0, r0, #4
    10e4:	4b04      	ldr	r3, [pc, #16]	; (10f8 <_usart_init+0x70>)
    10e6:	1818      	adds	r0, r3, r0
    10e8:	8983      	ldrh	r3, [r0, #12]
	((Sercom *)hw)->USART.BAUD.reg = data;
    10ea:	8163      	strh	r3, [r4, #10]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
    10ec:	7b83      	ldrb	r3, [r0, #14]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
    10ee:	7223      	strb	r3, [r4, #8]
}
    10f0:	2000      	movs	r0, #0
    10f2:	bd10      	pop	{r4, pc}
    10f4:	00001049 	.word	0x00001049
    10f8:	000110c4 	.word	0x000110c4

000010fc <_get_i2cm_index>:
{
    10fc:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
    10fe:	4b0b      	ldr	r3, [pc, #44]	; (112c <_get_i2cm_index+0x30>)
    1100:	4798      	blx	r3
    1102:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
    1104:	2000      	movs	r0, #0
    1106:	2800      	cmp	r0, #0
    1108:	d006      	beq.n	1118 <_get_i2cm_index+0x1c>
	ASSERT(false);
    110a:	4a09      	ldr	r2, [pc, #36]	; (1130 <_get_i2cm_index+0x34>)
    110c:	4909      	ldr	r1, [pc, #36]	; (1134 <_get_i2cm_index+0x38>)
    110e:	2000      	movs	r0, #0
    1110:	4b09      	ldr	r3, [pc, #36]	; (1138 <_get_i2cm_index+0x3c>)
    1112:	4798      	blx	r3
	return 0;
    1114:	2000      	movs	r0, #0
}
    1116:	bd10      	pop	{r4, pc}
		if (_i2cms[i].number == sercom_offset) {
    1118:	0043      	lsls	r3, r0, #1
    111a:	181b      	adds	r3, r3, r0
    111c:	00d9      	lsls	r1, r3, #3
    111e:	4b07      	ldr	r3, [pc, #28]	; (113c <_get_i2cm_index+0x40>)
    1120:	5ccb      	ldrb	r3, [r1, r3]
    1122:	429a      	cmp	r2, r3
    1124:	d0f7      	beq.n	1116 <_get_i2cm_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
    1126:	3001      	adds	r0, #1
    1128:	b2c0      	uxtb	r0, r0
    112a:	e7ec      	b.n	1106 <_get_i2cm_index+0xa>
    112c:	00000fa1 	.word	0x00000fa1
    1130:	0000038a 	.word	0x0000038a
    1134:	00011090 	.word	0x00011090
    1138:	00000a99 	.word	0x00000a99
    113c:	000110ac 	.word	0x000110ac

00001140 <_sercom_i2c_sync_send_address>:
{
    1140:	b570      	push	{r4, r5, r6, lr}
    1142:	0005      	movs	r5, r0
	void *             hw  = i2c_dev->hw;
    1144:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    1146:	1e43      	subs	r3, r0, #1
    1148:	4198      	sbcs	r0, r3
    114a:	b2c0      	uxtb	r0, r0
    114c:	4a5c      	ldr	r2, [pc, #368]	; (12c0 <_sercom_i2c_sync_send_address+0x180>)
    114e:	495d      	ldr	r1, [pc, #372]	; (12c4 <_sercom_i2c_sync_send_address+0x184>)
    1150:	4b5d      	ldr	r3, [pc, #372]	; (12c8 <_sercom_i2c_sync_send_address+0x188>)
    1152:	4798      	blx	r3
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
    1154:	6863      	ldr	r3, [r4, #4]
    1156:	4a5d      	ldr	r2, [pc, #372]	; (12cc <_sercom_i2c_sync_send_address+0x18c>)
    1158:	4013      	ands	r3, r2
    115a:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    115c:	8a23      	ldrh	r3, [r4, #16]
    115e:	0bdb      	lsrs	r3, r3, #15
    1160:	d1fc      	bne.n	115c <_sercom_i2c_sync_send_address+0x1c>
	hri_sercomi2cm_write_ADDR_reg(hw, ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0));
    1162:	882a      	ldrh	r2, [r5, #0]
    1164:	0052      	lsls	r2, r2, #1
    1166:	886b      	ldrh	r3, [r5, #2]
    1168:	2101      	movs	r1, #1
    116a:	400b      	ands	r3, r1
    116c:	4313      	orrs	r3, r2
    116e:	b2db      	uxtb	r3, r3
	((Sercom *)hw)->I2CM.ADDR.reg = data;
    1170:	7523      	strb	r3, [r4, #20]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1172:	8a23      	ldrh	r3, [r4, #16]
    1174:	0bdb      	lsrs	r3, r3, #15
    1176:	d1fc      	bne.n	1172 <_sercom_i2c_sync_send_address+0x32>
	void *   hw      = i2c_dev->hw;
    1178:	692e      	ldr	r6, [r5, #16]
	uint32_t timeout = 65535;
    117a:	4a55      	ldr	r2, [pc, #340]	; (12d0 <_sercom_i2c_sync_send_address+0x190>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    117c:	7bb3      	ldrb	r3, [r6, #14]
    117e:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
    1180:	0018      	movs	r0, r3
		if (timeout-- == 0) {
    1182:	1e51      	subs	r1, r2, #1
    1184:	2a00      	cmp	r2, #0
    1186:	d002      	beq.n	118e <_sercom_i2c_sync_send_address+0x4e>
    1188:	000a      	movs	r2, r1
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    118a:	079b      	lsls	r3, r3, #30
    118c:	d0f6      	beq.n	117c <_sercom_i2c_sync_send_address+0x3c>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    118e:	8a23      	ldrh	r3, [r4, #16]
    1190:	0bdb      	lsrs	r3, r3, #15
    1192:	d1fc      	bne.n	118e <_sercom_i2c_sync_send_address+0x4e>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1194:	8a23      	ldrh	r3, [r4, #16]
    1196:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
    1198:	07c2      	lsls	r2, r0, #31
    119a:	d550      	bpl.n	123e <_sercom_i2c_sync_send_address+0xfe>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    119c:	079a      	lsls	r2, r3, #30
    119e:	d510      	bpl.n	11c2 <_sercom_i2c_sync_send_address+0x82>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    11a0:	2201      	movs	r2, #1
    11a2:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
    11a4:	886a      	ldrh	r2, [r5, #2]
    11a6:	2180      	movs	r1, #128	; 0x80
    11a8:	0149      	lsls	r1, r1, #5
    11aa:	430a      	orrs	r2, r1
    11ac:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    11ae:	886a      	ldrh	r2, [r5, #2]
    11b0:	4948      	ldr	r1, [pc, #288]	; (12d4 <_sercom_i2c_sync_send_address+0x194>)
    11b2:	400a      	ands	r2, r1
    11b4:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    11b6:	07db      	lsls	r3, r3, #31
    11b8:	d400      	bmi.n	11bc <_sercom_i2c_sync_send_address+0x7c>
    11ba:	e07c      	b.n	12b6 <_sercom_i2c_sync_send_address+0x176>
				return I2C_ERR_BUS;
    11bc:	2005      	movs	r0, #5
    11be:	4240      	negs	r0, r0
    11c0:	e063      	b.n	128a <_sercom_i2c_sync_send_address+0x14a>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    11c2:	075b      	lsls	r3, r3, #29
    11c4:	d40b      	bmi.n	11de <_sercom_i2c_sync_send_address+0x9e>
			if (msg->len == 0) {
    11c6:	6868      	ldr	r0, [r5, #4]
    11c8:	2800      	cmp	r0, #0
    11ca:	d12d      	bne.n	1228 <_sercom_i2c_sync_send_address+0xe8>
				if (msg->flags & I2C_M_STOP) {
    11cc:	886b      	ldrh	r3, [r5, #2]
    11ce:	b21b      	sxth	r3, r3
    11d0:	2b00      	cmp	r3, #0
    11d2:	db20      	blt.n	1216 <_sercom_i2c_sync_send_address+0xd6>
				msg->flags &= ~I2C_M_BUSY;
    11d4:	886b      	ldrh	r3, [r5, #2]
    11d6:	4a3f      	ldr	r2, [pc, #252]	; (12d4 <_sercom_i2c_sync_send_address+0x194>)
    11d8:	4013      	ands	r3, r2
    11da:	806b      	strh	r3, [r5, #2]
    11dc:	e055      	b.n	128a <_sercom_i2c_sync_send_address+0x14a>
				if (msg->len > 0) {
    11de:	686b      	ldr	r3, [r5, #4]
    11e0:	2b00      	cmp	r3, #0
    11e2:	dd04      	ble.n	11ee <_sercom_i2c_sync_send_address+0xae>
					msg->flags |= I2C_M_FAIL;
    11e4:	886b      	ldrh	r3, [r5, #2]
    11e6:	2280      	movs	r2, #128	; 0x80
    11e8:	0152      	lsls	r2, r2, #5
    11ea:	4313      	orrs	r3, r2
    11ec:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    11ee:	886b      	ldrh	r3, [r5, #2]
    11f0:	b21b      	sxth	r3, r3
    11f2:	2b00      	cmp	r3, #0
    11f4:	db06      	blt.n	1204 <_sercom_i2c_sync_send_address+0xc4>
				msg->flags &= ~I2C_M_BUSY;
    11f6:	886b      	ldrh	r3, [r5, #2]
    11f8:	4a36      	ldr	r2, [pc, #216]	; (12d4 <_sercom_i2c_sync_send_address+0x194>)
    11fa:	4013      	ands	r3, r2
    11fc:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    11fe:	2002      	movs	r0, #2
    1200:	4240      	negs	r0, r0
    1202:	e042      	b.n	128a <_sercom_i2c_sync_send_address+0x14a>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1204:	6862      	ldr	r2, [r4, #4]
    1206:	23c0      	movs	r3, #192	; 0xc0
    1208:	029b      	lsls	r3, r3, #10
    120a:	4313      	orrs	r3, r2
    120c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    120e:	8a23      	ldrh	r3, [r4, #16]
    1210:	0bdb      	lsrs	r3, r3, #15
    1212:	d1fc      	bne.n	120e <_sercom_i2c_sync_send_address+0xce>
    1214:	e7ef      	b.n	11f6 <_sercom_i2c_sync_send_address+0xb6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1216:	6862      	ldr	r2, [r4, #4]
    1218:	23c0      	movs	r3, #192	; 0xc0
    121a:	029b      	lsls	r3, r3, #10
    121c:	4313      	orrs	r3, r2
    121e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1220:	8a23      	ldrh	r3, [r4, #16]
    1222:	0bdb      	lsrs	r3, r3, #15
    1224:	d1fc      	bne.n	1220 <_sercom_i2c_sync_send_address+0xe0>
    1226:	e7d5      	b.n	11d4 <_sercom_i2c_sync_send_address+0x94>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    1228:	68ab      	ldr	r3, [r5, #8]
    122a:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    122c:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
    122e:	68ab      	ldr	r3, [r5, #8]
    1230:	3301      	adds	r3, #1
    1232:	60ab      	str	r3, [r5, #8]
				msg->len--;
    1234:	686b      	ldr	r3, [r5, #4]
    1236:	3b01      	subs	r3, #1
    1238:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    123a:	2000      	movs	r0, #0
    123c:	e025      	b.n	128a <_sercom_i2c_sync_send_address+0x14a>
	} else if (flags & SB_FLAG) {
    123e:	0782      	lsls	r2, r0, #30
    1240:	d53c      	bpl.n	12bc <_sercom_i2c_sync_send_address+0x17c>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    1242:	686a      	ldr	r2, [r5, #4]
    1244:	2a00      	cmp	r2, #0
    1246:	d031      	beq.n	12ac <_sercom_i2c_sync_send_address+0x16c>
    1248:	075b      	lsls	r3, r3, #29
    124a:	d42f      	bmi.n	12ac <_sercom_i2c_sync_send_address+0x16c>
			msg->len--;
    124c:	3a01      	subs	r2, #1
    124e:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
    1250:	2a00      	cmp	r2, #0
    1252:	d107      	bne.n	1264 <_sercom_i2c_sync_send_address+0x124>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1254:	6862      	ldr	r2, [r4, #4]
    1256:	2380      	movs	r3, #128	; 0x80
    1258:	02db      	lsls	r3, r3, #11
    125a:	4313      	orrs	r3, r2
    125c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    125e:	8a23      	ldrh	r3, [r4, #16]
    1260:	0bdb      	lsrs	r3, r3, #15
    1262:	d1fc      	bne.n	125e <_sercom_i2c_sync_send_address+0x11e>
			if (msg->len == 0) {
    1264:	686b      	ldr	r3, [r5, #4]
    1266:	2b00      	cmp	r3, #0
    1268:	d107      	bne.n	127a <_sercom_i2c_sync_send_address+0x13a>
				if (msg->flags & I2C_M_STOP) {
    126a:	886b      	ldrh	r3, [r5, #2]
    126c:	b21b      	sxth	r3, r3
    126e:	2b00      	cmp	r3, #0
    1270:	db0c      	blt.n	128c <_sercom_i2c_sync_send_address+0x14c>
				msg->flags &= ~I2C_M_BUSY;
    1272:	886b      	ldrh	r3, [r5, #2]
    1274:	4a17      	ldr	r2, [pc, #92]	; (12d4 <_sercom_i2c_sync_send_address+0x194>)
    1276:	4013      	ands	r3, r2
    1278:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    127a:	68ab      	ldr	r3, [r5, #8]
    127c:	1c5a      	adds	r2, r3, #1
    127e:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
    1280:	7e22      	ldrb	r2, [r4, #24]
    1282:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1284:	2302      	movs	r3, #2
    1286:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
    1288:	2000      	movs	r0, #0
}
    128a:	bd70      	pop	{r4, r5, r6, pc}
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    128c:	6863      	ldr	r3, [r4, #4]
    128e:	4a11      	ldr	r2, [pc, #68]	; (12d4 <_sercom_i2c_sync_send_address+0x194>)
    1290:	4013      	ands	r3, r2
    1292:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1294:	8a23      	ldrh	r3, [r4, #16]
    1296:	0bdb      	lsrs	r3, r3, #15
    1298:	d1fc      	bne.n	1294 <_sercom_i2c_sync_send_address+0x154>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    129a:	6862      	ldr	r2, [r4, #4]
    129c:	23c0      	movs	r3, #192	; 0xc0
    129e:	029b      	lsls	r3, r3, #10
    12a0:	4313      	orrs	r3, r2
    12a2:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    12a4:	8a23      	ldrh	r3, [r4, #16]
    12a6:	0bdb      	lsrs	r3, r3, #15
    12a8:	d1fc      	bne.n	12a4 <_sercom_i2c_sync_send_address+0x164>
    12aa:	e7e2      	b.n	1272 <_sercom_i2c_sync_send_address+0x132>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    12ac:	2302      	movs	r3, #2
    12ae:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
    12b0:	2002      	movs	r0, #2
    12b2:	4240      	negs	r0, r0
    12b4:	e7e9      	b.n	128a <_sercom_i2c_sync_send_address+0x14a>
			return I2C_ERR_BAD_ADDRESS;
    12b6:	2004      	movs	r0, #4
    12b8:	4240      	negs	r0, r0
    12ba:	e7e6      	b.n	128a <_sercom_i2c_sync_send_address+0x14a>
	return I2C_OK;
    12bc:	2000      	movs	r0, #0
	return _sercom_i2c_sync_analyse_flags(hw, flags, msg);
    12be:	e7e4      	b.n	128a <_sercom_i2c_sync_send_address+0x14a>
    12c0:	000005a9 	.word	0x000005a9
    12c4:	00011090 	.word	0x00011090
    12c8:	00000a99 	.word	0x00000a99
    12cc:	fffbffff 	.word	0xfffbffff
    12d0:	0000ffff 	.word	0x0000ffff
    12d4:	fffffeff 	.word	0xfffffeff

000012d8 <_usart_async_init>:
{
    12d8:	b570      	push	{r4, r5, r6, lr}
    12da:	0006      	movs	r6, r0
    12dc:	000c      	movs	r4, r1
	ASSERT(device);
    12de:	1e43      	subs	r3, r0, #1
    12e0:	4198      	sbcs	r0, r3
    12e2:	b2c0      	uxtb	r0, r0
    12e4:	22b1      	movs	r2, #177	; 0xb1
    12e6:	4919      	ldr	r1, [pc, #100]	; (134c <_usart_async_init+0x74>)
    12e8:	4b19      	ldr	r3, [pc, #100]	; (1350 <_usart_async_init+0x78>)
    12ea:	4798      	blx	r3
	init_status = _usart_init(hw);
    12ec:	0020      	movs	r0, r4
    12ee:	4b19      	ldr	r3, [pc, #100]	; (1354 <_usart_async_init+0x7c>)
    12f0:	4798      	blx	r3
    12f2:	1e05      	subs	r5, r0, #0
	if (init_status) {
    12f4:	d001      	beq.n	12fa <_usart_async_init+0x22>
}
    12f6:	0028      	movs	r0, r5
    12f8:	bd70      	pop	{r4, r5, r6, pc}
	device->hw = hw;
    12fa:	61b4      	str	r4, [r6, #24]
	_sercom_init_irq_param(hw, (void *)device);
    12fc:	0031      	movs	r1, r6
    12fe:	0020      	movs	r0, r4
    1300:	4b15      	ldr	r3, [pc, #84]	; (1358 <_usart_async_init+0x80>)
    1302:	4798      	blx	r3
	NVIC_DisableIRQ((IRQn_Type)_sercom_get_irq_num(hw));
    1304:	0020      	movs	r0, r4
    1306:	4b15      	ldr	r3, [pc, #84]	; (135c <_usart_async_init+0x84>)
    1308:	4798      	blx	r3
    130a:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    130c:	2b00      	cmp	r3, #0
    130e:	db0a      	blt.n	1326 <_usart_async_init+0x4e>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1310:	211f      	movs	r1, #31
    1312:	4001      	ands	r1, r0
    1314:	2201      	movs	r2, #1
    1316:	408a      	lsls	r2, r1
    1318:	2180      	movs	r1, #128	; 0x80
    131a:	4c11      	ldr	r4, [pc, #68]	; (1360 <_usart_async_init+0x88>)
    131c:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    131e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1322:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    1326:	2b00      	cmp	r3, #0
    1328:	db07      	blt.n	133a <_usart_async_init+0x62>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    132a:	211f      	movs	r1, #31
    132c:	4001      	ands	r1, r0
    132e:	2201      	movs	r2, #1
    1330:	408a      	lsls	r2, r1
    1332:	21c0      	movs	r1, #192	; 0xc0
    1334:	0049      	lsls	r1, r1, #1
    1336:	4c0a      	ldr	r4, [pc, #40]	; (1360 <_usart_async_init+0x88>)
    1338:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    133a:	2b00      	cmp	r3, #0
    133c:	dbdb      	blt.n	12f6 <_usart_async_init+0x1e>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    133e:	231f      	movs	r3, #31
    1340:	4018      	ands	r0, r3
    1342:	3b1e      	subs	r3, #30
    1344:	4083      	lsls	r3, r0
    1346:	4a06      	ldr	r2, [pc, #24]	; (1360 <_usart_async_init+0x88>)
    1348:	6013      	str	r3, [r2, #0]
    134a:	e7d4      	b.n	12f6 <_usart_async_init+0x1e>
    134c:	00011090 	.word	0x00011090
    1350:	00000a99 	.word	0x00000a99
    1354:	00001089 	.word	0x00001089
    1358:	00001011 	.word	0x00001011
    135c:	00001001 	.word	0x00001001
    1360:	e000e100 	.word	0xe000e100

00001364 <_usart_async_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    1364:	6982      	ldr	r2, [r0, #24]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1366:	6813      	ldr	r3, [r2, #0]
    1368:	2102      	movs	r1, #2
    136a:	430b      	orrs	r3, r1
    136c:	6013      	str	r3, [r2, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
    136e:	8a13      	ldrh	r3, [r2, #16]
    1370:	0bdb      	lsrs	r3, r3, #15
    1372:	d1fc      	bne.n	136e <_usart_async_enable+0xa>
}
    1374:	4770      	bx	lr

00001376 <_usart_async_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    1376:	6983      	ldr	r3, [r0, #24]
    1378:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    137a:	8319      	strh	r1, [r3, #24]
}
    137c:	4770      	bx	lr

0000137e <_usart_async_enable_byte_sent_irq>:
	hri_sercomusart_set_INTEN_DRE_bit(device->hw);
    137e:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    1380:	2201      	movs	r2, #1
    1382:	735a      	strb	r2, [r3, #13]
}
    1384:	4770      	bx	lr

00001386 <_usart_async_enable_tx_done_irq>:
	hri_sercomusart_set_INTEN_TXC_bit(device->hw);
    1386:	6983      	ldr	r3, [r0, #24]
	((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    1388:	2202      	movs	r2, #2
    138a:	735a      	strb	r2, [r3, #13]
}
    138c:	4770      	bx	lr
	...

00001390 <_usart_async_set_irq_state>:
{
    1390:	b570      	push	{r4, r5, r6, lr}
    1392:	0004      	movs	r4, r0
    1394:	000d      	movs	r5, r1
    1396:	0016      	movs	r6, r2
	ASSERT(device);
    1398:	1e43      	subs	r3, r0, #1
    139a:	4198      	sbcs	r0, r3
    139c:	b2c0      	uxtb	r0, r0
    139e:	2284      	movs	r2, #132	; 0x84
    13a0:	0092      	lsls	r2, r2, #2
    13a2:	4911      	ldr	r1, [pc, #68]	; (13e8 <_usart_async_set_irq_state+0x58>)
    13a4:	4b11      	ldr	r3, [pc, #68]	; (13ec <_usart_async_set_irq_state+0x5c>)
    13a6:	4798      	blx	r3
	if (USART_ASYNC_BYTE_SENT == type || USART_ASYNC_TX_DONE == type) {
    13a8:	2d00      	cmp	r5, #0
    13aa:	d009      	beq.n	13c0 <_usart_async_set_irq_state+0x30>
    13ac:	2d02      	cmp	r5, #2
    13ae:	d007      	beq.n	13c0 <_usart_async_set_irq_state+0x30>
	} else if (USART_ASYNC_RX_DONE == type) {
    13b0:	2d01      	cmp	r5, #1
    13b2:	d10f      	bne.n	13d4 <_usart_async_set_irq_state+0x44>
		hri_sercomusart_write_INTEN_RXC_bit(device->hw, state);
    13b4:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    13b6:	2e00      	cmp	r6, #0
    13b8:	d013      	beq.n	13e2 <_usart_async_set_irq_state+0x52>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_RXC;
    13ba:	2204      	movs	r2, #4
    13bc:	735a      	strb	r2, [r3, #13]
}
    13be:	e009      	b.n	13d4 <_usart_async_set_irq_state+0x44>
		hri_sercomusart_write_INTEN_DRE_bit(device->hw, state);
    13c0:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    13c2:	2e00      	cmp	r6, #0
    13c4:	d107      	bne.n	13d6 <_usart_async_set_irq_state+0x46>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_DRE;
    13c6:	2201      	movs	r2, #1
    13c8:	731a      	strb	r2, [r3, #12]
		hri_sercomusart_write_INTEN_TXC_bit(device->hw, state);
    13ca:	69a3      	ldr	r3, [r4, #24]
	if (value == 0x0) {
    13cc:	2e00      	cmp	r6, #0
    13ce:	d105      	bne.n	13dc <_usart_async_set_irq_state+0x4c>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_TXC;
    13d0:	2202      	movs	r2, #2
    13d2:	731a      	strb	r2, [r3, #12]
}
    13d4:	bd70      	pop	{r4, r5, r6, pc}
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    13d6:	2201      	movs	r2, #1
    13d8:	735a      	strb	r2, [r3, #13]
    13da:	e7f6      	b.n	13ca <_usart_async_set_irq_state+0x3a>
		((Sercom *)hw)->USART.INTENSET.reg = SERCOM_USART_INTENSET_TXC;
    13dc:	2202      	movs	r2, #2
    13de:	735a      	strb	r2, [r3, #13]
    13e0:	e7f8      	b.n	13d4 <_usart_async_set_irq_state+0x44>
		((Sercom *)hw)->USART.INTENCLR.reg = SERCOM_USART_INTENSET_RXC;
    13e2:	2204      	movs	r2, #4
    13e4:	731a      	strb	r2, [r3, #12]
    13e6:	e7f5      	b.n	13d4 <_usart_async_set_irq_state+0x44>
    13e8:	00011090 	.word	0x00011090
    13ec:	00000a99 	.word	0x00000a99

000013f0 <SERCOM4_Handler>:
{
    13f0:	b510      	push	{r4, lr}
	_sercom_usart_interrupt_handler(_sercom4_dev);
    13f2:	4b02      	ldr	r3, [pc, #8]	; (13fc <SERCOM4_Handler+0xc>)
    13f4:	6818      	ldr	r0, [r3, #0]
    13f6:	4b02      	ldr	r3, [pc, #8]	; (1400 <SERCOM4_Handler+0x10>)
    13f8:	4798      	blx	r3
}
    13fa:	bd10      	pop	{r4, pc}
    13fc:	20000a4c 	.word	0x20000a4c
    1400:	00000fb1 	.word	0x00000fb1

00001404 <_i2c_m_sync_init>:
{
    1404:	b570      	push	{r4, r5, r6, lr}
    1406:	0006      	movs	r6, r0
    1408:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
    140a:	0008      	movs	r0, r1
    140c:	4b23      	ldr	r3, [pc, #140]	; (149c <_i2c_m_sync_init+0x98>)
    140e:	4798      	blx	r3
    1410:	0005      	movs	r5, r0
	ASSERT(i2c_dev);
    1412:	0030      	movs	r0, r6
    1414:	1e43      	subs	r3, r0, #1
    1416:	4198      	sbcs	r0, r3
    1418:	b2c0      	uxtb	r0, r0
    141a:	4a21      	ldr	r2, [pc, #132]	; (14a0 <_i2c_m_sync_init+0x9c>)
    141c:	4921      	ldr	r1, [pc, #132]	; (14a4 <_i2c_m_sync_init+0xa0>)
    141e:	4b22      	ldr	r3, [pc, #136]	; (14a8 <_i2c_m_sync_init+0xa4>)
    1420:	4798      	blx	r3
	i2c_dev->hw = hw;
    1422:	6134      	str	r4, [r6, #16]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1424:	8a23      	ldrh	r3, [r4, #16]
    1426:	0bdb      	lsrs	r3, r3, #15
    1428:	d1fc      	bne.n	1424 <_i2c_m_sync_init+0x20>
    142a:	8a23      	ldrh	r3, [r4, #16]
    142c:	0bdb      	lsrs	r3, r3, #15
    142e:	d1fc      	bne.n	142a <_i2c_m_sync_init+0x26>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1430:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
    1432:	079b      	lsls	r3, r3, #30
    1434:	d507      	bpl.n	1446 <_i2c_m_sync_init+0x42>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    1436:	2300      	movs	r3, #0
    1438:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    143a:	8a23      	ldrh	r3, [r4, #16]
    143c:	0bdb      	lsrs	r3, r3, #15
    143e:	d1fc      	bne.n	143a <_i2c_m_sync_init+0x36>
    1440:	8a23      	ldrh	r3, [r4, #16]
    1442:	0bdb      	lsrs	r3, r3, #15
    1444:	d1fc      	bne.n	1440 <_i2c_m_sync_init+0x3c>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    1446:	2301      	movs	r3, #1
    1448:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    144a:	8a23      	ldrh	r3, [r4, #16]
    144c:	0bdb      	lsrs	r3, r3, #15
    144e:	d1fc      	bne.n	144a <_i2c_m_sync_init+0x46>
    1450:	8a23      	ldrh	r3, [r4, #16]
    1452:	0bdb      	lsrs	r3, r3, #15
    1454:	d1fc      	bne.n	1450 <_i2c_m_sync_init+0x4c>
	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a & ~SERCOM_I2CM_CTRLA_ENABLE);
    1456:	006b      	lsls	r3, r5, #1
    1458:	195b      	adds	r3, r3, r5
    145a:	00da      	lsls	r2, r3, #3
    145c:	4b13      	ldr	r3, [pc, #76]	; (14ac <_i2c_m_sync_init+0xa8>)
    145e:	189b      	adds	r3, r3, r2
    1460:	685b      	ldr	r3, [r3, #4]
    1462:	2202      	movs	r2, #2
    1464:	4393      	bics	r3, r2
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    1466:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1468:	8a23      	ldrh	r3, [r4, #16]
    146a:	0bdb      	lsrs	r3, r3, #15
    146c:	d1fc      	bne.n	1468 <_i2c_m_sync_init+0x64>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
    146e:	006b      	lsls	r3, r5, #1
    1470:	195b      	adds	r3, r3, r5
    1472:	00da      	lsls	r2, r3, #3
    1474:	4b0d      	ldr	r3, [pc, #52]	; (14ac <_i2c_m_sync_init+0xa8>)
    1476:	189b      	adds	r3, r3, r2
    1478:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
    147a:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    147c:	8a23      	ldrh	r3, [r4, #16]
    147e:	0bdb      	lsrs	r3, r3, #15
    1480:	d1fc      	bne.n	147c <_i2c_m_sync_init+0x78>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
    1482:	4a0a      	ldr	r2, [pc, #40]	; (14ac <_i2c_m_sync_init+0xa8>)
    1484:	006b      	lsls	r3, r5, #1
    1486:	1958      	adds	r0, r3, r5
    1488:	00c1      	lsls	r1, r0, #3
    148a:	0008      	movs	r0, r1
    148c:	1851      	adds	r1, r2, r1
    148e:	8989      	ldrh	r1, [r1, #12]
	((Sercom *)hw)->I2CM.BAUD.reg = data;
    1490:	8161      	strh	r1, [r4, #10]
	i2c_dev->service.trise = _i2cms[i].trise;
    1492:	1812      	adds	r2, r2, r0
    1494:	8a13      	ldrh	r3, [r2, #16]
    1496:	81f3      	strh	r3, [r6, #14]
}
    1498:	2000      	movs	r0, #0
    149a:	bd70      	pop	{r4, r5, r6, pc}
    149c:	000010fd 	.word	0x000010fd
    14a0:	000004ff 	.word	0x000004ff
    14a4:	00011090 	.word	0x00011090
    14a8:	00000a99 	.word	0x00000a99
    14ac:	000110ac 	.word	0x000110ac

000014b0 <_i2c_m_sync_enable>:
{
    14b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    14b2:	0006      	movs	r6, r0
	void *hw              = i2c_dev->hw;
    14b4:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    14b6:	4d18      	ldr	r5, [pc, #96]	; (1518 <_i2c_m_sync_enable+0x68>)
    14b8:	1e43      	subs	r3, r0, #1
    14ba:	4198      	sbcs	r0, r3
    14bc:	b2c0      	uxtb	r0, r0
    14be:	22a6      	movs	r2, #166	; 0xa6
    14c0:	00d2      	lsls	r2, r2, #3
    14c2:	0029      	movs	r1, r5
    14c4:	4f15      	ldr	r7, [pc, #84]	; (151c <_i2c_m_sync_enable+0x6c>)
    14c6:	47b8      	blx	r7
	ASSERT(i2c_dev->hw);
    14c8:	6930      	ldr	r0, [r6, #16]
    14ca:	1e43      	subs	r3, r0, #1
    14cc:	4198      	sbcs	r0, r3
    14ce:	b2c0      	uxtb	r0, r0
    14d0:	4a13      	ldr	r2, [pc, #76]	; (1520 <_i2c_m_sync_enable+0x70>)
    14d2:	0029      	movs	r1, r5
    14d4:	47b8      	blx	r7
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    14d6:	6823      	ldr	r3, [r4, #0]
    14d8:	2202      	movs	r2, #2
    14da:	4313      	orrs	r3, r2
    14dc:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    14de:	8a23      	ldrh	r3, [r4, #16]
    14e0:	0bdb      	lsrs	r3, r3, #15
    14e2:	d1fc      	bne.n	14de <_i2c_m_sync_enable+0x2e>
    14e4:	2004      	movs	r0, #4
    14e6:	490f      	ldr	r1, [pc, #60]	; (1524 <_i2c_m_sync_enable+0x74>)
    14e8:	8a23      	ldrh	r3, [r4, #16]
    14ea:	0bdb      	lsrs	r3, r3, #15
    14ec:	d1fc      	bne.n	14e8 <_i2c_m_sync_enable+0x38>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    14ee:	8a22      	ldrh	r2, [r4, #16]
    14f0:	0912      	lsrs	r2, r2, #4
    14f2:	3303      	adds	r3, #3
    14f4:	4013      	ands	r3, r2
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
    14f6:	2b01      	cmp	r3, #1
    14f8:	d008      	beq.n	150c <_i2c_m_sync_enable+0x5c>
		timeout--;
    14fa:	3901      	subs	r1, #1
		if (timeout <= 0) {
    14fc:	2900      	cmp	r1, #0
    14fe:	dcf3      	bgt.n	14e8 <_i2c_m_sync_enable+0x38>
			if (--timeout_attempt)
    1500:	3801      	subs	r0, #1
    1502:	2800      	cmp	r0, #0
    1504:	d004      	beq.n	1510 <_i2c_m_sync_enable+0x60>
			((Sercom *)hw)->I2CM.STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(I2C_IDLE);
    1506:	2310      	movs	r3, #16
    1508:	8223      	strh	r3, [r4, #16]
    150a:	e7ec      	b.n	14e6 <_i2c_m_sync_enable+0x36>
	return ERR_NONE;
    150c:	2000      	movs	r0, #0
}
    150e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				return I2C_ERR_BUSY;
    1510:	2006      	movs	r0, #6
    1512:	4240      	negs	r0, r0
    1514:	e7fb      	b.n	150e <_i2c_m_sync_enable+0x5e>
    1516:	46c0      	nop			; (mov r8, r8)
    1518:	00011090 	.word	0x00011090
    151c:	00000a99 	.word	0x00000a99
    1520:	00000531 	.word	0x00000531
    1524:	0000ffff 	.word	0x0000ffff

00001528 <_i2c_m_sync_transfer>:
{
    1528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    152a:	0005      	movs	r5, r0
    152c:	000e      	movs	r6, r1
	void *   hw = i2c_dev->hw;
    152e:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    1530:	1e43      	subs	r3, r0, #1
    1532:	4198      	sbcs	r0, r3
    1534:	b2c0      	uxtb	r0, r0
    1536:	4a7b      	ldr	r2, [pc, #492]	; (1724 <_i2c_m_sync_transfer+0x1fc>)
    1538:	497b      	ldr	r1, [pc, #492]	; (1728 <_i2c_m_sync_transfer+0x200>)
    153a:	4f7c      	ldr	r7, [pc, #496]	; (172c <_i2c_m_sync_transfer+0x204>)
    153c:	47b8      	blx	r7
	ASSERT(i2c_dev->hw);
    153e:	6928      	ldr	r0, [r5, #16]
    1540:	1e43      	subs	r3, r0, #1
    1542:	4198      	sbcs	r0, r3
    1544:	b2c0      	uxtb	r0, r0
    1546:	4a7a      	ldr	r2, [pc, #488]	; (1730 <_i2c_m_sync_transfer+0x208>)
    1548:	4977      	ldr	r1, [pc, #476]	; (1728 <_i2c_m_sync_transfer+0x200>)
    154a:	47b8      	blx	r7
	ASSERT(msg);
    154c:	0030      	movs	r0, r6
    154e:	1e43      	subs	r3, r0, #1
    1550:	4198      	sbcs	r0, r3
    1552:	b2c0      	uxtb	r0, r0
    1554:	4a77      	ldr	r2, [pc, #476]	; (1734 <_i2c_m_sync_transfer+0x20c>)
    1556:	4974      	ldr	r1, [pc, #464]	; (1728 <_i2c_m_sync_transfer+0x200>)
    1558:	47b8      	blx	r7
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    155a:	886b      	ldrh	r3, [r5, #2]
    155c:	05db      	lsls	r3, r3, #23
    155e:	d500      	bpl.n	1562 <_i2c_m_sync_transfer+0x3a>
    1560:	e0dc      	b.n	171c <_i2c_m_sync_transfer+0x1f4>
	msg->flags |= I2C_M_BUSY;
    1562:	8872      	ldrh	r2, [r6, #2]
    1564:	2380      	movs	r3, #128	; 0x80
    1566:	005b      	lsls	r3, r3, #1
    1568:	469c      	mov	ip, r3
    156a:	431a      	orrs	r2, r3
    156c:	8072      	strh	r2, [r6, #2]
	i2c_dev->service.msg = *msg;
    156e:	002a      	movs	r2, r5
    1570:	0031      	movs	r1, r6
    1572:	c989      	ldmia	r1!, {r0, r3, r7}
    1574:	c289      	stmia	r2!, {r0, r3, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    1576:	6862      	ldr	r2, [r4, #4]
    1578:	4663      	mov	r3, ip
    157a:	4313      	orrs	r3, r2
    157c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    157e:	8a23      	ldrh	r3, [r4, #16]
    1580:	0bdb      	lsrs	r3, r3, #15
    1582:	d1fc      	bne.n	157e <_i2c_m_sync_transfer+0x56>
	ret = _sercom_i2c_sync_send_address(i2c_dev);
    1584:	0028      	movs	r0, r5
    1586:	4b6c      	ldr	r3, [pc, #432]	; (1738 <_i2c_m_sync_transfer+0x210>)
    1588:	4798      	blx	r3
	if (ret) {
    158a:	2800      	cmp	r0, #0
    158c:	d100      	bne.n	1590 <_i2c_m_sync_transfer+0x68>
    158e:	e07d      	b.n	168c <_i2c_m_sync_transfer+0x164>
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    1590:	886b      	ldrh	r3, [r5, #2]
    1592:	4a6a      	ldr	r2, [pc, #424]	; (173c <_i2c_m_sync_transfer+0x214>)
    1594:	4013      	ands	r3, r2
    1596:	806b      	strh	r3, [r5, #2]
}
    1598:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return I2C_ERR_BUS;
    159a:	2005      	movs	r0, #5
    159c:	4240      	negs	r0, r0
    159e:	e086      	b.n	16ae <_i2c_m_sync_transfer+0x186>
			if (msg->flags & I2C_M_STOP) {
    15a0:	8873      	ldrh	r3, [r6, #2]
    15a2:	b21b      	sxth	r3, r3
    15a4:	2b00      	cmp	r3, #0
    15a6:	db04      	blt.n	15b2 <_i2c_m_sync_transfer+0x8a>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    15a8:	886b      	ldrh	r3, [r5, #2]
    15aa:	4a64      	ldr	r2, [pc, #400]	; (173c <_i2c_m_sync_transfer+0x214>)
    15ac:	4013      	ands	r3, r2
    15ae:	806b      	strh	r3, [r5, #2]
			return ret;
    15b0:	e7f2      	b.n	1598 <_i2c_m_sync_transfer+0x70>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    15b2:	6862      	ldr	r2, [r4, #4]
    15b4:	23c0      	movs	r3, #192	; 0xc0
    15b6:	029b      	lsls	r3, r3, #10
    15b8:	4313      	orrs	r3, r2
    15ba:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    15bc:	8a23      	ldrh	r3, [r4, #16]
    15be:	0bdb      	lsrs	r3, r3, #15
    15c0:	d1fc      	bne.n	15bc <_i2c_m_sync_transfer+0x94>
    15c2:	e7f1      	b.n	15a8 <_i2c_m_sync_transfer+0x80>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    15c4:	075b      	lsls	r3, r3, #29
    15c6:	d40b      	bmi.n	15e0 <_i2c_m_sync_transfer+0xb8>
			if (msg->len == 0) {
    15c8:	6868      	ldr	r0, [r5, #4]
    15ca:	2800      	cmp	r0, #0
    15cc:	d12d      	bne.n	162a <_i2c_m_sync_transfer+0x102>
				if (msg->flags & I2C_M_STOP) {
    15ce:	886b      	ldrh	r3, [r5, #2]
    15d0:	b21b      	sxth	r3, r3
    15d2:	2b00      	cmp	r3, #0
    15d4:	db20      	blt.n	1618 <_i2c_m_sync_transfer+0xf0>
				msg->flags &= ~I2C_M_BUSY;
    15d6:	886b      	ldrh	r3, [r5, #2]
    15d8:	4a58      	ldr	r2, [pc, #352]	; (173c <_i2c_m_sync_transfer+0x214>)
    15da:	4013      	ands	r3, r2
    15dc:	806b      	strh	r3, [r5, #2]
    15de:	e055      	b.n	168c <_i2c_m_sync_transfer+0x164>
				if (msg->len > 0) {
    15e0:	686b      	ldr	r3, [r5, #4]
    15e2:	2b00      	cmp	r3, #0
    15e4:	dd04      	ble.n	15f0 <_i2c_m_sync_transfer+0xc8>
					msg->flags |= I2C_M_FAIL;
    15e6:	886b      	ldrh	r3, [r5, #2]
    15e8:	2280      	movs	r2, #128	; 0x80
    15ea:	0152      	lsls	r2, r2, #5
    15ec:	4313      	orrs	r3, r2
    15ee:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    15f0:	886b      	ldrh	r3, [r5, #2]
    15f2:	b21b      	sxth	r3, r3
    15f4:	2b00      	cmp	r3, #0
    15f6:	db06      	blt.n	1606 <_i2c_m_sync_transfer+0xde>
				msg->flags &= ~I2C_M_BUSY;
    15f8:	886b      	ldrh	r3, [r5, #2]
    15fa:	4a50      	ldr	r2, [pc, #320]	; (173c <_i2c_m_sync_transfer+0x214>)
    15fc:	4013      	ands	r3, r2
    15fe:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    1600:	2002      	movs	r0, #2
    1602:	4240      	negs	r0, r0
    1604:	e042      	b.n	168c <_i2c_m_sync_transfer+0x164>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1606:	6862      	ldr	r2, [r4, #4]
    1608:	23c0      	movs	r3, #192	; 0xc0
    160a:	029b      	lsls	r3, r3, #10
    160c:	4313      	orrs	r3, r2
    160e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1610:	8a23      	ldrh	r3, [r4, #16]
    1612:	0bdb      	lsrs	r3, r3, #15
    1614:	d1fc      	bne.n	1610 <_i2c_m_sync_transfer+0xe8>
    1616:	e7ef      	b.n	15f8 <_i2c_m_sync_transfer+0xd0>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1618:	6862      	ldr	r2, [r4, #4]
    161a:	23c0      	movs	r3, #192	; 0xc0
    161c:	029b      	lsls	r3, r3, #10
    161e:	4313      	orrs	r3, r2
    1620:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1622:	8a23      	ldrh	r3, [r4, #16]
    1624:	0bdb      	lsrs	r3, r3, #15
    1626:	d1fc      	bne.n	1622 <_i2c_m_sync_transfer+0xfa>
    1628:	e7d5      	b.n	15d6 <_i2c_m_sync_transfer+0xae>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    162a:	68ab      	ldr	r3, [r5, #8]
    162c:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    162e:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
    1630:	68ab      	ldr	r3, [r5, #8]
    1632:	3301      	adds	r3, #1
    1634:	60ab      	str	r3, [r5, #8]
				msg->len--;
    1636:	686b      	ldr	r3, [r5, #4]
    1638:	3b01      	subs	r3, #1
    163a:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    163c:	2000      	movs	r0, #0
    163e:	e025      	b.n	168c <_i2c_m_sync_transfer+0x164>
	} else if (flags & SB_FLAG) {
    1640:	078a      	lsls	r2, r1, #30
    1642:	d569      	bpl.n	1718 <_i2c_m_sync_transfer+0x1f0>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    1644:	686a      	ldr	r2, [r5, #4]
    1646:	2a00      	cmp	r2, #0
    1648:	d05e      	beq.n	1708 <_i2c_m_sync_transfer+0x1e0>
    164a:	075b      	lsls	r3, r3, #29
    164c:	d45c      	bmi.n	1708 <_i2c_m_sync_transfer+0x1e0>
			msg->len--;
    164e:	3a01      	subs	r2, #1
    1650:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
    1652:	2a00      	cmp	r2, #0
    1654:	d107      	bne.n	1666 <_i2c_m_sync_transfer+0x13e>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1656:	6862      	ldr	r2, [r4, #4]
    1658:	2380      	movs	r3, #128	; 0x80
    165a:	02db      	lsls	r3, r3, #11
    165c:	4313      	orrs	r3, r2
    165e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1660:	8a23      	ldrh	r3, [r4, #16]
    1662:	0bdb      	lsrs	r3, r3, #15
    1664:	d1fc      	bne.n	1660 <_i2c_m_sync_transfer+0x138>
			if (msg->len == 0) {
    1666:	686b      	ldr	r3, [r5, #4]
    1668:	2b00      	cmp	r3, #0
    166a:	d107      	bne.n	167c <_i2c_m_sync_transfer+0x154>
				if (msg->flags & I2C_M_STOP) {
    166c:	886b      	ldrh	r3, [r5, #2]
    166e:	b21b      	sxth	r3, r3
    1670:	2b00      	cmp	r3, #0
    1672:	db39      	blt.n	16e8 <_i2c_m_sync_transfer+0x1c0>
				msg->flags &= ~I2C_M_BUSY;
    1674:	886b      	ldrh	r3, [r5, #2]
    1676:	4a31      	ldr	r2, [pc, #196]	; (173c <_i2c_m_sync_transfer+0x214>)
    1678:	4013      	ands	r3, r2
    167a:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    167c:	68ab      	ldr	r3, [r5, #8]
    167e:	1c5a      	adds	r2, r3, #1
    1680:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
    1682:	7e22      	ldrb	r2, [r4, #24]
    1684:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1686:	2302      	movs	r3, #2
    1688:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
    168a:	2000      	movs	r0, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    168c:	886b      	ldrh	r3, [r5, #2]
    168e:	05db      	lsls	r3, r3, #23
    1690:	d400      	bmi.n	1694 <_i2c_m_sync_transfer+0x16c>
    1692:	e781      	b.n	1598 <_i2c_m_sync_transfer+0x70>
	void *   hw      = i2c_dev->hw;
    1694:	692f      	ldr	r7, [r5, #16]
	uint32_t timeout = 65535;
    1696:	4a2a      	ldr	r2, [pc, #168]	; (1740 <_i2c_m_sync_transfer+0x218>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    1698:	7bbb      	ldrb	r3, [r7, #14]
    169a:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
    169c:	0019      	movs	r1, r3
		if (timeout-- == 0) {
    169e:	1e50      	subs	r0, r2, #1
    16a0:	2a00      	cmp	r2, #0
    16a2:	d100      	bne.n	16a6 <_i2c_m_sync_transfer+0x17e>
    16a4:	e779      	b.n	159a <_i2c_m_sync_transfer+0x72>
    16a6:	0002      	movs	r2, r0
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    16a8:	079b      	lsls	r3, r3, #30
    16aa:	d0f5      	beq.n	1698 <_i2c_m_sync_transfer+0x170>
	return I2C_OK;
    16ac:	2000      	movs	r0, #0
		if (ret) {
    16ae:	2800      	cmp	r0, #0
    16b0:	d000      	beq.n	16b4 <_i2c_m_sync_transfer+0x18c>
    16b2:	e775      	b.n	15a0 <_i2c_m_sync_transfer+0x78>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    16b4:	8a23      	ldrh	r3, [r4, #16]
    16b6:	0bdb      	lsrs	r3, r3, #15
    16b8:	d1fc      	bne.n	16b4 <_i2c_m_sync_transfer+0x18c>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    16ba:	8a23      	ldrh	r3, [r4, #16]
    16bc:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
    16be:	07ca      	lsls	r2, r1, #31
    16c0:	d5be      	bpl.n	1640 <_i2c_m_sync_transfer+0x118>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    16c2:	079a      	lsls	r2, r3, #30
    16c4:	d400      	bmi.n	16c8 <_i2c_m_sync_transfer+0x1a0>
    16c6:	e77d      	b.n	15c4 <_i2c_m_sync_transfer+0x9c>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    16c8:	2201      	movs	r2, #1
    16ca:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
    16cc:	886a      	ldrh	r2, [r5, #2]
    16ce:	2180      	movs	r1, #128	; 0x80
    16d0:	0149      	lsls	r1, r1, #5
    16d2:	430a      	orrs	r2, r1
    16d4:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    16d6:	886a      	ldrh	r2, [r5, #2]
    16d8:	4918      	ldr	r1, [pc, #96]	; (173c <_i2c_m_sync_transfer+0x214>)
    16da:	400a      	ands	r2, r1
    16dc:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    16de:	07db      	lsls	r3, r3, #31
    16e0:	d517      	bpl.n	1712 <_i2c_m_sync_transfer+0x1ea>
				return I2C_ERR_BUS;
    16e2:	2005      	movs	r0, #5
    16e4:	4240      	negs	r0, r0
    16e6:	e7d1      	b.n	168c <_i2c_m_sync_transfer+0x164>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    16e8:	6863      	ldr	r3, [r4, #4]
    16ea:	4a14      	ldr	r2, [pc, #80]	; (173c <_i2c_m_sync_transfer+0x214>)
    16ec:	4013      	ands	r3, r2
    16ee:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    16f0:	8a23      	ldrh	r3, [r4, #16]
    16f2:	0bdb      	lsrs	r3, r3, #15
    16f4:	d1fc      	bne.n	16f0 <_i2c_m_sync_transfer+0x1c8>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    16f6:	6862      	ldr	r2, [r4, #4]
    16f8:	23c0      	movs	r3, #192	; 0xc0
    16fa:	029b      	lsls	r3, r3, #10
    16fc:	4313      	orrs	r3, r2
    16fe:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1700:	8a23      	ldrh	r3, [r4, #16]
    1702:	0bdb      	lsrs	r3, r3, #15
    1704:	d1fc      	bne.n	1700 <_i2c_m_sync_transfer+0x1d8>
    1706:	e7b5      	b.n	1674 <_i2c_m_sync_transfer+0x14c>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1708:	2302      	movs	r3, #2
    170a:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
    170c:	2002      	movs	r0, #2
    170e:	4240      	negs	r0, r0
    1710:	e7bc      	b.n	168c <_i2c_m_sync_transfer+0x164>
			return I2C_ERR_BAD_ADDRESS;
    1712:	2004      	movs	r0, #4
    1714:	4240      	negs	r0, r0
    1716:	e7b9      	b.n	168c <_i2c_m_sync_transfer+0x164>
	return I2C_OK;
    1718:	2000      	movs	r0, #0
    171a:	e7b7      	b.n	168c <_i2c_m_sync_transfer+0x164>
		return I2C_ERR_BUSY;
    171c:	2006      	movs	r0, #6
    171e:	4240      	negs	r0, r0
    1720:	e73a      	b.n	1598 <_i2c_m_sync_transfer+0x70>
    1722:	46c0      	nop			; (mov r8, r8)
    1724:	000005c3 	.word	0x000005c3
    1728:	00011090 	.word	0x00011090
    172c:	00000a99 	.word	0x00000a99
    1730:	000005c4 	.word	0x000005c4
    1734:	000005c5 	.word	0x000005c5
    1738:	00001141 	.word	0x00001141
    173c:	fffffeff 	.word	0xfffffeff
    1740:	0000ffff 	.word	0x0000ffff

00001744 <_spi_m_sync_init>:

	return NULL;
}

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    1744:	b570      	push	{r4, r5, r6, lr}
    1746:	0006      	movs	r6, r0
    1748:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
    174a:	0008      	movs	r0, r1
    174c:	4b62      	ldr	r3, [pc, #392]	; (18d8 <_spi_m_sync_init+0x194>)
    174e:	4798      	blx	r3
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    1750:	2300      	movs	r3, #0
    1752:	2b01      	cmp	r3, #1
    1754:	d80b      	bhi.n	176e <_spi_m_sync_init+0x2a>
		if (sercomspi_regs[i].n == n) {
    1756:	0119      	lsls	r1, r3, #4
    1758:	4a60      	ldr	r2, [pc, #384]	; (18dc <_spi_m_sync_init+0x198>)
    175a:	1852      	adds	r2, r2, r1
    175c:	7bd2      	ldrb	r2, [r2, #15]
    175e:	4290      	cmp	r0, r2
    1760:	d002      	beq.n	1768 <_spi_m_sync_init+0x24>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    1762:	3301      	adds	r3, #1
    1764:	b2db      	uxtb	r3, r3
    1766:	e7f4      	b.n	1752 <_spi_m_sync_init+0xe>
			return &sercomspi_regs[i];
    1768:	4b5c      	ldr	r3, [pc, #368]	; (18dc <_spi_m_sync_init+0x198>)
    176a:	185d      	adds	r5, r3, r1
    176c:	e000      	b.n	1770 <_spi_m_sync_init+0x2c>
	return NULL;
    176e:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    1770:	2e00      	cmp	r6, #0
    1772:	d100      	bne.n	1776 <_spi_m_sync_init+0x32>
    1774:	e06a      	b.n	184c <_spi_m_sync_init+0x108>
    1776:	2c00      	cmp	r4, #0
    1778:	d100      	bne.n	177c <_spi_m_sync_init+0x38>
    177a:	e065      	b.n	1848 <_spi_m_sync_init+0x104>
    177c:	2001      	movs	r0, #1
    177e:	4a58      	ldr	r2, [pc, #352]	; (18e0 <_spi_m_sync_init+0x19c>)
    1780:	4958      	ldr	r1, [pc, #352]	; (18e4 <_spi_m_sync_init+0x1a0>)
    1782:	4b59      	ldr	r3, [pc, #356]	; (18e8 <_spi_m_sync_init+0x1a4>)
    1784:	4798      	blx	r3

	if (regs == NULL) {
    1786:	2d00      	cmp	r5, #0
    1788:	d100      	bne.n	178c <_spi_m_sync_init+0x48>
    178a:	e0a2      	b.n	18d2 <_spi_m_sync_init+0x18e>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    178c:	8a23      	ldrh	r3, [r4, #16]
    178e:	0bdb      	lsrs	r3, r3, #15
    1790:	d1fc      	bne.n	178c <_spi_m_sync_init+0x48>
    1792:	8a23      	ldrh	r3, [r4, #16]
    1794:	0bdb      	lsrs	r3, r3, #15
    1796:	d1fc      	bne.n	1792 <_spi_m_sync_init+0x4e>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    1798:	6823      	ldr	r3, [r4, #0]
		return ERR_INVALID_ARG;
	}

	hri_sercomspi_wait_for_sync(hw);
	if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    179a:	079b      	lsls	r3, r3, #30
    179c:	d507      	bpl.n	17ae <_spi_m_sync_init+0x6a>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    179e:	2300      	movs	r3, #0
    17a0:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    17a2:	8a23      	ldrh	r3, [r4, #16]
    17a4:	0bdb      	lsrs	r3, r3, #15
    17a6:	d1fc      	bne.n	17a2 <_spi_m_sync_init+0x5e>
    17a8:	8a23      	ldrh	r3, [r4, #16]
    17aa:	0bdb      	lsrs	r3, r3, #15
    17ac:	d1fc      	bne.n	17a8 <_spi_m_sync_init+0x64>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    17ae:	2301      	movs	r3, #1
    17b0:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    17b2:	8a23      	ldrh	r3, [r4, #16]
    17b4:	0bdb      	lsrs	r3, r3, #15
    17b6:	d1fc      	bne.n	17b2 <_spi_m_sync_init+0x6e>
    17b8:	8a23      	ldrh	r3, [r4, #16]
    17ba:	0bdb      	lsrs	r3, r3, #15
    17bc:	d1fc      	bne.n	17b8 <_spi_m_sync_init+0x74>
		hri_sercomspi_wait_for_sync(hw);
	}
	hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST);
	hri_sercomspi_wait_for_sync(hw);

	dev->prvt = hw;
    17be:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
    17c0:	782b      	ldrb	r3, [r5, #0]
    17c2:	786a      	ldrb	r2, [r5, #1]
    17c4:	0212      	lsls	r2, r2, #8
    17c6:	431a      	orrs	r2, r3
    17c8:	78ab      	ldrb	r3, [r5, #2]
    17ca:	041b      	lsls	r3, r3, #16
    17cc:	431a      	orrs	r2, r3
    17ce:	78eb      	ldrb	r3, [r5, #3]
    17d0:	061b      	lsls	r3, r3, #24
    17d2:	4313      	orrs	r3, r2
    17d4:	221c      	movs	r2, #28
    17d6:	4013      	ands	r3, r2
    17d8:	2b08      	cmp	r3, #8
    17da:	d039      	beq.n	1850 <_spi_m_sync_init+0x10c>
	ASSERT(hw && regs);
    17dc:	2c00      	cmp	r4, #0
    17de:	d100      	bne.n	17e2 <_spi_m_sync_init+0x9e>
    17e0:	e073      	b.n	18ca <_spi_m_sync_init+0x186>
    17e2:	2d00      	cmp	r5, #0
    17e4:	d100      	bne.n	17e8 <_spi_m_sync_init+0xa4>
    17e6:	e06e      	b.n	18c6 <_spi_m_sync_init+0x182>
    17e8:	2001      	movs	r0, #1
    17ea:	4a40      	ldr	r2, [pc, #256]	; (18ec <_spi_m_sync_init+0x1a8>)
    17ec:	493d      	ldr	r1, [pc, #244]	; (18e4 <_spi_m_sync_init+0x1a0>)
    17ee:	4b3e      	ldr	r3, [pc, #248]	; (18e8 <_spi_m_sync_init+0x1a4>)
    17f0:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    17f2:	782b      	ldrb	r3, [r5, #0]
    17f4:	786a      	ldrb	r2, [r5, #1]
    17f6:	0212      	lsls	r2, r2, #8
    17f8:	431a      	orrs	r2, r3
    17fa:	78ab      	ldrb	r3, [r5, #2]
    17fc:	041b      	lsls	r3, r3, #16
    17fe:	431a      	orrs	r2, r3
    1800:	78eb      	ldrb	r3, [r5, #3]
    1802:	061b      	lsls	r3, r3, #24
    1804:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    1806:	4a3a      	ldr	r2, [pc, #232]	; (18f0 <_spi_m_sync_init+0x1ac>)
    1808:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    180a:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    180c:	8a23      	ldrh	r3, [r4, #16]
    180e:	0bdb      	lsrs	r3, r3, #15
    1810:	d1fc      	bne.n	180c <_spi_m_sync_init+0xc8>
	    hw, (regs->ctrlb & ~(SERCOM_SPI_CTRLB_AMODE_Msk | SERCOM_SPI_CTRLB_PLOADEN)) | (SERCOM_SPI_CTRLB_RXEN));
    1812:	792b      	ldrb	r3, [r5, #4]
    1814:	796a      	ldrb	r2, [r5, #5]
    1816:	0212      	lsls	r2, r2, #8
    1818:	431a      	orrs	r2, r3
    181a:	79ab      	ldrb	r3, [r5, #6]
    181c:	041b      	lsls	r3, r3, #16
    181e:	431a      	orrs	r2, r3
    1820:	79eb      	ldrb	r3, [r5, #7]
    1822:	061b      	lsls	r3, r3, #24
    1824:	4313      	orrs	r3, r2
    1826:	4a33      	ldr	r2, [pc, #204]	; (18f4 <_spi_m_sync_init+0x1b0>)
    1828:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
    182a:	2280      	movs	r2, #128	; 0x80
    182c:	0292      	lsls	r2, r2, #10
    182e:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    1830:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
    1832:	7b2b      	ldrb	r3, [r5, #12]
	((Sercom *)hw)->SPI.BAUD.reg = data;
    1834:	72a3      	strb	r3, [r4, #10]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    1836:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    1838:	7223      	strb	r3, [r4, #8]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    183a:	792b      	ldrb	r3, [r5, #4]
    183c:	075b      	lsls	r3, r3, #29
    183e:	d146      	bne.n	18ce <_spi_m_sync_init+0x18a>
    1840:	2301      	movs	r3, #1
    1842:	7133      	strb	r3, [r6, #4]

	return ERR_NONE;
    1844:	2000      	movs	r0, #0
}
    1846:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(dev && hw);
    1848:	2000      	movs	r0, #0
    184a:	e798      	b.n	177e <_spi_m_sync_init+0x3a>
    184c:	2000      	movs	r0, #0
    184e:	e796      	b.n	177e <_spi_m_sync_init+0x3a>
	ASSERT(hw && regs);
    1850:	2c00      	cmp	r4, #0
    1852:	d036      	beq.n	18c2 <_spi_m_sync_init+0x17e>
    1854:	2d00      	cmp	r5, #0
    1856:	d032      	beq.n	18be <_spi_m_sync_init+0x17a>
    1858:	2001      	movs	r0, #1
    185a:	4a27      	ldr	r2, [pc, #156]	; (18f8 <_spi_m_sync_init+0x1b4>)
    185c:	4921      	ldr	r1, [pc, #132]	; (18e4 <_spi_m_sync_init+0x1a0>)
    185e:	4b22      	ldr	r3, [pc, #136]	; (18e8 <_spi_m_sync_init+0x1a4>)
    1860:	4798      	blx	r3
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    1862:	782b      	ldrb	r3, [r5, #0]
    1864:	786a      	ldrb	r2, [r5, #1]
    1866:	0212      	lsls	r2, r2, #8
    1868:	431a      	orrs	r2, r3
    186a:	78ab      	ldrb	r3, [r5, #2]
    186c:	041b      	lsls	r3, r3, #16
    186e:	431a      	orrs	r2, r3
    1870:	78eb      	ldrb	r3, [r5, #3]
    1872:	061b      	lsls	r3, r3, #24
    1874:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    1876:	4a1e      	ldr	r2, [pc, #120]	; (18f0 <_spi_m_sync_init+0x1ac>)
    1878:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    187a:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    187c:	8a23      	ldrh	r3, [r4, #16]
    187e:	0bdb      	lsrs	r3, r3, #15
    1880:	d1fc      	bne.n	187c <_spi_m_sync_init+0x138>
	hri_sercomspi_write_CTRLB_reg(hw, regs->ctrlb | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_PLOADEN));
    1882:	792b      	ldrb	r3, [r5, #4]
    1884:	796a      	ldrb	r2, [r5, #5]
    1886:	0212      	lsls	r2, r2, #8
    1888:	431a      	orrs	r2, r3
    188a:	79ab      	ldrb	r3, [r5, #6]
    188c:	041b      	lsls	r3, r3, #16
    188e:	431a      	orrs	r2, r3
    1890:	79eb      	ldrb	r3, [r5, #7]
    1892:	061b      	lsls	r3, r3, #24
    1894:	4313      	orrs	r3, r2
    1896:	4a19      	ldr	r2, [pc, #100]	; (18fc <_spi_m_sync_init+0x1b8>)
    1898:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    189a:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
    189c:	7a2b      	ldrb	r3, [r5, #8]
    189e:	7a6a      	ldrb	r2, [r5, #9]
    18a0:	0212      	lsls	r2, r2, #8
    18a2:	431a      	orrs	r2, r3
    18a4:	7aab      	ldrb	r3, [r5, #10]
    18a6:	041b      	lsls	r3, r3, #16
    18a8:	431a      	orrs	r2, r3
    18aa:	7aeb      	ldrb	r3, [r5, #11]
    18ac:	061b      	lsls	r3, r3, #24
    18ae:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
    18b0:	6163      	str	r3, [r4, #20]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    18b2:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    18b4:	7223      	strb	r3, [r4, #8]
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
    18b6:	8a23      	ldrh	r3, [r4, #16]
    18b8:	0bdb      	lsrs	r3, r3, #15
	while (hri_sercomspi_is_syncing(hw))
    18ba:	d1fc      	bne.n	18b6 <_spi_m_sync_init+0x172>
    18bc:	e7bd      	b.n	183a <_spi_m_sync_init+0xf6>
	ASSERT(hw && regs);
    18be:	2000      	movs	r0, #0
    18c0:	e7cb      	b.n	185a <_spi_m_sync_init+0x116>
    18c2:	2000      	movs	r0, #0
    18c4:	e7c9      	b.n	185a <_spi_m_sync_init+0x116>
	ASSERT(hw && regs);
    18c6:	2000      	movs	r0, #0
    18c8:	e78f      	b.n	17ea <_spi_m_sync_init+0xa6>
    18ca:	2000      	movs	r0, #0
    18cc:	e78d      	b.n	17ea <_spi_m_sync_init+0xa6>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    18ce:	2302      	movs	r3, #2
    18d0:	e7b7      	b.n	1842 <_spi_m_sync_init+0xfe>
		return ERR_INVALID_ARG;
    18d2:	200d      	movs	r0, #13
    18d4:	4240      	negs	r0, r0
    18d6:	e7b6      	b.n	1846 <_spi_m_sync_init+0x102>
    18d8:	00000fa1 	.word	0x00000fa1
    18dc:	000110d4 	.word	0x000110d4
    18e0:	000008cb 	.word	0x000008cb
    18e4:	00011090 	.word	0x00011090
    18e8:	00000a99 	.word	0x00000a99
    18ec:	0000089a 	.word	0x0000089a
    18f0:	fffffefc 	.word	0xfffffefc
    18f4:	fffd3fbf 	.word	0xfffd3fbf
    18f8:	000008ab 	.word	0x000008ab
    18fc:	00020040 	.word	0x00020040

00001900 <_spi_m_sync_enable>:

	return _spi_deinit(hw);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    1900:	b510      	push	{r4, lr}
    1902:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    1904:	d00d      	beq.n	1922 <_spi_m_sync_enable+0x22>
    1906:	6803      	ldr	r3, [r0, #0]
    1908:	2b00      	cmp	r3, #0
    190a:	d008      	beq.n	191e <_spi_m_sync_enable+0x1e>
    190c:	2001      	movs	r0, #1
    190e:	4a06      	ldr	r2, [pc, #24]	; (1928 <_spi_m_sync_enable+0x28>)
    1910:	4906      	ldr	r1, [pc, #24]	; (192c <_spi_m_sync_enable+0x2c>)
    1912:	4b07      	ldr	r3, [pc, #28]	; (1930 <_spi_m_sync_enable+0x30>)
    1914:	4798      	blx	r3

	return _spi_sync_enable(dev->prvt);
    1916:	6820      	ldr	r0, [r4, #0]
    1918:	4b06      	ldr	r3, [pc, #24]	; (1934 <_spi_m_sync_enable+0x34>)
    191a:	4798      	blx	r3
}
    191c:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    191e:	2000      	movs	r0, #0
    1920:	e7f5      	b.n	190e <_spi_m_sync_enable+0xe>
    1922:	2000      	movs	r0, #0
    1924:	e7f3      	b.n	190e <_spi_m_sync_enable+0xe>
    1926:	46c0      	nop			; (mov r8, r8)
    1928:	00000932 	.word	0x00000932
    192c:	00011090 	.word	0x00011090
    1930:	00000a99 	.word	0x00000a99
    1934:	00001029 	.word	0x00001029

00001938 <_spi_m_sync_trans>:
	ctrl->txcnt++;
	hri_sercomspi_write_DATA_reg(hw, data);
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    1938:	b570      	push	{r4, r5, r6, lr}
    193a:	b088      	sub	sp, #32
    193c:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    193e:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    1940:	680b      	ldr	r3, [r1, #0]
    1942:	9303      	str	r3, [sp, #12]
    1944:	684b      	ldr	r3, [r1, #4]
    1946:	9304      	str	r3, [sp, #16]
    1948:	2300      	movs	r3, #0
    194a:	9305      	str	r3, [sp, #20]
    194c:	9306      	str	r3, [sp, #24]
    194e:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    1950:	2800      	cmp	r0, #0
    1952:	d014      	beq.n	197e <_spi_m_sync_trans+0x46>
    1954:	2c00      	cmp	r4, #0
    1956:	d010      	beq.n	197a <_spi_m_sync_trans+0x42>
    1958:	2001      	movs	r0, #1
    195a:	4a2d      	ldr	r2, [pc, #180]	; (1a10 <_spi_m_sync_trans+0xd8>)
    195c:	492d      	ldr	r1, [pc, #180]	; (1a14 <_spi_m_sync_trans+0xdc>)
    195e:	4b2e      	ldr	r3, [pc, #184]	; (1a18 <_spi_m_sync_trans+0xe0>)
    1960:	4798      	blx	r3
    1962:	8a23      	ldrh	r3, [r4, #16]
    1964:	0bdb      	lsrs	r3, r3, #15

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(hw)) {
    1966:	d14f      	bne.n	1a08 <_spi_m_sync_trans+0xd0>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1968:	8a23      	ldrh	r3, [r4, #16]
    196a:	0bdb      	lsrs	r3, r3, #15
    196c:	d1fc      	bne.n	1968 <_spi_m_sync_trans+0x30>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    196e:	6823      	ldr	r3, [r4, #0]
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    1970:	079b      	lsls	r3, r3, #30
    1972:	d418      	bmi.n	19a6 <_spi_m_sync_trans+0x6e>
		return ERR_NOT_INITIALIZED;
    1974:	2014      	movs	r0, #20
    1976:	4240      	negs	r0, r0
    1978:	e044      	b.n	1a04 <_spi_m_sync_trans+0xcc>
	ASSERT(dev && hw);
    197a:	2000      	movs	r0, #0
    197c:	e7ed      	b.n	195a <_spi_m_sync_trans+0x22>
    197e:	2000      	movs	r0, #0
    1980:	e7eb      	b.n	195a <_spi_m_sync_trans+0x22>
		return false;
    1982:	2200      	movs	r2, #0
    1984:	e026      	b.n	19d4 <_spi_m_sync_trans+0x9c>
			data |= (*ctrl->txbuf) << 8;
    1986:	7858      	ldrb	r0, [r3, #1]
    1988:	0200      	lsls	r0, r0, #8
    198a:	4301      	orrs	r1, r0
			ctrl->txbuf++;
    198c:	3302      	adds	r3, #2
    198e:	9303      	str	r3, [sp, #12]
	ctrl->txcnt++;
    1990:	3201      	adds	r2, #1
    1992:	9205      	str	r2, [sp, #20]
	hri_sercomspi_write_DATA_reg(hw, data);
    1994:	b289      	uxth	r1, r1
	((Sercom *)hw)->SPI.DATA.reg = data;
    1996:	8321      	strh	r1, [r4, #24]
			if (ctrl.rxcnt >= ctrl.txcnt) {
				_spi_tx_check(hw, iflag, &ctrl);
			}
		}

		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    1998:	9805      	ldr	r0, [sp, #20]
    199a:	68ab      	ldr	r3, [r5, #8]
    199c:	4298      	cmp	r0, r3
    199e:	d302      	bcc.n	19a6 <_spi_m_sync_trans+0x6e>
    19a0:	9a06      	ldr	r2, [sp, #24]
    19a2:	4293      	cmp	r3, r2
    19a4:	d929      	bls.n	19fa <_spi_m_sync_trans+0xc2>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    19a6:	7ba3      	ldrb	r3, [r4, #14]
    19a8:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    19aa:	075a      	lsls	r2, r3, #29
    19ac:	d5e9      	bpl.n	1982 <_spi_m_sync_trans+0x4a>
	return ((Sercom *)hw)->SPI.DATA.reg;
    19ae:	8b22      	ldrh	r2, [r4, #24]
    19b0:	b292      	uxth	r2, r2
	if (ctrl->rxbuf) {
    19b2:	9904      	ldr	r1, [sp, #16]
    19b4:	2900      	cmp	r1, #0
    19b6:	d008      	beq.n	19ca <_spi_m_sync_trans+0x92>
		*ctrl->rxbuf++ = (uint8_t)data;
    19b8:	1c48      	adds	r0, r1, #1
    19ba:	9004      	str	r0, [sp, #16]
    19bc:	700a      	strb	r2, [r1, #0]
		if (ctrl->char_size > 1) {
    19be:	2e01      	cmp	r6, #1
    19c0:	d903      	bls.n	19ca <_spi_m_sync_trans+0x92>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    19c2:	1c88      	adds	r0, r1, #2
    19c4:	9004      	str	r0, [sp, #16]
    19c6:	0a12      	lsrs	r2, r2, #8
    19c8:	704a      	strb	r2, [r1, #1]
	ctrl->rxcnt++;
    19ca:	9a06      	ldr	r2, [sp, #24]
    19cc:	9201      	str	r2, [sp, #4]
    19ce:	3201      	adds	r2, #1
    19d0:	9206      	str	r2, [sp, #24]
	return true;
    19d2:	2201      	movs	r2, #1
		if (!_spi_rx_check(hw, iflag, &ctrl)) {
    19d4:	2a00      	cmp	r2, #0
    19d6:	d1df      	bne.n	1998 <_spi_m_sync_trans+0x60>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    19d8:	9906      	ldr	r1, [sp, #24]
    19da:	9a05      	ldr	r2, [sp, #20]
    19dc:	4291      	cmp	r1, r2
    19de:	d3db      	bcc.n	1998 <_spi_m_sync_trans+0x60>
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    19e0:	07db      	lsls	r3, r3, #31
    19e2:	d5d9      	bpl.n	1998 <_spi_m_sync_trans+0x60>
	if (ctrl->txbuf) {
    19e4:	9b03      	ldr	r3, [sp, #12]
    19e6:	2b00      	cmp	r3, #0
    19e8:	d005      	beq.n	19f6 <_spi_m_sync_trans+0xbe>
		data = *ctrl->txbuf++;
    19ea:	1c59      	adds	r1, r3, #1
    19ec:	9103      	str	r1, [sp, #12]
    19ee:	7819      	ldrb	r1, [r3, #0]
		if (ctrl->char_size > 1) {
    19f0:	2e01      	cmp	r6, #1
    19f2:	d8c8      	bhi.n	1986 <_spi_m_sync_trans+0x4e>
    19f4:	e7cc      	b.n	1990 <_spi_m_sync_trans+0x58>
		data = SPI_DUMMY_CHAR;
    19f6:	4909      	ldr	r1, [pc, #36]	; (1a1c <_spi_m_sync_trans+0xe4>)
    19f8:	e7ca      	b.n	1990 <_spi_m_sync_trans+0x58>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    19fa:	7ba3      	ldrb	r3, [r4, #14]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    19fc:	079b      	lsls	r3, r3, #30
    19fe:	d0fc      	beq.n	19fa <_spi_m_sync_trans+0xc2>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1a00:	2303      	movs	r3, #3
    1a02:	73a3      	strb	r3, [r4, #14]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    1a04:	b008      	add	sp, #32
    1a06:	bd70      	pop	{r4, r5, r6, pc}
		return ERR_BUSY;
    1a08:	2004      	movs	r0, #4
    1a0a:	4240      	negs	r0, r0
    1a0c:	e7fa      	b.n	1a04 <_spi_m_sync_trans+0xcc>
    1a0e:	46c0      	nop			; (mov r8, r8)
    1a10:	00000a29 	.word	0x00000a29
    1a14:	00011090 	.word	0x00011090
    1a18:	00000a99 	.word	0x00000a99
    1a1c:	000001ff 	.word	0x000001ff

00001a20 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    1a20:	4b0f      	ldr	r3, [pc, #60]	; (1a60 <_sysctrl_init_sources+0x40>)
    1a22:	6a19      	ldr	r1, [r3, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    1a24:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    1a26:	6a1a      	ldr	r2, [r3, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    1a28:	0f92      	lsrs	r2, r2, #30
    1a2a:	0792      	lsls	r2, r2, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    1a2c:	0409      	lsls	r1, r1, #16
    1a2e:	480d      	ldr	r0, [pc, #52]	; (1a64 <_sysctrl_init_sources+0x44>)
    1a30:	4001      	ands	r1, r0
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    1a32:	430a      	orrs	r2, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    1a34:	490c      	ldr	r1, [pc, #48]	; (1a68 <_sysctrl_init_sources+0x48>)
    1a36:	430a      	orrs	r2, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    1a38:	621a      	str	r2, [r3, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    1a3a:	699a      	ldr	r2, [r3, #24]
    1a3c:	2102      	movs	r1, #2
    1a3e:	430a      	orrs	r2, r1
    1a40:	619a      	str	r2, [r3, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    1a42:	7f1a      	ldrb	r2, [r3, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    1a44:	311d      	adds	r1, #29
    1a46:	400a      	ands	r2, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    1a48:	771a      	strb	r2, [r3, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    1a4a:	4b05      	ldr	r3, [pc, #20]	; (1a60 <_sysctrl_init_sources+0x40>)
    1a4c:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    1a4e:	071b      	lsls	r3, r3, #28
    1a50:	d5fb      	bpl.n	1a4a <_sysctrl_init_sources+0x2a>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    1a52:	4a03      	ldr	r2, [pc, #12]	; (1a60 <_sysctrl_init_sources+0x40>)
    1a54:	6a13      	ldr	r3, [r2, #32]
    1a56:	2180      	movs	r1, #128	; 0x80
    1a58:	430b      	orrs	r3, r1
    1a5a:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    1a5c:	4770      	bx	lr
    1a5e:	46c0      	nop			; (mov r8, r8)
    1a60:	40000800 	.word	0x40000800
    1a64:	0fff0000 	.word	0x0fff0000
    1a68:	00000302 	.word	0x00000302

00001a6c <_sysctrl_init_referenced_generators>:
}

static inline void hri_sysctrl_write_DFLLCTRL_reg(const void *const hw, hri_sysctrl_dfllctrl_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    1a6c:	2202      	movs	r2, #2
    1a6e:	4b1b      	ldr	r3, [pc, #108]	; (1adc <_sysctrl_init_referenced_generators+0x70>)
    1a70:	849a      	strh	r2, [r3, #36]	; 0x24
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    1a72:	4b1a      	ldr	r3, [pc, #104]	; (1adc <_sysctrl_init_referenced_generators+0x70>)
    1a74:	68db      	ldr	r3, [r3, #12]
	hri_gclk_write_CLKCTRL_reg(GCLK,
	                           GCLK_CLKCTRL_ID(0) | GCLK_CLKCTRL_GEN(CONF_DFLL_GCLK) | (1 << GCLK_CLKCTRL_CLKEN_Pos));
#endif

	hri_sysctrl_write_DFLLCTRL_reg(hw, SYSCTRL_DFLLCTRL_ENABLE);
	while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    1a76:	06db      	lsls	r3, r3, #27
    1a78:	d5fb      	bpl.n	1a72 <_sysctrl_init_referenced_generators+0x6>
}

static inline void hri_sysctrl_write_DFLLMUL_reg(const void *const hw, hri_sysctrl_dfllmul_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLMUL.reg = data;
    1a7a:	4a19      	ldr	r2, [pc, #100]	; (1ae0 <_sysctrl_init_referenced_generators+0x74>)
    1a7c:	4b17      	ldr	r3, [pc, #92]	; (1adc <_sysctrl_init_referenced_generators+0x70>)
    1a7e:	62da      	str	r2, [r3, #44]	; 0x2c
		;

	hri_sysctrl_write_DFLLMUL_reg(hw,
	                              SYSCTRL_DFLLMUL_CSTEP(CONF_DFLL_CSTEP) | SYSCTRL_DFLLMUL_FSTEP(CONF_DFLL_FSTEP)
	                                  | SYSCTRL_DFLLMUL_MUL(CONF_DFLL_MUL));
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    1a80:	4b18      	ldr	r3, [pc, #96]	; (1ae4 <_sysctrl_init_referenced_generators+0x78>)
    1a82:	681b      	ldr	r3, [r3, #0]
    1a84:	0e9b      	lsrs	r3, r3, #26
    1a86:	2b3f      	cmp	r3, #63	; 0x3f
    1a88:	d020      	beq.n	1acc <_sysctrl_init_referenced_generators+0x60>
    1a8a:	029b      	lsls	r3, r3, #10
    1a8c:	2280      	movs	r2, #128	; 0x80
    1a8e:	0092      	lsls	r2, r2, #2
    1a90:	4313      	orrs	r3, r2
	((Sysctrl *)hw)->DFLLVAL.reg = data;
    1a92:	4a12      	ldr	r2, [pc, #72]	; (1adc <_sysctrl_init_referenced_generators+0x70>)
    1a94:	6293      	str	r3, [r2, #40]	; 0x28
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    1a96:	2302      	movs	r3, #2
    1a98:	8493      	strh	r3, [r2, #36]	; 0x24
	tmp = ((Sysctrl *)hw)->DFLLCTRL.reg;
    1a9a:	8c93      	ldrh	r3, [r2, #36]	; 0x24
	hri_sysctrl_write_DFLLCTRL_reg(hw, tmp);
#endif

#if CONF_DFLL_CONFIG == 1
#if CONF_DFLL_ENABLE == 1
	if (hri_sysctrl_get_DFLLCTRL_MODE_bit(hw)) {
    1a9c:	075b      	lsls	r3, r3, #29
    1a9e:	d518      	bpl.n	1ad2 <_sysctrl_init_referenced_generators+0x66>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    1aa0:	4b0e      	ldr	r3, [pc, #56]	; (1adc <_sysctrl_init_referenced_generators+0x70>)
    1aa2:	68da      	ldr	r2, [r3, #12]
	tmp &= mask;
    1aa4:	23d0      	movs	r3, #208	; 0xd0
    1aa6:	4013      	ands	r3, r2
		hri_sysctrl_pclksr_reg_t status_mask
		    = SYSCTRL_PCLKSR_DFLLRDY | SYSCTRL_PCLKSR_DFLLLCKF | SYSCTRL_PCLKSR_DFLLLCKC;

		while (hri_sysctrl_get_PCLKSR_reg(hw, status_mask) != status_mask)
    1aa8:	2bd0      	cmp	r3, #208	; 0xd0
    1aaa:	d1f9      	bne.n	1aa0 <_sysctrl_init_referenced_generators+0x34>
	((Sysctrl *)hw)->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ONDEMAND;
    1aac:	4a0b      	ldr	r2, [pc, #44]	; (1adc <_sysctrl_init_referenced_generators+0x70>)
    1aae:	8c93      	ldrh	r3, [r2, #36]	; 0x24
    1ab0:	2180      	movs	r1, #128	; 0x80
    1ab2:	430b      	orrs	r3, r1
    1ab4:	b29b      	uxth	r3, r3
    1ab6:	8493      	strh	r3, [r2, #36]	; 0x24
	return (((Gclk *)hw)->STATUS.reg & GCLK_STATUS_SYNCBUSY) >> GCLK_STATUS_SYNCBUSY_Pos;
    1ab8:	4b0b      	ldr	r3, [pc, #44]	; (1ae8 <_sysctrl_init_referenced_generators+0x7c>)
    1aba:	785b      	ldrb	r3, [r3, #1]
	hri_sysctrl_set_DFLLCTRL_ONDEMAND_bit(hw);
#endif
#endif

#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_get_STATUS_SYNCBUSY_bit(GCLK))
    1abc:	09db      	lsrs	r3, r3, #7
    1abe:	d1fb      	bne.n	1ab8 <_sysctrl_init_referenced_generators+0x4c>
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    1ac0:	4a06      	ldr	r2, [pc, #24]	; (1adc <_sysctrl_init_referenced_generators+0x70>)
    1ac2:	6993      	ldr	r3, [r2, #24]
    1ac4:	2102      	movs	r1, #2
    1ac6:	438b      	bics	r3, r1
    1ac8:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    1aca:	4770      	bx	lr
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    1acc:	23fc      	movs	r3, #252	; 0xfc
    1ace:	01db      	lsls	r3, r3, #7
    1ad0:	e7df      	b.n	1a92 <_sysctrl_init_referenced_generators+0x26>
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    1ad2:	4b02      	ldr	r3, [pc, #8]	; (1adc <_sysctrl_init_referenced_generators+0x70>)
    1ad4:	68db      	ldr	r3, [r3, #12]
		while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    1ad6:	06db      	lsls	r3, r3, #27
    1ad8:	d5fb      	bpl.n	1ad2 <_sysctrl_init_referenced_generators+0x66>
    1ada:	e7e7      	b.n	1aac <_sysctrl_init_referenced_generators+0x40>
    1adc:	40000800 	.word	0x40000800
    1ae0:	04010000 	.word	0x04010000
    1ae4:	00806024 	.word	0x00806024
    1ae8:	40000c00 	.word	0x40000c00

00001aec <tc_pwm_interrupt_handler>:
 * \internal TC interrupt handler for PWM
 *
 * \param[in] instance TC instance number
 */
static void tc_pwm_interrupt_handler(struct _pwm_device *device)
{
    1aec:	b570      	push	{r4, r5, r6, lr}
    1aee:	0005      	movs	r5, r0
	void *const hw = device->hw;
    1af0:	6904      	ldr	r4, [r0, #16]
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_MC1;
}

static inline bool hri_tc_get_interrupt_OVF_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTFLAG.reg & TC_INTFLAG_OVF) >> TC_INTFLAG_OVF_Pos;
    1af2:	7ba3      	ldrb	r3, [r4, #14]

	if (hri_tc_get_interrupt_OVF_bit(hw)) {
    1af4:	07db      	lsls	r3, r3, #31
    1af6:	d505      	bpl.n	1b04 <tc_pwm_interrupt_handler+0x18>
}

static inline void hri_tc_clear_interrupt_OVF_bit(const void *const hw)
{
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_OVF;
    1af8:	2301      	movs	r3, #1
    1afa:	73a3      	strb	r3, [r4, #14]
		hri_tc_clear_interrupt_OVF_bit(hw);
		if (NULL != device->callback.pwm_period_cb) {
    1afc:	6803      	ldr	r3, [r0, #0]
    1afe:	2b00      	cmp	r3, #0
    1b00:	d000      	beq.n	1b04 <tc_pwm_interrupt_handler+0x18>
			device->callback.pwm_period_cb(device);
    1b02:	4798      	blx	r3
	((Tc *)hw)->COUNT16.INTENSET.reg = TC_INTENSET_ERR;
}

static inline bool hri_tc_get_INTEN_ERR_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTENSET.reg & TC_INTENSET_ERR) >> TC_INTENSET_ERR_Pos;
    1b04:	7b63      	ldrb	r3, [r4, #13]
		}
	}
	if (hri_tc_get_INTEN_ERR_bit(hw)) {
    1b06:	079b      	lsls	r3, r3, #30
    1b08:	d506      	bpl.n	1b18 <tc_pwm_interrupt_handler+0x2c>
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_ERR;
    1b0a:	2302      	movs	r3, #2
    1b0c:	73a3      	strb	r3, [r4, #14]
		hri_tc_clear_interrupt_ERR_bit(hw);
		if (NULL != device->callback.pwm_error_cb) {
    1b0e:	686b      	ldr	r3, [r5, #4]
    1b10:	2b00      	cmp	r3, #0
    1b12:	d001      	beq.n	1b18 <tc_pwm_interrupt_handler+0x2c>
			device->callback.pwm_error_cb(device);
    1b14:	0028      	movs	r0, r5
    1b16:	4798      	blx	r3
		}
	}
}
    1b18:	bd70      	pop	{r4, r5, r6, pc}
	...

00001b1c <TC6_Handler>:

/**
 * \brief TC interrupt handler
 */
void TC6_Handler(void)
{
    1b1c:	b510      	push	{r4, lr}
	tc_pwm_interrupt_handler(_tc6_dev);
    1b1e:	4b02      	ldr	r3, [pc, #8]	; (1b28 <TC6_Handler+0xc>)
    1b20:	6818      	ldr	r0, [r3, #0]
    1b22:	4b02      	ldr	r3, [pc, #8]	; (1b2c <TC6_Handler+0x10>)
    1b24:	4798      	blx	r3
}
    1b26:	bd10      	pop	{r4, pc}
    1b28:	20000a50 	.word	0x20000a50
    1b2c:	00001aed 	.word	0x00001aed

00001b30 <TC7_Handler>:

/**
 * \brief TC interrupt handler
 */
void TC7_Handler(void)
{
    1b30:	b510      	push	{r4, lr}
	tc_pwm_interrupt_handler(_tc7_dev);
    1b32:	4b02      	ldr	r3, [pc, #8]	; (1b3c <TC7_Handler+0xc>)
    1b34:	6818      	ldr	r0, [r3, #0]
    1b36:	4b02      	ldr	r3, [pc, #8]	; (1b40 <TC7_Handler+0x10>)
    1b38:	4798      	blx	r3
}
    1b3a:	bd10      	pop	{r4, pc}
    1b3c:	20000a54 	.word	0x20000a54
    1b40:	00001aed 	.word	0x00001aed

00001b44 <ADS1x1x_write_register>:
/*!
@brief  Writes 16 bits to the specified destination register.
*/
/**************************************************************************/
void ADS1x1x_write_register(uint8_t i2c_address, uint8_t reg, uint16_t value)
{
    1b44:	b500      	push	{lr}
    1b46:	b083      	sub	sp, #12
	
	uint8_t tmpData[] = {reg, (uint8_t)(value>>8), (uint8_t)(value&0xff)};
    1b48:	ab01      	add	r3, sp, #4
    1b4a:	7019      	strb	r1, [r3, #0]
    1b4c:	0a11      	lsrs	r1, r2, #8
    1b4e:	7059      	strb	r1, [r3, #1]
    1b50:	709a      	strb	r2, [r3, #2]
	I2C_write_batch(i2c_address, (uint8_t *)&tmpData, sizeof(tmpData));
    1b52:	2203      	movs	r2, #3
    1b54:	0019      	movs	r1, r3
    1b56:	4b02      	ldr	r3, [pc, #8]	; (1b60 <ADS1x1x_write_register+0x1c>)
    1b58:	4798      	blx	r3
	//ADS1x1x_i2c_start_write(i2c_address);
	//ADS1x1x_i2c_write(reg);
	//ADS1x1x_i2c_write((uint8_t)(value>>8));
	//ADS1x1x_i2c_write((uint8_t)(value&0xff));
	//ADS1x1x_i2c_stop();
}
    1b5a:	b003      	add	sp, #12
    1b5c:	bd00      	pop	{pc}
    1b5e:	46c0      	nop			; (mov r8, r8)
    1b60:	000025bd 	.word	0x000025bd

00001b64 <ADS1x1x_read_register>:
/*!
@brief  Read 16 bits from the specified destination register.
*/
/**************************************************************************/
uint16_t ADS1x1x_read_register(uint8_t i2c_address, uint8_t reg)
{
    1b64:	b530      	push	{r4, r5, lr}
    1b66:	b083      	sub	sp, #12
	uint16_t result = 0;
	uint8_t tmpData[2];
	I2C_read_batch(i2c_address, reg, (uint8_t *)&tmpData, sizeof(tmpData));
    1b68:	ac01      	add	r4, sp, #4
    1b6a:	2302      	movs	r3, #2
    1b6c:	0022      	movs	r2, r4
    1b6e:	4d04      	ldr	r5, [pc, #16]	; (1b80 <ADS1x1x_read_register+0x1c>)
    1b70:	47a8      	blx	r5
	result = tmpData[0] << 8;
    1b72:	7820      	ldrb	r0, [r4, #0]
    1b74:	0200      	lsls	r0, r0, #8
	result |= tmpData[1];
    1b76:	7863      	ldrb	r3, [r4, #1]
    1b78:	4318      	orrs	r0, r3
	return result;
}
    1b7a:	b003      	add	sp, #12
    1b7c:	bd30      	pop	{r4, r5, pc}
    1b7e:	46c0      	nop			; (mov r8, r8)
    1b80:	000025f1 	.word	0x000025f1

00001b84 <ADS1x1x_start_conversion>:
The user must provide a valid pointer to a
correctly filled ADS1x1x_config_t structure.
*/
/**************************************************************************/
void ADS1x1x_start_conversion(ADS1x1x_config_t *p_config)
{
    1b84:	b510      	push	{r4, lr}
	// Write configuration to the ADC.
	ADS1x1x_write_register(p_config->i2c_address,ADS1x1x_REG_POINTER_CONFIG,p_config->config);
    1b86:	8842      	ldrh	r2, [r0, #2]
    1b88:	7840      	ldrb	r0, [r0, #1]
    1b8a:	2101      	movs	r1, #1
    1b8c:	4b01      	ldr	r3, [pc, #4]	; (1b94 <ADS1x1x_start_conversion+0x10>)
    1b8e:	4798      	blx	r3
}
    1b90:	bd10      	pop	{r4, pc}
    1b92:	46c0      	nop			; (mov r8, r8)
    1b94:	00001b45 	.word	0x00001b45

00001b98 <ADS1x1x_read>:
The user must provide a valid pointer to a
correctly filled ADS1x1x_config_t structure.
*/
/**************************************************************************/
int16_t ADS1x1x_read(ADS1x1x_config_t *p_config)
{
    1b98:	b510      	push	{r4, lr}
    1b9a:	0004      	movs	r4, r0
	// Read the conversion result.
	int16_t result = (int16_t)ADS1x1x_read_register(p_config->i2c_address,ADS1x1x_REG_POINTER_CONVERSION);
    1b9c:	7840      	ldrb	r0, [r0, #1]
    1b9e:	2100      	movs	r1, #0
    1ba0:	4b03      	ldr	r3, [pc, #12]	; (1bb0 <ADS1x1x_read+0x18>)
    1ba2:	4798      	blx	r3
    1ba4:	b200      	sxth	r0, r0
	// Adjust for ADC resolution if needed.
	if (p_config->chip==ADS1013 || p_config->chip==ADS1014 || p_config->chip==ADS1015)
    1ba6:	7823      	ldrb	r3, [r4, #0]
    1ba8:	2b02      	cmp	r3, #2
    1baa:	d800      	bhi.n	1bae <ADS1x1x_read+0x16>
	{
		result >>= 4;
    1bac:	1100      	asrs	r0, r0, #4
	}
	return result;
}
    1bae:	bd10      	pop	{r4, pc}
    1bb0:	00001b65 	.word	0x00001b65

00001bb4 <ADS1x1x_set_threshold_lo>:


void ADS1x1x_set_threshold_lo(ADS1x1x_config_t *p_config, uint16_t value)
{
    1bb4:	b510      	push	{r4, lr}
    1bb6:	000a      	movs	r2, r1
	if (p_config->chip==ADS1013 || p_config->chip==ADS1014 || p_config->chip==ADS1015)
    1bb8:	7803      	ldrb	r3, [r0, #0]
    1bba:	2b02      	cmp	r3, #2
    1bbc:	d801      	bhi.n	1bc2 <ADS1x1x_set_threshold_lo+0xe>
	{
		value <<= 4;
    1bbe:	010a      	lsls	r2, r1, #4
    1bc0:	b292      	uxth	r2, r2
	}
	ADS1x1x_write_register(p_config->i2c_address,ADS1x1x_REG_POINTER_LO_THRESH,value);
    1bc2:	7840      	ldrb	r0, [r0, #1]
    1bc4:	2102      	movs	r1, #2
    1bc6:	4b01      	ldr	r3, [pc, #4]	; (1bcc <ADS1x1x_set_threshold_lo+0x18>)
    1bc8:	4798      	blx	r3
}
    1bca:	bd10      	pop	{r4, pc}
    1bcc:	00001b45 	.word	0x00001b45

00001bd0 <ADS1x1x_set_threshold_hi>:


void ADS1x1x_set_threshold_hi(ADS1x1x_config_t *p_config, uint16_t value)
{
    1bd0:	b510      	push	{r4, lr}
    1bd2:	000a      	movs	r2, r1
	if (p_config->chip==ADS1013 || p_config->chip==ADS1014 || p_config->chip==ADS1015)
    1bd4:	7803      	ldrb	r3, [r0, #0]
    1bd6:	2b02      	cmp	r3, #2
    1bd8:	d801      	bhi.n	1bde <ADS1x1x_set_threshold_hi+0xe>
	{
		value <<= 4;
    1bda:	010a      	lsls	r2, r1, #4
    1bdc:	b292      	uxth	r2, r2
	}
	ADS1x1x_write_register(p_config->i2c_address,ADS1x1x_REG_POINTER_HI_THRESH,value);
    1bde:	7840      	ldrb	r0, [r0, #1]
    1be0:	2103      	movs	r1, #3
    1be2:	4b01      	ldr	r3, [pc, #4]	; (1be8 <ADS1x1x_set_threshold_hi+0x18>)
    1be4:	4798      	blx	r3
}
    1be6:	bd10      	pop	{r4, pc}
    1be8:	00001b45 	.word	0x00001b45

00001bec <ADS1x1x_set_config_bitfield>:


void ADS1x1x_set_config_bitfield(ADS1x1x_config_t *p_config, uint16_t value, uint16_t mask)
{
	p_config->config &= ~mask;
    1bec:	8843      	ldrh	r3, [r0, #2]
    1bee:	4393      	bics	r3, r2
	p_config->config |= (value & mask);
    1bf0:	4011      	ands	r1, r2
    1bf2:	4319      	orrs	r1, r3
    1bf4:	8041      	strh	r1, [r0, #2]
}
    1bf6:	4770      	bx	lr

00001bf8 <ADS1x1x_set_os>:


void ADS1x1x_set_os(ADS1x1x_config_t *p_config, ADS1x1x_os_t value)
{
    1bf8:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_OS_MASK);
    1bfa:	2280      	movs	r2, #128	; 0x80
    1bfc:	0212      	lsls	r2, r2, #8
    1bfe:	4b01      	ldr	r3, [pc, #4]	; (1c04 <ADS1x1x_set_os+0xc>)
    1c00:	4798      	blx	r3
}
    1c02:	bd10      	pop	{r4, pc}
    1c04:	00001bed 	.word	0x00001bed

00001c08 <ADS1x1x_set_multiplexer>:


void ADS1x1x_set_multiplexer(ADS1x1x_config_t *p_config, ADS1x1x_mux_t value)
{
    1c08:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_MULTIPLEXER_MASK);
    1c0a:	22e0      	movs	r2, #224	; 0xe0
    1c0c:	01d2      	lsls	r2, r2, #7
    1c0e:	4b01      	ldr	r3, [pc, #4]	; (1c14 <ADS1x1x_set_multiplexer+0xc>)
    1c10:	4798      	blx	r3
}
    1c12:	bd10      	pop	{r4, pc}
    1c14:	00001bed 	.word	0x00001bed

00001c18 <ADS1x1x_set_pga>:


void ADS1x1x_set_pga(ADS1x1x_config_t *p_config, ADS1x1x_pga_t value)
{
    1c18:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_PGA_MASK);
    1c1a:	22e0      	movs	r2, #224	; 0xe0
    1c1c:	0112      	lsls	r2, r2, #4
    1c1e:	4b01      	ldr	r3, [pc, #4]	; (1c24 <ADS1x1x_set_pga+0xc>)
    1c20:	4798      	blx	r3
}
    1c22:	bd10      	pop	{r4, pc}
    1c24:	00001bed 	.word	0x00001bed

00001c28 <ADS1x1x_set_mode>:


void ADS1x1x_set_mode(ADS1x1x_config_t *p_config, ADS1x1x_mode_t value)
{
    1c28:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_MODE_MASK);
    1c2a:	2280      	movs	r2, #128	; 0x80
    1c2c:	0052      	lsls	r2, r2, #1
    1c2e:	4b01      	ldr	r3, [pc, #4]	; (1c34 <ADS1x1x_set_mode+0xc>)
    1c30:	4798      	blx	r3
}
    1c32:	bd10      	pop	{r4, pc}
    1c34:	00001bed 	.word	0x00001bed

00001c38 <ADS1x1x_set_data_rate>:


void ADS1x1x_set_data_rate(ADS1x1x_config_t *p_config, ADS1x1x_data_rate_t value)
{
    1c38:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_DATA_RATE_MASK);
    1c3a:	b289      	uxth	r1, r1
    1c3c:	22e0      	movs	r2, #224	; 0xe0
    1c3e:	4b01      	ldr	r3, [pc, #4]	; (1c44 <ADS1x1x_set_data_rate+0xc>)
    1c40:	4798      	blx	r3
}
    1c42:	bd10      	pop	{r4, pc}
    1c44:	00001bed 	.word	0x00001bed

00001c48 <ADS1x1x_set_comparator_mode>:


void ADS1x1x_set_comparator_mode(ADS1x1x_config_t *p_config, ADS1x1x_comparator_mode_t value)
{
    1c48:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_COMPARATOR_MODE_MASK);
    1c4a:	b289      	uxth	r1, r1
    1c4c:	2210      	movs	r2, #16
    1c4e:	4b01      	ldr	r3, [pc, #4]	; (1c54 <ADS1x1x_set_comparator_mode+0xc>)
    1c50:	4798      	blx	r3
}
    1c52:	bd10      	pop	{r4, pc}
    1c54:	00001bed 	.word	0x00001bed

00001c58 <ADS1x1x_set_comparator_polarity>:


void ADS1x1x_set_comparator_polarity(ADS1x1x_config_t *p_config, ADS1x1x_comparator_polarity_t value)
{
    1c58:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_COMPARATOR_POLARITY_MASK);
    1c5a:	b289      	uxth	r1, r1
    1c5c:	2208      	movs	r2, #8
    1c5e:	4b01      	ldr	r3, [pc, #4]	; (1c64 <ADS1x1x_set_comparator_polarity+0xc>)
    1c60:	4798      	blx	r3
}
    1c62:	bd10      	pop	{r4, pc}
    1c64:	00001bed 	.word	0x00001bed

00001c68 <ADS1x1x_set_comparator_latching>:


void ADS1x1x_set_comparator_latching(ADS1x1x_config_t *p_config, ADS1x1x_comparator_latching_t value)
{
    1c68:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_COMPARATOR_LATCHING_MASK);
    1c6a:	b289      	uxth	r1, r1
    1c6c:	2204      	movs	r2, #4
    1c6e:	4b01      	ldr	r3, [pc, #4]	; (1c74 <ADS1x1x_set_comparator_latching+0xc>)
    1c70:	4798      	blx	r3
}
    1c72:	bd10      	pop	{r4, pc}
    1c74:	00001bed 	.word	0x00001bed

00001c78 <ADS1x1x_set_comparator_queue>:


void ADS1x1x_set_comparator_queue(ADS1x1x_config_t *p_config, ADS1x1x_comparator_queue_t value)
{
    1c78:	b510      	push	{r4, lr}
	ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_COMPARATOR_QUEUE_MASK);
    1c7a:	b289      	uxth	r1, r1
    1c7c:	2203      	movs	r2, #3
    1c7e:	4b01      	ldr	r3, [pc, #4]	; (1c84 <ADS1x1x_set_comparator_queue+0xc>)
    1c80:	4798      	blx	r3
}
    1c82:	bd10      	pop	{r4, pc}
    1c84:	00001bed 	.word	0x00001bed

00001c88 <ADS1x1x_init>:
{
    1c88:	b570      	push	{r4, r5, r6, lr}
    1c8a:	0004      	movs	r4, r0
    1c8c:	001e      	movs	r6, r3
    1c8e:	ab04      	add	r3, sp, #16
    1c90:	881d      	ldrh	r5, [r3, #0]
	if (p_config!=0)
    1c92:	2800      	cmp	r0, #0
    1c94:	d032      	beq.n	1cfc <ADS1x1x_init+0x74>
		p_config->chip = chip;
    1c96:	7001      	strb	r1, [r0, #0]
		p_config->i2c_address = i2c_address;
    1c98:	7042      	strb	r2, [r0, #1]
		p_config->config = 0;
    1c9a:	2300      	movs	r3, #0
    1c9c:	8043      	strh	r3, [r0, #2]
		ADS1x1x_set_os(p_config,OS_SINGLE);
    1c9e:	2180      	movs	r1, #128	; 0x80
    1ca0:	0209      	lsls	r1, r1, #8
    1ca2:	4b17      	ldr	r3, [pc, #92]	; (1d00 <ADS1x1x_init+0x78>)
    1ca4:	4798      	blx	r3
		ADS1x1x_set_multiplexer(p_config,input);
    1ca6:	0031      	movs	r1, r6
    1ca8:	0020      	movs	r0, r4
    1caa:	4b16      	ldr	r3, [pc, #88]	; (1d04 <ADS1x1x_init+0x7c>)
    1cac:	4798      	blx	r3
		ADS1x1x_set_pga(p_config,gain);
    1cae:	0029      	movs	r1, r5
    1cb0:	0020      	movs	r0, r4
    1cb2:	4b15      	ldr	r3, [pc, #84]	; (1d08 <ADS1x1x_init+0x80>)
    1cb4:	4798      	blx	r3
		ADS1x1x_set_mode(p_config,MODE_SINGLE_SHOT);
    1cb6:	2180      	movs	r1, #128	; 0x80
    1cb8:	0049      	lsls	r1, r1, #1
    1cba:	0020      	movs	r0, r4
    1cbc:	4b13      	ldr	r3, [pc, #76]	; (1d0c <ADS1x1x_init+0x84>)
    1cbe:	4798      	blx	r3
		if (p_config->chip==ADS1013 || p_config->chip==ADS1014 || p_config->chip==ADS1015)
    1cc0:	7823      	ldrb	r3, [r4, #0]
    1cc2:	2b02      	cmp	r3, #2
    1cc4:	d815      	bhi.n	1cf2 <ADS1x1x_init+0x6a>
			ADS1x1x_set_data_rate(p_config,DATA_RATE_ADS101x_1600);
    1cc6:	2180      	movs	r1, #128	; 0x80
    1cc8:	0020      	movs	r0, r4
    1cca:	4b11      	ldr	r3, [pc, #68]	; (1d10 <ADS1x1x_init+0x88>)
    1ccc:	4798      	blx	r3
		ADS1x1x_set_comparator_mode(p_config,COMPARATOR_MODE_TRADITIONAL);
    1cce:	2100      	movs	r1, #0
    1cd0:	0020      	movs	r0, r4
    1cd2:	4b10      	ldr	r3, [pc, #64]	; (1d14 <ADS1x1x_init+0x8c>)
    1cd4:	4798      	blx	r3
		ADS1x1x_set_comparator_polarity(p_config,COMPARATOR_POLARITY_ACTIVE_LO);
    1cd6:	2100      	movs	r1, #0
    1cd8:	0020      	movs	r0, r4
    1cda:	4b0f      	ldr	r3, [pc, #60]	; (1d18 <ADS1x1x_init+0x90>)
    1cdc:	4798      	blx	r3
		ADS1x1x_set_comparator_latching(p_config,COMPARATOR_NON_LATCHING);
    1cde:	2100      	movs	r1, #0
    1ce0:	0020      	movs	r0, r4
    1ce2:	4b0e      	ldr	r3, [pc, #56]	; (1d1c <ADS1x1x_init+0x94>)
    1ce4:	4798      	blx	r3
		ADS1x1x_set_comparator_queue(p_config,COMPARATOR_QUEUE_NONE);
    1ce6:	2103      	movs	r1, #3
    1ce8:	0020      	movs	r0, r4
    1cea:	4b0d      	ldr	r3, [pc, #52]	; (1d20 <ADS1x1x_init+0x98>)
    1cec:	4798      	blx	r3
		result = 1;
    1cee:	2001      	movs	r0, #1
}
    1cf0:	bd70      	pop	{r4, r5, r6, pc}
			ADS1x1x_set_data_rate(p_config,DATA_RATE_ADS111x_128);
    1cf2:	2180      	movs	r1, #128	; 0x80
    1cf4:	0020      	movs	r0, r4
    1cf6:	4b06      	ldr	r3, [pc, #24]	; (1d10 <ADS1x1x_init+0x88>)
    1cf8:	4798      	blx	r3
    1cfa:	e7e8      	b.n	1cce <ADS1x1x_init+0x46>
	uint8_t result = 0;
    1cfc:	2000      	movs	r0, #0
    1cfe:	e7f7      	b.n	1cf0 <ADS1x1x_init+0x68>
    1d00:	00001bf9 	.word	0x00001bf9
    1d04:	00001c09 	.word	0x00001c09
    1d08:	00001c19 	.word	0x00001c19
    1d0c:	00001c29 	.word	0x00001c29
    1d10:	00001c39 	.word	0x00001c39
    1d14:	00001c49 	.word	0x00001c49
    1d18:	00001c59 	.word	0x00001c59
    1d1c:	00001c69 	.word	0x00001c69
    1d20:	00001c79 	.word	0x00001c79

00001d24 <ETH_Handler>:
	EXT_IRG_init();
}

static void ETH_Handler(void){

}
    1d24:	4770      	bx	lr
	...

00001d28 <tx_cb_USART>:
}

static void tx_cb_USART(const struct usart_async_descriptor *const io_descr)
{
	
	serialTransmitting = 0;
    1d28:	2200      	movs	r2, #0
    1d2a:	4b01      	ldr	r3, [pc, #4]	; (1d30 <tx_cb_USART+0x8>)
    1d2c:	701a      	strb	r2, [r3, #0]
}
    1d2e:	4770      	bx	lr
    1d30:	20000a86 	.word	0x20000a86

00001d34 <TIMER_0_task1_cb>:
	return res;
}

static void TIMER_0_task1_cb(const struct timer_task *const timer_task)
{
	adcConversionRequest = 1;
    1d34:	2201      	movs	r2, #1
    1d36:	4b01      	ldr	r3, [pc, #4]	; (1d3c <TIMER_0_task1_cb+0x8>)
    1d38:	701a      	strb	r2, [r3, #0]
}
    1d3a:	4770      	bx	lr
    1d3c:	20000a80 	.word	0x20000a80

00001d40 <TIMER_0_task2_cb>:
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
}

static inline void hri_port_toggle_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    1d40:	2280      	movs	r2, #128	; 0x80
    1d42:	0412      	lsls	r2, r2, #16
    1d44:	23c0      	movs	r3, #192	; 0xc0
    1d46:	05db      	lsls	r3, r3, #23
    1d48:	61da      	str	r2, [r3, #28]

static void TIMER_0_task2_cb(const struct timer_task *const timer_task)
{
	gpio_toggle_pin_level(GLD);
	
}
    1d4a:	4770      	bx	lr

00001d4c <TIMER_IRQ_init>:
	return retVal;
}


static void TIMER_IRQ_init(void)
{
    1d4c:	b570      	push	{r4, r5, r6, lr}
			peripheral = (uint32_t)_pm_get_ahb_index(module);
			PM->AHBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBA:
		PM->APBAMASK.reg |= 1 << peripheral;
    1d4e:	4a13      	ldr	r2, [pc, #76]	; (1d9c <TIMER_IRQ_init+0x50>)
    1d50:	6993      	ldr	r3, [r2, #24]
    1d52:	2120      	movs	r1, #32
    1d54:	430b      	orrs	r3, r1
    1d56:	6193      	str	r3, [r2, #24]
	((Gclk *)hw)->CLKCTRL.reg = data;
    1d58:	4a11      	ldr	r2, [pc, #68]	; (1da0 <TIMER_IRQ_init+0x54>)
    1d5a:	4b12      	ldr	r3, [pc, #72]	; (1da4 <TIMER_IRQ_init+0x58>)
    1d5c:	805a      	strh	r2, [r3, #2]
	_pm_enable_bus_clock(PM_BUS_APBA, RTC);
	_gclk_enable_channel(RTC_GCLK_ID, CONF_GCLK_RTC_SRC);
	timer_init(&TIMER_IRQ, RTC, _rtc_get_timer());
    1d5e:	4b12      	ldr	r3, [pc, #72]	; (1da8 <TIMER_IRQ_init+0x5c>)
    1d60:	4798      	blx	r3
    1d62:	0002      	movs	r2, r0
    1d64:	4c11      	ldr	r4, [pc, #68]	; (1dac <TIMER_IRQ_init+0x60>)
    1d66:	4912      	ldr	r1, [pc, #72]	; (1db0 <TIMER_IRQ_init+0x64>)
    1d68:	0020      	movs	r0, r4
    1d6a:	4b12      	ldr	r3, [pc, #72]	; (1db4 <TIMER_IRQ_init+0x68>)
    1d6c:	4798      	blx	r3
	
	TIMER_task1.interval = 32768/16;
    1d6e:	4912      	ldr	r1, [pc, #72]	; (1db8 <TIMER_IRQ_init+0x6c>)
    1d70:	2280      	movs	r2, #128	; 0x80
    1d72:	0112      	lsls	r2, r2, #4
    1d74:	608a      	str	r2, [r1, #8]
	TIMER_task1.cb       = TIMER_0_task1_cb;
    1d76:	4b11      	ldr	r3, [pc, #68]	; (1dbc <TIMER_IRQ_init+0x70>)
    1d78:	60cb      	str	r3, [r1, #12]
	TIMER_task1.mode     = TIMER_TASK_REPEAT;
    1d7a:	2301      	movs	r3, #1
    1d7c:	740b      	strb	r3, [r1, #16]
	
	TIMER_task2.interval = 32768/16;
    1d7e:	4d10      	ldr	r5, [pc, #64]	; (1dc0 <TIMER_IRQ_init+0x74>)
    1d80:	60aa      	str	r2, [r5, #8]
	TIMER_task2.cb       = TIMER_0_task2_cb;
    1d82:	4a10      	ldr	r2, [pc, #64]	; (1dc4 <TIMER_IRQ_init+0x78>)
    1d84:	60ea      	str	r2, [r5, #12]
	TIMER_task2.mode     = TIMER_TASK_REPEAT;
    1d86:	742b      	strb	r3, [r5, #16]

	timer_add_task(&TIMER_IRQ, &TIMER_task1);
    1d88:	0020      	movs	r0, r4
    1d8a:	4e0f      	ldr	r6, [pc, #60]	; (1dc8 <TIMER_IRQ_init+0x7c>)
    1d8c:	47b0      	blx	r6
	timer_add_task(&TIMER_IRQ, &TIMER_task2);
    1d8e:	0029      	movs	r1, r5
    1d90:	0020      	movs	r0, r4
    1d92:	47b0      	blx	r6
	timer_start(&TIMER_IRQ);
    1d94:	0020      	movs	r0, r4
    1d96:	4b0d      	ldr	r3, [pc, #52]	; (1dcc <TIMER_IRQ_init+0x80>)
    1d98:	4798      	blx	r3
    1d9a:	bd70      	pop	{r4, r5, r6, pc}
    1d9c:	40000400 	.word	0x40000400
    1da0:	00004302 	.word	0x00004302
    1da4:	40000c00 	.word	0x40000c00
    1da8:	00000f89 	.word	0x00000f89
    1dac:	20000e0c 	.word	0x20000e0c
    1db0:	40001400 	.word	0x40001400
    1db4:	0000068d 	.word	0x0000068d
    1db8:	20000a58 	.word	0x20000a58
    1dbc:	00001d35 	.word	0x00001d35
    1dc0:	20000a6c 	.word	0x20000a6c
    1dc4:	00001d41 	.word	0x00001d41
    1dc8:	0000070d 	.word	0x0000070d
    1dcc:	000006d1 	.word	0x000006d1

00001dd0 <rx_cb_USART>:
static void rx_cb_USART(const struct usart_async_descriptor *const io_descr) {
    1dd0:	b530      	push	{r4, r5, lr}
    1dd2:	b0a1      	sub	sp, #132	; 0x84
	bytesRead = io_read(&DEBUG_SERIAL, buffer, RX_BUFFER_SIZE);
    1dd4:	2280      	movs	r2, #128	; 0x80
    1dd6:	4669      	mov	r1, sp
    1dd8:	4821      	ldr	r0, [pc, #132]	; (1e60 <rx_cb_USART+0x90>)
    1dda:	4b22      	ldr	r3, [pc, #136]	; (1e64 <rx_cb_USART+0x94>)
    1ddc:	4798      	blx	r3
	if (bytesRead > 0) {
    1dde:	2800      	cmp	r0, #0
    1de0:	dd3c      	ble.n	1e5c <rx_cb_USART+0x8c>
    1de2:	2300      	movs	r3, #0
    1de4:	e00b      	b.n	1dfe <rx_cb_USART+0x2e>
					rx_buffer[serialReceivedBytesCounter] = '\0'; // ?????????? ?????
    1de6:	4a20      	ldr	r2, [pc, #128]	; (1e68 <rx_cb_USART+0x98>)
    1de8:	7812      	ldrb	r2, [r2, #0]
    1dea:	b2d2      	uxtb	r2, r2
    1dec:	2100      	movs	r1, #0
    1dee:	4c1f      	ldr	r4, [pc, #124]	; (1e6c <rx_cb_USART+0x9c>)
    1df0:	54a1      	strb	r1, [r4, r2]
					serialComplete = 1;
    1df2:	2401      	movs	r4, #1
    1df4:	4a1e      	ldr	r2, [pc, #120]	; (1e70 <rx_cb_USART+0xa0>)
    1df6:	7014      	strb	r4, [r2, #0]
					serialReceiving = 0;
    1df8:	4a1e      	ldr	r2, [pc, #120]	; (1e74 <rx_cb_USART+0xa4>)
    1dfa:	7011      	strb	r1, [r2, #0]
		for (int i = 0; i < bytesRead; i++) {
    1dfc:	3301      	adds	r3, #1
    1dfe:	4283      	cmp	r3, r0
    1e00:	da2c      	bge.n	1e5c <rx_cb_USART+0x8c>
			uint8_t inChar = buffer[i];
    1e02:	466a      	mov	r2, sp
    1e04:	5cd2      	ldrb	r2, [r2, r3]
			if (serialReceiving == 0 && inChar != '\r' && inChar != '\n') {
    1e06:	491b      	ldr	r1, [pc, #108]	; (1e74 <rx_cb_USART+0xa4>)
    1e08:	7809      	ldrb	r1, [r1, #0]
    1e0a:	2900      	cmp	r1, #0
    1e0c:	d109      	bne.n	1e22 <rx_cb_USART+0x52>
    1e0e:	2a0d      	cmp	r2, #13
    1e10:	d007      	beq.n	1e22 <rx_cb_USART+0x52>
    1e12:	2a0a      	cmp	r2, #10
    1e14:	d005      	beq.n	1e22 <rx_cb_USART+0x52>
				serialReceiving = 1;
    1e16:	2401      	movs	r4, #1
    1e18:	4916      	ldr	r1, [pc, #88]	; (1e74 <rx_cb_USART+0xa4>)
    1e1a:	700c      	strb	r4, [r1, #0]
				serialReceivedBytesCounter = 0;
    1e1c:	2400      	movs	r4, #0
    1e1e:	4912      	ldr	r1, [pc, #72]	; (1e68 <rx_cb_USART+0x98>)
    1e20:	700c      	strb	r4, [r1, #0]
			if (serialReceiving) {
    1e22:	4914      	ldr	r1, [pc, #80]	; (1e74 <rx_cb_USART+0xa4>)
    1e24:	7809      	ldrb	r1, [r1, #0]
    1e26:	2900      	cmp	r1, #0
    1e28:	d0e8      	beq.n	1dfc <rx_cb_USART+0x2c>
				if (inChar == '\r' || inChar == '\n') {
    1e2a:	2a0d      	cmp	r2, #13
    1e2c:	d0db      	beq.n	1de6 <rx_cb_USART+0x16>
    1e2e:	2a0a      	cmp	r2, #10
    1e30:	d0d9      	beq.n	1de6 <rx_cb_USART+0x16>
					} else if (serialReceivedBytesCounter < RX_BUFFER_SIZE - 1) {
    1e32:	490d      	ldr	r1, [pc, #52]	; (1e68 <rx_cb_USART+0x98>)
    1e34:	7809      	ldrb	r1, [r1, #0]
    1e36:	b2c9      	uxtb	r1, r1
    1e38:	297e      	cmp	r1, #126	; 0x7e
    1e3a:	d808      	bhi.n	1e4e <rx_cb_USART+0x7e>
					rx_buffer[serialReceivedBytesCounter++] = inChar;
    1e3c:	4d0a      	ldr	r5, [pc, #40]	; (1e68 <rx_cb_USART+0x98>)
    1e3e:	7829      	ldrb	r1, [r5, #0]
    1e40:	b2c9      	uxtb	r1, r1
    1e42:	1c4c      	adds	r4, r1, #1
    1e44:	b2e4      	uxtb	r4, r4
    1e46:	702c      	strb	r4, [r5, #0]
    1e48:	4c08      	ldr	r4, [pc, #32]	; (1e6c <rx_cb_USART+0x9c>)
    1e4a:	5462      	strb	r2, [r4, r1]
    1e4c:	e7d6      	b.n	1dfc <rx_cb_USART+0x2c>
					serialReceiving = 0; // ???????????? ??????
    1e4e:	2100      	movs	r1, #0
    1e50:	4a08      	ldr	r2, [pc, #32]	; (1e74 <rx_cb_USART+0xa4>)
    1e52:	7011      	strb	r1, [r2, #0]
					serialBufferOverflow = 1;
    1e54:	3101      	adds	r1, #1
    1e56:	4a08      	ldr	r2, [pc, #32]	; (1e78 <rx_cb_USART+0xa8>)
    1e58:	7011      	strb	r1, [r2, #0]
    1e5a:	e7cf      	b.n	1dfc <rx_cb_USART+0x2c>
}
    1e5c:	b021      	add	sp, #132	; 0x84
    1e5e:	bd30      	pop	{r4, r5, pc}
    1e60:	20000dbc 	.word	0x20000dbc
    1e64:	00000429 	.word	0x00000429
    1e68:	20000a84 	.word	0x20000a84
    1e6c:	20000d00 	.word	0x20000d00
    1e70:	20000a83 	.word	0x20000a83
    1e74:	20000a85 	.word	0x20000a85
    1e78:	20000a82 	.word	0x20000a82

00001e7c <buzer>:
void buzer(uint16_t soundTime){
    1e7c:	b570      	push	{r4, r5, r6, lr}
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1e7e:	24c0      	movs	r4, #192	; 0xc0
    1e80:	05e4      	lsls	r4, r4, #23
    1e82:	2580      	movs	r5, #128	; 0x80
    1e84:	04ad      	lsls	r5, r5, #18
    1e86:	61a5      	str	r5, [r4, #24]
	delay_ms(soundTime);
    1e88:	4b01      	ldr	r3, [pc, #4]	; (1e90 <buzer+0x14>)
    1e8a:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1e8c:	6165      	str	r5, [r4, #20]
}
    1e8e:	bd70      	pop	{r4, r5, r6, pc}
    1e90:	00000199 	.word	0x00000199

00001e94 <err_cb_USART>:
static void err_cb_USART(const struct usart_async_descriptor *const io_descr) {
    1e94:	b510      	push	{r4, lr}
	buzer(2);
    1e96:	2002      	movs	r0, #2
    1e98:	4b03      	ldr	r3, [pc, #12]	; (1ea8 <err_cb_USART+0x14>)
    1e9a:	4798      	blx	r3
	errorCounter++;
    1e9c:	4a03      	ldr	r2, [pc, #12]	; (1eac <err_cb_USART+0x18>)
    1e9e:	7813      	ldrb	r3, [r2, #0]
    1ea0:	3301      	adds	r3, #1
    1ea2:	b2db      	uxtb	r3, r3
    1ea4:	7013      	strb	r3, [r2, #0]
}
    1ea6:	bd10      	pop	{r4, pc}
    1ea8:	00001e7d 	.word	0x00001e7d
    1eac:	20000a81 	.word	0x20000a81

00001eb0 <gpio_init>:
void gpio_init(void){
    1eb0:	b5f0      	push	{r4, r5, r6, r7, lr}
    1eb2:	46de      	mov	lr, fp
    1eb4:	4657      	mov	r7, sl
    1eb6:	464e      	mov	r6, r9
    1eb8:	4645      	mov	r5, r8
    1eba:	b5e0      	push	{r5, r6, r7, lr}
    1ebc:	22c0      	movs	r2, #192	; 0xc0
    1ebe:	05d2      	lsls	r2, r2, #23
    1ec0:	2380      	movs	r3, #128	; 0x80
    1ec2:	039b      	lsls	r3, r3, #14
    1ec4:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1ec6:	6093      	str	r3, [r2, #8]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1ec8:	4ba7      	ldr	r3, [pc, #668]	; (2168 <STACK_SIZE+0x168>)
    1eca:	2180      	movs	r1, #128	; 0x80
    1ecc:	05c9      	lsls	r1, r1, #23
    1ece:	6299      	str	r1, [r3, #40]	; 0x28
    1ed0:	49a6      	ldr	r1, [pc, #664]	; (216c <STACK_SIZE+0x16c>)
    1ed2:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ed4:	2555      	movs	r5, #85	; 0x55
    1ed6:	5d58      	ldrb	r0, [r3, r5]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ed8:	2101      	movs	r1, #1
    1eda:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1edc:	5558      	strb	r0, [r3, r5]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1ede:	2080      	movs	r0, #128	; 0x80
    1ee0:	0280      	lsls	r0, r0, #10
    1ee2:	353f      	adds	r5, #63	; 0x3f
    1ee4:	5150      	str	r0, [r2, r5]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1ee6:	2488      	movs	r4, #136	; 0x88
    1ee8:	5110      	str	r0, [r2, r4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1eea:	20a8      	movs	r0, #168	; 0xa8
    1eec:	2480      	movs	r4, #128	; 0x80
    1eee:	05e4      	lsls	r4, r4, #23
    1ef0:	501c      	str	r4, [r3, r0]
    1ef2:	4d9f      	ldr	r5, [pc, #636]	; (2170 <STACK_SIZE+0x170>)
    1ef4:	501d      	str	r5, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ef6:	26d1      	movs	r6, #209	; 0xd1
    1ef8:	5d9d      	ldrb	r5, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1efa:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1efc:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1efe:	2480      	movs	r4, #128	; 0x80
    1f00:	46a1      	mov	r9, r4
    1f02:	6194      	str	r4, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1f04:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1f06:	4d9b      	ldr	r5, [pc, #620]	; (2174 <STACK_SIZE+0x174>)
    1f08:	629d      	str	r5, [r3, #40]	; 0x28
    1f0a:	24c0      	movs	r4, #192	; 0xc0
    1f0c:	0624      	lsls	r4, r4, #24
    1f0e:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f10:	3e8a      	subs	r6, #138	; 0x8a
    1f12:	5d9d      	ldrb	r5, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f14:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1f16:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1f18:	2580      	movs	r5, #128	; 0x80
    1f1a:	006d      	lsls	r5, r5, #1
    1f1c:	6155      	str	r5, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1f1e:	6095      	str	r5, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1f20:	4d95      	ldr	r5, [pc, #596]	; (2178 <STACK_SIZE+0x178>)
    1f22:	629d      	str	r5, [r3, #40]	; 0x28
    1f24:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f26:	3601      	adds	r6, #1
    1f28:	5d9d      	ldrb	r5, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f2a:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1f2c:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1f2e:	2480      	movs	r4, #128	; 0x80
    1f30:	00a4      	lsls	r4, r4, #2
    1f32:	46a4      	mov	ip, r4
    1f34:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1f36:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1f38:	4c90      	ldr	r4, [pc, #576]	; (217c <STACK_SIZE+0x17c>)
    1f3a:	629c      	str	r4, [r3, #40]	; 0x28
    1f3c:	24c0      	movs	r4, #192	; 0xc0
    1f3e:	0624      	lsls	r4, r4, #24
    1f40:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f42:	3601      	adds	r6, #1
    1f44:	5d9d      	ldrb	r5, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f46:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1f48:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1f4a:	2480      	movs	r4, #128	; 0x80
    1f4c:	00e4      	lsls	r4, r4, #3
    1f4e:	46a2      	mov	sl, r4
    1f50:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1f52:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1f54:	4d8a      	ldr	r5, [pc, #552]	; (2180 <STACK_SIZE+0x180>)
    1f56:	629d      	str	r5, [r3, #40]	; 0x28
    1f58:	24c0      	movs	r4, #192	; 0xc0
    1f5a:	0624      	lsls	r4, r4, #24
    1f5c:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f5e:	3601      	adds	r6, #1
    1f60:	5d9d      	ldrb	r5, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f62:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1f64:	559d      	strb	r5, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1f66:	2480      	movs	r4, #128	; 0x80
    1f68:	0124      	lsls	r4, r4, #4
    1f6a:	6054      	str	r4, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1f6c:	4c85      	ldr	r4, [pc, #532]	; (2184 <STACK_SIZE+0x184>)
    1f6e:	629c      	str	r4, [r3, #40]	; 0x28
    1f70:	4e85      	ldr	r6, [pc, #532]	; (2188 <STACK_SIZE+0x188>)
    1f72:	629e      	str	r6, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1f74:	244b      	movs	r4, #75	; 0x4b
    1f76:	46a0      	mov	r8, r4
    1f78:	5d1c      	ldrb	r4, [r3, r4]
    1f7a:	2504      	movs	r5, #4
    1f7c:	43ac      	bics	r4, r5
    1f7e:	46a3      	mov	fp, r4
    1f80:	4644      	mov	r4, r8
    1f82:	465f      	mov	r7, fp
    1f84:	551f      	strb	r7, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f86:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f88:	438c      	bics	r4, r1
    1f8a:	46a3      	mov	fp, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1f8c:	4644      	mov	r4, r8
    1f8e:	465f      	mov	r7, fp
    1f90:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1f92:	2480      	movs	r4, #128	; 0x80
    1f94:	0224      	lsls	r4, r4, #8
    1f96:	6194      	str	r4, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1f98:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1f9a:	4c7c      	ldr	r4, [pc, #496]	; (218c <STACK_SIZE+0x18c>)
    1f9c:	629c      	str	r4, [r3, #40]	; 0x28
    1f9e:	24c0      	movs	r4, #192	; 0xc0
    1fa0:	0624      	lsls	r4, r4, #24
    1fa2:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1fa4:	244f      	movs	r4, #79	; 0x4f
    1fa6:	46a3      	mov	fp, r4
    1fa8:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1faa:	438c      	bics	r4, r1
    1fac:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1fae:	465c      	mov	r4, fp
    1fb0:	4647      	mov	r7, r8
    1fb2:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1fb4:	2480      	movs	r4, #128	; 0x80
    1fb6:	0424      	lsls	r4, r4, #16
    1fb8:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1fba:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1fbc:	2480      	movs	r4, #128	; 0x80
    1fbe:	05e4      	lsls	r4, r4, #23
    1fc0:	629c      	str	r4, [r3, #40]	; 0x28
    1fc2:	4c73      	ldr	r4, [pc, #460]	; (2190 <STACK_SIZE+0x190>)
    1fc4:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1fc6:	2457      	movs	r4, #87	; 0x57
    1fc8:	46a3      	mov	fp, r4
    1fca:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1fcc:	438c      	bics	r4, r1
    1fce:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1fd0:	465c      	mov	r4, fp
    1fd2:	4647      	mov	r7, r8
    1fd4:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1fd6:	3441      	adds	r4, #65	; 0x41
    1fd8:	4667      	mov	r7, ip
    1fda:	5117      	str	r7, [r2, r4]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1fdc:	3c10      	subs	r4, #16
    1fde:	5117      	str	r7, [r2, r4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1fe0:	4c66      	ldr	r4, [pc, #408]	; (217c <STACK_SIZE+0x17c>)
    1fe2:	501c      	str	r4, [r3, r0]
    1fe4:	24c0      	movs	r4, #192	; 0xc0
    1fe6:	0624      	lsls	r4, r4, #24
    1fe8:	501c      	str	r4, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1fea:	24c9      	movs	r4, #201	; 0xc9
    1fec:	5d1f      	ldrb	r7, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1fee:	438f      	bics	r7, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1ff0:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1ff2:	3c45      	subs	r4, #69	; 0x45
    1ff4:	46a3      	mov	fp, r4
    1ff6:	4654      	mov	r4, sl
    1ff8:	465f      	mov	r7, fp
    1ffa:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1ffc:	4c65      	ldr	r4, [pc, #404]	; (2194 <STACK_SIZE+0x194>)
    1ffe:	501c      	str	r4, [r3, r0]
    2000:	501e      	str	r6, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    2002:	24ca      	movs	r4, #202	; 0xca
    2004:	46a4      	mov	ip, r4
    2006:	5d1c      	ldrb	r4, [r3, r4]
    2008:	43ac      	bics	r4, r5
    200a:	46a0      	mov	r8, r4
    200c:	4664      	mov	r4, ip
    200e:	4647      	mov	r7, r8
    2010:	551f      	strb	r7, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2012:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2014:	438c      	bics	r4, r1
    2016:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2018:	4664      	mov	r4, ip
    201a:	4647      	mov	r7, r8
    201c:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    201e:	2480      	movs	r4, #128	; 0x80
    2020:	0124      	lsls	r4, r4, #4
    2022:	465f      	mov	r7, fp
    2024:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2026:	4c57      	ldr	r4, [pc, #348]	; (2184 <STACK_SIZE+0x184>)
    2028:	501c      	str	r4, [r3, r0]
    202a:	501e      	str	r6, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    202c:	24cb      	movs	r4, #203	; 0xcb
    202e:	46a4      	mov	ip, r4
    2030:	5d1c      	ldrb	r4, [r3, r4]
    2032:	43ac      	bics	r4, r5
    2034:	46a0      	mov	r8, r4
    2036:	4664      	mov	r4, ip
    2038:	4647      	mov	r7, r8
    203a:	551f      	strb	r7, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    203c:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    203e:	438c      	bics	r4, r1
    2040:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2042:	4664      	mov	r4, ip
    2044:	4647      	mov	r7, r8
    2046:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2048:	2480      	movs	r4, #128	; 0x80
    204a:	03e4      	lsls	r4, r4, #15
    204c:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    204e:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2050:	2480      	movs	r4, #128	; 0x80
    2052:	05e4      	lsls	r4, r4, #23
    2054:	629c      	str	r4, [r3, #40]	; 0x28
    2056:	4c50      	ldr	r4, [pc, #320]	; (2198 <STACK_SIZE+0x198>)
    2058:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    205a:	2456      	movs	r4, #86	; 0x56
    205c:	46a0      	mov	r8, r4
    205e:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2060:	438c      	bics	r4, r1
    2062:	46a4      	mov	ip, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2064:	4644      	mov	r4, r8
    2066:	4667      	mov	r7, ip
    2068:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    206a:	2480      	movs	r4, #128	; 0x80
    206c:	0464      	lsls	r4, r4, #17
    206e:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    2070:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2072:	2480      	movs	r4, #128	; 0x80
    2074:	05e4      	lsls	r4, r4, #23
    2076:	629c      	str	r4, [r3, #40]	; 0x28
    2078:	4c48      	ldr	r4, [pc, #288]	; (219c <STACK_SIZE+0x19c>)
    207a:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    207c:	2458      	movs	r4, #88	; 0x58
    207e:	46a0      	mov	r8, r4
    2080:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2082:	438c      	bics	r4, r1
    2084:	46a4      	mov	ip, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2086:	4644      	mov	r4, r8
    2088:	4667      	mov	r7, ip
    208a:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    208c:	2480      	movs	r4, #128	; 0x80
    208e:	04a4      	lsls	r4, r4, #18
    2090:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    2092:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2094:	2480      	movs	r4, #128	; 0x80
    2096:	05e4      	lsls	r4, r4, #23
    2098:	629c      	str	r4, [r3, #40]	; 0x28
    209a:	4c41      	ldr	r4, [pc, #260]	; (21a0 <STACK_SIZE+0x1a0>)
    209c:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    209e:	2459      	movs	r4, #89	; 0x59
    20a0:	46a0      	mov	r8, r4
    20a2:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    20a4:	438c      	bics	r4, r1
    20a6:	46a4      	mov	ip, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    20a8:	4644      	mov	r4, r8
    20aa:	4667      	mov	r7, ip
    20ac:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    20ae:	3c19      	subs	r4, #25
    20b0:	465f      	mov	r7, fp
    20b2:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    20b4:	4c3b      	ldr	r4, [pc, #236]	; (21a4 <STACK_SIZE+0x1a4>)
    20b6:	501c      	str	r4, [r3, r0]
    20b8:	501e      	str	r6, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    20ba:	24c6      	movs	r4, #198	; 0xc6
    20bc:	46a4      	mov	ip, r4
    20be:	5d1c      	ldrb	r4, [r3, r4]
    20c0:	43ac      	bics	r4, r5
    20c2:	46a0      	mov	r8, r4
    20c4:	4664      	mov	r4, ip
    20c6:	4647      	mov	r7, r8
    20c8:	551f      	strb	r7, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    20ca:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    20cc:	438c      	bics	r4, r1
    20ce:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    20d0:	4664      	mov	r4, ip
    20d2:	4647      	mov	r7, r8
    20d4:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    20d6:	3ca6      	subs	r4, #166	; 0xa6
    20d8:	465f      	mov	r7, fp
    20da:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    20dc:	4c32      	ldr	r4, [pc, #200]	; (21a8 <STACK_SIZE+0x1a8>)
    20de:	501c      	str	r4, [r3, r0]
    20e0:	501e      	str	r6, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    20e2:	24c5      	movs	r4, #197	; 0xc5
    20e4:	46a4      	mov	ip, r4
    20e6:	5d1c      	ldrb	r4, [r3, r4]
    20e8:	43ac      	bics	r4, r5
    20ea:	46a0      	mov	r8, r4
    20ec:	4664      	mov	r4, ip
    20ee:	4647      	mov	r7, r8
    20f0:	551f      	strb	r7, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    20f2:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    20f4:	438c      	bics	r4, r1
    20f6:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    20f8:	4664      	mov	r4, ip
    20fa:	4647      	mov	r7, r8
    20fc:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    20fe:	3cb5      	subs	r4, #181	; 0xb5
    2100:	465f      	mov	r7, fp
    2102:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2104:	4c29      	ldr	r4, [pc, #164]	; (21ac <STACK_SIZE+0x1ac>)
    2106:	501c      	str	r4, [r3, r0]
    2108:	501e      	str	r6, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    210a:	24c4      	movs	r4, #196	; 0xc4
    210c:	46a4      	mov	ip, r4
    210e:	5d1c      	ldrb	r4, [r3, r4]
    2110:	43ac      	bics	r4, r5
    2112:	46a0      	mov	r8, r4
    2114:	4664      	mov	r4, ip
    2116:	4647      	mov	r7, r8
    2118:	551f      	strb	r7, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    211a:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    211c:	438c      	bics	r4, r1
    211e:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2120:	4664      	mov	r4, ip
    2122:	4647      	mov	r7, r8
    2124:	551f      	strb	r7, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    2126:	464c      	mov	r4, r9
    2128:	465f      	mov	r7, fp
    212a:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    212c:	4f20      	ldr	r7, [pc, #128]	; (21b0 <STACK_SIZE+0x1b0>)
    212e:	501f      	str	r7, [r3, r0]
    2130:	501e      	str	r6, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    2132:	301f      	adds	r0, #31
    2134:	5c1e      	ldrb	r6, [r3, r0]
    2136:	43ae      	bics	r6, r5
    2138:	541e      	strb	r6, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    213a:	5c1d      	ldrb	r5, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    213c:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    213e:	541d      	strb	r5, [r3, r0]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    2140:	2080      	movs	r0, #128	; 0x80
    2142:	0300      	lsls	r0, r0, #12
    2144:	6190      	str	r0, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    2146:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2148:	2280      	movs	r2, #128	; 0x80
    214a:	05d2      	lsls	r2, r2, #23
    214c:	629a      	str	r2, [r3, #40]	; 0x28
    214e:	4a19      	ldr	r2, [pc, #100]	; (21b4 <STACK_SIZE+0x1b4>)
    2150:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2152:	2053      	movs	r0, #83	; 0x53
    2154:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2156:	438a      	bics	r2, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2158:	541a      	strb	r2, [r3, r0]
}
    215a:	bc3c      	pop	{r2, r3, r4, r5}
    215c:	4690      	mov	r8, r2
    215e:	4699      	mov	r9, r3
    2160:	46a2      	mov	sl, r4
    2162:	46ab      	mov	fp, r5
    2164:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2166:	46c0      	nop			; (mov r8, r8)
    2168:	41004400 	.word	0x41004400
    216c:	c0000020 	.word	0xc0000020
    2170:	c0000002 	.word	0xc0000002
    2174:	40000080 	.word	0x40000080
    2178:	40000100 	.word	0x40000100
    217c:	40000200 	.word	0x40000200
    2180:	40000400 	.word	0x40000400
    2184:	40020800 	.word	0x40020800
    2188:	c0020000 	.word	0xc0020000
    218c:	40008000 	.word	0x40008000
    2190:	c0000080 	.word	0xc0000080
    2194:	40020400 	.word	0x40020400
    2198:	c0000040 	.word	0xc0000040
    219c:	c0000100 	.word	0xc0000100
    21a0:	c0000200 	.word	0xc0000200
    21a4:	40020040 	.word	0x40020040
    21a8:	40020020 	.word	0x40020020
    21ac:	40020010 	.word	0x40020010
    21b0:	40020080 	.word	0x40020080
    21b4:	c0000008 	.word	0xc0000008

000021b8 <EXT_IRG_init>:
void EXT_IRG_init(void){
    21b8:	b510      	push	{r4, lr}
    21ba:	4a11      	ldr	r2, [pc, #68]	; (2200 <EXT_IRG_init+0x48>)
    21bc:	4b11      	ldr	r3, [pc, #68]	; (2204 <EXT_IRG_init+0x4c>)
    21be:	805a      	strh	r2, [r3, #2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    21c0:	2180      	movs	r1, #128	; 0x80
    21c2:	0049      	lsls	r1, r1, #1
    21c4:	2384      	movs	r3, #132	; 0x84
    21c6:	22c0      	movs	r2, #192	; 0xc0
    21c8:	05d2      	lsls	r2, r2, #23
    21ca:	50d1      	str	r1, [r2, r3]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    21cc:	4b0e      	ldr	r3, [pc, #56]	; (2208 <EXT_IRG_init+0x50>)
    21ce:	22a8      	movs	r2, #168	; 0xa8
    21d0:	490e      	ldr	r1, [pc, #56]	; (220c <EXT_IRG_init+0x54>)
    21d2:	5099      	str	r1, [r3, r2]
    21d4:	490e      	ldr	r1, [pc, #56]	; (2210 <EXT_IRG_init+0x58>)
    21d6:	5099      	str	r1, [r3, r2]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    21d8:	21c8      	movs	r1, #200	; 0xc8
    21da:	5c5a      	ldrb	r2, [r3, r1]
    21dc:	2004      	movs	r0, #4
    21de:	4382      	bics	r2, r0
    21e0:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    21e2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    21e4:	3803      	subs	r0, #3
    21e6:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    21e8:	4302      	orrs	r2, r0
    21ea:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    21ec:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    21ee:	3914      	subs	r1, #20
    21f0:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    21f2:	200f      	movs	r0, #15
    21f4:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    21f6:	545a      	strb	r2, [r3, r1]
	ext_irq_init();
    21f8:	4b06      	ldr	r3, [pc, #24]	; (2214 <EXT_IRG_init+0x5c>)
    21fa:	4798      	blx	r3
}
    21fc:	bd10      	pop	{r4, pc}
    21fe:	46c0      	nop			; (mov r8, r8)
    2200:	00004103 	.word	0x00004103
    2204:	40000c00 	.word	0x40000c00
    2208:	41004400 	.word	0x41004400
    220c:	40020100 	.word	0x40020100
    2210:	c0020000 	.word	0xc0020000
    2214:	000001fd 	.word	0x000001fd

00002218 <ETH_SPI_init>:
void ETH_SPI_init(void){
    2218:	b5f0      	push	{r4, r5, r6, r7, lr}
    221a:	46de      	mov	lr, fp
    221c:	4657      	mov	r7, sl
    221e:	464e      	mov	r6, r9
    2220:	b5c0      	push	{r6, r7, lr}
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
    2222:	4a3b      	ldr	r2, [pc, #236]	; (2310 <ETH_SPI_init+0xf8>)
    2224:	6a13      	ldr	r3, [r2, #32]
    2226:	2104      	movs	r1, #4
    2228:	468a      	mov	sl, r1
    222a:	430b      	orrs	r3, r1
    222c:	6213      	str	r3, [r2, #32]
    222e:	4a39      	ldr	r2, [pc, #228]	; (2314 <ETH_SPI_init+0xfc>)
    2230:	4b39      	ldr	r3, [pc, #228]	; (2318 <ETH_SPI_init+0x100>)
    2232:	805a      	strh	r2, [r3, #2]
	spi_m_sync_init(&ETH_SPI, SERCOM0);
    2234:	4939      	ldr	r1, [pc, #228]	; (231c <ETH_SPI_init+0x104>)
    2236:	483a      	ldr	r0, [pc, #232]	; (2320 <ETH_SPI_init+0x108>)
    2238:	4b3a      	ldr	r3, [pc, #232]	; (2324 <ETH_SPI_init+0x10c>)
    223a:	4699      	mov	r9, r3
    223c:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    223e:	25c0      	movs	r5, #192	; 0xc0
    2240:	05ed      	lsls	r5, r5, #23
    2242:	2310      	movs	r3, #16
    2244:	616b      	str	r3, [r5, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    2246:	60ab      	str	r3, [r5, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2248:	4c37      	ldr	r4, [pc, #220]	; (2328 <ETH_SPI_init+0x110>)
    224a:	4b38      	ldr	r3, [pc, #224]	; (232c <ETH_SPI_init+0x114>)
    224c:	62a3      	str	r3, [r4, #40]	; 0x28
    224e:	23c0      	movs	r3, #192	; 0xc0
    2250:	061b      	lsls	r3, r3, #24
    2252:	469b      	mov	fp, r3
    2254:	62a3      	str	r3, [r4, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2256:	2244      	movs	r2, #68	; 0x44
    2258:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    225a:	2701      	movs	r7, #1
    225c:	43bb      	bics	r3, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    225e:	2601      	movs	r6, #1
    2260:	4333      	orrs	r3, r6
    2262:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2264:	54a3      	strb	r3, [r4, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2266:	3a12      	subs	r2, #18
    2268:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    226a:	200f      	movs	r0, #15
    226c:	4383      	bics	r3, r0
	tmp |= PORT_PMUX_PMUXE(data);
    226e:	2103      	movs	r1, #3
    2270:	468c      	mov	ip, r1
    2272:	4661      	mov	r1, ip
    2274:	430b      	orrs	r3, r1
    2276:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2278:	54a3      	strb	r3, [r4, r2]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    227a:	2320      	movs	r3, #32
    227c:	616b      	str	r3, [r5, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    227e:	60ab      	str	r3, [r5, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2280:	4b2b      	ldr	r3, [pc, #172]	; (2330 <ETH_SPI_init+0x118>)
    2282:	62a3      	str	r3, [r4, #40]	; 0x28
    2284:	465b      	mov	r3, fp
    2286:	62a3      	str	r3, [r4, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2288:	2345      	movs	r3, #69	; 0x45
    228a:	469b      	mov	fp, r3
    228c:	5ce3      	ldrb	r3, [r4, r3]
	tmp &= ~PORT_PINCFG_PMUXEN;
    228e:	43bb      	bics	r3, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2290:	4333      	orrs	r3, r6
    2292:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2294:	4659      	mov	r1, fp
    2296:	5463      	strb	r3, [r4, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2298:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    229a:	3936      	subs	r1, #54	; 0x36
    229c:	400b      	ands	r3, r1
	tmp |= PORT_PMUX_PMUXO(data);
    229e:	2130      	movs	r1, #48	; 0x30
    22a0:	468b      	mov	fp, r1
    22a2:	4659      	mov	r1, fp
    22a4:	430b      	orrs	r3, r1
    22a6:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    22a8:	54a3      	strb	r3, [r4, r2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    22aa:	2340      	movs	r3, #64	; 0x40
    22ac:	606b      	str	r3, [r5, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    22ae:	4b21      	ldr	r3, [pc, #132]	; (2334 <ETH_SPI_init+0x11c>)
    22b0:	62a3      	str	r3, [r4, #40]	; 0x28
    22b2:	4b21      	ldr	r3, [pc, #132]	; (2338 <ETH_SPI_init+0x120>)
    22b4:	62a3      	str	r3, [r4, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    22b6:	2346      	movs	r3, #70	; 0x46
    22b8:	5ce2      	ldrb	r2, [r4, r3]
    22ba:	4651      	mov	r1, sl
    22bc:	438a      	bics	r2, r1
    22be:	54e2      	strb	r2, [r4, r3]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    22c0:	5ce2      	ldrb	r2, [r4, r3]
	tmp &= ~PORT_PINCFG_PMUXEN;
    22c2:	43ba      	bics	r2, r7
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    22c4:	4332      	orrs	r2, r6
    22c6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    22c8:	54e2      	strb	r2, [r4, r3]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    22ca:	2233      	movs	r2, #51	; 0x33
    22cc:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    22ce:	4383      	bics	r3, r0
	tmp |= PORT_PMUX_PMUXE(data);
    22d0:	4661      	mov	r1, ip
    22d2:	430b      	orrs	r3, r1
    22d4:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    22d6:	54a3      	strb	r3, [r4, r2]
	spi_m_sync_init(&ETH_SPI, SERCOM0);
    22d8:	4910      	ldr	r1, [pc, #64]	; (231c <ETH_SPI_init+0x104>)
    22da:	4811      	ldr	r0, [pc, #68]	; (2320 <ETH_SPI_init+0x108>)
    22dc:	47c8      	blx	r9
	spi_m_sync_get_io_descriptor(&ETH_SPI, &eth_spi);
    22de:	4917      	ldr	r1, [pc, #92]	; (233c <ETH_SPI_init+0x124>)
    22e0:	480f      	ldr	r0, [pc, #60]	; (2320 <ETH_SPI_init+0x108>)
    22e2:	4b17      	ldr	r3, [pc, #92]	; (2340 <ETH_SPI_init+0x128>)
    22e4:	4798      	blx	r3
	spi_m_sync_enable(&ETH_SPI);
    22e6:	480e      	ldr	r0, [pc, #56]	; (2320 <ETH_SPI_init+0x108>)
    22e8:	4b16      	ldr	r3, [pc, #88]	; (2344 <ETH_SPI_init+0x12c>)
    22ea:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    22ec:	2380      	movs	r3, #128	; 0x80
    22ee:	031b      	lsls	r3, r3, #12
    22f0:	61ab      	str	r3, [r5, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    22f2:	60ab      	str	r3, [r5, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    22f4:	2380      	movs	r3, #128	; 0x80
    22f6:	05db      	lsls	r3, r3, #23
    22f8:	62a3      	str	r3, [r4, #40]	; 0x28
    22fa:	4b13      	ldr	r3, [pc, #76]	; (2348 <ETH_SPI_init+0x130>)
    22fc:	62a3      	str	r3, [r4, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    22fe:	2253      	movs	r2, #83	; 0x53
    2300:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2302:	43bb      	bics	r3, r7
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2304:	54a3      	strb	r3, [r4, r2]
}
    2306:	bc1c      	pop	{r2, r3, r4}
    2308:	4691      	mov	r9, r2
    230a:	469a      	mov	sl, r3
    230c:	46a3      	mov	fp, r4
    230e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2310:	40000400 	.word	0x40000400
    2314:	0000400d 	.word	0x0000400d
    2318:	40000c00 	.word	0x40000c00
    231c:	42000800 	.word	0x42000800
    2320:	20000d9c 	.word	0x20000d9c
    2324:	00000461 	.word	0x00000461
    2328:	41004400 	.word	0x41004400
    232c:	40000010 	.word	0x40000010
    2330:	40000020 	.word	0x40000020
    2334:	40020040 	.word	0x40020040
    2338:	c0020000 	.word	0xc0020000
    233c:	20000cfc 	.word	0x20000cfc
    2340:	000005a1 	.word	0x000005a1
    2344:	000004b9 	.word	0x000004b9
    2348:	c0000008 	.word	0xc0000008

0000234c <ETH_SPI_Select>:
/**
 * \brief Set output level on port with mask
 */
static inline void _gpio_set_level(const enum gpio_port port, const uint32_t mask, const bool level)
{
	if (level) {
    234c:	2800      	cmp	r0, #0
    234e:	d104      	bne.n	235a <ETH_SPI_Select+0xe>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2350:	2280      	movs	r2, #128	; 0x80
    2352:	23c0      	movs	r3, #192	; 0xc0
    2354:	05db      	lsls	r3, r3, #23
    2356:	615a      	str	r2, [r3, #20]
}
    2358:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    235a:	2280      	movs	r2, #128	; 0x80
    235c:	23c0      	movs	r3, #192	; 0xc0
    235e:	05db      	lsls	r3, r3, #23
    2360:	619a      	str	r2, [r3, #24]
    2362:	e7f9      	b.n	2358 <ETH_SPI_Select+0xc>

00002364 <W5500_Select>:
void W5500_Select(void){
    2364:	b510      	push	{r4, lr}
	ETH_SPI_Select(false);
    2366:	2000      	movs	r0, #0
    2368:	4b01      	ldr	r3, [pc, #4]	; (2370 <W5500_Select+0xc>)
    236a:	4798      	blx	r3
}
    236c:	bd10      	pop	{r4, pc}
    236e:	46c0      	nop			; (mov r8, r8)
    2370:	0000234d 	.word	0x0000234d

00002374 <W5500_Unselect>:
void W5500_Unselect(void){
    2374:	b510      	push	{r4, lr}
	ETH_SPI_Select(true);
    2376:	2001      	movs	r0, #1
    2378:	4b01      	ldr	r3, [pc, #4]	; (2380 <W5500_Unselect+0xc>)
    237a:	4798      	blx	r3
}
    237c:	bd10      	pop	{r4, pc}
    237e:	46c0      	nop			; (mov r8, r8)
    2380:	0000234d 	.word	0x0000234d

00002384 <W5500_ReadBuff>:
void W5500_ReadBuff(uint8_t* buff, uint16_t len){
    2384:	b510      	push	{r4, lr}
    2386:	0003      	movs	r3, r0
    2388:	000a      	movs	r2, r1
	io_read(eth_spi,buff,len);
    238a:	4903      	ldr	r1, [pc, #12]	; (2398 <W5500_ReadBuff+0x14>)
    238c:	6808      	ldr	r0, [r1, #0]
    238e:	0019      	movs	r1, r3
    2390:	4b02      	ldr	r3, [pc, #8]	; (239c <W5500_ReadBuff+0x18>)
    2392:	4798      	blx	r3
}
    2394:	bd10      	pop	{r4, pc}
    2396:	46c0      	nop			; (mov r8, r8)
    2398:	20000cfc 	.word	0x20000cfc
    239c:	00000429 	.word	0x00000429

000023a0 <W5500_WriteBuff>:
void W5500_WriteBuff(uint8_t* buff, uint16_t len){
    23a0:	b510      	push	{r4, lr}
    23a2:	0003      	movs	r3, r0
    23a4:	000a      	movs	r2, r1
	io_write(eth_spi,buff,len);
    23a6:	4903      	ldr	r1, [pc, #12]	; (23b4 <W5500_WriteBuff+0x14>)
    23a8:	6808      	ldr	r0, [r1, #0]
    23aa:	0019      	movs	r1, r3
    23ac:	4b02      	ldr	r3, [pc, #8]	; (23b8 <W5500_WriteBuff+0x18>)
    23ae:	4798      	blx	r3
}
    23b0:	bd10      	pop	{r4, pc}
    23b2:	46c0      	nop			; (mov r8, r8)
    23b4:	20000cfc 	.word	0x20000cfc
    23b8:	00000421 	.word	0x00000421

000023bc <W5500_ReadByte>:
uint8_t W5500_ReadByte(void){
    23bc:	b510      	push	{r4, lr}
    23be:	b082      	sub	sp, #8
	uint8_t data_byte = 0;
    23c0:	466b      	mov	r3, sp
    23c2:	1ddc      	adds	r4, r3, #7
    23c4:	2300      	movs	r3, #0
    23c6:	7023      	strb	r3, [r4, #0]
	io_read(eth_spi,&data_byte,1);
    23c8:	4b04      	ldr	r3, [pc, #16]	; (23dc <W5500_ReadByte+0x20>)
    23ca:	6818      	ldr	r0, [r3, #0]
    23cc:	2201      	movs	r2, #1
    23ce:	0021      	movs	r1, r4
    23d0:	4b03      	ldr	r3, [pc, #12]	; (23e0 <W5500_ReadByte+0x24>)
    23d2:	4798      	blx	r3
	return data_byte;
    23d4:	7820      	ldrb	r0, [r4, #0]
}
    23d6:	b002      	add	sp, #8
    23d8:	bd10      	pop	{r4, pc}
    23da:	46c0      	nop			; (mov r8, r8)
    23dc:	20000cfc 	.word	0x20000cfc
    23e0:	00000429 	.word	0x00000429

000023e4 <W5500_Write_byte>:
void W5500_Write_byte(uint8_t byte){
    23e4:	b500      	push	{lr}
    23e6:	b083      	sub	sp, #12
    23e8:	466b      	mov	r3, sp
    23ea:	1dd9      	adds	r1, r3, #7
    23ec:	7008      	strb	r0, [r1, #0]
	io_write(eth_spi, &byte, 1);
    23ee:	4b03      	ldr	r3, [pc, #12]	; (23fc <W5500_Write_byte+0x18>)
    23f0:	6818      	ldr	r0, [r3, #0]
    23f2:	2201      	movs	r2, #1
    23f4:	4b02      	ldr	r3, [pc, #8]	; (2400 <W5500_Write_byte+0x1c>)
    23f6:	4798      	blx	r3
}
    23f8:	b003      	add	sp, #12
    23fa:	bd00      	pop	{pc}
    23fc:	20000cfc 	.word	0x20000cfc
    2400:	00000421 	.word	0x00000421

00002404 <EXT_SPI_init>:
void EXT_SPI_init(void){
    2404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2406:	46d6      	mov	lr, sl
    2408:	464f      	mov	r7, r9
    240a:	b580      	push	{r7, lr}
    240c:	4a33      	ldr	r2, [pc, #204]	; (24dc <EXT_SPI_init+0xd8>)
    240e:	6a13      	ldr	r3, [r2, #32]
    2410:	2120      	movs	r1, #32
    2412:	430b      	orrs	r3, r1
    2414:	6213      	str	r3, [r2, #32]
    2416:	4a32      	ldr	r2, [pc, #200]	; (24e0 <EXT_SPI_init+0xdc>)
    2418:	4b32      	ldr	r3, [pc, #200]	; (24e4 <EXT_SPI_init+0xe0>)
    241a:	805a      	strh	r2, [r3, #2]
	spi_m_sync_init(&EXT_SPI, SERCOM3);
    241c:	4932      	ldr	r1, [pc, #200]	; (24e8 <EXT_SPI_init+0xe4>)
    241e:	4833      	ldr	r0, [pc, #204]	; (24ec <EXT_SPI_init+0xe8>)
    2420:	4e33      	ldr	r6, [pc, #204]	; (24f0 <EXT_SPI_init+0xec>)
    2422:	47b0      	blx	r6
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2424:	22c0      	movs	r2, #192	; 0xc0
    2426:	05d2      	lsls	r2, r2, #23
    2428:	2380      	movs	r3, #128	; 0x80
    242a:	025b      	lsls	r3, r3, #9
    242c:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    242e:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2430:	4b30      	ldr	r3, [pc, #192]	; (24f4 <EXT_SPI_init+0xf0>)
    2432:	2180      	movs	r1, #128	; 0x80
    2434:	05c9      	lsls	r1, r1, #23
    2436:	468a      	mov	sl, r1
    2438:	6299      	str	r1, [r3, #40]	; 0x28
    243a:	492f      	ldr	r1, [pc, #188]	; (24f8 <EXT_SPI_init+0xf4>)
    243c:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    243e:	2050      	movs	r0, #80	; 0x50
    2440:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2442:	2401      	movs	r4, #1
    2444:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2446:	4321      	orrs	r1, r4
    2448:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    244a:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    244c:	2138      	movs	r1, #56	; 0x38
    244e:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    2450:	250f      	movs	r5, #15
    2452:	46ac      	mov	ip, r5
    2454:	43a8      	bics	r0, r5
	tmp |= PORT_PMUX_PMUXE(data);
    2456:	2703      	movs	r7, #3
    2458:	4338      	orrs	r0, r7
    245a:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    245c:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    245e:	2080      	movs	r0, #128	; 0x80
    2460:	0280      	lsls	r0, r0, #10
    2462:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    2464:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2466:	4650      	mov	r0, sl
    2468:	6298      	str	r0, [r3, #40]	; 0x28
    246a:	4824      	ldr	r0, [pc, #144]	; (24fc <EXT_SPI_init+0xf8>)
    246c:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    246e:	2051      	movs	r0, #81	; 0x51
    2470:	4682      	mov	sl, r0
    2472:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2474:	43a0      	bics	r0, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2476:	4320      	orrs	r0, r4
    2478:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    247a:	4655      	mov	r5, sl
    247c:	5558      	strb	r0, [r3, r5]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    247e:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    2480:	3d42      	subs	r5, #66	; 0x42
    2482:	4028      	ands	r0, r5
	tmp |= PORT_PMUX_PMUXO(data);
    2484:	2530      	movs	r5, #48	; 0x30
    2486:	46aa      	mov	sl, r5
    2488:	4655      	mov	r5, sl
    248a:	4328      	orrs	r0, r5
    248c:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    248e:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    2490:	2180      	movs	r1, #128	; 0x80
    2492:	02c9      	lsls	r1, r1, #11
    2494:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2496:	4a1a      	ldr	r2, [pc, #104]	; (2500 <EXT_SPI_init+0xfc>)
    2498:	629a      	str	r2, [r3, #40]	; 0x28
    249a:	4a1a      	ldr	r2, [pc, #104]	; (2504 <EXT_SPI_init+0x100>)
    249c:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    249e:	2252      	movs	r2, #82	; 0x52
    24a0:	5c99      	ldrb	r1, [r3, r2]
    24a2:	2004      	movs	r0, #4
    24a4:	4381      	bics	r1, r0
    24a6:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    24a8:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    24aa:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    24ac:	4321      	orrs	r1, r4
    24ae:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    24b0:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    24b2:	2139      	movs	r1, #57	; 0x39
    24b4:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    24b6:	4660      	mov	r0, ip
    24b8:	4382      	bics	r2, r0
	tmp |= PORT_PMUX_PMUXE(data);
    24ba:	433a      	orrs	r2, r7
    24bc:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    24be:	545a      	strb	r2, [r3, r1]
	spi_m_sync_init(&EXT_SPI, SERCOM3);
    24c0:	4909      	ldr	r1, [pc, #36]	; (24e8 <EXT_SPI_init+0xe4>)
    24c2:	480a      	ldr	r0, [pc, #40]	; (24ec <EXT_SPI_init+0xe8>)
    24c4:	47b0      	blx	r6
	spi_m_sync_get_io_descriptor(&EXT_SPI, &ext_spi);
    24c6:	4910      	ldr	r1, [pc, #64]	; (2508 <EXT_SPI_init+0x104>)
    24c8:	4808      	ldr	r0, [pc, #32]	; (24ec <EXT_SPI_init+0xe8>)
    24ca:	4b10      	ldr	r3, [pc, #64]	; (250c <EXT_SPI_init+0x108>)
    24cc:	4798      	blx	r3
	spi_m_sync_enable(&EXT_SPI);
    24ce:	4807      	ldr	r0, [pc, #28]	; (24ec <EXT_SPI_init+0xe8>)
    24d0:	4b0f      	ldr	r3, [pc, #60]	; (2510 <EXT_SPI_init+0x10c>)
    24d2:	4798      	blx	r3
}
    24d4:	bc0c      	pop	{r2, r3}
    24d6:	4691      	mov	r9, r2
    24d8:	469a      	mov	sl, r3
    24da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    24dc:	40000400 	.word	0x40000400
    24e0:	00004010 	.word	0x00004010
    24e4:	40000c00 	.word	0x40000c00
    24e8:	42001400 	.word	0x42001400
    24ec:	20000d84 	.word	0x20000d84
    24f0:	00000461 	.word	0x00000461
    24f4:	41004400 	.word	0x41004400
    24f8:	c0000001 	.word	0xc0000001
    24fc:	c0000002 	.word	0xc0000002
    2500:	40020000 	.word	0x40020000
    2504:	c0020004 	.word	0xc0020004
    2508:	20000d80 	.word	0x20000d80
    250c:	000005a1 	.word	0x000005a1
    2510:	000004b9 	.word	0x000004b9

00002514 <EXT_I2C_init>:
void EXT_I2C_init(void){
    2514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2516:	4a1e      	ldr	r2, [pc, #120]	; (2590 <EXT_I2C_init+0x7c>)
    2518:	6a13      	ldr	r3, [r2, #32]
    251a:	2110      	movs	r1, #16
    251c:	430b      	orrs	r3, r1
    251e:	6213      	str	r3, [r2, #32]
    2520:	4b1c      	ldr	r3, [pc, #112]	; (2594 <EXT_I2C_init+0x80>)
    2522:	4a1d      	ldr	r2, [pc, #116]	; (2598 <EXT_I2C_init+0x84>)
    2524:	805a      	strh	r2, [r3, #2]
    2526:	4a1d      	ldr	r2, [pc, #116]	; (259c <EXT_I2C_init+0x88>)
    2528:	805a      	strh	r2, [r3, #2]
	i2c_m_sync_init(&EXT_I2C, SERCOM2);
    252a:	4c1d      	ldr	r4, [pc, #116]	; (25a0 <EXT_I2C_init+0x8c>)
    252c:	491d      	ldr	r1, [pc, #116]	; (25a4 <EXT_I2C_init+0x90>)
    252e:	0020      	movs	r0, r4
    2530:	4b1d      	ldr	r3, [pc, #116]	; (25a8 <EXT_I2C_init+0x94>)
    2532:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    2534:	4b1d      	ldr	r3, [pc, #116]	; (25ac <EXT_I2C_init+0x98>)
    2536:	204c      	movs	r0, #76	; 0x4c
    2538:	5c19      	ldrb	r1, [r3, r0]
    253a:	2204      	movs	r2, #4
    253c:	4391      	bics	r1, r2
    253e:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2540:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2542:	2601      	movs	r6, #1
    2544:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2546:	2501      	movs	r5, #1
    2548:	4329      	orrs	r1, r5
    254a:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    254c:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    254e:	3816      	subs	r0, #22
    2550:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    2552:	270f      	movs	r7, #15
    2554:	43b9      	bics	r1, r7
	tmp |= PORT_PMUX_PMUXE(data);
    2556:	2702      	movs	r7, #2
    2558:	4339      	orrs	r1, r7
    255a:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    255c:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    255e:	214d      	movs	r1, #77	; 0x4d
    2560:	5c5f      	ldrb	r7, [r3, r1]
    2562:	4397      	bics	r7, r2
    2564:	545f      	strb	r7, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2566:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2568:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    256a:	432a      	orrs	r2, r5
    256c:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    256e:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2570:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    2572:	393e      	subs	r1, #62	; 0x3e
    2574:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
    2576:	2120      	movs	r1, #32
    2578:	430a      	orrs	r2, r1
    257a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    257c:	541a      	strb	r2, [r3, r0]
	i2c_m_sync_get_io_descriptor(&EXT_I2C, &ext_i2c);
    257e:	490c      	ldr	r1, [pc, #48]	; (25b0 <EXT_I2C_init+0x9c>)
    2580:	0020      	movs	r0, r4
    2582:	4b0c      	ldr	r3, [pc, #48]	; (25b4 <EXT_I2C_init+0xa0>)
    2584:	4798      	blx	r3
	i2c_m_sync_enable(&EXT_I2C);
    2586:	0020      	movs	r0, r4
    2588:	4b0b      	ldr	r3, [pc, #44]	; (25b8 <EXT_I2C_init+0xa4>)
    258a:	4798      	blx	r3
}
    258c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    258e:	46c0      	nop			; (mov r8, r8)
    2590:	40000400 	.word	0x40000400
    2594:	40000c00 	.word	0x40000c00
    2598:	0000400f 	.word	0x0000400f
    259c:	0000430c 	.word	0x0000430c
    25a0:	20000e28 	.word	0x20000e28
    25a4:	42001000 	.word	0x42001000
    25a8:	00000371 	.word	0x00000371
    25ac:	41004400 	.word	0x41004400
    25b0:	20000db8 	.word	0x20000db8
    25b4:	00000419 	.word	0x00000419
    25b8:	000003b1 	.word	0x000003b1

000025bc <I2C_write_batch>:
bool I2C_write_batch(uint8_t addres, uint8_t *data, uint8_t data_len){
    25bc:	b570      	push	{r4, r5, r6, lr}
    25be:	000d      	movs	r5, r1
    25c0:	0014      	movs	r4, r2
	i2c_m_sync_set_slaveaddr(&EXT_I2C, addres, I2C_M_SEVEN);
    25c2:	b201      	sxth	r1, r0
    25c4:	2280      	movs	r2, #128	; 0x80
    25c6:	0112      	lsls	r2, r2, #4
    25c8:	4805      	ldr	r0, [pc, #20]	; (25e0 <I2C_write_batch+0x24>)
    25ca:	4b06      	ldr	r3, [pc, #24]	; (25e4 <I2C_write_batch+0x28>)
    25cc:	4798      	blx	r3
	return (io_write(ext_i2c, (uint8_t *)data, data_len) >= 0) ? true : false;
    25ce:	b2a2      	uxth	r2, r4
    25d0:	4b05      	ldr	r3, [pc, #20]	; (25e8 <I2C_write_batch+0x2c>)
    25d2:	6818      	ldr	r0, [r3, #0]
    25d4:	0029      	movs	r1, r5
    25d6:	4b05      	ldr	r3, [pc, #20]	; (25ec <I2C_write_batch+0x30>)
    25d8:	4798      	blx	r3
    25da:	43c0      	mvns	r0, r0
    25dc:	0fc0      	lsrs	r0, r0, #31
}
    25de:	bd70      	pop	{r4, r5, r6, pc}
    25e0:	20000e28 	.word	0x20000e28
    25e4:	000003bd 	.word	0x000003bd
    25e8:	20000db8 	.word	0x20000db8
    25ec:	00000421 	.word	0x00000421

000025f0 <I2C_read_batch>:
bool I2C_read_batch(uint8_t addres, uint8_t reg ,uint8_t *data, uint8_t data_len){
    25f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    25f2:	000c      	movs	r4, r1
    25f4:	0015      	movs	r5, r2
    25f6:	001e      	movs	r6, r3
	i2c_m_sync_set_slaveaddr(&EXT_I2C, addres, I2C_M_SEVEN);
    25f8:	b201      	sxth	r1, r0
    25fa:	4f07      	ldr	r7, [pc, #28]	; (2618 <I2C_read_batch+0x28>)
    25fc:	2280      	movs	r2, #128	; 0x80
    25fe:	0112      	lsls	r2, r2, #4
    2600:	0038      	movs	r0, r7
    2602:	4b06      	ldr	r3, [pc, #24]	; (261c <I2C_read_batch+0x2c>)
    2604:	4798      	blx	r3
	i2c_m_sync_cmd_read(&EXT_I2C, reg, data, data_len);
    2606:	0033      	movs	r3, r6
    2608:	002a      	movs	r2, r5
    260a:	0021      	movs	r1, r4
    260c:	0038      	movs	r0, r7
    260e:	4c04      	ldr	r4, [pc, #16]	; (2620 <I2C_read_batch+0x30>)
    2610:	47a0      	blx	r4
}
    2612:	2001      	movs	r0, #1
    2614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2616:	46c0      	nop			; (mov r8, r8)
    2618:	20000e28 	.word	0x20000e28
    261c:	000003bd 	.word	0x000003bd
    2620:	000003d1 	.word	0x000003d1

00002624 <SerialReady>:
uint8_t SerialReady(uint8_t* buff) {
    2624:	b570      	push	{r4, r5, r6, lr}
	if (serialBufferOverflow) {
    2626:	4b14      	ldr	r3, [pc, #80]	; (2678 <SerialReady+0x54>)
    2628:	781b      	ldrb	r3, [r3, #0]
    262a:	2b00      	cmp	r3, #0
    262c:	d004      	beq.n	2638 <SerialReady+0x14>
		serialBufferOverflow = 0; // ???????? ???? ????????????
    262e:	2200      	movs	r2, #0
    2630:	4b11      	ldr	r3, [pc, #68]	; (2678 <SerialReady+0x54>)
    2632:	701a      	strb	r2, [r3, #0]
		return 2; // ??? ??? ????????????
    2634:	2002      	movs	r0, #2
}
    2636:	bd70      	pop	{r4, r5, r6, pc}
	if (serialComplete) {
    2638:	4b10      	ldr	r3, [pc, #64]	; (267c <SerialReady+0x58>)
    263a:	781b      	ldrb	r3, [r3, #0]
    263c:	2b00      	cmp	r3, #0
    263e:	d101      	bne.n	2644 <SerialReady+0x20>
	return 0; // ???? ?? ?? ??????
    2640:	2000      	movs	r0, #0
    2642:	e7f8      	b.n	2636 <SerialReady+0x12>
		memcpy(buff, rx_buffer, serialReceivedBytesCounter + 1); // ???????? ? '\0'
    2644:	4c0e      	ldr	r4, [pc, #56]	; (2680 <SerialReady+0x5c>)
    2646:	7822      	ldrb	r2, [r4, #0]
    2648:	3201      	adds	r2, #1
    264a:	4d0e      	ldr	r5, [pc, #56]	; (2684 <SerialReady+0x60>)
    264c:	0029      	movs	r1, r5
    264e:	4b0e      	ldr	r3, [pc, #56]	; (2688 <SerialReady+0x64>)
    2650:	4798      	blx	r3
		memset(rx_buffer, 0, RX_BUFFER_SIZE);                   // ???????? ?????
    2652:	2280      	movs	r2, #128	; 0x80
    2654:	2100      	movs	r1, #0
    2656:	0028      	movs	r0, r5
    2658:	4b0c      	ldr	r3, [pc, #48]	; (268c <SerialReady+0x68>)
    265a:	4798      	blx	r3
		serialComplete = 0;
    265c:	2300      	movs	r3, #0
    265e:	4a07      	ldr	r2, [pc, #28]	; (267c <SerialReady+0x58>)
    2660:	7013      	strb	r3, [r2, #0]
		serialReceivedBytesCounter = 0;
    2662:	7023      	strb	r3, [r4, #0]
		DEBUG_SERIAL.rx.read_index = 0;
    2664:	4a0a      	ldr	r2, [pc, #40]	; (2690 <SerialReady+0x6c>)
    2666:	63d3      	str	r3, [r2, #60]	; 0x3c
		DEBUG_SERIAL.rx.write_index = 0;
    2668:	6413      	str	r3, [r2, #64]	; 0x40
		serialReceiving = 0;
    266a:	4a0a      	ldr	r2, [pc, #40]	; (2694 <SerialReady+0x70>)
    266c:	7013      	strb	r3, [r2, #0]
		serialBufferOverflow = 0;
    266e:	4a02      	ldr	r2, [pc, #8]	; (2678 <SerialReady+0x54>)
    2670:	7013      	strb	r3, [r2, #0]
		return 1; // ??????? ???????? ????
    2672:	2001      	movs	r0, #1
    2674:	e7df      	b.n	2636 <SerialReady+0x12>
    2676:	46c0      	nop			; (mov r8, r8)
    2678:	20000a82 	.word	0x20000a82
    267c:	20000a83 	.word	0x20000a83
    2680:	20000a84 	.word	0x20000a84
    2684:	20000d00 	.word	0x20000d00
    2688:	00006ca9 	.word	0x00006ca9
    268c:	00006d2d 	.word	0x00006d2d
    2690:	20000dbc 	.word	0x20000dbc
    2694:	20000a85 	.word	0x20000a85

00002698 <DEBUG_Serial_init>:
void DEBUG_Serial_init(void) {
    2698:	b5f0      	push	{r4, r5, r6, r7, lr}
    269a:	b085      	sub	sp, #20
    269c:	4a26      	ldr	r2, [pc, #152]	; (2738 <DEBUG_Serial_init+0xa0>)
    269e:	6a13      	ldr	r3, [r2, #32]
    26a0:	2140      	movs	r1, #64	; 0x40
    26a2:	430b      	orrs	r3, r1
    26a4:	6213      	str	r3, [r2, #32]
    26a6:	4a25      	ldr	r2, [pc, #148]	; (273c <DEBUG_Serial_init+0xa4>)
    26a8:	4b25      	ldr	r3, [pc, #148]	; (2740 <DEBUG_Serial_init+0xa8>)
    26aa:	805a      	strh	r2, [r3, #2]
	usart_async_init(&DEBUG_SERIAL, SERCOM4, rx_buffer, RX_BUFFER_SIZE, (void *)NULL);
    26ac:	4c25      	ldr	r4, [pc, #148]	; (2744 <DEBUG_Serial_init+0xac>)
    26ae:	2300      	movs	r3, #0
    26b0:	9300      	str	r3, [sp, #0]
    26b2:	3380      	adds	r3, #128	; 0x80
    26b4:	4a24      	ldr	r2, [pc, #144]	; (2748 <DEBUG_Serial_init+0xb0>)
    26b6:	4925      	ldr	r1, [pc, #148]	; (274c <DEBUG_Serial_init+0xb4>)
    26b8:	0020      	movs	r0, r4
    26ba:	4d25      	ldr	r5, [pc, #148]	; (2750 <DEBUG_Serial_init+0xb8>)
    26bc:	47a8      	blx	r5
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    26be:	4b25      	ldr	r3, [pc, #148]	; (2754 <DEBUG_Serial_init+0xbc>)
    26c0:	21cc      	movs	r1, #204	; 0xcc
    26c2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    26c4:	2001      	movs	r0, #1
    26c6:	4684      	mov	ip, r0
    26c8:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    26ca:	2701      	movs	r7, #1
    26cc:	433a      	orrs	r2, r7
    26ce:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    26d0:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    26d2:	22b6      	movs	r2, #182	; 0xb6
    26d4:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    26d6:	260f      	movs	r6, #15
    26d8:	43b0      	bics	r0, r6
	tmp |= PORT_PMUX_PMUXE(data);
    26da:	2502      	movs	r5, #2
    26dc:	4328      	orrs	r0, r5
    26de:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    26e0:	5498      	strb	r0, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    26e2:	3218      	adds	r2, #24
    26e4:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    26e6:	4660      	mov	r0, ip
    26e8:	4381      	bics	r1, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    26ea:	4339      	orrs	r1, r7
    26ec:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    26ee:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    26f0:	21b7      	movs	r1, #183	; 0xb7
    26f2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    26f4:	43b2      	bics	r2, r6
	tmp |= PORT_PMUX_PMUXE(data);
    26f6:	432a      	orrs	r2, r5
    26f8:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    26fa:	545a      	strb	r2, [r3, r1]
	usart_async_get_io_descriptor(&DEBUG_SERIAL, &debug_serial);
    26fc:	4916      	ldr	r1, [pc, #88]	; (2758 <DEBUG_Serial_init+0xc0>)
    26fe:	0020      	movs	r0, r4
    2700:	4b16      	ldr	r3, [pc, #88]	; (275c <DEBUG_Serial_init+0xc4>)
    2702:	4798      	blx	r3
	usart_async_register_callback(&DEBUG_SERIAL, USART_ASYNC_TXC_CB, tx_cb_USART);
    2704:	4a16      	ldr	r2, [pc, #88]	; (2760 <DEBUG_Serial_init+0xc8>)
    2706:	2101      	movs	r1, #1
    2708:	0020      	movs	r0, r4
    270a:	4d16      	ldr	r5, [pc, #88]	; (2764 <DEBUG_Serial_init+0xcc>)
    270c:	47a8      	blx	r5
	usart_async_register_callback(&DEBUG_SERIAL, USART_ASYNC_RXC_CB, rx_cb_USART);
    270e:	4a16      	ldr	r2, [pc, #88]	; (2768 <DEBUG_Serial_init+0xd0>)
    2710:	2100      	movs	r1, #0
    2712:	0020      	movs	r0, r4
    2714:	47a8      	blx	r5
	usart_async_register_callback(&DEBUG_SERIAL, USART_ASYNC_ERROR_CB, err_cb_USART);
    2716:	4a15      	ldr	r2, [pc, #84]	; (276c <DEBUG_Serial_init+0xd4>)
    2718:	2102      	movs	r1, #2
    271a:	0020      	movs	r0, r4
    271c:	47a8      	blx	r5
	while (io_read(&DEBUG_SERIAL, &dummy, 1));
    271e:	2201      	movs	r2, #1
    2720:	210f      	movs	r1, #15
    2722:	4469      	add	r1, sp
    2724:	4807      	ldr	r0, [pc, #28]	; (2744 <DEBUG_Serial_init+0xac>)
    2726:	4b12      	ldr	r3, [pc, #72]	; (2770 <DEBUG_Serial_init+0xd8>)
    2728:	4798      	blx	r3
    272a:	2800      	cmp	r0, #0
    272c:	d1f7      	bne.n	271e <DEBUG_Serial_init+0x86>
	usart_async_enable(&DEBUG_SERIAL);
    272e:	4805      	ldr	r0, [pc, #20]	; (2744 <DEBUG_Serial_init+0xac>)
    2730:	4b10      	ldr	r3, [pc, #64]	; (2774 <DEBUG_Serial_init+0xdc>)
    2732:	4798      	blx	r3
}
    2734:	b005      	add	sp, #20
    2736:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2738:	40000400 	.word	0x40000400
    273c:	00004011 	.word	0x00004011
    2740:	40000c00 	.word	0x40000c00
    2744:	20000dbc 	.word	0x20000dbc
    2748:	20000d00 	.word	0x20000d00
    274c:	42001800 	.word	0x42001800
    2750:	00000929 	.word	0x00000929
    2754:	41004400 	.word	0x41004400
    2758:	20000db4 	.word	0x20000db4
    275c:	000009f1 	.word	0x000009f1
    2760:	00001d29 	.word	0x00001d29
    2764:	00000a21 	.word	0x00000a21
    2768:	00001dd1 	.word	0x00001dd1
    276c:	00001e95 	.word	0x00001e95
    2770:	00000429 	.word	0x00000429
    2774:	000009c5 	.word	0x000009c5

00002778 <mcu_init>:
{
    2778:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
    277a:	4b0a      	ldr	r3, [pc, #40]	; (27a4 <mcu_init+0x2c>)
    277c:	4798      	blx	r3
	gpio_init();
    277e:	4b0a      	ldr	r3, [pc, #40]	; (27a8 <mcu_init+0x30>)
    2780:	4798      	blx	r3
	ETH_SPI_init();
    2782:	4b0a      	ldr	r3, [pc, #40]	; (27ac <mcu_init+0x34>)
    2784:	4798      	blx	r3
	EXT_SPI_init();
    2786:	4b0a      	ldr	r3, [pc, #40]	; (27b0 <mcu_init+0x38>)
    2788:	4798      	blx	r3
	EXT_I2C_init();
    278a:	4b0a      	ldr	r3, [pc, #40]	; (27b4 <mcu_init+0x3c>)
    278c:	4798      	blx	r3
	DEBUG_Serial_init();
    278e:	4b0a      	ldr	r3, [pc, #40]	; (27b8 <mcu_init+0x40>)
    2790:	4798      	blx	r3
	ext_irq_register(ETH_INT, ETH_Handler);
    2792:	490a      	ldr	r1, [pc, #40]	; (27bc <mcu_init+0x44>)
    2794:	2028      	movs	r0, #40	; 0x28
    2796:	4b0a      	ldr	r3, [pc, #40]	; (27c0 <mcu_init+0x48>)
    2798:	4798      	blx	r3
	TIMER_IRQ_init();
    279a:	4b0a      	ldr	r3, [pc, #40]	; (27c4 <mcu_init+0x4c>)
    279c:	4798      	blx	r3
	EXT_IRG_init();
    279e:	4b0a      	ldr	r3, [pc, #40]	; (27c8 <mcu_init+0x50>)
    27a0:	4798      	blx	r3
}
    27a2:	bd10      	pop	{r4, pc}
    27a4:	00000c5d 	.word	0x00000c5d
    27a8:	00001eb1 	.word	0x00001eb1
    27ac:	00002219 	.word	0x00002219
    27b0:	00002405 	.word	0x00002405
    27b4:	00002515 	.word	0x00002515
    27b8:	00002699 	.word	0x00002699
    27bc:	00001d25 	.word	0x00001d25
    27c0:	00000231 	.word	0x00000231
    27c4:	00001d4d 	.word	0x00001d4d
    27c8:	000021b9 	.word	0x000021b9

000027cc <SerialWrite>:
void SerialWrite(uint8_t* buff) {
    27cc:	b510      	push	{r4, lr}
    27ce:	0004      	movs	r4, r0
	uint8_t buffLen = strlen((char *)buff);
    27d0:	4b0b      	ldr	r3, [pc, #44]	; (2800 <SerialWrite+0x34>)
    27d2:	4798      	blx	r3
    27d4:	b2c0      	uxtb	r0, r0
	if (buffLen >= 1) {
    27d6:	2800      	cmp	r0, #0
    27d8:	d100      	bne.n	27dc <SerialWrite+0x10>
}
    27da:	bd10      	pop	{r4, pc}
		serialTransmitting = 1;
    27dc:	2201      	movs	r2, #1
    27de:	4b09      	ldr	r3, [pc, #36]	; (2804 <SerialWrite+0x38>)
    27e0:	701a      	strb	r2, [r3, #0]
		io_write(debug_serial, buff, buffLen);
    27e2:	b282      	uxth	r2, r0
    27e4:	4b08      	ldr	r3, [pc, #32]	; (2808 <SerialWrite+0x3c>)
    27e6:	6818      	ldr	r0, [r3, #0]
    27e8:	0021      	movs	r1, r4
    27ea:	4b08      	ldr	r3, [pc, #32]	; (280c <SerialWrite+0x40>)
    27ec:	4798      	blx	r3
		uint32_t timeout = 100000; // ??????? ??? ????????? ?????????
    27ee:	4b08      	ldr	r3, [pc, #32]	; (2810 <SerialWrite+0x44>)
		while (serialTransmitting && --timeout);
    27f0:	4a04      	ldr	r2, [pc, #16]	; (2804 <SerialWrite+0x38>)
    27f2:	7812      	ldrb	r2, [r2, #0]
    27f4:	2a00      	cmp	r2, #0
    27f6:	d0f0      	beq.n	27da <SerialWrite+0xe>
    27f8:	3b01      	subs	r3, #1
    27fa:	2b00      	cmp	r3, #0
    27fc:	d1f8      	bne.n	27f0 <SerialWrite+0x24>
    27fe:	e7ec      	b.n	27da <SerialWrite+0xe>
    2800:	00007209 	.word	0x00007209
    2804:	20000a86 	.word	0x20000a86
    2808:	20000db4 	.word	0x20000db4
    280c:	00000421 	.word	0x00000421
    2810:	000186a0 	.word	0x000186a0

00002814 <_write>:
uint32_t _write(int file, char *ptr, int len) {
    2814:	b510      	push	{r4, lr}
    2816:	0014      	movs	r4, r2
	serialTransmitting = 1;
    2818:	2201      	movs	r2, #1
    281a:	4b06      	ldr	r3, [pc, #24]	; (2834 <_write+0x20>)
    281c:	701a      	strb	r2, [r3, #0]
	io_write(debug_serial, (uint8_t *)ptr, len);
    281e:	b2a2      	uxth	r2, r4
    2820:	4b05      	ldr	r3, [pc, #20]	; (2838 <_write+0x24>)
    2822:	6818      	ldr	r0, [r3, #0]
    2824:	4b05      	ldr	r3, [pc, #20]	; (283c <_write+0x28>)
    2826:	4798      	blx	r3
	while (serialTransmitting); 
    2828:	4b02      	ldr	r3, [pc, #8]	; (2834 <_write+0x20>)
    282a:	781b      	ldrb	r3, [r3, #0]
    282c:	2b00      	cmp	r3, #0
    282e:	d1fb      	bne.n	2828 <_write+0x14>
}
    2830:	0020      	movs	r0, r4
    2832:	bd10      	pop	{r4, pc}
    2834:	20000a86 	.word	0x20000a86
    2838:	20000db4 	.word	0x20000db4
    283c:	00000421 	.word	0x00000421

00002840 <_read>:
}
    2840:	2000      	movs	r0, #0
    2842:	4770      	bx	lr

00002844 <GetIpSwitch>:
uint8_t GetIpSwitch(void){
    2844:	b5f0      	push	{r4, r5, r6, r7, lr}
    2846:	46de      	mov	lr, fp
    2848:	4657      	mov	r7, sl
    284a:	464e      	mov	r6, r9
    284c:	4645      	mov	r5, r8
    284e:	b5e0      	push	{r5, r6, r7, lr}
    2850:	b087      	sub	sp, #28
 */
static inline uint32_t _gpio_get_level(const enum gpio_port port)
{
	uint32_t tmp;

	CRITICAL_SECTION_ENTER();
    2852:	a805      	add	r0, sp, #20
    2854:	4b30      	ldr	r3, [pc, #192]	; (2918 <GetIpSwitch+0xd4>)
    2856:	469b      	mov	fp, r3
    2858:	4798      	blx	r3
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    285a:	25c0      	movs	r5, #192	; 0xc0
    285c:	05ed      	lsls	r5, r5, #23
    285e:	2680      	movs	r6, #128	; 0x80
    2860:	59ac      	ldr	r4, [r5, r6]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    2862:	4b2e      	ldr	r3, [pc, #184]	; (291c <GetIpSwitch+0xd8>)
    2864:	469a      	mov	sl, r3
    2866:	23a0      	movs	r3, #160	; 0xa0
    2868:	4699      	mov	r9, r3
    286a:	4653      	mov	r3, sl
    286c:	464a      	mov	r2, r9
    286e:	5898      	ldr	r0, [r3, r2]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    2870:	2390      	movs	r3, #144	; 0x90
    2872:	4698      	mov	r8, r3
    2874:	58eb      	ldr	r3, [r5, r3]

	uint32_t dir_tmp = hri_port_read_DIR_reg(PORT_IOBUS, port);

	tmp = hri_port_read_IN_reg(PORT, port) & ~dir_tmp;
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    2876:	4043      	eors	r3, r0
    2878:	401c      	ands	r4, r3
    287a:	4044      	eors	r4, r0

	CRITICAL_SECTION_LEAVE();
    287c:	a805      	add	r0, sp, #20
    287e:	4f28      	ldr	r7, [pc, #160]	; (2920 <GetIpSwitch+0xdc>)
    2880:	47b8      	blx	r7
 *
 * \param[in] pin       The pin number for device
 */
static inline bool gpio_get_pin_level(const uint8_t pin)
{
	return (bool)(_gpio_get_level((enum gpio_port)GPIO_PORT(pin)) & (0x01U << GPIO_PIN(pin)));
    2882:	2020      	movs	r0, #32
    2884:	4004      	ands	r4, r0
	res |= (gpio_get_pin_level(IP_B0) << 0);
    2886:	0023      	movs	r3, r4
    2888:	1e5c      	subs	r4, r3, #1
    288a:	41a3      	sbcs	r3, r4
    288c:	9301      	str	r3, [sp, #4]
	CRITICAL_SECTION_ENTER();
    288e:	a804      	add	r0, sp, #16
    2890:	47d8      	blx	fp
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    2892:	59ac      	ldr	r4, [r5, r6]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    2894:	4652      	mov	r2, sl
    2896:	4649      	mov	r1, r9
    2898:	5852      	ldr	r2, [r2, r1]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    289a:	4641      	mov	r1, r8
    289c:	586b      	ldr	r3, [r5, r1]
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    289e:	4053      	eors	r3, r2
    28a0:	401c      	ands	r4, r3
    28a2:	4054      	eors	r4, r2
	CRITICAL_SECTION_LEAVE();
    28a4:	a804      	add	r0, sp, #16
    28a6:	47b8      	blx	r7
    28a8:	4034      	ands	r4, r6
    28aa:	1e60      	subs	r0, r4, #1
    28ac:	4184      	sbcs	r4, r0
    28ae:	b2e0      	uxtb	r0, r4
	res |= (gpio_get_pin_level(IP_B1) << 1);
    28b0:	0040      	lsls	r0, r0, #1
    28b2:	9b01      	ldr	r3, [sp, #4]
    28b4:	4303      	orrs	r3, r0
    28b6:	9301      	str	r3, [sp, #4]
	CRITICAL_SECTION_ENTER();
    28b8:	a803      	add	r0, sp, #12
    28ba:	47d8      	blx	fp
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    28bc:	59ac      	ldr	r4, [r5, r6]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    28be:	4652      	mov	r2, sl
    28c0:	4649      	mov	r1, r9
    28c2:	5852      	ldr	r2, [r2, r1]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    28c4:	4641      	mov	r1, r8
    28c6:	586b      	ldr	r3, [r5, r1]
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    28c8:	4053      	eors	r3, r2
    28ca:	401c      	ands	r4, r3
    28cc:	4054      	eors	r4, r2
	CRITICAL_SECTION_LEAVE();
    28ce:	a803      	add	r0, sp, #12
    28d0:	47b8      	blx	r7
    28d2:	2040      	movs	r0, #64	; 0x40
    28d4:	4004      	ands	r4, r0
    28d6:	1e63      	subs	r3, r4, #1
    28d8:	419c      	sbcs	r4, r3
    28da:	b2e4      	uxtb	r4, r4
	res |= (gpio_get_pin_level(IP_B2) << 2);
    28dc:	00a4      	lsls	r4, r4, #2
    28de:	9b01      	ldr	r3, [sp, #4]
    28e0:	431c      	orrs	r4, r3
	CRITICAL_SECTION_ENTER();
    28e2:	a802      	add	r0, sp, #8
    28e4:	47d8      	blx	fp
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    28e6:	59a8      	ldr	r0, [r5, r6]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    28e8:	4653      	mov	r3, sl
    28ea:	464a      	mov	r2, r9
    28ec:	589b      	ldr	r3, [r3, r2]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    28ee:	4642      	mov	r2, r8
    28f0:	58ad      	ldr	r5, [r5, r2]
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    28f2:	405d      	eors	r5, r3
    28f4:	4005      	ands	r5, r0
    28f6:	405d      	eors	r5, r3
	CRITICAL_SECTION_LEAVE();
    28f8:	a802      	add	r0, sp, #8
    28fa:	47b8      	blx	r7
    28fc:	2010      	movs	r0, #16
    28fe:	4028      	ands	r0, r5
    2900:	1e43      	subs	r3, r0, #1
    2902:	4198      	sbcs	r0, r3
    2904:	b2c0      	uxtb	r0, r0
	res |= (gpio_get_pin_level(IP_B3) << 3);
    2906:	00c0      	lsls	r0, r0, #3
    2908:	4320      	orrs	r0, r4
}
    290a:	b007      	add	sp, #28
    290c:	bc3c      	pop	{r2, r3, r4, r5}
    290e:	4690      	mov	r8, r2
    2910:	4699      	mov	r9, r3
    2912:	46a2      	mov	sl, r4
    2914:	46ab      	mov	fp, r5
    2916:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2918:	0000017d 	.word	0x0000017d
    291c:	41004400 	.word	0x41004400
    2920:	0000018b 	.word	0x0000018b

00002924 <adcRequest>:
	uint8_t retVal = adcConversionRequest;
    2924:	4b02      	ldr	r3, [pc, #8]	; (2930 <adcRequest+0xc>)
    2926:	7818      	ldrb	r0, [r3, #0]
	adcConversionRequest = 0;
    2928:	2200      	movs	r2, #0
    292a:	701a      	strb	r2, [r3, #0]
}
    292c:	4770      	bx	lr
    292e:	46c0      	nop			; (mov r8, r8)
    2930:	20000a80 	.word	0x20000a80

00002934 <netInit>:
	.dns =  {8,8,8,8},								// DNS address (google dns)
	.gw   = {192, 168, 1, 1},						// Gateway address
.dhcp = NETINFO_STATIC};						//Static IP configuration


uint8_t netInit(void){
    2934:	b510      	push	{r4, lr}
	psuErr = 1;
    2936:	2201      	movs	r2, #1
    2938:	4b22      	ldr	r3, [pc, #136]	; (29c4 <netInit+0x90>)
    293a:	701a      	strb	r2, [r3, #0]
	
	reg_wizchip_cs_cbfunc(W5500_Select, W5500_Unselect);
    293c:	4922      	ldr	r1, [pc, #136]	; (29c8 <netInit+0x94>)
    293e:	4823      	ldr	r0, [pc, #140]	; (29cc <netInit+0x98>)
    2940:	4b23      	ldr	r3, [pc, #140]	; (29d0 <netInit+0x9c>)
    2942:	4798      	blx	r3
	reg_wizchip_spi_cbfunc(W5500_ReadByte, W5500_Write_byte);
    2944:	4923      	ldr	r1, [pc, #140]	; (29d4 <netInit+0xa0>)
    2946:	4824      	ldr	r0, [pc, #144]	; (29d8 <netInit+0xa4>)
    2948:	4b24      	ldr	r3, [pc, #144]	; (29dc <netInit+0xa8>)
    294a:	4798      	blx	r3
	reg_wizchip_spiburst_cbfunc(W5500_ReadBuff, W5500_WriteBuff);
    294c:	4924      	ldr	r1, [pc, #144]	; (29e0 <netInit+0xac>)
    294e:	4825      	ldr	r0, [pc, #148]	; (29e4 <netInit+0xb0>)
    2950:	4b25      	ldr	r3, [pc, #148]	; (29e8 <netInit+0xb4>)
    2952:	4798      	blx	r3
	wizphy_reset();
    2954:	4b25      	ldr	r3, [pc, #148]	; (29ec <netInit+0xb8>)
    2956:	4798      	blx	r3
	delay_ms(100);
    2958:	2064      	movs	r0, #100	; 0x64
    295a:	4b25      	ldr	r3, [pc, #148]	; (29f0 <netInit+0xbc>)
    295c:	4798      	blx	r3
	wizchip_init(rx_tx_buff_sizes,rx_tx_buff_sizes);
    295e:	4825      	ldr	r0, [pc, #148]	; (29f4 <netInit+0xc0>)
    2960:	0001      	movs	r1, r0
    2962:	4b25      	ldr	r3, [pc, #148]	; (29f8 <netInit+0xc4>)
    2964:	4798      	blx	r3
	netInfo.ip[3] = 90+GetIpSwitch();
    2966:	4b25      	ldr	r3, [pc, #148]	; (29fc <netInit+0xc8>)
    2968:	4798      	blx	r3
    296a:	305a      	adds	r0, #90	; 0x5a
    296c:	4c24      	ldr	r4, [pc, #144]	; (2a00 <netInit+0xcc>)
    296e:	7260      	strb	r0, [r4, #9]
	wizchip_setnetinfo(&netInfo);
    2970:	0020      	movs	r0, r4
    2972:	4b24      	ldr	r3, [pc, #144]	; (2a04 <netInit+0xd0>)
    2974:	4798      	blx	r3
	ctlnetwork(CN_SET_NETINFO, (void*) &netInfo);
    2976:	0021      	movs	r1, r4
    2978:	2000      	movs	r0, #0
    297a:	4b23      	ldr	r3, [pc, #140]	; (2a08 <netInit+0xd4>)
    297c:	4798      	blx	r3
	
	
	setIMR(0xff);
    297e:	21ff      	movs	r1, #255	; 0xff
    2980:	20b0      	movs	r0, #176	; 0xb0
    2982:	0140      	lsls	r0, r0, #5
    2984:	4c21      	ldr	r4, [pc, #132]	; (2a0c <netInit+0xd8>)
    2986:	47a0      	blx	r4
	setSIMR(0xff);
    2988:	21ff      	movs	r1, #255	; 0xff
    298a:	20c0      	movs	r0, #192	; 0xc0
    298c:	0140      	lsls	r0, r0, #5
    298e:	47a0      	blx	r4
	setINTLEVEL(1);
    2990:	2100      	movs	r1, #0
    2992:	2098      	movs	r0, #152	; 0x98
    2994:	0140      	lsls	r0, r0, #5
    2996:	47a0      	blx	r4
    2998:	2101      	movs	r1, #1
    299a:	20a0      	movs	r0, #160	; 0xa0
    299c:	0140      	lsls	r0, r0, #5
    299e:	47a0      	blx	r4
	for(uint8_t HTTP_SOCKET = 0; HTTP_SOCKET <= 7; HTTP_SOCKET++){
    29a0:	2400      	movs	r4, #0
    29a2:	e00b      	b.n	29bc <netInit+0x88>
		//setINTLEVEL(500);
		//setSn_IMR(HTTP_SOCKET, 0x04);
		setSn_IMR(HTTP_SOCKET, 0x04);
    29a4:	00a0      	lsls	r0, r4, #2
    29a6:	3001      	adds	r0, #1
    29a8:	00c0      	lsls	r0, r0, #3
    29aa:	23b0      	movs	r3, #176	; 0xb0
    29ac:	019b      	lsls	r3, r3, #6
    29ae:	469c      	mov	ip, r3
    29b0:	4460      	add	r0, ip
    29b2:	2104      	movs	r1, #4
    29b4:	4b15      	ldr	r3, [pc, #84]	; (2a0c <netInit+0xd8>)
    29b6:	4798      	blx	r3
	for(uint8_t HTTP_SOCKET = 0; HTTP_SOCKET <= 7; HTTP_SOCKET++){
    29b8:	3401      	adds	r4, #1
    29ba:	b2e4      	uxtb	r4, r4
    29bc:	2c07      	cmp	r4, #7
    29be:	d9f1      	bls.n	29a4 <netInit+0x70>
		//setSn_IR(HTTP_SOCKET, 0x1F);
	}
	return 1;
}
    29c0:	2001      	movs	r0, #1
    29c2:	bd10      	pop	{r4, pc}
    29c4:	20000b14 	.word	0x20000b14
    29c8:	00002375 	.word	0x00002375
    29cc:	00002365 	.word	0x00002365
    29d0:	00003f89 	.word	0x00003f89
    29d4:	000023e5 	.word	0x000023e5
    29d8:	000023bd 	.word	0x000023bd
    29dc:	00003fb1 	.word	0x00003fb1
    29e0:	000023a1 	.word	0x000023a1
    29e4:	00002385 	.word	0x00002385
    29e8:	00003fe1 	.word	0x00003fe1
    29ec:	0000412d 	.word	0x0000412d
    29f0:	00000199 	.word	0x00000199
    29f4:	20000024 	.word	0x20000024
    29f8:	0000408d 	.word	0x0000408d
    29fc:	00002845 	.word	0x00002845
    2a00:	2000000c 	.word	0x2000000c
    2a04:	0000415d 	.word	0x0000415d
    2a08:	000042a1 	.word	0x000042a1
    2a0c:	00003bf9 	.word	0x00003bf9

00002a10 <netHandler>:

void netHandler(void){
    2a10:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a12:	46d6      	mov	lr, sl
    2a14:	464f      	mov	r7, r9
    2a16:	b580      	push	{r7, lr}
    2a18:	b0dd      	sub	sp, #372	; 0x174
	if(getSn_SR(UdpRxSockNum) == SOCK_CLOSED){
    2a1a:	4bce      	ldr	r3, [pc, #824]	; (2d54 <netHandler+0x344>)
    2a1c:	7818      	ldrb	r0, [r3, #0]
    2a1e:	0080      	lsls	r0, r0, #2
    2a20:	3001      	adds	r0, #1
    2a22:	00c0      	lsls	r0, r0, #3
    2a24:	23c0      	movs	r3, #192	; 0xc0
    2a26:	009b      	lsls	r3, r3, #2
    2a28:	469c      	mov	ip, r3
    2a2a:	4460      	add	r0, ip
    2a2c:	4bca      	ldr	r3, [pc, #808]	; (2d58 <netHandler+0x348>)
    2a2e:	4798      	blx	r3
    2a30:	2800      	cmp	r0, #0
    2a32:	d00e      	beq.n	2a52 <netHandler+0x42>
		socket(UdpRxSockNum, Sn_MR_UDP, UdpRxPort, SF_MULTI_ENABLE);
		listen(UdpRxSockNum);
	}
	
	if(getSn_IR(UdpRxSockNum)){ // & Sn_CR_RECV
    2a34:	4bc7      	ldr	r3, [pc, #796]	; (2d54 <netHandler+0x344>)
    2a36:	7818      	ldrb	r0, [r3, #0]
    2a38:	0080      	lsls	r0, r0, #2
    2a3a:	3001      	adds	r0, #1
    2a3c:	00c0      	lsls	r0, r0, #3
    2a3e:	2380      	movs	r3, #128	; 0x80
    2a40:	009b      	lsls	r3, r3, #2
    2a42:	469c      	mov	ip, r3
    2a44:	4460      	add	r0, ip
    2a46:	4bc4      	ldr	r3, [pc, #784]	; (2d58 <netHandler+0x348>)
    2a48:	4798      	blx	r3
    2a4a:	06c3      	lsls	r3, r0, #27
    2a4c:	d10d      	bne.n	2a6a <netHandler+0x5a>


				
				if (strstr((char *)TCP_RX_BUF, "GET / ") != NULL) {
					size_t total_length = strlen(psu_page);
					size_t sent_length = 0;
    2a4e:	2405      	movs	r4, #5
    2a50:	e2a3      	b.n	2f9a <netHandler+0x58a>
		socket(UdpRxSockNum, Sn_MR_UDP, UdpRxPort, SF_MULTI_ENABLE);
    2a52:	4bc2      	ldr	r3, [pc, #776]	; (2d5c <netHandler+0x34c>)
    2a54:	881a      	ldrh	r2, [r3, #0]
    2a56:	4cbf      	ldr	r4, [pc, #764]	; (2d54 <netHandler+0x344>)
    2a58:	7820      	ldrb	r0, [r4, #0]
    2a5a:	2380      	movs	r3, #128	; 0x80
    2a5c:	2102      	movs	r1, #2
    2a5e:	4dc0      	ldr	r5, [pc, #768]	; (2d60 <netHandler+0x350>)
    2a60:	47a8      	blx	r5
		listen(UdpRxSockNum);
    2a62:	7820      	ldrb	r0, [r4, #0]
    2a64:	4bbf      	ldr	r3, [pc, #764]	; (2d64 <netHandler+0x354>)
    2a66:	4798      	blx	r3
    2a68:	e7e4      	b.n	2a34 <netHandler+0x24>
		uint16_t udp_size = getSn_RX_RSR(UdpRxSockNum);
    2a6a:	4bba      	ldr	r3, [pc, #744]	; (2d54 <netHandler+0x344>)
    2a6c:	7818      	ldrb	r0, [r3, #0]
    2a6e:	4bbe      	ldr	r3, [pc, #760]	; (2d68 <netHandler+0x358>)
    2a70:	4798      	blx	r3
    2a72:	1e04      	subs	r4, r0, #0
		if (udp_size > 0) {
    2a74:	d0eb      	beq.n	2a4e <netHandler+0x3e>
			if (udp_size > DATA_BUFF_SIZE) udp_size = DATA_BUFF_SIZE;
    2a76:	2380      	movs	r3, #128	; 0x80
    2a78:	011b      	lsls	r3, r3, #4
    2a7a:	4298      	cmp	r0, r3
    2a7c:	d900      	bls.n	2a80 <netHandler+0x70>
    2a7e:	001c      	movs	r4, r3
			memset(TCP_RX_BUF, 0, sizeof(TCP_RX_BUF));
    2a80:	4dba      	ldr	r5, [pc, #744]	; (2d6c <netHandler+0x35c>)
    2a82:	2280      	movs	r2, #128	; 0x80
    2a84:	0112      	lsls	r2, r2, #4
    2a86:	2100      	movs	r1, #0
    2a88:	0028      	movs	r0, r5
    2a8a:	4bb9      	ldr	r3, [pc, #740]	; (2d70 <netHandler+0x360>)
    2a8c:	4798      	blx	r3
			uint16_t ret = recvfrom(UdpRxSockNum, (uint8_t*)TCP_RX_BUF, udp_size, ip, &port);
    2a8e:	4bb1      	ldr	r3, [pc, #708]	; (2d54 <netHandler+0x344>)
    2a90:	7818      	ldrb	r0, [r3, #0]
    2a92:	2346      	movs	r3, #70	; 0x46
    2a94:	aa06      	add	r2, sp, #24
    2a96:	4694      	mov	ip, r2
    2a98:	4463      	add	r3, ip
    2a9a:	9300      	str	r3, [sp, #0]
    2a9c:	ab18      	add	r3, sp, #96	; 0x60
    2a9e:	0022      	movs	r2, r4
    2aa0:	0029      	movs	r1, r5
    2aa2:	4cb4      	ldr	r4, [pc, #720]	; (2d74 <netHandler+0x364>)
    2aa4:	47a0      	blx	r4
			if (sscanf(TCP_RX_BUF, "OUTP:STAT %3s", state) == 1) {
    2aa6:	aa19      	add	r2, sp, #100	; 0x64
    2aa8:	49b3      	ldr	r1, [pc, #716]	; (2d78 <netHandler+0x368>)
    2aaa:	0028      	movs	r0, r5
    2aac:	4bb3      	ldr	r3, [pc, #716]	; (2d7c <netHandler+0x36c>)
    2aae:	4798      	blx	r3
    2ab0:	2801      	cmp	r0, #1
    2ab2:	d027      	beq.n	2b04 <netHandler+0xf4>
			uint8_t okFlg = 0;
    2ab4:	2400      	movs	r4, #0
			if (sscanf(TCP_RX_BUF, "MEAS:%[^?]", command) == 1) {
    2ab6:	aa1c      	add	r2, sp, #112	; 0x70
    2ab8:	49b1      	ldr	r1, [pc, #708]	; (2d80 <netHandler+0x370>)
    2aba:	48ac      	ldr	r0, [pc, #688]	; (2d6c <netHandler+0x35c>)
    2abc:	4baf      	ldr	r3, [pc, #700]	; (2d7c <netHandler+0x36c>)
    2abe:	4798      	blx	r3
    2ac0:	2801      	cmp	r0, #1
    2ac2:	d043      	beq.n	2b4c <netHandler+0x13c>
			if(strcasecmp(TCP_RX_BUF, "*RST") == 0){
    2ac4:	49af      	ldr	r1, [pc, #700]	; (2d84 <netHandler+0x374>)
    2ac6:	48a9      	ldr	r0, [pc, #676]	; (2d6c <netHandler+0x35c>)
    2ac8:	4baf      	ldr	r3, [pc, #700]	; (2d88 <netHandler+0x378>)
    2aca:	4798      	blx	r3
    2acc:	2800      	cmp	r0, #0
    2ace:	d061      	beq.n	2b94 <netHandler+0x184>
				if(okFlg == 0){
    2ad0:	2c00      	cmp	r4, #0
    2ad2:	d066      	beq.n	2ba2 <netHandler+0x192>
			result = socket(UdpTxSockNum, Sn_MR_UDP, UdpTxPort, SF_IO_NONBLOCK);
    2ad4:	4ead      	ldr	r6, [pc, #692]	; (2d8c <netHandler+0x37c>)
    2ad6:	8832      	ldrh	r2, [r6, #0]
    2ad8:	4fad      	ldr	r7, [pc, #692]	; (2d90 <netHandler+0x380>)
    2ada:	7838      	ldrb	r0, [r7, #0]
    2adc:	2301      	movs	r3, #1
    2ade:	2102      	movs	r1, #2
    2ae0:	4c9f      	ldr	r4, [pc, #636]	; (2d60 <netHandler+0x350>)
    2ae2:	47a0      	blx	r4
    2ae4:	4cab      	ldr	r4, [pc, #684]	; (2d94 <netHandler+0x384>)
    2ae6:	7020      	strb	r0, [r4, #0]
			result = sendto(UdpTxSockNum, (uint8_t*)UdpAnsver, strlen(UdpAnsver), UdpDestAddress, UdpTxPort);
    2ae8:	4dab      	ldr	r5, [pc, #684]	; (2d98 <netHandler+0x388>)
    2aea:	0028      	movs	r0, r5
    2aec:	4bab      	ldr	r3, [pc, #684]	; (2d9c <netHandler+0x38c>)
    2aee:	4798      	blx	r3
    2af0:	b282      	uxth	r2, r0
    2af2:	7838      	ldrb	r0, [r7, #0]
    2af4:	8833      	ldrh	r3, [r6, #0]
    2af6:	9300      	str	r3, [sp, #0]
    2af8:	4ba9      	ldr	r3, [pc, #676]	; (2da0 <netHandler+0x390>)
    2afa:	0029      	movs	r1, r5
    2afc:	4da9      	ldr	r5, [pc, #676]	; (2da4 <netHandler+0x394>)
    2afe:	47a8      	blx	r5
    2b00:	7020      	strb	r0, [r4, #0]
    2b02:	e7a4      	b.n	2a4e <netHandler+0x3e>
				if (strcasecmp(state, "OFF") == 0) {
    2b04:	49a8      	ldr	r1, [pc, #672]	; (2da8 <netHandler+0x398>)
    2b06:	a819      	add	r0, sp, #100	; 0x64
    2b08:	4b9f      	ldr	r3, [pc, #636]	; (2d88 <netHandler+0x378>)
    2b0a:	4798      	blx	r3
    2b0c:	2800      	cmp	r0, #0
    2b0e:	d007      	beq.n	2b20 <netHandler+0x110>
					} else if (strcasecmp(state, "ON") == 0) {
    2b10:	49a6      	ldr	r1, [pc, #664]	; (2dac <netHandler+0x39c>)
    2b12:	a819      	add	r0, sp, #100	; 0x64
    2b14:	4b9c      	ldr	r3, [pc, #624]	; (2d88 <netHandler+0x378>)
    2b16:	4798      	blx	r3
    2b18:	2800      	cmp	r0, #0
    2b1a:	d00c      	beq.n	2b36 <netHandler+0x126>
			uint8_t okFlg = 0;
    2b1c:	2400      	movs	r4, #0
    2b1e:	e7ca      	b.n	2ab6 <netHandler+0xa6>
					printf("Output is OFF\r\n");
    2b20:	48a3      	ldr	r0, [pc, #652]	; (2db0 <netHandler+0x3a0>)
    2b22:	4ba4      	ldr	r3, [pc, #656]	; (2db4 <netHandler+0x3a4>)
    2b24:	4798      	blx	r3
					sprintf(UdpAnsver, "ok");
    2b26:	4b9c      	ldr	r3, [pc, #624]	; (2d98 <netHandler+0x388>)
    2b28:	4aa3      	ldr	r2, [pc, #652]	; (2db8 <netHandler+0x3a8>)
    2b2a:	8811      	ldrh	r1, [r2, #0]
    2b2c:	8019      	strh	r1, [r3, #0]
    2b2e:	7892      	ldrb	r2, [r2, #2]
    2b30:	709a      	strb	r2, [r3, #2]
					okFlg = 1;
    2b32:	2401      	movs	r4, #1
    2b34:	e7bf      	b.n	2ab6 <netHandler+0xa6>
					printf("Output is ON\r\n");
    2b36:	48a1      	ldr	r0, [pc, #644]	; (2dbc <netHandler+0x3ac>)
    2b38:	4b9e      	ldr	r3, [pc, #632]	; (2db4 <netHandler+0x3a4>)
    2b3a:	4798      	blx	r3
					sprintf(UdpAnsver, "ok");
    2b3c:	4b96      	ldr	r3, [pc, #600]	; (2d98 <netHandler+0x388>)
    2b3e:	4a9e      	ldr	r2, [pc, #632]	; (2db8 <netHandler+0x3a8>)
    2b40:	8811      	ldrh	r1, [r2, #0]
    2b42:	8019      	strh	r1, [r3, #0]
    2b44:	7892      	ldrb	r2, [r2, #2]
    2b46:	709a      	strb	r2, [r3, #2]
					okFlg = 1;
    2b48:	2401      	movs	r4, #1
    2b4a:	e7b4      	b.n	2ab6 <netHandler+0xa6>
				if (strcasecmp(command, "VOLT") == 0) {
    2b4c:	499c      	ldr	r1, [pc, #624]	; (2dc0 <netHandler+0x3b0>)
    2b4e:	a81c      	add	r0, sp, #112	; 0x70
    2b50:	4b8d      	ldr	r3, [pc, #564]	; (2d88 <netHandler+0x378>)
    2b52:	4798      	blx	r3
    2b54:	2800      	cmp	r0, #0
    2b56:	d010      	beq.n	2b7a <netHandler+0x16a>
					} else if (strcasecmp(command, "CURR") == 0) {
    2b58:	499a      	ldr	r1, [pc, #616]	; (2dc4 <netHandler+0x3b4>)
    2b5a:	a81c      	add	r0, sp, #112	; 0x70
    2b5c:	4b8a      	ldr	r3, [pc, #552]	; (2d88 <netHandler+0x378>)
    2b5e:	4798      	blx	r3
    2b60:	2800      	cmp	r0, #0
    2b62:	d1af      	bne.n	2ac4 <netHandler+0xb4>
					printf("Measure Current command\r\n");
    2b64:	4898      	ldr	r0, [pc, #608]	; (2dc8 <netHandler+0x3b8>)
    2b66:	4b93      	ldr	r3, [pc, #588]	; (2db4 <netHandler+0x3a4>)
    2b68:	4798      	blx	r3
					sprintf(UdpAnsver, "0.121");
    2b6a:	4b8b      	ldr	r3, [pc, #556]	; (2d98 <netHandler+0x388>)
    2b6c:	4a97      	ldr	r2, [pc, #604]	; (2dcc <netHandler+0x3bc>)
    2b6e:	6811      	ldr	r1, [r2, #0]
    2b70:	6019      	str	r1, [r3, #0]
    2b72:	8892      	ldrh	r2, [r2, #4]
    2b74:	809a      	strh	r2, [r3, #4]
					okFlg = 1;
    2b76:	2401      	movs	r4, #1
    2b78:	e7a4      	b.n	2ac4 <netHandler+0xb4>
					printf("Measure Voltage command\r\n");
    2b7a:	4895      	ldr	r0, [pc, #596]	; (2dd0 <netHandler+0x3c0>)
    2b7c:	4b8d      	ldr	r3, [pc, #564]	; (2db4 <netHandler+0x3a4>)
    2b7e:	4798      	blx	r3
					sprintf(UdpAnsver, "48.031");
    2b80:	4b85      	ldr	r3, [pc, #532]	; (2d98 <netHandler+0x388>)
    2b82:	4a94      	ldr	r2, [pc, #592]	; (2dd4 <netHandler+0x3c4>)
    2b84:	6811      	ldr	r1, [r2, #0]
    2b86:	6019      	str	r1, [r3, #0]
    2b88:	8891      	ldrh	r1, [r2, #4]
    2b8a:	8099      	strh	r1, [r3, #4]
    2b8c:	7992      	ldrb	r2, [r2, #6]
    2b8e:	719a      	strb	r2, [r3, #6]
					okFlg = 1;
    2b90:	2401      	movs	r4, #1
    2b92:	e797      	b.n	2ac4 <netHandler+0xb4>
				sprintf(UdpAnsver, "ok");
    2b94:	4b80      	ldr	r3, [pc, #512]	; (2d98 <netHandler+0x388>)
    2b96:	4a88      	ldr	r2, [pc, #544]	; (2db8 <netHandler+0x3a8>)
    2b98:	8811      	ldrh	r1, [r2, #0]
    2b9a:	8019      	strh	r1, [r3, #0]
    2b9c:	7892      	ldrb	r2, [r2, #2]
    2b9e:	709a      	strb	r2, [r3, #2]
    2ba0:	e798      	b.n	2ad4 <netHandler+0xc4>
					sprintf(UdpAnsver, "err");
    2ba2:	4a8d      	ldr	r2, [pc, #564]	; (2dd8 <netHandler+0x3c8>)
    2ba4:	4b7c      	ldr	r3, [pc, #496]	; (2d98 <netHandler+0x388>)
    2ba6:	601a      	str	r2, [r3, #0]
    2ba8:	e794      	b.n	2ad4 <netHandler+0xc4>
			getsockopt(HTTP_SOCKET, SO_DESTIP, rIP);
    2baa:	aa18      	add	r2, sp, #96	; 0x60
    2bac:	2104      	movs	r1, #4
    2bae:	0020      	movs	r0, r4
    2bb0:	4b8a      	ldr	r3, [pc, #552]	; (2ddc <netHandler+0x3cc>)
    2bb2:	4798      	blx	r3
			uint16_t res_size = getSn_RX_RSR(HTTP_SOCKET);
    2bb4:	0020      	movs	r0, r4
    2bb6:	4b6c      	ldr	r3, [pc, #432]	; (2d68 <netHandler+0x358>)
    2bb8:	4798      	blx	r3
    2bba:	1e05      	subs	r5, r0, #0
			if (res_size > 0) {
    2bbc:	d100      	bne.n	2bc0 <netHandler+0x1b0>
    2bbe:	e1fe      	b.n	2fbe <netHandler+0x5ae>
				if (res_size > sizeof(TCP_RX_BUF)) {
    2bc0:	2380      	movs	r3, #128	; 0x80
    2bc2:	011b      	lsls	r3, r3, #4
    2bc4:	4298      	cmp	r0, r3
    2bc6:	d900      	bls.n	2bca <netHandler+0x1ba>
					res_size = sizeof(TCP_RX_BUF);
    2bc8:	001d      	movs	r5, r3
				memset(TCP_RX_BUF, 0, sizeof(TCP_RX_BUF));
    2bca:	4f68      	ldr	r7, [pc, #416]	; (2d6c <netHandler+0x35c>)
    2bcc:	2280      	movs	r2, #128	; 0x80
    2bce:	0112      	lsls	r2, r2, #4
    2bd0:	2100      	movs	r1, #0
    2bd2:	0038      	movs	r0, r7
    2bd4:	4b66      	ldr	r3, [pc, #408]	; (2d70 <netHandler+0x360>)
    2bd6:	4798      	blx	r3
				recv(HTTP_SOCKET, (uint8_t *)TCP_RX_BUF, res_size);
    2bd8:	002a      	movs	r2, r5
    2bda:	0039      	movs	r1, r7
    2bdc:	0020      	movs	r0, r4
    2bde:	4b80      	ldr	r3, [pc, #512]	; (2de0 <netHandler+0x3d0>)
    2be0:	4798      	blx	r3
				if (strstr((char *)TCP_RX_BUF, "GET / ") != NULL) {
    2be2:	4980      	ldr	r1, [pc, #512]	; (2de4 <netHandler+0x3d4>)
    2be4:	0038      	movs	r0, r7
    2be6:	4b80      	ldr	r3, [pc, #512]	; (2de8 <netHandler+0x3d8>)
    2be8:	4798      	blx	r3
    2bea:	2800      	cmp	r0, #0
    2bec:	d02e      	beq.n	2c4c <netHandler+0x23c>
					printf("index.html send\r\n");
    2bee:	487f      	ldr	r0, [pc, #508]	; (2dec <netHandler+0x3dc>)
    2bf0:	4b70      	ldr	r3, [pc, #448]	; (2db4 <netHandler+0x3a4>)
    2bf2:	4798      	blx	r3
					size_t sent_length = 0;
    2bf4:	2500      	movs	r5, #0
					while (sent_length < total_length) {
    2bf6:	e00f      	b.n	2c18 <netHandler+0x208>
						size_t chunk_size = (total_length - sent_length > 2048) ? 2048 : total_length - sent_length;
						send(HTTP_SOCKET, (uint8_t *)(psu_page + sent_length), chunk_size);
						//uint8_t msCount = 0;
						while (getSn_TX_FSR(HTTP_SOCKET) != getSn_TxMAX(HTTP_SOCKET)) {
							delay_ms(1);
    2bf8:	2001      	movs	r0, #1
    2bfa:	4b7d      	ldr	r3, [pc, #500]	; (2df0 <netHandler+0x3e0>)
    2bfc:	4798      	blx	r3
						while (getSn_TX_FSR(HTTP_SOCKET) != getSn_TxMAX(HTTP_SOCKET)) {
    2bfe:	0020      	movs	r0, r4
    2c00:	4b7c      	ldr	r3, [pc, #496]	; (2df4 <netHandler+0x3e4>)
    2c02:	4798      	blx	r3
    2c04:	0007      	movs	r7, r0
    2c06:	23f8      	movs	r3, #248	; 0xf8
    2c08:	015b      	lsls	r3, r3, #5
    2c0a:	18f0      	adds	r0, r6, r3
    2c0c:	4b52      	ldr	r3, [pc, #328]	; (2d58 <netHandler+0x348>)
    2c0e:	4798      	blx	r3
    2c10:	0280      	lsls	r0, r0, #10
    2c12:	4287      	cmp	r7, r0
    2c14:	d1f0      	bne.n	2bf8 <netHandler+0x1e8>
							//msCount++;
						}
						//printf("TX Time = %d\r\n", msCount);
						sent_length += chunk_size;
    2c16:	444d      	add	r5, r9
					while (sent_length < total_length) {
    2c18:	4b77      	ldr	r3, [pc, #476]	; (2df8 <netHandler+0x3e8>)
    2c1a:	429d      	cmp	r5, r3
    2c1c:	d828      	bhi.n	2c70 <netHandler+0x260>
						size_t chunk_size = (total_length - sent_length > 2048) ? 2048 : total_length - sent_length;
    2c1e:	4b77      	ldr	r3, [pc, #476]	; (2dfc <netHandler+0x3ec>)
    2c20:	1b5b      	subs	r3, r3, r5
    2c22:	4699      	mov	r9, r3
    2c24:	2380      	movs	r3, #128	; 0x80
    2c26:	011b      	lsls	r3, r3, #4
    2c28:	4599      	cmp	r9, r3
    2c2a:	d900      	bls.n	2c2e <netHandler+0x21e>
    2c2c:	4699      	mov	r9, r3
						send(HTTP_SOCKET, (uint8_t *)(psu_page + sent_length), chunk_size);
    2c2e:	464b      	mov	r3, r9
    2c30:	466a      	mov	r2, sp
    2c32:	2148      	movs	r1, #72	; 0x48
    2c34:	1852      	adds	r2, r2, r1
    2c36:	8013      	strh	r3, [r2, #0]
    2c38:	466b      	mov	r3, sp
    2c3a:	2248      	movs	r2, #72	; 0x48
    2c3c:	189b      	adds	r3, r3, r2
    2c3e:	881a      	ldrh	r2, [r3, #0]
    2c40:	496f      	ldr	r1, [pc, #444]	; (2e00 <netHandler+0x3f0>)
    2c42:	1949      	adds	r1, r1, r5
    2c44:	0020      	movs	r0, r4
    2c46:	4b6f      	ldr	r3, [pc, #444]	; (2e04 <netHandler+0x3f4>)
    2c48:	4798      	blx	r3
						while (getSn_TX_FSR(HTTP_SOCKET) != getSn_TxMAX(HTTP_SOCKET)) {
    2c4a:	e7d8      	b.n	2bfe <netHandler+0x1ee>
					}
					
					} else if (strstr((char *)TCP_RX_BUF, "GET /favicon.ico") != NULL) {
    2c4c:	496e      	ldr	r1, [pc, #440]	; (2e08 <netHandler+0x3f8>)
    2c4e:	4847      	ldr	r0, [pc, #284]	; (2d6c <netHandler+0x35c>)
    2c50:	4b65      	ldr	r3, [pc, #404]	; (2de8 <netHandler+0x3d8>)
    2c52:	4798      	blx	r3
    2c54:	2800      	cmp	r0, #0
    2c56:	d00f      	beq.n	2c78 <netHandler+0x268>
					printf("favicon.ico send\r\n");
    2c58:	486c      	ldr	r0, [pc, #432]	; (2e0c <netHandler+0x3fc>)
    2c5a:	4b56      	ldr	r3, [pc, #344]	; (2db4 <netHandler+0x3a4>)
    2c5c:	4798      	blx	r3
					send(HTTP_SOCKET, (uint8_t *)"HTTP/1.1 200 OK\r\nContent-Type: image/x-icon\r\r\n\n", 47);
    2c5e:	222f      	movs	r2, #47	; 0x2f
    2c60:	496b      	ldr	r1, [pc, #428]	; (2e10 <netHandler+0x400>)
    2c62:	0020      	movs	r0, r4
    2c64:	4f67      	ldr	r7, [pc, #412]	; (2e04 <netHandler+0x3f4>)
    2c66:	47b8      	blx	r7
					send(HTTP_SOCKET, (uint8_t *)favicon_ico, sizeof(favicon_ico));
    2c68:	4a6a      	ldr	r2, [pc, #424]	; (2e14 <netHandler+0x404>)
    2c6a:	496b      	ldr	r1, [pc, #428]	; (2e18 <netHandler+0x408>)
    2c6c:	0020      	movs	r0, r4
    2c6e:	47b8      	blx	r7
						outState = (strcmp(action, "on") == 0) ? 1 : 0;
						remoteCtrl = 1;
					}
					send(HTTP_SOCKET, (uint8_t *)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\r\n\n{\"success\":true}", 65);
				}
				disconnect(HTTP_SOCKET);
    2c70:	0020      	movs	r0, r4
    2c72:	4b6a      	ldr	r3, [pc, #424]	; (2e1c <netHandler+0x40c>)
    2c74:	4798      	blx	r3
				
				while (getSn_TX_FSR(HTTP_SOCKET) != getSn_TxMAX(HTTP_SOCKET)) {
    2c76:	e171      	b.n	2f5c <netHandler+0x54c>
					} else if (strstr((char *)TCP_RX_BUF, "GET /get_vals") != NULL) {
    2c78:	4969      	ldr	r1, [pc, #420]	; (2e20 <netHandler+0x410>)
    2c7a:	483c      	ldr	r0, [pc, #240]	; (2d6c <netHandler+0x35c>)
    2c7c:	4b5a      	ldr	r3, [pc, #360]	; (2de8 <netHandler+0x3d8>)
    2c7e:	4798      	blx	r3
    2c80:	2800      	cmp	r0, #0
    2c82:	d03d      	beq.n	2d00 <netHandler+0x2f0>
					float watt = ampDMM * voltDMM;
    2c84:	4b67      	ldr	r3, [pc, #412]	; (2e24 <netHandler+0x414>)
    2c86:	681d      	ldr	r5, [r3, #0]
    2c88:	4b67      	ldr	r3, [pc, #412]	; (2e28 <netHandler+0x418>)
    2c8a:	681b      	ldr	r3, [r3, #0]
    2c8c:	9312      	str	r3, [sp, #72]	; 0x48
    2c8e:	1c19      	adds	r1, r3, #0
    2c90:	1c28      	adds	r0, r5, #0
    2c92:	4b66      	ldr	r3, [pc, #408]	; (2e2c <netHandler+0x41c>)
    2c94:	4798      	blx	r3
    2c96:	9015      	str	r0, [sp, #84]	; 0x54
					snprintf(json_response, sizeof(json_response),
    2c98:	2301      	movs	r3, #1
    2c9a:	930f      	str	r3, [sp, #60]	; 0x3c
    2c9c:	930e      	str	r3, [sp, #56]	; 0x38
    2c9e:	2300      	movs	r3, #0
    2ca0:	930d      	str	r3, [sp, #52]	; 0x34
    2ca2:	4b63      	ldr	r3, [pc, #396]	; (2e30 <netHandler+0x420>)
    2ca4:	781b      	ldrb	r3, [r3, #0]
    2ca6:	930c      	str	r3, [sp, #48]	; 0x30
    2ca8:	4b62      	ldr	r3, [pc, #392]	; (2e34 <netHandler+0x424>)
    2caa:	781b      	ldrb	r3, [r3, #0]
    2cac:	930b      	str	r3, [sp, #44]	; 0x2c
    2cae:	4b62      	ldr	r3, [pc, #392]	; (2e38 <netHandler+0x428>)
    2cb0:	781b      	ldrb	r3, [r3, #0]
    2cb2:	930a      	str	r3, [sp, #40]	; 0x28
    2cb4:	4f61      	ldr	r7, [pc, #388]	; (2e3c <netHandler+0x42c>)
    2cb6:	9812      	ldr	r0, [sp, #72]	; 0x48
    2cb8:	47b8      	blx	r7
    2cba:	9008      	str	r0, [sp, #32]
    2cbc:	9109      	str	r1, [sp, #36]	; 0x24
    2cbe:	1c28      	adds	r0, r5, #0
    2cc0:	47b8      	blx	r7
    2cc2:	9006      	str	r0, [sp, #24]
    2cc4:	9107      	str	r1, [sp, #28]
    2cc6:	9815      	ldr	r0, [sp, #84]	; 0x54
    2cc8:	47b8      	blx	r7
    2cca:	9004      	str	r0, [sp, #16]
    2ccc:	9105      	str	r1, [sp, #20]
    2cce:	4b5c      	ldr	r3, [pc, #368]	; (2e40 <netHandler+0x430>)
    2cd0:	6818      	ldr	r0, [r3, #0]
    2cd2:	47b8      	blx	r7
    2cd4:	9002      	str	r0, [sp, #8]
    2cd6:	9103      	str	r1, [sp, #12]
    2cd8:	4b5a      	ldr	r3, [pc, #360]	; (2e44 <netHandler+0x434>)
    2cda:	6818      	ldr	r0, [r3, #0]
    2cdc:	47b8      	blx	r7
    2cde:	9000      	str	r0, [sp, #0]
    2ce0:	9101      	str	r1, [sp, #4]
    2ce2:	4a59      	ldr	r2, [pc, #356]	; (2e48 <netHandler+0x438>)
    2ce4:	2180      	movs	r1, #128	; 0x80
    2ce6:	0049      	lsls	r1, r1, #1
    2ce8:	a81c      	add	r0, sp, #112	; 0x70
    2cea:	4b58      	ldr	r3, [pc, #352]	; (2e4c <netHandler+0x43c>)
    2cec:	4798      	blx	r3
					send(HTTP_SOCKET, (uint8_t *)json_response, strlen(json_response));
    2cee:	a81c      	add	r0, sp, #112	; 0x70
    2cf0:	4b2a      	ldr	r3, [pc, #168]	; (2d9c <netHandler+0x38c>)
    2cf2:	4798      	blx	r3
    2cf4:	b282      	uxth	r2, r0
    2cf6:	a91c      	add	r1, sp, #112	; 0x70
    2cf8:	0020      	movs	r0, r4
    2cfa:	4b42      	ldr	r3, [pc, #264]	; (2e04 <netHandler+0x3f4>)
    2cfc:	4798      	blx	r3
    2cfe:	e7b7      	b.n	2c70 <netHandler+0x260>
					} else if (strstr((char *)TCP_RX_BUF, "GET /set_vals") != NULL) {
    2d00:	4953      	ldr	r1, [pc, #332]	; (2e50 <netHandler+0x440>)
    2d02:	481a      	ldr	r0, [pc, #104]	; (2d6c <netHandler+0x35c>)
    2d04:	4b38      	ldr	r3, [pc, #224]	; (2de8 <netHandler+0x3d8>)
    2d06:	4798      	blx	r3
    2d08:	2800      	cmp	r0, #0
    2d0a:	d100      	bne.n	2d0e <netHandler+0x2fe>
    2d0c:	e0aa      	b.n	2e64 <netHandler+0x454>
					char *query_string = strstr((char *)TCP_RX_BUF, "GET /set_vals") + strlen("GET /set_vals?");
    2d0e:	300e      	adds	r0, #14
					sscanf(query_string, "amp=%f&volt=%f", &amp, &volt);
    2d10:	4b4b      	ldr	r3, [pc, #300]	; (2e40 <netHandler+0x430>)
    2d12:	4699      	mov	r9, r3
    2d14:	4b4b      	ldr	r3, [pc, #300]	; (2e44 <netHandler+0x434>)
    2d16:	469a      	mov	sl, r3
    2d18:	464b      	mov	r3, r9
    2d1a:	4652      	mov	r2, sl
    2d1c:	494d      	ldr	r1, [pc, #308]	; (2e54 <netHandler+0x444>)
    2d1e:	4f17      	ldr	r7, [pc, #92]	; (2d7c <netHandler+0x36c>)
    2d20:	47b8      	blx	r7
					printf("%f; %f\r\n", amp, volt);
    2d22:	4f46      	ldr	r7, [pc, #280]	; (2e3c <netHandler+0x42c>)
    2d24:	4653      	mov	r3, sl
    2d26:	6818      	ldr	r0, [r3, #0]
    2d28:	47b8      	blx	r7
    2d2a:	9012      	str	r0, [sp, #72]	; 0x48
    2d2c:	9113      	str	r1, [sp, #76]	; 0x4c
    2d2e:	464b      	mov	r3, r9
    2d30:	6818      	ldr	r0, [r3, #0]
    2d32:	47b8      	blx	r7
    2d34:	9000      	str	r0, [sp, #0]
    2d36:	9101      	str	r1, [sp, #4]
    2d38:	9a12      	ldr	r2, [sp, #72]	; 0x48
    2d3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    2d3c:	4846      	ldr	r0, [pc, #280]	; (2e58 <netHandler+0x448>)
    2d3e:	4947      	ldr	r1, [pc, #284]	; (2e5c <netHandler+0x44c>)
    2d40:	4788      	blx	r1
					remoteCtrl = 1;
    2d42:	2201      	movs	r2, #1
    2d44:	4b3b      	ldr	r3, [pc, #236]	; (2e34 <netHandler+0x424>)
    2d46:	701a      	strb	r2, [r3, #0]
					send(HTTP_SOCKET, (uint8_t *)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\r\n\n{\"success\":true}", 67);
    2d48:	3242      	adds	r2, #66	; 0x42
    2d4a:	4945      	ldr	r1, [pc, #276]	; (2e60 <netHandler+0x450>)
    2d4c:	0020      	movs	r0, r4
    2d4e:	4b2d      	ldr	r3, [pc, #180]	; (2e04 <netHandler+0x3f4>)
    2d50:	4798      	blx	r3
    2d52:	e78d      	b.n	2c70 <netHandler+0x260>
    2d54:	20000006 	.word	0x20000006
    2d58:	00003b95 	.word	0x00003b95
    2d5c:	20000004 	.word	0x20000004
    2d60:	000030fd 	.word	0x000030fd
    2d64:	0000327d 	.word	0x0000327d
    2d68:	00003dbd 	.word	0x00003dbd
    2d6c:	20000e48 	.word	0x20000e48
    2d70:	00006d2d 	.word	0x00006d2d
    2d74:	00003775 	.word	0x00003775
    2d78:	00011678 	.word	0x00011678
    2d7c:	00006f61 	.word	0x00006f61
    2d80:	000116b4 	.word	0x000116b4
    2d84:	00011718 	.word	0x00011718
    2d88:	00007051 	.word	0x00007051
    2d8c:	20000008 	.word	0x20000008
    2d90:	20000b08 	.word	0x20000b08
    2d94:	20001648 	.word	0x20001648
    2d98:	20000a88 	.word	0x20000a88
    2d9c:	00007209 	.word	0x00007209
    2da0:	20000000 	.word	0x20000000
    2da4:	000035ed 	.word	0x000035ed
    2da8:	00011688 	.word	0x00011688
    2dac:	000116a0 	.word	0x000116a0
    2db0:	0001168c 	.word	0x0001168c
    2db4:	00006e85 	.word	0x00006e85
    2db8:	0001169c 	.word	0x0001169c
    2dbc:	000116a4 	.word	0x000116a4
    2dc0:	000116c0 	.word	0x000116c0
    2dc4:	000116ec 	.word	0x000116ec
    2dc8:	000116f4 	.word	0x000116f4
    2dcc:	00011710 	.word	0x00011710
    2dd0:	000116c8 	.word	0x000116c8
    2dd4:	000116e4 	.word	0x000116e4
    2dd8:	00727265 	.word	0x00727265
    2ddc:	00003a09 	.word	0x00003a09
    2de0:	000034e1 	.word	0x000034e1
    2de4:	00011720 	.word	0x00011720
    2de8:	00007531 	.word	0x00007531
    2dec:	00011728 	.word	0x00011728
    2df0:	00000199 	.word	0x00000199
    2df4:	00003d51 	.word	0x00003d51
    2df8:	00001dae 	.word	0x00001dae
    2dfc:	00001daf 	.word	0x00001daf
    2e00:	00011908 	.word	0x00011908
    2e04:	00003395 	.word	0x00003395
    2e08:	0001173c 	.word	0x0001173c
    2e0c:	00011750 	.word	0x00011750
    2e10:	00011764 	.word	0x00011764
    2e14:	00000582 	.word	0x00000582
    2e18:	000110f4 	.word	0x000110f4
    2e1c:	000032f9 	.word	0x000032f9
    2e20:	00011794 	.word	0x00011794
    2e24:	20000b10 	.word	0x20000b10
    2e28:	20000b1c 	.word	0x20000b1c
    2e2c:	00004e05 	.word	0x00004e05
    2e30:	20000b14 	.word	0x20000b14
    2e34:	20000b15 	.word	0x20000b15
    2e38:	20000023 	.word	0x20000023
    2e3c:	0000674d 	.word	0x0000674d
    2e40:	20000b18 	.word	0x20000b18
    2e44:	20000b0c 	.word	0x20000b0c
    2e48:	000117a4 	.word	0x000117a4
    2e4c:	00006e99 	.word	0x00006e99
    2e50:	00011854 	.word	0x00011854
    2e54:	00011864 	.word	0x00011864
    2e58:	00011874 	.word	0x00011874
    2e5c:	00006dc1 	.word	0x00006dc1
    2e60:	00011880 	.word	0x00011880
					} else if (strstr((char *)TCP_RX_BUF, "GET /control") != NULL) {
    2e64:	496b      	ldr	r1, [pc, #428]	; (3014 <netHandler+0x604>)
    2e66:	486c      	ldr	r0, [pc, #432]	; (3018 <netHandler+0x608>)
    2e68:	4b6c      	ldr	r3, [pc, #432]	; (301c <netHandler+0x60c>)
    2e6a:	4798      	blx	r3
    2e6c:	2800      	cmp	r0, #0
    2e6e:	d100      	bne.n	2e72 <netHandler+0x462>
    2e70:	e6fe      	b.n	2c70 <netHandler+0x260>
					char *query_string = strstr((char *)TCP_RX_BUF, "GET /control") + strlen("GET /control?");
    2e72:	300d      	adds	r0, #13
					sscanf(query_string, "device=%[^&]&action=%s", device, action);
    2e74:	ab1c      	add	r3, sp, #112	; 0x70
    2e76:	aa19      	add	r2, sp, #100	; 0x64
    2e78:	4969      	ldr	r1, [pc, #420]	; (3020 <netHandler+0x610>)
    2e7a:	4f6a      	ldr	r7, [pc, #424]	; (3024 <netHandler+0x614>)
    2e7c:	47b8      	blx	r7
					printf("%s; %s\r\n", device, action);
    2e7e:	aa1c      	add	r2, sp, #112	; 0x70
    2e80:	a919      	add	r1, sp, #100	; 0x64
    2e82:	4869      	ldr	r0, [pc, #420]	; (3028 <netHandler+0x618>)
    2e84:	4b69      	ldr	r3, [pc, #420]	; (302c <netHandler+0x61c>)
    2e86:	4798      	blx	r3
					if (strcmp(device, "fan") == 0) {
    2e88:	4969      	ldr	r1, [pc, #420]	; (3030 <netHandler+0x620>)
    2e8a:	a819      	add	r0, sp, #100	; 0x64
    2e8c:	4b69      	ldr	r3, [pc, #420]	; (3034 <netHandler+0x624>)
    2e8e:	4798      	blx	r3
    2e90:	2800      	cmp	r0, #0
    2e92:	d01b      	beq.n	2ecc <netHandler+0x4bc>
						} else if (strcmp(device, "rem") == 0) {
    2e94:	4968      	ldr	r1, [pc, #416]	; (3038 <netHandler+0x628>)
    2e96:	a819      	add	r0, sp, #100	; 0x64
    2e98:	4b66      	ldr	r3, [pc, #408]	; (3034 <netHandler+0x624>)
    2e9a:	4798      	blx	r3
    2e9c:	2800      	cmp	r0, #0
    2e9e:	d040      	beq.n	2f22 <netHandler+0x512>
						} else if (strcmp(device, "psu") == 0) {
    2ea0:	4966      	ldr	r1, [pc, #408]	; (303c <netHandler+0x62c>)
    2ea2:	a819      	add	r0, sp, #100	; 0x64
    2ea4:	4b63      	ldr	r3, [pc, #396]	; (3034 <netHandler+0x624>)
    2ea6:	4798      	blx	r3
    2ea8:	2800      	cmp	r0, #0
    2eaa:	d128      	bne.n	2efe <netHandler+0x4ee>
						buzer(3);
    2eac:	3003      	adds	r0, #3
    2eae:	4b64      	ldr	r3, [pc, #400]	; (3040 <netHandler+0x630>)
    2eb0:	4798      	blx	r3
						outState = (strcmp(action, "on") == 0) ? 1 : 0;
    2eb2:	4964      	ldr	r1, [pc, #400]	; (3044 <netHandler+0x634>)
    2eb4:	a81c      	add	r0, sp, #112	; 0x70
    2eb6:	4b5f      	ldr	r3, [pc, #380]	; (3034 <netHandler+0x624>)
    2eb8:	4798      	blx	r3
    2eba:	0003      	movs	r3, r0
    2ebc:	4258      	negs	r0, r3
    2ebe:	4158      	adcs	r0, r3
    2ec0:	4b61      	ldr	r3, [pc, #388]	; (3048 <netHandler+0x638>)
    2ec2:	7018      	strb	r0, [r3, #0]
						remoteCtrl = 1;
    2ec4:	2201      	movs	r2, #1
    2ec6:	4b61      	ldr	r3, [pc, #388]	; (304c <netHandler+0x63c>)
    2ec8:	701a      	strb	r2, [r3, #0]
    2eca:	e018      	b.n	2efe <netHandler+0x4ee>
						buzer(3);
    2ecc:	3003      	adds	r0, #3
    2ece:	4b5c      	ldr	r3, [pc, #368]	; (3040 <netHandler+0x630>)
    2ed0:	4798      	blx	r3
						gpio_set_pin_level(O2, strcmp(action, "on") == 0);
    2ed2:	495c      	ldr	r1, [pc, #368]	; (3044 <netHandler+0x634>)
    2ed4:	a81c      	add	r0, sp, #112	; 0x70
    2ed6:	4b57      	ldr	r3, [pc, #348]	; (3034 <netHandler+0x624>)
    2ed8:	4798      	blx	r3
	if (level) {
    2eda:	2800      	cmp	r0, #0
    2edc:	d115      	bne.n	2f0a <netHandler+0x4fa>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    2ede:	2280      	movs	r2, #128	; 0x80
    2ee0:	0052      	lsls	r2, r2, #1
    2ee2:	23c0      	movs	r3, #192	; 0xc0
    2ee4:	05db      	lsls	r3, r3, #23
    2ee6:	619a      	str	r2, [r3, #24]
						gpio_set_pin_level(O3, strcmp(action, "on") == 0);
    2ee8:	4956      	ldr	r1, [pc, #344]	; (3044 <netHandler+0x634>)
    2eea:	a81c      	add	r0, sp, #112	; 0x70
    2eec:	4b51      	ldr	r3, [pc, #324]	; (3034 <netHandler+0x624>)
    2eee:	4798      	blx	r3
    2ef0:	2800      	cmp	r0, #0
    2ef2:	d110      	bne.n	2f16 <netHandler+0x506>
    2ef4:	2280      	movs	r2, #128	; 0x80
    2ef6:	0092      	lsls	r2, r2, #2
    2ef8:	23c0      	movs	r3, #192	; 0xc0
    2efa:	05db      	lsls	r3, r3, #23
    2efc:	619a      	str	r2, [r3, #24]
					send(HTTP_SOCKET, (uint8_t *)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\r\n\n{\"success\":true}", 65);
    2efe:	2241      	movs	r2, #65	; 0x41
    2f00:	4953      	ldr	r1, [pc, #332]	; (3050 <netHandler+0x640>)
    2f02:	0020      	movs	r0, r4
    2f04:	4b53      	ldr	r3, [pc, #332]	; (3054 <netHandler+0x644>)
    2f06:	4798      	blx	r3
    2f08:	e6b2      	b.n	2c70 <netHandler+0x260>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2f0a:	2280      	movs	r2, #128	; 0x80
    2f0c:	0052      	lsls	r2, r2, #1
    2f0e:	23c0      	movs	r3, #192	; 0xc0
    2f10:	05db      	lsls	r3, r3, #23
    2f12:	615a      	str	r2, [r3, #20]
    2f14:	e7e8      	b.n	2ee8 <netHandler+0x4d8>
    2f16:	2280      	movs	r2, #128	; 0x80
    2f18:	0092      	lsls	r2, r2, #2
    2f1a:	23c0      	movs	r3, #192	; 0xc0
    2f1c:	05db      	lsls	r3, r3, #23
    2f1e:	615a      	str	r2, [r3, #20]
    2f20:	e7ed      	b.n	2efe <netHandler+0x4ee>
						buzer(3);
    2f22:	3003      	adds	r0, #3
    2f24:	4b46      	ldr	r3, [pc, #280]	; (3040 <netHandler+0x630>)
    2f26:	4798      	blx	r3
						remoteCtrl = (strcmp(action, "on") == 0);
    2f28:	4946      	ldr	r1, [pc, #280]	; (3044 <netHandler+0x634>)
    2f2a:	a81c      	add	r0, sp, #112	; 0x70
    2f2c:	4b41      	ldr	r3, [pc, #260]	; (3034 <netHandler+0x624>)
    2f2e:	4798      	blx	r3
    2f30:	4243      	negs	r3, r0
    2f32:	4143      	adcs	r3, r0
    2f34:	b2db      	uxtb	r3, r3
    2f36:	4a45      	ldr	r2, [pc, #276]	; (304c <netHandler+0x63c>)
    2f38:	7013      	strb	r3, [r2, #0]
    2f3a:	2b00      	cmp	r3, #0
    2f3c:	d005      	beq.n	2f4a <netHandler+0x53a>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    2f3e:	2280      	movs	r2, #128	; 0x80
    2f40:	00d2      	lsls	r2, r2, #3
    2f42:	23c0      	movs	r3, #192	; 0xc0
    2f44:	05db      	lsls	r3, r3, #23
    2f46:	619a      	str	r2, [r3, #24]
    2f48:	e7d9      	b.n	2efe <netHandler+0x4ee>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2f4a:	2280      	movs	r2, #128	; 0x80
    2f4c:	00d2      	lsls	r2, r2, #3
    2f4e:	23c0      	movs	r3, #192	; 0xc0
    2f50:	05db      	lsls	r3, r3, #23
    2f52:	615a      	str	r2, [r3, #20]
    2f54:	e7d3      	b.n	2efe <netHandler+0x4ee>
					delay_ms(1);
    2f56:	2001      	movs	r0, #1
    2f58:	4b3f      	ldr	r3, [pc, #252]	; (3058 <netHandler+0x648>)
    2f5a:	4798      	blx	r3
				while (getSn_TX_FSR(HTTP_SOCKET) != getSn_TxMAX(HTTP_SOCKET)) {
    2f5c:	0020      	movs	r0, r4
    2f5e:	4b3f      	ldr	r3, [pc, #252]	; (305c <netHandler+0x64c>)
    2f60:	4798      	blx	r3
    2f62:	0007      	movs	r7, r0
    2f64:	23f8      	movs	r3, #248	; 0xf8
    2f66:	015b      	lsls	r3, r3, #5
    2f68:	18f0      	adds	r0, r6, r3
    2f6a:	4b3d      	ldr	r3, [pc, #244]	; (3060 <netHandler+0x650>)
    2f6c:	4798      	blx	r3
    2f6e:	0280      	lsls	r0, r0, #10
    2f70:	4287      	cmp	r7, r0
    2f72:	d1f0      	bne.n	2f56 <netHandler+0x546>
				}
				close(HTTP_SOCKET);
    2f74:	0020      	movs	r0, r4
    2f76:	4b3b      	ldr	r3, [pc, #236]	; (3064 <netHandler+0x654>)
    2f78:	4798      	blx	r3
    2f7a:	e020      	b.n	2fbe <netHandler+0x5ae>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    2f7c:	2180      	movs	r1, #128	; 0x80
    2f7e:	0289      	lsls	r1, r1, #10
    2f80:	3397      	adds	r3, #151	; 0x97
    2f82:	22c0      	movs	r2, #192	; 0xc0
    2f84:	05d2      	lsls	r2, r2, #23
    2f86:	50d1      	str	r1, [r2, r3]
    2f88:	e023      	b.n	2fd2 <netHandler+0x5c2>
    2f8a:	2280      	movs	r2, #128	; 0x80
    2f8c:	0392      	lsls	r2, r2, #14
    2f8e:	23c0      	movs	r3, #192	; 0xc0
    2f90:	05db      	lsls	r3, r3, #23
    2f92:	619a      	str	r2, [r3, #24]
    2f94:	e026      	b.n	2fe4 <netHandler+0x5d4>
	for (uint8_t HTTP_SOCKET = 5; HTTP_SOCKET <= 7; HTTP_SOCKET++) {
    2f96:	3401      	adds	r4, #1
    2f98:	b2e4      	uxtb	r4, r4
    2f9a:	2c07      	cmp	r4, #7
    2f9c:	d834      	bhi.n	3008 <netHandler+0x5f8>
		if (getSn_SR(HTTP_SOCKET) == SOCK_ESTABLISHED) {
    2f9e:	9414      	str	r4, [sp, #80]	; 0x50
    2fa0:	00a3      	lsls	r3, r4, #2
    2fa2:	3301      	adds	r3, #1
    2fa4:	00de      	lsls	r6, r3, #3
    2fa6:	23c0      	movs	r3, #192	; 0xc0
    2fa8:	009b      	lsls	r3, r3, #2
    2faa:	469c      	mov	ip, r3
    2fac:	44b4      	add	ip, r6
    2fae:	4663      	mov	r3, ip
    2fb0:	9311      	str	r3, [sp, #68]	; 0x44
    2fb2:	4660      	mov	r0, ip
    2fb4:	4b2a      	ldr	r3, [pc, #168]	; (3060 <netHandler+0x650>)
    2fb6:	4798      	blx	r3
    2fb8:	2817      	cmp	r0, #23
    2fba:	d100      	bne.n	2fbe <netHandler+0x5ae>
    2fbc:	e5f5      	b.n	2baa <netHandler+0x19a>
			}
		}
		if(outState == 1){
    2fbe:	4b22      	ldr	r3, [pc, #136]	; (3048 <netHandler+0x638>)
    2fc0:	781b      	ldrb	r3, [r3, #0]
    2fc2:	2b01      	cmp	r3, #1
    2fc4:	d0da      	beq.n	2f7c <netHandler+0x56c>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2fc6:	2180      	movs	r1, #128	; 0x80
    2fc8:	0289      	lsls	r1, r1, #10
    2fca:	2394      	movs	r3, #148	; 0x94
    2fcc:	22c0      	movs	r2, #192	; 0xc0
    2fce:	05d2      	lsls	r2, r2, #23
    2fd0:	50d1      	str	r1, [r2, r3]
			gpio_set_pin_level(PSU_OUT_EN, true);
			}else{
			gpio_set_pin_level(PSU_OUT_EN, false);
			
		}
		if(remoteCtrl == 1){
    2fd2:	4b1e      	ldr	r3, [pc, #120]	; (304c <netHandler+0x63c>)
    2fd4:	781b      	ldrb	r3, [r3, #0]
    2fd6:	2b01      	cmp	r3, #1
    2fd8:	d0d7      	beq.n	2f8a <netHandler+0x57a>
    2fda:	2280      	movs	r2, #128	; 0x80
    2fdc:	0392      	lsls	r2, r2, #14
    2fde:	23c0      	movs	r3, #192	; 0xc0
    2fe0:	05db      	lsls	r3, r3, #23
    2fe2:	615a      	str	r2, [r3, #20]
		}
		//if (getSn_SR(HTTP_SOCKET) == SOCK_CLOSE_WAIT) {
		//disconnect(HTTP_SOCKET);
		//}

		if (getSn_SR(HTTP_SOCKET) == SOCK_CLOSED) {
    2fe4:	9811      	ldr	r0, [sp, #68]	; 0x44
    2fe6:	4b1e      	ldr	r3, [pc, #120]	; (3060 <netHandler+0x650>)
    2fe8:	4798      	blx	r3
    2fea:	2800      	cmp	r0, #0
    2fec:	d1d3      	bne.n	2f96 <netHandler+0x586>
			socket(HTTP_SOCKET, Sn_MR_TCP, socketPort[HTTP_SOCKET], 0);
    2fee:	9b14      	ldr	r3, [sp, #80]	; 0x50
    2ff0:	005e      	lsls	r6, r3, #1
    2ff2:	4b1d      	ldr	r3, [pc, #116]	; (3068 <netHandler+0x658>)
    2ff4:	5af2      	ldrh	r2, [r6, r3]
    2ff6:	2300      	movs	r3, #0
    2ff8:	2101      	movs	r1, #1
    2ffa:	0020      	movs	r0, r4
    2ffc:	4d1b      	ldr	r5, [pc, #108]	; (306c <netHandler+0x65c>)
    2ffe:	47a8      	blx	r5
			listen(HTTP_SOCKET);
    3000:	0020      	movs	r0, r4
    3002:	4b1b      	ldr	r3, [pc, #108]	; (3070 <netHandler+0x660>)
    3004:	4798      	blx	r3
    3006:	e7c6      	b.n	2f96 <netHandler+0x586>
		}
	}
	
    3008:	b05d      	add	sp, #372	; 0x174
    300a:	bc0c      	pop	{r2, r3}
    300c:	4691      	mov	r9, r2
    300e:	469a      	mov	sl, r3
    3010:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3012:	46c0      	nop			; (mov r8, r8)
    3014:	000118c4 	.word	0x000118c4
    3018:	20000e48 	.word	0x20000e48
    301c:	00007531 	.word	0x00007531
    3020:	000118d4 	.word	0x000118d4
    3024:	00006f61 	.word	0x00006f61
    3028:	000118ec 	.word	0x000118ec
    302c:	00006dc1 	.word	0x00006dc1
    3030:	000118f8 	.word	0x000118f8
    3034:	00007181 	.word	0x00007181
    3038:	00011900 	.word	0x00011900
    303c:	00011904 	.word	0x00011904
    3040:	00001e7d 	.word	0x00001e7d
    3044:	000118fc 	.word	0x000118fc
    3048:	20000023 	.word	0x20000023
    304c:	20000b15 	.word	0x20000b15
    3050:	00011880 	.word	0x00011880
    3054:	00003395 	.word	0x00003395
    3058:	00000199 	.word	0x00000199
    305c:	00003d51 	.word	0x00003d51
    3060:	00003b95 	.word	0x00003b95
    3064:	00003075 	.word	0x00003075
    3068:	2000002c 	.word	0x2000002c
    306c:	000030fd 	.word	0x000030fd
    3070:	0000327d 	.word	0x0000327d

00003074 <close>:
   while(getSn_SR(sn) == SOCK_CLOSED);
   return (int8_t)sn;
}	   

int8_t close(uint8_t sn)
{
    3074:	b570      	push	{r4, r5, r6, lr}
    3076:	0006      	movs	r6, r0
	CHECK_SOCKNUM();
    3078:	2808      	cmp	r0, #8
    307a:	d82f      	bhi.n	30dc <close+0x68>
      while(getSn_CR(sn) != 0);
      while(getSn_SR(sn) != SOCK_UDP);
      sendto(sn,destip,1,destip,0x3000); // send the dummy data to an unknown destination(0.0.0.1).
   };   
#endif 
	setSn_CR(sn,Sn_CR_CLOSE);
    307c:	0084      	lsls	r4, r0, #2
    307e:	3401      	adds	r4, #1
    3080:	00e4      	lsls	r4, r4, #3
    3082:	1c65      	adds	r5, r4, #1
    3084:	35ff      	adds	r5, #255	; 0xff
    3086:	2110      	movs	r1, #16
    3088:	0028      	movs	r0, r5
    308a:	4b16      	ldr	r3, [pc, #88]	; (30e4 <close+0x70>)
    308c:	4798      	blx	r3
   /* wait to process the command... */
	while( getSn_CR(sn) );
    308e:	0028      	movs	r0, r5
    3090:	4b15      	ldr	r3, [pc, #84]	; (30e8 <close+0x74>)
    3092:	4798      	blx	r3
    3094:	2800      	cmp	r0, #0
    3096:	d1fa      	bne.n	308e <close+0x1a>
	/* clear all interrupt of the socket. */
	setSn_IR(sn, 0xFF);
    3098:	2380      	movs	r3, #128	; 0x80
    309a:	009b      	lsls	r3, r3, #2
    309c:	18e0      	adds	r0, r4, r3
    309e:	211f      	movs	r1, #31
    30a0:	4b10      	ldr	r3, [pc, #64]	; (30e4 <close+0x70>)
    30a2:	4798      	blx	r3
	//A20150401 : Release the sock_io_mode of socket n.
	sock_io_mode &= ~(1<<sn);
    30a4:	2301      	movs	r3, #1
    30a6:	40b3      	lsls	r3, r6
    30a8:	43db      	mvns	r3, r3
    30aa:	b21b      	sxth	r3, r3
    30ac:	490f      	ldr	r1, [pc, #60]	; (30ec <close+0x78>)
    30ae:	880a      	ldrh	r2, [r1, #0]
    30b0:	401a      	ands	r2, r3
    30b2:	800a      	strh	r2, [r1, #0]
	//
	sock_is_sending &= ~(1<<sn);
    30b4:	490e      	ldr	r1, [pc, #56]	; (30f0 <close+0x7c>)
    30b6:	880a      	ldrh	r2, [r1, #0]
    30b8:	4013      	ands	r3, r2
    30ba:	800b      	strh	r3, [r1, #0]
	sock_remained_size[sn] = 0;
    30bc:	0072      	lsls	r2, r6, #1
    30be:	2100      	movs	r1, #0
    30c0:	4b0c      	ldr	r3, [pc, #48]	; (30f4 <close+0x80>)
    30c2:	52d1      	strh	r1, [r2, r3]
	sock_pack_info[sn] = 0;
    30c4:	4b0c      	ldr	r3, [pc, #48]	; (30f8 <close+0x84>)
    30c6:	2200      	movs	r2, #0
    30c8:	559a      	strb	r2, [r3, r6]
	while(getSn_SR(sn) != SOCK_CLOSED);
    30ca:	23c0      	movs	r3, #192	; 0xc0
    30cc:	009b      	lsls	r3, r3, #2
    30ce:	18e0      	adds	r0, r4, r3
    30d0:	4b05      	ldr	r3, [pc, #20]	; (30e8 <close+0x74>)
    30d2:	4798      	blx	r3
    30d4:	2800      	cmp	r0, #0
    30d6:	d1f8      	bne.n	30ca <close+0x56>
	return SOCK_OK;
    30d8:	3001      	adds	r0, #1
}
    30da:	bd70      	pop	{r4, r5, r6, pc}
	CHECK_SOCKNUM();
    30dc:	2001      	movs	r0, #1
    30de:	4240      	negs	r0, r0
    30e0:	e7fb      	b.n	30da <close+0x66>
    30e2:	46c0      	nop			; (mov r8, r8)
    30e4:	00003bf9 	.word	0x00003bf9
    30e8:	00003b95 	.word	0x00003b95
    30ec:	20000b24 	.word	0x20000b24
    30f0:	20000b26 	.word	0x20000b26
    30f4:	20000b30 	.word	0x20000b30
    30f8:	20000b28 	.word	0x20000b28

000030fc <socket>:
{
    30fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    30fe:	46ce      	mov	lr, r9
    3100:	4647      	mov	r7, r8
    3102:	b580      	push	{r7, lr}
    3104:	b085      	sub	sp, #20
    3106:	0006      	movs	r6, r0
    3108:	000d      	movs	r5, r1
    310a:	4691      	mov	r9, r2
    310c:	001f      	movs	r7, r3
	CHECK_SOCKNUM();
    310e:	2808      	cmp	r0, #8
    3110:	d900      	bls.n	3114 <socket+0x18>
    3112:	e091      	b.n	3238 <socket+0x13c>
	switch(protocol)
    3114:	2901      	cmp	r1, #1
    3116:	d069      	beq.n	31ec <socket+0xf0>
    3118:	2900      	cmp	r1, #0
    311a:	d100      	bne.n	311e <socket+0x22>
    311c:	e08f      	b.n	323e <socket+0x142>
    311e:	2904      	cmp	r1, #4
    3120:	d900      	bls.n	3124 <socket+0x28>
    3122:	e08c      	b.n	323e <socket+0x142>
	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
    3124:	077b      	lsls	r3, r7, #29
    3126:	d500      	bpl.n	312a <socket+0x2e>
    3128:	e08c      	b.n	3244 <socket+0x148>
	if(flag != 0)
    312a:	2f00      	cmp	r7, #0
    312c:	d004      	beq.n	3138 <socket+0x3c>
   	switch(protocol)
    312e:	2d01      	cmp	r5, #1
    3130:	d069      	beq.n	3206 <socket+0x10a>
    3132:	2d02      	cmp	r5, #2
    3134:	d100      	bne.n	3138 <socket+0x3c>
    3136:	e06c      	b.n	3212 <socket+0x116>
	close(sn);
    3138:	0030      	movs	r0, r6
    313a:	4b45      	ldr	r3, [pc, #276]	; (3250 <socket+0x154>)
    313c:	4798      	blx	r3
	   setSn_MR(sn, (protocol | (flag & 0xF0)));
    313e:	00b4      	lsls	r4, r6, #2
    3140:	3401      	adds	r4, #1
    3142:	00e4      	lsls	r4, r4, #3
    3144:	230f      	movs	r3, #15
    3146:	0039      	movs	r1, r7
    3148:	4399      	bics	r1, r3
    314a:	b249      	sxtb	r1, r1
    314c:	4329      	orrs	r1, r5
    314e:	b2c9      	uxtb	r1, r1
    3150:	0020      	movs	r0, r4
    3152:	4b40      	ldr	r3, [pc, #256]	; (3254 <socket+0x158>)
    3154:	4798      	blx	r3
	if(!port)
    3156:	464b      	mov	r3, r9
    3158:	2b00      	cmp	r3, #0
    315a:	d108      	bne.n	316e <socket+0x72>
	   port = sock_any_port++;
    315c:	4a3e      	ldr	r2, [pc, #248]	; (3258 <socket+0x15c>)
    315e:	8813      	ldrh	r3, [r2, #0]
    3160:	4699      	mov	r9, r3
    3162:	3301      	adds	r3, #1
    3164:	b29b      	uxth	r3, r3
    3166:	8013      	strh	r3, [r2, #0]
	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
    3168:	4a3c      	ldr	r2, [pc, #240]	; (325c <socket+0x160>)
    316a:	4293      	cmp	r3, r2
    316c:	d060      	beq.n	3230 <socket+0x134>
   setSn_PORT(sn,port);	
    316e:	2380      	movs	r3, #128	; 0x80
    3170:	00db      	lsls	r3, r3, #3
    3172:	18e0      	adds	r0, r4, r3
    3174:	464b      	mov	r3, r9
    3176:	0a19      	lsrs	r1, r3, #8
    3178:	4b36      	ldr	r3, [pc, #216]	; (3254 <socket+0x158>)
    317a:	4698      	mov	r8, r3
    317c:	4798      	blx	r3
    317e:	464b      	mov	r3, r9
    3180:	466a      	mov	r2, sp
    3182:	71d3      	strb	r3, [r2, #7]
    3184:	79d1      	ldrb	r1, [r2, #7]
    3186:	23a0      	movs	r3, #160	; 0xa0
    3188:	00db      	lsls	r3, r3, #3
    318a:	18e0      	adds	r0, r4, r3
    318c:	47c0      	blx	r8
   setSn_CR(sn,Sn_CR_OPEN);
    318e:	1c65      	adds	r5, r4, #1
    3190:	35ff      	adds	r5, #255	; 0xff
    3192:	2101      	movs	r1, #1
    3194:	0028      	movs	r0, r5
    3196:	47c0      	blx	r8
   while(getSn_CR(sn));
    3198:	0028      	movs	r0, r5
    319a:	4b31      	ldr	r3, [pc, #196]	; (3260 <socket+0x164>)
    319c:	4798      	blx	r3
    319e:	2800      	cmp	r0, #0
    31a0:	d1fa      	bne.n	3198 <socket+0x9c>
   sock_io_mode &= ~(1 <<sn);
    31a2:	2201      	movs	r2, #1
    31a4:	40b2      	lsls	r2, r6
    31a6:	43d2      	mvns	r2, r2
    31a8:	b212      	sxth	r2, r2
    31aa:	482e      	ldr	r0, [pc, #184]	; (3264 <socket+0x168>)
    31ac:	8803      	ldrh	r3, [r0, #0]
    31ae:	4013      	ands	r3, r2
    31b0:	b21b      	sxth	r3, r3
	sock_io_mode |= ((flag & SF_IO_NONBLOCK) << sn);   
    31b2:	2101      	movs	r1, #1
    31b4:	400f      	ands	r7, r1
    31b6:	40b7      	lsls	r7, r6
    31b8:	433b      	orrs	r3, r7
    31ba:	8003      	strh	r3, [r0, #0]
   sock_is_sending &= ~(1<<sn);
    31bc:	492a      	ldr	r1, [pc, #168]	; (3268 <socket+0x16c>)
    31be:	880b      	ldrh	r3, [r1, #0]
    31c0:	401a      	ands	r2, r3
    31c2:	800a      	strh	r2, [r1, #0]
   sock_remained_size[sn] = 0;
    31c4:	0073      	lsls	r3, r6, #1
    31c6:	2100      	movs	r1, #0
    31c8:	4a28      	ldr	r2, [pc, #160]	; (326c <socket+0x170>)
    31ca:	5299      	strh	r1, [r3, r2]
   sock_pack_info[sn] = PACK_COMPLETED;
    31cc:	4b28      	ldr	r3, [pc, #160]	; (3270 <socket+0x174>)
    31ce:	2200      	movs	r2, #0
    31d0:	559a      	strb	r2, [r3, r6]
   while(getSn_SR(sn) == SOCK_CLOSED);
    31d2:	23c0      	movs	r3, #192	; 0xc0
    31d4:	009b      	lsls	r3, r3, #2
    31d6:	18e0      	adds	r0, r4, r3
    31d8:	4b21      	ldr	r3, [pc, #132]	; (3260 <socket+0x164>)
    31da:	4798      	blx	r3
    31dc:	2800      	cmp	r0, #0
    31de:	d0f8      	beq.n	31d2 <socket+0xd6>
   return (int8_t)sn;
    31e0:	b270      	sxtb	r0, r6
}	   
    31e2:	b005      	add	sp, #20
    31e4:	bc0c      	pop	{r2, r3}
    31e6:	4690      	mov	r8, r2
    31e8:	4699      	mov	r9, r3
    31ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
            getSIPR((uint8_t*)&taddr);
    31ec:	2204      	movs	r2, #4
    31ee:	a903      	add	r1, sp, #12
    31f0:	20f0      	movs	r0, #240	; 0xf0
    31f2:	0100      	lsls	r0, r0, #4
    31f4:	4b1f      	ldr	r3, [pc, #124]	; (3274 <socket+0x178>)
    31f6:	4798      	blx	r3
            if(taddr == 0) return SOCKERR_SOCKINIT;
    31f8:	9b03      	ldr	r3, [sp, #12]
    31fa:	2b00      	cmp	r3, #0
    31fc:	d000      	beq.n	3200 <socket+0x104>
    31fe:	e791      	b.n	3124 <socket+0x28>
    3200:	2003      	movs	r0, #3
    3202:	4240      	negs	r0, r0
    3204:	e7ed      	b.n	31e2 <socket+0xe6>
   		     if((flag & (SF_TCP_NODELAY|SF_IO_NONBLOCK))==0) return SOCKERR_SOCKFLAG;
    3206:	2321      	movs	r3, #33	; 0x21
    3208:	423b      	tst	r3, r7
    320a:	d195      	bne.n	3138 <socket+0x3c>
    320c:	2006      	movs	r0, #6
    320e:	4240      	negs	r0, r0
    3210:	e7e7      	b.n	31e2 <socket+0xe6>
   	      if(flag & SF_IGMP_VER2)
    3212:	06bb      	lsls	r3, r7, #26
    3214:	d502      	bpl.n	321c <socket+0x120>
   	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
    3216:	b27b      	sxtb	r3, r7
    3218:	2b00      	cmp	r3, #0
    321a:	da16      	bge.n	324a <socket+0x14e>
      	      if(flag & SF_UNI_BLOCK)
    321c:	06fb      	lsls	r3, r7, #27
    321e:	d400      	bmi.n	3222 <socket+0x126>
    3220:	e78a      	b.n	3138 <socket+0x3c>
      	         if((flag & SF_MULTI_ENABLE) == 0) return SOCKERR_SOCKFLAG;
    3222:	b27b      	sxtb	r3, r7
    3224:	2b00      	cmp	r3, #0
    3226:	da00      	bge.n	322a <socket+0x12e>
    3228:	e786      	b.n	3138 <socket+0x3c>
    322a:	2006      	movs	r0, #6
    322c:	4240      	negs	r0, r0
    322e:	e7d8      	b.n	31e2 <socket+0xe6>
	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
    3230:	4a11      	ldr	r2, [pc, #68]	; (3278 <socket+0x17c>)
    3232:	4b09      	ldr	r3, [pc, #36]	; (3258 <socket+0x15c>)
    3234:	801a      	strh	r2, [r3, #0]
    3236:	e79a      	b.n	316e <socket+0x72>
	CHECK_SOCKNUM();
    3238:	2001      	movs	r0, #1
    323a:	4240      	negs	r0, r0
    323c:	e7d1      	b.n	31e2 <socket+0xe6>
         return SOCKERR_SOCKMODE;
    323e:	2005      	movs	r0, #5
    3240:	4240      	negs	r0, r0
    3242:	e7ce      	b.n	31e2 <socket+0xe6>
	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
    3244:	2006      	movs	r0, #6
    3246:	4240      	negs	r0, r0
    3248:	e7cb      	b.n	31e2 <socket+0xe6>
   	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
    324a:	2006      	movs	r0, #6
    324c:	4240      	negs	r0, r0
    324e:	e7c8      	b.n	31e2 <socket+0xe6>
    3250:	00003075 	.word	0x00003075
    3254:	00003bf9 	.word	0x00003bf9
    3258:	2000003c 	.word	0x2000003c
    325c:	0000fff0 	.word	0x0000fff0
    3260:	00003b95 	.word	0x00003b95
    3264:	20000b24 	.word	0x20000b24
    3268:	20000b26 	.word	0x20000b26
    326c:	20000b30 	.word	0x20000b30
    3270:	20000b28 	.word	0x20000b28
    3274:	00003c59 	.word	0x00003c59
    3278:	ffffc000 	.word	0xffffc000

0000327c <listen>:

int8_t listen(uint8_t sn)
{
    327c:	b570      	push	{r4, r5, r6, lr}
    327e:	0006      	movs	r6, r0
	CHECK_SOCKNUM();
    3280:	2808      	cmp	r0, #8
    3282:	d829      	bhi.n	32d8 <listen+0x5c>
   CHECK_SOCKMODE(Sn_MR_TCP);
    3284:	0084      	lsls	r4, r0, #2
    3286:	3401      	adds	r4, #1
    3288:	00e4      	lsls	r4, r4, #3
    328a:	0020      	movs	r0, r4
    328c:	4b17      	ldr	r3, [pc, #92]	; (32ec <listen+0x70>)
    328e:	4798      	blx	r3
    3290:	230f      	movs	r3, #15
    3292:	4018      	ands	r0, r3
    3294:	2801      	cmp	r0, #1
    3296:	d122      	bne.n	32de <listen+0x62>
	CHECK_SOCKINIT();
    3298:	23c0      	movs	r3, #192	; 0xc0
    329a:	009b      	lsls	r3, r3, #2
    329c:	18e5      	adds	r5, r4, r3
    329e:	0028      	movs	r0, r5
    32a0:	4b12      	ldr	r3, [pc, #72]	; (32ec <listen+0x70>)
    32a2:	4798      	blx	r3
    32a4:	2813      	cmp	r0, #19
    32a6:	d11d      	bne.n	32e4 <listen+0x68>
	setSn_CR(sn,Sn_CR_LISTEN);
    32a8:	3401      	adds	r4, #1
    32aa:	34ff      	adds	r4, #255	; 0xff
    32ac:	2102      	movs	r1, #2
    32ae:	0020      	movs	r0, r4
    32b0:	4b0f      	ldr	r3, [pc, #60]	; (32f0 <listen+0x74>)
    32b2:	4798      	blx	r3
	while(getSn_CR(sn));
    32b4:	0020      	movs	r0, r4
    32b6:	4b0d      	ldr	r3, [pc, #52]	; (32ec <listen+0x70>)
    32b8:	4798      	blx	r3
    32ba:	2800      	cmp	r0, #0
    32bc:	d1fa      	bne.n	32b4 <listen+0x38>
   while(getSn_SR(sn) != SOCK_LISTEN)
    32be:	0028      	movs	r0, r5
    32c0:	4b0a      	ldr	r3, [pc, #40]	; (32ec <listen+0x70>)
    32c2:	4798      	blx	r3
    32c4:	2814      	cmp	r0, #20
    32c6:	d101      	bne.n	32cc <listen+0x50>
   {
         close(sn);
         return SOCKERR_SOCKCLOSED;
   }
   return SOCK_OK;
    32c8:	3813      	subs	r0, #19
}
    32ca:	bd70      	pop	{r4, r5, r6, pc}
         close(sn);
    32cc:	0030      	movs	r0, r6
    32ce:	4b09      	ldr	r3, [pc, #36]	; (32f4 <listen+0x78>)
    32d0:	4798      	blx	r3
         return SOCKERR_SOCKCLOSED;
    32d2:	2004      	movs	r0, #4
    32d4:	4240      	negs	r0, r0
    32d6:	e7f8      	b.n	32ca <listen+0x4e>
	CHECK_SOCKNUM();
    32d8:	2001      	movs	r0, #1
    32da:	4240      	negs	r0, r0
    32dc:	e7f5      	b.n	32ca <listen+0x4e>
   CHECK_SOCKMODE(Sn_MR_TCP);
    32de:	2005      	movs	r0, #5
    32e0:	4240      	negs	r0, r0
    32e2:	e7f2      	b.n	32ca <listen+0x4e>
	CHECK_SOCKINIT();
    32e4:	2003      	movs	r0, #3
    32e6:	4240      	negs	r0, r0
    32e8:	e7ef      	b.n	32ca <listen+0x4e>
    32ea:	46c0      	nop			; (mov r8, r8)
    32ec:	00003b95 	.word	0x00003b95
    32f0:	00003bf9 	.word	0x00003bf9
    32f4:	00003075 	.word	0x00003075

000032f8 <disconnect>:
   
   return SOCK_OK;
}

int8_t disconnect(uint8_t sn)
{
    32f8:	b570      	push	{r4, r5, r6, lr}
    32fa:	0006      	movs	r6, r0
   CHECK_SOCKNUM();
    32fc:	2808      	cmp	r0, #8
    32fe:	d836      	bhi.n	336e <disconnect+0x76>
   CHECK_SOCKMODE(Sn_MR_TCP);
    3300:	0084      	lsls	r4, r0, #2
    3302:	3401      	adds	r4, #1
    3304:	00e4      	lsls	r4, r4, #3
    3306:	0020      	movs	r0, r4
    3308:	4b1d      	ldr	r3, [pc, #116]	; (3380 <disconnect+0x88>)
    330a:	4798      	blx	r3
    330c:	230f      	movs	r3, #15
    330e:	4018      	ands	r0, r3
    3310:	2801      	cmp	r0, #1
    3312:	d12f      	bne.n	3374 <disconnect+0x7c>
	setSn_CR(sn,Sn_CR_DISCON);
    3314:	1c65      	adds	r5, r4, #1
    3316:	35ff      	adds	r5, #255	; 0xff
    3318:	2108      	movs	r1, #8
    331a:	0028      	movs	r0, r5
    331c:	4b19      	ldr	r3, [pc, #100]	; (3384 <disconnect+0x8c>)
    331e:	4798      	blx	r3
	/* wait to process the command... */
	while(getSn_CR(sn));
    3320:	0028      	movs	r0, r5
    3322:	4b17      	ldr	r3, [pc, #92]	; (3380 <disconnect+0x88>)
    3324:	4798      	blx	r3
    3326:	2800      	cmp	r0, #0
    3328:	d1fa      	bne.n	3320 <disconnect+0x28>
	sock_is_sending &= ~(1<<sn);
    332a:	2201      	movs	r2, #1
    332c:	0010      	movs	r0, r2
    332e:	40b0      	lsls	r0, r6
    3330:	4915      	ldr	r1, [pc, #84]	; (3388 <disconnect+0x90>)
    3332:	880b      	ldrh	r3, [r1, #0]
    3334:	4383      	bics	r3, r0
    3336:	800b      	strh	r3, [r1, #0]
   if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
    3338:	4b14      	ldr	r3, [pc, #80]	; (338c <disconnect+0x94>)
    333a:	881b      	ldrh	r3, [r3, #0]
    333c:	4133      	asrs	r3, r6
    333e:	421a      	tst	r2, r3
    3340:	d11b      	bne.n	337a <disconnect+0x82>
	while(getSn_SR(sn) != SOCK_CLOSED)
    3342:	23c0      	movs	r3, #192	; 0xc0
    3344:	009b      	lsls	r3, r3, #2
    3346:	18e0      	adds	r0, r4, r3
    3348:	4b0d      	ldr	r3, [pc, #52]	; (3380 <disconnect+0x88>)
    334a:	4798      	blx	r3
    334c:	2800      	cmp	r0, #0
    334e:	d00c      	beq.n	336a <disconnect+0x72>
	{
	   if(getSn_IR(sn) & Sn_IR_TIMEOUT)
    3350:	2380      	movs	r3, #128	; 0x80
    3352:	009b      	lsls	r3, r3, #2
    3354:	18e0      	adds	r0, r4, r3
    3356:	4b0a      	ldr	r3, [pc, #40]	; (3380 <disconnect+0x88>)
    3358:	4798      	blx	r3
    335a:	0703      	lsls	r3, r0, #28
    335c:	d5f1      	bpl.n	3342 <disconnect+0x4a>
	   {
	      close(sn);
    335e:	0030      	movs	r0, r6
    3360:	4b0b      	ldr	r3, [pc, #44]	; (3390 <disconnect+0x98>)
    3362:	4798      	blx	r3
	      return SOCKERR_TIMEOUT;
    3364:	200d      	movs	r0, #13
    3366:	4240      	negs	r0, r0
    3368:	e008      	b.n	337c <disconnect+0x84>
	   }
	}
	return SOCK_OK;
    336a:	3001      	adds	r0, #1
    336c:	e006      	b.n	337c <disconnect+0x84>
   CHECK_SOCKNUM();
    336e:	2001      	movs	r0, #1
    3370:	4240      	negs	r0, r0
    3372:	e003      	b.n	337c <disconnect+0x84>
   CHECK_SOCKMODE(Sn_MR_TCP);
    3374:	2005      	movs	r0, #5
    3376:	4240      	negs	r0, r0
    3378:	e000      	b.n	337c <disconnect+0x84>
   if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
    337a:	2000      	movs	r0, #0
}
    337c:	bd70      	pop	{r4, r5, r6, pc}
    337e:	46c0      	nop			; (mov r8, r8)
    3380:	00003b95 	.word	0x00003b95
    3384:	00003bf9 	.word	0x00003bf9
    3388:	20000b26 	.word	0x20000b26
    338c:	20000b24 	.word	0x20000b24
    3390:	00003075 	.word	0x00003075

00003394 <send>:

int32_t send(uint8_t sn, uint8_t * buf, uint16_t len)
{
    3394:	b5f0      	push	{r4, r5, r6, r7, lr}
    3396:	46c6      	mov	lr, r8
    3398:	b500      	push	{lr}
    339a:	b082      	sub	sp, #8
    339c:	0004      	movs	r4, r0
    339e:	9101      	str	r1, [sp, #4]
    33a0:	0017      	movs	r7, r2
   uint8_t tmp=0;
   uint16_t freesize=0;
   
   CHECK_SOCKNUM();
    33a2:	2808      	cmp	r0, #8
    33a4:	d900      	bls.n	33a8 <send+0x14>
    33a6:	e080      	b.n	34aa <send+0x116>
   CHECK_SOCKMODE(Sn_MR_TCP);
    33a8:	0005      	movs	r5, r0
    33aa:	0083      	lsls	r3, r0, #2
    33ac:	3301      	adds	r3, #1
    33ae:	00db      	lsls	r3, r3, #3
    33b0:	4698      	mov	r8, r3
    33b2:	0018      	movs	r0, r3
    33b4:	4b43      	ldr	r3, [pc, #268]	; (34c4 <send+0x130>)
    33b6:	4798      	blx	r3
    33b8:	230f      	movs	r3, #15
    33ba:	4018      	ands	r0, r3
    33bc:	2801      	cmp	r0, #1
    33be:	d000      	beq.n	33c2 <send+0x2e>
    33c0:	e076      	b.n	34b0 <send+0x11c>
   CHECK_SOCKDATA();
    33c2:	2f00      	cmp	r7, #0
    33c4:	d100      	bne.n	33c8 <send+0x34>
    33c6:	e076      	b.n	34b6 <send+0x122>
   tmp = getSn_SR(sn);
    33c8:	23c0      	movs	r3, #192	; 0xc0
    33ca:	009b      	lsls	r3, r3, #2
    33cc:	4443      	add	r3, r8
    33ce:	9300      	str	r3, [sp, #0]
    33d0:	0018      	movs	r0, r3
    33d2:	4b3c      	ldr	r3, [pc, #240]	; (34c4 <send+0x130>)
    33d4:	4798      	blx	r3
   if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
    33d6:	2817      	cmp	r0, #23
    33d8:	d002      	beq.n	33e0 <send+0x4c>
    33da:	281c      	cmp	r0, #28
    33dc:	d000      	beq.n	33e0 <send+0x4c>
    33de:	e06d      	b.n	34bc <send+0x128>
   if( sock_is_sending & (1<<sn) )
    33e0:	4b39      	ldr	r3, [pc, #228]	; (34c8 <send+0x134>)
    33e2:	881b      	ldrh	r3, [r3, #0]
    33e4:	4123      	asrs	r3, r4
    33e6:	07db      	lsls	r3, r3, #31
    33e8:	d518      	bpl.n	341c <send+0x88>
   {
      tmp = getSn_IR(sn);
    33ea:	2680      	movs	r6, #128	; 0x80
    33ec:	00b6      	lsls	r6, r6, #2
    33ee:	4446      	add	r6, r8
    33f0:	0030      	movs	r0, r6
    33f2:	4b34      	ldr	r3, [pc, #208]	; (34c4 <send+0x130>)
    33f4:	4798      	blx	r3
      if(tmp & Sn_IR_SENDOK)
    33f6:	06c3      	lsls	r3, r0, #27
    33f8:	d406      	bmi.n	3408 <send+0x74>
               return SOCK_BUSY;
            }
         #endif
         sock_is_sending &= ~(1<<sn);         
      }
      else if(tmp & Sn_IR_TIMEOUT)
    33fa:	0703      	lsls	r3, r0, #28
    33fc:	d41a      	bmi.n	3434 <send+0xa0>
      {
         close(sn);
         return SOCKERR_TIMEOUT;
      }
      else return SOCK_BUSY;
    33fe:	2000      	movs	r0, #0
   while(getSn_CR(sn));
   sock_is_sending |= (1 << sn);
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
}
    3400:	b002      	add	sp, #8
    3402:	bc04      	pop	{r2}
    3404:	4690      	mov	r8, r2
    3406:	bdf0      	pop	{r4, r5, r6, r7, pc}
         setSn_IR(sn, Sn_IR_SENDOK);
    3408:	2110      	movs	r1, #16
    340a:	0030      	movs	r0, r6
    340c:	4b2f      	ldr	r3, [pc, #188]	; (34cc <send+0x138>)
    340e:	4798      	blx	r3
         sock_is_sending &= ~(1<<sn);         
    3410:	2201      	movs	r2, #1
    3412:	40a2      	lsls	r2, r4
    3414:	492c      	ldr	r1, [pc, #176]	; (34c8 <send+0x134>)
    3416:	880b      	ldrh	r3, [r1, #0]
    3418:	4393      	bics	r3, r2
    341a:	800b      	strh	r3, [r1, #0]
   freesize = getSn_TxMAX(sn);
    341c:	20f8      	movs	r0, #248	; 0xf8
    341e:	0140      	lsls	r0, r0, #5
    3420:	4440      	add	r0, r8
    3422:	4b28      	ldr	r3, [pc, #160]	; (34c4 <send+0x130>)
    3424:	4798      	blx	r3
    3426:	b280      	uxth	r0, r0
    3428:	0280      	lsls	r0, r0, #10
    342a:	b286      	uxth	r6, r0
   if (len > freesize) len = freesize; // check size not to exceed MAX size.
    342c:	42b7      	cmp	r7, r6
    342e:	d80f      	bhi.n	3450 <send+0xbc>
    3430:	003e      	movs	r6, r7
    3432:	e00d      	b.n	3450 <send+0xbc>
         close(sn);
    3434:	0020      	movs	r0, r4
    3436:	4b26      	ldr	r3, [pc, #152]	; (34d0 <send+0x13c>)
    3438:	4798      	blx	r3
         return SOCKERR_TIMEOUT;
    343a:	200d      	movs	r0, #13
    343c:	4240      	negs	r0, r0
    343e:	e7df      	b.n	3400 <send+0x6c>
         close(sn);
    3440:	0020      	movs	r0, r4
    3442:	4b23      	ldr	r3, [pc, #140]	; (34d0 <send+0x13c>)
    3444:	4798      	blx	r3
         return SOCKERR_SOCKSTATUS;
    3446:	2007      	movs	r0, #7
    3448:	4240      	negs	r0, r0
    344a:	e7d9      	b.n	3400 <send+0x6c>
      if(len <= freesize) break;
    344c:	42be      	cmp	r6, r7
    344e:	d913      	bls.n	3478 <send+0xe4>
      freesize = getSn_TX_FSR(sn);
    3450:	0020      	movs	r0, r4
    3452:	4b20      	ldr	r3, [pc, #128]	; (34d4 <send+0x140>)
    3454:	4798      	blx	r3
    3456:	0007      	movs	r7, r0
      tmp = getSn_SR(sn);
    3458:	9800      	ldr	r0, [sp, #0]
    345a:	4b1a      	ldr	r3, [pc, #104]	; (34c4 <send+0x130>)
    345c:	4798      	blx	r3
      if ((tmp != SOCK_ESTABLISHED) && (tmp != SOCK_CLOSE_WAIT))
    345e:	2817      	cmp	r0, #23
    3460:	d001      	beq.n	3466 <send+0xd2>
    3462:	281c      	cmp	r0, #28
    3464:	d1ec      	bne.n	3440 <send+0xac>
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
    3466:	4b1c      	ldr	r3, [pc, #112]	; (34d8 <send+0x144>)
    3468:	881b      	ldrh	r3, [r3, #0]
    346a:	412b      	asrs	r3, r5
    346c:	07db      	lsls	r3, r3, #31
    346e:	d5ed      	bpl.n	344c <send+0xb8>
    3470:	42be      	cmp	r6, r7
    3472:	d9eb      	bls.n	344c <send+0xb8>
    3474:	2000      	movs	r0, #0
    3476:	e7c3      	b.n	3400 <send+0x6c>
   wiz_send_data(sn, buf, len);
    3478:	0032      	movs	r2, r6
    347a:	9901      	ldr	r1, [sp, #4]
    347c:	0020      	movs	r0, r4
    347e:	4b17      	ldr	r3, [pc, #92]	; (34dc <send+0x148>)
    3480:	4798      	blx	r3
   setSn_CR(sn,Sn_CR_SEND);
    3482:	4645      	mov	r5, r8
    3484:	3501      	adds	r5, #1
    3486:	35ff      	adds	r5, #255	; 0xff
    3488:	2120      	movs	r1, #32
    348a:	0028      	movs	r0, r5
    348c:	4b0f      	ldr	r3, [pc, #60]	; (34cc <send+0x138>)
    348e:	4798      	blx	r3
   while(getSn_CR(sn));
    3490:	0028      	movs	r0, r5
    3492:	4b0c      	ldr	r3, [pc, #48]	; (34c4 <send+0x130>)
    3494:	4798      	blx	r3
    3496:	2800      	cmp	r0, #0
    3498:	d1fa      	bne.n	3490 <send+0xfc>
   sock_is_sending |= (1 << sn);
    349a:	2201      	movs	r2, #1
    349c:	40a2      	lsls	r2, r4
    349e:	490a      	ldr	r1, [pc, #40]	; (34c8 <send+0x134>)
    34a0:	880b      	ldrh	r3, [r1, #0]
    34a2:	4313      	orrs	r3, r2
    34a4:	800b      	strh	r3, [r1, #0]
   return (int32_t)len;
    34a6:	0030      	movs	r0, r6
    34a8:	e7aa      	b.n	3400 <send+0x6c>
   CHECK_SOCKNUM();
    34aa:	2001      	movs	r0, #1
    34ac:	4240      	negs	r0, r0
    34ae:	e7a7      	b.n	3400 <send+0x6c>
   CHECK_SOCKMODE(Sn_MR_TCP);
    34b0:	2005      	movs	r0, #5
    34b2:	4240      	negs	r0, r0
    34b4:	e7a4      	b.n	3400 <send+0x6c>
   CHECK_SOCKDATA();
    34b6:	200e      	movs	r0, #14
    34b8:	4240      	negs	r0, r0
    34ba:	e7a1      	b.n	3400 <send+0x6c>
   if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
    34bc:	2007      	movs	r0, #7
    34be:	4240      	negs	r0, r0
    34c0:	e79e      	b.n	3400 <send+0x6c>
    34c2:	46c0      	nop			; (mov r8, r8)
    34c4:	00003b95 	.word	0x00003b95
    34c8:	20000b26 	.word	0x20000b26
    34cc:	00003bf9 	.word	0x00003bf9
    34d0:	00003075 	.word	0x00003075
    34d4:	00003d51 	.word	0x00003d51
    34d8:	20000b24 	.word	0x20000b24
    34dc:	00003e29 	.word	0x00003e29

000034e0 <recv>:


int32_t recv(uint8_t sn, uint8_t * buf, uint16_t len)
{
    34e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    34e2:	46c6      	mov	lr, r8
    34e4:	b500      	push	{lr}
    34e6:	b082      	sub	sp, #8
    34e8:	9000      	str	r0, [sp, #0]
    34ea:	9101      	str	r1, [sp, #4]
    34ec:	0014      	movs	r4, r2
#if   _WIZCHIP_ == 5300
   uint8_t head[2];
   uint16_t mr;
#endif
//
   CHECK_SOCKNUM();
    34ee:	2808      	cmp	r0, #8
    34f0:	d864      	bhi.n	35bc <recv+0xdc>
   CHECK_SOCKMODE(Sn_MR_TCP);
    34f2:	0006      	movs	r6, r0
    34f4:	0087      	lsls	r7, r0, #2
    34f6:	3701      	adds	r7, #1
    34f8:	00ff      	lsls	r7, r7, #3
    34fa:	0038      	movs	r0, r7
    34fc:	4b34      	ldr	r3, [pc, #208]	; (35d0 <recv+0xf0>)
    34fe:	4798      	blx	r3
    3500:	230f      	movs	r3, #15
    3502:	4018      	ands	r0, r3
    3504:	2801      	cmp	r0, #1
    3506:	d15c      	bne.n	35c2 <recv+0xe2>
   CHECK_SOCKDATA();
    3508:	2c00      	cmp	r4, #0
    350a:	d05d      	beq.n	35c8 <recv+0xe8>
   
   recvsize = getSn_RxMAX(sn);
    350c:	23f0      	movs	r3, #240	; 0xf0
    350e:	015b      	lsls	r3, r3, #5
    3510:	18f8      	adds	r0, r7, r3
    3512:	4b2f      	ldr	r3, [pc, #188]	; (35d0 <recv+0xf0>)
    3514:	4798      	blx	r3
    3516:	b280      	uxth	r0, r0
    3518:	0280      	lsls	r0, r0, #10
    351a:	b283      	uxth	r3, r0
    351c:	4698      	mov	r8, r3
   if(recvsize < len) len = recvsize;
    351e:	429c      	cmp	r4, r3
    3520:	d80f      	bhi.n	3542 <recv+0x62>
    3522:	46a0      	mov	r8, r4
    3524:	e00d      	b.n	3542 <recv+0x62>
            if(tmp == SOCK_CLOSE_WAIT)
            {
               if(recvsize != 0) break;
               else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
               {
                  close(sn);
    3526:	9800      	ldr	r0, [sp, #0]
    3528:	4b2a      	ldr	r3, [pc, #168]	; (35d4 <recv+0xf4>)
    352a:	4798      	blx	r3
                  return SOCKERR_SOCKSTATUS;
    352c:	2007      	movs	r0, #7
    352e:	4240      	negs	r0, r0
    3530:	e040      	b.n	35b4 <recv+0xd4>
               }
            }
            else
            {
               close(sn);
    3532:	9800      	ldr	r0, [sp, #0]
    3534:	4b27      	ldr	r3, [pc, #156]	; (35d4 <recv+0xf4>)
    3536:	4798      	blx	r3
               return SOCKERR_SOCKSTATUS;
    3538:	2007      	movs	r0, #7
    353a:	4240      	negs	r0, r0
    353c:	e03a      	b.n	35b4 <recv+0xd4>
            }
         }
         if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
         if(recvsize != 0) break;
    353e:	2c00      	cmp	r4, #0
    3540:	d124      	bne.n	358c <recv+0xac>
         recvsize = getSn_RX_RSR(sn);
    3542:	9d00      	ldr	r5, [sp, #0]
    3544:	0028      	movs	r0, r5
    3546:	4b24      	ldr	r3, [pc, #144]	; (35d8 <recv+0xf8>)
    3548:	4798      	blx	r3
    354a:	0004      	movs	r4, r0
         tmp = getSn_SR(sn);
    354c:	23c0      	movs	r3, #192	; 0xc0
    354e:	009b      	lsls	r3, r3, #2
    3550:	18f8      	adds	r0, r7, r3
    3552:	4b1f      	ldr	r3, [pc, #124]	; (35d0 <recv+0xf0>)
    3554:	4798      	blx	r3
         if (tmp != SOCK_ESTABLISHED)
    3556:	2817      	cmp	r0, #23
    3558:	d00f      	beq.n	357a <recv+0x9a>
            if(tmp == SOCK_CLOSE_WAIT)
    355a:	281c      	cmp	r0, #28
    355c:	d1e9      	bne.n	3532 <recv+0x52>
               if(recvsize != 0) break;
    355e:	2c00      	cmp	r4, #0
    3560:	d114      	bne.n	358c <recv+0xac>
               else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
    3562:	0028      	movs	r0, r5
    3564:	4b1d      	ldr	r3, [pc, #116]	; (35dc <recv+0xfc>)
    3566:	4798      	blx	r3
    3568:	0005      	movs	r5, r0
    356a:	23f8      	movs	r3, #248	; 0xf8
    356c:	015b      	lsls	r3, r3, #5
    356e:	18f8      	adds	r0, r7, r3
    3570:	4b17      	ldr	r3, [pc, #92]	; (35d0 <recv+0xf0>)
    3572:	4798      	blx	r3
    3574:	0280      	lsls	r0, r0, #10
    3576:	4285      	cmp	r5, r0
    3578:	d0d5      	beq.n	3526 <recv+0x46>
         if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
    357a:	4b19      	ldr	r3, [pc, #100]	; (35e0 <recv+0x100>)
    357c:	881b      	ldrh	r3, [r3, #0]
    357e:	4133      	asrs	r3, r6
    3580:	07db      	lsls	r3, r3, #31
    3582:	d5dc      	bpl.n	353e <recv+0x5e>
    3584:	2c00      	cmp	r4, #0
    3586:	d1da      	bne.n	353e <recv+0x5e>
    3588:	2000      	movs	r0, #0
    358a:	e013      	b.n	35b4 <recv+0xd4>
   }
   else sock_pack_info[sn] = PACK_COMPLETED;
   if(getSn_MR(sn) & Sn_MR_ALIGN) sock_remained_size[sn] = 0;
   //len = recvsize;
#else   
   if(recvsize < len) len = recvsize;   
    358c:	45a0      	cmp	r8, r4
    358e:	d800      	bhi.n	3592 <recv+0xb2>
    3590:	4644      	mov	r4, r8
   wiz_recv_data(sn, buf, len);
    3592:	0022      	movs	r2, r4
    3594:	9901      	ldr	r1, [sp, #4]
    3596:	9800      	ldr	r0, [sp, #0]
    3598:	4b12      	ldr	r3, [pc, #72]	; (35e4 <recv+0x104>)
    359a:	4798      	blx	r3
   setSn_CR(sn,Sn_CR_RECV);
    359c:	3701      	adds	r7, #1
    359e:	37ff      	adds	r7, #255	; 0xff
    35a0:	2140      	movs	r1, #64	; 0x40
    35a2:	0038      	movs	r0, r7
    35a4:	4b10      	ldr	r3, [pc, #64]	; (35e8 <recv+0x108>)
    35a6:	4798      	blx	r3
   while(getSn_CR(sn));
    35a8:	0038      	movs	r0, r7
    35aa:	4b09      	ldr	r3, [pc, #36]	; (35d0 <recv+0xf0>)
    35ac:	4798      	blx	r3
    35ae:	2800      	cmp	r0, #0
    35b0:	d1fa      	bne.n	35a8 <recv+0xc8>
#endif
     
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
    35b2:	0020      	movs	r0, r4
}
    35b4:	b002      	add	sp, #8
    35b6:	bc04      	pop	{r2}
    35b8:	4690      	mov	r8, r2
    35ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
   CHECK_SOCKNUM();
    35bc:	2001      	movs	r0, #1
    35be:	4240      	negs	r0, r0
    35c0:	e7f8      	b.n	35b4 <recv+0xd4>
   CHECK_SOCKMODE(Sn_MR_TCP);
    35c2:	2005      	movs	r0, #5
    35c4:	4240      	negs	r0, r0
    35c6:	e7f5      	b.n	35b4 <recv+0xd4>
   CHECK_SOCKDATA();
    35c8:	200e      	movs	r0, #14
    35ca:	4240      	negs	r0, r0
    35cc:	e7f2      	b.n	35b4 <recv+0xd4>
    35ce:	46c0      	nop			; (mov r8, r8)
    35d0:	00003b95 	.word	0x00003b95
    35d4:	00003075 	.word	0x00003075
    35d8:	00003dbd 	.word	0x00003dbd
    35dc:	00003d51 	.word	0x00003d51
    35e0:	20000b24 	.word	0x20000b24
    35e4:	00003ea1 	.word	0x00003ea1
    35e8:	00003bf9 	.word	0x00003bf9

000035ec <sendto>:

int32_t sendto(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t port)
{
    35ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    35ee:	46de      	mov	lr, fp
    35f0:	b500      	push	{lr}
    35f2:	b084      	sub	sp, #16
    35f4:	9001      	str	r0, [sp, #4]
    35f6:	9103      	str	r1, [sp, #12]
    35f8:	4693      	mov	fp, r2
    35fa:	001c      	movs	r4, r3
    35fc:	ab0a      	add	r3, sp, #40	; 0x28
    35fe:	881f      	ldrh	r7, [r3, #0]
   uint8_t tmp = 0;
   uint16_t freesize = 0;
   uint32_t taddr;

   CHECK_SOCKNUM();
    3600:	2808      	cmp	r0, #8
    3602:	d900      	bls.n	3606 <sendto+0x1a>
    3604:	e094      	b.n	3730 <sendto+0x144>
   switch(getSn_MR(sn) & 0x0F)
    3606:	0005      	movs	r5, r0
    3608:	0083      	lsls	r3, r0, #2
    360a:	3301      	adds	r3, #1
    360c:	00de      	lsls	r6, r3, #3
    360e:	0030      	movs	r0, r6
    3610:	4b52      	ldr	r3, [pc, #328]	; (375c <sendto+0x170>)
    3612:	4798      	blx	r3
    3614:	230f      	movs	r3, #15
    3616:	4003      	ands	r3, r0
    3618:	3b02      	subs	r3, #2
    361a:	b2db      	uxtb	r3, r3
    361c:	2b02      	cmp	r3, #2
    361e:	d900      	bls.n	3622 <sendto+0x36>
    3620:	e089      	b.n	3736 <sendto+0x14a>
         break;
//   #endif
      default:
         return SOCKERR_SOCKMODE;
   }
   CHECK_SOCKDATA();
    3622:	465b      	mov	r3, fp
    3624:	2b00      	cmp	r3, #0
    3626:	d100      	bne.n	362a <sendto+0x3e>
    3628:	e088      	b.n	373c <sendto+0x150>
   //M20140501 : For avoiding fatal error on memory align mismatched
   //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
   //{
      //uint32_t taddr;
      taddr = ((uint32_t)addr[0]) & 0x000000FF;
    362a:	7823      	ldrb	r3, [r4, #0]
      taddr = (taddr << 8) + ((uint32_t)addr[1] & 0x000000FF);
    362c:	021b      	lsls	r3, r3, #8
    362e:	7862      	ldrb	r2, [r4, #1]
    3630:	189b      	adds	r3, r3, r2
      taddr = (taddr << 8) + ((uint32_t)addr[2] & 0x000000FF);
    3632:	021b      	lsls	r3, r3, #8
    3634:	78a2      	ldrb	r2, [r4, #2]
    3636:	189b      	adds	r3, r3, r2
      taddr = (taddr << 8) + ((uint32_t)addr[3] & 0x000000FF);
    3638:	021b      	lsls	r3, r3, #8
    363a:	78e2      	ldrb	r2, [r4, #3]
    363c:	189b      	adds	r3, r3, r2
   //}
   //
   //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
   if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
    363e:	2b00      	cmp	r3, #0
    3640:	d033      	beq.n	36aa <sendto+0xbe>
   if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
    3642:	2f00      	cmp	r7, #0
    3644:	d104      	bne.n	3650 <sendto+0x64>
    3646:	0030      	movs	r0, r6
    3648:	4b44      	ldr	r3, [pc, #272]	; (375c <sendto+0x170>)
    364a:	4798      	blx	r3
    364c:	0743      	lsls	r3, r0, #29
    364e:	d578      	bpl.n	3742 <sendto+0x156>
   tmp = getSn_SR(sn);
    3650:	23c0      	movs	r3, #192	; 0xc0
    3652:	009b      	lsls	r3, r3, #2
    3654:	469c      	mov	ip, r3
    3656:	44b4      	add	ip, r6
    3658:	4663      	mov	r3, ip
    365a:	9302      	str	r3, [sp, #8]
    365c:	4660      	mov	r0, ip
    365e:	4b3f      	ldr	r3, [pc, #252]	; (375c <sendto+0x170>)
    3660:	4798      	blx	r3
//#if ( _WIZCHIP_ < 5200 )
   if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
    3662:	2842      	cmp	r0, #66	; 0x42
    3664:	d003      	beq.n	366e <sendto+0x82>
    3666:	2822      	cmp	r0, #34	; 0x22
    3668:	d001      	beq.n	366e <sendto+0x82>
    366a:	2832      	cmp	r0, #50	; 0x32
    366c:	d16c      	bne.n	3748 <sendto+0x15c>
//#else
//   if(tmp != SOCK_MACRAW && tmp != SOCK_UDP) return SOCKERR_SOCKSTATUS;
//#endif
      
   setSn_DIPR(sn,addr);
    366e:	2204      	movs	r2, #4
    3670:	0021      	movs	r1, r4
    3672:	23c0      	movs	r3, #192	; 0xc0
    3674:	011b      	lsls	r3, r3, #4
    3676:	18f0      	adds	r0, r6, r3
    3678:	4b39      	ldr	r3, [pc, #228]	; (3760 <sendto+0x174>)
    367a:	4798      	blx	r3
   setSn_DPORT(sn,port);      
    367c:	0a39      	lsrs	r1, r7, #8
    367e:	2380      	movs	r3, #128	; 0x80
    3680:	015b      	lsls	r3, r3, #5
    3682:	18f0      	adds	r0, r6, r3
    3684:	4c37      	ldr	r4, [pc, #220]	; (3764 <sendto+0x178>)
    3686:	47a0      	blx	r4
    3688:	b2f9      	uxtb	r1, r7
    368a:	2388      	movs	r3, #136	; 0x88
    368c:	015b      	lsls	r3, r3, #5
    368e:	18f0      	adds	r0, r6, r3
    3690:	47a0      	blx	r4
   freesize = getSn_TxMAX(sn);
    3692:	23f8      	movs	r3, #248	; 0xf8
    3694:	015b      	lsls	r3, r3, #5
    3696:	18f0      	adds	r0, r6, r3
    3698:	4b30      	ldr	r3, [pc, #192]	; (375c <sendto+0x170>)
    369a:	4798      	blx	r3
    369c:	b280      	uxth	r0, r0
    369e:	0280      	lsls	r0, r0, #10
    36a0:	b287      	uxth	r7, r0
   if (len > freesize) len = freesize; // check size not to exceed MAX size.
    36a2:	45bb      	cmp	fp, r7
    36a4:	d80b      	bhi.n	36be <sendto+0xd2>
    36a6:	465f      	mov	r7, fp
    36a8:	e009      	b.n	36be <sendto+0xd2>
   if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
    36aa:	0030      	movs	r0, r6
    36ac:	4b2b      	ldr	r3, [pc, #172]	; (375c <sendto+0x170>)
    36ae:	4798      	blx	r3
    36b0:	0743      	lsls	r3, r0, #29
    36b2:	d4c6      	bmi.n	3642 <sendto+0x56>
    36b4:	200c      	movs	r0, #12
    36b6:	4240      	negs	r0, r0
    36b8:	e04b      	b.n	3752 <sendto+0x166>
   while(1)
   {
      freesize = getSn_TX_FSR(sn);
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
      if(len <= freesize) break;
    36ba:	42a7      	cmp	r7, r4
    36bc:	d911      	bls.n	36e2 <sendto+0xf6>
      freesize = getSn_TX_FSR(sn);
    36be:	9801      	ldr	r0, [sp, #4]
    36c0:	4b29      	ldr	r3, [pc, #164]	; (3768 <sendto+0x17c>)
    36c2:	4798      	blx	r3
    36c4:	0004      	movs	r4, r0
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    36c6:	9802      	ldr	r0, [sp, #8]
    36c8:	4b24      	ldr	r3, [pc, #144]	; (375c <sendto+0x170>)
    36ca:	4798      	blx	r3
    36cc:	2800      	cmp	r0, #0
    36ce:	d03e      	beq.n	374e <sendto+0x162>
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
    36d0:	4b26      	ldr	r3, [pc, #152]	; (376c <sendto+0x180>)
    36d2:	881b      	ldrh	r3, [r3, #0]
    36d4:	412b      	asrs	r3, r5
    36d6:	07db      	lsls	r3, r3, #31
    36d8:	d5ef      	bpl.n	36ba <sendto+0xce>
    36da:	42a7      	cmp	r7, r4
    36dc:	d9ed      	bls.n	36ba <sendto+0xce>
    36de:	2000      	movs	r0, #0
    36e0:	e037      	b.n	3752 <sendto+0x166>
   };
	wiz_send_data(sn, buf, len);
    36e2:	003a      	movs	r2, r7
    36e4:	9903      	ldr	r1, [sp, #12]
    36e6:	9801      	ldr	r0, [sp, #4]
    36e8:	4b21      	ldr	r3, [pc, #132]	; (3770 <sendto+0x184>)
    36ea:	4798      	blx	r3
//A20150601 : For W5300
#if _WIZCHIP_ == 5300
   setSn_TX_WRSR(sn, len);
#endif
//   
	setSn_CR(sn,Sn_CR_SEND);
    36ec:	1c74      	adds	r4, r6, #1
    36ee:	34ff      	adds	r4, #255	; 0xff
    36f0:	2120      	movs	r1, #32
    36f2:	0020      	movs	r0, r4
    36f4:	4b1b      	ldr	r3, [pc, #108]	; (3764 <sendto+0x178>)
    36f6:	4798      	blx	r3
	/* wait to process the command... */
	while(getSn_CR(sn));
    36f8:	0020      	movs	r0, r4
    36fa:	4b18      	ldr	r3, [pc, #96]	; (375c <sendto+0x170>)
    36fc:	4798      	blx	r3
    36fe:	2800      	cmp	r0, #0
    3700:	d1fa      	bne.n	36f8 <sendto+0x10c>
   while(1)
   {
      tmp = getSn_IR(sn);
    3702:	2380      	movs	r3, #128	; 0x80
    3704:	009b      	lsls	r3, r3, #2
    3706:	18f4      	adds	r4, r6, r3
    3708:	0020      	movs	r0, r4
    370a:	4b14      	ldr	r3, [pc, #80]	; (375c <sendto+0x170>)
    370c:	4798      	blx	r3
      if(tmp & Sn_IR_SENDOK)
    370e:	06c3      	lsls	r3, r0, #27
    3710:	d408      	bmi.n	3724 <sendto+0x138>
         setSn_IR(sn, Sn_IR_SENDOK);
         break;
      }
      //M:20131104
      //else if(tmp & Sn_IR_TIMEOUT) return SOCKERR_TIMEOUT;
      else if(tmp & Sn_IR_TIMEOUT)
    3712:	0703      	lsls	r3, r0, #28
    3714:	d5f5      	bpl.n	3702 <sendto+0x116>
      {
         setSn_IR(sn, Sn_IR_TIMEOUT);
    3716:	2108      	movs	r1, #8
    3718:	0020      	movs	r0, r4
    371a:	4b12      	ldr	r3, [pc, #72]	; (3764 <sendto+0x178>)
    371c:	4798      	blx	r3
         //len = (uint16_t)SOCKERR_TIMEOUT;
         //break;
         #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
            if(taddr) setSUBR((uint8_t*)&taddr);
         #endif
         return SOCKERR_TIMEOUT;
    371e:	200d      	movs	r0, #13
    3720:	4240      	negs	r0, r0
    3722:	e016      	b.n	3752 <sendto+0x166>
         setSn_IR(sn, Sn_IR_SENDOK);
    3724:	2110      	movs	r1, #16
    3726:	0020      	movs	r0, r4
    3728:	4b0e      	ldr	r3, [pc, #56]	; (3764 <sendto+0x178>)
    372a:	4798      	blx	r3
   #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
      if(taddr) setSUBR((uint8_t*)&taddr);
   #endif
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
    372c:	0038      	movs	r0, r7
    372e:	e010      	b.n	3752 <sendto+0x166>
   CHECK_SOCKNUM();
    3730:	2001      	movs	r0, #1
    3732:	4240      	negs	r0, r0
    3734:	e00d      	b.n	3752 <sendto+0x166>
         return SOCKERR_SOCKMODE;
    3736:	2005      	movs	r0, #5
    3738:	4240      	negs	r0, r0
    373a:	e00a      	b.n	3752 <sendto+0x166>
   CHECK_SOCKDATA();
    373c:	200e      	movs	r0, #14
    373e:	4240      	negs	r0, r0
    3740:	e007      	b.n	3752 <sendto+0x166>
   if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
    3742:	200b      	movs	r0, #11
    3744:	4240      	negs	r0, r0
    3746:	e004      	b.n	3752 <sendto+0x166>
   if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
    3748:	2007      	movs	r0, #7
    374a:	4240      	negs	r0, r0
    374c:	e001      	b.n	3752 <sendto+0x166>
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    374e:	2004      	movs	r0, #4
    3750:	4240      	negs	r0, r0
}
    3752:	b004      	add	sp, #16
    3754:	bc04      	pop	{r2}
    3756:	4693      	mov	fp, r2
    3758:	bdf0      	pop	{r4, r5, r6, r7, pc}
    375a:	46c0      	nop			; (mov r8, r8)
    375c:	00003b95 	.word	0x00003b95
    3760:	00003cd9 	.word	0x00003cd9
    3764:	00003bf9 	.word	0x00003bf9
    3768:	00003d51 	.word	0x00003d51
    376c:	20000b24 	.word	0x20000b24
    3770:	00003e29 	.word	0x00003e29

00003774 <recvfrom>:



int32_t recvfrom(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t *port)
{
    3774:	b5f0      	push	{r4, r5, r6, r7, lr}
    3776:	46de      	mov	lr, fp
    3778:	4647      	mov	r7, r8
    377a:	b580      	push	{r7, lr}
    377c:	b085      	sub	sp, #20
    377e:	0005      	movs	r5, r0
    3780:	9100      	str	r1, [sp, #0]
    3782:	4690      	mov	r8, r2
    3784:	9301      	str	r3, [sp, #4]
#endif
//   
   uint8_t  head[8];
	uint16_t pack_len=0;

   CHECK_SOCKNUM();
    3786:	2808      	cmp	r0, #8
    3788:	d900      	bls.n	378c <recvfrom+0x18>
    378a:	e11b      	b.n	39c4 <recvfrom+0x250>
//A20150601
#if _WIZCHIP_ == 5300
   mr1 = getMR();
#endif   

   switch((mr=getSn_MR(sn)) & 0x0F)
    378c:	0007      	movs	r7, r0
    378e:	0083      	lsls	r3, r0, #2
    3790:	3301      	adds	r3, #1
    3792:	00de      	lsls	r6, r3, #3
    3794:	0030      	movs	r0, r6
    3796:	4b91      	ldr	r3, [pc, #580]	; (39dc <recvfrom+0x268>)
    3798:	4798      	blx	r3
    379a:	4683      	mov	fp, r0
    379c:	230f      	movs	r3, #15
    379e:	4003      	ands	r3, r0
    37a0:	3b02      	subs	r3, #2
    37a2:	b2db      	uxtb	r3, r3
    37a4:	2b02      	cmp	r3, #2
    37a6:	d900      	bls.n	37aa <recvfrom+0x36>
    37a8:	e10f      	b.n	39ca <recvfrom+0x256>
         break;
   #endif
      default:
         return SOCKERR_SOCKMODE;
   }
   CHECK_SOCKDATA();
    37aa:	4643      	mov	r3, r8
    37ac:	2b00      	cmp	r3, #0
    37ae:	d100      	bne.n	37b2 <recvfrom+0x3e>
    37b0:	e10e      	b.n	39d0 <recvfrom+0x25c>
   if(sock_remained_size[sn] == 0)
    37b2:	006b      	lsls	r3, r5, #1
    37b4:	4a8a      	ldr	r2, [pc, #552]	; (39e0 <recvfrom+0x26c>)
    37b6:	5a9b      	ldrh	r3, [r3, r2]
    37b8:	2b00      	cmp	r3, #0
    37ba:	d015      	beq.n	37e8 <recvfrom+0x74>
	uint16_t pack_len=0;
    37bc:	2400      	movs	r4, #0
         if(pack_len != 0) break;
      };
   }
//D20150601 : Move it to bottom
// sock_pack_info[sn] = PACK_COMPLETED;
	switch (mr & 0x07)
    37be:	2307      	movs	r3, #7
    37c0:	465a      	mov	r2, fp
    37c2:	4013      	ands	r3, r2
    37c4:	2b03      	cmp	r3, #3
    37c6:	d100      	bne.n	37ca <recvfrom+0x56>
    37c8:	e0bd      	b.n	3946 <recvfrom+0x1d2>
    37ca:	2b04      	cmp	r3, #4
    37cc:	d100      	bne.n	37d0 <recvfrom+0x5c>
    37ce:	e081      	b.n	38d4 <recvfrom+0x160>
    37d0:	2b02      	cmp	r3, #2
    37d2:	d01e      	beq.n	3812 <recvfrom+0x9e>
			else pack_len = sock_remained_size[sn];
   		wiz_recv_data(sn, buf, pack_len); // data copy.
			break;
   //#endif
      default:
         wiz_recv_ignore(sn, pack_len); // data copy.
    37d4:	0021      	movs	r1, r4
    37d6:	0028      	movs	r0, r5
    37d8:	4b82      	ldr	r3, [pc, #520]	; (39e4 <recvfrom+0x270>)
    37da:	4798      	blx	r3
         sock_remained_size[sn] = pack_len;
    37dc:	006b      	lsls	r3, r5, #1
    37de:	4a80      	ldr	r2, [pc, #512]	; (39e0 <recvfrom+0x26c>)
    37e0:	529c      	strh	r4, [r3, r2]
         break;
    37e2:	e026      	b.n	3832 <recvfrom+0xbe>
         if(pack_len != 0) break;
    37e4:	2c00      	cmp	r4, #0
    37e6:	d1ea      	bne.n	37be <recvfrom+0x4a>
         pack_len = getSn_RX_RSR(sn);
    37e8:	0028      	movs	r0, r5
    37ea:	4b7f      	ldr	r3, [pc, #508]	; (39e8 <recvfrom+0x274>)
    37ec:	4798      	blx	r3
    37ee:	0004      	movs	r4, r0
         if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    37f0:	23c0      	movs	r3, #192	; 0xc0
    37f2:	009b      	lsls	r3, r3, #2
    37f4:	18f0      	adds	r0, r6, r3
    37f6:	4b79      	ldr	r3, [pc, #484]	; (39dc <recvfrom+0x268>)
    37f8:	4798      	blx	r3
    37fa:	2800      	cmp	r0, #0
    37fc:	d100      	bne.n	3800 <recvfrom+0x8c>
    37fe:	e0ea      	b.n	39d6 <recvfrom+0x262>
         if( (sock_io_mode & (1<<sn)) && (pack_len == 0) ) return SOCK_BUSY;
    3800:	4b7a      	ldr	r3, [pc, #488]	; (39ec <recvfrom+0x278>)
    3802:	881b      	ldrh	r3, [r3, #0]
    3804:	413b      	asrs	r3, r7
    3806:	07db      	lsls	r3, r3, #31
    3808:	d5ec      	bpl.n	37e4 <recvfrom+0x70>
    380a:	2c00      	cmp	r4, #0
    380c:	d1ea      	bne.n	37e4 <recvfrom+0x70>
    380e:	2000      	movs	r0, #0
    3810:	e029      	b.n	3866 <recvfrom+0xf2>
	      if(sock_remained_size[sn] == 0)
    3812:	006b      	lsls	r3, r5, #1
    3814:	4a72      	ldr	r2, [pc, #456]	; (39e0 <recvfrom+0x26c>)
    3816:	5a9b      	ldrh	r3, [r3, r2]
    3818:	2b00      	cmp	r3, #0
    381a:	d029      	beq.n	3870 <recvfrom+0xfc>
			if(len < sock_remained_size[sn]) pack_len = len;
    381c:	006b      	lsls	r3, r5, #1
    381e:	4a70      	ldr	r2, [pc, #448]	; (39e0 <recvfrom+0x26c>)
    3820:	5a9c      	ldrh	r4, [r3, r2]
    3822:	45a0      	cmp	r8, r4
    3824:	d200      	bcs.n	3828 <recvfrom+0xb4>
    3826:	4644      	mov	r4, r8
   		wiz_recv_data(sn, buf, pack_len); // data copy.
    3828:	0022      	movs	r2, r4
    382a:	9900      	ldr	r1, [sp, #0]
    382c:	0028      	movs	r0, r5
    382e:	4b70      	ldr	r3, [pc, #448]	; (39f0 <recvfrom+0x27c>)
    3830:	4798      	blx	r3
   }
	setSn_CR(sn,Sn_CR_RECV);
    3832:	3601      	adds	r6, #1
    3834:	36ff      	adds	r6, #255	; 0xff
    3836:	2140      	movs	r1, #64	; 0x40
    3838:	0030      	movs	r0, r6
    383a:	4b6e      	ldr	r3, [pc, #440]	; (39f4 <recvfrom+0x280>)
    383c:	4798      	blx	r3
	/* wait to process the command... */
	while(getSn_CR(sn)) ;
    383e:	0030      	movs	r0, r6
    3840:	4b66      	ldr	r3, [pc, #408]	; (39dc <recvfrom+0x268>)
    3842:	4798      	blx	r3
    3844:	2800      	cmp	r0, #0
    3846:	d1fa      	bne.n	383e <recvfrom+0xca>
	sock_remained_size[sn] -= pack_len;
    3848:	4a65      	ldr	r2, [pc, #404]	; (39e0 <recvfrom+0x26c>)
    384a:	0069      	lsls	r1, r5, #1
    384c:	5a8b      	ldrh	r3, [r1, r2]
    384e:	1b1b      	subs	r3, r3, r4
    3850:	b29b      	uxth	r3, r3
    3852:	528b      	strh	r3, [r1, r2]
	//M20150601 : 
	//if(sock_remained_size[sn] != 0) sock_pack_info[sn] |= 0x01;
	if(sock_remained_size[sn] != 0)
    3854:	2b00      	cmp	r3, #0
    3856:	d100      	bne.n	385a <recvfrom+0xe6>
    3858:	e0b0      	b.n	39bc <recvfrom+0x248>
	{
	   sock_pack_info[sn] |= PACK_REMAINED;
    385a:	4a67      	ldr	r2, [pc, #412]	; (39f8 <recvfrom+0x284>)
    385c:	5d53      	ldrb	r3, [r2, r5]
    385e:	2101      	movs	r1, #1
    3860:	430b      	orrs	r3, r1
    3862:	5553      	strb	r3, [r2, r5]
   pack_len = len;
#endif
   //
   //M20150409 : Explicit Type Casting
   //return pack_len;
   return (int32_t)pack_len;
    3864:	0020      	movs	r0, r4
}
    3866:	b005      	add	sp, #20
    3868:	bc0c      	pop	{r2, r3}
    386a:	4690      	mov	r8, r2
    386c:	469b      	mov	fp, r3
    386e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   			wiz_recv_data(sn, head, 8);
    3870:	2208      	movs	r2, #8
    3872:	a902      	add	r1, sp, #8
    3874:	0028      	movs	r0, r5
    3876:	4b5e      	ldr	r3, [pc, #376]	; (39f0 <recvfrom+0x27c>)
    3878:	4798      	blx	r3
   			setSn_CR(sn,Sn_CR_RECV);
    387a:	1c74      	adds	r4, r6, #1
    387c:	34ff      	adds	r4, #255	; 0xff
    387e:	2140      	movs	r1, #64	; 0x40
    3880:	0020      	movs	r0, r4
    3882:	4b5c      	ldr	r3, [pc, #368]	; (39f4 <recvfrom+0x280>)
    3884:	4798      	blx	r3
   			while(getSn_CR(sn));
    3886:	0020      	movs	r0, r4
    3888:	4b54      	ldr	r3, [pc, #336]	; (39dc <recvfrom+0x268>)
    388a:	4798      	blx	r3
    388c:	2800      	cmp	r0, #0
    388e:	d1fa      	bne.n	3886 <recvfrom+0x112>
               addr[0] = head[0];
    3890:	ab02      	add	r3, sp, #8
    3892:	781b      	ldrb	r3, [r3, #0]
    3894:	9a01      	ldr	r2, [sp, #4]
    3896:	7013      	strb	r3, [r2, #0]
      			addr[1] = head[1];
    3898:	ab02      	add	r3, sp, #8
    389a:	785b      	ldrb	r3, [r3, #1]
    389c:	7053      	strb	r3, [r2, #1]
      			addr[2] = head[2];
    389e:	ab02      	add	r3, sp, #8
    38a0:	789b      	ldrb	r3, [r3, #2]
    38a2:	7093      	strb	r3, [r2, #2]
      			addr[3] = head[3];
    38a4:	ab02      	add	r3, sp, #8
    38a6:	78db      	ldrb	r3, [r3, #3]
    38a8:	70d3      	strb	r3, [r2, #3]
      			*port = head[4];
    38aa:	ab02      	add	r3, sp, #8
    38ac:	791b      	ldrb	r3, [r3, #4]
      			*port = (*port << 8) + head[5];
    38ae:	021b      	lsls	r3, r3, #8
    38b0:	aa02      	add	r2, sp, #8
    38b2:	7952      	ldrb	r2, [r2, #5]
    38b4:	189b      	adds	r3, r3, r2
    38b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    38b8:	8013      	strh	r3, [r2, #0]
      			sock_remained_size[sn] = head[6];
    38ba:	ab02      	add	r3, sp, #8
    38bc:	799b      	ldrb	r3, [r3, #6]
      			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[7];
    38be:	021b      	lsls	r3, r3, #8
    38c0:	aa02      	add	r2, sp, #8
    38c2:	79d2      	ldrb	r2, [r2, #7]
    38c4:	189b      	adds	r3, r3, r2
    38c6:	006a      	lsls	r2, r5, #1
    38c8:	4945      	ldr	r1, [pc, #276]	; (39e0 <recvfrom+0x26c>)
    38ca:	528b      	strh	r3, [r1, r2]
   			sock_pack_info[sn] = PACK_FIRST;
    38cc:	2280      	movs	r2, #128	; 0x80
    38ce:	4b4a      	ldr	r3, [pc, #296]	; (39f8 <recvfrom+0x284>)
    38d0:	555a      	strb	r2, [r3, r5]
    38d2:	e7a3      	b.n	381c <recvfrom+0xa8>
	      if(sock_remained_size[sn] == 0)
    38d4:	006b      	lsls	r3, r5, #1
    38d6:	4a42      	ldr	r2, [pc, #264]	; (39e0 <recvfrom+0x26c>)
    38d8:	5a9b      	ldrh	r3, [r3, r2]
    38da:	2b00      	cmp	r3, #0
    38dc:	d00b      	beq.n	38f6 <recvfrom+0x182>
			if(len < sock_remained_size[sn]) pack_len = len;
    38de:	006b      	lsls	r3, r5, #1
    38e0:	4a3f      	ldr	r2, [pc, #252]	; (39e0 <recvfrom+0x26c>)
    38e2:	5a9c      	ldrh	r4, [r3, r2]
    38e4:	45a0      	cmp	r8, r4
    38e6:	d200      	bcs.n	38ea <recvfrom+0x176>
    38e8:	4644      	mov	r4, r8
			wiz_recv_data(sn,buf,pack_len);
    38ea:	0022      	movs	r2, r4
    38ec:	9900      	ldr	r1, [sp, #0]
    38ee:	0028      	movs	r0, r5
    38f0:	4b3f      	ldr	r3, [pc, #252]	; (39f0 <recvfrom+0x27c>)
    38f2:	4798      	blx	r3
		   break;
    38f4:	e79d      	b.n	3832 <recvfrom+0xbe>
   			wiz_recv_data(sn, head, 2);
    38f6:	2202      	movs	r2, #2
    38f8:	a902      	add	r1, sp, #8
    38fa:	0028      	movs	r0, r5
    38fc:	4b3c      	ldr	r3, [pc, #240]	; (39f0 <recvfrom+0x27c>)
    38fe:	4798      	blx	r3
   			setSn_CR(sn,Sn_CR_RECV);
    3900:	1c74      	adds	r4, r6, #1
    3902:	34ff      	adds	r4, #255	; 0xff
    3904:	2140      	movs	r1, #64	; 0x40
    3906:	0020      	movs	r0, r4
    3908:	4b3a      	ldr	r3, [pc, #232]	; (39f4 <recvfrom+0x280>)
    390a:	4798      	blx	r3
   			while(getSn_CR(sn));
    390c:	0020      	movs	r0, r4
    390e:	4b33      	ldr	r3, [pc, #204]	; (39dc <recvfrom+0x268>)
    3910:	4798      	blx	r3
    3912:	2800      	cmp	r0, #0
    3914:	d1fa      	bne.n	390c <recvfrom+0x198>
    			sock_remained_size[sn] = head[0];
    3916:	ab02      	add	r3, sp, #8
    3918:	781b      	ldrb	r3, [r3, #0]
   			sock_remained_size[sn] = (sock_remained_size[sn] <<8) + head[1] -2;
    391a:	021b      	lsls	r3, r3, #8
    391c:	aa02      	add	r2, sp, #8
    391e:	7852      	ldrb	r2, [r2, #1]
    3920:	189b      	adds	r3, r3, r2
    3922:	b29b      	uxth	r3, r3
    3924:	3b02      	subs	r3, #2
    3926:	b29b      	uxth	r3, r3
    3928:	006a      	lsls	r2, r5, #1
    392a:	492d      	ldr	r1, [pc, #180]	; (39e0 <recvfrom+0x26c>)
    392c:	5253      	strh	r3, [r2, r1]
   			if(sock_remained_size[sn] > 1514) 
    392e:	4a33      	ldr	r2, [pc, #204]	; (39fc <recvfrom+0x288>)
    3930:	4293      	cmp	r3, r2
    3932:	d803      	bhi.n	393c <recvfrom+0x1c8>
   			sock_pack_info[sn] = PACK_FIRST;
    3934:	2280      	movs	r2, #128	; 0x80
    3936:	4b30      	ldr	r3, [pc, #192]	; (39f8 <recvfrom+0x284>)
    3938:	555a      	strb	r2, [r3, r5]
    393a:	e7d0      	b.n	38de <recvfrom+0x16a>
   			   close(sn);
    393c:	0028      	movs	r0, r5
    393e:	4b30      	ldr	r3, [pc, #192]	; (3a00 <recvfrom+0x28c>)
    3940:	4798      	blx	r3
   			   return SOCKFATAL_PACKLEN;
    3942:	4830      	ldr	r0, [pc, #192]	; (3a04 <recvfrom+0x290>)
    3944:	e78f      	b.n	3866 <recvfrom+0xf2>
		   if(sock_remained_size[sn] == 0)
    3946:	006b      	lsls	r3, r5, #1
    3948:	4a25      	ldr	r2, [pc, #148]	; (39e0 <recvfrom+0x26c>)
    394a:	5a9b      	ldrh	r3, [r3, r2]
    394c:	2b00      	cmp	r3, #0
    394e:	d00b      	beq.n	3968 <recvfrom+0x1f4>
			if(len < sock_remained_size[sn]) pack_len = len;
    3950:	006b      	lsls	r3, r5, #1
    3952:	4a23      	ldr	r2, [pc, #140]	; (39e0 <recvfrom+0x26c>)
    3954:	5a9c      	ldrh	r4, [r3, r2]
    3956:	45a0      	cmp	r8, r4
    3958:	d200      	bcs.n	395c <recvfrom+0x1e8>
    395a:	4644      	mov	r4, r8
   		wiz_recv_data(sn, buf, pack_len); // data copy.
    395c:	0022      	movs	r2, r4
    395e:	9900      	ldr	r1, [sp, #0]
    3960:	0028      	movs	r0, r5
    3962:	4b23      	ldr	r3, [pc, #140]	; (39f0 <recvfrom+0x27c>)
    3964:	4798      	blx	r3
			break;
    3966:	e764      	b.n	3832 <recvfrom+0xbe>
   			wiz_recv_data(sn, head, 6);
    3968:	2206      	movs	r2, #6
    396a:	a902      	add	r1, sp, #8
    396c:	0028      	movs	r0, r5
    396e:	4b20      	ldr	r3, [pc, #128]	; (39f0 <recvfrom+0x27c>)
    3970:	4798      	blx	r3
   			setSn_CR(sn,Sn_CR_RECV);
    3972:	1c74      	adds	r4, r6, #1
    3974:	34ff      	adds	r4, #255	; 0xff
    3976:	2140      	movs	r1, #64	; 0x40
    3978:	0020      	movs	r0, r4
    397a:	4b1e      	ldr	r3, [pc, #120]	; (39f4 <recvfrom+0x280>)
    397c:	4798      	blx	r3
   			while(getSn_CR(sn));
    397e:	0020      	movs	r0, r4
    3980:	4b16      	ldr	r3, [pc, #88]	; (39dc <recvfrom+0x268>)
    3982:	4798      	blx	r3
    3984:	2800      	cmp	r0, #0
    3986:	d1fa      	bne.n	397e <recvfrom+0x20a>
   			addr[0] = head[0];
    3988:	ab02      	add	r3, sp, #8
    398a:	781b      	ldrb	r3, [r3, #0]
    398c:	9a01      	ldr	r2, [sp, #4]
    398e:	7013      	strb	r3, [r2, #0]
   			addr[1] = head[1];
    3990:	ab02      	add	r3, sp, #8
    3992:	785b      	ldrb	r3, [r3, #1]
    3994:	7053      	strb	r3, [r2, #1]
   			addr[2] = head[2];
    3996:	ab02      	add	r3, sp, #8
    3998:	789b      	ldrb	r3, [r3, #2]
    399a:	7093      	strb	r3, [r2, #2]
   			addr[3] = head[3];
    399c:	ab02      	add	r3, sp, #8
    399e:	78db      	ldrb	r3, [r3, #3]
    39a0:	70d3      	strb	r3, [r2, #3]
   			sock_remained_size[sn] = head[4];
    39a2:	ab02      	add	r3, sp, #8
    39a4:	791b      	ldrb	r3, [r3, #4]
   			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[5];
    39a6:	021b      	lsls	r3, r3, #8
    39a8:	aa02      	add	r2, sp, #8
    39aa:	7952      	ldrb	r2, [r2, #5]
    39ac:	189b      	adds	r3, r3, r2
    39ae:	006a      	lsls	r2, r5, #1
    39b0:	490b      	ldr	r1, [pc, #44]	; (39e0 <recvfrom+0x26c>)
    39b2:	528b      	strh	r3, [r1, r2]
   			sock_pack_info[sn] = PACK_FIRST;
    39b4:	2280      	movs	r2, #128	; 0x80
    39b6:	4b10      	ldr	r3, [pc, #64]	; (39f8 <recvfrom+0x284>)
    39b8:	555a      	strb	r2, [r3, r5]
    39ba:	e7c9      	b.n	3950 <recvfrom+0x1dc>
	else sock_pack_info[sn] = PACK_COMPLETED;
    39bc:	2200      	movs	r2, #0
    39be:	4b0e      	ldr	r3, [pc, #56]	; (39f8 <recvfrom+0x284>)
    39c0:	555a      	strb	r2, [r3, r5]
    39c2:	e74f      	b.n	3864 <recvfrom+0xf0>
   CHECK_SOCKNUM();
    39c4:	2001      	movs	r0, #1
    39c6:	4240      	negs	r0, r0
    39c8:	e74d      	b.n	3866 <recvfrom+0xf2>
         return SOCKERR_SOCKMODE;
    39ca:	2005      	movs	r0, #5
    39cc:	4240      	negs	r0, r0
    39ce:	e74a      	b.n	3866 <recvfrom+0xf2>
   CHECK_SOCKDATA();
    39d0:	200e      	movs	r0, #14
    39d2:	4240      	negs	r0, r0
    39d4:	e747      	b.n	3866 <recvfrom+0xf2>
         if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    39d6:	2004      	movs	r0, #4
    39d8:	4240      	negs	r0, r0
    39da:	e744      	b.n	3866 <recvfrom+0xf2>
    39dc:	00003b95 	.word	0x00003b95
    39e0:	20000b30 	.word	0x20000b30
    39e4:	00003f19 	.word	0x00003f19
    39e8:	00003dbd 	.word	0x00003dbd
    39ec:	20000b24 	.word	0x20000b24
    39f0:	00003ea1 	.word	0x00003ea1
    39f4:	00003bf9 	.word	0x00003bf9
    39f8:	20000b28 	.word	0x20000b28
    39fc:	000005ea 	.word	0x000005ea
    3a00:	00003075 	.word	0x00003075
    3a04:	fffffc17 	.word	0xfffffc17

00003a08 <getsockopt>:
   }   
   return SOCK_OK;
}

int8_t  getsockopt(uint8_t sn, sockopt_type sotype, void* arg)
{
    3a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3a0a:	0004      	movs	r4, r0
    3a0c:	0015      	movs	r5, r2
   CHECK_SOCKNUM();
    3a0e:	2808      	cmp	r0, #8
    3a10:	d900      	bls.n	3a14 <getsockopt+0xc>
    3a12:	e0a4      	b.n	3b5e <getsockopt+0x156>
   switch(sotype)
    3a14:	290c      	cmp	r1, #12
    3a16:	d900      	bls.n	3a1a <getsockopt+0x12>
    3a18:	e0a4      	b.n	3b64 <getsockopt+0x15c>
    3a1a:	0089      	lsls	r1, r1, #2
    3a1c:	4b56      	ldr	r3, [pc, #344]	; (3b78 <getsockopt+0x170>)
    3a1e:	585b      	ldr	r3, [r3, r1]
    3a20:	469f      	mov	pc, r3
   {
      case SO_FLAG:
         *(uint8_t*)arg = getSn_MR(sn) & 0xF0;
    3a22:	0080      	lsls	r0, r0, #2
    3a24:	3001      	adds	r0, #1
    3a26:	00c0      	lsls	r0, r0, #3
    3a28:	4b54      	ldr	r3, [pc, #336]	; (3b7c <getsockopt+0x174>)
    3a2a:	4798      	blx	r3
    3a2c:	230f      	movs	r3, #15
    3a2e:	4398      	bics	r0, r3
    3a30:	7028      	strb	r0, [r5, #0]
         *(uint8_t*)arg = sock_pack_info[sn];
         break;
      default:
         return SOCKERR_SOCKOPT;
   }
   return SOCK_OK;
    3a32:	2001      	movs	r0, #1
}
    3a34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
         *(uint8_t*) arg = getSn_TTL(sn);
    3a36:	0080      	lsls	r0, r0, #2
    3a38:	3001      	adds	r0, #1
    3a3a:	00c0      	lsls	r0, r0, #3
    3a3c:	23b0      	movs	r3, #176	; 0xb0
    3a3e:	015b      	lsls	r3, r3, #5
    3a40:	469c      	mov	ip, r3
    3a42:	4460      	add	r0, ip
    3a44:	4b4d      	ldr	r3, [pc, #308]	; (3b7c <getsockopt+0x174>)
    3a46:	4798      	blx	r3
    3a48:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    3a4a:	2001      	movs	r0, #1
         break;
    3a4c:	e7f2      	b.n	3a34 <getsockopt+0x2c>
         *(uint8_t*) arg = getSn_TOS(sn);
    3a4e:	0080      	lsls	r0, r0, #2
    3a50:	3001      	adds	r0, #1
    3a52:	00c0      	lsls	r0, r0, #3
    3a54:	23a8      	movs	r3, #168	; 0xa8
    3a56:	015b      	lsls	r3, r3, #5
    3a58:	469c      	mov	ip, r3
    3a5a:	4460      	add	r0, ip
    3a5c:	4b47      	ldr	r3, [pc, #284]	; (3b7c <getsockopt+0x174>)
    3a5e:	4798      	blx	r3
    3a60:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    3a62:	2001      	movs	r0, #1
         break;
    3a64:	e7e6      	b.n	3a34 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_MSSR(sn);
    3a66:	0084      	lsls	r4, r0, #2
    3a68:	3401      	adds	r4, #1
    3a6a:	00e4      	lsls	r4, r4, #3
    3a6c:	2390      	movs	r3, #144	; 0x90
    3a6e:	015b      	lsls	r3, r3, #5
    3a70:	18e0      	adds	r0, r4, r3
    3a72:	4f42      	ldr	r7, [pc, #264]	; (3b7c <getsockopt+0x174>)
    3a74:	47b8      	blx	r7
    3a76:	b286      	uxth	r6, r0
    3a78:	0236      	lsls	r6, r6, #8
    3a7a:	b2b6      	uxth	r6, r6
    3a7c:	2398      	movs	r3, #152	; 0x98
    3a7e:	015b      	lsls	r3, r3, #5
    3a80:	18e0      	adds	r0, r4, r3
    3a82:	47b8      	blx	r7
    3a84:	b280      	uxth	r0, r0
    3a86:	1836      	adds	r6, r6, r0
    3a88:	802e      	strh	r6, [r5, #0]
   return SOCK_OK;
    3a8a:	2001      	movs	r0, #1
         break;
    3a8c:	e7d2      	b.n	3a34 <getsockopt+0x2c>
         getSn_DIPR(sn, (uint8_t*)arg);
    3a8e:	0080      	lsls	r0, r0, #2
    3a90:	3001      	adds	r0, #1
    3a92:	00c0      	lsls	r0, r0, #3
    3a94:	23c0      	movs	r3, #192	; 0xc0
    3a96:	011b      	lsls	r3, r3, #4
    3a98:	469c      	mov	ip, r3
    3a9a:	4460      	add	r0, ip
    3a9c:	2204      	movs	r2, #4
    3a9e:	0029      	movs	r1, r5
    3aa0:	4b37      	ldr	r3, [pc, #220]	; (3b80 <getsockopt+0x178>)
    3aa2:	4798      	blx	r3
   return SOCK_OK;
    3aa4:	2001      	movs	r0, #1
         break;
    3aa6:	e7c5      	b.n	3a34 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_DPORT(sn);
    3aa8:	0084      	lsls	r4, r0, #2
    3aaa:	3401      	adds	r4, #1
    3aac:	00e4      	lsls	r4, r4, #3
    3aae:	2380      	movs	r3, #128	; 0x80
    3ab0:	015b      	lsls	r3, r3, #5
    3ab2:	18e0      	adds	r0, r4, r3
    3ab4:	4f31      	ldr	r7, [pc, #196]	; (3b7c <getsockopt+0x174>)
    3ab6:	47b8      	blx	r7
    3ab8:	b286      	uxth	r6, r0
    3aba:	0236      	lsls	r6, r6, #8
    3abc:	b2b6      	uxth	r6, r6
    3abe:	2388      	movs	r3, #136	; 0x88
    3ac0:	015b      	lsls	r3, r3, #5
    3ac2:	18e0      	adds	r0, r4, r3
    3ac4:	47b8      	blx	r7
    3ac6:	b280      	uxth	r0, r0
    3ac8:	1836      	adds	r6, r6, r0
    3aca:	802e      	strh	r6, [r5, #0]
   return SOCK_OK;
    3acc:	2001      	movs	r0, #1
         break;
    3ace:	e7b1      	b.n	3a34 <getsockopt+0x2c>
         CHECK_SOCKMODE(Sn_MR_TCP);
    3ad0:	0084      	lsls	r4, r0, #2
    3ad2:	3401      	adds	r4, #1
    3ad4:	00e4      	lsls	r4, r4, #3
    3ad6:	0020      	movs	r0, r4
    3ad8:	4b28      	ldr	r3, [pc, #160]	; (3b7c <getsockopt+0x174>)
    3ada:	4798      	blx	r3
    3adc:	230f      	movs	r3, #15
    3ade:	4018      	ands	r0, r3
    3ae0:	2801      	cmp	r0, #1
    3ae2:	d142      	bne.n	3b6a <getsockopt+0x162>
         *(uint16_t*) arg = getSn_KPALVTR(sn);
    3ae4:	23bc      	movs	r3, #188	; 0xbc
    3ae6:	019b      	lsls	r3, r3, #6
    3ae8:	18e0      	adds	r0, r4, r3
    3aea:	4b24      	ldr	r3, [pc, #144]	; (3b7c <getsockopt+0x174>)
    3aec:	4798      	blx	r3
    3aee:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    3af0:	2001      	movs	r0, #1
         break;
    3af2:	e79f      	b.n	3a34 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_TX_FSR(sn);
    3af4:	4b23      	ldr	r3, [pc, #140]	; (3b84 <getsockopt+0x17c>)
    3af6:	4798      	blx	r3
    3af8:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    3afa:	2001      	movs	r0, #1
         break;
    3afc:	e79a      	b.n	3a34 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_RX_RSR(sn);
    3afe:	4b22      	ldr	r3, [pc, #136]	; (3b88 <getsockopt+0x180>)
    3b00:	4798      	blx	r3
    3b02:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    3b04:	2001      	movs	r0, #1
         break;
    3b06:	e795      	b.n	3a34 <getsockopt+0x2c>
         *(uint8_t*) arg = getSn_SR(sn);
    3b08:	0080      	lsls	r0, r0, #2
    3b0a:	3001      	adds	r0, #1
    3b0c:	00c0      	lsls	r0, r0, #3
    3b0e:	23c0      	movs	r3, #192	; 0xc0
    3b10:	009b      	lsls	r3, r3, #2
    3b12:	469c      	mov	ip, r3
    3b14:	4460      	add	r0, ip
    3b16:	4b19      	ldr	r3, [pc, #100]	; (3b7c <getsockopt+0x174>)
    3b18:	4798      	blx	r3
    3b1a:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    3b1c:	2001      	movs	r0, #1
         break;
    3b1e:	e789      	b.n	3a34 <getsockopt+0x2c>
         if(getSn_MR(sn) & Sn_MR_TCP)
    3b20:	0080      	lsls	r0, r0, #2
    3b22:	3001      	adds	r0, #1
    3b24:	00c0      	lsls	r0, r0, #3
    3b26:	4b15      	ldr	r3, [pc, #84]	; (3b7c <getsockopt+0x174>)
    3b28:	4798      	blx	r3
    3b2a:	07c3      	lsls	r3, r0, #31
    3b2c:	d405      	bmi.n	3b3a <getsockopt+0x132>
            *(uint16_t*)arg = sock_remained_size[sn];
    3b2e:	0064      	lsls	r4, r4, #1
    3b30:	4b16      	ldr	r3, [pc, #88]	; (3b8c <getsockopt+0x184>)
    3b32:	5ae3      	ldrh	r3, [r4, r3]
    3b34:	802b      	strh	r3, [r5, #0]
   return SOCK_OK;
    3b36:	2001      	movs	r0, #1
    3b38:	e77c      	b.n	3a34 <getsockopt+0x2c>
            *(uint16_t*)arg = getSn_RX_RSR(sn);
    3b3a:	0020      	movs	r0, r4
    3b3c:	4b12      	ldr	r3, [pc, #72]	; (3b88 <getsockopt+0x180>)
    3b3e:	4798      	blx	r3
    3b40:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    3b42:	2001      	movs	r0, #1
    3b44:	e776      	b.n	3a34 <getsockopt+0x2c>
         if((getSn_MR(sn) == Sn_MR_TCP))
    3b46:	0080      	lsls	r0, r0, #2
    3b48:	3001      	adds	r0, #1
    3b4a:	00c0      	lsls	r0, r0, #3
    3b4c:	4b0b      	ldr	r3, [pc, #44]	; (3b7c <getsockopt+0x174>)
    3b4e:	4798      	blx	r3
    3b50:	2801      	cmp	r0, #1
    3b52:	d00d      	beq.n	3b70 <getsockopt+0x168>
         *(uint8_t*)arg = sock_pack_info[sn];
    3b54:	4b0e      	ldr	r3, [pc, #56]	; (3b90 <getsockopt+0x188>)
    3b56:	5d1b      	ldrb	r3, [r3, r4]
    3b58:	702b      	strb	r3, [r5, #0]
   return SOCK_OK;
    3b5a:	2001      	movs	r0, #1
         break;
    3b5c:	e76a      	b.n	3a34 <getsockopt+0x2c>
   CHECK_SOCKNUM();
    3b5e:	2001      	movs	r0, #1
    3b60:	4240      	negs	r0, r0
    3b62:	e767      	b.n	3a34 <getsockopt+0x2c>
         return SOCKERR_SOCKOPT;
    3b64:	2002      	movs	r0, #2
    3b66:	4240      	negs	r0, r0
    3b68:	e764      	b.n	3a34 <getsockopt+0x2c>
         CHECK_SOCKMODE(Sn_MR_TCP);
    3b6a:	2005      	movs	r0, #5
    3b6c:	4240      	negs	r0, r0
    3b6e:	e761      	b.n	3a34 <getsockopt+0x2c>
             return SOCKERR_SOCKMODE;
    3b70:	2005      	movs	r0, #5
    3b72:	4240      	negs	r0, r0
    3b74:	e75e      	b.n	3a34 <getsockopt+0x2c>
    3b76:	46c0      	nop			; (mov r8, r8)
    3b78:	000136b8 	.word	0x000136b8
    3b7c:	00003b95 	.word	0x00003b95
    3b80:	00003c59 	.word	0x00003c59
    3b84:	00003d51 	.word	0x00003d51
    3b88:	00003dbd 	.word	0x00003dbd
    3b8c:	20000b30 	.word	0x20000b30
    3b90:	20000b28 	.word	0x20000b28

00003b94 <WIZCHIP_READ>:

#if   (_WIZCHIP_ == 5500)
////////////////////////////////////////////////////

uint8_t  WIZCHIP_READ(uint32_t AddrSel)
{
    3b94:	b530      	push	{r4, r5, lr}
    3b96:	b083      	sub	sp, #12
    3b98:	0004      	movs	r4, r0
   uint8_t ret;
   uint8_t spi_data[3];

   WIZCHIP_CRITICAL_ENTER();
    3b9a:	4d16      	ldr	r5, [pc, #88]	; (3bf4 <WIZCHIP_READ+0x60>)
    3b9c:	68eb      	ldr	r3, [r5, #12]
    3b9e:	4798      	blx	r3
   WIZCHIP.CS._select();
    3ba0:	696b      	ldr	r3, [r5, #20]
    3ba2:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_READ_ | _W5500_SPI_VDM_OP_);

   if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
    3ba4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    3ba6:	2b00      	cmp	r3, #0
    3ba8:	d016      	beq.n	3bd8 <WIZCHIP_READ+0x44>
    3baa:	4b12      	ldr	r3, [pc, #72]	; (3bf4 <WIZCHIP_READ+0x60>)
    3bac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    3bae:	2b00      	cmp	r3, #0
    3bb0:	d012      	beq.n	3bd8 <WIZCHIP_READ+0x44>
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
   }
   else																// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    3bb2:	0c22      	lsrs	r2, r4, #16
    3bb4:	a801      	add	r0, sp, #4
    3bb6:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    3bb8:	0a22      	lsrs	r2, r4, #8
    3bba:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    3bbc:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    3bbe:	2103      	movs	r1, #3
    3bc0:	4798      	blx	r3
   }
   ret = WIZCHIP.IF.SPI._read_byte();
    3bc2:	4c0c      	ldr	r4, [pc, #48]	; (3bf4 <WIZCHIP_READ+0x60>)
    3bc4:	69e3      	ldr	r3, [r4, #28]
    3bc6:	4798      	blx	r3
    3bc8:	0005      	movs	r5, r0

   WIZCHIP.CS._deselect();
    3bca:	69a3      	ldr	r3, [r4, #24]
    3bcc:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    3bce:	6923      	ldr	r3, [r4, #16]
    3bd0:	4798      	blx	r3
   return ret;
}
    3bd2:	0028      	movs	r0, r5
    3bd4:	b003      	add	sp, #12
    3bd6:	bd30      	pop	{r4, r5, pc}
	   WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    3bd8:	4d06      	ldr	r5, [pc, #24]	; (3bf4 <WIZCHIP_READ+0x60>)
    3bda:	0c20      	lsrs	r0, r4, #16
    3bdc:	b2c0      	uxtb	r0, r0
    3bde:	6a2b      	ldr	r3, [r5, #32]
    3be0:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    3be2:	0a20      	lsrs	r0, r4, #8
    3be4:	b2c0      	uxtb	r0, r0
    3be6:	6a2b      	ldr	r3, [r5, #32]
    3be8:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    3bea:	6a2b      	ldr	r3, [r5, #32]
    3bec:	b2e0      	uxtb	r0, r4
    3bee:	4798      	blx	r3
    3bf0:	e7e7      	b.n	3bc2 <WIZCHIP_READ+0x2e>
    3bf2:	46c0      	nop			; (mov r8, r8)
    3bf4:	20000040 	.word	0x20000040

00003bf8 <WIZCHIP_WRITE>:

void     WIZCHIP_WRITE(uint32_t AddrSel, uint8_t wb )
{
    3bf8:	b570      	push	{r4, r5, r6, lr}
    3bfa:	b082      	sub	sp, #8
    3bfc:	0004      	movs	r4, r0
    3bfe:	000e      	movs	r6, r1
   uint8_t spi_data[4];

   WIZCHIP_CRITICAL_ENTER();
    3c00:	4d14      	ldr	r5, [pc, #80]	; (3c54 <WIZCHIP_WRITE+0x5c>)
    3c02:	68eb      	ldr	r3, [r5, #12]
    3c04:	4798      	blx	r3
   WIZCHIP.CS._select();
    3c06:	696b      	ldr	r3, [r5, #20]
    3c08:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_WRITE_ | _W5500_SPI_VDM_OP_);
    3c0a:	2004      	movs	r0, #4
    3c0c:	4304      	orrs	r4, r0

   //if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
   if(!WIZCHIP.IF.SPI._write_burst) 	// byte operation
    3c0e:	6aab      	ldr	r3, [r5, #40]	; 0x28
    3c10:	2b00      	cmp	r3, #0
    3c12:	d00f      	beq.n	3c34 <WIZCHIP_WRITE+0x3c>
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
		WIZCHIP.IF.SPI._write_byte(wb);
   }
   else									// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    3c14:	0c22      	lsrs	r2, r4, #16
    3c16:	a801      	add	r0, sp, #4
    3c18:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    3c1a:	0a22      	lsrs	r2, r4, #8
    3c1c:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    3c1e:	7084      	strb	r4, [r0, #2]
		spi_data[3] = wb;
    3c20:	70c6      	strb	r6, [r0, #3]
		WIZCHIP.IF.SPI._write_burst(spi_data, 4);
    3c22:	2104      	movs	r1, #4
    3c24:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    3c26:	4c0b      	ldr	r4, [pc, #44]	; (3c54 <WIZCHIP_WRITE+0x5c>)
    3c28:	69a3      	ldr	r3, [r4, #24]
    3c2a:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    3c2c:	6923      	ldr	r3, [r4, #16]
    3c2e:	4798      	blx	r3
}
    3c30:	b002      	add	sp, #8
    3c32:	bd70      	pop	{r4, r5, r6, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    3c34:	4d07      	ldr	r5, [pc, #28]	; (3c54 <WIZCHIP_WRITE+0x5c>)
    3c36:	0c20      	lsrs	r0, r4, #16
    3c38:	b2c0      	uxtb	r0, r0
    3c3a:	6a2b      	ldr	r3, [r5, #32]
    3c3c:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    3c3e:	0a20      	lsrs	r0, r4, #8
    3c40:	b2c0      	uxtb	r0, r0
    3c42:	6a2b      	ldr	r3, [r5, #32]
    3c44:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    3c46:	b2e0      	uxtb	r0, r4
    3c48:	6a2b      	ldr	r3, [r5, #32]
    3c4a:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte(wb);
    3c4c:	6a2b      	ldr	r3, [r5, #32]
    3c4e:	0030      	movs	r0, r6
    3c50:	4798      	blx	r3
    3c52:	e7e8      	b.n	3c26 <WIZCHIP_WRITE+0x2e>
    3c54:	20000040 	.word	0x20000040

00003c58 <WIZCHIP_READ_BUF>:
         
void     WIZCHIP_READ_BUF (uint32_t AddrSel, uint8_t* pBuf, uint16_t len)
{
    3c58:	b5f0      	push	{r4, r5, r6, r7, lr}
    3c5a:	b083      	sub	sp, #12
    3c5c:	0004      	movs	r4, r0
    3c5e:	000f      	movs	r7, r1
    3c60:	0016      	movs	r6, r2
   uint8_t spi_data[3];
   uint16_t i;

   WIZCHIP_CRITICAL_ENTER();
    3c62:	4d1c      	ldr	r5, [pc, #112]	; (3cd4 <WIZCHIP_READ_BUF+0x7c>)
    3c64:	68eb      	ldr	r3, [r5, #12]
    3c66:	4798      	blx	r3
   WIZCHIP.CS._select();
    3c68:	696b      	ldr	r3, [r5, #20]
    3c6a:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_READ_ | _W5500_SPI_VDM_OP_);

   if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
    3c6c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    3c6e:	2b00      	cmp	r3, #0
    3c70:	d017      	beq.n	3ca2 <WIZCHIP_READ_BUF+0x4a>
    3c72:	4b18      	ldr	r3, [pc, #96]	; (3cd4 <WIZCHIP_READ_BUF+0x7c>)
    3c74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    3c76:	2b00      	cmp	r3, #0
    3c78:	d013      	beq.n	3ca2 <WIZCHIP_READ_BUF+0x4a>
		for(i = 0; i < len; i++)
		   pBuf[i] = WIZCHIP.IF.SPI._read_byte();
   }
   else																// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    3c7a:	0c22      	lsrs	r2, r4, #16
    3c7c:	a801      	add	r0, sp, #4
    3c7e:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    3c80:	0a22      	lsrs	r2, r4, #8
    3c82:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    3c84:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    3c86:	2103      	movs	r1, #3
    3c88:	4798      	blx	r3
		WIZCHIP.IF.SPI._read_burst(pBuf, len);
    3c8a:	4b12      	ldr	r3, [pc, #72]	; (3cd4 <WIZCHIP_READ_BUF+0x7c>)
    3c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    3c8e:	0031      	movs	r1, r6
    3c90:	0038      	movs	r0, r7
    3c92:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    3c94:	4c0f      	ldr	r4, [pc, #60]	; (3cd4 <WIZCHIP_READ_BUF+0x7c>)
    3c96:	69a3      	ldr	r3, [r4, #24]
    3c98:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    3c9a:	6923      	ldr	r3, [r4, #16]
    3c9c:	4798      	blx	r3
}
    3c9e:	b003      	add	sp, #12
    3ca0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    3ca2:	4d0c      	ldr	r5, [pc, #48]	; (3cd4 <WIZCHIP_READ_BUF+0x7c>)
    3ca4:	0c20      	lsrs	r0, r4, #16
    3ca6:	b2c0      	uxtb	r0, r0
    3ca8:	6a2b      	ldr	r3, [r5, #32]
    3caa:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    3cac:	0a20      	lsrs	r0, r4, #8
    3cae:	b2c0      	uxtb	r0, r0
    3cb0:	6a2b      	ldr	r3, [r5, #32]
    3cb2:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    3cb4:	6a2b      	ldr	r3, [r5, #32]
    3cb6:	b2e0      	uxtb	r0, r4
    3cb8:	4798      	blx	r3
		for(i = 0; i < len; i++)
    3cba:	2400      	movs	r4, #0
    3cbc:	e006      	b.n	3ccc <WIZCHIP_READ_BUF+0x74>
		   pBuf[i] = WIZCHIP.IF.SPI._read_byte();
    3cbe:	193d      	adds	r5, r7, r4
    3cc0:	4b04      	ldr	r3, [pc, #16]	; (3cd4 <WIZCHIP_READ_BUF+0x7c>)
    3cc2:	69db      	ldr	r3, [r3, #28]
    3cc4:	4798      	blx	r3
    3cc6:	7028      	strb	r0, [r5, #0]
		for(i = 0; i < len; i++)
    3cc8:	3401      	adds	r4, #1
    3cca:	b2a4      	uxth	r4, r4
    3ccc:	42b4      	cmp	r4, r6
    3cce:	d3f6      	bcc.n	3cbe <WIZCHIP_READ_BUF+0x66>
    3cd0:	e7e0      	b.n	3c94 <WIZCHIP_READ_BUF+0x3c>
    3cd2:	46c0      	nop			; (mov r8, r8)
    3cd4:	20000040 	.word	0x20000040

00003cd8 <WIZCHIP_WRITE_BUF>:

void     WIZCHIP_WRITE_BUF(uint32_t AddrSel, uint8_t* pBuf, uint16_t len)
{
    3cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3cda:	b083      	sub	sp, #12
    3cdc:	0004      	movs	r4, r0
    3cde:	000f      	movs	r7, r1
    3ce0:	0016      	movs	r6, r2
   uint8_t spi_data[3];
   uint16_t i;

   WIZCHIP_CRITICAL_ENTER();
    3ce2:	4d1a      	ldr	r5, [pc, #104]	; (3d4c <WIZCHIP_WRITE_BUF+0x74>)
    3ce4:	68eb      	ldr	r3, [r5, #12]
    3ce6:	4798      	blx	r3
   WIZCHIP.CS._select();
    3ce8:	696b      	ldr	r3, [r5, #20]
    3cea:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_WRITE_ | _W5500_SPI_VDM_OP_);
    3cec:	2004      	movs	r0, #4
    3cee:	4304      	orrs	r4, r0

   if(!WIZCHIP.IF.SPI._write_burst) 	// byte operation
    3cf0:	6aab      	ldr	r3, [r5, #40]	; 0x28
    3cf2:	2b00      	cmp	r3, #0
    3cf4:	d013      	beq.n	3d1e <WIZCHIP_WRITE_BUF+0x46>
		for(i = 0; i < len; i++)
			WIZCHIP.IF.SPI._write_byte(pBuf[i]);
   }
   else									// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    3cf6:	0c22      	lsrs	r2, r4, #16
    3cf8:	a801      	add	r0, sp, #4
    3cfa:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    3cfc:	0a22      	lsrs	r2, r4, #8
    3cfe:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    3d00:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    3d02:	2103      	movs	r1, #3
    3d04:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_burst(pBuf, len);
    3d06:	4b11      	ldr	r3, [pc, #68]	; (3d4c <WIZCHIP_WRITE_BUF+0x74>)
    3d08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    3d0a:	0031      	movs	r1, r6
    3d0c:	0038      	movs	r0, r7
    3d0e:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    3d10:	4c0e      	ldr	r4, [pc, #56]	; (3d4c <WIZCHIP_WRITE_BUF+0x74>)
    3d12:	69a3      	ldr	r3, [r4, #24]
    3d14:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    3d16:	6923      	ldr	r3, [r4, #16]
    3d18:	4798      	blx	r3
}
    3d1a:	b003      	add	sp, #12
    3d1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    3d1e:	4d0b      	ldr	r5, [pc, #44]	; (3d4c <WIZCHIP_WRITE_BUF+0x74>)
    3d20:	0c20      	lsrs	r0, r4, #16
    3d22:	b2c0      	uxtb	r0, r0
    3d24:	6a2b      	ldr	r3, [r5, #32]
    3d26:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    3d28:	0a20      	lsrs	r0, r4, #8
    3d2a:	b2c0      	uxtb	r0, r0
    3d2c:	6a2b      	ldr	r3, [r5, #32]
    3d2e:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    3d30:	6a2b      	ldr	r3, [r5, #32]
    3d32:	b2e0      	uxtb	r0, r4
    3d34:	4798      	blx	r3
		for(i = 0; i < len; i++)
    3d36:	2400      	movs	r4, #0
    3d38:	e005      	b.n	3d46 <WIZCHIP_WRITE_BUF+0x6e>
			WIZCHIP.IF.SPI._write_byte(pBuf[i]);
    3d3a:	4b04      	ldr	r3, [pc, #16]	; (3d4c <WIZCHIP_WRITE_BUF+0x74>)
    3d3c:	6a1b      	ldr	r3, [r3, #32]
    3d3e:	5d38      	ldrb	r0, [r7, r4]
    3d40:	4798      	blx	r3
		for(i = 0; i < len; i++)
    3d42:	3401      	adds	r4, #1
    3d44:	b2a4      	uxth	r4, r4
    3d46:	42b4      	cmp	r4, r6
    3d48:	d3f7      	bcc.n	3d3a <WIZCHIP_WRITE_BUF+0x62>
    3d4a:	e7e1      	b.n	3d10 <WIZCHIP_WRITE_BUF+0x38>
    3d4c:	20000040 	.word	0x20000040

00003d50 <getSn_TX_FSR>:


uint16_t getSn_TX_FSR(uint8_t sn)
{
    3d50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3d52:	46ce      	mov	lr, r9
    3d54:	4647      	mov	r7, r8
    3d56:	b580      	push	{r7, lr}
    3d58:	4680      	mov	r8, r0
   uint16_t val=0,val1=0;
    3d5a:	2600      	movs	r6, #0
    3d5c:	e001      	b.n	3d62 <getSn_TX_FSR+0x12>
      if (val1 != 0)
      {
        val = WIZCHIP_READ(Sn_TX_FSR(sn));
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
      }
   }while (val != val1);
    3d5e:	42a6      	cmp	r6, r4
    3d60:	d024      	beq.n	3dac <getSn_TX_FSR+0x5c>
      val1 = WIZCHIP_READ(Sn_TX_FSR(sn));
    3d62:	4643      	mov	r3, r8
    3d64:	009d      	lsls	r5, r3, #2
    3d66:	3501      	adds	r5, #1
    3d68:	00ed      	lsls	r5, r5, #3
    3d6a:	2380      	movs	r3, #128	; 0x80
    3d6c:	019b      	lsls	r3, r3, #6
    3d6e:	4699      	mov	r9, r3
    3d70:	44a9      	add	r9, r5
    3d72:	4648      	mov	r0, r9
    3d74:	4f10      	ldr	r7, [pc, #64]	; (3db8 <getSn_TX_FSR+0x68>)
    3d76:	47b8      	blx	r7
    3d78:	b284      	uxth	r4, r0
      val1 = (val1 << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
    3d7a:	0224      	lsls	r4, r4, #8
    3d7c:	b2a4      	uxth	r4, r4
    3d7e:	2384      	movs	r3, #132	; 0x84
    3d80:	019b      	lsls	r3, r3, #6
    3d82:	469c      	mov	ip, r3
    3d84:	4465      	add	r5, ip
    3d86:	0028      	movs	r0, r5
    3d88:	47b8      	blx	r7
    3d8a:	b280      	uxth	r0, r0
    3d8c:	1824      	adds	r4, r4, r0
    3d8e:	b2a4      	uxth	r4, r4
      if (val1 != 0)
    3d90:	2c00      	cmp	r4, #0
    3d92:	d0e4      	beq.n	3d5e <getSn_TX_FSR+0xe>
        val = WIZCHIP_READ(Sn_TX_FSR(sn));
    3d94:	4648      	mov	r0, r9
    3d96:	4f08      	ldr	r7, [pc, #32]	; (3db8 <getSn_TX_FSR+0x68>)
    3d98:	47b8      	blx	r7
    3d9a:	b280      	uxth	r0, r0
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
    3d9c:	0200      	lsls	r0, r0, #8
    3d9e:	b286      	uxth	r6, r0
    3da0:	0028      	movs	r0, r5
    3da2:	47b8      	blx	r7
    3da4:	b280      	uxth	r0, r0
    3da6:	1836      	adds	r6, r6, r0
    3da8:	b2b6      	uxth	r6, r6
    3daa:	e7d8      	b.n	3d5e <getSn_TX_FSR+0xe>
   return val;
}
    3dac:	0030      	movs	r0, r6
    3dae:	bc0c      	pop	{r2, r3}
    3db0:	4690      	mov	r8, r2
    3db2:	4699      	mov	r9, r3
    3db4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3db6:	46c0      	nop			; (mov r8, r8)
    3db8:	00003b95 	.word	0x00003b95

00003dbc <getSn_RX_RSR>:


uint16_t getSn_RX_RSR(uint8_t sn)
{
    3dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3dbe:	46ce      	mov	lr, r9
    3dc0:	4647      	mov	r7, r8
    3dc2:	b580      	push	{r7, lr}
    3dc4:	4680      	mov	r8, r0
   uint16_t val=0,val1=0;
    3dc6:	2600      	movs	r6, #0
    3dc8:	e001      	b.n	3dce <getSn_RX_RSR+0x12>
      if (val1 != 0)
      {
        val = WIZCHIP_READ(Sn_RX_RSR(sn));
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
      }
   }while (val != val1);
    3dca:	42a6      	cmp	r6, r4
    3dcc:	d024      	beq.n	3e18 <getSn_RX_RSR+0x5c>
      val1 = WIZCHIP_READ(Sn_RX_RSR(sn));
    3dce:	4643      	mov	r3, r8
    3dd0:	009d      	lsls	r5, r3, #2
    3dd2:	3501      	adds	r5, #1
    3dd4:	00ed      	lsls	r5, r5, #3
    3dd6:	2398      	movs	r3, #152	; 0x98
    3dd8:	019b      	lsls	r3, r3, #6
    3dda:	4699      	mov	r9, r3
    3ddc:	44a9      	add	r9, r5
    3dde:	4648      	mov	r0, r9
    3de0:	4f10      	ldr	r7, [pc, #64]	; (3e24 <getSn_RX_RSR+0x68>)
    3de2:	47b8      	blx	r7
    3de4:	b284      	uxth	r4, r0
      val1 = (val1 << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
    3de6:	0224      	lsls	r4, r4, #8
    3de8:	b2a4      	uxth	r4, r4
    3dea:	239c      	movs	r3, #156	; 0x9c
    3dec:	019b      	lsls	r3, r3, #6
    3dee:	469c      	mov	ip, r3
    3df0:	4465      	add	r5, ip
    3df2:	0028      	movs	r0, r5
    3df4:	47b8      	blx	r7
    3df6:	b280      	uxth	r0, r0
    3df8:	1824      	adds	r4, r4, r0
    3dfa:	b2a4      	uxth	r4, r4
      if (val1 != 0)
    3dfc:	2c00      	cmp	r4, #0
    3dfe:	d0e4      	beq.n	3dca <getSn_RX_RSR+0xe>
        val = WIZCHIP_READ(Sn_RX_RSR(sn));
    3e00:	4648      	mov	r0, r9
    3e02:	4f08      	ldr	r7, [pc, #32]	; (3e24 <getSn_RX_RSR+0x68>)
    3e04:	47b8      	blx	r7
    3e06:	b280      	uxth	r0, r0
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
    3e08:	0200      	lsls	r0, r0, #8
    3e0a:	b286      	uxth	r6, r0
    3e0c:	0028      	movs	r0, r5
    3e0e:	47b8      	blx	r7
    3e10:	b280      	uxth	r0, r0
    3e12:	1836      	adds	r6, r6, r0
    3e14:	b2b6      	uxth	r6, r6
    3e16:	e7d8      	b.n	3dca <getSn_RX_RSR+0xe>
   return val;
}
    3e18:	0030      	movs	r0, r6
    3e1a:	bc0c      	pop	{r2, r3}
    3e1c:	4690      	mov	r8, r2
    3e1e:	4699      	mov	r9, r3
    3e20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3e22:	46c0      	nop			; (mov r8, r8)
    3e24:	00003b95 	.word	0x00003b95

00003e28 <wiz_send_data>:

void wiz_send_data(uint8_t sn, uint8_t *wizdata, uint16_t len)
{
    3e28:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e2a:	46d6      	mov	lr, sl
    3e2c:	b500      	push	{lr}
    3e2e:	b082      	sub	sp, #8
    3e30:	9100      	str	r1, [sp, #0]
    3e32:	1e14      	subs	r4, r2, #0
   uint16_t ptr = 0;
   uint32_t addrsel = 0;

   if(len == 0)  return;
    3e34:	d103      	bne.n	3e3e <wiz_send_data+0x16>
   //
   WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
   
   ptr += len;
   setSn_TX_WR(sn,ptr);
}
    3e36:	b002      	add	sp, #8
    3e38:	bc04      	pop	{r2}
    3e3a:	4692      	mov	sl, r2
    3e3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   ptr = getSn_TX_WR(sn);
    3e3e:	0086      	lsls	r6, r0, #2
    3e40:	1c75      	adds	r5, r6, #1
    3e42:	00ed      	lsls	r5, r5, #3
    3e44:	2390      	movs	r3, #144	; 0x90
    3e46:	019b      	lsls	r3, r3, #6
    3e48:	469c      	mov	ip, r3
    3e4a:	44ac      	add	ip, r5
    3e4c:	4663      	mov	r3, ip
    3e4e:	9301      	str	r3, [sp, #4]
    3e50:	4660      	mov	r0, ip
    3e52:	4a10      	ldr	r2, [pc, #64]	; (3e94 <wiz_send_data+0x6c>)
    3e54:	4692      	mov	sl, r2
    3e56:	4790      	blx	r2
    3e58:	b280      	uxth	r0, r0
    3e5a:	0200      	lsls	r0, r0, #8
    3e5c:	b287      	uxth	r7, r0
    3e5e:	2294      	movs	r2, #148	; 0x94
    3e60:	0192      	lsls	r2, r2, #6
    3e62:	4694      	mov	ip, r2
    3e64:	4465      	add	r5, ip
    3e66:	0028      	movs	r0, r5
    3e68:	47d0      	blx	sl
    3e6a:	b280      	uxth	r0, r0
    3e6c:	1838      	adds	r0, r7, r0
    3e6e:	b287      	uxth	r7, r0
   addrsel = ((uint32_t)ptr << 8) + (WIZCHIP_TXBUF_BLOCK(sn) << 3);
    3e70:	023b      	lsls	r3, r7, #8
    3e72:	1cb0      	adds	r0, r6, #2
    3e74:	00c0      	lsls	r0, r0, #3
    3e76:	1818      	adds	r0, r3, r0
   WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
    3e78:	0022      	movs	r2, r4
    3e7a:	9900      	ldr	r1, [sp, #0]
    3e7c:	4b06      	ldr	r3, [pc, #24]	; (3e98 <wiz_send_data+0x70>)
    3e7e:	4798      	blx	r3
   ptr += len;
    3e80:	19e4      	adds	r4, r4, r7
    3e82:	b2a4      	uxth	r4, r4
   setSn_TX_WR(sn,ptr);
    3e84:	0a21      	lsrs	r1, r4, #8
    3e86:	9801      	ldr	r0, [sp, #4]
    3e88:	4e04      	ldr	r6, [pc, #16]	; (3e9c <wiz_send_data+0x74>)
    3e8a:	47b0      	blx	r6
    3e8c:	b2e1      	uxtb	r1, r4
    3e8e:	0028      	movs	r0, r5
    3e90:	47b0      	blx	r6
    3e92:	e7d0      	b.n	3e36 <wiz_send_data+0xe>
    3e94:	00003b95 	.word	0x00003b95
    3e98:	00003cd9 	.word	0x00003cd9
    3e9c:	00003bf9 	.word	0x00003bf9

00003ea0 <wiz_recv_data>:

void wiz_recv_data(uint8_t sn, uint8_t *wizdata, uint16_t len)
{
    3ea0:	b5f0      	push	{r4, r5, r6, r7, lr}
    3ea2:	46d6      	mov	lr, sl
    3ea4:	b500      	push	{lr}
    3ea6:	b082      	sub	sp, #8
    3ea8:	9100      	str	r1, [sp, #0]
    3eaa:	1e14      	subs	r4, r2, #0
   uint16_t ptr = 0;
   uint32_t addrsel = 0;
   
   if(len == 0) return;
    3eac:	d103      	bne.n	3eb6 <wiz_recv_data+0x16>
   //
   WIZCHIP_READ_BUF(addrsel, wizdata, len);
   ptr += len;
   
   setSn_RX_RD(sn,ptr);
}
    3eae:	b002      	add	sp, #8
    3eb0:	bc04      	pop	{r2}
    3eb2:	4692      	mov	sl, r2
    3eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   ptr = getSn_RX_RD(sn);
    3eb6:	0086      	lsls	r6, r0, #2
    3eb8:	1c75      	adds	r5, r6, #1
    3eba:	00ed      	lsls	r5, r5, #3
    3ebc:	23a0      	movs	r3, #160	; 0xa0
    3ebe:	019b      	lsls	r3, r3, #6
    3ec0:	469c      	mov	ip, r3
    3ec2:	44ac      	add	ip, r5
    3ec4:	4663      	mov	r3, ip
    3ec6:	9301      	str	r3, [sp, #4]
    3ec8:	4660      	mov	r0, ip
    3eca:	4a10      	ldr	r2, [pc, #64]	; (3f0c <wiz_recv_data+0x6c>)
    3ecc:	4692      	mov	sl, r2
    3ece:	4790      	blx	r2
    3ed0:	b280      	uxth	r0, r0
    3ed2:	0200      	lsls	r0, r0, #8
    3ed4:	b287      	uxth	r7, r0
    3ed6:	22a4      	movs	r2, #164	; 0xa4
    3ed8:	0192      	lsls	r2, r2, #6
    3eda:	4694      	mov	ip, r2
    3edc:	4465      	add	r5, ip
    3ede:	0028      	movs	r0, r5
    3ee0:	47d0      	blx	sl
    3ee2:	b280      	uxth	r0, r0
    3ee4:	1838      	adds	r0, r7, r0
    3ee6:	b287      	uxth	r7, r0
   addrsel = ((uint32_t)ptr << 8) + (WIZCHIP_RXBUF_BLOCK(sn) << 3);
    3ee8:	023b      	lsls	r3, r7, #8
    3eea:	1cf0      	adds	r0, r6, #3
    3eec:	00c0      	lsls	r0, r0, #3
    3eee:	1818      	adds	r0, r3, r0
   WIZCHIP_READ_BUF(addrsel, wizdata, len);
    3ef0:	0022      	movs	r2, r4
    3ef2:	9900      	ldr	r1, [sp, #0]
    3ef4:	4b06      	ldr	r3, [pc, #24]	; (3f10 <wiz_recv_data+0x70>)
    3ef6:	4798      	blx	r3
   ptr += len;
    3ef8:	19e4      	adds	r4, r4, r7
    3efa:	b2a4      	uxth	r4, r4
   setSn_RX_RD(sn,ptr);
    3efc:	0a21      	lsrs	r1, r4, #8
    3efe:	9801      	ldr	r0, [sp, #4]
    3f00:	4e04      	ldr	r6, [pc, #16]	; (3f14 <wiz_recv_data+0x74>)
    3f02:	47b0      	blx	r6
    3f04:	b2e1      	uxtb	r1, r4
    3f06:	0028      	movs	r0, r5
    3f08:	47b0      	blx	r6
    3f0a:	e7d0      	b.n	3eae <wiz_recv_data+0xe>
    3f0c:	00003b95 	.word	0x00003b95
    3f10:	00003c59 	.word	0x00003c59
    3f14:	00003bf9 	.word	0x00003bf9

00003f18 <wiz_recv_ignore>:


void wiz_recv_ignore(uint8_t sn, uint16_t len)
{
    3f18:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f1a:	b083      	sub	sp, #12
    3f1c:	000c      	movs	r4, r1
   uint16_t ptr = 0;

   ptr = getSn_RX_RD(sn);
    3f1e:	0087      	lsls	r7, r0, #2
    3f20:	3701      	adds	r7, #1
    3f22:	00ff      	lsls	r7, r7, #3
    3f24:	23a0      	movs	r3, #160	; 0xa0
    3f26:	019b      	lsls	r3, r3, #6
    3f28:	469c      	mov	ip, r3
    3f2a:	44bc      	add	ip, r7
    3f2c:	4663      	mov	r3, ip
    3f2e:	9301      	str	r3, [sp, #4]
    3f30:	4660      	mov	r0, ip
    3f32:	4e0c      	ldr	r6, [pc, #48]	; (3f64 <wiz_recv_ignore+0x4c>)
    3f34:	47b0      	blx	r6
    3f36:	b280      	uxth	r0, r0
    3f38:	0200      	lsls	r0, r0, #8
    3f3a:	b285      	uxth	r5, r0
    3f3c:	22a4      	movs	r2, #164	; 0xa4
    3f3e:	0192      	lsls	r2, r2, #6
    3f40:	4694      	mov	ip, r2
    3f42:	4467      	add	r7, ip
    3f44:	0038      	movs	r0, r7
    3f46:	47b0      	blx	r6
    3f48:	b280      	uxth	r0, r0
    3f4a:	182d      	adds	r5, r5, r0
    3f4c:	b2ad      	uxth	r5, r5
   ptr += len;
    3f4e:	192c      	adds	r4, r5, r4
    3f50:	b2a4      	uxth	r4, r4
   setSn_RX_RD(sn,ptr);
    3f52:	0a21      	lsrs	r1, r4, #8
    3f54:	9801      	ldr	r0, [sp, #4]
    3f56:	4d04      	ldr	r5, [pc, #16]	; (3f68 <wiz_recv_ignore+0x50>)
    3f58:	47a8      	blx	r5
    3f5a:	b2e1      	uxtb	r1, r4
    3f5c:	0038      	movs	r0, r7
    3f5e:	47a8      	blx	r5
}
    3f60:	b003      	add	sp, #12
    3f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3f64:	00003b95 	.word	0x00003b95
    3f68:	00003bf9 	.word	0x00003bf9

00003f6c <wizchip_cris_enter>:
 * @brief Default function to enable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_enter(void)           {};
void 	  wizchip_cris_enter(void)           {}
    3f6c:	4770      	bx	lr

00003f6e <wizchip_cris_exit>:
 * @brief Default function to disable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_exit(void)          {};
void 	  wizchip_cris_exit(void)          {}
    3f6e:	4770      	bx	lr

00003f70 <wizchip_cs_select>:
 * @brief Default function to select chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_select(void)            {};
void 	wizchip_cs_select(void)            {}
    3f70:	4770      	bx	lr

00003f72 <wizchip_cs_deselect>:
 * @brief Default function to deselect chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_deselect(void)          {};
void 	wizchip_cs_deselect(void)          {}
    3f72:	4770      	bx	lr

00003f74 <wizchip_bus_readdata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
 //M20150601 : Rename the function for integrating with W5300
//uint8_t wizchip_bus_readbyte(uint32_t AddrSel) { return * ((volatile uint8_t *)((ptrdiff_t) AddrSel)); }
iodata_t wizchip_bus_readdata(uint32_t AddrSel) { return * ((volatile iodata_t *)((ptrdiff_t) AddrSel)); }
    3f74:	7800      	ldrb	r0, [r0, #0]
    3f76:	b2c0      	uxtb	r0, r0
    3f78:	4770      	bx	lr

00003f7a <wizchip_bus_writedata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//M20150601 : Rename the function for integrating with W5300
//void 	wizchip_bus_writebyte(uint32_t AddrSel, uint8_t wb)  { *((volatile uint8_t*)((ptrdiff_t)AddrSel)) = wb; }
void 	wizchip_bus_writedata(uint32_t AddrSel, iodata_t wb)  { *((volatile iodata_t*)((ptrdiff_t)AddrSel)) = wb; }
    3f7a:	7001      	strb	r1, [r0, #0]
    3f7c:	4770      	bx	lr

00003f7e <wizchip_spi_readbyte>:
 * @brief Default function to read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//uint8_t wizchip_spi_readbyte(void)        {return 0;};
uint8_t wizchip_spi_readbyte(void)        {return 0;}
    3f7e:	2000      	movs	r0, #0
    3f80:	4770      	bx	lr

00003f82 <wizchip_spi_writebyte>:
 * @brief Default function to write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writebyte(uint8_t wb) {};
void 	wizchip_spi_writebyte(uint8_t wb) {}
    3f82:	4770      	bx	lr

00003f84 <wizchip_spi_readburst>:
 * @brief Default function to burst read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_readburst(uint8_t* pBuf, uint16_t len) 	{}; 
void 	wizchip_spi_readburst(uint8_t* pBuf, uint16_t len) 	{}
    3f84:	4770      	bx	lr

00003f86 <wizchip_spi_writeburst>:
 * @brief Default function to burst write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writeburst(uint8_t* pBuf, uint16_t len) {};
void 	wizchip_spi_writeburst(uint8_t* pBuf, uint16_t len) {}
    3f86:	4770      	bx	lr

00003f88 <reg_wizchip_cs_cbfunc>:
   }
}

void reg_wizchip_cs_cbfunc(void(*cs_sel)(void), void(*cs_desel)(void))
{
   if(!cs_sel || !cs_desel)
    3f88:	2800      	cmp	r0, #0
    3f8a:	d005      	beq.n	3f98 <reg_wizchip_cs_cbfunc+0x10>
    3f8c:	2900      	cmp	r1, #0
    3f8e:	d003      	beq.n	3f98 <reg_wizchip_cs_cbfunc+0x10>
      WIZCHIP.CS._select   = wizchip_cs_select;
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
   }
   else
   {
      WIZCHIP.CS._select   = cs_sel;
    3f90:	4b04      	ldr	r3, [pc, #16]	; (3fa4 <reg_wizchip_cs_cbfunc+0x1c>)
    3f92:	6158      	str	r0, [r3, #20]
      WIZCHIP.CS._deselect = cs_desel;
    3f94:	6199      	str	r1, [r3, #24]
   }
}
    3f96:	4770      	bx	lr
      WIZCHIP.CS._select   = wizchip_cs_select;
    3f98:	4b02      	ldr	r3, [pc, #8]	; (3fa4 <reg_wizchip_cs_cbfunc+0x1c>)
    3f9a:	4a03      	ldr	r2, [pc, #12]	; (3fa8 <reg_wizchip_cs_cbfunc+0x20>)
    3f9c:	615a      	str	r2, [r3, #20]
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
    3f9e:	4a03      	ldr	r2, [pc, #12]	; (3fac <reg_wizchip_cs_cbfunc+0x24>)
    3fa0:	619a      	str	r2, [r3, #24]
    3fa2:	e7f8      	b.n	3f96 <reg_wizchip_cs_cbfunc+0xe>
    3fa4:	20000040 	.word	0x20000040
    3fa8:	00003f71 	.word	0x00003f71
    3fac:	00003f73 	.word	0x00003f73

00003fb0 <reg_wizchip_spi_cbfunc>:
   }
}

void reg_wizchip_spi_cbfunc(uint8_t (*spi_rb)(void), void (*spi_wb)(uint8_t wb))
{
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
    3fb0:	4b08      	ldr	r3, [pc, #32]	; (3fd4 <reg_wizchip_spi_cbfunc+0x24>)
    3fb2:	881b      	ldrh	r3, [r3, #0]
    3fb4:	059b      	lsls	r3, r3, #22
    3fb6:	d5fb      	bpl.n	3fb0 <reg_wizchip_spi_cbfunc>
   
   if(!spi_rb || !spi_wb)
    3fb8:	2800      	cmp	r0, #0
    3fba:	d005      	beq.n	3fc8 <reg_wizchip_spi_cbfunc+0x18>
    3fbc:	2900      	cmp	r1, #0
    3fbe:	d003      	beq.n	3fc8 <reg_wizchip_spi_cbfunc+0x18>
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
   }
   else
   {
      WIZCHIP.IF.SPI._read_byte   = spi_rb;
    3fc0:	4b04      	ldr	r3, [pc, #16]	; (3fd4 <reg_wizchip_spi_cbfunc+0x24>)
    3fc2:	61d8      	str	r0, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = spi_wb;
    3fc4:	6219      	str	r1, [r3, #32]
   }
}
    3fc6:	4770      	bx	lr
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
    3fc8:	4b02      	ldr	r3, [pc, #8]	; (3fd4 <reg_wizchip_spi_cbfunc+0x24>)
    3fca:	4a03      	ldr	r2, [pc, #12]	; (3fd8 <reg_wizchip_spi_cbfunc+0x28>)
    3fcc:	61da      	str	r2, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
    3fce:	4a03      	ldr	r2, [pc, #12]	; (3fdc <reg_wizchip_spi_cbfunc+0x2c>)
    3fd0:	621a      	str	r2, [r3, #32]
    3fd2:	e7f8      	b.n	3fc6 <reg_wizchip_spi_cbfunc+0x16>
    3fd4:	20000040 	.word	0x20000040
    3fd8:	00003f7f 	.word	0x00003f7f
    3fdc:	00003f83 	.word	0x00003f83

00003fe0 <reg_wizchip_spiburst_cbfunc>:

// 20140626 Eric Added for SPI burst operations
void reg_wizchip_spiburst_cbfunc(void (*spi_rb)(uint8_t* pBuf, uint16_t len), void (*spi_wb)(uint8_t* pBuf, uint16_t len))
{
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
    3fe0:	4b08      	ldr	r3, [pc, #32]	; (4004 <reg_wizchip_spiburst_cbfunc+0x24>)
    3fe2:	881b      	ldrh	r3, [r3, #0]
    3fe4:	059b      	lsls	r3, r3, #22
    3fe6:	d5fb      	bpl.n	3fe0 <reg_wizchip_spiburst_cbfunc>

   if(!spi_rb || !spi_wb)
    3fe8:	2800      	cmp	r0, #0
    3fea:	d005      	beq.n	3ff8 <reg_wizchip_spiburst_cbfunc+0x18>
    3fec:	2900      	cmp	r1, #0
    3fee:	d003      	beq.n	3ff8 <reg_wizchip_spiburst_cbfunc+0x18>
      WIZCHIP.IF.SPI._read_burst   = wizchip_spi_readburst;
      WIZCHIP.IF.SPI._write_burst  = wizchip_spi_writeburst;
   }
   else
   {
      WIZCHIP.IF.SPI._read_burst   = spi_rb;
    3ff0:	4b04      	ldr	r3, [pc, #16]	; (4004 <reg_wizchip_spiburst_cbfunc+0x24>)
    3ff2:	6258      	str	r0, [r3, #36]	; 0x24
      WIZCHIP.IF.SPI._write_burst  = spi_wb;
    3ff4:	6299      	str	r1, [r3, #40]	; 0x28
   }
}
    3ff6:	4770      	bx	lr
      WIZCHIP.IF.SPI._read_burst   = wizchip_spi_readburst;
    3ff8:	4b02      	ldr	r3, [pc, #8]	; (4004 <reg_wizchip_spiburst_cbfunc+0x24>)
    3ffa:	4a03      	ldr	r2, [pc, #12]	; (4008 <reg_wizchip_spiburst_cbfunc+0x28>)
    3ffc:	625a      	str	r2, [r3, #36]	; 0x24
      WIZCHIP.IF.SPI._write_burst  = wizchip_spi_writeburst;
    3ffe:	4a03      	ldr	r2, [pc, #12]	; (400c <reg_wizchip_spiburst_cbfunc+0x2c>)
    4000:	629a      	str	r2, [r3, #40]	; 0x28
    4002:	e7f8      	b.n	3ff6 <reg_wizchip_spiburst_cbfunc+0x16>
    4004:	20000040 	.word	0x20000040
    4008:	00003f85 	.word	0x00003f85
    400c:	00003f87 	.word	0x00003f87

00004010 <wizchip_sw_reset>:
   }
   return 0;
}

void wizchip_sw_reset(void)
{
    4010:	b5f0      	push	{r4, r5, r6, r7, lr}
    4012:	b087      	sub	sp, #28
#if _WIZCHIP_IO_MODE_  == _WIZCHIP_IO_MODE_BUS_INDIR_
   uint16_t mr = (uint16_t)getMR();
   setMR(mr | MR_IND);
#endif
//
   getSHAR(mac);
    4014:	2206      	movs	r2, #6
    4016:	a901      	add	r1, sp, #4
    4018:	2090      	movs	r0, #144	; 0x90
    401a:	0100      	lsls	r0, r0, #4
    401c:	4c17      	ldr	r4, [pc, #92]	; (407c <wizchip_sw_reset+0x6c>)
    401e:	47a0      	blx	r4
   getGAR(gw);  getSUBR(sn);  getSIPR(sip);
    4020:	2780      	movs	r7, #128	; 0x80
    4022:	007f      	lsls	r7, r7, #1
    4024:	2204      	movs	r2, #4
    4026:	a905      	add	r1, sp, #20
    4028:	0038      	movs	r0, r7
    402a:	47a0      	blx	r4
    402c:	26a0      	movs	r6, #160	; 0xa0
    402e:	00f6      	lsls	r6, r6, #3
    4030:	2204      	movs	r2, #4
    4032:	a904      	add	r1, sp, #16
    4034:	0030      	movs	r0, r6
    4036:	47a0      	blx	r4
    4038:	25f0      	movs	r5, #240	; 0xf0
    403a:	012d      	lsls	r5, r5, #4
    403c:	2204      	movs	r2, #4
    403e:	a903      	add	r1, sp, #12
    4040:	0028      	movs	r0, r5
    4042:	47a0      	blx	r4
   setMR(MR_RST);
    4044:	2180      	movs	r1, #128	; 0x80
    4046:	2000      	movs	r0, #0
    4048:	4b0d      	ldr	r3, [pc, #52]	; (4080 <wizchip_sw_reset+0x70>)
    404a:	4798      	blx	r3
   getMR(); // for delay
    404c:	2000      	movs	r0, #0
    404e:	4b0d      	ldr	r3, [pc, #52]	; (4084 <wizchip_sw_reset+0x74>)
    4050:	4798      	blx	r3
//A2015051 : For indirect bus mode 
#if _WIZCHIP_IO_MODE_  == _WIZCHIP_IO_MODE_BUS_INDIR_
   setMR(mr | MR_IND);
#endif
//
   setSHAR(mac);
    4052:	2206      	movs	r2, #6
    4054:	a901      	add	r1, sp, #4
    4056:	2090      	movs	r0, #144	; 0x90
    4058:	0100      	lsls	r0, r0, #4
    405a:	4c0b      	ldr	r4, [pc, #44]	; (4088 <wizchip_sw_reset+0x78>)
    405c:	47a0      	blx	r4
   setGAR(gw);
    405e:	2204      	movs	r2, #4
    4060:	a905      	add	r1, sp, #20
    4062:	0038      	movs	r0, r7
    4064:	47a0      	blx	r4
   setSUBR(sn);
    4066:	2204      	movs	r2, #4
    4068:	a904      	add	r1, sp, #16
    406a:	0030      	movs	r0, r6
    406c:	47a0      	blx	r4
   setSIPR(sip);
    406e:	2204      	movs	r2, #4
    4070:	a903      	add	r1, sp, #12
    4072:	0028      	movs	r0, r5
    4074:	47a0      	blx	r4
}
    4076:	b007      	add	sp, #28
    4078:	bdf0      	pop	{r4, r5, r6, r7, pc}
    407a:	46c0      	nop			; (mov r8, r8)
    407c:	00003c59 	.word	0x00003c59
    4080:	00003bf9 	.word	0x00003bf9
    4084:	00003b95 	.word	0x00003b95
    4088:	00003cd9 	.word	0x00003cd9

0000408c <wizchip_init>:

int8_t wizchip_init(uint8_t* txsize, uint8_t* rxsize)
{
    408c:	b570      	push	{r4, r5, r6, lr}
    408e:	0006      	movs	r6, r0
    4090:	000d      	movs	r5, r1
   int8_t i;
#if _WIZCHIP_ < W5200
   int8_t j;
#endif
   int8_t tmp = 0;
   wizchip_sw_reset();
    4092:	4b24      	ldr	r3, [pc, #144]	; (4124 <wizchip_init+0x98>)
    4094:	4798      	blx	r3
   if(txsize)
    4096:	2e00      	cmp	r6, #0
    4098:	d01b      	beq.n	40d2 <wizchip_init+0x46>
    409a:	2200      	movs	r2, #0
    409c:	2300      	movs	r3, #0
			tmp += txsize[i];
			if(tmp > 128) return -1;
		}
		if(tmp % 8) return -1;
#else
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    409e:	2b07      	cmp	r3, #7
    40a0:	dc07      	bgt.n	40b2 <wizchip_init+0x26>
		{
			tmp += txsize[i];
    40a2:	5cf1      	ldrb	r1, [r6, r3]
    40a4:	188a      	adds	r2, r1, r2
    40a6:	b252      	sxtb	r2, r2

#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100 and w5100s
			if(tmp > 8) return -1;
#else
			if(tmp > 16) return -1;
    40a8:	2a10      	cmp	r2, #16
    40aa:	dc34      	bgt.n	4116 <wizchip_init+0x8a>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    40ac:	3301      	adds	r3, #1
    40ae:	b25b      	sxtb	r3, r3
    40b0:	e7f5      	b.n	409e <wizchip_init+0x12>
    40b2:	2400      	movs	r4, #0
    40b4:	e00b      	b.n	40ce <wizchip_init+0x42>
#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100
			j = 0;
			while((txsize[i] >> j != 1)&&(txsize[i] !=0)){j++;}
			setSn_TXBUF_SIZE(i, j);
#else
			setSn_TXBUF_SIZE(i, txsize[i]);
    40b6:	00a0      	lsls	r0, r4, #2
    40b8:	3001      	adds	r0, #1
    40ba:	00c0      	lsls	r0, r0, #3
    40bc:	23f8      	movs	r3, #248	; 0xf8
    40be:	015b      	lsls	r3, r3, #5
    40c0:	469c      	mov	ip, r3
    40c2:	4460      	add	r0, ip
    40c4:	5d31      	ldrb	r1, [r6, r4]
    40c6:	4b18      	ldr	r3, [pc, #96]	; (4128 <wizchip_init+0x9c>)
    40c8:	4798      	blx	r3
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    40ca:	3401      	adds	r4, #1
    40cc:	b264      	sxtb	r4, r4
    40ce:	2c07      	cmp	r4, #7
    40d0:	ddf1      	ble.n	40b6 <wizchip_init+0x2a>
#endif
		}	
   }

   if(rxsize)
    40d2:	2d00      	cmp	r5, #0
    40d4:	d00b      	beq.n	40ee <wizchip_init+0x62>
    40d6:	2200      	movs	r2, #0
    40d8:	2300      	movs	r3, #0
			tmp += rxsize[i];
			if(tmp > 128) return -1;
		}
		if(tmp % 8) return -1;
#else
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    40da:	2b07      	cmp	r3, #7
    40dc:	dc09      	bgt.n	40f2 <wizchip_init+0x66>
		{
			tmp += rxsize[i];
    40de:	5ce9      	ldrb	r1, [r5, r3]
    40e0:	188a      	adds	r2, r1, r2
    40e2:	b252      	sxtb	r2, r2
#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100 and w5100s
			if(tmp > 8) return -1;
#else
			if(tmp > 16) return -1;
    40e4:	2a10      	cmp	r2, #16
    40e6:	dc19      	bgt.n	411c <wizchip_init+0x90>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    40e8:	3301      	adds	r3, #1
    40ea:	b25b      	sxtb	r3, r3
    40ec:	e7f5      	b.n	40da <wizchip_init+0x4e>
#else
			setSn_RXBUF_SIZE(i, rxsize[i]);
#endif
		}
   }
   return 0;
    40ee:	2000      	movs	r0, #0
    40f0:	e010      	b.n	4114 <wizchip_init+0x88>
    40f2:	2400      	movs	r4, #0
    40f4:	e00b      	b.n	410e <wizchip_init+0x82>
			setSn_RXBUF_SIZE(i, rxsize[i]);
    40f6:	00a0      	lsls	r0, r4, #2
    40f8:	3001      	adds	r0, #1
    40fa:	00c0      	lsls	r0, r0, #3
    40fc:	23f0      	movs	r3, #240	; 0xf0
    40fe:	015b      	lsls	r3, r3, #5
    4100:	469c      	mov	ip, r3
    4102:	4460      	add	r0, ip
    4104:	5d29      	ldrb	r1, [r5, r4]
    4106:	4b08      	ldr	r3, [pc, #32]	; (4128 <wizchip_init+0x9c>)
    4108:	4798      	blx	r3
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    410a:	3401      	adds	r4, #1
    410c:	b264      	sxtb	r4, r4
    410e:	2c07      	cmp	r4, #7
    4110:	ddf1      	ble.n	40f6 <wizchip_init+0x6a>
   return 0;
    4112:	2000      	movs	r0, #0
}
    4114:	bd70      	pop	{r4, r5, r6, pc}
			if(tmp > 16) return -1;
    4116:	2001      	movs	r0, #1
    4118:	4240      	negs	r0, r0
    411a:	e7fb      	b.n	4114 <wizchip_init+0x88>
			if(tmp > 16) return -1;
    411c:	2001      	movs	r0, #1
    411e:	4240      	negs	r0, r0
    4120:	e7f8      	b.n	4114 <wizchip_init+0x88>
    4122:	46c0      	nop			; (mov r8, r8)
    4124:	00004011 	.word	0x00004011
    4128:	00003bf9 	.word	0x00003bf9

0000412c <wizphy_reset>:
}

#endif
#if _WIZCHIP_ == W5500
void wizphy_reset(void)
{
    412c:	b570      	push	{r4, r5, r6, lr}
   uint8_t tmp = getPHYCFGR();
    412e:	24b8      	movs	r4, #184	; 0xb8
    4130:	01a4      	lsls	r4, r4, #6
    4132:	0020      	movs	r0, r4
    4134:	4e07      	ldr	r6, [pc, #28]	; (4154 <wizphy_reset+0x28>)
    4136:	47b0      	blx	r6
   tmp &= PHYCFGR_RST;
    4138:	217f      	movs	r1, #127	; 0x7f
    413a:	4001      	ands	r1, r0
   setPHYCFGR(tmp);
    413c:	0020      	movs	r0, r4
    413e:	4d06      	ldr	r5, [pc, #24]	; (4158 <wizphy_reset+0x2c>)
    4140:	47a8      	blx	r5
   tmp = getPHYCFGR();
    4142:	0020      	movs	r0, r4
    4144:	47b0      	blx	r6
   tmp |= ~PHYCFGR_RST;
    4146:	2180      	movs	r1, #128	; 0x80
    4148:	4249      	negs	r1, r1
    414a:	4301      	orrs	r1, r0
    414c:	b2c9      	uxtb	r1, r1
   setPHYCFGR(tmp);
    414e:	0020      	movs	r0, r4
    4150:	47a8      	blx	r5
}
    4152:	bd70      	pop	{r4, r5, r6, pc}
    4154:	00003b95 	.word	0x00003b95
    4158:	00003bf9 	.word	0x00003bf9

0000415c <wizchip_setnetinfo>:
}
#endif


void wizchip_setnetinfo(wiz_NetInfo* pnetinfo)
{
    415c:	b570      	push	{r4, r5, r6, lr}
    415e:	0004      	movs	r4, r0
   setSHAR(pnetinfo->mac);
    4160:	2206      	movs	r2, #6
    4162:	0001      	movs	r1, r0
    4164:	2090      	movs	r0, #144	; 0x90
    4166:	0100      	lsls	r0, r0, #4
    4168:	4d0f      	ldr	r5, [pc, #60]	; (41a8 <wizchip_setnetinfo+0x4c>)
    416a:	47a8      	blx	r5
   setGAR(pnetinfo->gw);
    416c:	0021      	movs	r1, r4
    416e:	310e      	adds	r1, #14
    4170:	2204      	movs	r2, #4
    4172:	2080      	movs	r0, #128	; 0x80
    4174:	0040      	lsls	r0, r0, #1
    4176:	47a8      	blx	r5
   setSUBR(pnetinfo->sn);
    4178:	0021      	movs	r1, r4
    417a:	310a      	adds	r1, #10
    417c:	2204      	movs	r2, #4
    417e:	20a0      	movs	r0, #160	; 0xa0
    4180:	00c0      	lsls	r0, r0, #3
    4182:	47a8      	blx	r5
   setSIPR(pnetinfo->ip);
    4184:	1da1      	adds	r1, r4, #6
    4186:	2204      	movs	r2, #4
    4188:	20f0      	movs	r0, #240	; 0xf0
    418a:	0100      	lsls	r0, r0, #4
    418c:	47a8      	blx	r5
   _DNS_[0] = pnetinfo->dns[0];
    418e:	7ca2      	ldrb	r2, [r4, #18]
    4190:	4b06      	ldr	r3, [pc, #24]	; (41ac <wizchip_setnetinfo+0x50>)
    4192:	701a      	strb	r2, [r3, #0]
   _DNS_[1] = pnetinfo->dns[1];
    4194:	7ce2      	ldrb	r2, [r4, #19]
    4196:	705a      	strb	r2, [r3, #1]
   _DNS_[2] = pnetinfo->dns[2];
    4198:	7d22      	ldrb	r2, [r4, #20]
    419a:	709a      	strb	r2, [r3, #2]
   _DNS_[3] = pnetinfo->dns[3];
    419c:	7d62      	ldrb	r2, [r4, #21]
    419e:	70da      	strb	r2, [r3, #3]
   _DHCP_   = pnetinfo->dhcp;
    41a0:	7da2      	ldrb	r2, [r4, #22]
    41a2:	4b03      	ldr	r3, [pc, #12]	; (41b0 <wizchip_setnetinfo+0x54>)
    41a4:	701a      	strb	r2, [r3, #0]
}
    41a6:	bd70      	pop	{r4, r5, r6, pc}
    41a8:	00003cd9 	.word	0x00003cd9
    41ac:	20000b44 	.word	0x20000b44
    41b0:	20000b40 	.word	0x20000b40

000041b4 <wizchip_getnetinfo>:

void wizchip_getnetinfo(wiz_NetInfo* pnetinfo)
{
    41b4:	b570      	push	{r4, r5, r6, lr}
    41b6:	0004      	movs	r4, r0
   getSHAR(pnetinfo->mac);
    41b8:	2206      	movs	r2, #6
    41ba:	0001      	movs	r1, r0
    41bc:	2090      	movs	r0, #144	; 0x90
    41be:	0100      	lsls	r0, r0, #4
    41c0:	4d0f      	ldr	r5, [pc, #60]	; (4200 <wizchip_getnetinfo+0x4c>)
    41c2:	47a8      	blx	r5
   getGAR(pnetinfo->gw);
    41c4:	0021      	movs	r1, r4
    41c6:	310e      	adds	r1, #14
    41c8:	2204      	movs	r2, #4
    41ca:	2080      	movs	r0, #128	; 0x80
    41cc:	0040      	lsls	r0, r0, #1
    41ce:	47a8      	blx	r5
   getSUBR(pnetinfo->sn);
    41d0:	0021      	movs	r1, r4
    41d2:	310a      	adds	r1, #10
    41d4:	2204      	movs	r2, #4
    41d6:	20a0      	movs	r0, #160	; 0xa0
    41d8:	00c0      	lsls	r0, r0, #3
    41da:	47a8      	blx	r5
   getSIPR(pnetinfo->ip);
    41dc:	1da1      	adds	r1, r4, #6
    41de:	2204      	movs	r2, #4
    41e0:	20f0      	movs	r0, #240	; 0xf0
    41e2:	0100      	lsls	r0, r0, #4
    41e4:	47a8      	blx	r5
   pnetinfo->dns[0]= _DNS_[0];
    41e6:	4b07      	ldr	r3, [pc, #28]	; (4204 <wizchip_getnetinfo+0x50>)
    41e8:	781a      	ldrb	r2, [r3, #0]
    41ea:	74a2      	strb	r2, [r4, #18]
   pnetinfo->dns[1]= _DNS_[1];
    41ec:	785a      	ldrb	r2, [r3, #1]
    41ee:	74e2      	strb	r2, [r4, #19]
   pnetinfo->dns[2]= _DNS_[2];
    41f0:	789a      	ldrb	r2, [r3, #2]
    41f2:	7522      	strb	r2, [r4, #20]
   pnetinfo->dns[3]= _DNS_[3];
    41f4:	78db      	ldrb	r3, [r3, #3]
    41f6:	7563      	strb	r3, [r4, #21]
   pnetinfo->dhcp  = _DHCP_;
    41f8:	4b03      	ldr	r3, [pc, #12]	; (4208 <wizchip_getnetinfo+0x54>)
    41fa:	781b      	ldrb	r3, [r3, #0]
    41fc:	75a3      	strb	r3, [r4, #22]
}
    41fe:	bd70      	pop	{r4, r5, r6, pc}
    4200:	00003c59 	.word	0x00003c59
    4204:	20000b44 	.word	0x20000b44
    4208:	20000b40 	.word	0x20000b40

0000420c <wizchip_setnetmode>:

int8_t wizchip_setnetmode(netmode_type netmode)
{
    420c:	b510      	push	{r4, lr}
    420e:	0004      	movs	r4, r0
   uint8_t tmp = 0;
#if _WIZCHIP_ != W5500
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK)) return -1;
#else
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK | NM_FORCEARP)) return -1;
    4210:	233a      	movs	r3, #58	; 0x3a
    4212:	0002      	movs	r2, r0
    4214:	439a      	bics	r2, r3
    4216:	d109      	bne.n	422c <wizchip_setnetmode+0x20>
#endif      
   tmp = getMR();
    4218:	2000      	movs	r0, #0
    421a:	4b06      	ldr	r3, [pc, #24]	; (4234 <wizchip_setnetmode+0x28>)
    421c:	4798      	blx	r3
   tmp |= (uint8_t)netmode;
    421e:	4304      	orrs	r4, r0
    4220:	b2e1      	uxtb	r1, r4
   setMR(tmp);
    4222:	2000      	movs	r0, #0
    4224:	4b04      	ldr	r3, [pc, #16]	; (4238 <wizchip_setnetmode+0x2c>)
    4226:	4798      	blx	r3
   return 0;
    4228:	2000      	movs	r0, #0
}
    422a:	bd10      	pop	{r4, pc}
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK | NM_FORCEARP)) return -1;
    422c:	2001      	movs	r0, #1
    422e:	4240      	negs	r0, r0
    4230:	e7fb      	b.n	422a <wizchip_setnetmode+0x1e>
    4232:	46c0      	nop			; (mov r8, r8)
    4234:	00003b95 	.word	0x00003b95
    4238:	00003bf9 	.word	0x00003bf9

0000423c <wizchip_getnetmode>:

netmode_type wizchip_getnetmode(void)
{
    423c:	b510      	push	{r4, lr}
   return (netmode_type) getMR();
    423e:	2000      	movs	r0, #0
    4240:	4b01      	ldr	r3, [pc, #4]	; (4248 <wizchip_getnetmode+0xc>)
    4242:	4798      	blx	r3
}
    4244:	bd10      	pop	{r4, pc}
    4246:	46c0      	nop			; (mov r8, r8)
    4248:	00003b95 	.word	0x00003b95

0000424c <wizchip_settimeout>:

void wizchip_settimeout(wiz_NetTimeout* nettime)
{
    424c:	b570      	push	{r4, r5, r6, lr}
    424e:	0005      	movs	r5, r0
   setRCR(nettime->retry_cnt);
    4250:	7801      	ldrb	r1, [r0, #0]
    4252:	20d8      	movs	r0, #216	; 0xd8
    4254:	0140      	lsls	r0, r0, #5
    4256:	4c06      	ldr	r4, [pc, #24]	; (4270 <wizchip_settimeout+0x24>)
    4258:	47a0      	blx	r4
   setRTR(nettime->time_100us);
    425a:	8869      	ldrh	r1, [r5, #2]
    425c:	0a09      	lsrs	r1, r1, #8
    425e:	20c8      	movs	r0, #200	; 0xc8
    4260:	0140      	lsls	r0, r0, #5
    4262:	47a0      	blx	r4
    4264:	78a9      	ldrb	r1, [r5, #2]
    4266:	20d0      	movs	r0, #208	; 0xd0
    4268:	0140      	lsls	r0, r0, #5
    426a:	47a0      	blx	r4
}
    426c:	bd70      	pop	{r4, r5, r6, pc}
    426e:	46c0      	nop			; (mov r8, r8)
    4270:	00003bf9 	.word	0x00003bf9

00004274 <wizchip_gettimeout>:

void wizchip_gettimeout(wiz_NetTimeout* nettime)
{
    4274:	b570      	push	{r4, r5, r6, lr}
    4276:	0005      	movs	r5, r0
   nettime->retry_cnt = getRCR();
    4278:	20d8      	movs	r0, #216	; 0xd8
    427a:	0140      	lsls	r0, r0, #5
    427c:	4e07      	ldr	r6, [pc, #28]	; (429c <wizchip_gettimeout+0x28>)
    427e:	47b0      	blx	r6
    4280:	7028      	strb	r0, [r5, #0]
   nettime->time_100us = getRTR();
    4282:	20c8      	movs	r0, #200	; 0xc8
    4284:	0140      	lsls	r0, r0, #5
    4286:	47b0      	blx	r6
    4288:	b280      	uxth	r0, r0
    428a:	0200      	lsls	r0, r0, #8
    428c:	b284      	uxth	r4, r0
    428e:	20d0      	movs	r0, #208	; 0xd0
    4290:	0140      	lsls	r0, r0, #5
    4292:	47b0      	blx	r6
    4294:	b280      	uxth	r0, r0
    4296:	1824      	adds	r4, r4, r0
    4298:	806c      	strh	r4, [r5, #2]
}
    429a:	bd70      	pop	{r4, r5, r6, pc}
    429c:	00003b95 	.word	0x00003b95

000042a0 <ctlnetwork>:
{
    42a0:	b510      	push	{r4, lr}
    42a2:	000c      	movs	r4, r1
   switch(cntype)
    42a4:	2805      	cmp	r0, #5
    42a6:	d820      	bhi.n	42ea <ctlnetwork+0x4a>
    42a8:	0080      	lsls	r0, r0, #2
    42aa:	4b11      	ldr	r3, [pc, #68]	; (42f0 <ctlnetwork+0x50>)
    42ac:	581b      	ldr	r3, [r3, r0]
    42ae:	469f      	mov	pc, r3
         wizchip_setnetinfo((wiz_NetInfo*)arg);
    42b0:	0008      	movs	r0, r1
    42b2:	4b10      	ldr	r3, [pc, #64]	; (42f4 <ctlnetwork+0x54>)
    42b4:	4798      	blx	r3
   return 0;
    42b6:	2000      	movs	r0, #0
}
    42b8:	bd10      	pop	{r4, pc}
         wizchip_getnetinfo((wiz_NetInfo*)arg);
    42ba:	0008      	movs	r0, r1
    42bc:	4b0e      	ldr	r3, [pc, #56]	; (42f8 <ctlnetwork+0x58>)
    42be:	4798      	blx	r3
   return 0;
    42c0:	2000      	movs	r0, #0
         break;
    42c2:	e7f9      	b.n	42b8 <ctlnetwork+0x18>
         return wizchip_setnetmode(*(netmode_type*)arg);
    42c4:	7808      	ldrb	r0, [r1, #0]
    42c6:	4b0d      	ldr	r3, [pc, #52]	; (42fc <ctlnetwork+0x5c>)
    42c8:	4798      	blx	r3
    42ca:	e7f5      	b.n	42b8 <ctlnetwork+0x18>
         *(netmode_type*)arg = wizchip_getnetmode();
    42cc:	4b0c      	ldr	r3, [pc, #48]	; (4300 <ctlnetwork+0x60>)
    42ce:	4798      	blx	r3
    42d0:	7020      	strb	r0, [r4, #0]
   return 0;
    42d2:	2000      	movs	r0, #0
         break;
    42d4:	e7f0      	b.n	42b8 <ctlnetwork+0x18>
         wizchip_settimeout((wiz_NetTimeout*)arg);
    42d6:	0008      	movs	r0, r1
    42d8:	4b0a      	ldr	r3, [pc, #40]	; (4304 <ctlnetwork+0x64>)
    42da:	4798      	blx	r3
   return 0;
    42dc:	2000      	movs	r0, #0
         break;
    42de:	e7eb      	b.n	42b8 <ctlnetwork+0x18>
         wizchip_gettimeout((wiz_NetTimeout*)arg);
    42e0:	0008      	movs	r0, r1
    42e2:	4b09      	ldr	r3, [pc, #36]	; (4308 <ctlnetwork+0x68>)
    42e4:	4798      	blx	r3
   return 0;
    42e6:	2000      	movs	r0, #0
         break;
    42e8:	e7e6      	b.n	42b8 <ctlnetwork+0x18>
         return -1;
    42ea:	2001      	movs	r0, #1
    42ec:	4240      	negs	r0, r0
    42ee:	e7e3      	b.n	42b8 <ctlnetwork+0x18>
    42f0:	000136ec 	.word	0x000136ec
    42f4:	0000415d 	.word	0x0000415d
    42f8:	000041b5 	.word	0x000041b5
    42fc:	0000420d 	.word	0x0000420d
    4300:	0000423d 	.word	0x0000423d
    4304:	0000424d 	.word	0x0000424d
    4308:	00004275 	.word	0x00004275

0000430c <vfd_set_cursor>:
	vfd_string(2, 1, "                    ");
	//vfd_clear();
		
}

void vfd_set_cursor(uint8_t line, uint8_t position){
    430c:	b500      	push	{lr}
    430e:	b083      	sub	sp, #12
	
	uint8_t vfdData[] = {VFD_CMD, MOVE_CURSOR, position, line, 0x0};
    4310:	231f      	movs	r3, #31
    4312:	466a      	mov	r2, sp
    4314:	7013      	strb	r3, [r2, #0]
    4316:	3305      	adds	r3, #5
    4318:	7053      	strb	r3, [r2, #1]
    431a:	7091      	strb	r1, [r2, #2]
    431c:	70d0      	strb	r0, [r2, #3]
    431e:	2300      	movs	r3, #0
    4320:	7113      	strb	r3, [r2, #4]
	SerialWrite(vfdData);
    4322:	4668      	mov	r0, sp
    4324:	4b03      	ldr	r3, [pc, #12]	; (4334 <vfd_set_cursor+0x28>)
    4326:	4798      	blx	r3
	delay_ms(5);
    4328:	2005      	movs	r0, #5
    432a:	4b03      	ldr	r3, [pc, #12]	; (4338 <vfd_set_cursor+0x2c>)
    432c:	4798      	blx	r3
	
}
    432e:	b003      	add	sp, #12
    4330:	bd00      	pop	{pc}
    4332:	46c0      	nop			; (mov r8, r8)
    4334:	000027cd 	.word	0x000027cd
    4338:	00000199 	.word	0x00000199

0000433c <vfd_set_underline_marker>:
	uint8_t vfdData[] = {VFD_CMD, SET_BRIGHTNESS, br, 0x0};
	SerialWrite(vfdData);
	delay_ms(3);
}

void vfd_set_underline_marker(uint8_t pos, uint8_t value){
    433c:	b500      	push	{lr}
    433e:	b083      	sub	sp, #12
	pos = (pos >= 20) ? 20 : pos;
    4340:	1c03      	adds	r3, r0, #0
    4342:	2814      	cmp	r0, #20
    4344:	d900      	bls.n	4348 <vfd_set_underline_marker+0xc>
    4346:	2314      	movs	r3, #20
	value = (value >= 1) ? 1 : value;
    4348:	1e4a      	subs	r2, r1, #1
    434a:	4191      	sbcs	r1, r2
	uint8_t vfdData[] = {VFD_CMD, SET_ANNUNICATOR, value, pos, 0x0};
    434c:	221f      	movs	r2, #31
    434e:	4668      	mov	r0, sp
    4350:	7002      	strb	r2, [r0, #0]
    4352:	3204      	adds	r2, #4
    4354:	7042      	strb	r2, [r0, #1]
    4356:	7081      	strb	r1, [r0, #2]
    4358:	70c3      	strb	r3, [r0, #3]
    435a:	2300      	movs	r3, #0
    435c:	7103      	strb	r3, [r0, #4]
	SerialWrite(vfdData);
    435e:	4b03      	ldr	r3, [pc, #12]	; (436c <vfd_set_underline_marker+0x30>)
    4360:	4798      	blx	r3
	delay_ms(3);
    4362:	2003      	movs	r0, #3
    4364:	4b02      	ldr	r3, [pc, #8]	; (4370 <vfd_set_underline_marker+0x34>)
    4366:	4798      	blx	r3
	
}
    4368:	b003      	add	sp, #12
    436a:	bd00      	pop	{pc}
    436c:	000027cd 	.word	0x000027cd
    4370:	00000199 	.word	0x00000199

00004374 <vfd_string>:
	uint8_t vfdData[] = {VFD_CMD, CLEAR_SCREEN, 0x0};
	SerialWrite(vfdData);
	delay_ms(3);
}

void vfd_string(uint8_t row, uint8_t column, uint8_t *c){
    4374:	b510      	push	{r4, lr}
    4376:	0014      	movs	r4, r2
	vfd_set_cursor(row, column);
    4378:	4b05      	ldr	r3, [pc, #20]	; (4390 <vfd_string+0x1c>)
    437a:	4798      	blx	r3
	SerialWrite(c);
    437c:	0020      	movs	r0, r4
    437e:	4c05      	ldr	r4, [pc, #20]	; (4394 <vfd_string+0x20>)
    4380:	47a0      	blx	r4
	SerialWrite("\0");
    4382:	4805      	ldr	r0, [pc, #20]	; (4398 <vfd_string+0x24>)
    4384:	3004      	adds	r0, #4
    4386:	47a0      	blx	r4
	delay_ms(3);
    4388:	2003      	movs	r0, #3
    438a:	4b04      	ldr	r3, [pc, #16]	; (439c <vfd_string+0x28>)
    438c:	4798      	blx	r3

    438e:	bd10      	pop	{r4, pc}
    4390:	0000430d 	.word	0x0000430d
    4394:	000027cd 	.word	0x000027cd
    4398:	00013704 	.word	0x00013704
    439c:	00000199 	.word	0x00000199

000043a0 <vfd_init>:
{
    43a0:	b570      	push	{r4, r5, r6, lr}
	vfd_string(1, 1, "                    ");
    43a2:	4d05      	ldr	r5, [pc, #20]	; (43b8 <vfd_init+0x18>)
    43a4:	002a      	movs	r2, r5
    43a6:	2101      	movs	r1, #1
    43a8:	2001      	movs	r0, #1
    43aa:	4c04      	ldr	r4, [pc, #16]	; (43bc <vfd_init+0x1c>)
    43ac:	47a0      	blx	r4
	vfd_string(2, 1, "                    ");
    43ae:	002a      	movs	r2, r5
    43b0:	2101      	movs	r1, #1
    43b2:	2002      	movs	r0, #2
    43b4:	47a0      	blx	r4
}
    43b6:	bd70      	pop	{r4, r5, r6, pc}
    43b8:	0001370c 	.word	0x0001370c
    43bc:	00004375 	.word	0x00004375

000043c0 <main>:
int16_t adcVal[2];
ADS1x1x_config_t my_adc;


int main(void)
{
    43c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    43c2:	46ce      	mov	lr, r9
    43c4:	4647      	mov	r7, r8
    43c6:	b580      	push	{r7, lr}
    43c8:	b089      	sub	sp, #36	; 0x24
	mcu_init();
    43ca:	4b87      	ldr	r3, [pc, #540]	; (45e8 <main+0x228>)
    43cc:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    43ce:	25c0      	movs	r5, #192	; 0xc0
    43d0:	05ed      	lsls	r5, r5, #23
    43d2:	2380      	movs	r3, #128	; 0x80
    43d4:	03db      	lsls	r3, r3, #15
    43d6:	61ab      	str	r3, [r5, #24]
    43d8:	2380      	movs	r3, #128	; 0x80
    43da:	005b      	lsls	r3, r3, #1
    43dc:	61ab      	str	r3, [r5, #24]
    43de:	2680      	movs	r6, #128	; 0x80
    43e0:	00b6      	lsls	r6, r6, #2
    43e2:	61ae      	str	r6, [r5, #24]
	
	gpio_set_pin_level(DLDA, true);
	gpio_set_pin_level(O2, true);
	gpio_set_pin_level(O3, true);
	
	netInit();
    43e4:	4b81      	ldr	r3, [pc, #516]	; (45ec <main+0x22c>)
    43e6:	4798      	blx	r3
	ADS1x1x_init(&my_adc,ADS1115,ADS1x1x_I2C_ADDRESS_ADDR_TO_GND,MUX_SINGLE_0,PGA_4096);
    43e8:	4c81      	ldr	r4, [pc, #516]	; (45f0 <main+0x230>)
    43ea:	9600      	str	r6, [sp, #0]
    43ec:	2380      	movs	r3, #128	; 0x80
    43ee:	01db      	lsls	r3, r3, #7
    43f0:	2248      	movs	r2, #72	; 0x48
    43f2:	2105      	movs	r1, #5
    43f4:	0020      	movs	r0, r4
    43f6:	4e7f      	ldr	r6, [pc, #508]	; (45f4 <main+0x234>)
    43f8:	47b0      	blx	r6
	ADS1x1x_set_threshold_hi(&my_adc, 0xFFFF);
    43fa:	497f      	ldr	r1, [pc, #508]	; (45f8 <main+0x238>)
    43fc:	0020      	movs	r0, r4
    43fe:	4b7f      	ldr	r3, [pc, #508]	; (45fc <main+0x23c>)
    4400:	4798      	blx	r3
	ADS1x1x_set_threshold_lo(&my_adc, 0x0000);
    4402:	2100      	movs	r1, #0
    4404:	0020      	movs	r0, r4
    4406:	4b7e      	ldr	r3, [pc, #504]	; (4600 <main+0x240>)
    4408:	4798      	blx	r3
	ADS1x1x_set_comparator_queue(&my_adc,COMPARATOR_QUEUE_1);
    440a:	2100      	movs	r1, #0
    440c:	0020      	movs	r0, r4
    440e:	4b7d      	ldr	r3, [pc, #500]	; (4604 <main+0x244>)
    4410:	4798      	blx	r3
	ADS1x1x_set_data_rate(&my_adc,DATA_RATE_ADS111x_860);
    4412:	21e0      	movs	r1, #224	; 0xe0
    4414:	0020      	movs	r0, r4
    4416:	4b7c      	ldr	r3, [pc, #496]	; (4608 <main+0x248>)
    4418:	4798      	blx	r3
	ADS1x1x_set_mode(&my_adc,MODE_CONTINUOUS);
    441a:	2100      	movs	r1, #0
    441c:	0020      	movs	r0, r4
    441e:	4b7b      	ldr	r3, [pc, #492]	; (460c <main+0x24c>)
    4420:	4798      	blx	r3
    4422:	2380      	movs	r3, #128	; 0x80
    4424:	031b      	lsls	r3, r3, #12
    4426:	61ab      	str	r3, [r5, #24]
	
	gpio_set_pin_level(REM, true);
	delay_ms(2000);
    4428:	20fa      	movs	r0, #250	; 0xfa
    442a:	00c0      	lsls	r0, r0, #3
    442c:	4d78      	ldr	r5, [pc, #480]	; (4610 <main+0x250>)
    442e:	47a8      	blx	r5
	vfd_init();
    4430:	4b78      	ldr	r3, [pc, #480]	; (4614 <main+0x254>)
    4432:	4798      	blx	r3
	buzer(10);
    4434:	200a      	movs	r0, #10
    4436:	4b78      	ldr	r3, [pc, #480]	; (4618 <main+0x258>)
    4438:	4798      	blx	r3
	vfd_set_underline_marker(20, true);
    443a:	2101      	movs	r1, #1
    443c:	2014      	movs	r0, #20
    443e:	4b77      	ldr	r3, [pc, #476]	; (461c <main+0x25c>)
    4440:	4798      	blx	r3
	
	sprintf(debugSerialBuffer, "  IP:192.168.1.%d   ", 90+GetIpSwitch());
    4442:	4b77      	ldr	r3, [pc, #476]	; (4620 <main+0x260>)
    4444:	4798      	blx	r3
    4446:	0002      	movs	r2, r0
    4448:	325a      	adds	r2, #90	; 0x5a
    444a:	4c76      	ldr	r4, [pc, #472]	; (4624 <main+0x264>)
    444c:	4976      	ldr	r1, [pc, #472]	; (4628 <main+0x268>)
    444e:	0020      	movs	r0, r4
    4450:	4b76      	ldr	r3, [pc, #472]	; (462c <main+0x26c>)
    4452:	4798      	blx	r3
	vfd_string(1, 1, debugSerialBuffer);
    4454:	0022      	movs	r2, r4
    4456:	2101      	movs	r1, #1
    4458:	2001      	movs	r0, #1
    445a:	4c75      	ldr	r4, [pc, #468]	; (4630 <main+0x270>)
    445c:	47a0      	blx	r4
	vfd_string(2, 1, " DC Electronic Load ");
    445e:	4a75      	ldr	r2, [pc, #468]	; (4634 <main+0x274>)
    4460:	2101      	movs	r1, #1
    4462:	2002      	movs	r0, #2
    4464:	47a0      	blx	r4
	delay_ms(3000);
    4466:	4874      	ldr	r0, [pc, #464]	; (4638 <main+0x278>)
    4468:	47a8      	blx	r5
	vfd_string(1, 1, "                    ");
    446a:	4d74      	ldr	r5, [pc, #464]	; (463c <main+0x27c>)
    446c:	002a      	movs	r2, r5
    446e:	2101      	movs	r1, #1
    4470:	2001      	movs	r0, #1
    4472:	47a0      	blx	r4
	vfd_string(2, 1, "                    ");
    4474:	002a      	movs	r2, r5
    4476:	2101      	movs	r1, #1
    4478:	2002      	movs	r0, #2
    447a:	47a0      	blx	r4
    447c:	e014      	b.n	44a8 <main+0xe8>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    447e:	2280      	movs	r2, #128	; 0x80
    4480:	03d2      	lsls	r2, r2, #15
    4482:	23c0      	movs	r3, #192	; 0xc0
    4484:	05db      	lsls	r3, r3, #23
    4486:	615a      	str	r2, [r3, #20]
		
		//if(SerialReady(&uartRxBuff)){
		//	SerialWrite(&uartRxBuff);
		//}
		
		if (SerialReady(&uartRxBuff) == 1) {
    4488:	486d      	ldr	r0, [pc, #436]	; (4640 <main+0x280>)
    448a:	4b6e      	ldr	r3, [pc, #440]	; (4644 <main+0x284>)
    448c:	4798      	blx	r3
    448e:	2801      	cmp	r0, #1
    4490:	d024      	beq.n	44dc <main+0x11c>
			SerialWrite(&uartRxBuff);
			} else if (SerialReady(&uartRxBuff) == 2) {
    4492:	486b      	ldr	r0, [pc, #428]	; (4640 <main+0x280>)
    4494:	4b6b      	ldr	r3, [pc, #428]	; (4644 <main+0x284>)
    4496:	4798      	blx	r3
    4498:	2802      	cmp	r0, #2
    449a:	d023      	beq.n	44e4 <main+0x124>
			SerialWrite("Buffer Overflow");
		}
		
		if(adcRequest() == 1){
    449c:	4b6a      	ldr	r3, [pc, #424]	; (4648 <main+0x288>)
    449e:	4798      	blx	r3
    44a0:	2801      	cmp	r0, #1
    44a2:	d023      	beq.n	44ec <main+0x12c>
			vfd_string(1, 1, debugSerialBuffer);
			sprintf(debugSerialBuffer, "<   %.3f; %.3f   >", volt, amp);
			vfd_string(2, 1, debugSerialBuffer);
			
		}
		netHandler();
    44a4:	4b69      	ldr	r3, [pc, #420]	; (464c <main+0x28c>)
    44a6:	4798      	blx	r3
	CRITICAL_SECTION_ENTER();
    44a8:	a807      	add	r0, sp, #28
    44aa:	4b69      	ldr	r3, [pc, #420]	; (4650 <main+0x290>)
    44ac:	4798      	blx	r3
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    44ae:	23c0      	movs	r3, #192	; 0xc0
    44b0:	05db      	lsls	r3, r3, #23
    44b2:	2280      	movs	r2, #128	; 0x80
    44b4:	589c      	ldr	r4, [r3, r2]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    44b6:	3220      	adds	r2, #32
    44b8:	4966      	ldr	r1, [pc, #408]	; (4654 <main+0x294>)
    44ba:	588a      	ldr	r2, [r1, r2]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    44bc:	2190      	movs	r1, #144	; 0x90
    44be:	585b      	ldr	r3, [r3, r1]
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    44c0:	4053      	eors	r3, r2
    44c2:	401c      	ands	r4, r3
    44c4:	4054      	eors	r4, r2
	CRITICAL_SECTION_LEAVE();
    44c6:	a807      	add	r0, sp, #28
    44c8:	4b63      	ldr	r3, [pc, #396]	; (4658 <main+0x298>)
    44ca:	4798      	blx	r3
	if (level) {
    44cc:	05e3      	lsls	r3, r4, #23
    44ce:	d4d6      	bmi.n	447e <main+0xbe>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    44d0:	2280      	movs	r2, #128	; 0x80
    44d2:	03d2      	lsls	r2, r2, #15
    44d4:	23c0      	movs	r3, #192	; 0xc0
    44d6:	05db      	lsls	r3, r3, #23
    44d8:	619a      	str	r2, [r3, #24]
    44da:	e7d5      	b.n	4488 <main+0xc8>
			SerialWrite(&uartRxBuff);
    44dc:	4858      	ldr	r0, [pc, #352]	; (4640 <main+0x280>)
    44de:	4b5f      	ldr	r3, [pc, #380]	; (465c <main+0x29c>)
    44e0:	4798      	blx	r3
    44e2:	e7db      	b.n	449c <main+0xdc>
			SerialWrite("Buffer Overflow");
    44e4:	485e      	ldr	r0, [pc, #376]	; (4660 <main+0x2a0>)
    44e6:	4b5d      	ldr	r3, [pc, #372]	; (465c <main+0x29c>)
    44e8:	4798      	blx	r3
    44ea:	e7d7      	b.n	449c <main+0xdc>
			ADS1x1x_set_multiplexer(&my_adc,MUX_SINGLE_0);
    44ec:	4c40      	ldr	r4, [pc, #256]	; (45f0 <main+0x230>)
    44ee:	2180      	movs	r1, #128	; 0x80
    44f0:	01c9      	lsls	r1, r1, #7
    44f2:	0020      	movs	r0, r4
    44f4:	4b5b      	ldr	r3, [pc, #364]	; (4664 <main+0x2a4>)
    44f6:	4699      	mov	r9, r3
    44f8:	4798      	blx	r3
			ADS1x1x_start_conversion(&my_adc);
    44fa:	0020      	movs	r0, r4
    44fc:	4b5a      	ldr	r3, [pc, #360]	; (4668 <main+0x2a8>)
    44fe:	4698      	mov	r8, r3
    4500:	4798      	blx	r3
			delay_ms(10);
    4502:	200a      	movs	r0, #10
    4504:	4f42      	ldr	r7, [pc, #264]	; (4610 <main+0x250>)
    4506:	47b8      	blx	r7
			adcVal[0] = ADS1x1x_read(&my_adc);
    4508:	0020      	movs	r0, r4
    450a:	4e58      	ldr	r6, [pc, #352]	; (466c <main+0x2ac>)
    450c:	47b0      	blx	r6
    450e:	4d58      	ldr	r5, [pc, #352]	; (4670 <main+0x2b0>)
    4510:	8028      	strh	r0, [r5, #0]
			ADS1x1x_set_multiplexer(&my_adc,MUX_SINGLE_1);
    4512:	21a0      	movs	r1, #160	; 0xa0
    4514:	01c9      	lsls	r1, r1, #7
    4516:	0020      	movs	r0, r4
    4518:	47c8      	blx	r9
			ADS1x1x_start_conversion(&my_adc);
    451a:	0020      	movs	r0, r4
    451c:	47c0      	blx	r8
			delay_ms(10);
    451e:	200a      	movs	r0, #10
    4520:	47b8      	blx	r7
			adcVal[1] = ADS1x1x_read(&my_adc);
    4522:	0020      	movs	r0, r4
    4524:	47b0      	blx	r6
    4526:	0004      	movs	r4, r0
    4528:	8068      	strh	r0, [r5, #2]
			voltDMM = abs(adcVal[0]) * 0.00126518;// * 0.0025496554;
    452a:	2300      	movs	r3, #0
    452c:	5ee8      	ldrsh	r0, [r5, r3]
    452e:	17c3      	asrs	r3, r0, #31
    4530:	18c0      	adds	r0, r0, r3
    4532:	4058      	eors	r0, r3
    4534:	4b4f      	ldr	r3, [pc, #316]	; (4674 <main+0x2b4>)
    4536:	4798      	blx	r3
    4538:	4a4f      	ldr	r2, [pc, #316]	; (4678 <main+0x2b8>)
    453a:	4b50      	ldr	r3, [pc, #320]	; (467c <main+0x2bc>)
    453c:	4d50      	ldr	r5, [pc, #320]	; (4680 <main+0x2c0>)
    453e:	47a8      	blx	r5
    4540:	4b50      	ldr	r3, [pc, #320]	; (4684 <main+0x2c4>)
    4542:	4798      	blx	r3
    4544:	1c05      	adds	r5, r0, #0
    4546:	4b50      	ldr	r3, [pc, #320]	; (4688 <main+0x2c8>)
    4548:	6018      	str	r0, [r3, #0]
			ampDMM = abs(adcVal[1]) - 28;
    454a:	17e3      	asrs	r3, r4, #31
    454c:	18e0      	adds	r0, r4, r3
    454e:	4058      	eors	r0, r3
    4550:	381c      	subs	r0, #28
    4552:	4b4e      	ldr	r3, [pc, #312]	; (468c <main+0x2cc>)
    4554:	4798      	blx	r3
    4556:	1c04      	adds	r4, r0, #0
			ampDMM = ( ampDMM < 8) ?  0 : (ampDMM  * 0.001303780964);
    4558:	2182      	movs	r1, #130	; 0x82
    455a:	05c9      	lsls	r1, r1, #23
    455c:	4b4c      	ldr	r3, [pc, #304]	; (4690 <main+0x2d0>)
    455e:	4798      	blx	r3
    4560:	2800      	cmp	r0, #0
    4562:	d03e      	beq.n	45e2 <main+0x222>
    4564:	1c20      	adds	r0, r4, #0
    4566:	4b4b      	ldr	r3, [pc, #300]	; (4694 <main+0x2d4>)
    4568:	4798      	blx	r3
    456a:	4a4b      	ldr	r2, [pc, #300]	; (4698 <main+0x2d8>)
    456c:	4b4b      	ldr	r3, [pc, #300]	; (469c <main+0x2dc>)
    456e:	4c44      	ldr	r4, [pc, #272]	; (4680 <main+0x2c0>)
    4570:	47a0      	blx	r4
    4572:	4b44      	ldr	r3, [pc, #272]	; (4684 <main+0x2c4>)
    4574:	4798      	blx	r3
    4576:	1c04      	adds	r4, r0, #0
    4578:	4b49      	ldr	r3, [pc, #292]	; (46a0 <main+0x2e0>)
    457a:	601c      	str	r4, [r3, #0]
			watt = ampDMM * voltDMM;
    457c:	1c29      	adds	r1, r5, #0
    457e:	1c20      	adds	r0, r4, #0
    4580:	4b48      	ldr	r3, [pc, #288]	; (46a4 <main+0x2e4>)
    4582:	4798      	blx	r3
    4584:	4b48      	ldr	r3, [pc, #288]	; (46a8 <main+0x2e8>)
    4586:	6018      	str	r0, [r3, #0]
			sprintf(debugSerialBuffer, "%.2fV %.2fA %dW", voltDMM, ampDMM, (uint16_t)watt);
    4588:	4b48      	ldr	r3, [pc, #288]	; (46ac <main+0x2ec>)
    458a:	4798      	blx	r3
    458c:	b286      	uxth	r6, r0
    458e:	4f41      	ldr	r7, [pc, #260]	; (4694 <main+0x2d4>)
    4590:	1c28      	adds	r0, r5, #0
    4592:	47b8      	blx	r7
    4594:	9004      	str	r0, [sp, #16]
    4596:	9105      	str	r1, [sp, #20]
    4598:	4d22      	ldr	r5, [pc, #136]	; (4624 <main+0x264>)
    459a:	9602      	str	r6, [sp, #8]
    459c:	1c20      	adds	r0, r4, #0
    459e:	47b8      	blx	r7
    45a0:	9000      	str	r0, [sp, #0]
    45a2:	9101      	str	r1, [sp, #4]
    45a4:	9a04      	ldr	r2, [sp, #16]
    45a6:	9b05      	ldr	r3, [sp, #20]
    45a8:	4941      	ldr	r1, [pc, #260]	; (46b0 <main+0x2f0>)
    45aa:	0028      	movs	r0, r5
    45ac:	4e1f      	ldr	r6, [pc, #124]	; (462c <main+0x26c>)
    45ae:	47b0      	blx	r6
			vfd_string(1, 1, debugSerialBuffer);
    45b0:	002a      	movs	r2, r5
    45b2:	2101      	movs	r1, #1
    45b4:	2001      	movs	r0, #1
    45b6:	4c1e      	ldr	r4, [pc, #120]	; (4630 <main+0x270>)
    45b8:	47a0      	blx	r4
			sprintf(debugSerialBuffer, "<   %.3f; %.3f   >", volt, amp);
    45ba:	4b3e      	ldr	r3, [pc, #248]	; (46b4 <main+0x2f4>)
    45bc:	6818      	ldr	r0, [r3, #0]
    45be:	47b8      	blx	r7
    45c0:	9004      	str	r0, [sp, #16]
    45c2:	9105      	str	r1, [sp, #20]
    45c4:	4b3c      	ldr	r3, [pc, #240]	; (46b8 <main+0x2f8>)
    45c6:	6818      	ldr	r0, [r3, #0]
    45c8:	47b8      	blx	r7
    45ca:	9000      	str	r0, [sp, #0]
    45cc:	9101      	str	r1, [sp, #4]
    45ce:	9a04      	ldr	r2, [sp, #16]
    45d0:	9b05      	ldr	r3, [sp, #20]
    45d2:	493a      	ldr	r1, [pc, #232]	; (46bc <main+0x2fc>)
    45d4:	0028      	movs	r0, r5
    45d6:	47b0      	blx	r6
			vfd_string(2, 1, debugSerialBuffer);
    45d8:	002a      	movs	r2, r5
    45da:	2101      	movs	r1, #1
    45dc:	2002      	movs	r0, #2
    45de:	47a0      	blx	r4
    45e0:	e760      	b.n	44a4 <main+0xe4>
			ampDMM = ( ampDMM < 8) ?  0 : (ampDMM  * 0.001303780964);
    45e2:	2400      	movs	r4, #0
    45e4:	e7c8      	b.n	4578 <main+0x1b8>
    45e6:	46c0      	nop			; (mov r8, r8)
    45e8:	00002779 	.word	0x00002779
    45ec:	00002935 	.word	0x00002935
    45f0:	2000164c 	.word	0x2000164c
    45f4:	00001c89 	.word	0x00001c89
    45f8:	0000ffff 	.word	0x0000ffff
    45fc:	00001bd1 	.word	0x00001bd1
    4600:	00001bb5 	.word	0x00001bb5
    4604:	00001c79 	.word	0x00001c79
    4608:	00001c39 	.word	0x00001c39
    460c:	00001c29 	.word	0x00001c29
    4610:	00000199 	.word	0x00000199
    4614:	000043a1 	.word	0x000043a1
    4618:	00001e7d 	.word	0x00001e7d
    461c:	0000433d 	.word	0x0000433d
    4620:	00002845 	.word	0x00002845
    4624:	20000c3c 	.word	0x20000c3c
    4628:	00013724 	.word	0x00013724
    462c:	00006f1d 	.word	0x00006f1d
    4630:	00004375 	.word	0x00004375
    4634:	0001373c 	.word	0x0001373c
    4638:	00000bb8 	.word	0x00000bb8
    463c:	0001370c 	.word	0x0001370c
    4640:	20000b7c 	.word	0x20000b7c
    4644:	00002625 	.word	0x00002625
    4648:	00002925 	.word	0x00002925
    464c:	00002a11 	.word	0x00002a11
    4650:	0000017d 	.word	0x0000017d
    4654:	41004400 	.word	0x41004400
    4658:	0000018b 	.word	0x0000018b
    465c:	000027cd 	.word	0x000027cd
    4660:	00013754 	.word	0x00013754
    4664:	00001c09 	.word	0x00001c09
    4668:	00001b85 	.word	0x00001b85
    466c:	00001b99 	.word	0x00001b99
    4670:	20001650 	.word	0x20001650
    4674:	00006659 	.word	0x00006659
    4678:	ae4eb26b 	.word	0xae4eb26b
    467c:	3f54ba8c 	.word	0x3f54ba8c
    4680:	00005ac5 	.word	0x00005ac5
    4684:	000067f1 	.word	0x000067f1
    4688:	20000b1c 	.word	0x20000b1c
    468c:	000053bd 	.word	0x000053bd
    4690:	00004a0d 	.word	0x00004a0d
    4694:	0000674d 	.word	0x0000674d
    4698:	267f6c96 	.word	0x267f6c96
    469c:	3f555c74 	.word	0x3f555c74
    46a0:	20000b10 	.word	0x20000b10
    46a4:	00004e05 	.word	0x00004e05
    46a8:	20000b20 	.word	0x20000b20
    46ac:	00004ac9 	.word	0x00004ac9
    46b0:	00013764 	.word	0x00013764
    46b4:	20000b18 	.word	0x20000b18
    46b8:	20000b0c 	.word	0x20000b0c
    46bc:	00013774 	.word	0x00013774

000046c0 <__udivsi3>:
    46c0:	2200      	movs	r2, #0
    46c2:	0843      	lsrs	r3, r0, #1
    46c4:	428b      	cmp	r3, r1
    46c6:	d374      	bcc.n	47b2 <__udivsi3+0xf2>
    46c8:	0903      	lsrs	r3, r0, #4
    46ca:	428b      	cmp	r3, r1
    46cc:	d35f      	bcc.n	478e <__udivsi3+0xce>
    46ce:	0a03      	lsrs	r3, r0, #8
    46d0:	428b      	cmp	r3, r1
    46d2:	d344      	bcc.n	475e <__udivsi3+0x9e>
    46d4:	0b03      	lsrs	r3, r0, #12
    46d6:	428b      	cmp	r3, r1
    46d8:	d328      	bcc.n	472c <__udivsi3+0x6c>
    46da:	0c03      	lsrs	r3, r0, #16
    46dc:	428b      	cmp	r3, r1
    46de:	d30d      	bcc.n	46fc <__udivsi3+0x3c>
    46e0:	22ff      	movs	r2, #255	; 0xff
    46e2:	0209      	lsls	r1, r1, #8
    46e4:	ba12      	rev	r2, r2
    46e6:	0c03      	lsrs	r3, r0, #16
    46e8:	428b      	cmp	r3, r1
    46ea:	d302      	bcc.n	46f2 <__udivsi3+0x32>
    46ec:	1212      	asrs	r2, r2, #8
    46ee:	0209      	lsls	r1, r1, #8
    46f0:	d065      	beq.n	47be <__udivsi3+0xfe>
    46f2:	0b03      	lsrs	r3, r0, #12
    46f4:	428b      	cmp	r3, r1
    46f6:	d319      	bcc.n	472c <__udivsi3+0x6c>
    46f8:	e000      	b.n	46fc <__udivsi3+0x3c>
    46fa:	0a09      	lsrs	r1, r1, #8
    46fc:	0bc3      	lsrs	r3, r0, #15
    46fe:	428b      	cmp	r3, r1
    4700:	d301      	bcc.n	4706 <__udivsi3+0x46>
    4702:	03cb      	lsls	r3, r1, #15
    4704:	1ac0      	subs	r0, r0, r3
    4706:	4152      	adcs	r2, r2
    4708:	0b83      	lsrs	r3, r0, #14
    470a:	428b      	cmp	r3, r1
    470c:	d301      	bcc.n	4712 <__udivsi3+0x52>
    470e:	038b      	lsls	r3, r1, #14
    4710:	1ac0      	subs	r0, r0, r3
    4712:	4152      	adcs	r2, r2
    4714:	0b43      	lsrs	r3, r0, #13
    4716:	428b      	cmp	r3, r1
    4718:	d301      	bcc.n	471e <__udivsi3+0x5e>
    471a:	034b      	lsls	r3, r1, #13
    471c:	1ac0      	subs	r0, r0, r3
    471e:	4152      	adcs	r2, r2
    4720:	0b03      	lsrs	r3, r0, #12
    4722:	428b      	cmp	r3, r1
    4724:	d301      	bcc.n	472a <__udivsi3+0x6a>
    4726:	030b      	lsls	r3, r1, #12
    4728:	1ac0      	subs	r0, r0, r3
    472a:	4152      	adcs	r2, r2
    472c:	0ac3      	lsrs	r3, r0, #11
    472e:	428b      	cmp	r3, r1
    4730:	d301      	bcc.n	4736 <__udivsi3+0x76>
    4732:	02cb      	lsls	r3, r1, #11
    4734:	1ac0      	subs	r0, r0, r3
    4736:	4152      	adcs	r2, r2
    4738:	0a83      	lsrs	r3, r0, #10
    473a:	428b      	cmp	r3, r1
    473c:	d301      	bcc.n	4742 <__udivsi3+0x82>
    473e:	028b      	lsls	r3, r1, #10
    4740:	1ac0      	subs	r0, r0, r3
    4742:	4152      	adcs	r2, r2
    4744:	0a43      	lsrs	r3, r0, #9
    4746:	428b      	cmp	r3, r1
    4748:	d301      	bcc.n	474e <__udivsi3+0x8e>
    474a:	024b      	lsls	r3, r1, #9
    474c:	1ac0      	subs	r0, r0, r3
    474e:	4152      	adcs	r2, r2
    4750:	0a03      	lsrs	r3, r0, #8
    4752:	428b      	cmp	r3, r1
    4754:	d301      	bcc.n	475a <__udivsi3+0x9a>
    4756:	020b      	lsls	r3, r1, #8
    4758:	1ac0      	subs	r0, r0, r3
    475a:	4152      	adcs	r2, r2
    475c:	d2cd      	bcs.n	46fa <__udivsi3+0x3a>
    475e:	09c3      	lsrs	r3, r0, #7
    4760:	428b      	cmp	r3, r1
    4762:	d301      	bcc.n	4768 <__udivsi3+0xa8>
    4764:	01cb      	lsls	r3, r1, #7
    4766:	1ac0      	subs	r0, r0, r3
    4768:	4152      	adcs	r2, r2
    476a:	0983      	lsrs	r3, r0, #6
    476c:	428b      	cmp	r3, r1
    476e:	d301      	bcc.n	4774 <__udivsi3+0xb4>
    4770:	018b      	lsls	r3, r1, #6
    4772:	1ac0      	subs	r0, r0, r3
    4774:	4152      	adcs	r2, r2
    4776:	0943      	lsrs	r3, r0, #5
    4778:	428b      	cmp	r3, r1
    477a:	d301      	bcc.n	4780 <__udivsi3+0xc0>
    477c:	014b      	lsls	r3, r1, #5
    477e:	1ac0      	subs	r0, r0, r3
    4780:	4152      	adcs	r2, r2
    4782:	0903      	lsrs	r3, r0, #4
    4784:	428b      	cmp	r3, r1
    4786:	d301      	bcc.n	478c <__udivsi3+0xcc>
    4788:	010b      	lsls	r3, r1, #4
    478a:	1ac0      	subs	r0, r0, r3
    478c:	4152      	adcs	r2, r2
    478e:	08c3      	lsrs	r3, r0, #3
    4790:	428b      	cmp	r3, r1
    4792:	d301      	bcc.n	4798 <__udivsi3+0xd8>
    4794:	00cb      	lsls	r3, r1, #3
    4796:	1ac0      	subs	r0, r0, r3
    4798:	4152      	adcs	r2, r2
    479a:	0883      	lsrs	r3, r0, #2
    479c:	428b      	cmp	r3, r1
    479e:	d301      	bcc.n	47a4 <__udivsi3+0xe4>
    47a0:	008b      	lsls	r3, r1, #2
    47a2:	1ac0      	subs	r0, r0, r3
    47a4:	4152      	adcs	r2, r2
    47a6:	0843      	lsrs	r3, r0, #1
    47a8:	428b      	cmp	r3, r1
    47aa:	d301      	bcc.n	47b0 <__udivsi3+0xf0>
    47ac:	004b      	lsls	r3, r1, #1
    47ae:	1ac0      	subs	r0, r0, r3
    47b0:	4152      	adcs	r2, r2
    47b2:	1a41      	subs	r1, r0, r1
    47b4:	d200      	bcs.n	47b8 <__udivsi3+0xf8>
    47b6:	4601      	mov	r1, r0
    47b8:	4152      	adcs	r2, r2
    47ba:	4610      	mov	r0, r2
    47bc:	4770      	bx	lr
    47be:	e7ff      	b.n	47c0 <__udivsi3+0x100>
    47c0:	b501      	push	{r0, lr}
    47c2:	2000      	movs	r0, #0
    47c4:	f000 f8f0 	bl	49a8 <__aeabi_idiv0>
    47c8:	bd02      	pop	{r1, pc}
    47ca:	46c0      	nop			; (mov r8, r8)

000047cc <__aeabi_uidivmod>:
    47cc:	2900      	cmp	r1, #0
    47ce:	d0f7      	beq.n	47c0 <__udivsi3+0x100>
    47d0:	e776      	b.n	46c0 <__udivsi3>
    47d2:	4770      	bx	lr

000047d4 <__divsi3>:
    47d4:	4603      	mov	r3, r0
    47d6:	430b      	orrs	r3, r1
    47d8:	d47f      	bmi.n	48da <__divsi3+0x106>
    47da:	2200      	movs	r2, #0
    47dc:	0843      	lsrs	r3, r0, #1
    47de:	428b      	cmp	r3, r1
    47e0:	d374      	bcc.n	48cc <__divsi3+0xf8>
    47e2:	0903      	lsrs	r3, r0, #4
    47e4:	428b      	cmp	r3, r1
    47e6:	d35f      	bcc.n	48a8 <__divsi3+0xd4>
    47e8:	0a03      	lsrs	r3, r0, #8
    47ea:	428b      	cmp	r3, r1
    47ec:	d344      	bcc.n	4878 <__divsi3+0xa4>
    47ee:	0b03      	lsrs	r3, r0, #12
    47f0:	428b      	cmp	r3, r1
    47f2:	d328      	bcc.n	4846 <__divsi3+0x72>
    47f4:	0c03      	lsrs	r3, r0, #16
    47f6:	428b      	cmp	r3, r1
    47f8:	d30d      	bcc.n	4816 <__divsi3+0x42>
    47fa:	22ff      	movs	r2, #255	; 0xff
    47fc:	0209      	lsls	r1, r1, #8
    47fe:	ba12      	rev	r2, r2
    4800:	0c03      	lsrs	r3, r0, #16
    4802:	428b      	cmp	r3, r1
    4804:	d302      	bcc.n	480c <__divsi3+0x38>
    4806:	1212      	asrs	r2, r2, #8
    4808:	0209      	lsls	r1, r1, #8
    480a:	d065      	beq.n	48d8 <__divsi3+0x104>
    480c:	0b03      	lsrs	r3, r0, #12
    480e:	428b      	cmp	r3, r1
    4810:	d319      	bcc.n	4846 <__divsi3+0x72>
    4812:	e000      	b.n	4816 <__divsi3+0x42>
    4814:	0a09      	lsrs	r1, r1, #8
    4816:	0bc3      	lsrs	r3, r0, #15
    4818:	428b      	cmp	r3, r1
    481a:	d301      	bcc.n	4820 <__divsi3+0x4c>
    481c:	03cb      	lsls	r3, r1, #15
    481e:	1ac0      	subs	r0, r0, r3
    4820:	4152      	adcs	r2, r2
    4822:	0b83      	lsrs	r3, r0, #14
    4824:	428b      	cmp	r3, r1
    4826:	d301      	bcc.n	482c <__divsi3+0x58>
    4828:	038b      	lsls	r3, r1, #14
    482a:	1ac0      	subs	r0, r0, r3
    482c:	4152      	adcs	r2, r2
    482e:	0b43      	lsrs	r3, r0, #13
    4830:	428b      	cmp	r3, r1
    4832:	d301      	bcc.n	4838 <__divsi3+0x64>
    4834:	034b      	lsls	r3, r1, #13
    4836:	1ac0      	subs	r0, r0, r3
    4838:	4152      	adcs	r2, r2
    483a:	0b03      	lsrs	r3, r0, #12
    483c:	428b      	cmp	r3, r1
    483e:	d301      	bcc.n	4844 <__divsi3+0x70>
    4840:	030b      	lsls	r3, r1, #12
    4842:	1ac0      	subs	r0, r0, r3
    4844:	4152      	adcs	r2, r2
    4846:	0ac3      	lsrs	r3, r0, #11
    4848:	428b      	cmp	r3, r1
    484a:	d301      	bcc.n	4850 <__divsi3+0x7c>
    484c:	02cb      	lsls	r3, r1, #11
    484e:	1ac0      	subs	r0, r0, r3
    4850:	4152      	adcs	r2, r2
    4852:	0a83      	lsrs	r3, r0, #10
    4854:	428b      	cmp	r3, r1
    4856:	d301      	bcc.n	485c <__divsi3+0x88>
    4858:	028b      	lsls	r3, r1, #10
    485a:	1ac0      	subs	r0, r0, r3
    485c:	4152      	adcs	r2, r2
    485e:	0a43      	lsrs	r3, r0, #9
    4860:	428b      	cmp	r3, r1
    4862:	d301      	bcc.n	4868 <__divsi3+0x94>
    4864:	024b      	lsls	r3, r1, #9
    4866:	1ac0      	subs	r0, r0, r3
    4868:	4152      	adcs	r2, r2
    486a:	0a03      	lsrs	r3, r0, #8
    486c:	428b      	cmp	r3, r1
    486e:	d301      	bcc.n	4874 <__divsi3+0xa0>
    4870:	020b      	lsls	r3, r1, #8
    4872:	1ac0      	subs	r0, r0, r3
    4874:	4152      	adcs	r2, r2
    4876:	d2cd      	bcs.n	4814 <__divsi3+0x40>
    4878:	09c3      	lsrs	r3, r0, #7
    487a:	428b      	cmp	r3, r1
    487c:	d301      	bcc.n	4882 <__divsi3+0xae>
    487e:	01cb      	lsls	r3, r1, #7
    4880:	1ac0      	subs	r0, r0, r3
    4882:	4152      	adcs	r2, r2
    4884:	0983      	lsrs	r3, r0, #6
    4886:	428b      	cmp	r3, r1
    4888:	d301      	bcc.n	488e <__divsi3+0xba>
    488a:	018b      	lsls	r3, r1, #6
    488c:	1ac0      	subs	r0, r0, r3
    488e:	4152      	adcs	r2, r2
    4890:	0943      	lsrs	r3, r0, #5
    4892:	428b      	cmp	r3, r1
    4894:	d301      	bcc.n	489a <__divsi3+0xc6>
    4896:	014b      	lsls	r3, r1, #5
    4898:	1ac0      	subs	r0, r0, r3
    489a:	4152      	adcs	r2, r2
    489c:	0903      	lsrs	r3, r0, #4
    489e:	428b      	cmp	r3, r1
    48a0:	d301      	bcc.n	48a6 <__divsi3+0xd2>
    48a2:	010b      	lsls	r3, r1, #4
    48a4:	1ac0      	subs	r0, r0, r3
    48a6:	4152      	adcs	r2, r2
    48a8:	08c3      	lsrs	r3, r0, #3
    48aa:	428b      	cmp	r3, r1
    48ac:	d301      	bcc.n	48b2 <__divsi3+0xde>
    48ae:	00cb      	lsls	r3, r1, #3
    48b0:	1ac0      	subs	r0, r0, r3
    48b2:	4152      	adcs	r2, r2
    48b4:	0883      	lsrs	r3, r0, #2
    48b6:	428b      	cmp	r3, r1
    48b8:	d301      	bcc.n	48be <__divsi3+0xea>
    48ba:	008b      	lsls	r3, r1, #2
    48bc:	1ac0      	subs	r0, r0, r3
    48be:	4152      	adcs	r2, r2
    48c0:	0843      	lsrs	r3, r0, #1
    48c2:	428b      	cmp	r3, r1
    48c4:	d301      	bcc.n	48ca <__divsi3+0xf6>
    48c6:	004b      	lsls	r3, r1, #1
    48c8:	1ac0      	subs	r0, r0, r3
    48ca:	4152      	adcs	r2, r2
    48cc:	1a41      	subs	r1, r0, r1
    48ce:	d200      	bcs.n	48d2 <__divsi3+0xfe>
    48d0:	4601      	mov	r1, r0
    48d2:	4152      	adcs	r2, r2
    48d4:	4610      	mov	r0, r2
    48d6:	4770      	bx	lr
    48d8:	e05d      	b.n	4996 <__divsi3+0x1c2>
    48da:	0fca      	lsrs	r2, r1, #31
    48dc:	d000      	beq.n	48e0 <__divsi3+0x10c>
    48de:	4249      	negs	r1, r1
    48e0:	1003      	asrs	r3, r0, #32
    48e2:	d300      	bcc.n	48e6 <__divsi3+0x112>
    48e4:	4240      	negs	r0, r0
    48e6:	4053      	eors	r3, r2
    48e8:	2200      	movs	r2, #0
    48ea:	469c      	mov	ip, r3
    48ec:	0903      	lsrs	r3, r0, #4
    48ee:	428b      	cmp	r3, r1
    48f0:	d32d      	bcc.n	494e <__divsi3+0x17a>
    48f2:	0a03      	lsrs	r3, r0, #8
    48f4:	428b      	cmp	r3, r1
    48f6:	d312      	bcc.n	491e <__divsi3+0x14a>
    48f8:	22fc      	movs	r2, #252	; 0xfc
    48fa:	0189      	lsls	r1, r1, #6
    48fc:	ba12      	rev	r2, r2
    48fe:	0a03      	lsrs	r3, r0, #8
    4900:	428b      	cmp	r3, r1
    4902:	d30c      	bcc.n	491e <__divsi3+0x14a>
    4904:	0189      	lsls	r1, r1, #6
    4906:	1192      	asrs	r2, r2, #6
    4908:	428b      	cmp	r3, r1
    490a:	d308      	bcc.n	491e <__divsi3+0x14a>
    490c:	0189      	lsls	r1, r1, #6
    490e:	1192      	asrs	r2, r2, #6
    4910:	428b      	cmp	r3, r1
    4912:	d304      	bcc.n	491e <__divsi3+0x14a>
    4914:	0189      	lsls	r1, r1, #6
    4916:	d03a      	beq.n	498e <__divsi3+0x1ba>
    4918:	1192      	asrs	r2, r2, #6
    491a:	e000      	b.n	491e <__divsi3+0x14a>
    491c:	0989      	lsrs	r1, r1, #6
    491e:	09c3      	lsrs	r3, r0, #7
    4920:	428b      	cmp	r3, r1
    4922:	d301      	bcc.n	4928 <__divsi3+0x154>
    4924:	01cb      	lsls	r3, r1, #7
    4926:	1ac0      	subs	r0, r0, r3
    4928:	4152      	adcs	r2, r2
    492a:	0983      	lsrs	r3, r0, #6
    492c:	428b      	cmp	r3, r1
    492e:	d301      	bcc.n	4934 <__divsi3+0x160>
    4930:	018b      	lsls	r3, r1, #6
    4932:	1ac0      	subs	r0, r0, r3
    4934:	4152      	adcs	r2, r2
    4936:	0943      	lsrs	r3, r0, #5
    4938:	428b      	cmp	r3, r1
    493a:	d301      	bcc.n	4940 <__divsi3+0x16c>
    493c:	014b      	lsls	r3, r1, #5
    493e:	1ac0      	subs	r0, r0, r3
    4940:	4152      	adcs	r2, r2
    4942:	0903      	lsrs	r3, r0, #4
    4944:	428b      	cmp	r3, r1
    4946:	d301      	bcc.n	494c <__divsi3+0x178>
    4948:	010b      	lsls	r3, r1, #4
    494a:	1ac0      	subs	r0, r0, r3
    494c:	4152      	adcs	r2, r2
    494e:	08c3      	lsrs	r3, r0, #3
    4950:	428b      	cmp	r3, r1
    4952:	d301      	bcc.n	4958 <__divsi3+0x184>
    4954:	00cb      	lsls	r3, r1, #3
    4956:	1ac0      	subs	r0, r0, r3
    4958:	4152      	adcs	r2, r2
    495a:	0883      	lsrs	r3, r0, #2
    495c:	428b      	cmp	r3, r1
    495e:	d301      	bcc.n	4964 <__divsi3+0x190>
    4960:	008b      	lsls	r3, r1, #2
    4962:	1ac0      	subs	r0, r0, r3
    4964:	4152      	adcs	r2, r2
    4966:	d2d9      	bcs.n	491c <__divsi3+0x148>
    4968:	0843      	lsrs	r3, r0, #1
    496a:	428b      	cmp	r3, r1
    496c:	d301      	bcc.n	4972 <__divsi3+0x19e>
    496e:	004b      	lsls	r3, r1, #1
    4970:	1ac0      	subs	r0, r0, r3
    4972:	4152      	adcs	r2, r2
    4974:	1a41      	subs	r1, r0, r1
    4976:	d200      	bcs.n	497a <__divsi3+0x1a6>
    4978:	4601      	mov	r1, r0
    497a:	4663      	mov	r3, ip
    497c:	4152      	adcs	r2, r2
    497e:	105b      	asrs	r3, r3, #1
    4980:	4610      	mov	r0, r2
    4982:	d301      	bcc.n	4988 <__divsi3+0x1b4>
    4984:	4240      	negs	r0, r0
    4986:	2b00      	cmp	r3, #0
    4988:	d500      	bpl.n	498c <__divsi3+0x1b8>
    498a:	4249      	negs	r1, r1
    498c:	4770      	bx	lr
    498e:	4663      	mov	r3, ip
    4990:	105b      	asrs	r3, r3, #1
    4992:	d300      	bcc.n	4996 <__divsi3+0x1c2>
    4994:	4240      	negs	r0, r0
    4996:	b501      	push	{r0, lr}
    4998:	2000      	movs	r0, #0
    499a:	f000 f805 	bl	49a8 <__aeabi_idiv0>
    499e:	bd02      	pop	{r1, pc}

000049a0 <__aeabi_idivmod>:
    49a0:	2900      	cmp	r1, #0
    49a2:	d0f8      	beq.n	4996 <__divsi3+0x1c2>
    49a4:	e716      	b.n	47d4 <__divsi3>
    49a6:	4770      	bx	lr

000049a8 <__aeabi_idiv0>:
    49a8:	4770      	bx	lr
    49aa:	46c0      	nop			; (mov r8, r8)

000049ac <__aeabi_cfrcmple>:
    49ac:	4684      	mov	ip, r0
    49ae:	1c08      	adds	r0, r1, #0
    49b0:	4661      	mov	r1, ip
    49b2:	e7ff      	b.n	49b4 <__aeabi_cfcmpeq>

000049b4 <__aeabi_cfcmpeq>:
    49b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    49b6:	f000 f9e3 	bl	4d80 <__lesf2>
    49ba:	2800      	cmp	r0, #0
    49bc:	d401      	bmi.n	49c2 <__aeabi_cfcmpeq+0xe>
    49be:	2100      	movs	r1, #0
    49c0:	42c8      	cmn	r0, r1
    49c2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000049c4 <__aeabi_fcmpeq>:
    49c4:	b510      	push	{r4, lr}
    49c6:	f000 f975 	bl	4cb4 <__eqsf2>
    49ca:	4240      	negs	r0, r0
    49cc:	3001      	adds	r0, #1
    49ce:	bd10      	pop	{r4, pc}

000049d0 <__aeabi_fcmplt>:
    49d0:	b510      	push	{r4, lr}
    49d2:	f000 f9d5 	bl	4d80 <__lesf2>
    49d6:	2800      	cmp	r0, #0
    49d8:	db01      	blt.n	49de <__aeabi_fcmplt+0xe>
    49da:	2000      	movs	r0, #0
    49dc:	bd10      	pop	{r4, pc}
    49de:	2001      	movs	r0, #1
    49e0:	bd10      	pop	{r4, pc}
    49e2:	46c0      	nop			; (mov r8, r8)

000049e4 <__aeabi_fcmple>:
    49e4:	b510      	push	{r4, lr}
    49e6:	f000 f9cb 	bl	4d80 <__lesf2>
    49ea:	2800      	cmp	r0, #0
    49ec:	dd01      	ble.n	49f2 <__aeabi_fcmple+0xe>
    49ee:	2000      	movs	r0, #0
    49f0:	bd10      	pop	{r4, pc}
    49f2:	2001      	movs	r0, #1
    49f4:	bd10      	pop	{r4, pc}
    49f6:	46c0      	nop			; (mov r8, r8)

000049f8 <__aeabi_fcmpgt>:
    49f8:	b510      	push	{r4, lr}
    49fa:	f000 f981 	bl	4d00 <__gesf2>
    49fe:	2800      	cmp	r0, #0
    4a00:	dc01      	bgt.n	4a06 <__aeabi_fcmpgt+0xe>
    4a02:	2000      	movs	r0, #0
    4a04:	bd10      	pop	{r4, pc}
    4a06:	2001      	movs	r0, #1
    4a08:	bd10      	pop	{r4, pc}
    4a0a:	46c0      	nop			; (mov r8, r8)

00004a0c <__aeabi_fcmpge>:
    4a0c:	b510      	push	{r4, lr}
    4a0e:	f000 f977 	bl	4d00 <__gesf2>
    4a12:	2800      	cmp	r0, #0
    4a14:	da01      	bge.n	4a1a <__aeabi_fcmpge+0xe>
    4a16:	2000      	movs	r0, #0
    4a18:	bd10      	pop	{r4, pc}
    4a1a:	2001      	movs	r0, #1
    4a1c:	bd10      	pop	{r4, pc}
    4a1e:	46c0      	nop			; (mov r8, r8)

00004a20 <__aeabi_uldivmod>:
    4a20:	2b00      	cmp	r3, #0
    4a22:	d111      	bne.n	4a48 <__aeabi_uldivmod+0x28>
    4a24:	2a00      	cmp	r2, #0
    4a26:	d10f      	bne.n	4a48 <__aeabi_uldivmod+0x28>
    4a28:	2900      	cmp	r1, #0
    4a2a:	d100      	bne.n	4a2e <__aeabi_uldivmod+0xe>
    4a2c:	2800      	cmp	r0, #0
    4a2e:	d002      	beq.n	4a36 <__aeabi_uldivmod+0x16>
    4a30:	2100      	movs	r1, #0
    4a32:	43c9      	mvns	r1, r1
    4a34:	1c08      	adds	r0, r1, #0
    4a36:	b407      	push	{r0, r1, r2}
    4a38:	4802      	ldr	r0, [pc, #8]	; (4a44 <__aeabi_uldivmod+0x24>)
    4a3a:	a102      	add	r1, pc, #8	; (adr r1, 4a44 <__aeabi_uldivmod+0x24>)
    4a3c:	1840      	adds	r0, r0, r1
    4a3e:	9002      	str	r0, [sp, #8]
    4a40:	bd03      	pop	{r0, r1, pc}
    4a42:	46c0      	nop			; (mov r8, r8)
    4a44:	ffffff65 	.word	0xffffff65
    4a48:	b403      	push	{r0, r1}
    4a4a:	4668      	mov	r0, sp
    4a4c:	b501      	push	{r0, lr}
    4a4e:	9802      	ldr	r0, [sp, #8]
    4a50:	f000 f870 	bl	4b34 <__udivmoddi4>
    4a54:	9b01      	ldr	r3, [sp, #4]
    4a56:	469e      	mov	lr, r3
    4a58:	b002      	add	sp, #8
    4a5a:	bc0c      	pop	{r2, r3}
    4a5c:	4770      	bx	lr
    4a5e:	46c0      	nop			; (mov r8, r8)

00004a60 <__aeabi_lmul>:
    4a60:	b5f0      	push	{r4, r5, r6, r7, lr}
    4a62:	46ce      	mov	lr, r9
    4a64:	4647      	mov	r7, r8
    4a66:	0415      	lsls	r5, r2, #16
    4a68:	0c2d      	lsrs	r5, r5, #16
    4a6a:	002e      	movs	r6, r5
    4a6c:	b580      	push	{r7, lr}
    4a6e:	0407      	lsls	r7, r0, #16
    4a70:	0c14      	lsrs	r4, r2, #16
    4a72:	0c3f      	lsrs	r7, r7, #16
    4a74:	4699      	mov	r9, r3
    4a76:	0c03      	lsrs	r3, r0, #16
    4a78:	437e      	muls	r6, r7
    4a7a:	435d      	muls	r5, r3
    4a7c:	4367      	muls	r7, r4
    4a7e:	4363      	muls	r3, r4
    4a80:	197f      	adds	r7, r7, r5
    4a82:	0c34      	lsrs	r4, r6, #16
    4a84:	19e4      	adds	r4, r4, r7
    4a86:	469c      	mov	ip, r3
    4a88:	42a5      	cmp	r5, r4
    4a8a:	d903      	bls.n	4a94 <__aeabi_lmul+0x34>
    4a8c:	2380      	movs	r3, #128	; 0x80
    4a8e:	025b      	lsls	r3, r3, #9
    4a90:	4698      	mov	r8, r3
    4a92:	44c4      	add	ip, r8
    4a94:	464b      	mov	r3, r9
    4a96:	4351      	muls	r1, r2
    4a98:	4343      	muls	r3, r0
    4a9a:	0436      	lsls	r6, r6, #16
    4a9c:	0c36      	lsrs	r6, r6, #16
    4a9e:	0c25      	lsrs	r5, r4, #16
    4aa0:	0424      	lsls	r4, r4, #16
    4aa2:	4465      	add	r5, ip
    4aa4:	19a4      	adds	r4, r4, r6
    4aa6:	1859      	adds	r1, r3, r1
    4aa8:	1949      	adds	r1, r1, r5
    4aaa:	0020      	movs	r0, r4
    4aac:	bc0c      	pop	{r2, r3}
    4aae:	4690      	mov	r8, r2
    4ab0:	4699      	mov	r9, r3
    4ab2:	bdf0      	pop	{r4, r5, r6, r7, pc}

00004ab4 <__ffssi2>:
    4ab4:	b510      	push	{r4, lr}
    4ab6:	2300      	movs	r3, #0
    4ab8:	2800      	cmp	r0, #0
    4aba:	d002      	beq.n	4ac2 <__ffssi2+0xe>
    4abc:	f001 ff8a 	bl	69d4 <__ctzsi2>
    4ac0:	1c43      	adds	r3, r0, #1
    4ac2:	0018      	movs	r0, r3
    4ac4:	bd10      	pop	{r4, pc}
    4ac6:	46c0      	nop			; (mov r8, r8)

00004ac8 <__aeabi_f2uiz>:
    4ac8:	219e      	movs	r1, #158	; 0x9e
    4aca:	b510      	push	{r4, lr}
    4acc:	05c9      	lsls	r1, r1, #23
    4ace:	1c04      	adds	r4, r0, #0
    4ad0:	f7ff ff9c 	bl	4a0c <__aeabi_fcmpge>
    4ad4:	2800      	cmp	r0, #0
    4ad6:	d103      	bne.n	4ae0 <__aeabi_f2uiz+0x18>
    4ad8:	1c20      	adds	r0, r4, #0
    4ada:	f000 fc4f 	bl	537c <__aeabi_f2iz>
    4ade:	bd10      	pop	{r4, pc}
    4ae0:	219e      	movs	r1, #158	; 0x9e
    4ae2:	1c20      	adds	r0, r4, #0
    4ae4:	05c9      	lsls	r1, r1, #23
    4ae6:	f000 faad 	bl	5044 <__aeabi_fsub>
    4aea:	f000 fc47 	bl	537c <__aeabi_f2iz>
    4aee:	2380      	movs	r3, #128	; 0x80
    4af0:	061b      	lsls	r3, r3, #24
    4af2:	469c      	mov	ip, r3
    4af4:	4460      	add	r0, ip
    4af6:	e7f2      	b.n	4ade <__aeabi_f2uiz+0x16>

00004af8 <__aeabi_d2uiz>:
    4af8:	b570      	push	{r4, r5, r6, lr}
    4afa:	2200      	movs	r2, #0
    4afc:	4b0c      	ldr	r3, [pc, #48]	; (4b30 <__aeabi_d2uiz+0x38>)
    4afe:	0004      	movs	r4, r0
    4b00:	000d      	movs	r5, r1
    4b02:	f001 ff33 	bl	696c <__aeabi_dcmpge>
    4b06:	2800      	cmp	r0, #0
    4b08:	d104      	bne.n	4b14 <__aeabi_d2uiz+0x1c>
    4b0a:	0020      	movs	r0, r4
    4b0c:	0029      	movs	r1, r5
    4b0e:	f001 fd6f 	bl	65f0 <__aeabi_d2iz>
    4b12:	bd70      	pop	{r4, r5, r6, pc}
    4b14:	4b06      	ldr	r3, [pc, #24]	; (4b30 <__aeabi_d2uiz+0x38>)
    4b16:	2200      	movs	r2, #0
    4b18:	0020      	movs	r0, r4
    4b1a:	0029      	movs	r1, r5
    4b1c:	f001 fa52 	bl	5fc4 <__aeabi_dsub>
    4b20:	f001 fd66 	bl	65f0 <__aeabi_d2iz>
    4b24:	2380      	movs	r3, #128	; 0x80
    4b26:	061b      	lsls	r3, r3, #24
    4b28:	469c      	mov	ip, r3
    4b2a:	4460      	add	r0, ip
    4b2c:	e7f1      	b.n	4b12 <__aeabi_d2uiz+0x1a>
    4b2e:	46c0      	nop			; (mov r8, r8)
    4b30:	41e00000 	.word	0x41e00000

00004b34 <__udivmoddi4>:
    4b34:	b5f0      	push	{r4, r5, r6, r7, lr}
    4b36:	4657      	mov	r7, sl
    4b38:	464e      	mov	r6, r9
    4b3a:	4645      	mov	r5, r8
    4b3c:	46de      	mov	lr, fp
    4b3e:	b5e0      	push	{r5, r6, r7, lr}
    4b40:	0004      	movs	r4, r0
    4b42:	b083      	sub	sp, #12
    4b44:	000d      	movs	r5, r1
    4b46:	4692      	mov	sl, r2
    4b48:	4699      	mov	r9, r3
    4b4a:	428b      	cmp	r3, r1
    4b4c:	d82f      	bhi.n	4bae <__udivmoddi4+0x7a>
    4b4e:	d02c      	beq.n	4baa <__udivmoddi4+0x76>
    4b50:	4649      	mov	r1, r9
    4b52:	4650      	mov	r0, sl
    4b54:	f001 ff32 	bl	69bc <__clzdi2>
    4b58:	0029      	movs	r1, r5
    4b5a:	0006      	movs	r6, r0
    4b5c:	0020      	movs	r0, r4
    4b5e:	f001 ff2d 	bl	69bc <__clzdi2>
    4b62:	1a33      	subs	r3, r6, r0
    4b64:	4698      	mov	r8, r3
    4b66:	3b20      	subs	r3, #32
    4b68:	469b      	mov	fp, r3
    4b6a:	d500      	bpl.n	4b6e <__udivmoddi4+0x3a>
    4b6c:	e074      	b.n	4c58 <__udivmoddi4+0x124>
    4b6e:	4653      	mov	r3, sl
    4b70:	465a      	mov	r2, fp
    4b72:	4093      	lsls	r3, r2
    4b74:	001f      	movs	r7, r3
    4b76:	4653      	mov	r3, sl
    4b78:	4642      	mov	r2, r8
    4b7a:	4093      	lsls	r3, r2
    4b7c:	001e      	movs	r6, r3
    4b7e:	42af      	cmp	r7, r5
    4b80:	d829      	bhi.n	4bd6 <__udivmoddi4+0xa2>
    4b82:	d026      	beq.n	4bd2 <__udivmoddi4+0x9e>
    4b84:	465b      	mov	r3, fp
    4b86:	1ba4      	subs	r4, r4, r6
    4b88:	41bd      	sbcs	r5, r7
    4b8a:	2b00      	cmp	r3, #0
    4b8c:	da00      	bge.n	4b90 <__udivmoddi4+0x5c>
    4b8e:	e079      	b.n	4c84 <__udivmoddi4+0x150>
    4b90:	2200      	movs	r2, #0
    4b92:	2300      	movs	r3, #0
    4b94:	9200      	str	r2, [sp, #0]
    4b96:	9301      	str	r3, [sp, #4]
    4b98:	2301      	movs	r3, #1
    4b9a:	465a      	mov	r2, fp
    4b9c:	4093      	lsls	r3, r2
    4b9e:	9301      	str	r3, [sp, #4]
    4ba0:	2301      	movs	r3, #1
    4ba2:	4642      	mov	r2, r8
    4ba4:	4093      	lsls	r3, r2
    4ba6:	9300      	str	r3, [sp, #0]
    4ba8:	e019      	b.n	4bde <__udivmoddi4+0xaa>
    4baa:	4282      	cmp	r2, r0
    4bac:	d9d0      	bls.n	4b50 <__udivmoddi4+0x1c>
    4bae:	2200      	movs	r2, #0
    4bb0:	2300      	movs	r3, #0
    4bb2:	9200      	str	r2, [sp, #0]
    4bb4:	9301      	str	r3, [sp, #4]
    4bb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4bb8:	2b00      	cmp	r3, #0
    4bba:	d001      	beq.n	4bc0 <__udivmoddi4+0x8c>
    4bbc:	601c      	str	r4, [r3, #0]
    4bbe:	605d      	str	r5, [r3, #4]
    4bc0:	9800      	ldr	r0, [sp, #0]
    4bc2:	9901      	ldr	r1, [sp, #4]
    4bc4:	b003      	add	sp, #12
    4bc6:	bc3c      	pop	{r2, r3, r4, r5}
    4bc8:	4690      	mov	r8, r2
    4bca:	4699      	mov	r9, r3
    4bcc:	46a2      	mov	sl, r4
    4bce:	46ab      	mov	fp, r5
    4bd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4bd2:	42a3      	cmp	r3, r4
    4bd4:	d9d6      	bls.n	4b84 <__udivmoddi4+0x50>
    4bd6:	2200      	movs	r2, #0
    4bd8:	2300      	movs	r3, #0
    4bda:	9200      	str	r2, [sp, #0]
    4bdc:	9301      	str	r3, [sp, #4]
    4bde:	4643      	mov	r3, r8
    4be0:	2b00      	cmp	r3, #0
    4be2:	d0e8      	beq.n	4bb6 <__udivmoddi4+0x82>
    4be4:	07fb      	lsls	r3, r7, #31
    4be6:	0872      	lsrs	r2, r6, #1
    4be8:	431a      	orrs	r2, r3
    4bea:	4646      	mov	r6, r8
    4bec:	087b      	lsrs	r3, r7, #1
    4bee:	e00e      	b.n	4c0e <__udivmoddi4+0xda>
    4bf0:	42ab      	cmp	r3, r5
    4bf2:	d101      	bne.n	4bf8 <__udivmoddi4+0xc4>
    4bf4:	42a2      	cmp	r2, r4
    4bf6:	d80c      	bhi.n	4c12 <__udivmoddi4+0xde>
    4bf8:	1aa4      	subs	r4, r4, r2
    4bfa:	419d      	sbcs	r5, r3
    4bfc:	2001      	movs	r0, #1
    4bfe:	1924      	adds	r4, r4, r4
    4c00:	416d      	adcs	r5, r5
    4c02:	2100      	movs	r1, #0
    4c04:	3e01      	subs	r6, #1
    4c06:	1824      	adds	r4, r4, r0
    4c08:	414d      	adcs	r5, r1
    4c0a:	2e00      	cmp	r6, #0
    4c0c:	d006      	beq.n	4c1c <__udivmoddi4+0xe8>
    4c0e:	42ab      	cmp	r3, r5
    4c10:	d9ee      	bls.n	4bf0 <__udivmoddi4+0xbc>
    4c12:	3e01      	subs	r6, #1
    4c14:	1924      	adds	r4, r4, r4
    4c16:	416d      	adcs	r5, r5
    4c18:	2e00      	cmp	r6, #0
    4c1a:	d1f8      	bne.n	4c0e <__udivmoddi4+0xda>
    4c1c:	465b      	mov	r3, fp
    4c1e:	9800      	ldr	r0, [sp, #0]
    4c20:	9901      	ldr	r1, [sp, #4]
    4c22:	1900      	adds	r0, r0, r4
    4c24:	4169      	adcs	r1, r5
    4c26:	2b00      	cmp	r3, #0
    4c28:	db22      	blt.n	4c70 <__udivmoddi4+0x13c>
    4c2a:	002b      	movs	r3, r5
    4c2c:	465a      	mov	r2, fp
    4c2e:	40d3      	lsrs	r3, r2
    4c30:	002a      	movs	r2, r5
    4c32:	4644      	mov	r4, r8
    4c34:	40e2      	lsrs	r2, r4
    4c36:	001c      	movs	r4, r3
    4c38:	465b      	mov	r3, fp
    4c3a:	0015      	movs	r5, r2
    4c3c:	2b00      	cmp	r3, #0
    4c3e:	db2c      	blt.n	4c9a <__udivmoddi4+0x166>
    4c40:	0026      	movs	r6, r4
    4c42:	409e      	lsls	r6, r3
    4c44:	0033      	movs	r3, r6
    4c46:	0026      	movs	r6, r4
    4c48:	4647      	mov	r7, r8
    4c4a:	40be      	lsls	r6, r7
    4c4c:	0032      	movs	r2, r6
    4c4e:	1a80      	subs	r0, r0, r2
    4c50:	4199      	sbcs	r1, r3
    4c52:	9000      	str	r0, [sp, #0]
    4c54:	9101      	str	r1, [sp, #4]
    4c56:	e7ae      	b.n	4bb6 <__udivmoddi4+0x82>
    4c58:	4642      	mov	r2, r8
    4c5a:	2320      	movs	r3, #32
    4c5c:	1a9b      	subs	r3, r3, r2
    4c5e:	4652      	mov	r2, sl
    4c60:	40da      	lsrs	r2, r3
    4c62:	4641      	mov	r1, r8
    4c64:	0013      	movs	r3, r2
    4c66:	464a      	mov	r2, r9
    4c68:	408a      	lsls	r2, r1
    4c6a:	0017      	movs	r7, r2
    4c6c:	431f      	orrs	r7, r3
    4c6e:	e782      	b.n	4b76 <__udivmoddi4+0x42>
    4c70:	4642      	mov	r2, r8
    4c72:	2320      	movs	r3, #32
    4c74:	1a9b      	subs	r3, r3, r2
    4c76:	002a      	movs	r2, r5
    4c78:	4646      	mov	r6, r8
    4c7a:	409a      	lsls	r2, r3
    4c7c:	0023      	movs	r3, r4
    4c7e:	40f3      	lsrs	r3, r6
    4c80:	4313      	orrs	r3, r2
    4c82:	e7d5      	b.n	4c30 <__udivmoddi4+0xfc>
    4c84:	4642      	mov	r2, r8
    4c86:	2320      	movs	r3, #32
    4c88:	2100      	movs	r1, #0
    4c8a:	1a9b      	subs	r3, r3, r2
    4c8c:	2200      	movs	r2, #0
    4c8e:	9100      	str	r1, [sp, #0]
    4c90:	9201      	str	r2, [sp, #4]
    4c92:	2201      	movs	r2, #1
    4c94:	40da      	lsrs	r2, r3
    4c96:	9201      	str	r2, [sp, #4]
    4c98:	e782      	b.n	4ba0 <__udivmoddi4+0x6c>
    4c9a:	4642      	mov	r2, r8
    4c9c:	2320      	movs	r3, #32
    4c9e:	0026      	movs	r6, r4
    4ca0:	1a9b      	subs	r3, r3, r2
    4ca2:	40de      	lsrs	r6, r3
    4ca4:	002f      	movs	r7, r5
    4ca6:	46b4      	mov	ip, r6
    4ca8:	4097      	lsls	r7, r2
    4caa:	4666      	mov	r6, ip
    4cac:	003b      	movs	r3, r7
    4cae:	4333      	orrs	r3, r6
    4cb0:	e7c9      	b.n	4c46 <__udivmoddi4+0x112>
    4cb2:	46c0      	nop			; (mov r8, r8)

00004cb4 <__eqsf2>:
    4cb4:	b570      	push	{r4, r5, r6, lr}
    4cb6:	0042      	lsls	r2, r0, #1
    4cb8:	0245      	lsls	r5, r0, #9
    4cba:	024e      	lsls	r6, r1, #9
    4cbc:	004c      	lsls	r4, r1, #1
    4cbe:	0fc3      	lsrs	r3, r0, #31
    4cc0:	0a6d      	lsrs	r5, r5, #9
    4cc2:	0e12      	lsrs	r2, r2, #24
    4cc4:	0a76      	lsrs	r6, r6, #9
    4cc6:	0e24      	lsrs	r4, r4, #24
    4cc8:	0fc9      	lsrs	r1, r1, #31
    4cca:	2001      	movs	r0, #1
    4ccc:	2aff      	cmp	r2, #255	; 0xff
    4cce:	d006      	beq.n	4cde <__eqsf2+0x2a>
    4cd0:	2cff      	cmp	r4, #255	; 0xff
    4cd2:	d003      	beq.n	4cdc <__eqsf2+0x28>
    4cd4:	42a2      	cmp	r2, r4
    4cd6:	d101      	bne.n	4cdc <__eqsf2+0x28>
    4cd8:	42b5      	cmp	r5, r6
    4cda:	d006      	beq.n	4cea <__eqsf2+0x36>
    4cdc:	bd70      	pop	{r4, r5, r6, pc}
    4cde:	2d00      	cmp	r5, #0
    4ce0:	d1fc      	bne.n	4cdc <__eqsf2+0x28>
    4ce2:	2cff      	cmp	r4, #255	; 0xff
    4ce4:	d1fa      	bne.n	4cdc <__eqsf2+0x28>
    4ce6:	2e00      	cmp	r6, #0
    4ce8:	d1f8      	bne.n	4cdc <__eqsf2+0x28>
    4cea:	428b      	cmp	r3, r1
    4cec:	d006      	beq.n	4cfc <__eqsf2+0x48>
    4cee:	2001      	movs	r0, #1
    4cf0:	2a00      	cmp	r2, #0
    4cf2:	d1f3      	bne.n	4cdc <__eqsf2+0x28>
    4cf4:	0028      	movs	r0, r5
    4cf6:	1e45      	subs	r5, r0, #1
    4cf8:	41a8      	sbcs	r0, r5
    4cfa:	e7ef      	b.n	4cdc <__eqsf2+0x28>
    4cfc:	2000      	movs	r0, #0
    4cfe:	e7ed      	b.n	4cdc <__eqsf2+0x28>

00004d00 <__gesf2>:
    4d00:	b5f0      	push	{r4, r5, r6, r7, lr}
    4d02:	0042      	lsls	r2, r0, #1
    4d04:	0245      	lsls	r5, r0, #9
    4d06:	024c      	lsls	r4, r1, #9
    4d08:	0fc3      	lsrs	r3, r0, #31
    4d0a:	0048      	lsls	r0, r1, #1
    4d0c:	0a6d      	lsrs	r5, r5, #9
    4d0e:	0e12      	lsrs	r2, r2, #24
    4d10:	0a64      	lsrs	r4, r4, #9
    4d12:	0e00      	lsrs	r0, r0, #24
    4d14:	0fc9      	lsrs	r1, r1, #31
    4d16:	2aff      	cmp	r2, #255	; 0xff
    4d18:	d01e      	beq.n	4d58 <__gesf2+0x58>
    4d1a:	28ff      	cmp	r0, #255	; 0xff
    4d1c:	d021      	beq.n	4d62 <__gesf2+0x62>
    4d1e:	2a00      	cmp	r2, #0
    4d20:	d10a      	bne.n	4d38 <__gesf2+0x38>
    4d22:	426e      	negs	r6, r5
    4d24:	416e      	adcs	r6, r5
    4d26:	b2f6      	uxtb	r6, r6
    4d28:	2800      	cmp	r0, #0
    4d2a:	d10f      	bne.n	4d4c <__gesf2+0x4c>
    4d2c:	2c00      	cmp	r4, #0
    4d2e:	d10d      	bne.n	4d4c <__gesf2+0x4c>
    4d30:	2000      	movs	r0, #0
    4d32:	2d00      	cmp	r5, #0
    4d34:	d009      	beq.n	4d4a <__gesf2+0x4a>
    4d36:	e005      	b.n	4d44 <__gesf2+0x44>
    4d38:	2800      	cmp	r0, #0
    4d3a:	d101      	bne.n	4d40 <__gesf2+0x40>
    4d3c:	2c00      	cmp	r4, #0
    4d3e:	d001      	beq.n	4d44 <__gesf2+0x44>
    4d40:	428b      	cmp	r3, r1
    4d42:	d011      	beq.n	4d68 <__gesf2+0x68>
    4d44:	2101      	movs	r1, #1
    4d46:	4258      	negs	r0, r3
    4d48:	4308      	orrs	r0, r1
    4d4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4d4c:	2e00      	cmp	r6, #0
    4d4e:	d0f7      	beq.n	4d40 <__gesf2+0x40>
    4d50:	2001      	movs	r0, #1
    4d52:	3901      	subs	r1, #1
    4d54:	4308      	orrs	r0, r1
    4d56:	e7f8      	b.n	4d4a <__gesf2+0x4a>
    4d58:	2d00      	cmp	r5, #0
    4d5a:	d0de      	beq.n	4d1a <__gesf2+0x1a>
    4d5c:	2002      	movs	r0, #2
    4d5e:	4240      	negs	r0, r0
    4d60:	e7f3      	b.n	4d4a <__gesf2+0x4a>
    4d62:	2c00      	cmp	r4, #0
    4d64:	d0db      	beq.n	4d1e <__gesf2+0x1e>
    4d66:	e7f9      	b.n	4d5c <__gesf2+0x5c>
    4d68:	4282      	cmp	r2, r0
    4d6a:	dceb      	bgt.n	4d44 <__gesf2+0x44>
    4d6c:	db04      	blt.n	4d78 <__gesf2+0x78>
    4d6e:	42a5      	cmp	r5, r4
    4d70:	d8e8      	bhi.n	4d44 <__gesf2+0x44>
    4d72:	2000      	movs	r0, #0
    4d74:	42a5      	cmp	r5, r4
    4d76:	d2e8      	bcs.n	4d4a <__gesf2+0x4a>
    4d78:	2101      	movs	r1, #1
    4d7a:	1e58      	subs	r0, r3, #1
    4d7c:	4308      	orrs	r0, r1
    4d7e:	e7e4      	b.n	4d4a <__gesf2+0x4a>

00004d80 <__lesf2>:
    4d80:	b5f0      	push	{r4, r5, r6, r7, lr}
    4d82:	0042      	lsls	r2, r0, #1
    4d84:	024d      	lsls	r5, r1, #9
    4d86:	004c      	lsls	r4, r1, #1
    4d88:	0246      	lsls	r6, r0, #9
    4d8a:	0a76      	lsrs	r6, r6, #9
    4d8c:	0e12      	lsrs	r2, r2, #24
    4d8e:	0fc3      	lsrs	r3, r0, #31
    4d90:	0a6d      	lsrs	r5, r5, #9
    4d92:	0e24      	lsrs	r4, r4, #24
    4d94:	0fc9      	lsrs	r1, r1, #31
    4d96:	2aff      	cmp	r2, #255	; 0xff
    4d98:	d016      	beq.n	4dc8 <__lesf2+0x48>
    4d9a:	2cff      	cmp	r4, #255	; 0xff
    4d9c:	d018      	beq.n	4dd0 <__lesf2+0x50>
    4d9e:	2a00      	cmp	r2, #0
    4da0:	d10a      	bne.n	4db8 <__lesf2+0x38>
    4da2:	4270      	negs	r0, r6
    4da4:	4170      	adcs	r0, r6
    4da6:	b2c0      	uxtb	r0, r0
    4da8:	2c00      	cmp	r4, #0
    4daa:	d015      	beq.n	4dd8 <__lesf2+0x58>
    4dac:	2800      	cmp	r0, #0
    4dae:	d005      	beq.n	4dbc <__lesf2+0x3c>
    4db0:	2001      	movs	r0, #1
    4db2:	3901      	subs	r1, #1
    4db4:	4308      	orrs	r0, r1
    4db6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4db8:	2c00      	cmp	r4, #0
    4dba:	d013      	beq.n	4de4 <__lesf2+0x64>
    4dbc:	4299      	cmp	r1, r3
    4dbe:	d014      	beq.n	4dea <__lesf2+0x6a>
    4dc0:	2001      	movs	r0, #1
    4dc2:	425b      	negs	r3, r3
    4dc4:	4318      	orrs	r0, r3
    4dc6:	e7f6      	b.n	4db6 <__lesf2+0x36>
    4dc8:	2002      	movs	r0, #2
    4dca:	2e00      	cmp	r6, #0
    4dcc:	d1f3      	bne.n	4db6 <__lesf2+0x36>
    4dce:	e7e4      	b.n	4d9a <__lesf2+0x1a>
    4dd0:	2002      	movs	r0, #2
    4dd2:	2d00      	cmp	r5, #0
    4dd4:	d1ef      	bne.n	4db6 <__lesf2+0x36>
    4dd6:	e7e2      	b.n	4d9e <__lesf2+0x1e>
    4dd8:	2d00      	cmp	r5, #0
    4dda:	d1e7      	bne.n	4dac <__lesf2+0x2c>
    4ddc:	2000      	movs	r0, #0
    4dde:	2e00      	cmp	r6, #0
    4de0:	d0e9      	beq.n	4db6 <__lesf2+0x36>
    4de2:	e7ed      	b.n	4dc0 <__lesf2+0x40>
    4de4:	2d00      	cmp	r5, #0
    4de6:	d1e9      	bne.n	4dbc <__lesf2+0x3c>
    4de8:	e7ea      	b.n	4dc0 <__lesf2+0x40>
    4dea:	42a2      	cmp	r2, r4
    4dec:	dc06      	bgt.n	4dfc <__lesf2+0x7c>
    4dee:	dbdf      	blt.n	4db0 <__lesf2+0x30>
    4df0:	42ae      	cmp	r6, r5
    4df2:	d803      	bhi.n	4dfc <__lesf2+0x7c>
    4df4:	2000      	movs	r0, #0
    4df6:	42ae      	cmp	r6, r5
    4df8:	d3da      	bcc.n	4db0 <__lesf2+0x30>
    4dfa:	e7dc      	b.n	4db6 <__lesf2+0x36>
    4dfc:	2001      	movs	r0, #1
    4dfe:	4249      	negs	r1, r1
    4e00:	4308      	orrs	r0, r1
    4e02:	e7d8      	b.n	4db6 <__lesf2+0x36>

00004e04 <__aeabi_fmul>:
    4e04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4e06:	4657      	mov	r7, sl
    4e08:	464e      	mov	r6, r9
    4e0a:	4645      	mov	r5, r8
    4e0c:	46de      	mov	lr, fp
    4e0e:	b5e0      	push	{r5, r6, r7, lr}
    4e10:	0247      	lsls	r7, r0, #9
    4e12:	0046      	lsls	r6, r0, #1
    4e14:	4688      	mov	r8, r1
    4e16:	0a7f      	lsrs	r7, r7, #9
    4e18:	0e36      	lsrs	r6, r6, #24
    4e1a:	0fc4      	lsrs	r4, r0, #31
    4e1c:	2e00      	cmp	r6, #0
    4e1e:	d047      	beq.n	4eb0 <__aeabi_fmul+0xac>
    4e20:	2eff      	cmp	r6, #255	; 0xff
    4e22:	d024      	beq.n	4e6e <__aeabi_fmul+0x6a>
    4e24:	00fb      	lsls	r3, r7, #3
    4e26:	2780      	movs	r7, #128	; 0x80
    4e28:	04ff      	lsls	r7, r7, #19
    4e2a:	431f      	orrs	r7, r3
    4e2c:	2300      	movs	r3, #0
    4e2e:	4699      	mov	r9, r3
    4e30:	469a      	mov	sl, r3
    4e32:	3e7f      	subs	r6, #127	; 0x7f
    4e34:	4643      	mov	r3, r8
    4e36:	025d      	lsls	r5, r3, #9
    4e38:	0058      	lsls	r0, r3, #1
    4e3a:	0fdb      	lsrs	r3, r3, #31
    4e3c:	0a6d      	lsrs	r5, r5, #9
    4e3e:	0e00      	lsrs	r0, r0, #24
    4e40:	4698      	mov	r8, r3
    4e42:	d043      	beq.n	4ecc <__aeabi_fmul+0xc8>
    4e44:	28ff      	cmp	r0, #255	; 0xff
    4e46:	d03b      	beq.n	4ec0 <__aeabi_fmul+0xbc>
    4e48:	00eb      	lsls	r3, r5, #3
    4e4a:	2580      	movs	r5, #128	; 0x80
    4e4c:	2200      	movs	r2, #0
    4e4e:	04ed      	lsls	r5, r5, #19
    4e50:	431d      	orrs	r5, r3
    4e52:	387f      	subs	r0, #127	; 0x7f
    4e54:	1836      	adds	r6, r6, r0
    4e56:	1c73      	adds	r3, r6, #1
    4e58:	4641      	mov	r1, r8
    4e5a:	469b      	mov	fp, r3
    4e5c:	464b      	mov	r3, r9
    4e5e:	4061      	eors	r1, r4
    4e60:	4313      	orrs	r3, r2
    4e62:	2b0f      	cmp	r3, #15
    4e64:	d864      	bhi.n	4f30 <__aeabi_fmul+0x12c>
    4e66:	4875      	ldr	r0, [pc, #468]	; (503c <__aeabi_fmul+0x238>)
    4e68:	009b      	lsls	r3, r3, #2
    4e6a:	58c3      	ldr	r3, [r0, r3]
    4e6c:	469f      	mov	pc, r3
    4e6e:	2f00      	cmp	r7, #0
    4e70:	d142      	bne.n	4ef8 <__aeabi_fmul+0xf4>
    4e72:	2308      	movs	r3, #8
    4e74:	4699      	mov	r9, r3
    4e76:	3b06      	subs	r3, #6
    4e78:	26ff      	movs	r6, #255	; 0xff
    4e7a:	469a      	mov	sl, r3
    4e7c:	e7da      	b.n	4e34 <__aeabi_fmul+0x30>
    4e7e:	4641      	mov	r1, r8
    4e80:	2a02      	cmp	r2, #2
    4e82:	d028      	beq.n	4ed6 <__aeabi_fmul+0xd2>
    4e84:	2a03      	cmp	r2, #3
    4e86:	d100      	bne.n	4e8a <__aeabi_fmul+0x86>
    4e88:	e0ce      	b.n	5028 <__aeabi_fmul+0x224>
    4e8a:	2a01      	cmp	r2, #1
    4e8c:	d000      	beq.n	4e90 <__aeabi_fmul+0x8c>
    4e8e:	e0ac      	b.n	4fea <__aeabi_fmul+0x1e6>
    4e90:	4011      	ands	r1, r2
    4e92:	2000      	movs	r0, #0
    4e94:	2200      	movs	r2, #0
    4e96:	b2cc      	uxtb	r4, r1
    4e98:	0240      	lsls	r0, r0, #9
    4e9a:	05d2      	lsls	r2, r2, #23
    4e9c:	0a40      	lsrs	r0, r0, #9
    4e9e:	07e4      	lsls	r4, r4, #31
    4ea0:	4310      	orrs	r0, r2
    4ea2:	4320      	orrs	r0, r4
    4ea4:	bc3c      	pop	{r2, r3, r4, r5}
    4ea6:	4690      	mov	r8, r2
    4ea8:	4699      	mov	r9, r3
    4eaa:	46a2      	mov	sl, r4
    4eac:	46ab      	mov	fp, r5
    4eae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4eb0:	2f00      	cmp	r7, #0
    4eb2:	d115      	bne.n	4ee0 <__aeabi_fmul+0xdc>
    4eb4:	2304      	movs	r3, #4
    4eb6:	4699      	mov	r9, r3
    4eb8:	3b03      	subs	r3, #3
    4eba:	2600      	movs	r6, #0
    4ebc:	469a      	mov	sl, r3
    4ebe:	e7b9      	b.n	4e34 <__aeabi_fmul+0x30>
    4ec0:	20ff      	movs	r0, #255	; 0xff
    4ec2:	2202      	movs	r2, #2
    4ec4:	2d00      	cmp	r5, #0
    4ec6:	d0c5      	beq.n	4e54 <__aeabi_fmul+0x50>
    4ec8:	2203      	movs	r2, #3
    4eca:	e7c3      	b.n	4e54 <__aeabi_fmul+0x50>
    4ecc:	2d00      	cmp	r5, #0
    4ece:	d119      	bne.n	4f04 <__aeabi_fmul+0x100>
    4ed0:	2000      	movs	r0, #0
    4ed2:	2201      	movs	r2, #1
    4ed4:	e7be      	b.n	4e54 <__aeabi_fmul+0x50>
    4ed6:	2401      	movs	r4, #1
    4ed8:	22ff      	movs	r2, #255	; 0xff
    4eda:	400c      	ands	r4, r1
    4edc:	2000      	movs	r0, #0
    4ede:	e7db      	b.n	4e98 <__aeabi_fmul+0x94>
    4ee0:	0038      	movs	r0, r7
    4ee2:	f001 fd4d 	bl	6980 <__clzsi2>
    4ee6:	2676      	movs	r6, #118	; 0x76
    4ee8:	1f43      	subs	r3, r0, #5
    4eea:	409f      	lsls	r7, r3
    4eec:	2300      	movs	r3, #0
    4eee:	4276      	negs	r6, r6
    4ef0:	1a36      	subs	r6, r6, r0
    4ef2:	4699      	mov	r9, r3
    4ef4:	469a      	mov	sl, r3
    4ef6:	e79d      	b.n	4e34 <__aeabi_fmul+0x30>
    4ef8:	230c      	movs	r3, #12
    4efa:	4699      	mov	r9, r3
    4efc:	3b09      	subs	r3, #9
    4efe:	26ff      	movs	r6, #255	; 0xff
    4f00:	469a      	mov	sl, r3
    4f02:	e797      	b.n	4e34 <__aeabi_fmul+0x30>
    4f04:	0028      	movs	r0, r5
    4f06:	f001 fd3b 	bl	6980 <__clzsi2>
    4f0a:	1f43      	subs	r3, r0, #5
    4f0c:	409d      	lsls	r5, r3
    4f0e:	2376      	movs	r3, #118	; 0x76
    4f10:	425b      	negs	r3, r3
    4f12:	1a18      	subs	r0, r3, r0
    4f14:	2200      	movs	r2, #0
    4f16:	e79d      	b.n	4e54 <__aeabi_fmul+0x50>
    4f18:	2080      	movs	r0, #128	; 0x80
    4f1a:	2400      	movs	r4, #0
    4f1c:	03c0      	lsls	r0, r0, #15
    4f1e:	22ff      	movs	r2, #255	; 0xff
    4f20:	e7ba      	b.n	4e98 <__aeabi_fmul+0x94>
    4f22:	003d      	movs	r5, r7
    4f24:	4652      	mov	r2, sl
    4f26:	e7ab      	b.n	4e80 <__aeabi_fmul+0x7c>
    4f28:	003d      	movs	r5, r7
    4f2a:	0021      	movs	r1, r4
    4f2c:	4652      	mov	r2, sl
    4f2e:	e7a7      	b.n	4e80 <__aeabi_fmul+0x7c>
    4f30:	0c3b      	lsrs	r3, r7, #16
    4f32:	469c      	mov	ip, r3
    4f34:	042a      	lsls	r2, r5, #16
    4f36:	0c12      	lsrs	r2, r2, #16
    4f38:	0c2b      	lsrs	r3, r5, #16
    4f3a:	0014      	movs	r4, r2
    4f3c:	4660      	mov	r0, ip
    4f3e:	4665      	mov	r5, ip
    4f40:	043f      	lsls	r7, r7, #16
    4f42:	0c3f      	lsrs	r7, r7, #16
    4f44:	437c      	muls	r4, r7
    4f46:	4342      	muls	r2, r0
    4f48:	435d      	muls	r5, r3
    4f4a:	437b      	muls	r3, r7
    4f4c:	0c27      	lsrs	r7, r4, #16
    4f4e:	189b      	adds	r3, r3, r2
    4f50:	18ff      	adds	r7, r7, r3
    4f52:	42ba      	cmp	r2, r7
    4f54:	d903      	bls.n	4f5e <__aeabi_fmul+0x15a>
    4f56:	2380      	movs	r3, #128	; 0x80
    4f58:	025b      	lsls	r3, r3, #9
    4f5a:	469c      	mov	ip, r3
    4f5c:	4465      	add	r5, ip
    4f5e:	0424      	lsls	r4, r4, #16
    4f60:	043a      	lsls	r2, r7, #16
    4f62:	0c24      	lsrs	r4, r4, #16
    4f64:	1912      	adds	r2, r2, r4
    4f66:	0193      	lsls	r3, r2, #6
    4f68:	1e5c      	subs	r4, r3, #1
    4f6a:	41a3      	sbcs	r3, r4
    4f6c:	0c3f      	lsrs	r7, r7, #16
    4f6e:	0e92      	lsrs	r2, r2, #26
    4f70:	197d      	adds	r5, r7, r5
    4f72:	431a      	orrs	r2, r3
    4f74:	01ad      	lsls	r5, r5, #6
    4f76:	4315      	orrs	r5, r2
    4f78:	012b      	lsls	r3, r5, #4
    4f7a:	d504      	bpl.n	4f86 <__aeabi_fmul+0x182>
    4f7c:	2301      	movs	r3, #1
    4f7e:	465e      	mov	r6, fp
    4f80:	086a      	lsrs	r2, r5, #1
    4f82:	401d      	ands	r5, r3
    4f84:	4315      	orrs	r5, r2
    4f86:	0032      	movs	r2, r6
    4f88:	327f      	adds	r2, #127	; 0x7f
    4f8a:	2a00      	cmp	r2, #0
    4f8c:	dd25      	ble.n	4fda <__aeabi_fmul+0x1d6>
    4f8e:	076b      	lsls	r3, r5, #29
    4f90:	d004      	beq.n	4f9c <__aeabi_fmul+0x198>
    4f92:	230f      	movs	r3, #15
    4f94:	402b      	ands	r3, r5
    4f96:	2b04      	cmp	r3, #4
    4f98:	d000      	beq.n	4f9c <__aeabi_fmul+0x198>
    4f9a:	3504      	adds	r5, #4
    4f9c:	012b      	lsls	r3, r5, #4
    4f9e:	d503      	bpl.n	4fa8 <__aeabi_fmul+0x1a4>
    4fa0:	0032      	movs	r2, r6
    4fa2:	4b27      	ldr	r3, [pc, #156]	; (5040 <__aeabi_fmul+0x23c>)
    4fa4:	3280      	adds	r2, #128	; 0x80
    4fa6:	401d      	ands	r5, r3
    4fa8:	2afe      	cmp	r2, #254	; 0xfe
    4faa:	dc94      	bgt.n	4ed6 <__aeabi_fmul+0xd2>
    4fac:	2401      	movs	r4, #1
    4fae:	01a8      	lsls	r0, r5, #6
    4fb0:	0a40      	lsrs	r0, r0, #9
    4fb2:	b2d2      	uxtb	r2, r2
    4fb4:	400c      	ands	r4, r1
    4fb6:	e76f      	b.n	4e98 <__aeabi_fmul+0x94>
    4fb8:	2080      	movs	r0, #128	; 0x80
    4fba:	03c0      	lsls	r0, r0, #15
    4fbc:	4207      	tst	r7, r0
    4fbe:	d007      	beq.n	4fd0 <__aeabi_fmul+0x1cc>
    4fc0:	4205      	tst	r5, r0
    4fc2:	d105      	bne.n	4fd0 <__aeabi_fmul+0x1cc>
    4fc4:	4328      	orrs	r0, r5
    4fc6:	0240      	lsls	r0, r0, #9
    4fc8:	0a40      	lsrs	r0, r0, #9
    4fca:	4644      	mov	r4, r8
    4fcc:	22ff      	movs	r2, #255	; 0xff
    4fce:	e763      	b.n	4e98 <__aeabi_fmul+0x94>
    4fd0:	4338      	orrs	r0, r7
    4fd2:	0240      	lsls	r0, r0, #9
    4fd4:	0a40      	lsrs	r0, r0, #9
    4fd6:	22ff      	movs	r2, #255	; 0xff
    4fd8:	e75e      	b.n	4e98 <__aeabi_fmul+0x94>
    4fda:	2401      	movs	r4, #1
    4fdc:	1aa3      	subs	r3, r4, r2
    4fde:	2b1b      	cmp	r3, #27
    4fe0:	dd05      	ble.n	4fee <__aeabi_fmul+0x1ea>
    4fe2:	400c      	ands	r4, r1
    4fe4:	2200      	movs	r2, #0
    4fe6:	2000      	movs	r0, #0
    4fe8:	e756      	b.n	4e98 <__aeabi_fmul+0x94>
    4fea:	465e      	mov	r6, fp
    4fec:	e7cb      	b.n	4f86 <__aeabi_fmul+0x182>
    4fee:	002a      	movs	r2, r5
    4ff0:	2020      	movs	r0, #32
    4ff2:	40da      	lsrs	r2, r3
    4ff4:	1ac3      	subs	r3, r0, r3
    4ff6:	409d      	lsls	r5, r3
    4ff8:	002b      	movs	r3, r5
    4ffa:	1e5d      	subs	r5, r3, #1
    4ffc:	41ab      	sbcs	r3, r5
    4ffe:	4313      	orrs	r3, r2
    5000:	075a      	lsls	r2, r3, #29
    5002:	d004      	beq.n	500e <__aeabi_fmul+0x20a>
    5004:	220f      	movs	r2, #15
    5006:	401a      	ands	r2, r3
    5008:	2a04      	cmp	r2, #4
    500a:	d000      	beq.n	500e <__aeabi_fmul+0x20a>
    500c:	3304      	adds	r3, #4
    500e:	015a      	lsls	r2, r3, #5
    5010:	d504      	bpl.n	501c <__aeabi_fmul+0x218>
    5012:	2401      	movs	r4, #1
    5014:	2201      	movs	r2, #1
    5016:	400c      	ands	r4, r1
    5018:	2000      	movs	r0, #0
    501a:	e73d      	b.n	4e98 <__aeabi_fmul+0x94>
    501c:	2401      	movs	r4, #1
    501e:	019b      	lsls	r3, r3, #6
    5020:	0a58      	lsrs	r0, r3, #9
    5022:	400c      	ands	r4, r1
    5024:	2200      	movs	r2, #0
    5026:	e737      	b.n	4e98 <__aeabi_fmul+0x94>
    5028:	2080      	movs	r0, #128	; 0x80
    502a:	2401      	movs	r4, #1
    502c:	03c0      	lsls	r0, r0, #15
    502e:	4328      	orrs	r0, r5
    5030:	0240      	lsls	r0, r0, #9
    5032:	0a40      	lsrs	r0, r0, #9
    5034:	400c      	ands	r4, r1
    5036:	22ff      	movs	r2, #255	; 0xff
    5038:	e72e      	b.n	4e98 <__aeabi_fmul+0x94>
    503a:	46c0      	nop			; (mov r8, r8)
    503c:	00013788 	.word	0x00013788
    5040:	f7ffffff 	.word	0xf7ffffff

00005044 <__aeabi_fsub>:
    5044:	b5f0      	push	{r4, r5, r6, r7, lr}
    5046:	464f      	mov	r7, r9
    5048:	46d6      	mov	lr, sl
    504a:	4646      	mov	r6, r8
    504c:	0044      	lsls	r4, r0, #1
    504e:	b5c0      	push	{r6, r7, lr}
    5050:	0fc2      	lsrs	r2, r0, #31
    5052:	0247      	lsls	r7, r0, #9
    5054:	0248      	lsls	r0, r1, #9
    5056:	0a40      	lsrs	r0, r0, #9
    5058:	4684      	mov	ip, r0
    505a:	4666      	mov	r6, ip
    505c:	0a7b      	lsrs	r3, r7, #9
    505e:	0048      	lsls	r0, r1, #1
    5060:	0fc9      	lsrs	r1, r1, #31
    5062:	469a      	mov	sl, r3
    5064:	0e24      	lsrs	r4, r4, #24
    5066:	0015      	movs	r5, r2
    5068:	00db      	lsls	r3, r3, #3
    506a:	0e00      	lsrs	r0, r0, #24
    506c:	4689      	mov	r9, r1
    506e:	00f6      	lsls	r6, r6, #3
    5070:	28ff      	cmp	r0, #255	; 0xff
    5072:	d100      	bne.n	5076 <__aeabi_fsub+0x32>
    5074:	e08f      	b.n	5196 <__aeabi_fsub+0x152>
    5076:	2101      	movs	r1, #1
    5078:	464f      	mov	r7, r9
    507a:	404f      	eors	r7, r1
    507c:	0039      	movs	r1, r7
    507e:	4291      	cmp	r1, r2
    5080:	d066      	beq.n	5150 <__aeabi_fsub+0x10c>
    5082:	1a22      	subs	r2, r4, r0
    5084:	2a00      	cmp	r2, #0
    5086:	dc00      	bgt.n	508a <__aeabi_fsub+0x46>
    5088:	e09d      	b.n	51c6 <__aeabi_fsub+0x182>
    508a:	2800      	cmp	r0, #0
    508c:	d13d      	bne.n	510a <__aeabi_fsub+0xc6>
    508e:	2e00      	cmp	r6, #0
    5090:	d100      	bne.n	5094 <__aeabi_fsub+0x50>
    5092:	e08b      	b.n	51ac <__aeabi_fsub+0x168>
    5094:	1e51      	subs	r1, r2, #1
    5096:	2900      	cmp	r1, #0
    5098:	d000      	beq.n	509c <__aeabi_fsub+0x58>
    509a:	e0b5      	b.n	5208 <__aeabi_fsub+0x1c4>
    509c:	2401      	movs	r4, #1
    509e:	1b9b      	subs	r3, r3, r6
    50a0:	015a      	lsls	r2, r3, #5
    50a2:	d544      	bpl.n	512e <__aeabi_fsub+0xea>
    50a4:	019b      	lsls	r3, r3, #6
    50a6:	099f      	lsrs	r7, r3, #6
    50a8:	0038      	movs	r0, r7
    50aa:	f001 fc69 	bl	6980 <__clzsi2>
    50ae:	3805      	subs	r0, #5
    50b0:	4087      	lsls	r7, r0
    50b2:	4284      	cmp	r4, r0
    50b4:	dd00      	ble.n	50b8 <__aeabi_fsub+0x74>
    50b6:	e096      	b.n	51e6 <__aeabi_fsub+0x1a2>
    50b8:	1b04      	subs	r4, r0, r4
    50ba:	003a      	movs	r2, r7
    50bc:	2020      	movs	r0, #32
    50be:	3401      	adds	r4, #1
    50c0:	40e2      	lsrs	r2, r4
    50c2:	1b04      	subs	r4, r0, r4
    50c4:	40a7      	lsls	r7, r4
    50c6:	003b      	movs	r3, r7
    50c8:	1e5f      	subs	r7, r3, #1
    50ca:	41bb      	sbcs	r3, r7
    50cc:	2400      	movs	r4, #0
    50ce:	4313      	orrs	r3, r2
    50d0:	075a      	lsls	r2, r3, #29
    50d2:	d004      	beq.n	50de <__aeabi_fsub+0x9a>
    50d4:	220f      	movs	r2, #15
    50d6:	401a      	ands	r2, r3
    50d8:	2a04      	cmp	r2, #4
    50da:	d000      	beq.n	50de <__aeabi_fsub+0x9a>
    50dc:	3304      	adds	r3, #4
    50de:	015a      	lsls	r2, r3, #5
    50e0:	d527      	bpl.n	5132 <__aeabi_fsub+0xee>
    50e2:	3401      	adds	r4, #1
    50e4:	2cff      	cmp	r4, #255	; 0xff
    50e6:	d100      	bne.n	50ea <__aeabi_fsub+0xa6>
    50e8:	e079      	b.n	51de <__aeabi_fsub+0x19a>
    50ea:	2201      	movs	r2, #1
    50ec:	019b      	lsls	r3, r3, #6
    50ee:	0a5b      	lsrs	r3, r3, #9
    50f0:	b2e4      	uxtb	r4, r4
    50f2:	402a      	ands	r2, r5
    50f4:	025b      	lsls	r3, r3, #9
    50f6:	05e4      	lsls	r4, r4, #23
    50f8:	0a58      	lsrs	r0, r3, #9
    50fa:	07d2      	lsls	r2, r2, #31
    50fc:	4320      	orrs	r0, r4
    50fe:	4310      	orrs	r0, r2
    5100:	bc1c      	pop	{r2, r3, r4}
    5102:	4690      	mov	r8, r2
    5104:	4699      	mov	r9, r3
    5106:	46a2      	mov	sl, r4
    5108:	bdf0      	pop	{r4, r5, r6, r7, pc}
    510a:	2cff      	cmp	r4, #255	; 0xff
    510c:	d0e0      	beq.n	50d0 <__aeabi_fsub+0x8c>
    510e:	2180      	movs	r1, #128	; 0x80
    5110:	04c9      	lsls	r1, r1, #19
    5112:	430e      	orrs	r6, r1
    5114:	2a1b      	cmp	r2, #27
    5116:	dc7b      	bgt.n	5210 <__aeabi_fsub+0x1cc>
    5118:	0031      	movs	r1, r6
    511a:	2020      	movs	r0, #32
    511c:	40d1      	lsrs	r1, r2
    511e:	1a82      	subs	r2, r0, r2
    5120:	4096      	lsls	r6, r2
    5122:	1e72      	subs	r2, r6, #1
    5124:	4196      	sbcs	r6, r2
    5126:	430e      	orrs	r6, r1
    5128:	1b9b      	subs	r3, r3, r6
    512a:	015a      	lsls	r2, r3, #5
    512c:	d4ba      	bmi.n	50a4 <__aeabi_fsub+0x60>
    512e:	075a      	lsls	r2, r3, #29
    5130:	d1d0      	bne.n	50d4 <__aeabi_fsub+0x90>
    5132:	2201      	movs	r2, #1
    5134:	08df      	lsrs	r7, r3, #3
    5136:	402a      	ands	r2, r5
    5138:	2cff      	cmp	r4, #255	; 0xff
    513a:	d133      	bne.n	51a4 <__aeabi_fsub+0x160>
    513c:	2f00      	cmp	r7, #0
    513e:	d100      	bne.n	5142 <__aeabi_fsub+0xfe>
    5140:	e0a8      	b.n	5294 <__aeabi_fsub+0x250>
    5142:	2380      	movs	r3, #128	; 0x80
    5144:	03db      	lsls	r3, r3, #15
    5146:	433b      	orrs	r3, r7
    5148:	025b      	lsls	r3, r3, #9
    514a:	0a5b      	lsrs	r3, r3, #9
    514c:	24ff      	movs	r4, #255	; 0xff
    514e:	e7d1      	b.n	50f4 <__aeabi_fsub+0xb0>
    5150:	1a21      	subs	r1, r4, r0
    5152:	2900      	cmp	r1, #0
    5154:	dd4c      	ble.n	51f0 <__aeabi_fsub+0x1ac>
    5156:	2800      	cmp	r0, #0
    5158:	d02a      	beq.n	51b0 <__aeabi_fsub+0x16c>
    515a:	2cff      	cmp	r4, #255	; 0xff
    515c:	d0b8      	beq.n	50d0 <__aeabi_fsub+0x8c>
    515e:	2080      	movs	r0, #128	; 0x80
    5160:	04c0      	lsls	r0, r0, #19
    5162:	4306      	orrs	r6, r0
    5164:	291b      	cmp	r1, #27
    5166:	dd00      	ble.n	516a <__aeabi_fsub+0x126>
    5168:	e0af      	b.n	52ca <__aeabi_fsub+0x286>
    516a:	0030      	movs	r0, r6
    516c:	2720      	movs	r7, #32
    516e:	40c8      	lsrs	r0, r1
    5170:	1a79      	subs	r1, r7, r1
    5172:	408e      	lsls	r6, r1
    5174:	1e71      	subs	r1, r6, #1
    5176:	418e      	sbcs	r6, r1
    5178:	4306      	orrs	r6, r0
    517a:	199b      	adds	r3, r3, r6
    517c:	0159      	lsls	r1, r3, #5
    517e:	d5d6      	bpl.n	512e <__aeabi_fsub+0xea>
    5180:	3401      	adds	r4, #1
    5182:	2cff      	cmp	r4, #255	; 0xff
    5184:	d100      	bne.n	5188 <__aeabi_fsub+0x144>
    5186:	e085      	b.n	5294 <__aeabi_fsub+0x250>
    5188:	2201      	movs	r2, #1
    518a:	497a      	ldr	r1, [pc, #488]	; (5374 <__aeabi_fsub+0x330>)
    518c:	401a      	ands	r2, r3
    518e:	085b      	lsrs	r3, r3, #1
    5190:	400b      	ands	r3, r1
    5192:	4313      	orrs	r3, r2
    5194:	e79c      	b.n	50d0 <__aeabi_fsub+0x8c>
    5196:	2e00      	cmp	r6, #0
    5198:	d000      	beq.n	519c <__aeabi_fsub+0x158>
    519a:	e770      	b.n	507e <__aeabi_fsub+0x3a>
    519c:	e76b      	b.n	5076 <__aeabi_fsub+0x32>
    519e:	1e3b      	subs	r3, r7, #0
    51a0:	d1c5      	bne.n	512e <__aeabi_fsub+0xea>
    51a2:	2200      	movs	r2, #0
    51a4:	027b      	lsls	r3, r7, #9
    51a6:	0a5b      	lsrs	r3, r3, #9
    51a8:	b2e4      	uxtb	r4, r4
    51aa:	e7a3      	b.n	50f4 <__aeabi_fsub+0xb0>
    51ac:	0014      	movs	r4, r2
    51ae:	e78f      	b.n	50d0 <__aeabi_fsub+0x8c>
    51b0:	2e00      	cmp	r6, #0
    51b2:	d04d      	beq.n	5250 <__aeabi_fsub+0x20c>
    51b4:	1e48      	subs	r0, r1, #1
    51b6:	2800      	cmp	r0, #0
    51b8:	d157      	bne.n	526a <__aeabi_fsub+0x226>
    51ba:	199b      	adds	r3, r3, r6
    51bc:	2401      	movs	r4, #1
    51be:	015a      	lsls	r2, r3, #5
    51c0:	d5b5      	bpl.n	512e <__aeabi_fsub+0xea>
    51c2:	2402      	movs	r4, #2
    51c4:	e7e0      	b.n	5188 <__aeabi_fsub+0x144>
    51c6:	2a00      	cmp	r2, #0
    51c8:	d125      	bne.n	5216 <__aeabi_fsub+0x1d2>
    51ca:	1c62      	adds	r2, r4, #1
    51cc:	b2d2      	uxtb	r2, r2
    51ce:	2a01      	cmp	r2, #1
    51d0:	dd72      	ble.n	52b8 <__aeabi_fsub+0x274>
    51d2:	1b9f      	subs	r7, r3, r6
    51d4:	017a      	lsls	r2, r7, #5
    51d6:	d535      	bpl.n	5244 <__aeabi_fsub+0x200>
    51d8:	1af7      	subs	r7, r6, r3
    51da:	000d      	movs	r5, r1
    51dc:	e764      	b.n	50a8 <__aeabi_fsub+0x64>
    51de:	2201      	movs	r2, #1
    51e0:	2300      	movs	r3, #0
    51e2:	402a      	ands	r2, r5
    51e4:	e786      	b.n	50f4 <__aeabi_fsub+0xb0>
    51e6:	003b      	movs	r3, r7
    51e8:	4a63      	ldr	r2, [pc, #396]	; (5378 <__aeabi_fsub+0x334>)
    51ea:	1a24      	subs	r4, r4, r0
    51ec:	4013      	ands	r3, r2
    51ee:	e76f      	b.n	50d0 <__aeabi_fsub+0x8c>
    51f0:	2900      	cmp	r1, #0
    51f2:	d16c      	bne.n	52ce <__aeabi_fsub+0x28a>
    51f4:	1c61      	adds	r1, r4, #1
    51f6:	b2c8      	uxtb	r0, r1
    51f8:	2801      	cmp	r0, #1
    51fa:	dd4e      	ble.n	529a <__aeabi_fsub+0x256>
    51fc:	29ff      	cmp	r1, #255	; 0xff
    51fe:	d049      	beq.n	5294 <__aeabi_fsub+0x250>
    5200:	199b      	adds	r3, r3, r6
    5202:	085b      	lsrs	r3, r3, #1
    5204:	000c      	movs	r4, r1
    5206:	e763      	b.n	50d0 <__aeabi_fsub+0x8c>
    5208:	2aff      	cmp	r2, #255	; 0xff
    520a:	d041      	beq.n	5290 <__aeabi_fsub+0x24c>
    520c:	000a      	movs	r2, r1
    520e:	e781      	b.n	5114 <__aeabi_fsub+0xd0>
    5210:	2601      	movs	r6, #1
    5212:	1b9b      	subs	r3, r3, r6
    5214:	e789      	b.n	512a <__aeabi_fsub+0xe6>
    5216:	2c00      	cmp	r4, #0
    5218:	d01c      	beq.n	5254 <__aeabi_fsub+0x210>
    521a:	28ff      	cmp	r0, #255	; 0xff
    521c:	d021      	beq.n	5262 <__aeabi_fsub+0x21e>
    521e:	2480      	movs	r4, #128	; 0x80
    5220:	04e4      	lsls	r4, r4, #19
    5222:	4252      	negs	r2, r2
    5224:	4323      	orrs	r3, r4
    5226:	2a1b      	cmp	r2, #27
    5228:	dd00      	ble.n	522c <__aeabi_fsub+0x1e8>
    522a:	e096      	b.n	535a <__aeabi_fsub+0x316>
    522c:	001c      	movs	r4, r3
    522e:	2520      	movs	r5, #32
    5230:	40d4      	lsrs	r4, r2
    5232:	1aaa      	subs	r2, r5, r2
    5234:	4093      	lsls	r3, r2
    5236:	1e5a      	subs	r2, r3, #1
    5238:	4193      	sbcs	r3, r2
    523a:	4323      	orrs	r3, r4
    523c:	1af3      	subs	r3, r6, r3
    523e:	0004      	movs	r4, r0
    5240:	000d      	movs	r5, r1
    5242:	e72d      	b.n	50a0 <__aeabi_fsub+0x5c>
    5244:	2f00      	cmp	r7, #0
    5246:	d000      	beq.n	524a <__aeabi_fsub+0x206>
    5248:	e72e      	b.n	50a8 <__aeabi_fsub+0x64>
    524a:	2200      	movs	r2, #0
    524c:	2400      	movs	r4, #0
    524e:	e7a9      	b.n	51a4 <__aeabi_fsub+0x160>
    5250:	000c      	movs	r4, r1
    5252:	e73d      	b.n	50d0 <__aeabi_fsub+0x8c>
    5254:	2b00      	cmp	r3, #0
    5256:	d058      	beq.n	530a <__aeabi_fsub+0x2c6>
    5258:	43d2      	mvns	r2, r2
    525a:	2a00      	cmp	r2, #0
    525c:	d0ee      	beq.n	523c <__aeabi_fsub+0x1f8>
    525e:	28ff      	cmp	r0, #255	; 0xff
    5260:	d1e1      	bne.n	5226 <__aeabi_fsub+0x1e2>
    5262:	0033      	movs	r3, r6
    5264:	24ff      	movs	r4, #255	; 0xff
    5266:	000d      	movs	r5, r1
    5268:	e732      	b.n	50d0 <__aeabi_fsub+0x8c>
    526a:	29ff      	cmp	r1, #255	; 0xff
    526c:	d010      	beq.n	5290 <__aeabi_fsub+0x24c>
    526e:	0001      	movs	r1, r0
    5270:	e778      	b.n	5164 <__aeabi_fsub+0x120>
    5272:	2b00      	cmp	r3, #0
    5274:	d06e      	beq.n	5354 <__aeabi_fsub+0x310>
    5276:	24ff      	movs	r4, #255	; 0xff
    5278:	2e00      	cmp	r6, #0
    527a:	d100      	bne.n	527e <__aeabi_fsub+0x23a>
    527c:	e728      	b.n	50d0 <__aeabi_fsub+0x8c>
    527e:	2280      	movs	r2, #128	; 0x80
    5280:	4651      	mov	r1, sl
    5282:	03d2      	lsls	r2, r2, #15
    5284:	4211      	tst	r1, r2
    5286:	d003      	beq.n	5290 <__aeabi_fsub+0x24c>
    5288:	4661      	mov	r1, ip
    528a:	4211      	tst	r1, r2
    528c:	d100      	bne.n	5290 <__aeabi_fsub+0x24c>
    528e:	0033      	movs	r3, r6
    5290:	24ff      	movs	r4, #255	; 0xff
    5292:	e71d      	b.n	50d0 <__aeabi_fsub+0x8c>
    5294:	24ff      	movs	r4, #255	; 0xff
    5296:	2300      	movs	r3, #0
    5298:	e72c      	b.n	50f4 <__aeabi_fsub+0xb0>
    529a:	2c00      	cmp	r4, #0
    529c:	d1e9      	bne.n	5272 <__aeabi_fsub+0x22e>
    529e:	2b00      	cmp	r3, #0
    52a0:	d063      	beq.n	536a <__aeabi_fsub+0x326>
    52a2:	2e00      	cmp	r6, #0
    52a4:	d100      	bne.n	52a8 <__aeabi_fsub+0x264>
    52a6:	e713      	b.n	50d0 <__aeabi_fsub+0x8c>
    52a8:	199b      	adds	r3, r3, r6
    52aa:	015a      	lsls	r2, r3, #5
    52ac:	d400      	bmi.n	52b0 <__aeabi_fsub+0x26c>
    52ae:	e73e      	b.n	512e <__aeabi_fsub+0xea>
    52b0:	4a31      	ldr	r2, [pc, #196]	; (5378 <__aeabi_fsub+0x334>)
    52b2:	000c      	movs	r4, r1
    52b4:	4013      	ands	r3, r2
    52b6:	e70b      	b.n	50d0 <__aeabi_fsub+0x8c>
    52b8:	2c00      	cmp	r4, #0
    52ba:	d11e      	bne.n	52fa <__aeabi_fsub+0x2b6>
    52bc:	2b00      	cmp	r3, #0
    52be:	d12f      	bne.n	5320 <__aeabi_fsub+0x2dc>
    52c0:	2e00      	cmp	r6, #0
    52c2:	d04f      	beq.n	5364 <__aeabi_fsub+0x320>
    52c4:	0033      	movs	r3, r6
    52c6:	000d      	movs	r5, r1
    52c8:	e702      	b.n	50d0 <__aeabi_fsub+0x8c>
    52ca:	2601      	movs	r6, #1
    52cc:	e755      	b.n	517a <__aeabi_fsub+0x136>
    52ce:	2c00      	cmp	r4, #0
    52d0:	d11f      	bne.n	5312 <__aeabi_fsub+0x2ce>
    52d2:	2b00      	cmp	r3, #0
    52d4:	d043      	beq.n	535e <__aeabi_fsub+0x31a>
    52d6:	43c9      	mvns	r1, r1
    52d8:	2900      	cmp	r1, #0
    52da:	d00b      	beq.n	52f4 <__aeabi_fsub+0x2b0>
    52dc:	28ff      	cmp	r0, #255	; 0xff
    52de:	d039      	beq.n	5354 <__aeabi_fsub+0x310>
    52e0:	291b      	cmp	r1, #27
    52e2:	dc44      	bgt.n	536e <__aeabi_fsub+0x32a>
    52e4:	001c      	movs	r4, r3
    52e6:	2720      	movs	r7, #32
    52e8:	40cc      	lsrs	r4, r1
    52ea:	1a79      	subs	r1, r7, r1
    52ec:	408b      	lsls	r3, r1
    52ee:	1e59      	subs	r1, r3, #1
    52f0:	418b      	sbcs	r3, r1
    52f2:	4323      	orrs	r3, r4
    52f4:	199b      	adds	r3, r3, r6
    52f6:	0004      	movs	r4, r0
    52f8:	e740      	b.n	517c <__aeabi_fsub+0x138>
    52fa:	2b00      	cmp	r3, #0
    52fc:	d11a      	bne.n	5334 <__aeabi_fsub+0x2f0>
    52fe:	2e00      	cmp	r6, #0
    5300:	d124      	bne.n	534c <__aeabi_fsub+0x308>
    5302:	2780      	movs	r7, #128	; 0x80
    5304:	2200      	movs	r2, #0
    5306:	03ff      	lsls	r7, r7, #15
    5308:	e71b      	b.n	5142 <__aeabi_fsub+0xfe>
    530a:	0033      	movs	r3, r6
    530c:	0004      	movs	r4, r0
    530e:	000d      	movs	r5, r1
    5310:	e6de      	b.n	50d0 <__aeabi_fsub+0x8c>
    5312:	28ff      	cmp	r0, #255	; 0xff
    5314:	d01e      	beq.n	5354 <__aeabi_fsub+0x310>
    5316:	2480      	movs	r4, #128	; 0x80
    5318:	04e4      	lsls	r4, r4, #19
    531a:	4249      	negs	r1, r1
    531c:	4323      	orrs	r3, r4
    531e:	e7df      	b.n	52e0 <__aeabi_fsub+0x29c>
    5320:	2e00      	cmp	r6, #0
    5322:	d100      	bne.n	5326 <__aeabi_fsub+0x2e2>
    5324:	e6d4      	b.n	50d0 <__aeabi_fsub+0x8c>
    5326:	1b9f      	subs	r7, r3, r6
    5328:	017a      	lsls	r2, r7, #5
    532a:	d400      	bmi.n	532e <__aeabi_fsub+0x2ea>
    532c:	e737      	b.n	519e <__aeabi_fsub+0x15a>
    532e:	1af3      	subs	r3, r6, r3
    5330:	000d      	movs	r5, r1
    5332:	e6cd      	b.n	50d0 <__aeabi_fsub+0x8c>
    5334:	24ff      	movs	r4, #255	; 0xff
    5336:	2e00      	cmp	r6, #0
    5338:	d100      	bne.n	533c <__aeabi_fsub+0x2f8>
    533a:	e6c9      	b.n	50d0 <__aeabi_fsub+0x8c>
    533c:	2280      	movs	r2, #128	; 0x80
    533e:	4650      	mov	r0, sl
    5340:	03d2      	lsls	r2, r2, #15
    5342:	4210      	tst	r0, r2
    5344:	d0a4      	beq.n	5290 <__aeabi_fsub+0x24c>
    5346:	4660      	mov	r0, ip
    5348:	4210      	tst	r0, r2
    534a:	d1a1      	bne.n	5290 <__aeabi_fsub+0x24c>
    534c:	0033      	movs	r3, r6
    534e:	000d      	movs	r5, r1
    5350:	24ff      	movs	r4, #255	; 0xff
    5352:	e6bd      	b.n	50d0 <__aeabi_fsub+0x8c>
    5354:	0033      	movs	r3, r6
    5356:	24ff      	movs	r4, #255	; 0xff
    5358:	e6ba      	b.n	50d0 <__aeabi_fsub+0x8c>
    535a:	2301      	movs	r3, #1
    535c:	e76e      	b.n	523c <__aeabi_fsub+0x1f8>
    535e:	0033      	movs	r3, r6
    5360:	0004      	movs	r4, r0
    5362:	e6b5      	b.n	50d0 <__aeabi_fsub+0x8c>
    5364:	2700      	movs	r7, #0
    5366:	2200      	movs	r2, #0
    5368:	e71c      	b.n	51a4 <__aeabi_fsub+0x160>
    536a:	0033      	movs	r3, r6
    536c:	e6b0      	b.n	50d0 <__aeabi_fsub+0x8c>
    536e:	2301      	movs	r3, #1
    5370:	e7c0      	b.n	52f4 <__aeabi_fsub+0x2b0>
    5372:	46c0      	nop			; (mov r8, r8)
    5374:	7dffffff 	.word	0x7dffffff
    5378:	fbffffff 	.word	0xfbffffff

0000537c <__aeabi_f2iz>:
    537c:	0241      	lsls	r1, r0, #9
    537e:	0043      	lsls	r3, r0, #1
    5380:	0fc2      	lsrs	r2, r0, #31
    5382:	0a49      	lsrs	r1, r1, #9
    5384:	0e1b      	lsrs	r3, r3, #24
    5386:	2000      	movs	r0, #0
    5388:	2b7e      	cmp	r3, #126	; 0x7e
    538a:	dd0d      	ble.n	53a8 <__aeabi_f2iz+0x2c>
    538c:	2b9d      	cmp	r3, #157	; 0x9d
    538e:	dc0c      	bgt.n	53aa <__aeabi_f2iz+0x2e>
    5390:	2080      	movs	r0, #128	; 0x80
    5392:	0400      	lsls	r0, r0, #16
    5394:	4301      	orrs	r1, r0
    5396:	2b95      	cmp	r3, #149	; 0x95
    5398:	dc0a      	bgt.n	53b0 <__aeabi_f2iz+0x34>
    539a:	2096      	movs	r0, #150	; 0x96
    539c:	1ac3      	subs	r3, r0, r3
    539e:	40d9      	lsrs	r1, r3
    53a0:	4248      	negs	r0, r1
    53a2:	2a00      	cmp	r2, #0
    53a4:	d100      	bne.n	53a8 <__aeabi_f2iz+0x2c>
    53a6:	0008      	movs	r0, r1
    53a8:	4770      	bx	lr
    53aa:	4b03      	ldr	r3, [pc, #12]	; (53b8 <__aeabi_f2iz+0x3c>)
    53ac:	18d0      	adds	r0, r2, r3
    53ae:	e7fb      	b.n	53a8 <__aeabi_f2iz+0x2c>
    53b0:	3b96      	subs	r3, #150	; 0x96
    53b2:	4099      	lsls	r1, r3
    53b4:	e7f4      	b.n	53a0 <__aeabi_f2iz+0x24>
    53b6:	46c0      	nop			; (mov r8, r8)
    53b8:	7fffffff 	.word	0x7fffffff

000053bc <__aeabi_i2f>:
    53bc:	b570      	push	{r4, r5, r6, lr}
    53be:	2800      	cmp	r0, #0
    53c0:	d030      	beq.n	5424 <__aeabi_i2f+0x68>
    53c2:	17c3      	asrs	r3, r0, #31
    53c4:	18c4      	adds	r4, r0, r3
    53c6:	405c      	eors	r4, r3
    53c8:	0fc5      	lsrs	r5, r0, #31
    53ca:	0020      	movs	r0, r4
    53cc:	f001 fad8 	bl	6980 <__clzsi2>
    53d0:	239e      	movs	r3, #158	; 0x9e
    53d2:	1a1b      	subs	r3, r3, r0
    53d4:	2b96      	cmp	r3, #150	; 0x96
    53d6:	dc0d      	bgt.n	53f4 <__aeabi_i2f+0x38>
    53d8:	2296      	movs	r2, #150	; 0x96
    53da:	1ad2      	subs	r2, r2, r3
    53dc:	4094      	lsls	r4, r2
    53de:	002a      	movs	r2, r5
    53e0:	0264      	lsls	r4, r4, #9
    53e2:	0a64      	lsrs	r4, r4, #9
    53e4:	b2db      	uxtb	r3, r3
    53e6:	0264      	lsls	r4, r4, #9
    53e8:	05db      	lsls	r3, r3, #23
    53ea:	0a60      	lsrs	r0, r4, #9
    53ec:	07d2      	lsls	r2, r2, #31
    53ee:	4318      	orrs	r0, r3
    53f0:	4310      	orrs	r0, r2
    53f2:	bd70      	pop	{r4, r5, r6, pc}
    53f4:	2b99      	cmp	r3, #153	; 0x99
    53f6:	dc19      	bgt.n	542c <__aeabi_i2f+0x70>
    53f8:	2299      	movs	r2, #153	; 0x99
    53fa:	1ad2      	subs	r2, r2, r3
    53fc:	2a00      	cmp	r2, #0
    53fe:	dd29      	ble.n	5454 <__aeabi_i2f+0x98>
    5400:	4094      	lsls	r4, r2
    5402:	0022      	movs	r2, r4
    5404:	4c14      	ldr	r4, [pc, #80]	; (5458 <__aeabi_i2f+0x9c>)
    5406:	4014      	ands	r4, r2
    5408:	0751      	lsls	r1, r2, #29
    540a:	d004      	beq.n	5416 <__aeabi_i2f+0x5a>
    540c:	210f      	movs	r1, #15
    540e:	400a      	ands	r2, r1
    5410:	2a04      	cmp	r2, #4
    5412:	d000      	beq.n	5416 <__aeabi_i2f+0x5a>
    5414:	3404      	adds	r4, #4
    5416:	0162      	lsls	r2, r4, #5
    5418:	d413      	bmi.n	5442 <__aeabi_i2f+0x86>
    541a:	01a4      	lsls	r4, r4, #6
    541c:	0a64      	lsrs	r4, r4, #9
    541e:	b2db      	uxtb	r3, r3
    5420:	002a      	movs	r2, r5
    5422:	e7e0      	b.n	53e6 <__aeabi_i2f+0x2a>
    5424:	2200      	movs	r2, #0
    5426:	2300      	movs	r3, #0
    5428:	2400      	movs	r4, #0
    542a:	e7dc      	b.n	53e6 <__aeabi_i2f+0x2a>
    542c:	2205      	movs	r2, #5
    542e:	0021      	movs	r1, r4
    5430:	1a12      	subs	r2, r2, r0
    5432:	40d1      	lsrs	r1, r2
    5434:	22b9      	movs	r2, #185	; 0xb9
    5436:	1ad2      	subs	r2, r2, r3
    5438:	4094      	lsls	r4, r2
    543a:	1e62      	subs	r2, r4, #1
    543c:	4194      	sbcs	r4, r2
    543e:	430c      	orrs	r4, r1
    5440:	e7da      	b.n	53f8 <__aeabi_i2f+0x3c>
    5442:	4b05      	ldr	r3, [pc, #20]	; (5458 <__aeabi_i2f+0x9c>)
    5444:	002a      	movs	r2, r5
    5446:	401c      	ands	r4, r3
    5448:	239f      	movs	r3, #159	; 0x9f
    544a:	01a4      	lsls	r4, r4, #6
    544c:	1a1b      	subs	r3, r3, r0
    544e:	0a64      	lsrs	r4, r4, #9
    5450:	b2db      	uxtb	r3, r3
    5452:	e7c8      	b.n	53e6 <__aeabi_i2f+0x2a>
    5454:	0022      	movs	r2, r4
    5456:	e7d5      	b.n	5404 <__aeabi_i2f+0x48>
    5458:	fbffffff 	.word	0xfbffffff

0000545c <__aeabi_ddiv>:
    545c:	b5f0      	push	{r4, r5, r6, r7, lr}
    545e:	4657      	mov	r7, sl
    5460:	4645      	mov	r5, r8
    5462:	46de      	mov	lr, fp
    5464:	464e      	mov	r6, r9
    5466:	b5e0      	push	{r5, r6, r7, lr}
    5468:	004c      	lsls	r4, r1, #1
    546a:	030e      	lsls	r6, r1, #12
    546c:	b087      	sub	sp, #28
    546e:	4683      	mov	fp, r0
    5470:	4692      	mov	sl, r2
    5472:	001d      	movs	r5, r3
    5474:	4680      	mov	r8, r0
    5476:	0b36      	lsrs	r6, r6, #12
    5478:	0d64      	lsrs	r4, r4, #21
    547a:	0fcf      	lsrs	r7, r1, #31
    547c:	2c00      	cmp	r4, #0
    547e:	d04f      	beq.n	5520 <__aeabi_ddiv+0xc4>
    5480:	4b6f      	ldr	r3, [pc, #444]	; (5640 <__aeabi_ddiv+0x1e4>)
    5482:	429c      	cmp	r4, r3
    5484:	d035      	beq.n	54f2 <__aeabi_ddiv+0x96>
    5486:	2380      	movs	r3, #128	; 0x80
    5488:	0f42      	lsrs	r2, r0, #29
    548a:	041b      	lsls	r3, r3, #16
    548c:	00f6      	lsls	r6, r6, #3
    548e:	4313      	orrs	r3, r2
    5490:	4333      	orrs	r3, r6
    5492:	4699      	mov	r9, r3
    5494:	00c3      	lsls	r3, r0, #3
    5496:	4698      	mov	r8, r3
    5498:	4b6a      	ldr	r3, [pc, #424]	; (5644 <__aeabi_ddiv+0x1e8>)
    549a:	2600      	movs	r6, #0
    549c:	469c      	mov	ip, r3
    549e:	2300      	movs	r3, #0
    54a0:	4464      	add	r4, ip
    54a2:	9303      	str	r3, [sp, #12]
    54a4:	032b      	lsls	r3, r5, #12
    54a6:	0b1b      	lsrs	r3, r3, #12
    54a8:	469b      	mov	fp, r3
    54aa:	006b      	lsls	r3, r5, #1
    54ac:	0fed      	lsrs	r5, r5, #31
    54ae:	4650      	mov	r0, sl
    54b0:	0d5b      	lsrs	r3, r3, #21
    54b2:	9501      	str	r5, [sp, #4]
    54b4:	d05e      	beq.n	5574 <__aeabi_ddiv+0x118>
    54b6:	4a62      	ldr	r2, [pc, #392]	; (5640 <__aeabi_ddiv+0x1e4>)
    54b8:	4293      	cmp	r3, r2
    54ba:	d053      	beq.n	5564 <__aeabi_ddiv+0x108>
    54bc:	465a      	mov	r2, fp
    54be:	00d1      	lsls	r1, r2, #3
    54c0:	2280      	movs	r2, #128	; 0x80
    54c2:	0f40      	lsrs	r0, r0, #29
    54c4:	0412      	lsls	r2, r2, #16
    54c6:	4302      	orrs	r2, r0
    54c8:	430a      	orrs	r2, r1
    54ca:	4693      	mov	fp, r2
    54cc:	4652      	mov	r2, sl
    54ce:	00d1      	lsls	r1, r2, #3
    54d0:	4a5c      	ldr	r2, [pc, #368]	; (5644 <__aeabi_ddiv+0x1e8>)
    54d2:	4694      	mov	ip, r2
    54d4:	2200      	movs	r2, #0
    54d6:	4463      	add	r3, ip
    54d8:	0038      	movs	r0, r7
    54da:	4068      	eors	r0, r5
    54dc:	4684      	mov	ip, r0
    54de:	9002      	str	r0, [sp, #8]
    54e0:	1ae4      	subs	r4, r4, r3
    54e2:	4316      	orrs	r6, r2
    54e4:	2e0f      	cmp	r6, #15
    54e6:	d900      	bls.n	54ea <__aeabi_ddiv+0x8e>
    54e8:	e0b4      	b.n	5654 <__aeabi_ddiv+0x1f8>
    54ea:	4b57      	ldr	r3, [pc, #348]	; (5648 <__aeabi_ddiv+0x1ec>)
    54ec:	00b6      	lsls	r6, r6, #2
    54ee:	599b      	ldr	r3, [r3, r6]
    54f0:	469f      	mov	pc, r3
    54f2:	0003      	movs	r3, r0
    54f4:	4333      	orrs	r3, r6
    54f6:	4699      	mov	r9, r3
    54f8:	d16c      	bne.n	55d4 <__aeabi_ddiv+0x178>
    54fa:	2300      	movs	r3, #0
    54fc:	4698      	mov	r8, r3
    54fe:	3302      	adds	r3, #2
    5500:	2608      	movs	r6, #8
    5502:	9303      	str	r3, [sp, #12]
    5504:	e7ce      	b.n	54a4 <__aeabi_ddiv+0x48>
    5506:	46cb      	mov	fp, r9
    5508:	4641      	mov	r1, r8
    550a:	9a03      	ldr	r2, [sp, #12]
    550c:	9701      	str	r7, [sp, #4]
    550e:	2a02      	cmp	r2, #2
    5510:	d165      	bne.n	55de <__aeabi_ddiv+0x182>
    5512:	9b01      	ldr	r3, [sp, #4]
    5514:	4c4a      	ldr	r4, [pc, #296]	; (5640 <__aeabi_ddiv+0x1e4>)
    5516:	469c      	mov	ip, r3
    5518:	2300      	movs	r3, #0
    551a:	2200      	movs	r2, #0
    551c:	4698      	mov	r8, r3
    551e:	e06b      	b.n	55f8 <__aeabi_ddiv+0x19c>
    5520:	0003      	movs	r3, r0
    5522:	4333      	orrs	r3, r6
    5524:	4699      	mov	r9, r3
    5526:	d04e      	beq.n	55c6 <__aeabi_ddiv+0x16a>
    5528:	2e00      	cmp	r6, #0
    552a:	d100      	bne.n	552e <__aeabi_ddiv+0xd2>
    552c:	e1bc      	b.n	58a8 <__aeabi_ddiv+0x44c>
    552e:	0030      	movs	r0, r6
    5530:	f001 fa26 	bl	6980 <__clzsi2>
    5534:	0003      	movs	r3, r0
    5536:	3b0b      	subs	r3, #11
    5538:	2b1c      	cmp	r3, #28
    553a:	dd00      	ble.n	553e <__aeabi_ddiv+0xe2>
    553c:	e1ac      	b.n	5898 <__aeabi_ddiv+0x43c>
    553e:	221d      	movs	r2, #29
    5540:	1ad3      	subs	r3, r2, r3
    5542:	465a      	mov	r2, fp
    5544:	0001      	movs	r1, r0
    5546:	40da      	lsrs	r2, r3
    5548:	3908      	subs	r1, #8
    554a:	408e      	lsls	r6, r1
    554c:	0013      	movs	r3, r2
    554e:	4333      	orrs	r3, r6
    5550:	4699      	mov	r9, r3
    5552:	465b      	mov	r3, fp
    5554:	408b      	lsls	r3, r1
    5556:	4698      	mov	r8, r3
    5558:	2300      	movs	r3, #0
    555a:	4c3c      	ldr	r4, [pc, #240]	; (564c <__aeabi_ddiv+0x1f0>)
    555c:	2600      	movs	r6, #0
    555e:	1a24      	subs	r4, r4, r0
    5560:	9303      	str	r3, [sp, #12]
    5562:	e79f      	b.n	54a4 <__aeabi_ddiv+0x48>
    5564:	4651      	mov	r1, sl
    5566:	465a      	mov	r2, fp
    5568:	4311      	orrs	r1, r2
    556a:	d129      	bne.n	55c0 <__aeabi_ddiv+0x164>
    556c:	2200      	movs	r2, #0
    556e:	4693      	mov	fp, r2
    5570:	3202      	adds	r2, #2
    5572:	e7b1      	b.n	54d8 <__aeabi_ddiv+0x7c>
    5574:	4659      	mov	r1, fp
    5576:	4301      	orrs	r1, r0
    5578:	d01e      	beq.n	55b8 <__aeabi_ddiv+0x15c>
    557a:	465b      	mov	r3, fp
    557c:	2b00      	cmp	r3, #0
    557e:	d100      	bne.n	5582 <__aeabi_ddiv+0x126>
    5580:	e19e      	b.n	58c0 <__aeabi_ddiv+0x464>
    5582:	4658      	mov	r0, fp
    5584:	f001 f9fc 	bl	6980 <__clzsi2>
    5588:	0003      	movs	r3, r0
    558a:	3b0b      	subs	r3, #11
    558c:	2b1c      	cmp	r3, #28
    558e:	dd00      	ble.n	5592 <__aeabi_ddiv+0x136>
    5590:	e18f      	b.n	58b2 <__aeabi_ddiv+0x456>
    5592:	0002      	movs	r2, r0
    5594:	4659      	mov	r1, fp
    5596:	3a08      	subs	r2, #8
    5598:	4091      	lsls	r1, r2
    559a:	468b      	mov	fp, r1
    559c:	211d      	movs	r1, #29
    559e:	1acb      	subs	r3, r1, r3
    55a0:	4651      	mov	r1, sl
    55a2:	40d9      	lsrs	r1, r3
    55a4:	000b      	movs	r3, r1
    55a6:	4659      	mov	r1, fp
    55a8:	430b      	orrs	r3, r1
    55aa:	4651      	mov	r1, sl
    55ac:	469b      	mov	fp, r3
    55ae:	4091      	lsls	r1, r2
    55b0:	4b26      	ldr	r3, [pc, #152]	; (564c <__aeabi_ddiv+0x1f0>)
    55b2:	2200      	movs	r2, #0
    55b4:	1a1b      	subs	r3, r3, r0
    55b6:	e78f      	b.n	54d8 <__aeabi_ddiv+0x7c>
    55b8:	2300      	movs	r3, #0
    55ba:	2201      	movs	r2, #1
    55bc:	469b      	mov	fp, r3
    55be:	e78b      	b.n	54d8 <__aeabi_ddiv+0x7c>
    55c0:	4651      	mov	r1, sl
    55c2:	2203      	movs	r2, #3
    55c4:	e788      	b.n	54d8 <__aeabi_ddiv+0x7c>
    55c6:	2300      	movs	r3, #0
    55c8:	4698      	mov	r8, r3
    55ca:	3301      	adds	r3, #1
    55cc:	2604      	movs	r6, #4
    55ce:	2400      	movs	r4, #0
    55d0:	9303      	str	r3, [sp, #12]
    55d2:	e767      	b.n	54a4 <__aeabi_ddiv+0x48>
    55d4:	2303      	movs	r3, #3
    55d6:	46b1      	mov	r9, r6
    55d8:	9303      	str	r3, [sp, #12]
    55da:	260c      	movs	r6, #12
    55dc:	e762      	b.n	54a4 <__aeabi_ddiv+0x48>
    55de:	2a03      	cmp	r2, #3
    55e0:	d100      	bne.n	55e4 <__aeabi_ddiv+0x188>
    55e2:	e25c      	b.n	5a9e <__aeabi_ddiv+0x642>
    55e4:	9b01      	ldr	r3, [sp, #4]
    55e6:	2a01      	cmp	r2, #1
    55e8:	d000      	beq.n	55ec <__aeabi_ddiv+0x190>
    55ea:	e1e4      	b.n	59b6 <__aeabi_ddiv+0x55a>
    55ec:	4013      	ands	r3, r2
    55ee:	469c      	mov	ip, r3
    55f0:	2300      	movs	r3, #0
    55f2:	2400      	movs	r4, #0
    55f4:	2200      	movs	r2, #0
    55f6:	4698      	mov	r8, r3
    55f8:	2100      	movs	r1, #0
    55fa:	0312      	lsls	r2, r2, #12
    55fc:	0b13      	lsrs	r3, r2, #12
    55fe:	0d0a      	lsrs	r2, r1, #20
    5600:	0512      	lsls	r2, r2, #20
    5602:	431a      	orrs	r2, r3
    5604:	0523      	lsls	r3, r4, #20
    5606:	4c12      	ldr	r4, [pc, #72]	; (5650 <__aeabi_ddiv+0x1f4>)
    5608:	4640      	mov	r0, r8
    560a:	4022      	ands	r2, r4
    560c:	4313      	orrs	r3, r2
    560e:	4662      	mov	r2, ip
    5610:	005b      	lsls	r3, r3, #1
    5612:	07d2      	lsls	r2, r2, #31
    5614:	085b      	lsrs	r3, r3, #1
    5616:	4313      	orrs	r3, r2
    5618:	0019      	movs	r1, r3
    561a:	b007      	add	sp, #28
    561c:	bc3c      	pop	{r2, r3, r4, r5}
    561e:	4690      	mov	r8, r2
    5620:	4699      	mov	r9, r3
    5622:	46a2      	mov	sl, r4
    5624:	46ab      	mov	fp, r5
    5626:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5628:	2300      	movs	r3, #0
    562a:	2280      	movs	r2, #128	; 0x80
    562c:	469c      	mov	ip, r3
    562e:	0312      	lsls	r2, r2, #12
    5630:	4698      	mov	r8, r3
    5632:	4c03      	ldr	r4, [pc, #12]	; (5640 <__aeabi_ddiv+0x1e4>)
    5634:	e7e0      	b.n	55f8 <__aeabi_ddiv+0x19c>
    5636:	2300      	movs	r3, #0
    5638:	4c01      	ldr	r4, [pc, #4]	; (5640 <__aeabi_ddiv+0x1e4>)
    563a:	2200      	movs	r2, #0
    563c:	4698      	mov	r8, r3
    563e:	e7db      	b.n	55f8 <__aeabi_ddiv+0x19c>
    5640:	000007ff 	.word	0x000007ff
    5644:	fffffc01 	.word	0xfffffc01
    5648:	000137c8 	.word	0x000137c8
    564c:	fffffc0d 	.word	0xfffffc0d
    5650:	800fffff 	.word	0x800fffff
    5654:	45d9      	cmp	r9, fp
    5656:	d900      	bls.n	565a <__aeabi_ddiv+0x1fe>
    5658:	e139      	b.n	58ce <__aeabi_ddiv+0x472>
    565a:	d100      	bne.n	565e <__aeabi_ddiv+0x202>
    565c:	e134      	b.n	58c8 <__aeabi_ddiv+0x46c>
    565e:	2300      	movs	r3, #0
    5660:	4646      	mov	r6, r8
    5662:	464d      	mov	r5, r9
    5664:	469a      	mov	sl, r3
    5666:	3c01      	subs	r4, #1
    5668:	465b      	mov	r3, fp
    566a:	0e0a      	lsrs	r2, r1, #24
    566c:	021b      	lsls	r3, r3, #8
    566e:	431a      	orrs	r2, r3
    5670:	020b      	lsls	r3, r1, #8
    5672:	0c17      	lsrs	r7, r2, #16
    5674:	9303      	str	r3, [sp, #12]
    5676:	0413      	lsls	r3, r2, #16
    5678:	0c1b      	lsrs	r3, r3, #16
    567a:	0039      	movs	r1, r7
    567c:	0028      	movs	r0, r5
    567e:	4690      	mov	r8, r2
    5680:	9301      	str	r3, [sp, #4]
    5682:	f7ff f81d 	bl	46c0 <__udivsi3>
    5686:	0002      	movs	r2, r0
    5688:	9b01      	ldr	r3, [sp, #4]
    568a:	4683      	mov	fp, r0
    568c:	435a      	muls	r2, r3
    568e:	0028      	movs	r0, r5
    5690:	0039      	movs	r1, r7
    5692:	4691      	mov	r9, r2
    5694:	f7ff f89a 	bl	47cc <__aeabi_uidivmod>
    5698:	0c35      	lsrs	r5, r6, #16
    569a:	0409      	lsls	r1, r1, #16
    569c:	430d      	orrs	r5, r1
    569e:	45a9      	cmp	r9, r5
    56a0:	d90d      	bls.n	56be <__aeabi_ddiv+0x262>
    56a2:	465b      	mov	r3, fp
    56a4:	4445      	add	r5, r8
    56a6:	3b01      	subs	r3, #1
    56a8:	45a8      	cmp	r8, r5
    56aa:	d900      	bls.n	56ae <__aeabi_ddiv+0x252>
    56ac:	e13a      	b.n	5924 <__aeabi_ddiv+0x4c8>
    56ae:	45a9      	cmp	r9, r5
    56b0:	d800      	bhi.n	56b4 <__aeabi_ddiv+0x258>
    56b2:	e137      	b.n	5924 <__aeabi_ddiv+0x4c8>
    56b4:	2302      	movs	r3, #2
    56b6:	425b      	negs	r3, r3
    56b8:	469c      	mov	ip, r3
    56ba:	4445      	add	r5, r8
    56bc:	44e3      	add	fp, ip
    56be:	464b      	mov	r3, r9
    56c0:	1aeb      	subs	r3, r5, r3
    56c2:	0039      	movs	r1, r7
    56c4:	0018      	movs	r0, r3
    56c6:	9304      	str	r3, [sp, #16]
    56c8:	f7fe fffa 	bl	46c0 <__udivsi3>
    56cc:	9b01      	ldr	r3, [sp, #4]
    56ce:	0005      	movs	r5, r0
    56d0:	4343      	muls	r3, r0
    56d2:	0039      	movs	r1, r7
    56d4:	9804      	ldr	r0, [sp, #16]
    56d6:	4699      	mov	r9, r3
    56d8:	f7ff f878 	bl	47cc <__aeabi_uidivmod>
    56dc:	0433      	lsls	r3, r6, #16
    56de:	0409      	lsls	r1, r1, #16
    56e0:	0c1b      	lsrs	r3, r3, #16
    56e2:	430b      	orrs	r3, r1
    56e4:	4599      	cmp	r9, r3
    56e6:	d909      	bls.n	56fc <__aeabi_ddiv+0x2a0>
    56e8:	4443      	add	r3, r8
    56ea:	1e6a      	subs	r2, r5, #1
    56ec:	4598      	cmp	r8, r3
    56ee:	d900      	bls.n	56f2 <__aeabi_ddiv+0x296>
    56f0:	e11a      	b.n	5928 <__aeabi_ddiv+0x4cc>
    56f2:	4599      	cmp	r9, r3
    56f4:	d800      	bhi.n	56f8 <__aeabi_ddiv+0x29c>
    56f6:	e117      	b.n	5928 <__aeabi_ddiv+0x4cc>
    56f8:	3d02      	subs	r5, #2
    56fa:	4443      	add	r3, r8
    56fc:	464a      	mov	r2, r9
    56fe:	1a9b      	subs	r3, r3, r2
    5700:	465a      	mov	r2, fp
    5702:	0412      	lsls	r2, r2, #16
    5704:	432a      	orrs	r2, r5
    5706:	9903      	ldr	r1, [sp, #12]
    5708:	4693      	mov	fp, r2
    570a:	0c10      	lsrs	r0, r2, #16
    570c:	0c0a      	lsrs	r2, r1, #16
    570e:	4691      	mov	r9, r2
    5710:	0409      	lsls	r1, r1, #16
    5712:	465a      	mov	r2, fp
    5714:	0c09      	lsrs	r1, r1, #16
    5716:	464e      	mov	r6, r9
    5718:	000d      	movs	r5, r1
    571a:	0412      	lsls	r2, r2, #16
    571c:	0c12      	lsrs	r2, r2, #16
    571e:	4345      	muls	r5, r0
    5720:	9105      	str	r1, [sp, #20]
    5722:	4351      	muls	r1, r2
    5724:	4372      	muls	r2, r6
    5726:	4370      	muls	r0, r6
    5728:	1952      	adds	r2, r2, r5
    572a:	0c0e      	lsrs	r6, r1, #16
    572c:	18b2      	adds	r2, r6, r2
    572e:	4295      	cmp	r5, r2
    5730:	d903      	bls.n	573a <__aeabi_ddiv+0x2de>
    5732:	2580      	movs	r5, #128	; 0x80
    5734:	026d      	lsls	r5, r5, #9
    5736:	46ac      	mov	ip, r5
    5738:	4460      	add	r0, ip
    573a:	0c15      	lsrs	r5, r2, #16
    573c:	0409      	lsls	r1, r1, #16
    573e:	0412      	lsls	r2, r2, #16
    5740:	0c09      	lsrs	r1, r1, #16
    5742:	1828      	adds	r0, r5, r0
    5744:	1852      	adds	r2, r2, r1
    5746:	4283      	cmp	r3, r0
    5748:	d200      	bcs.n	574c <__aeabi_ddiv+0x2f0>
    574a:	e0ce      	b.n	58ea <__aeabi_ddiv+0x48e>
    574c:	d100      	bne.n	5750 <__aeabi_ddiv+0x2f4>
    574e:	e0c8      	b.n	58e2 <__aeabi_ddiv+0x486>
    5750:	1a1d      	subs	r5, r3, r0
    5752:	4653      	mov	r3, sl
    5754:	1a9e      	subs	r6, r3, r2
    5756:	45b2      	cmp	sl, r6
    5758:	4192      	sbcs	r2, r2
    575a:	4252      	negs	r2, r2
    575c:	1aab      	subs	r3, r5, r2
    575e:	469a      	mov	sl, r3
    5760:	4598      	cmp	r8, r3
    5762:	d100      	bne.n	5766 <__aeabi_ddiv+0x30a>
    5764:	e117      	b.n	5996 <__aeabi_ddiv+0x53a>
    5766:	0039      	movs	r1, r7
    5768:	0018      	movs	r0, r3
    576a:	f7fe ffa9 	bl	46c0 <__udivsi3>
    576e:	9b01      	ldr	r3, [sp, #4]
    5770:	0005      	movs	r5, r0
    5772:	4343      	muls	r3, r0
    5774:	0039      	movs	r1, r7
    5776:	4650      	mov	r0, sl
    5778:	9304      	str	r3, [sp, #16]
    577a:	f7ff f827 	bl	47cc <__aeabi_uidivmod>
    577e:	9804      	ldr	r0, [sp, #16]
    5780:	040b      	lsls	r3, r1, #16
    5782:	0c31      	lsrs	r1, r6, #16
    5784:	4319      	orrs	r1, r3
    5786:	4288      	cmp	r0, r1
    5788:	d909      	bls.n	579e <__aeabi_ddiv+0x342>
    578a:	4441      	add	r1, r8
    578c:	1e6b      	subs	r3, r5, #1
    578e:	4588      	cmp	r8, r1
    5790:	d900      	bls.n	5794 <__aeabi_ddiv+0x338>
    5792:	e107      	b.n	59a4 <__aeabi_ddiv+0x548>
    5794:	4288      	cmp	r0, r1
    5796:	d800      	bhi.n	579a <__aeabi_ddiv+0x33e>
    5798:	e104      	b.n	59a4 <__aeabi_ddiv+0x548>
    579a:	3d02      	subs	r5, #2
    579c:	4441      	add	r1, r8
    579e:	9b04      	ldr	r3, [sp, #16]
    57a0:	1acb      	subs	r3, r1, r3
    57a2:	0018      	movs	r0, r3
    57a4:	0039      	movs	r1, r7
    57a6:	9304      	str	r3, [sp, #16]
    57a8:	f7fe ff8a 	bl	46c0 <__udivsi3>
    57ac:	9b01      	ldr	r3, [sp, #4]
    57ae:	4682      	mov	sl, r0
    57b0:	4343      	muls	r3, r0
    57b2:	0039      	movs	r1, r7
    57b4:	9804      	ldr	r0, [sp, #16]
    57b6:	9301      	str	r3, [sp, #4]
    57b8:	f7ff f808 	bl	47cc <__aeabi_uidivmod>
    57bc:	9801      	ldr	r0, [sp, #4]
    57be:	040b      	lsls	r3, r1, #16
    57c0:	0431      	lsls	r1, r6, #16
    57c2:	0c09      	lsrs	r1, r1, #16
    57c4:	4319      	orrs	r1, r3
    57c6:	4288      	cmp	r0, r1
    57c8:	d90d      	bls.n	57e6 <__aeabi_ddiv+0x38a>
    57ca:	4653      	mov	r3, sl
    57cc:	4441      	add	r1, r8
    57ce:	3b01      	subs	r3, #1
    57d0:	4588      	cmp	r8, r1
    57d2:	d900      	bls.n	57d6 <__aeabi_ddiv+0x37a>
    57d4:	e0e8      	b.n	59a8 <__aeabi_ddiv+0x54c>
    57d6:	4288      	cmp	r0, r1
    57d8:	d800      	bhi.n	57dc <__aeabi_ddiv+0x380>
    57da:	e0e5      	b.n	59a8 <__aeabi_ddiv+0x54c>
    57dc:	2302      	movs	r3, #2
    57de:	425b      	negs	r3, r3
    57e0:	469c      	mov	ip, r3
    57e2:	4441      	add	r1, r8
    57e4:	44e2      	add	sl, ip
    57e6:	9b01      	ldr	r3, [sp, #4]
    57e8:	042d      	lsls	r5, r5, #16
    57ea:	1ace      	subs	r6, r1, r3
    57ec:	4651      	mov	r1, sl
    57ee:	4329      	orrs	r1, r5
    57f0:	9d05      	ldr	r5, [sp, #20]
    57f2:	464f      	mov	r7, r9
    57f4:	002a      	movs	r2, r5
    57f6:	040b      	lsls	r3, r1, #16
    57f8:	0c08      	lsrs	r0, r1, #16
    57fa:	0c1b      	lsrs	r3, r3, #16
    57fc:	435a      	muls	r2, r3
    57fe:	4345      	muls	r5, r0
    5800:	437b      	muls	r3, r7
    5802:	4378      	muls	r0, r7
    5804:	195b      	adds	r3, r3, r5
    5806:	0c17      	lsrs	r7, r2, #16
    5808:	18fb      	adds	r3, r7, r3
    580a:	429d      	cmp	r5, r3
    580c:	d903      	bls.n	5816 <__aeabi_ddiv+0x3ba>
    580e:	2580      	movs	r5, #128	; 0x80
    5810:	026d      	lsls	r5, r5, #9
    5812:	46ac      	mov	ip, r5
    5814:	4460      	add	r0, ip
    5816:	0c1d      	lsrs	r5, r3, #16
    5818:	0412      	lsls	r2, r2, #16
    581a:	041b      	lsls	r3, r3, #16
    581c:	0c12      	lsrs	r2, r2, #16
    581e:	1828      	adds	r0, r5, r0
    5820:	189b      	adds	r3, r3, r2
    5822:	4286      	cmp	r6, r0
    5824:	d200      	bcs.n	5828 <__aeabi_ddiv+0x3cc>
    5826:	e093      	b.n	5950 <__aeabi_ddiv+0x4f4>
    5828:	d100      	bne.n	582c <__aeabi_ddiv+0x3d0>
    582a:	e08e      	b.n	594a <__aeabi_ddiv+0x4ee>
    582c:	2301      	movs	r3, #1
    582e:	4319      	orrs	r1, r3
    5830:	4ba0      	ldr	r3, [pc, #640]	; (5ab4 <__aeabi_ddiv+0x658>)
    5832:	18e3      	adds	r3, r4, r3
    5834:	2b00      	cmp	r3, #0
    5836:	dc00      	bgt.n	583a <__aeabi_ddiv+0x3de>
    5838:	e099      	b.n	596e <__aeabi_ddiv+0x512>
    583a:	074a      	lsls	r2, r1, #29
    583c:	d000      	beq.n	5840 <__aeabi_ddiv+0x3e4>
    583e:	e09e      	b.n	597e <__aeabi_ddiv+0x522>
    5840:	465a      	mov	r2, fp
    5842:	01d2      	lsls	r2, r2, #7
    5844:	d506      	bpl.n	5854 <__aeabi_ddiv+0x3f8>
    5846:	465a      	mov	r2, fp
    5848:	4b9b      	ldr	r3, [pc, #620]	; (5ab8 <__aeabi_ddiv+0x65c>)
    584a:	401a      	ands	r2, r3
    584c:	2380      	movs	r3, #128	; 0x80
    584e:	4693      	mov	fp, r2
    5850:	00db      	lsls	r3, r3, #3
    5852:	18e3      	adds	r3, r4, r3
    5854:	4a99      	ldr	r2, [pc, #612]	; (5abc <__aeabi_ddiv+0x660>)
    5856:	4293      	cmp	r3, r2
    5858:	dd68      	ble.n	592c <__aeabi_ddiv+0x4d0>
    585a:	2301      	movs	r3, #1
    585c:	9a02      	ldr	r2, [sp, #8]
    585e:	4c98      	ldr	r4, [pc, #608]	; (5ac0 <__aeabi_ddiv+0x664>)
    5860:	401a      	ands	r2, r3
    5862:	2300      	movs	r3, #0
    5864:	4694      	mov	ip, r2
    5866:	4698      	mov	r8, r3
    5868:	2200      	movs	r2, #0
    586a:	e6c5      	b.n	55f8 <__aeabi_ddiv+0x19c>
    586c:	2280      	movs	r2, #128	; 0x80
    586e:	464b      	mov	r3, r9
    5870:	0312      	lsls	r2, r2, #12
    5872:	4213      	tst	r3, r2
    5874:	d00a      	beq.n	588c <__aeabi_ddiv+0x430>
    5876:	465b      	mov	r3, fp
    5878:	4213      	tst	r3, r2
    587a:	d106      	bne.n	588a <__aeabi_ddiv+0x42e>
    587c:	431a      	orrs	r2, r3
    587e:	0312      	lsls	r2, r2, #12
    5880:	0b12      	lsrs	r2, r2, #12
    5882:	46ac      	mov	ip, r5
    5884:	4688      	mov	r8, r1
    5886:	4c8e      	ldr	r4, [pc, #568]	; (5ac0 <__aeabi_ddiv+0x664>)
    5888:	e6b6      	b.n	55f8 <__aeabi_ddiv+0x19c>
    588a:	464b      	mov	r3, r9
    588c:	431a      	orrs	r2, r3
    588e:	0312      	lsls	r2, r2, #12
    5890:	0b12      	lsrs	r2, r2, #12
    5892:	46bc      	mov	ip, r7
    5894:	4c8a      	ldr	r4, [pc, #552]	; (5ac0 <__aeabi_ddiv+0x664>)
    5896:	e6af      	b.n	55f8 <__aeabi_ddiv+0x19c>
    5898:	0003      	movs	r3, r0
    589a:	465a      	mov	r2, fp
    589c:	3b28      	subs	r3, #40	; 0x28
    589e:	409a      	lsls	r2, r3
    58a0:	2300      	movs	r3, #0
    58a2:	4691      	mov	r9, r2
    58a4:	4698      	mov	r8, r3
    58a6:	e657      	b.n	5558 <__aeabi_ddiv+0xfc>
    58a8:	4658      	mov	r0, fp
    58aa:	f001 f869 	bl	6980 <__clzsi2>
    58ae:	3020      	adds	r0, #32
    58b0:	e640      	b.n	5534 <__aeabi_ddiv+0xd8>
    58b2:	0003      	movs	r3, r0
    58b4:	4652      	mov	r2, sl
    58b6:	3b28      	subs	r3, #40	; 0x28
    58b8:	409a      	lsls	r2, r3
    58ba:	2100      	movs	r1, #0
    58bc:	4693      	mov	fp, r2
    58be:	e677      	b.n	55b0 <__aeabi_ddiv+0x154>
    58c0:	f001 f85e 	bl	6980 <__clzsi2>
    58c4:	3020      	adds	r0, #32
    58c6:	e65f      	b.n	5588 <__aeabi_ddiv+0x12c>
    58c8:	4588      	cmp	r8, r1
    58ca:	d200      	bcs.n	58ce <__aeabi_ddiv+0x472>
    58cc:	e6c7      	b.n	565e <__aeabi_ddiv+0x202>
    58ce:	464b      	mov	r3, r9
    58d0:	07de      	lsls	r6, r3, #31
    58d2:	085d      	lsrs	r5, r3, #1
    58d4:	4643      	mov	r3, r8
    58d6:	085b      	lsrs	r3, r3, #1
    58d8:	431e      	orrs	r6, r3
    58da:	4643      	mov	r3, r8
    58dc:	07db      	lsls	r3, r3, #31
    58de:	469a      	mov	sl, r3
    58e0:	e6c2      	b.n	5668 <__aeabi_ddiv+0x20c>
    58e2:	2500      	movs	r5, #0
    58e4:	4592      	cmp	sl, r2
    58e6:	d300      	bcc.n	58ea <__aeabi_ddiv+0x48e>
    58e8:	e733      	b.n	5752 <__aeabi_ddiv+0x2f6>
    58ea:	9e03      	ldr	r6, [sp, #12]
    58ec:	4659      	mov	r1, fp
    58ee:	46b4      	mov	ip, r6
    58f0:	44e2      	add	sl, ip
    58f2:	45b2      	cmp	sl, r6
    58f4:	41ad      	sbcs	r5, r5
    58f6:	426d      	negs	r5, r5
    58f8:	4445      	add	r5, r8
    58fa:	18eb      	adds	r3, r5, r3
    58fc:	3901      	subs	r1, #1
    58fe:	4598      	cmp	r8, r3
    5900:	d207      	bcs.n	5912 <__aeabi_ddiv+0x4b6>
    5902:	4298      	cmp	r0, r3
    5904:	d900      	bls.n	5908 <__aeabi_ddiv+0x4ac>
    5906:	e07f      	b.n	5a08 <__aeabi_ddiv+0x5ac>
    5908:	d100      	bne.n	590c <__aeabi_ddiv+0x4b0>
    590a:	e0bc      	b.n	5a86 <__aeabi_ddiv+0x62a>
    590c:	1a1d      	subs	r5, r3, r0
    590e:	468b      	mov	fp, r1
    5910:	e71f      	b.n	5752 <__aeabi_ddiv+0x2f6>
    5912:	4598      	cmp	r8, r3
    5914:	d1fa      	bne.n	590c <__aeabi_ddiv+0x4b0>
    5916:	9d03      	ldr	r5, [sp, #12]
    5918:	4555      	cmp	r5, sl
    591a:	d9f2      	bls.n	5902 <__aeabi_ddiv+0x4a6>
    591c:	4643      	mov	r3, r8
    591e:	468b      	mov	fp, r1
    5920:	1a1d      	subs	r5, r3, r0
    5922:	e716      	b.n	5752 <__aeabi_ddiv+0x2f6>
    5924:	469b      	mov	fp, r3
    5926:	e6ca      	b.n	56be <__aeabi_ddiv+0x262>
    5928:	0015      	movs	r5, r2
    592a:	e6e7      	b.n	56fc <__aeabi_ddiv+0x2a0>
    592c:	465a      	mov	r2, fp
    592e:	08c9      	lsrs	r1, r1, #3
    5930:	0752      	lsls	r2, r2, #29
    5932:	430a      	orrs	r2, r1
    5934:	055b      	lsls	r3, r3, #21
    5936:	4690      	mov	r8, r2
    5938:	0d5c      	lsrs	r4, r3, #21
    593a:	465a      	mov	r2, fp
    593c:	2301      	movs	r3, #1
    593e:	9902      	ldr	r1, [sp, #8]
    5940:	0252      	lsls	r2, r2, #9
    5942:	4019      	ands	r1, r3
    5944:	0b12      	lsrs	r2, r2, #12
    5946:	468c      	mov	ip, r1
    5948:	e656      	b.n	55f8 <__aeabi_ddiv+0x19c>
    594a:	2b00      	cmp	r3, #0
    594c:	d100      	bne.n	5950 <__aeabi_ddiv+0x4f4>
    594e:	e76f      	b.n	5830 <__aeabi_ddiv+0x3d4>
    5950:	4446      	add	r6, r8
    5952:	1e4a      	subs	r2, r1, #1
    5954:	45b0      	cmp	r8, r6
    5956:	d929      	bls.n	59ac <__aeabi_ddiv+0x550>
    5958:	0011      	movs	r1, r2
    595a:	4286      	cmp	r6, r0
    595c:	d000      	beq.n	5960 <__aeabi_ddiv+0x504>
    595e:	e765      	b.n	582c <__aeabi_ddiv+0x3d0>
    5960:	9a03      	ldr	r2, [sp, #12]
    5962:	4293      	cmp	r3, r2
    5964:	d000      	beq.n	5968 <__aeabi_ddiv+0x50c>
    5966:	e761      	b.n	582c <__aeabi_ddiv+0x3d0>
    5968:	e762      	b.n	5830 <__aeabi_ddiv+0x3d4>
    596a:	2101      	movs	r1, #1
    596c:	4249      	negs	r1, r1
    596e:	2001      	movs	r0, #1
    5970:	1ac2      	subs	r2, r0, r3
    5972:	2a38      	cmp	r2, #56	; 0x38
    5974:	dd21      	ble.n	59ba <__aeabi_ddiv+0x55e>
    5976:	9b02      	ldr	r3, [sp, #8]
    5978:	4003      	ands	r3, r0
    597a:	469c      	mov	ip, r3
    597c:	e638      	b.n	55f0 <__aeabi_ddiv+0x194>
    597e:	220f      	movs	r2, #15
    5980:	400a      	ands	r2, r1
    5982:	2a04      	cmp	r2, #4
    5984:	d100      	bne.n	5988 <__aeabi_ddiv+0x52c>
    5986:	e75b      	b.n	5840 <__aeabi_ddiv+0x3e4>
    5988:	000a      	movs	r2, r1
    598a:	1d11      	adds	r1, r2, #4
    598c:	4291      	cmp	r1, r2
    598e:	4192      	sbcs	r2, r2
    5990:	4252      	negs	r2, r2
    5992:	4493      	add	fp, r2
    5994:	e754      	b.n	5840 <__aeabi_ddiv+0x3e4>
    5996:	4b47      	ldr	r3, [pc, #284]	; (5ab4 <__aeabi_ddiv+0x658>)
    5998:	18e3      	adds	r3, r4, r3
    599a:	2b00      	cmp	r3, #0
    599c:	dde5      	ble.n	596a <__aeabi_ddiv+0x50e>
    599e:	2201      	movs	r2, #1
    59a0:	4252      	negs	r2, r2
    59a2:	e7f2      	b.n	598a <__aeabi_ddiv+0x52e>
    59a4:	001d      	movs	r5, r3
    59a6:	e6fa      	b.n	579e <__aeabi_ddiv+0x342>
    59a8:	469a      	mov	sl, r3
    59aa:	e71c      	b.n	57e6 <__aeabi_ddiv+0x38a>
    59ac:	42b0      	cmp	r0, r6
    59ae:	d839      	bhi.n	5a24 <__aeabi_ddiv+0x5c8>
    59b0:	d06e      	beq.n	5a90 <__aeabi_ddiv+0x634>
    59b2:	0011      	movs	r1, r2
    59b4:	e73a      	b.n	582c <__aeabi_ddiv+0x3d0>
    59b6:	9302      	str	r3, [sp, #8]
    59b8:	e73a      	b.n	5830 <__aeabi_ddiv+0x3d4>
    59ba:	2a1f      	cmp	r2, #31
    59bc:	dc3c      	bgt.n	5a38 <__aeabi_ddiv+0x5dc>
    59be:	2320      	movs	r3, #32
    59c0:	1a9b      	subs	r3, r3, r2
    59c2:	000c      	movs	r4, r1
    59c4:	4658      	mov	r0, fp
    59c6:	4099      	lsls	r1, r3
    59c8:	4098      	lsls	r0, r3
    59ca:	1e4b      	subs	r3, r1, #1
    59cc:	4199      	sbcs	r1, r3
    59ce:	465b      	mov	r3, fp
    59d0:	40d4      	lsrs	r4, r2
    59d2:	40d3      	lsrs	r3, r2
    59d4:	4320      	orrs	r0, r4
    59d6:	4308      	orrs	r0, r1
    59d8:	001a      	movs	r2, r3
    59da:	0743      	lsls	r3, r0, #29
    59dc:	d009      	beq.n	59f2 <__aeabi_ddiv+0x596>
    59de:	230f      	movs	r3, #15
    59e0:	4003      	ands	r3, r0
    59e2:	2b04      	cmp	r3, #4
    59e4:	d005      	beq.n	59f2 <__aeabi_ddiv+0x596>
    59e6:	0001      	movs	r1, r0
    59e8:	1d08      	adds	r0, r1, #4
    59ea:	4288      	cmp	r0, r1
    59ec:	419b      	sbcs	r3, r3
    59ee:	425b      	negs	r3, r3
    59f0:	18d2      	adds	r2, r2, r3
    59f2:	0213      	lsls	r3, r2, #8
    59f4:	d53a      	bpl.n	5a6c <__aeabi_ddiv+0x610>
    59f6:	2301      	movs	r3, #1
    59f8:	9a02      	ldr	r2, [sp, #8]
    59fa:	2401      	movs	r4, #1
    59fc:	401a      	ands	r2, r3
    59fe:	2300      	movs	r3, #0
    5a00:	4694      	mov	ip, r2
    5a02:	4698      	mov	r8, r3
    5a04:	2200      	movs	r2, #0
    5a06:	e5f7      	b.n	55f8 <__aeabi_ddiv+0x19c>
    5a08:	2102      	movs	r1, #2
    5a0a:	4249      	negs	r1, r1
    5a0c:	468c      	mov	ip, r1
    5a0e:	9d03      	ldr	r5, [sp, #12]
    5a10:	44e3      	add	fp, ip
    5a12:	46ac      	mov	ip, r5
    5a14:	44e2      	add	sl, ip
    5a16:	45aa      	cmp	sl, r5
    5a18:	41ad      	sbcs	r5, r5
    5a1a:	426d      	negs	r5, r5
    5a1c:	4445      	add	r5, r8
    5a1e:	18ed      	adds	r5, r5, r3
    5a20:	1a2d      	subs	r5, r5, r0
    5a22:	e696      	b.n	5752 <__aeabi_ddiv+0x2f6>
    5a24:	1e8a      	subs	r2, r1, #2
    5a26:	9903      	ldr	r1, [sp, #12]
    5a28:	004d      	lsls	r5, r1, #1
    5a2a:	428d      	cmp	r5, r1
    5a2c:	4189      	sbcs	r1, r1
    5a2e:	4249      	negs	r1, r1
    5a30:	4441      	add	r1, r8
    5a32:	1876      	adds	r6, r6, r1
    5a34:	9503      	str	r5, [sp, #12]
    5a36:	e78f      	b.n	5958 <__aeabi_ddiv+0x4fc>
    5a38:	201f      	movs	r0, #31
    5a3a:	4240      	negs	r0, r0
    5a3c:	1ac3      	subs	r3, r0, r3
    5a3e:	4658      	mov	r0, fp
    5a40:	40d8      	lsrs	r0, r3
    5a42:	0003      	movs	r3, r0
    5a44:	2a20      	cmp	r2, #32
    5a46:	d028      	beq.n	5a9a <__aeabi_ddiv+0x63e>
    5a48:	2040      	movs	r0, #64	; 0x40
    5a4a:	465d      	mov	r5, fp
    5a4c:	1a82      	subs	r2, r0, r2
    5a4e:	4095      	lsls	r5, r2
    5a50:	4329      	orrs	r1, r5
    5a52:	1e4a      	subs	r2, r1, #1
    5a54:	4191      	sbcs	r1, r2
    5a56:	4319      	orrs	r1, r3
    5a58:	2307      	movs	r3, #7
    5a5a:	2200      	movs	r2, #0
    5a5c:	400b      	ands	r3, r1
    5a5e:	d009      	beq.n	5a74 <__aeabi_ddiv+0x618>
    5a60:	230f      	movs	r3, #15
    5a62:	2200      	movs	r2, #0
    5a64:	400b      	ands	r3, r1
    5a66:	0008      	movs	r0, r1
    5a68:	2b04      	cmp	r3, #4
    5a6a:	d1bd      	bne.n	59e8 <__aeabi_ddiv+0x58c>
    5a6c:	0001      	movs	r1, r0
    5a6e:	0753      	lsls	r3, r2, #29
    5a70:	0252      	lsls	r2, r2, #9
    5a72:	0b12      	lsrs	r2, r2, #12
    5a74:	08c9      	lsrs	r1, r1, #3
    5a76:	4319      	orrs	r1, r3
    5a78:	2301      	movs	r3, #1
    5a7a:	4688      	mov	r8, r1
    5a7c:	9902      	ldr	r1, [sp, #8]
    5a7e:	2400      	movs	r4, #0
    5a80:	4019      	ands	r1, r3
    5a82:	468c      	mov	ip, r1
    5a84:	e5b8      	b.n	55f8 <__aeabi_ddiv+0x19c>
    5a86:	4552      	cmp	r2, sl
    5a88:	d8be      	bhi.n	5a08 <__aeabi_ddiv+0x5ac>
    5a8a:	468b      	mov	fp, r1
    5a8c:	2500      	movs	r5, #0
    5a8e:	e660      	b.n	5752 <__aeabi_ddiv+0x2f6>
    5a90:	9d03      	ldr	r5, [sp, #12]
    5a92:	429d      	cmp	r5, r3
    5a94:	d3c6      	bcc.n	5a24 <__aeabi_ddiv+0x5c8>
    5a96:	0011      	movs	r1, r2
    5a98:	e762      	b.n	5960 <__aeabi_ddiv+0x504>
    5a9a:	2500      	movs	r5, #0
    5a9c:	e7d8      	b.n	5a50 <__aeabi_ddiv+0x5f4>
    5a9e:	2280      	movs	r2, #128	; 0x80
    5aa0:	465b      	mov	r3, fp
    5aa2:	0312      	lsls	r2, r2, #12
    5aa4:	431a      	orrs	r2, r3
    5aa6:	9b01      	ldr	r3, [sp, #4]
    5aa8:	0312      	lsls	r2, r2, #12
    5aaa:	0b12      	lsrs	r2, r2, #12
    5aac:	469c      	mov	ip, r3
    5aae:	4688      	mov	r8, r1
    5ab0:	4c03      	ldr	r4, [pc, #12]	; (5ac0 <__aeabi_ddiv+0x664>)
    5ab2:	e5a1      	b.n	55f8 <__aeabi_ddiv+0x19c>
    5ab4:	000003ff 	.word	0x000003ff
    5ab8:	feffffff 	.word	0xfeffffff
    5abc:	000007fe 	.word	0x000007fe
    5ac0:	000007ff 	.word	0x000007ff

00005ac4 <__aeabi_dmul>:
    5ac4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5ac6:	4657      	mov	r7, sl
    5ac8:	4645      	mov	r5, r8
    5aca:	46de      	mov	lr, fp
    5acc:	464e      	mov	r6, r9
    5ace:	b5e0      	push	{r5, r6, r7, lr}
    5ad0:	030c      	lsls	r4, r1, #12
    5ad2:	4698      	mov	r8, r3
    5ad4:	004e      	lsls	r6, r1, #1
    5ad6:	0b23      	lsrs	r3, r4, #12
    5ad8:	b087      	sub	sp, #28
    5ada:	0007      	movs	r7, r0
    5adc:	4692      	mov	sl, r2
    5ade:	469b      	mov	fp, r3
    5ae0:	0d76      	lsrs	r6, r6, #21
    5ae2:	0fcd      	lsrs	r5, r1, #31
    5ae4:	2e00      	cmp	r6, #0
    5ae6:	d06b      	beq.n	5bc0 <__aeabi_dmul+0xfc>
    5ae8:	4b6d      	ldr	r3, [pc, #436]	; (5ca0 <__aeabi_dmul+0x1dc>)
    5aea:	429e      	cmp	r6, r3
    5aec:	d035      	beq.n	5b5a <__aeabi_dmul+0x96>
    5aee:	2480      	movs	r4, #128	; 0x80
    5af0:	465b      	mov	r3, fp
    5af2:	0f42      	lsrs	r2, r0, #29
    5af4:	0424      	lsls	r4, r4, #16
    5af6:	00db      	lsls	r3, r3, #3
    5af8:	4314      	orrs	r4, r2
    5afa:	431c      	orrs	r4, r3
    5afc:	00c3      	lsls	r3, r0, #3
    5afe:	4699      	mov	r9, r3
    5b00:	4b68      	ldr	r3, [pc, #416]	; (5ca4 <__aeabi_dmul+0x1e0>)
    5b02:	46a3      	mov	fp, r4
    5b04:	469c      	mov	ip, r3
    5b06:	2300      	movs	r3, #0
    5b08:	2700      	movs	r7, #0
    5b0a:	4466      	add	r6, ip
    5b0c:	9302      	str	r3, [sp, #8]
    5b0e:	4643      	mov	r3, r8
    5b10:	031c      	lsls	r4, r3, #12
    5b12:	005a      	lsls	r2, r3, #1
    5b14:	0fdb      	lsrs	r3, r3, #31
    5b16:	4650      	mov	r0, sl
    5b18:	0b24      	lsrs	r4, r4, #12
    5b1a:	0d52      	lsrs	r2, r2, #21
    5b1c:	4698      	mov	r8, r3
    5b1e:	d100      	bne.n	5b22 <__aeabi_dmul+0x5e>
    5b20:	e076      	b.n	5c10 <__aeabi_dmul+0x14c>
    5b22:	4b5f      	ldr	r3, [pc, #380]	; (5ca0 <__aeabi_dmul+0x1dc>)
    5b24:	429a      	cmp	r2, r3
    5b26:	d06d      	beq.n	5c04 <__aeabi_dmul+0x140>
    5b28:	2380      	movs	r3, #128	; 0x80
    5b2a:	0f41      	lsrs	r1, r0, #29
    5b2c:	041b      	lsls	r3, r3, #16
    5b2e:	430b      	orrs	r3, r1
    5b30:	495c      	ldr	r1, [pc, #368]	; (5ca4 <__aeabi_dmul+0x1e0>)
    5b32:	00e4      	lsls	r4, r4, #3
    5b34:	468c      	mov	ip, r1
    5b36:	431c      	orrs	r4, r3
    5b38:	00c3      	lsls	r3, r0, #3
    5b3a:	2000      	movs	r0, #0
    5b3c:	4462      	add	r2, ip
    5b3e:	4641      	mov	r1, r8
    5b40:	18b6      	adds	r6, r6, r2
    5b42:	4069      	eors	r1, r5
    5b44:	1c72      	adds	r2, r6, #1
    5b46:	9101      	str	r1, [sp, #4]
    5b48:	4694      	mov	ip, r2
    5b4a:	4307      	orrs	r7, r0
    5b4c:	2f0f      	cmp	r7, #15
    5b4e:	d900      	bls.n	5b52 <__aeabi_dmul+0x8e>
    5b50:	e0b0      	b.n	5cb4 <__aeabi_dmul+0x1f0>
    5b52:	4a55      	ldr	r2, [pc, #340]	; (5ca8 <__aeabi_dmul+0x1e4>)
    5b54:	00bf      	lsls	r7, r7, #2
    5b56:	59d2      	ldr	r2, [r2, r7]
    5b58:	4697      	mov	pc, r2
    5b5a:	465b      	mov	r3, fp
    5b5c:	4303      	orrs	r3, r0
    5b5e:	4699      	mov	r9, r3
    5b60:	d000      	beq.n	5b64 <__aeabi_dmul+0xa0>
    5b62:	e087      	b.n	5c74 <__aeabi_dmul+0x1b0>
    5b64:	2300      	movs	r3, #0
    5b66:	469b      	mov	fp, r3
    5b68:	3302      	adds	r3, #2
    5b6a:	2708      	movs	r7, #8
    5b6c:	9302      	str	r3, [sp, #8]
    5b6e:	e7ce      	b.n	5b0e <__aeabi_dmul+0x4a>
    5b70:	4642      	mov	r2, r8
    5b72:	9201      	str	r2, [sp, #4]
    5b74:	2802      	cmp	r0, #2
    5b76:	d067      	beq.n	5c48 <__aeabi_dmul+0x184>
    5b78:	2803      	cmp	r0, #3
    5b7a:	d100      	bne.n	5b7e <__aeabi_dmul+0xba>
    5b7c:	e20e      	b.n	5f9c <__aeabi_dmul+0x4d8>
    5b7e:	2801      	cmp	r0, #1
    5b80:	d000      	beq.n	5b84 <__aeabi_dmul+0xc0>
    5b82:	e162      	b.n	5e4a <__aeabi_dmul+0x386>
    5b84:	2300      	movs	r3, #0
    5b86:	2400      	movs	r4, #0
    5b88:	2200      	movs	r2, #0
    5b8a:	4699      	mov	r9, r3
    5b8c:	9901      	ldr	r1, [sp, #4]
    5b8e:	4001      	ands	r1, r0
    5b90:	b2cd      	uxtb	r5, r1
    5b92:	2100      	movs	r1, #0
    5b94:	0312      	lsls	r2, r2, #12
    5b96:	0d0b      	lsrs	r3, r1, #20
    5b98:	0b12      	lsrs	r2, r2, #12
    5b9a:	051b      	lsls	r3, r3, #20
    5b9c:	4313      	orrs	r3, r2
    5b9e:	4a43      	ldr	r2, [pc, #268]	; (5cac <__aeabi_dmul+0x1e8>)
    5ba0:	0524      	lsls	r4, r4, #20
    5ba2:	4013      	ands	r3, r2
    5ba4:	431c      	orrs	r4, r3
    5ba6:	0064      	lsls	r4, r4, #1
    5ba8:	07ed      	lsls	r5, r5, #31
    5baa:	0864      	lsrs	r4, r4, #1
    5bac:	432c      	orrs	r4, r5
    5bae:	4648      	mov	r0, r9
    5bb0:	0021      	movs	r1, r4
    5bb2:	b007      	add	sp, #28
    5bb4:	bc3c      	pop	{r2, r3, r4, r5}
    5bb6:	4690      	mov	r8, r2
    5bb8:	4699      	mov	r9, r3
    5bba:	46a2      	mov	sl, r4
    5bbc:	46ab      	mov	fp, r5
    5bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5bc0:	4303      	orrs	r3, r0
    5bc2:	4699      	mov	r9, r3
    5bc4:	d04f      	beq.n	5c66 <__aeabi_dmul+0x1a2>
    5bc6:	465b      	mov	r3, fp
    5bc8:	2b00      	cmp	r3, #0
    5bca:	d100      	bne.n	5bce <__aeabi_dmul+0x10a>
    5bcc:	e189      	b.n	5ee2 <__aeabi_dmul+0x41e>
    5bce:	4658      	mov	r0, fp
    5bd0:	f000 fed6 	bl	6980 <__clzsi2>
    5bd4:	0003      	movs	r3, r0
    5bd6:	3b0b      	subs	r3, #11
    5bd8:	2b1c      	cmp	r3, #28
    5bda:	dd00      	ble.n	5bde <__aeabi_dmul+0x11a>
    5bdc:	e17a      	b.n	5ed4 <__aeabi_dmul+0x410>
    5bde:	221d      	movs	r2, #29
    5be0:	1ad3      	subs	r3, r2, r3
    5be2:	003a      	movs	r2, r7
    5be4:	0001      	movs	r1, r0
    5be6:	465c      	mov	r4, fp
    5be8:	40da      	lsrs	r2, r3
    5bea:	3908      	subs	r1, #8
    5bec:	408c      	lsls	r4, r1
    5bee:	0013      	movs	r3, r2
    5bf0:	408f      	lsls	r7, r1
    5bf2:	4323      	orrs	r3, r4
    5bf4:	469b      	mov	fp, r3
    5bf6:	46b9      	mov	r9, r7
    5bf8:	2300      	movs	r3, #0
    5bfa:	4e2d      	ldr	r6, [pc, #180]	; (5cb0 <__aeabi_dmul+0x1ec>)
    5bfc:	2700      	movs	r7, #0
    5bfe:	1a36      	subs	r6, r6, r0
    5c00:	9302      	str	r3, [sp, #8]
    5c02:	e784      	b.n	5b0e <__aeabi_dmul+0x4a>
    5c04:	4653      	mov	r3, sl
    5c06:	4323      	orrs	r3, r4
    5c08:	d12a      	bne.n	5c60 <__aeabi_dmul+0x19c>
    5c0a:	2400      	movs	r4, #0
    5c0c:	2002      	movs	r0, #2
    5c0e:	e796      	b.n	5b3e <__aeabi_dmul+0x7a>
    5c10:	4653      	mov	r3, sl
    5c12:	4323      	orrs	r3, r4
    5c14:	d020      	beq.n	5c58 <__aeabi_dmul+0x194>
    5c16:	2c00      	cmp	r4, #0
    5c18:	d100      	bne.n	5c1c <__aeabi_dmul+0x158>
    5c1a:	e157      	b.n	5ecc <__aeabi_dmul+0x408>
    5c1c:	0020      	movs	r0, r4
    5c1e:	f000 feaf 	bl	6980 <__clzsi2>
    5c22:	0003      	movs	r3, r0
    5c24:	3b0b      	subs	r3, #11
    5c26:	2b1c      	cmp	r3, #28
    5c28:	dd00      	ble.n	5c2c <__aeabi_dmul+0x168>
    5c2a:	e149      	b.n	5ec0 <__aeabi_dmul+0x3fc>
    5c2c:	211d      	movs	r1, #29
    5c2e:	1acb      	subs	r3, r1, r3
    5c30:	4651      	mov	r1, sl
    5c32:	0002      	movs	r2, r0
    5c34:	40d9      	lsrs	r1, r3
    5c36:	4653      	mov	r3, sl
    5c38:	3a08      	subs	r2, #8
    5c3a:	4094      	lsls	r4, r2
    5c3c:	4093      	lsls	r3, r2
    5c3e:	430c      	orrs	r4, r1
    5c40:	4a1b      	ldr	r2, [pc, #108]	; (5cb0 <__aeabi_dmul+0x1ec>)
    5c42:	1a12      	subs	r2, r2, r0
    5c44:	2000      	movs	r0, #0
    5c46:	e77a      	b.n	5b3e <__aeabi_dmul+0x7a>
    5c48:	2501      	movs	r5, #1
    5c4a:	9b01      	ldr	r3, [sp, #4]
    5c4c:	4c14      	ldr	r4, [pc, #80]	; (5ca0 <__aeabi_dmul+0x1dc>)
    5c4e:	401d      	ands	r5, r3
    5c50:	2300      	movs	r3, #0
    5c52:	2200      	movs	r2, #0
    5c54:	4699      	mov	r9, r3
    5c56:	e79c      	b.n	5b92 <__aeabi_dmul+0xce>
    5c58:	2400      	movs	r4, #0
    5c5a:	2200      	movs	r2, #0
    5c5c:	2001      	movs	r0, #1
    5c5e:	e76e      	b.n	5b3e <__aeabi_dmul+0x7a>
    5c60:	4653      	mov	r3, sl
    5c62:	2003      	movs	r0, #3
    5c64:	e76b      	b.n	5b3e <__aeabi_dmul+0x7a>
    5c66:	2300      	movs	r3, #0
    5c68:	469b      	mov	fp, r3
    5c6a:	3301      	adds	r3, #1
    5c6c:	2704      	movs	r7, #4
    5c6e:	2600      	movs	r6, #0
    5c70:	9302      	str	r3, [sp, #8]
    5c72:	e74c      	b.n	5b0e <__aeabi_dmul+0x4a>
    5c74:	2303      	movs	r3, #3
    5c76:	4681      	mov	r9, r0
    5c78:	270c      	movs	r7, #12
    5c7a:	9302      	str	r3, [sp, #8]
    5c7c:	e747      	b.n	5b0e <__aeabi_dmul+0x4a>
    5c7e:	2280      	movs	r2, #128	; 0x80
    5c80:	2300      	movs	r3, #0
    5c82:	2500      	movs	r5, #0
    5c84:	0312      	lsls	r2, r2, #12
    5c86:	4699      	mov	r9, r3
    5c88:	4c05      	ldr	r4, [pc, #20]	; (5ca0 <__aeabi_dmul+0x1dc>)
    5c8a:	e782      	b.n	5b92 <__aeabi_dmul+0xce>
    5c8c:	465c      	mov	r4, fp
    5c8e:	464b      	mov	r3, r9
    5c90:	9802      	ldr	r0, [sp, #8]
    5c92:	e76f      	b.n	5b74 <__aeabi_dmul+0xb0>
    5c94:	465c      	mov	r4, fp
    5c96:	464b      	mov	r3, r9
    5c98:	9501      	str	r5, [sp, #4]
    5c9a:	9802      	ldr	r0, [sp, #8]
    5c9c:	e76a      	b.n	5b74 <__aeabi_dmul+0xb0>
    5c9e:	46c0      	nop			; (mov r8, r8)
    5ca0:	000007ff 	.word	0x000007ff
    5ca4:	fffffc01 	.word	0xfffffc01
    5ca8:	00013808 	.word	0x00013808
    5cac:	800fffff 	.word	0x800fffff
    5cb0:	fffffc0d 	.word	0xfffffc0d
    5cb4:	464a      	mov	r2, r9
    5cb6:	4649      	mov	r1, r9
    5cb8:	0c17      	lsrs	r7, r2, #16
    5cba:	0c1a      	lsrs	r2, r3, #16
    5cbc:	041b      	lsls	r3, r3, #16
    5cbe:	0c1b      	lsrs	r3, r3, #16
    5cc0:	0408      	lsls	r0, r1, #16
    5cc2:	0019      	movs	r1, r3
    5cc4:	0c00      	lsrs	r0, r0, #16
    5cc6:	4341      	muls	r1, r0
    5cc8:	0015      	movs	r5, r2
    5cca:	4688      	mov	r8, r1
    5ccc:	0019      	movs	r1, r3
    5cce:	437d      	muls	r5, r7
    5cd0:	4379      	muls	r1, r7
    5cd2:	9503      	str	r5, [sp, #12]
    5cd4:	4689      	mov	r9, r1
    5cd6:	0029      	movs	r1, r5
    5cd8:	0015      	movs	r5, r2
    5cda:	4345      	muls	r5, r0
    5cdc:	444d      	add	r5, r9
    5cde:	9502      	str	r5, [sp, #8]
    5ce0:	4645      	mov	r5, r8
    5ce2:	0c2d      	lsrs	r5, r5, #16
    5ce4:	46aa      	mov	sl, r5
    5ce6:	9d02      	ldr	r5, [sp, #8]
    5ce8:	4455      	add	r5, sl
    5cea:	45a9      	cmp	r9, r5
    5cec:	d906      	bls.n	5cfc <__aeabi_dmul+0x238>
    5cee:	468a      	mov	sl, r1
    5cf0:	2180      	movs	r1, #128	; 0x80
    5cf2:	0249      	lsls	r1, r1, #9
    5cf4:	4689      	mov	r9, r1
    5cf6:	44ca      	add	sl, r9
    5cf8:	4651      	mov	r1, sl
    5cfa:	9103      	str	r1, [sp, #12]
    5cfc:	0c29      	lsrs	r1, r5, #16
    5cfe:	9104      	str	r1, [sp, #16]
    5d00:	4641      	mov	r1, r8
    5d02:	0409      	lsls	r1, r1, #16
    5d04:	042d      	lsls	r5, r5, #16
    5d06:	0c09      	lsrs	r1, r1, #16
    5d08:	4688      	mov	r8, r1
    5d0a:	0029      	movs	r1, r5
    5d0c:	0c25      	lsrs	r5, r4, #16
    5d0e:	0424      	lsls	r4, r4, #16
    5d10:	4441      	add	r1, r8
    5d12:	0c24      	lsrs	r4, r4, #16
    5d14:	9105      	str	r1, [sp, #20]
    5d16:	0021      	movs	r1, r4
    5d18:	4341      	muls	r1, r0
    5d1a:	4688      	mov	r8, r1
    5d1c:	0021      	movs	r1, r4
    5d1e:	4379      	muls	r1, r7
    5d20:	468a      	mov	sl, r1
    5d22:	4368      	muls	r0, r5
    5d24:	4641      	mov	r1, r8
    5d26:	4450      	add	r0, sl
    5d28:	4681      	mov	r9, r0
    5d2a:	0c08      	lsrs	r0, r1, #16
    5d2c:	4448      	add	r0, r9
    5d2e:	436f      	muls	r7, r5
    5d30:	4582      	cmp	sl, r0
    5d32:	d903      	bls.n	5d3c <__aeabi_dmul+0x278>
    5d34:	2180      	movs	r1, #128	; 0x80
    5d36:	0249      	lsls	r1, r1, #9
    5d38:	4689      	mov	r9, r1
    5d3a:	444f      	add	r7, r9
    5d3c:	0c01      	lsrs	r1, r0, #16
    5d3e:	4689      	mov	r9, r1
    5d40:	0039      	movs	r1, r7
    5d42:	4449      	add	r1, r9
    5d44:	9102      	str	r1, [sp, #8]
    5d46:	4641      	mov	r1, r8
    5d48:	040f      	lsls	r7, r1, #16
    5d4a:	9904      	ldr	r1, [sp, #16]
    5d4c:	0c3f      	lsrs	r7, r7, #16
    5d4e:	4688      	mov	r8, r1
    5d50:	0400      	lsls	r0, r0, #16
    5d52:	19c0      	adds	r0, r0, r7
    5d54:	4480      	add	r8, r0
    5d56:	4641      	mov	r1, r8
    5d58:	9104      	str	r1, [sp, #16]
    5d5a:	4659      	mov	r1, fp
    5d5c:	0c0f      	lsrs	r7, r1, #16
    5d5e:	0409      	lsls	r1, r1, #16
    5d60:	0c09      	lsrs	r1, r1, #16
    5d62:	4688      	mov	r8, r1
    5d64:	4359      	muls	r1, r3
    5d66:	468a      	mov	sl, r1
    5d68:	0039      	movs	r1, r7
    5d6a:	4351      	muls	r1, r2
    5d6c:	4689      	mov	r9, r1
    5d6e:	4641      	mov	r1, r8
    5d70:	434a      	muls	r2, r1
    5d72:	4651      	mov	r1, sl
    5d74:	0c09      	lsrs	r1, r1, #16
    5d76:	468b      	mov	fp, r1
    5d78:	437b      	muls	r3, r7
    5d7a:	18d2      	adds	r2, r2, r3
    5d7c:	445a      	add	r2, fp
    5d7e:	4293      	cmp	r3, r2
    5d80:	d903      	bls.n	5d8a <__aeabi_dmul+0x2c6>
    5d82:	2380      	movs	r3, #128	; 0x80
    5d84:	025b      	lsls	r3, r3, #9
    5d86:	469b      	mov	fp, r3
    5d88:	44d9      	add	r9, fp
    5d8a:	4651      	mov	r1, sl
    5d8c:	0409      	lsls	r1, r1, #16
    5d8e:	0c09      	lsrs	r1, r1, #16
    5d90:	468a      	mov	sl, r1
    5d92:	4641      	mov	r1, r8
    5d94:	4361      	muls	r1, r4
    5d96:	437c      	muls	r4, r7
    5d98:	0c13      	lsrs	r3, r2, #16
    5d9a:	0412      	lsls	r2, r2, #16
    5d9c:	444b      	add	r3, r9
    5d9e:	4452      	add	r2, sl
    5da0:	46a1      	mov	r9, r4
    5da2:	468a      	mov	sl, r1
    5da4:	003c      	movs	r4, r7
    5da6:	4641      	mov	r1, r8
    5da8:	436c      	muls	r4, r5
    5daa:	434d      	muls	r5, r1
    5dac:	4651      	mov	r1, sl
    5dae:	444d      	add	r5, r9
    5db0:	0c0f      	lsrs	r7, r1, #16
    5db2:	197d      	adds	r5, r7, r5
    5db4:	45a9      	cmp	r9, r5
    5db6:	d903      	bls.n	5dc0 <__aeabi_dmul+0x2fc>
    5db8:	2180      	movs	r1, #128	; 0x80
    5dba:	0249      	lsls	r1, r1, #9
    5dbc:	4688      	mov	r8, r1
    5dbe:	4444      	add	r4, r8
    5dc0:	9f04      	ldr	r7, [sp, #16]
    5dc2:	9903      	ldr	r1, [sp, #12]
    5dc4:	46b8      	mov	r8, r7
    5dc6:	4441      	add	r1, r8
    5dc8:	468b      	mov	fp, r1
    5dca:	4583      	cmp	fp, r0
    5dcc:	4180      	sbcs	r0, r0
    5dce:	4241      	negs	r1, r0
    5dd0:	4688      	mov	r8, r1
    5dd2:	4651      	mov	r1, sl
    5dd4:	0408      	lsls	r0, r1, #16
    5dd6:	042f      	lsls	r7, r5, #16
    5dd8:	0c00      	lsrs	r0, r0, #16
    5dda:	183f      	adds	r7, r7, r0
    5ddc:	4658      	mov	r0, fp
    5dde:	9902      	ldr	r1, [sp, #8]
    5de0:	1810      	adds	r0, r2, r0
    5de2:	4689      	mov	r9, r1
    5de4:	4290      	cmp	r0, r2
    5de6:	4192      	sbcs	r2, r2
    5de8:	444f      	add	r7, r9
    5dea:	46ba      	mov	sl, r7
    5dec:	4252      	negs	r2, r2
    5dee:	4699      	mov	r9, r3
    5df0:	4693      	mov	fp, r2
    5df2:	44c2      	add	sl, r8
    5df4:	44d1      	add	r9, sl
    5df6:	44cb      	add	fp, r9
    5df8:	428f      	cmp	r7, r1
    5dfa:	41bf      	sbcs	r7, r7
    5dfc:	45c2      	cmp	sl, r8
    5dfe:	4189      	sbcs	r1, r1
    5e00:	4599      	cmp	r9, r3
    5e02:	419b      	sbcs	r3, r3
    5e04:	4593      	cmp	fp, r2
    5e06:	4192      	sbcs	r2, r2
    5e08:	427f      	negs	r7, r7
    5e0a:	4249      	negs	r1, r1
    5e0c:	0c2d      	lsrs	r5, r5, #16
    5e0e:	4252      	negs	r2, r2
    5e10:	430f      	orrs	r7, r1
    5e12:	425b      	negs	r3, r3
    5e14:	4313      	orrs	r3, r2
    5e16:	197f      	adds	r7, r7, r5
    5e18:	18ff      	adds	r7, r7, r3
    5e1a:	465b      	mov	r3, fp
    5e1c:	193c      	adds	r4, r7, r4
    5e1e:	0ddb      	lsrs	r3, r3, #23
    5e20:	9a05      	ldr	r2, [sp, #20]
    5e22:	0264      	lsls	r4, r4, #9
    5e24:	431c      	orrs	r4, r3
    5e26:	0243      	lsls	r3, r0, #9
    5e28:	4313      	orrs	r3, r2
    5e2a:	1e5d      	subs	r5, r3, #1
    5e2c:	41ab      	sbcs	r3, r5
    5e2e:	465a      	mov	r2, fp
    5e30:	0dc0      	lsrs	r0, r0, #23
    5e32:	4303      	orrs	r3, r0
    5e34:	0252      	lsls	r2, r2, #9
    5e36:	4313      	orrs	r3, r2
    5e38:	01e2      	lsls	r2, r4, #7
    5e3a:	d556      	bpl.n	5eea <__aeabi_dmul+0x426>
    5e3c:	2001      	movs	r0, #1
    5e3e:	085a      	lsrs	r2, r3, #1
    5e40:	4003      	ands	r3, r0
    5e42:	4313      	orrs	r3, r2
    5e44:	07e2      	lsls	r2, r4, #31
    5e46:	4313      	orrs	r3, r2
    5e48:	0864      	lsrs	r4, r4, #1
    5e4a:	485a      	ldr	r0, [pc, #360]	; (5fb4 <__aeabi_dmul+0x4f0>)
    5e4c:	4460      	add	r0, ip
    5e4e:	2800      	cmp	r0, #0
    5e50:	dd4d      	ble.n	5eee <__aeabi_dmul+0x42a>
    5e52:	075a      	lsls	r2, r3, #29
    5e54:	d009      	beq.n	5e6a <__aeabi_dmul+0x3a6>
    5e56:	220f      	movs	r2, #15
    5e58:	401a      	ands	r2, r3
    5e5a:	2a04      	cmp	r2, #4
    5e5c:	d005      	beq.n	5e6a <__aeabi_dmul+0x3a6>
    5e5e:	1d1a      	adds	r2, r3, #4
    5e60:	429a      	cmp	r2, r3
    5e62:	419b      	sbcs	r3, r3
    5e64:	425b      	negs	r3, r3
    5e66:	18e4      	adds	r4, r4, r3
    5e68:	0013      	movs	r3, r2
    5e6a:	01e2      	lsls	r2, r4, #7
    5e6c:	d504      	bpl.n	5e78 <__aeabi_dmul+0x3b4>
    5e6e:	2080      	movs	r0, #128	; 0x80
    5e70:	4a51      	ldr	r2, [pc, #324]	; (5fb8 <__aeabi_dmul+0x4f4>)
    5e72:	00c0      	lsls	r0, r0, #3
    5e74:	4014      	ands	r4, r2
    5e76:	4460      	add	r0, ip
    5e78:	4a50      	ldr	r2, [pc, #320]	; (5fbc <__aeabi_dmul+0x4f8>)
    5e7a:	4290      	cmp	r0, r2
    5e7c:	dd00      	ble.n	5e80 <__aeabi_dmul+0x3bc>
    5e7e:	e6e3      	b.n	5c48 <__aeabi_dmul+0x184>
    5e80:	2501      	movs	r5, #1
    5e82:	08db      	lsrs	r3, r3, #3
    5e84:	0762      	lsls	r2, r4, #29
    5e86:	431a      	orrs	r2, r3
    5e88:	0264      	lsls	r4, r4, #9
    5e8a:	9b01      	ldr	r3, [sp, #4]
    5e8c:	4691      	mov	r9, r2
    5e8e:	0b22      	lsrs	r2, r4, #12
    5e90:	0544      	lsls	r4, r0, #21
    5e92:	0d64      	lsrs	r4, r4, #21
    5e94:	401d      	ands	r5, r3
    5e96:	e67c      	b.n	5b92 <__aeabi_dmul+0xce>
    5e98:	2280      	movs	r2, #128	; 0x80
    5e9a:	4659      	mov	r1, fp
    5e9c:	0312      	lsls	r2, r2, #12
    5e9e:	4211      	tst	r1, r2
    5ea0:	d008      	beq.n	5eb4 <__aeabi_dmul+0x3f0>
    5ea2:	4214      	tst	r4, r2
    5ea4:	d106      	bne.n	5eb4 <__aeabi_dmul+0x3f0>
    5ea6:	4322      	orrs	r2, r4
    5ea8:	0312      	lsls	r2, r2, #12
    5eaa:	0b12      	lsrs	r2, r2, #12
    5eac:	4645      	mov	r5, r8
    5eae:	4699      	mov	r9, r3
    5eb0:	4c43      	ldr	r4, [pc, #268]	; (5fc0 <__aeabi_dmul+0x4fc>)
    5eb2:	e66e      	b.n	5b92 <__aeabi_dmul+0xce>
    5eb4:	465b      	mov	r3, fp
    5eb6:	431a      	orrs	r2, r3
    5eb8:	0312      	lsls	r2, r2, #12
    5eba:	0b12      	lsrs	r2, r2, #12
    5ebc:	4c40      	ldr	r4, [pc, #256]	; (5fc0 <__aeabi_dmul+0x4fc>)
    5ebe:	e668      	b.n	5b92 <__aeabi_dmul+0xce>
    5ec0:	0003      	movs	r3, r0
    5ec2:	4654      	mov	r4, sl
    5ec4:	3b28      	subs	r3, #40	; 0x28
    5ec6:	409c      	lsls	r4, r3
    5ec8:	2300      	movs	r3, #0
    5eca:	e6b9      	b.n	5c40 <__aeabi_dmul+0x17c>
    5ecc:	f000 fd58 	bl	6980 <__clzsi2>
    5ed0:	3020      	adds	r0, #32
    5ed2:	e6a6      	b.n	5c22 <__aeabi_dmul+0x15e>
    5ed4:	0003      	movs	r3, r0
    5ed6:	3b28      	subs	r3, #40	; 0x28
    5ed8:	409f      	lsls	r7, r3
    5eda:	2300      	movs	r3, #0
    5edc:	46bb      	mov	fp, r7
    5ede:	4699      	mov	r9, r3
    5ee0:	e68a      	b.n	5bf8 <__aeabi_dmul+0x134>
    5ee2:	f000 fd4d 	bl	6980 <__clzsi2>
    5ee6:	3020      	adds	r0, #32
    5ee8:	e674      	b.n	5bd4 <__aeabi_dmul+0x110>
    5eea:	46b4      	mov	ip, r6
    5eec:	e7ad      	b.n	5e4a <__aeabi_dmul+0x386>
    5eee:	2501      	movs	r5, #1
    5ef0:	1a2a      	subs	r2, r5, r0
    5ef2:	2a38      	cmp	r2, #56	; 0x38
    5ef4:	dd06      	ble.n	5f04 <__aeabi_dmul+0x440>
    5ef6:	9b01      	ldr	r3, [sp, #4]
    5ef8:	2400      	movs	r4, #0
    5efa:	401d      	ands	r5, r3
    5efc:	2300      	movs	r3, #0
    5efe:	2200      	movs	r2, #0
    5f00:	4699      	mov	r9, r3
    5f02:	e646      	b.n	5b92 <__aeabi_dmul+0xce>
    5f04:	2a1f      	cmp	r2, #31
    5f06:	dc21      	bgt.n	5f4c <__aeabi_dmul+0x488>
    5f08:	2520      	movs	r5, #32
    5f0a:	0020      	movs	r0, r4
    5f0c:	1aad      	subs	r5, r5, r2
    5f0e:	001e      	movs	r6, r3
    5f10:	40ab      	lsls	r3, r5
    5f12:	40a8      	lsls	r0, r5
    5f14:	40d6      	lsrs	r6, r2
    5f16:	1e5d      	subs	r5, r3, #1
    5f18:	41ab      	sbcs	r3, r5
    5f1a:	4330      	orrs	r0, r6
    5f1c:	4318      	orrs	r0, r3
    5f1e:	40d4      	lsrs	r4, r2
    5f20:	0743      	lsls	r3, r0, #29
    5f22:	d009      	beq.n	5f38 <__aeabi_dmul+0x474>
    5f24:	230f      	movs	r3, #15
    5f26:	4003      	ands	r3, r0
    5f28:	2b04      	cmp	r3, #4
    5f2a:	d005      	beq.n	5f38 <__aeabi_dmul+0x474>
    5f2c:	0003      	movs	r3, r0
    5f2e:	1d18      	adds	r0, r3, #4
    5f30:	4298      	cmp	r0, r3
    5f32:	419b      	sbcs	r3, r3
    5f34:	425b      	negs	r3, r3
    5f36:	18e4      	adds	r4, r4, r3
    5f38:	0223      	lsls	r3, r4, #8
    5f3a:	d521      	bpl.n	5f80 <__aeabi_dmul+0x4bc>
    5f3c:	2501      	movs	r5, #1
    5f3e:	9b01      	ldr	r3, [sp, #4]
    5f40:	2401      	movs	r4, #1
    5f42:	401d      	ands	r5, r3
    5f44:	2300      	movs	r3, #0
    5f46:	2200      	movs	r2, #0
    5f48:	4699      	mov	r9, r3
    5f4a:	e622      	b.n	5b92 <__aeabi_dmul+0xce>
    5f4c:	251f      	movs	r5, #31
    5f4e:	0021      	movs	r1, r4
    5f50:	426d      	negs	r5, r5
    5f52:	1a28      	subs	r0, r5, r0
    5f54:	40c1      	lsrs	r1, r0
    5f56:	0008      	movs	r0, r1
    5f58:	2a20      	cmp	r2, #32
    5f5a:	d01d      	beq.n	5f98 <__aeabi_dmul+0x4d4>
    5f5c:	355f      	adds	r5, #95	; 0x5f
    5f5e:	1aaa      	subs	r2, r5, r2
    5f60:	4094      	lsls	r4, r2
    5f62:	4323      	orrs	r3, r4
    5f64:	1e5c      	subs	r4, r3, #1
    5f66:	41a3      	sbcs	r3, r4
    5f68:	2507      	movs	r5, #7
    5f6a:	4303      	orrs	r3, r0
    5f6c:	401d      	ands	r5, r3
    5f6e:	2200      	movs	r2, #0
    5f70:	2d00      	cmp	r5, #0
    5f72:	d009      	beq.n	5f88 <__aeabi_dmul+0x4c4>
    5f74:	220f      	movs	r2, #15
    5f76:	2400      	movs	r4, #0
    5f78:	401a      	ands	r2, r3
    5f7a:	0018      	movs	r0, r3
    5f7c:	2a04      	cmp	r2, #4
    5f7e:	d1d6      	bne.n	5f2e <__aeabi_dmul+0x46a>
    5f80:	0003      	movs	r3, r0
    5f82:	0765      	lsls	r5, r4, #29
    5f84:	0264      	lsls	r4, r4, #9
    5f86:	0b22      	lsrs	r2, r4, #12
    5f88:	08db      	lsrs	r3, r3, #3
    5f8a:	432b      	orrs	r3, r5
    5f8c:	2501      	movs	r5, #1
    5f8e:	4699      	mov	r9, r3
    5f90:	9b01      	ldr	r3, [sp, #4]
    5f92:	2400      	movs	r4, #0
    5f94:	401d      	ands	r5, r3
    5f96:	e5fc      	b.n	5b92 <__aeabi_dmul+0xce>
    5f98:	2400      	movs	r4, #0
    5f9a:	e7e2      	b.n	5f62 <__aeabi_dmul+0x49e>
    5f9c:	2280      	movs	r2, #128	; 0x80
    5f9e:	2501      	movs	r5, #1
    5fa0:	0312      	lsls	r2, r2, #12
    5fa2:	4322      	orrs	r2, r4
    5fa4:	9901      	ldr	r1, [sp, #4]
    5fa6:	0312      	lsls	r2, r2, #12
    5fa8:	0b12      	lsrs	r2, r2, #12
    5faa:	400d      	ands	r5, r1
    5fac:	4699      	mov	r9, r3
    5fae:	4c04      	ldr	r4, [pc, #16]	; (5fc0 <__aeabi_dmul+0x4fc>)
    5fb0:	e5ef      	b.n	5b92 <__aeabi_dmul+0xce>
    5fb2:	46c0      	nop			; (mov r8, r8)
    5fb4:	000003ff 	.word	0x000003ff
    5fb8:	feffffff 	.word	0xfeffffff
    5fbc:	000007fe 	.word	0x000007fe
    5fc0:	000007ff 	.word	0x000007ff

00005fc4 <__aeabi_dsub>:
    5fc4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5fc6:	4646      	mov	r6, r8
    5fc8:	46d6      	mov	lr, sl
    5fca:	464f      	mov	r7, r9
    5fcc:	030c      	lsls	r4, r1, #12
    5fce:	b5c0      	push	{r6, r7, lr}
    5fd0:	0fcd      	lsrs	r5, r1, #31
    5fd2:	004e      	lsls	r6, r1, #1
    5fd4:	0a61      	lsrs	r1, r4, #9
    5fd6:	0f44      	lsrs	r4, r0, #29
    5fd8:	430c      	orrs	r4, r1
    5fda:	00c1      	lsls	r1, r0, #3
    5fdc:	0058      	lsls	r0, r3, #1
    5fde:	0d40      	lsrs	r0, r0, #21
    5fe0:	4684      	mov	ip, r0
    5fe2:	468a      	mov	sl, r1
    5fe4:	000f      	movs	r7, r1
    5fe6:	0319      	lsls	r1, r3, #12
    5fe8:	0f50      	lsrs	r0, r2, #29
    5fea:	0a49      	lsrs	r1, r1, #9
    5fec:	4301      	orrs	r1, r0
    5fee:	48c6      	ldr	r0, [pc, #792]	; (6308 <__aeabi_dsub+0x344>)
    5ff0:	0d76      	lsrs	r6, r6, #21
    5ff2:	46a8      	mov	r8, r5
    5ff4:	0fdb      	lsrs	r3, r3, #31
    5ff6:	00d2      	lsls	r2, r2, #3
    5ff8:	4584      	cmp	ip, r0
    5ffa:	d100      	bne.n	5ffe <__aeabi_dsub+0x3a>
    5ffc:	e0d8      	b.n	61b0 <__aeabi_dsub+0x1ec>
    5ffe:	2001      	movs	r0, #1
    6000:	4043      	eors	r3, r0
    6002:	42ab      	cmp	r3, r5
    6004:	d100      	bne.n	6008 <__aeabi_dsub+0x44>
    6006:	e0a6      	b.n	6156 <__aeabi_dsub+0x192>
    6008:	4660      	mov	r0, ip
    600a:	1a35      	subs	r5, r6, r0
    600c:	2d00      	cmp	r5, #0
    600e:	dc00      	bgt.n	6012 <__aeabi_dsub+0x4e>
    6010:	e105      	b.n	621e <__aeabi_dsub+0x25a>
    6012:	2800      	cmp	r0, #0
    6014:	d110      	bne.n	6038 <__aeabi_dsub+0x74>
    6016:	000b      	movs	r3, r1
    6018:	4313      	orrs	r3, r2
    601a:	d100      	bne.n	601e <__aeabi_dsub+0x5a>
    601c:	e0d7      	b.n	61ce <__aeabi_dsub+0x20a>
    601e:	1e6b      	subs	r3, r5, #1
    6020:	2b00      	cmp	r3, #0
    6022:	d000      	beq.n	6026 <__aeabi_dsub+0x62>
    6024:	e14b      	b.n	62be <__aeabi_dsub+0x2fa>
    6026:	4653      	mov	r3, sl
    6028:	1a9f      	subs	r7, r3, r2
    602a:	45ba      	cmp	sl, r7
    602c:	4180      	sbcs	r0, r0
    602e:	1a64      	subs	r4, r4, r1
    6030:	4240      	negs	r0, r0
    6032:	1a24      	subs	r4, r4, r0
    6034:	2601      	movs	r6, #1
    6036:	e01e      	b.n	6076 <__aeabi_dsub+0xb2>
    6038:	4bb3      	ldr	r3, [pc, #716]	; (6308 <__aeabi_dsub+0x344>)
    603a:	429e      	cmp	r6, r3
    603c:	d048      	beq.n	60d0 <__aeabi_dsub+0x10c>
    603e:	2380      	movs	r3, #128	; 0x80
    6040:	041b      	lsls	r3, r3, #16
    6042:	4319      	orrs	r1, r3
    6044:	2d38      	cmp	r5, #56	; 0x38
    6046:	dd00      	ble.n	604a <__aeabi_dsub+0x86>
    6048:	e119      	b.n	627e <__aeabi_dsub+0x2ba>
    604a:	2d1f      	cmp	r5, #31
    604c:	dd00      	ble.n	6050 <__aeabi_dsub+0x8c>
    604e:	e14c      	b.n	62ea <__aeabi_dsub+0x326>
    6050:	2320      	movs	r3, #32
    6052:	000f      	movs	r7, r1
    6054:	1b5b      	subs	r3, r3, r5
    6056:	0010      	movs	r0, r2
    6058:	409a      	lsls	r2, r3
    605a:	409f      	lsls	r7, r3
    605c:	40e8      	lsrs	r0, r5
    605e:	1e53      	subs	r3, r2, #1
    6060:	419a      	sbcs	r2, r3
    6062:	40e9      	lsrs	r1, r5
    6064:	4307      	orrs	r7, r0
    6066:	4317      	orrs	r7, r2
    6068:	4653      	mov	r3, sl
    606a:	1bdf      	subs	r7, r3, r7
    606c:	1a61      	subs	r1, r4, r1
    606e:	45ba      	cmp	sl, r7
    6070:	41a4      	sbcs	r4, r4
    6072:	4264      	negs	r4, r4
    6074:	1b0c      	subs	r4, r1, r4
    6076:	0223      	lsls	r3, r4, #8
    6078:	d400      	bmi.n	607c <__aeabi_dsub+0xb8>
    607a:	e0c5      	b.n	6208 <__aeabi_dsub+0x244>
    607c:	0264      	lsls	r4, r4, #9
    607e:	0a65      	lsrs	r5, r4, #9
    6080:	2d00      	cmp	r5, #0
    6082:	d100      	bne.n	6086 <__aeabi_dsub+0xc2>
    6084:	e0f6      	b.n	6274 <__aeabi_dsub+0x2b0>
    6086:	0028      	movs	r0, r5
    6088:	f000 fc7a 	bl	6980 <__clzsi2>
    608c:	0003      	movs	r3, r0
    608e:	3b08      	subs	r3, #8
    6090:	2b1f      	cmp	r3, #31
    6092:	dd00      	ble.n	6096 <__aeabi_dsub+0xd2>
    6094:	e0e9      	b.n	626a <__aeabi_dsub+0x2a6>
    6096:	2220      	movs	r2, #32
    6098:	003c      	movs	r4, r7
    609a:	1ad2      	subs	r2, r2, r3
    609c:	409d      	lsls	r5, r3
    609e:	40d4      	lsrs	r4, r2
    60a0:	409f      	lsls	r7, r3
    60a2:	4325      	orrs	r5, r4
    60a4:	429e      	cmp	r6, r3
    60a6:	dd00      	ble.n	60aa <__aeabi_dsub+0xe6>
    60a8:	e0db      	b.n	6262 <__aeabi_dsub+0x29e>
    60aa:	1b9e      	subs	r6, r3, r6
    60ac:	1c73      	adds	r3, r6, #1
    60ae:	2b1f      	cmp	r3, #31
    60b0:	dd00      	ble.n	60b4 <__aeabi_dsub+0xf0>
    60b2:	e10a      	b.n	62ca <__aeabi_dsub+0x306>
    60b4:	2220      	movs	r2, #32
    60b6:	0038      	movs	r0, r7
    60b8:	1ad2      	subs	r2, r2, r3
    60ba:	0029      	movs	r1, r5
    60bc:	4097      	lsls	r7, r2
    60be:	002c      	movs	r4, r5
    60c0:	4091      	lsls	r1, r2
    60c2:	40d8      	lsrs	r0, r3
    60c4:	1e7a      	subs	r2, r7, #1
    60c6:	4197      	sbcs	r7, r2
    60c8:	40dc      	lsrs	r4, r3
    60ca:	2600      	movs	r6, #0
    60cc:	4301      	orrs	r1, r0
    60ce:	430f      	orrs	r7, r1
    60d0:	077b      	lsls	r3, r7, #29
    60d2:	d009      	beq.n	60e8 <__aeabi_dsub+0x124>
    60d4:	230f      	movs	r3, #15
    60d6:	403b      	ands	r3, r7
    60d8:	2b04      	cmp	r3, #4
    60da:	d005      	beq.n	60e8 <__aeabi_dsub+0x124>
    60dc:	1d3b      	adds	r3, r7, #4
    60de:	42bb      	cmp	r3, r7
    60e0:	41bf      	sbcs	r7, r7
    60e2:	427f      	negs	r7, r7
    60e4:	19e4      	adds	r4, r4, r7
    60e6:	001f      	movs	r7, r3
    60e8:	0223      	lsls	r3, r4, #8
    60ea:	d525      	bpl.n	6138 <__aeabi_dsub+0x174>
    60ec:	4b86      	ldr	r3, [pc, #536]	; (6308 <__aeabi_dsub+0x344>)
    60ee:	3601      	adds	r6, #1
    60f0:	429e      	cmp	r6, r3
    60f2:	d100      	bne.n	60f6 <__aeabi_dsub+0x132>
    60f4:	e0af      	b.n	6256 <__aeabi_dsub+0x292>
    60f6:	4b85      	ldr	r3, [pc, #532]	; (630c <__aeabi_dsub+0x348>)
    60f8:	2501      	movs	r5, #1
    60fa:	401c      	ands	r4, r3
    60fc:	4643      	mov	r3, r8
    60fe:	0762      	lsls	r2, r4, #29
    6100:	08ff      	lsrs	r7, r7, #3
    6102:	0264      	lsls	r4, r4, #9
    6104:	0576      	lsls	r6, r6, #21
    6106:	4317      	orrs	r7, r2
    6108:	0b24      	lsrs	r4, r4, #12
    610a:	0d76      	lsrs	r6, r6, #21
    610c:	401d      	ands	r5, r3
    610e:	2100      	movs	r1, #0
    6110:	0324      	lsls	r4, r4, #12
    6112:	0b23      	lsrs	r3, r4, #12
    6114:	0d0c      	lsrs	r4, r1, #20
    6116:	4a7e      	ldr	r2, [pc, #504]	; (6310 <__aeabi_dsub+0x34c>)
    6118:	0524      	lsls	r4, r4, #20
    611a:	431c      	orrs	r4, r3
    611c:	4014      	ands	r4, r2
    611e:	0533      	lsls	r3, r6, #20
    6120:	4323      	orrs	r3, r4
    6122:	005b      	lsls	r3, r3, #1
    6124:	07ed      	lsls	r5, r5, #31
    6126:	085b      	lsrs	r3, r3, #1
    6128:	432b      	orrs	r3, r5
    612a:	0038      	movs	r0, r7
    612c:	0019      	movs	r1, r3
    612e:	bc1c      	pop	{r2, r3, r4}
    6130:	4690      	mov	r8, r2
    6132:	4699      	mov	r9, r3
    6134:	46a2      	mov	sl, r4
    6136:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6138:	2501      	movs	r5, #1
    613a:	4643      	mov	r3, r8
    613c:	0762      	lsls	r2, r4, #29
    613e:	08ff      	lsrs	r7, r7, #3
    6140:	4317      	orrs	r7, r2
    6142:	08e4      	lsrs	r4, r4, #3
    6144:	401d      	ands	r5, r3
    6146:	4b70      	ldr	r3, [pc, #448]	; (6308 <__aeabi_dsub+0x344>)
    6148:	429e      	cmp	r6, r3
    614a:	d036      	beq.n	61ba <__aeabi_dsub+0x1f6>
    614c:	0324      	lsls	r4, r4, #12
    614e:	0576      	lsls	r6, r6, #21
    6150:	0b24      	lsrs	r4, r4, #12
    6152:	0d76      	lsrs	r6, r6, #21
    6154:	e7db      	b.n	610e <__aeabi_dsub+0x14a>
    6156:	4663      	mov	r3, ip
    6158:	1af3      	subs	r3, r6, r3
    615a:	2b00      	cmp	r3, #0
    615c:	dc00      	bgt.n	6160 <__aeabi_dsub+0x19c>
    615e:	e094      	b.n	628a <__aeabi_dsub+0x2c6>
    6160:	4660      	mov	r0, ip
    6162:	2800      	cmp	r0, #0
    6164:	d035      	beq.n	61d2 <__aeabi_dsub+0x20e>
    6166:	4868      	ldr	r0, [pc, #416]	; (6308 <__aeabi_dsub+0x344>)
    6168:	4286      	cmp	r6, r0
    616a:	d0b1      	beq.n	60d0 <__aeabi_dsub+0x10c>
    616c:	2780      	movs	r7, #128	; 0x80
    616e:	043f      	lsls	r7, r7, #16
    6170:	4339      	orrs	r1, r7
    6172:	2b38      	cmp	r3, #56	; 0x38
    6174:	dc00      	bgt.n	6178 <__aeabi_dsub+0x1b4>
    6176:	e0fd      	b.n	6374 <__aeabi_dsub+0x3b0>
    6178:	430a      	orrs	r2, r1
    617a:	0017      	movs	r7, r2
    617c:	2100      	movs	r1, #0
    617e:	1e7a      	subs	r2, r7, #1
    6180:	4197      	sbcs	r7, r2
    6182:	4457      	add	r7, sl
    6184:	4557      	cmp	r7, sl
    6186:	4180      	sbcs	r0, r0
    6188:	1909      	adds	r1, r1, r4
    618a:	4244      	negs	r4, r0
    618c:	190c      	adds	r4, r1, r4
    618e:	0223      	lsls	r3, r4, #8
    6190:	d53a      	bpl.n	6208 <__aeabi_dsub+0x244>
    6192:	4b5d      	ldr	r3, [pc, #372]	; (6308 <__aeabi_dsub+0x344>)
    6194:	3601      	adds	r6, #1
    6196:	429e      	cmp	r6, r3
    6198:	d100      	bne.n	619c <__aeabi_dsub+0x1d8>
    619a:	e14b      	b.n	6434 <__aeabi_dsub+0x470>
    619c:	2201      	movs	r2, #1
    619e:	4b5b      	ldr	r3, [pc, #364]	; (630c <__aeabi_dsub+0x348>)
    61a0:	401c      	ands	r4, r3
    61a2:	087b      	lsrs	r3, r7, #1
    61a4:	4017      	ands	r7, r2
    61a6:	431f      	orrs	r7, r3
    61a8:	07e2      	lsls	r2, r4, #31
    61aa:	4317      	orrs	r7, r2
    61ac:	0864      	lsrs	r4, r4, #1
    61ae:	e78f      	b.n	60d0 <__aeabi_dsub+0x10c>
    61b0:	0008      	movs	r0, r1
    61b2:	4310      	orrs	r0, r2
    61b4:	d000      	beq.n	61b8 <__aeabi_dsub+0x1f4>
    61b6:	e724      	b.n	6002 <__aeabi_dsub+0x3e>
    61b8:	e721      	b.n	5ffe <__aeabi_dsub+0x3a>
    61ba:	0023      	movs	r3, r4
    61bc:	433b      	orrs	r3, r7
    61be:	d100      	bne.n	61c2 <__aeabi_dsub+0x1fe>
    61c0:	e1b9      	b.n	6536 <__aeabi_dsub+0x572>
    61c2:	2280      	movs	r2, #128	; 0x80
    61c4:	0312      	lsls	r2, r2, #12
    61c6:	4314      	orrs	r4, r2
    61c8:	0324      	lsls	r4, r4, #12
    61ca:	0b24      	lsrs	r4, r4, #12
    61cc:	e79f      	b.n	610e <__aeabi_dsub+0x14a>
    61ce:	002e      	movs	r6, r5
    61d0:	e77e      	b.n	60d0 <__aeabi_dsub+0x10c>
    61d2:	0008      	movs	r0, r1
    61d4:	4310      	orrs	r0, r2
    61d6:	d100      	bne.n	61da <__aeabi_dsub+0x216>
    61d8:	e0ca      	b.n	6370 <__aeabi_dsub+0x3ac>
    61da:	1e58      	subs	r0, r3, #1
    61dc:	4684      	mov	ip, r0
    61de:	2800      	cmp	r0, #0
    61e0:	d000      	beq.n	61e4 <__aeabi_dsub+0x220>
    61e2:	e0e7      	b.n	63b4 <__aeabi_dsub+0x3f0>
    61e4:	4452      	add	r2, sl
    61e6:	4552      	cmp	r2, sl
    61e8:	4180      	sbcs	r0, r0
    61ea:	1864      	adds	r4, r4, r1
    61ec:	4240      	negs	r0, r0
    61ee:	1824      	adds	r4, r4, r0
    61f0:	0017      	movs	r7, r2
    61f2:	2601      	movs	r6, #1
    61f4:	0223      	lsls	r3, r4, #8
    61f6:	d507      	bpl.n	6208 <__aeabi_dsub+0x244>
    61f8:	2602      	movs	r6, #2
    61fa:	e7cf      	b.n	619c <__aeabi_dsub+0x1d8>
    61fc:	4664      	mov	r4, ip
    61fe:	432c      	orrs	r4, r5
    6200:	d100      	bne.n	6204 <__aeabi_dsub+0x240>
    6202:	e1b3      	b.n	656c <__aeabi_dsub+0x5a8>
    6204:	002c      	movs	r4, r5
    6206:	4667      	mov	r7, ip
    6208:	077b      	lsls	r3, r7, #29
    620a:	d000      	beq.n	620e <__aeabi_dsub+0x24a>
    620c:	e762      	b.n	60d4 <__aeabi_dsub+0x110>
    620e:	0763      	lsls	r3, r4, #29
    6210:	08ff      	lsrs	r7, r7, #3
    6212:	431f      	orrs	r7, r3
    6214:	2501      	movs	r5, #1
    6216:	4643      	mov	r3, r8
    6218:	08e4      	lsrs	r4, r4, #3
    621a:	401d      	ands	r5, r3
    621c:	e793      	b.n	6146 <__aeabi_dsub+0x182>
    621e:	2d00      	cmp	r5, #0
    6220:	d178      	bne.n	6314 <__aeabi_dsub+0x350>
    6222:	1c75      	adds	r5, r6, #1
    6224:	056d      	lsls	r5, r5, #21
    6226:	0d6d      	lsrs	r5, r5, #21
    6228:	2d01      	cmp	r5, #1
    622a:	dc00      	bgt.n	622e <__aeabi_dsub+0x26a>
    622c:	e0f2      	b.n	6414 <__aeabi_dsub+0x450>
    622e:	4650      	mov	r0, sl
    6230:	1a80      	subs	r0, r0, r2
    6232:	4582      	cmp	sl, r0
    6234:	41bf      	sbcs	r7, r7
    6236:	1a65      	subs	r5, r4, r1
    6238:	427f      	negs	r7, r7
    623a:	1bed      	subs	r5, r5, r7
    623c:	4684      	mov	ip, r0
    623e:	0228      	lsls	r0, r5, #8
    6240:	d400      	bmi.n	6244 <__aeabi_dsub+0x280>
    6242:	e08c      	b.n	635e <__aeabi_dsub+0x39a>
    6244:	4650      	mov	r0, sl
    6246:	1a17      	subs	r7, r2, r0
    6248:	42ba      	cmp	r2, r7
    624a:	4192      	sbcs	r2, r2
    624c:	1b0c      	subs	r4, r1, r4
    624e:	4255      	negs	r5, r2
    6250:	1b65      	subs	r5, r4, r5
    6252:	4698      	mov	r8, r3
    6254:	e714      	b.n	6080 <__aeabi_dsub+0xbc>
    6256:	2501      	movs	r5, #1
    6258:	4643      	mov	r3, r8
    625a:	2400      	movs	r4, #0
    625c:	401d      	ands	r5, r3
    625e:	2700      	movs	r7, #0
    6260:	e755      	b.n	610e <__aeabi_dsub+0x14a>
    6262:	4c2a      	ldr	r4, [pc, #168]	; (630c <__aeabi_dsub+0x348>)
    6264:	1af6      	subs	r6, r6, r3
    6266:	402c      	ands	r4, r5
    6268:	e732      	b.n	60d0 <__aeabi_dsub+0x10c>
    626a:	003d      	movs	r5, r7
    626c:	3828      	subs	r0, #40	; 0x28
    626e:	4085      	lsls	r5, r0
    6270:	2700      	movs	r7, #0
    6272:	e717      	b.n	60a4 <__aeabi_dsub+0xe0>
    6274:	0038      	movs	r0, r7
    6276:	f000 fb83 	bl	6980 <__clzsi2>
    627a:	3020      	adds	r0, #32
    627c:	e706      	b.n	608c <__aeabi_dsub+0xc8>
    627e:	430a      	orrs	r2, r1
    6280:	0017      	movs	r7, r2
    6282:	2100      	movs	r1, #0
    6284:	1e7a      	subs	r2, r7, #1
    6286:	4197      	sbcs	r7, r2
    6288:	e6ee      	b.n	6068 <__aeabi_dsub+0xa4>
    628a:	2b00      	cmp	r3, #0
    628c:	d000      	beq.n	6290 <__aeabi_dsub+0x2cc>
    628e:	e0e5      	b.n	645c <__aeabi_dsub+0x498>
    6290:	1c73      	adds	r3, r6, #1
    6292:	469c      	mov	ip, r3
    6294:	055b      	lsls	r3, r3, #21
    6296:	0d5b      	lsrs	r3, r3, #21
    6298:	2b01      	cmp	r3, #1
    629a:	dc00      	bgt.n	629e <__aeabi_dsub+0x2da>
    629c:	e09f      	b.n	63de <__aeabi_dsub+0x41a>
    629e:	4b1a      	ldr	r3, [pc, #104]	; (6308 <__aeabi_dsub+0x344>)
    62a0:	459c      	cmp	ip, r3
    62a2:	d100      	bne.n	62a6 <__aeabi_dsub+0x2e2>
    62a4:	e0c5      	b.n	6432 <__aeabi_dsub+0x46e>
    62a6:	4452      	add	r2, sl
    62a8:	4552      	cmp	r2, sl
    62aa:	4180      	sbcs	r0, r0
    62ac:	1864      	adds	r4, r4, r1
    62ae:	4240      	negs	r0, r0
    62b0:	1824      	adds	r4, r4, r0
    62b2:	07e7      	lsls	r7, r4, #31
    62b4:	0852      	lsrs	r2, r2, #1
    62b6:	4317      	orrs	r7, r2
    62b8:	0864      	lsrs	r4, r4, #1
    62ba:	4666      	mov	r6, ip
    62bc:	e708      	b.n	60d0 <__aeabi_dsub+0x10c>
    62be:	4812      	ldr	r0, [pc, #72]	; (6308 <__aeabi_dsub+0x344>)
    62c0:	4285      	cmp	r5, r0
    62c2:	d100      	bne.n	62c6 <__aeabi_dsub+0x302>
    62c4:	e085      	b.n	63d2 <__aeabi_dsub+0x40e>
    62c6:	001d      	movs	r5, r3
    62c8:	e6bc      	b.n	6044 <__aeabi_dsub+0x80>
    62ca:	0029      	movs	r1, r5
    62cc:	3e1f      	subs	r6, #31
    62ce:	40f1      	lsrs	r1, r6
    62d0:	2b20      	cmp	r3, #32
    62d2:	d100      	bne.n	62d6 <__aeabi_dsub+0x312>
    62d4:	e07f      	b.n	63d6 <__aeabi_dsub+0x412>
    62d6:	2240      	movs	r2, #64	; 0x40
    62d8:	1ad3      	subs	r3, r2, r3
    62da:	409d      	lsls	r5, r3
    62dc:	432f      	orrs	r7, r5
    62de:	1e7d      	subs	r5, r7, #1
    62e0:	41af      	sbcs	r7, r5
    62e2:	2400      	movs	r4, #0
    62e4:	430f      	orrs	r7, r1
    62e6:	2600      	movs	r6, #0
    62e8:	e78e      	b.n	6208 <__aeabi_dsub+0x244>
    62ea:	002b      	movs	r3, r5
    62ec:	000f      	movs	r7, r1
    62ee:	3b20      	subs	r3, #32
    62f0:	40df      	lsrs	r7, r3
    62f2:	2d20      	cmp	r5, #32
    62f4:	d071      	beq.n	63da <__aeabi_dsub+0x416>
    62f6:	2340      	movs	r3, #64	; 0x40
    62f8:	1b5d      	subs	r5, r3, r5
    62fa:	40a9      	lsls	r1, r5
    62fc:	430a      	orrs	r2, r1
    62fe:	1e51      	subs	r1, r2, #1
    6300:	418a      	sbcs	r2, r1
    6302:	2100      	movs	r1, #0
    6304:	4317      	orrs	r7, r2
    6306:	e6af      	b.n	6068 <__aeabi_dsub+0xa4>
    6308:	000007ff 	.word	0x000007ff
    630c:	ff7fffff 	.word	0xff7fffff
    6310:	800fffff 	.word	0x800fffff
    6314:	2e00      	cmp	r6, #0
    6316:	d03e      	beq.n	6396 <__aeabi_dsub+0x3d2>
    6318:	4eb3      	ldr	r6, [pc, #716]	; (65e8 <__aeabi_dsub+0x624>)
    631a:	45b4      	cmp	ip, r6
    631c:	d045      	beq.n	63aa <__aeabi_dsub+0x3e6>
    631e:	2680      	movs	r6, #128	; 0x80
    6320:	0436      	lsls	r6, r6, #16
    6322:	426d      	negs	r5, r5
    6324:	4334      	orrs	r4, r6
    6326:	2d38      	cmp	r5, #56	; 0x38
    6328:	dd00      	ble.n	632c <__aeabi_dsub+0x368>
    632a:	e0a8      	b.n	647e <__aeabi_dsub+0x4ba>
    632c:	2d1f      	cmp	r5, #31
    632e:	dd00      	ble.n	6332 <__aeabi_dsub+0x36e>
    6330:	e11f      	b.n	6572 <__aeabi_dsub+0x5ae>
    6332:	2620      	movs	r6, #32
    6334:	0027      	movs	r7, r4
    6336:	4650      	mov	r0, sl
    6338:	1b76      	subs	r6, r6, r5
    633a:	40b7      	lsls	r7, r6
    633c:	40e8      	lsrs	r0, r5
    633e:	4307      	orrs	r7, r0
    6340:	4650      	mov	r0, sl
    6342:	40b0      	lsls	r0, r6
    6344:	1e46      	subs	r6, r0, #1
    6346:	41b0      	sbcs	r0, r6
    6348:	40ec      	lsrs	r4, r5
    634a:	4338      	orrs	r0, r7
    634c:	1a17      	subs	r7, r2, r0
    634e:	42ba      	cmp	r2, r7
    6350:	4192      	sbcs	r2, r2
    6352:	1b0c      	subs	r4, r1, r4
    6354:	4252      	negs	r2, r2
    6356:	1aa4      	subs	r4, r4, r2
    6358:	4666      	mov	r6, ip
    635a:	4698      	mov	r8, r3
    635c:	e68b      	b.n	6076 <__aeabi_dsub+0xb2>
    635e:	4664      	mov	r4, ip
    6360:	4667      	mov	r7, ip
    6362:	432c      	orrs	r4, r5
    6364:	d000      	beq.n	6368 <__aeabi_dsub+0x3a4>
    6366:	e68b      	b.n	6080 <__aeabi_dsub+0xbc>
    6368:	2500      	movs	r5, #0
    636a:	2600      	movs	r6, #0
    636c:	2700      	movs	r7, #0
    636e:	e6ea      	b.n	6146 <__aeabi_dsub+0x182>
    6370:	001e      	movs	r6, r3
    6372:	e6ad      	b.n	60d0 <__aeabi_dsub+0x10c>
    6374:	2b1f      	cmp	r3, #31
    6376:	dc60      	bgt.n	643a <__aeabi_dsub+0x476>
    6378:	2720      	movs	r7, #32
    637a:	1af8      	subs	r0, r7, r3
    637c:	000f      	movs	r7, r1
    637e:	4684      	mov	ip, r0
    6380:	4087      	lsls	r7, r0
    6382:	0010      	movs	r0, r2
    6384:	40d8      	lsrs	r0, r3
    6386:	4307      	orrs	r7, r0
    6388:	4660      	mov	r0, ip
    638a:	4082      	lsls	r2, r0
    638c:	1e50      	subs	r0, r2, #1
    638e:	4182      	sbcs	r2, r0
    6390:	40d9      	lsrs	r1, r3
    6392:	4317      	orrs	r7, r2
    6394:	e6f5      	b.n	6182 <__aeabi_dsub+0x1be>
    6396:	0026      	movs	r6, r4
    6398:	4650      	mov	r0, sl
    639a:	4306      	orrs	r6, r0
    639c:	d005      	beq.n	63aa <__aeabi_dsub+0x3e6>
    639e:	43ed      	mvns	r5, r5
    63a0:	2d00      	cmp	r5, #0
    63a2:	d0d3      	beq.n	634c <__aeabi_dsub+0x388>
    63a4:	4e90      	ldr	r6, [pc, #576]	; (65e8 <__aeabi_dsub+0x624>)
    63a6:	45b4      	cmp	ip, r6
    63a8:	d1bd      	bne.n	6326 <__aeabi_dsub+0x362>
    63aa:	000c      	movs	r4, r1
    63ac:	0017      	movs	r7, r2
    63ae:	4666      	mov	r6, ip
    63b0:	4698      	mov	r8, r3
    63b2:	e68d      	b.n	60d0 <__aeabi_dsub+0x10c>
    63b4:	488c      	ldr	r0, [pc, #560]	; (65e8 <__aeabi_dsub+0x624>)
    63b6:	4283      	cmp	r3, r0
    63b8:	d00b      	beq.n	63d2 <__aeabi_dsub+0x40e>
    63ba:	4663      	mov	r3, ip
    63bc:	e6d9      	b.n	6172 <__aeabi_dsub+0x1ae>
    63be:	2d00      	cmp	r5, #0
    63c0:	d000      	beq.n	63c4 <__aeabi_dsub+0x400>
    63c2:	e096      	b.n	64f2 <__aeabi_dsub+0x52e>
    63c4:	0008      	movs	r0, r1
    63c6:	4310      	orrs	r0, r2
    63c8:	d100      	bne.n	63cc <__aeabi_dsub+0x408>
    63ca:	e0e2      	b.n	6592 <__aeabi_dsub+0x5ce>
    63cc:	000c      	movs	r4, r1
    63ce:	0017      	movs	r7, r2
    63d0:	4698      	mov	r8, r3
    63d2:	4e85      	ldr	r6, [pc, #532]	; (65e8 <__aeabi_dsub+0x624>)
    63d4:	e67c      	b.n	60d0 <__aeabi_dsub+0x10c>
    63d6:	2500      	movs	r5, #0
    63d8:	e780      	b.n	62dc <__aeabi_dsub+0x318>
    63da:	2100      	movs	r1, #0
    63dc:	e78e      	b.n	62fc <__aeabi_dsub+0x338>
    63de:	0023      	movs	r3, r4
    63e0:	4650      	mov	r0, sl
    63e2:	4303      	orrs	r3, r0
    63e4:	2e00      	cmp	r6, #0
    63e6:	d000      	beq.n	63ea <__aeabi_dsub+0x426>
    63e8:	e0a8      	b.n	653c <__aeabi_dsub+0x578>
    63ea:	2b00      	cmp	r3, #0
    63ec:	d100      	bne.n	63f0 <__aeabi_dsub+0x42c>
    63ee:	e0de      	b.n	65ae <__aeabi_dsub+0x5ea>
    63f0:	000b      	movs	r3, r1
    63f2:	4313      	orrs	r3, r2
    63f4:	d100      	bne.n	63f8 <__aeabi_dsub+0x434>
    63f6:	e66b      	b.n	60d0 <__aeabi_dsub+0x10c>
    63f8:	4452      	add	r2, sl
    63fa:	4552      	cmp	r2, sl
    63fc:	4180      	sbcs	r0, r0
    63fe:	1864      	adds	r4, r4, r1
    6400:	4240      	negs	r0, r0
    6402:	1824      	adds	r4, r4, r0
    6404:	0017      	movs	r7, r2
    6406:	0223      	lsls	r3, r4, #8
    6408:	d400      	bmi.n	640c <__aeabi_dsub+0x448>
    640a:	e6fd      	b.n	6208 <__aeabi_dsub+0x244>
    640c:	4b77      	ldr	r3, [pc, #476]	; (65ec <__aeabi_dsub+0x628>)
    640e:	4666      	mov	r6, ip
    6410:	401c      	ands	r4, r3
    6412:	e65d      	b.n	60d0 <__aeabi_dsub+0x10c>
    6414:	0025      	movs	r5, r4
    6416:	4650      	mov	r0, sl
    6418:	4305      	orrs	r5, r0
    641a:	2e00      	cmp	r6, #0
    641c:	d1cf      	bne.n	63be <__aeabi_dsub+0x3fa>
    641e:	2d00      	cmp	r5, #0
    6420:	d14f      	bne.n	64c2 <__aeabi_dsub+0x4fe>
    6422:	000c      	movs	r4, r1
    6424:	4314      	orrs	r4, r2
    6426:	d100      	bne.n	642a <__aeabi_dsub+0x466>
    6428:	e0a0      	b.n	656c <__aeabi_dsub+0x5a8>
    642a:	000c      	movs	r4, r1
    642c:	0017      	movs	r7, r2
    642e:	4698      	mov	r8, r3
    6430:	e64e      	b.n	60d0 <__aeabi_dsub+0x10c>
    6432:	4666      	mov	r6, ip
    6434:	2400      	movs	r4, #0
    6436:	2700      	movs	r7, #0
    6438:	e685      	b.n	6146 <__aeabi_dsub+0x182>
    643a:	001f      	movs	r7, r3
    643c:	0008      	movs	r0, r1
    643e:	3f20      	subs	r7, #32
    6440:	40f8      	lsrs	r0, r7
    6442:	0007      	movs	r7, r0
    6444:	2b20      	cmp	r3, #32
    6446:	d100      	bne.n	644a <__aeabi_dsub+0x486>
    6448:	e08e      	b.n	6568 <__aeabi_dsub+0x5a4>
    644a:	2040      	movs	r0, #64	; 0x40
    644c:	1ac3      	subs	r3, r0, r3
    644e:	4099      	lsls	r1, r3
    6450:	430a      	orrs	r2, r1
    6452:	1e51      	subs	r1, r2, #1
    6454:	418a      	sbcs	r2, r1
    6456:	2100      	movs	r1, #0
    6458:	4317      	orrs	r7, r2
    645a:	e692      	b.n	6182 <__aeabi_dsub+0x1be>
    645c:	2e00      	cmp	r6, #0
    645e:	d114      	bne.n	648a <__aeabi_dsub+0x4c6>
    6460:	0026      	movs	r6, r4
    6462:	4650      	mov	r0, sl
    6464:	4306      	orrs	r6, r0
    6466:	d062      	beq.n	652e <__aeabi_dsub+0x56a>
    6468:	43db      	mvns	r3, r3
    646a:	2b00      	cmp	r3, #0
    646c:	d15c      	bne.n	6528 <__aeabi_dsub+0x564>
    646e:	1887      	adds	r7, r0, r2
    6470:	4297      	cmp	r7, r2
    6472:	4192      	sbcs	r2, r2
    6474:	1864      	adds	r4, r4, r1
    6476:	4252      	negs	r2, r2
    6478:	18a4      	adds	r4, r4, r2
    647a:	4666      	mov	r6, ip
    647c:	e687      	b.n	618e <__aeabi_dsub+0x1ca>
    647e:	4650      	mov	r0, sl
    6480:	4320      	orrs	r0, r4
    6482:	1e44      	subs	r4, r0, #1
    6484:	41a0      	sbcs	r0, r4
    6486:	2400      	movs	r4, #0
    6488:	e760      	b.n	634c <__aeabi_dsub+0x388>
    648a:	4e57      	ldr	r6, [pc, #348]	; (65e8 <__aeabi_dsub+0x624>)
    648c:	45b4      	cmp	ip, r6
    648e:	d04e      	beq.n	652e <__aeabi_dsub+0x56a>
    6490:	2680      	movs	r6, #128	; 0x80
    6492:	0436      	lsls	r6, r6, #16
    6494:	425b      	negs	r3, r3
    6496:	4334      	orrs	r4, r6
    6498:	2b38      	cmp	r3, #56	; 0x38
    649a:	dd00      	ble.n	649e <__aeabi_dsub+0x4da>
    649c:	e07f      	b.n	659e <__aeabi_dsub+0x5da>
    649e:	2b1f      	cmp	r3, #31
    64a0:	dd00      	ble.n	64a4 <__aeabi_dsub+0x4e0>
    64a2:	e08b      	b.n	65bc <__aeabi_dsub+0x5f8>
    64a4:	2620      	movs	r6, #32
    64a6:	0027      	movs	r7, r4
    64a8:	4650      	mov	r0, sl
    64aa:	1af6      	subs	r6, r6, r3
    64ac:	40b7      	lsls	r7, r6
    64ae:	40d8      	lsrs	r0, r3
    64b0:	4307      	orrs	r7, r0
    64b2:	4650      	mov	r0, sl
    64b4:	40b0      	lsls	r0, r6
    64b6:	1e46      	subs	r6, r0, #1
    64b8:	41b0      	sbcs	r0, r6
    64ba:	4307      	orrs	r7, r0
    64bc:	40dc      	lsrs	r4, r3
    64be:	18bf      	adds	r7, r7, r2
    64c0:	e7d6      	b.n	6470 <__aeabi_dsub+0x4ac>
    64c2:	000d      	movs	r5, r1
    64c4:	4315      	orrs	r5, r2
    64c6:	d100      	bne.n	64ca <__aeabi_dsub+0x506>
    64c8:	e602      	b.n	60d0 <__aeabi_dsub+0x10c>
    64ca:	4650      	mov	r0, sl
    64cc:	1a80      	subs	r0, r0, r2
    64ce:	4582      	cmp	sl, r0
    64d0:	41bf      	sbcs	r7, r7
    64d2:	1a65      	subs	r5, r4, r1
    64d4:	427f      	negs	r7, r7
    64d6:	1bed      	subs	r5, r5, r7
    64d8:	4684      	mov	ip, r0
    64da:	0228      	lsls	r0, r5, #8
    64dc:	d400      	bmi.n	64e0 <__aeabi_dsub+0x51c>
    64de:	e68d      	b.n	61fc <__aeabi_dsub+0x238>
    64e0:	4650      	mov	r0, sl
    64e2:	1a17      	subs	r7, r2, r0
    64e4:	42ba      	cmp	r2, r7
    64e6:	4192      	sbcs	r2, r2
    64e8:	1b0c      	subs	r4, r1, r4
    64ea:	4252      	negs	r2, r2
    64ec:	1aa4      	subs	r4, r4, r2
    64ee:	4698      	mov	r8, r3
    64f0:	e5ee      	b.n	60d0 <__aeabi_dsub+0x10c>
    64f2:	000d      	movs	r5, r1
    64f4:	4315      	orrs	r5, r2
    64f6:	d100      	bne.n	64fa <__aeabi_dsub+0x536>
    64f8:	e76b      	b.n	63d2 <__aeabi_dsub+0x40e>
    64fa:	4650      	mov	r0, sl
    64fc:	0767      	lsls	r7, r4, #29
    64fe:	08c0      	lsrs	r0, r0, #3
    6500:	4307      	orrs	r7, r0
    6502:	2080      	movs	r0, #128	; 0x80
    6504:	08e4      	lsrs	r4, r4, #3
    6506:	0300      	lsls	r0, r0, #12
    6508:	4204      	tst	r4, r0
    650a:	d007      	beq.n	651c <__aeabi_dsub+0x558>
    650c:	08cd      	lsrs	r5, r1, #3
    650e:	4205      	tst	r5, r0
    6510:	d104      	bne.n	651c <__aeabi_dsub+0x558>
    6512:	002c      	movs	r4, r5
    6514:	4698      	mov	r8, r3
    6516:	08d7      	lsrs	r7, r2, #3
    6518:	0749      	lsls	r1, r1, #29
    651a:	430f      	orrs	r7, r1
    651c:	0f7b      	lsrs	r3, r7, #29
    651e:	00e4      	lsls	r4, r4, #3
    6520:	431c      	orrs	r4, r3
    6522:	00ff      	lsls	r7, r7, #3
    6524:	4e30      	ldr	r6, [pc, #192]	; (65e8 <__aeabi_dsub+0x624>)
    6526:	e5d3      	b.n	60d0 <__aeabi_dsub+0x10c>
    6528:	4e2f      	ldr	r6, [pc, #188]	; (65e8 <__aeabi_dsub+0x624>)
    652a:	45b4      	cmp	ip, r6
    652c:	d1b4      	bne.n	6498 <__aeabi_dsub+0x4d4>
    652e:	000c      	movs	r4, r1
    6530:	0017      	movs	r7, r2
    6532:	4666      	mov	r6, ip
    6534:	e5cc      	b.n	60d0 <__aeabi_dsub+0x10c>
    6536:	2700      	movs	r7, #0
    6538:	2400      	movs	r4, #0
    653a:	e5e8      	b.n	610e <__aeabi_dsub+0x14a>
    653c:	2b00      	cmp	r3, #0
    653e:	d039      	beq.n	65b4 <__aeabi_dsub+0x5f0>
    6540:	000b      	movs	r3, r1
    6542:	4313      	orrs	r3, r2
    6544:	d100      	bne.n	6548 <__aeabi_dsub+0x584>
    6546:	e744      	b.n	63d2 <__aeabi_dsub+0x40e>
    6548:	08c0      	lsrs	r0, r0, #3
    654a:	0767      	lsls	r7, r4, #29
    654c:	4307      	orrs	r7, r0
    654e:	2080      	movs	r0, #128	; 0x80
    6550:	08e4      	lsrs	r4, r4, #3
    6552:	0300      	lsls	r0, r0, #12
    6554:	4204      	tst	r4, r0
    6556:	d0e1      	beq.n	651c <__aeabi_dsub+0x558>
    6558:	08cb      	lsrs	r3, r1, #3
    655a:	4203      	tst	r3, r0
    655c:	d1de      	bne.n	651c <__aeabi_dsub+0x558>
    655e:	08d7      	lsrs	r7, r2, #3
    6560:	0749      	lsls	r1, r1, #29
    6562:	430f      	orrs	r7, r1
    6564:	001c      	movs	r4, r3
    6566:	e7d9      	b.n	651c <__aeabi_dsub+0x558>
    6568:	2100      	movs	r1, #0
    656a:	e771      	b.n	6450 <__aeabi_dsub+0x48c>
    656c:	2500      	movs	r5, #0
    656e:	2700      	movs	r7, #0
    6570:	e5e9      	b.n	6146 <__aeabi_dsub+0x182>
    6572:	002e      	movs	r6, r5
    6574:	0027      	movs	r7, r4
    6576:	3e20      	subs	r6, #32
    6578:	40f7      	lsrs	r7, r6
    657a:	2d20      	cmp	r5, #32
    657c:	d02f      	beq.n	65de <__aeabi_dsub+0x61a>
    657e:	2640      	movs	r6, #64	; 0x40
    6580:	1b75      	subs	r5, r6, r5
    6582:	40ac      	lsls	r4, r5
    6584:	4650      	mov	r0, sl
    6586:	4320      	orrs	r0, r4
    6588:	1e44      	subs	r4, r0, #1
    658a:	41a0      	sbcs	r0, r4
    658c:	2400      	movs	r4, #0
    658e:	4338      	orrs	r0, r7
    6590:	e6dc      	b.n	634c <__aeabi_dsub+0x388>
    6592:	2480      	movs	r4, #128	; 0x80
    6594:	2500      	movs	r5, #0
    6596:	0324      	lsls	r4, r4, #12
    6598:	4e13      	ldr	r6, [pc, #76]	; (65e8 <__aeabi_dsub+0x624>)
    659a:	2700      	movs	r7, #0
    659c:	e5d3      	b.n	6146 <__aeabi_dsub+0x182>
    659e:	4650      	mov	r0, sl
    65a0:	4320      	orrs	r0, r4
    65a2:	0007      	movs	r7, r0
    65a4:	1e78      	subs	r0, r7, #1
    65a6:	4187      	sbcs	r7, r0
    65a8:	2400      	movs	r4, #0
    65aa:	18bf      	adds	r7, r7, r2
    65ac:	e760      	b.n	6470 <__aeabi_dsub+0x4ac>
    65ae:	000c      	movs	r4, r1
    65b0:	0017      	movs	r7, r2
    65b2:	e58d      	b.n	60d0 <__aeabi_dsub+0x10c>
    65b4:	000c      	movs	r4, r1
    65b6:	0017      	movs	r7, r2
    65b8:	4e0b      	ldr	r6, [pc, #44]	; (65e8 <__aeabi_dsub+0x624>)
    65ba:	e589      	b.n	60d0 <__aeabi_dsub+0x10c>
    65bc:	001e      	movs	r6, r3
    65be:	0027      	movs	r7, r4
    65c0:	3e20      	subs	r6, #32
    65c2:	40f7      	lsrs	r7, r6
    65c4:	2b20      	cmp	r3, #32
    65c6:	d00c      	beq.n	65e2 <__aeabi_dsub+0x61e>
    65c8:	2640      	movs	r6, #64	; 0x40
    65ca:	1af3      	subs	r3, r6, r3
    65cc:	409c      	lsls	r4, r3
    65ce:	4650      	mov	r0, sl
    65d0:	4320      	orrs	r0, r4
    65d2:	1e44      	subs	r4, r0, #1
    65d4:	41a0      	sbcs	r0, r4
    65d6:	4307      	orrs	r7, r0
    65d8:	2400      	movs	r4, #0
    65da:	18bf      	adds	r7, r7, r2
    65dc:	e748      	b.n	6470 <__aeabi_dsub+0x4ac>
    65de:	2400      	movs	r4, #0
    65e0:	e7d0      	b.n	6584 <__aeabi_dsub+0x5c0>
    65e2:	2400      	movs	r4, #0
    65e4:	e7f3      	b.n	65ce <__aeabi_dsub+0x60a>
    65e6:	46c0      	nop			; (mov r8, r8)
    65e8:	000007ff 	.word	0x000007ff
    65ec:	ff7fffff 	.word	0xff7fffff

000065f0 <__aeabi_d2iz>:
    65f0:	b530      	push	{r4, r5, lr}
    65f2:	4d13      	ldr	r5, [pc, #76]	; (6640 <__aeabi_d2iz+0x50>)
    65f4:	030a      	lsls	r2, r1, #12
    65f6:	004b      	lsls	r3, r1, #1
    65f8:	0b12      	lsrs	r2, r2, #12
    65fa:	0d5b      	lsrs	r3, r3, #21
    65fc:	0fc9      	lsrs	r1, r1, #31
    65fe:	2400      	movs	r4, #0
    6600:	42ab      	cmp	r3, r5
    6602:	dd10      	ble.n	6626 <__aeabi_d2iz+0x36>
    6604:	4c0f      	ldr	r4, [pc, #60]	; (6644 <__aeabi_d2iz+0x54>)
    6606:	42a3      	cmp	r3, r4
    6608:	dc0f      	bgt.n	662a <__aeabi_d2iz+0x3a>
    660a:	2480      	movs	r4, #128	; 0x80
    660c:	4d0e      	ldr	r5, [pc, #56]	; (6648 <__aeabi_d2iz+0x58>)
    660e:	0364      	lsls	r4, r4, #13
    6610:	4322      	orrs	r2, r4
    6612:	1aed      	subs	r5, r5, r3
    6614:	2d1f      	cmp	r5, #31
    6616:	dd0b      	ble.n	6630 <__aeabi_d2iz+0x40>
    6618:	480c      	ldr	r0, [pc, #48]	; (664c <__aeabi_d2iz+0x5c>)
    661a:	1ac3      	subs	r3, r0, r3
    661c:	40da      	lsrs	r2, r3
    661e:	4254      	negs	r4, r2
    6620:	2900      	cmp	r1, #0
    6622:	d100      	bne.n	6626 <__aeabi_d2iz+0x36>
    6624:	0014      	movs	r4, r2
    6626:	0020      	movs	r0, r4
    6628:	bd30      	pop	{r4, r5, pc}
    662a:	4b09      	ldr	r3, [pc, #36]	; (6650 <__aeabi_d2iz+0x60>)
    662c:	18cc      	adds	r4, r1, r3
    662e:	e7fa      	b.n	6626 <__aeabi_d2iz+0x36>
    6630:	4c08      	ldr	r4, [pc, #32]	; (6654 <__aeabi_d2iz+0x64>)
    6632:	40e8      	lsrs	r0, r5
    6634:	46a4      	mov	ip, r4
    6636:	4463      	add	r3, ip
    6638:	409a      	lsls	r2, r3
    663a:	4302      	orrs	r2, r0
    663c:	e7ef      	b.n	661e <__aeabi_d2iz+0x2e>
    663e:	46c0      	nop			; (mov r8, r8)
    6640:	000003fe 	.word	0x000003fe
    6644:	0000041d 	.word	0x0000041d
    6648:	00000433 	.word	0x00000433
    664c:	00000413 	.word	0x00000413
    6650:	7fffffff 	.word	0x7fffffff
    6654:	fffffbed 	.word	0xfffffbed

00006658 <__aeabi_i2d>:
    6658:	b570      	push	{r4, r5, r6, lr}
    665a:	2800      	cmp	r0, #0
    665c:	d030      	beq.n	66c0 <__aeabi_i2d+0x68>
    665e:	17c3      	asrs	r3, r0, #31
    6660:	18c4      	adds	r4, r0, r3
    6662:	405c      	eors	r4, r3
    6664:	0fc5      	lsrs	r5, r0, #31
    6666:	0020      	movs	r0, r4
    6668:	f000 f98a 	bl	6980 <__clzsi2>
    666c:	4b17      	ldr	r3, [pc, #92]	; (66cc <__aeabi_i2d+0x74>)
    666e:	4a18      	ldr	r2, [pc, #96]	; (66d0 <__aeabi_i2d+0x78>)
    6670:	1a1b      	subs	r3, r3, r0
    6672:	1ad2      	subs	r2, r2, r3
    6674:	2a1f      	cmp	r2, #31
    6676:	dd18      	ble.n	66aa <__aeabi_i2d+0x52>
    6678:	4a16      	ldr	r2, [pc, #88]	; (66d4 <__aeabi_i2d+0x7c>)
    667a:	1ad2      	subs	r2, r2, r3
    667c:	4094      	lsls	r4, r2
    667e:	2200      	movs	r2, #0
    6680:	0324      	lsls	r4, r4, #12
    6682:	055b      	lsls	r3, r3, #21
    6684:	0b24      	lsrs	r4, r4, #12
    6686:	0d5b      	lsrs	r3, r3, #21
    6688:	2100      	movs	r1, #0
    668a:	0010      	movs	r0, r2
    668c:	0324      	lsls	r4, r4, #12
    668e:	0d0a      	lsrs	r2, r1, #20
    6690:	0b24      	lsrs	r4, r4, #12
    6692:	0512      	lsls	r2, r2, #20
    6694:	4322      	orrs	r2, r4
    6696:	4c10      	ldr	r4, [pc, #64]	; (66d8 <__aeabi_i2d+0x80>)
    6698:	051b      	lsls	r3, r3, #20
    669a:	4022      	ands	r2, r4
    669c:	4313      	orrs	r3, r2
    669e:	005b      	lsls	r3, r3, #1
    66a0:	07ed      	lsls	r5, r5, #31
    66a2:	085b      	lsrs	r3, r3, #1
    66a4:	432b      	orrs	r3, r5
    66a6:	0019      	movs	r1, r3
    66a8:	bd70      	pop	{r4, r5, r6, pc}
    66aa:	0021      	movs	r1, r4
    66ac:	4091      	lsls	r1, r2
    66ae:	000a      	movs	r2, r1
    66b0:	210b      	movs	r1, #11
    66b2:	1a08      	subs	r0, r1, r0
    66b4:	40c4      	lsrs	r4, r0
    66b6:	055b      	lsls	r3, r3, #21
    66b8:	0324      	lsls	r4, r4, #12
    66ba:	0b24      	lsrs	r4, r4, #12
    66bc:	0d5b      	lsrs	r3, r3, #21
    66be:	e7e3      	b.n	6688 <__aeabi_i2d+0x30>
    66c0:	2500      	movs	r5, #0
    66c2:	2300      	movs	r3, #0
    66c4:	2400      	movs	r4, #0
    66c6:	2200      	movs	r2, #0
    66c8:	e7de      	b.n	6688 <__aeabi_i2d+0x30>
    66ca:	46c0      	nop			; (mov r8, r8)
    66cc:	0000041e 	.word	0x0000041e
    66d0:	00000433 	.word	0x00000433
    66d4:	00000413 	.word	0x00000413
    66d8:	800fffff 	.word	0x800fffff

000066dc <__aeabi_ui2d>:
    66dc:	b510      	push	{r4, lr}
    66de:	1e04      	subs	r4, r0, #0
    66e0:	d028      	beq.n	6734 <__aeabi_ui2d+0x58>
    66e2:	f000 f94d 	bl	6980 <__clzsi2>
    66e6:	4b15      	ldr	r3, [pc, #84]	; (673c <__aeabi_ui2d+0x60>)
    66e8:	4a15      	ldr	r2, [pc, #84]	; (6740 <__aeabi_ui2d+0x64>)
    66ea:	1a1b      	subs	r3, r3, r0
    66ec:	1ad2      	subs	r2, r2, r3
    66ee:	2a1f      	cmp	r2, #31
    66f0:	dd15      	ble.n	671e <__aeabi_ui2d+0x42>
    66f2:	4a14      	ldr	r2, [pc, #80]	; (6744 <__aeabi_ui2d+0x68>)
    66f4:	1ad2      	subs	r2, r2, r3
    66f6:	4094      	lsls	r4, r2
    66f8:	2200      	movs	r2, #0
    66fa:	0324      	lsls	r4, r4, #12
    66fc:	055b      	lsls	r3, r3, #21
    66fe:	0b24      	lsrs	r4, r4, #12
    6700:	0d5b      	lsrs	r3, r3, #21
    6702:	2100      	movs	r1, #0
    6704:	0010      	movs	r0, r2
    6706:	0324      	lsls	r4, r4, #12
    6708:	0d0a      	lsrs	r2, r1, #20
    670a:	0b24      	lsrs	r4, r4, #12
    670c:	0512      	lsls	r2, r2, #20
    670e:	4322      	orrs	r2, r4
    6710:	4c0d      	ldr	r4, [pc, #52]	; (6748 <__aeabi_ui2d+0x6c>)
    6712:	051b      	lsls	r3, r3, #20
    6714:	4022      	ands	r2, r4
    6716:	4313      	orrs	r3, r2
    6718:	005b      	lsls	r3, r3, #1
    671a:	0859      	lsrs	r1, r3, #1
    671c:	bd10      	pop	{r4, pc}
    671e:	0021      	movs	r1, r4
    6720:	4091      	lsls	r1, r2
    6722:	000a      	movs	r2, r1
    6724:	210b      	movs	r1, #11
    6726:	1a08      	subs	r0, r1, r0
    6728:	40c4      	lsrs	r4, r0
    672a:	055b      	lsls	r3, r3, #21
    672c:	0324      	lsls	r4, r4, #12
    672e:	0b24      	lsrs	r4, r4, #12
    6730:	0d5b      	lsrs	r3, r3, #21
    6732:	e7e6      	b.n	6702 <__aeabi_ui2d+0x26>
    6734:	2300      	movs	r3, #0
    6736:	2400      	movs	r4, #0
    6738:	2200      	movs	r2, #0
    673a:	e7e2      	b.n	6702 <__aeabi_ui2d+0x26>
    673c:	0000041e 	.word	0x0000041e
    6740:	00000433 	.word	0x00000433
    6744:	00000413 	.word	0x00000413
    6748:	800fffff 	.word	0x800fffff

0000674c <__aeabi_f2d>:
    674c:	0041      	lsls	r1, r0, #1
    674e:	0e09      	lsrs	r1, r1, #24
    6750:	1c4b      	adds	r3, r1, #1
    6752:	b570      	push	{r4, r5, r6, lr}
    6754:	b2db      	uxtb	r3, r3
    6756:	0246      	lsls	r6, r0, #9
    6758:	0a75      	lsrs	r5, r6, #9
    675a:	0fc4      	lsrs	r4, r0, #31
    675c:	2b01      	cmp	r3, #1
    675e:	dd14      	ble.n	678a <__aeabi_f2d+0x3e>
    6760:	23e0      	movs	r3, #224	; 0xe0
    6762:	009b      	lsls	r3, r3, #2
    6764:	076d      	lsls	r5, r5, #29
    6766:	0b36      	lsrs	r6, r6, #12
    6768:	18cb      	adds	r3, r1, r3
    676a:	2100      	movs	r1, #0
    676c:	0d0a      	lsrs	r2, r1, #20
    676e:	0028      	movs	r0, r5
    6770:	0512      	lsls	r2, r2, #20
    6772:	4d1c      	ldr	r5, [pc, #112]	; (67e4 <__aeabi_f2d+0x98>)
    6774:	4332      	orrs	r2, r6
    6776:	055b      	lsls	r3, r3, #21
    6778:	402a      	ands	r2, r5
    677a:	085b      	lsrs	r3, r3, #1
    677c:	4313      	orrs	r3, r2
    677e:	005b      	lsls	r3, r3, #1
    6780:	07e4      	lsls	r4, r4, #31
    6782:	085b      	lsrs	r3, r3, #1
    6784:	4323      	orrs	r3, r4
    6786:	0019      	movs	r1, r3
    6788:	bd70      	pop	{r4, r5, r6, pc}
    678a:	2900      	cmp	r1, #0
    678c:	d114      	bne.n	67b8 <__aeabi_f2d+0x6c>
    678e:	2d00      	cmp	r5, #0
    6790:	d01e      	beq.n	67d0 <__aeabi_f2d+0x84>
    6792:	0028      	movs	r0, r5
    6794:	f000 f8f4 	bl	6980 <__clzsi2>
    6798:	280a      	cmp	r0, #10
    679a:	dc1c      	bgt.n	67d6 <__aeabi_f2d+0x8a>
    679c:	230b      	movs	r3, #11
    679e:	002a      	movs	r2, r5
    67a0:	1a1b      	subs	r3, r3, r0
    67a2:	40da      	lsrs	r2, r3
    67a4:	0003      	movs	r3, r0
    67a6:	3315      	adds	r3, #21
    67a8:	409d      	lsls	r5, r3
    67aa:	4b0f      	ldr	r3, [pc, #60]	; (67e8 <__aeabi_f2d+0x9c>)
    67ac:	0312      	lsls	r2, r2, #12
    67ae:	1a1b      	subs	r3, r3, r0
    67b0:	055b      	lsls	r3, r3, #21
    67b2:	0b16      	lsrs	r6, r2, #12
    67b4:	0d5b      	lsrs	r3, r3, #21
    67b6:	e7d8      	b.n	676a <__aeabi_f2d+0x1e>
    67b8:	2d00      	cmp	r5, #0
    67ba:	d006      	beq.n	67ca <__aeabi_f2d+0x7e>
    67bc:	0b32      	lsrs	r2, r6, #12
    67be:	2680      	movs	r6, #128	; 0x80
    67c0:	0336      	lsls	r6, r6, #12
    67c2:	076d      	lsls	r5, r5, #29
    67c4:	4316      	orrs	r6, r2
    67c6:	4b09      	ldr	r3, [pc, #36]	; (67ec <__aeabi_f2d+0xa0>)
    67c8:	e7cf      	b.n	676a <__aeabi_f2d+0x1e>
    67ca:	4b08      	ldr	r3, [pc, #32]	; (67ec <__aeabi_f2d+0xa0>)
    67cc:	2600      	movs	r6, #0
    67ce:	e7cc      	b.n	676a <__aeabi_f2d+0x1e>
    67d0:	2300      	movs	r3, #0
    67d2:	2600      	movs	r6, #0
    67d4:	e7c9      	b.n	676a <__aeabi_f2d+0x1e>
    67d6:	0003      	movs	r3, r0
    67d8:	002a      	movs	r2, r5
    67da:	3b0b      	subs	r3, #11
    67dc:	409a      	lsls	r2, r3
    67de:	2500      	movs	r5, #0
    67e0:	e7e3      	b.n	67aa <__aeabi_f2d+0x5e>
    67e2:	46c0      	nop			; (mov r8, r8)
    67e4:	800fffff 	.word	0x800fffff
    67e8:	00000389 	.word	0x00000389
    67ec:	000007ff 	.word	0x000007ff

000067f0 <__aeabi_d2f>:
    67f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    67f2:	004c      	lsls	r4, r1, #1
    67f4:	0d64      	lsrs	r4, r4, #21
    67f6:	030b      	lsls	r3, r1, #12
    67f8:	1c62      	adds	r2, r4, #1
    67fa:	0f45      	lsrs	r5, r0, #29
    67fc:	0a5b      	lsrs	r3, r3, #9
    67fe:	0552      	lsls	r2, r2, #21
    6800:	432b      	orrs	r3, r5
    6802:	0fc9      	lsrs	r1, r1, #31
    6804:	00c5      	lsls	r5, r0, #3
    6806:	0d52      	lsrs	r2, r2, #21
    6808:	2a01      	cmp	r2, #1
    680a:	dd28      	ble.n	685e <__aeabi_d2f+0x6e>
    680c:	4a3a      	ldr	r2, [pc, #232]	; (68f8 <__aeabi_d2f+0x108>)
    680e:	18a6      	adds	r6, r4, r2
    6810:	2efe      	cmp	r6, #254	; 0xfe
    6812:	dc1b      	bgt.n	684c <__aeabi_d2f+0x5c>
    6814:	2e00      	cmp	r6, #0
    6816:	dd3e      	ble.n	6896 <__aeabi_d2f+0xa6>
    6818:	0180      	lsls	r0, r0, #6
    681a:	0002      	movs	r2, r0
    681c:	1e50      	subs	r0, r2, #1
    681e:	4182      	sbcs	r2, r0
    6820:	0f6d      	lsrs	r5, r5, #29
    6822:	432a      	orrs	r2, r5
    6824:	00db      	lsls	r3, r3, #3
    6826:	4313      	orrs	r3, r2
    6828:	075a      	lsls	r2, r3, #29
    682a:	d004      	beq.n	6836 <__aeabi_d2f+0x46>
    682c:	220f      	movs	r2, #15
    682e:	401a      	ands	r2, r3
    6830:	2a04      	cmp	r2, #4
    6832:	d000      	beq.n	6836 <__aeabi_d2f+0x46>
    6834:	3304      	adds	r3, #4
    6836:	2280      	movs	r2, #128	; 0x80
    6838:	04d2      	lsls	r2, r2, #19
    683a:	401a      	ands	r2, r3
    683c:	d05a      	beq.n	68f4 <__aeabi_d2f+0x104>
    683e:	3601      	adds	r6, #1
    6840:	2eff      	cmp	r6, #255	; 0xff
    6842:	d003      	beq.n	684c <__aeabi_d2f+0x5c>
    6844:	019b      	lsls	r3, r3, #6
    6846:	0a5b      	lsrs	r3, r3, #9
    6848:	b2f4      	uxtb	r4, r6
    684a:	e001      	b.n	6850 <__aeabi_d2f+0x60>
    684c:	24ff      	movs	r4, #255	; 0xff
    684e:	2300      	movs	r3, #0
    6850:	0258      	lsls	r0, r3, #9
    6852:	05e4      	lsls	r4, r4, #23
    6854:	0a40      	lsrs	r0, r0, #9
    6856:	07c9      	lsls	r1, r1, #31
    6858:	4320      	orrs	r0, r4
    685a:	4308      	orrs	r0, r1
    685c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    685e:	2c00      	cmp	r4, #0
    6860:	d007      	beq.n	6872 <__aeabi_d2f+0x82>
    6862:	431d      	orrs	r5, r3
    6864:	d0f2      	beq.n	684c <__aeabi_d2f+0x5c>
    6866:	2080      	movs	r0, #128	; 0x80
    6868:	00db      	lsls	r3, r3, #3
    686a:	0480      	lsls	r0, r0, #18
    686c:	4303      	orrs	r3, r0
    686e:	26ff      	movs	r6, #255	; 0xff
    6870:	e7da      	b.n	6828 <__aeabi_d2f+0x38>
    6872:	432b      	orrs	r3, r5
    6874:	d003      	beq.n	687e <__aeabi_d2f+0x8e>
    6876:	2305      	movs	r3, #5
    6878:	08db      	lsrs	r3, r3, #3
    687a:	2cff      	cmp	r4, #255	; 0xff
    687c:	d003      	beq.n	6886 <__aeabi_d2f+0x96>
    687e:	025b      	lsls	r3, r3, #9
    6880:	0a5b      	lsrs	r3, r3, #9
    6882:	b2e4      	uxtb	r4, r4
    6884:	e7e4      	b.n	6850 <__aeabi_d2f+0x60>
    6886:	2b00      	cmp	r3, #0
    6888:	d032      	beq.n	68f0 <__aeabi_d2f+0x100>
    688a:	2080      	movs	r0, #128	; 0x80
    688c:	03c0      	lsls	r0, r0, #15
    688e:	4303      	orrs	r3, r0
    6890:	025b      	lsls	r3, r3, #9
    6892:	0a5b      	lsrs	r3, r3, #9
    6894:	e7dc      	b.n	6850 <__aeabi_d2f+0x60>
    6896:	0032      	movs	r2, r6
    6898:	3217      	adds	r2, #23
    689a:	db14      	blt.n	68c6 <__aeabi_d2f+0xd6>
    689c:	2280      	movs	r2, #128	; 0x80
    689e:	271e      	movs	r7, #30
    68a0:	0412      	lsls	r2, r2, #16
    68a2:	4313      	orrs	r3, r2
    68a4:	1bbf      	subs	r7, r7, r6
    68a6:	2f1f      	cmp	r7, #31
    68a8:	dc0f      	bgt.n	68ca <__aeabi_d2f+0xda>
    68aa:	4a14      	ldr	r2, [pc, #80]	; (68fc <__aeabi_d2f+0x10c>)
    68ac:	4694      	mov	ip, r2
    68ae:	4464      	add	r4, ip
    68b0:	002a      	movs	r2, r5
    68b2:	40a5      	lsls	r5, r4
    68b4:	002e      	movs	r6, r5
    68b6:	40a3      	lsls	r3, r4
    68b8:	1e75      	subs	r5, r6, #1
    68ba:	41ae      	sbcs	r6, r5
    68bc:	40fa      	lsrs	r2, r7
    68be:	4333      	orrs	r3, r6
    68c0:	4313      	orrs	r3, r2
    68c2:	2600      	movs	r6, #0
    68c4:	e7b0      	b.n	6828 <__aeabi_d2f+0x38>
    68c6:	2400      	movs	r4, #0
    68c8:	e7d5      	b.n	6876 <__aeabi_d2f+0x86>
    68ca:	2202      	movs	r2, #2
    68cc:	4252      	negs	r2, r2
    68ce:	1b96      	subs	r6, r2, r6
    68d0:	001a      	movs	r2, r3
    68d2:	40f2      	lsrs	r2, r6
    68d4:	2f20      	cmp	r7, #32
    68d6:	d009      	beq.n	68ec <__aeabi_d2f+0xfc>
    68d8:	4809      	ldr	r0, [pc, #36]	; (6900 <__aeabi_d2f+0x110>)
    68da:	4684      	mov	ip, r0
    68dc:	4464      	add	r4, ip
    68de:	40a3      	lsls	r3, r4
    68e0:	432b      	orrs	r3, r5
    68e2:	1e5d      	subs	r5, r3, #1
    68e4:	41ab      	sbcs	r3, r5
    68e6:	2600      	movs	r6, #0
    68e8:	4313      	orrs	r3, r2
    68ea:	e79d      	b.n	6828 <__aeabi_d2f+0x38>
    68ec:	2300      	movs	r3, #0
    68ee:	e7f7      	b.n	68e0 <__aeabi_d2f+0xf0>
    68f0:	2300      	movs	r3, #0
    68f2:	e7ad      	b.n	6850 <__aeabi_d2f+0x60>
    68f4:	0034      	movs	r4, r6
    68f6:	e7bf      	b.n	6878 <__aeabi_d2f+0x88>
    68f8:	fffffc80 	.word	0xfffffc80
    68fc:	fffffc82 	.word	0xfffffc82
    6900:	fffffca2 	.word	0xfffffca2

00006904 <__aeabi_cdrcmple>:
    6904:	4684      	mov	ip, r0
    6906:	1c10      	adds	r0, r2, #0
    6908:	4662      	mov	r2, ip
    690a:	468c      	mov	ip, r1
    690c:	1c19      	adds	r1, r3, #0
    690e:	4663      	mov	r3, ip
    6910:	e000      	b.n	6914 <__aeabi_cdcmpeq>
    6912:	46c0      	nop			; (mov r8, r8)

00006914 <__aeabi_cdcmpeq>:
    6914:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    6916:	f000 f91b 	bl	6b50 <__ledf2>
    691a:	2800      	cmp	r0, #0
    691c:	d401      	bmi.n	6922 <__aeabi_cdcmpeq+0xe>
    691e:	2100      	movs	r1, #0
    6920:	42c8      	cmn	r0, r1
    6922:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006924 <__aeabi_dcmpeq>:
    6924:	b510      	push	{r4, lr}
    6926:	f000 f875 	bl	6a14 <__eqdf2>
    692a:	4240      	negs	r0, r0
    692c:	3001      	adds	r0, #1
    692e:	bd10      	pop	{r4, pc}

00006930 <__aeabi_dcmplt>:
    6930:	b510      	push	{r4, lr}
    6932:	f000 f90d 	bl	6b50 <__ledf2>
    6936:	2800      	cmp	r0, #0
    6938:	db01      	blt.n	693e <__aeabi_dcmplt+0xe>
    693a:	2000      	movs	r0, #0
    693c:	bd10      	pop	{r4, pc}
    693e:	2001      	movs	r0, #1
    6940:	bd10      	pop	{r4, pc}
    6942:	46c0      	nop			; (mov r8, r8)

00006944 <__aeabi_dcmple>:
    6944:	b510      	push	{r4, lr}
    6946:	f000 f903 	bl	6b50 <__ledf2>
    694a:	2800      	cmp	r0, #0
    694c:	dd01      	ble.n	6952 <__aeabi_dcmple+0xe>
    694e:	2000      	movs	r0, #0
    6950:	bd10      	pop	{r4, pc}
    6952:	2001      	movs	r0, #1
    6954:	bd10      	pop	{r4, pc}
    6956:	46c0      	nop			; (mov r8, r8)

00006958 <__aeabi_dcmpgt>:
    6958:	b510      	push	{r4, lr}
    695a:	f000 f895 	bl	6a88 <__gedf2>
    695e:	2800      	cmp	r0, #0
    6960:	dc01      	bgt.n	6966 <__aeabi_dcmpgt+0xe>
    6962:	2000      	movs	r0, #0
    6964:	bd10      	pop	{r4, pc}
    6966:	2001      	movs	r0, #1
    6968:	bd10      	pop	{r4, pc}
    696a:	46c0      	nop			; (mov r8, r8)

0000696c <__aeabi_dcmpge>:
    696c:	b510      	push	{r4, lr}
    696e:	f000 f88b 	bl	6a88 <__gedf2>
    6972:	2800      	cmp	r0, #0
    6974:	da01      	bge.n	697a <__aeabi_dcmpge+0xe>
    6976:	2000      	movs	r0, #0
    6978:	bd10      	pop	{r4, pc}
    697a:	2001      	movs	r0, #1
    697c:	bd10      	pop	{r4, pc}
    697e:	46c0      	nop			; (mov r8, r8)

00006980 <__clzsi2>:
    6980:	211c      	movs	r1, #28
    6982:	2301      	movs	r3, #1
    6984:	041b      	lsls	r3, r3, #16
    6986:	4298      	cmp	r0, r3
    6988:	d301      	bcc.n	698e <__clzsi2+0xe>
    698a:	0c00      	lsrs	r0, r0, #16
    698c:	3910      	subs	r1, #16
    698e:	0a1b      	lsrs	r3, r3, #8
    6990:	4298      	cmp	r0, r3
    6992:	d301      	bcc.n	6998 <__clzsi2+0x18>
    6994:	0a00      	lsrs	r0, r0, #8
    6996:	3908      	subs	r1, #8
    6998:	091b      	lsrs	r3, r3, #4
    699a:	4298      	cmp	r0, r3
    699c:	d301      	bcc.n	69a2 <__clzsi2+0x22>
    699e:	0900      	lsrs	r0, r0, #4
    69a0:	3904      	subs	r1, #4
    69a2:	a202      	add	r2, pc, #8	; (adr r2, 69ac <__clzsi2+0x2c>)
    69a4:	5c10      	ldrb	r0, [r2, r0]
    69a6:	1840      	adds	r0, r0, r1
    69a8:	4770      	bx	lr
    69aa:	46c0      	nop			; (mov r8, r8)
    69ac:	02020304 	.word	0x02020304
    69b0:	01010101 	.word	0x01010101
	...

000069bc <__clzdi2>:
    69bc:	b510      	push	{r4, lr}
    69be:	2900      	cmp	r1, #0
    69c0:	d103      	bne.n	69ca <__clzdi2+0xe>
    69c2:	f7ff ffdd 	bl	6980 <__clzsi2>
    69c6:	3020      	adds	r0, #32
    69c8:	e002      	b.n	69d0 <__clzdi2+0x14>
    69ca:	1c08      	adds	r0, r1, #0
    69cc:	f7ff ffd8 	bl	6980 <__clzsi2>
    69d0:	bd10      	pop	{r4, pc}
    69d2:	46c0      	nop			; (mov r8, r8)

000069d4 <__ctzsi2>:
    69d4:	4241      	negs	r1, r0
    69d6:	4008      	ands	r0, r1
    69d8:	211c      	movs	r1, #28
    69da:	2301      	movs	r3, #1
    69dc:	041b      	lsls	r3, r3, #16
    69de:	4298      	cmp	r0, r3
    69e0:	d301      	bcc.n	69e6 <__ctzsi2+0x12>
    69e2:	0c00      	lsrs	r0, r0, #16
    69e4:	3910      	subs	r1, #16
    69e6:	0a1b      	lsrs	r3, r3, #8
    69e8:	4298      	cmp	r0, r3
    69ea:	d301      	bcc.n	69f0 <__ctzsi2+0x1c>
    69ec:	0a00      	lsrs	r0, r0, #8
    69ee:	3908      	subs	r1, #8
    69f0:	091b      	lsrs	r3, r3, #4
    69f2:	4298      	cmp	r0, r3
    69f4:	d301      	bcc.n	69fa <__ctzsi2+0x26>
    69f6:	0900      	lsrs	r0, r0, #4
    69f8:	3904      	subs	r1, #4
    69fa:	a202      	add	r2, pc, #8	; (adr r2, 6a04 <__ctzsi2+0x30>)
    69fc:	5c10      	ldrb	r0, [r2, r0]
    69fe:	1a40      	subs	r0, r0, r1
    6a00:	4770      	bx	lr
    6a02:	46c0      	nop			; (mov r8, r8)
    6a04:	1d1d1c1b 	.word	0x1d1d1c1b
    6a08:	1e1e1e1e 	.word	0x1e1e1e1e
    6a0c:	1f1f1f1f 	.word	0x1f1f1f1f
    6a10:	1f1f1f1f 	.word	0x1f1f1f1f

00006a14 <__eqdf2>:
    6a14:	b5f0      	push	{r4, r5, r6, r7, lr}
    6a16:	464f      	mov	r7, r9
    6a18:	4646      	mov	r6, r8
    6a1a:	46d6      	mov	lr, sl
    6a1c:	005c      	lsls	r4, r3, #1
    6a1e:	b5c0      	push	{r6, r7, lr}
    6a20:	031f      	lsls	r7, r3, #12
    6a22:	0fdb      	lsrs	r3, r3, #31
    6a24:	469a      	mov	sl, r3
    6a26:	4b17      	ldr	r3, [pc, #92]	; (6a84 <__eqdf2+0x70>)
    6a28:	030e      	lsls	r6, r1, #12
    6a2a:	004d      	lsls	r5, r1, #1
    6a2c:	4684      	mov	ip, r0
    6a2e:	4680      	mov	r8, r0
    6a30:	0b36      	lsrs	r6, r6, #12
    6a32:	0d6d      	lsrs	r5, r5, #21
    6a34:	0fc9      	lsrs	r1, r1, #31
    6a36:	4691      	mov	r9, r2
    6a38:	0b3f      	lsrs	r7, r7, #12
    6a3a:	0d64      	lsrs	r4, r4, #21
    6a3c:	2001      	movs	r0, #1
    6a3e:	429d      	cmp	r5, r3
    6a40:	d008      	beq.n	6a54 <__eqdf2+0x40>
    6a42:	429c      	cmp	r4, r3
    6a44:	d001      	beq.n	6a4a <__eqdf2+0x36>
    6a46:	42a5      	cmp	r5, r4
    6a48:	d00b      	beq.n	6a62 <__eqdf2+0x4e>
    6a4a:	bc1c      	pop	{r2, r3, r4}
    6a4c:	4690      	mov	r8, r2
    6a4e:	4699      	mov	r9, r3
    6a50:	46a2      	mov	sl, r4
    6a52:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6a54:	4663      	mov	r3, ip
    6a56:	4333      	orrs	r3, r6
    6a58:	d1f7      	bne.n	6a4a <__eqdf2+0x36>
    6a5a:	42ac      	cmp	r4, r5
    6a5c:	d1f5      	bne.n	6a4a <__eqdf2+0x36>
    6a5e:	433a      	orrs	r2, r7
    6a60:	d1f3      	bne.n	6a4a <__eqdf2+0x36>
    6a62:	2001      	movs	r0, #1
    6a64:	42be      	cmp	r6, r7
    6a66:	d1f0      	bne.n	6a4a <__eqdf2+0x36>
    6a68:	45c8      	cmp	r8, r9
    6a6a:	d1ee      	bne.n	6a4a <__eqdf2+0x36>
    6a6c:	4551      	cmp	r1, sl
    6a6e:	d007      	beq.n	6a80 <__eqdf2+0x6c>
    6a70:	2d00      	cmp	r5, #0
    6a72:	d1ea      	bne.n	6a4a <__eqdf2+0x36>
    6a74:	4663      	mov	r3, ip
    6a76:	431e      	orrs	r6, r3
    6a78:	0030      	movs	r0, r6
    6a7a:	1e46      	subs	r6, r0, #1
    6a7c:	41b0      	sbcs	r0, r6
    6a7e:	e7e4      	b.n	6a4a <__eqdf2+0x36>
    6a80:	2000      	movs	r0, #0
    6a82:	e7e2      	b.n	6a4a <__eqdf2+0x36>
    6a84:	000007ff 	.word	0x000007ff

00006a88 <__gedf2>:
    6a88:	b5f0      	push	{r4, r5, r6, r7, lr}
    6a8a:	4645      	mov	r5, r8
    6a8c:	46de      	mov	lr, fp
    6a8e:	4657      	mov	r7, sl
    6a90:	464e      	mov	r6, r9
    6a92:	b5e0      	push	{r5, r6, r7, lr}
    6a94:	031f      	lsls	r7, r3, #12
    6a96:	0b3d      	lsrs	r5, r7, #12
    6a98:	4f2c      	ldr	r7, [pc, #176]	; (6b4c <__gedf2+0xc4>)
    6a9a:	030e      	lsls	r6, r1, #12
    6a9c:	004c      	lsls	r4, r1, #1
    6a9e:	46ab      	mov	fp, r5
    6aa0:	005d      	lsls	r5, r3, #1
    6aa2:	4684      	mov	ip, r0
    6aa4:	0b36      	lsrs	r6, r6, #12
    6aa6:	0d64      	lsrs	r4, r4, #21
    6aa8:	0fc9      	lsrs	r1, r1, #31
    6aaa:	4690      	mov	r8, r2
    6aac:	0d6d      	lsrs	r5, r5, #21
    6aae:	0fdb      	lsrs	r3, r3, #31
    6ab0:	42bc      	cmp	r4, r7
    6ab2:	d02a      	beq.n	6b0a <__gedf2+0x82>
    6ab4:	4f25      	ldr	r7, [pc, #148]	; (6b4c <__gedf2+0xc4>)
    6ab6:	42bd      	cmp	r5, r7
    6ab8:	d02d      	beq.n	6b16 <__gedf2+0x8e>
    6aba:	2c00      	cmp	r4, #0
    6abc:	d10f      	bne.n	6ade <__gedf2+0x56>
    6abe:	4330      	orrs	r0, r6
    6ac0:	0007      	movs	r7, r0
    6ac2:	4681      	mov	r9, r0
    6ac4:	4278      	negs	r0, r7
    6ac6:	4178      	adcs	r0, r7
    6ac8:	b2c0      	uxtb	r0, r0
    6aca:	2d00      	cmp	r5, #0
    6acc:	d117      	bne.n	6afe <__gedf2+0x76>
    6ace:	465f      	mov	r7, fp
    6ad0:	433a      	orrs	r2, r7
    6ad2:	d114      	bne.n	6afe <__gedf2+0x76>
    6ad4:	464b      	mov	r3, r9
    6ad6:	2000      	movs	r0, #0
    6ad8:	2b00      	cmp	r3, #0
    6ada:	d00a      	beq.n	6af2 <__gedf2+0x6a>
    6adc:	e006      	b.n	6aec <__gedf2+0x64>
    6ade:	2d00      	cmp	r5, #0
    6ae0:	d102      	bne.n	6ae8 <__gedf2+0x60>
    6ae2:	4658      	mov	r0, fp
    6ae4:	4302      	orrs	r2, r0
    6ae6:	d001      	beq.n	6aec <__gedf2+0x64>
    6ae8:	4299      	cmp	r1, r3
    6aea:	d018      	beq.n	6b1e <__gedf2+0x96>
    6aec:	4248      	negs	r0, r1
    6aee:	2101      	movs	r1, #1
    6af0:	4308      	orrs	r0, r1
    6af2:	bc3c      	pop	{r2, r3, r4, r5}
    6af4:	4690      	mov	r8, r2
    6af6:	4699      	mov	r9, r3
    6af8:	46a2      	mov	sl, r4
    6afa:	46ab      	mov	fp, r5
    6afc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6afe:	2800      	cmp	r0, #0
    6b00:	d0f2      	beq.n	6ae8 <__gedf2+0x60>
    6b02:	2001      	movs	r0, #1
    6b04:	3b01      	subs	r3, #1
    6b06:	4318      	orrs	r0, r3
    6b08:	e7f3      	b.n	6af2 <__gedf2+0x6a>
    6b0a:	0037      	movs	r7, r6
    6b0c:	4307      	orrs	r7, r0
    6b0e:	d0d1      	beq.n	6ab4 <__gedf2+0x2c>
    6b10:	2002      	movs	r0, #2
    6b12:	4240      	negs	r0, r0
    6b14:	e7ed      	b.n	6af2 <__gedf2+0x6a>
    6b16:	465f      	mov	r7, fp
    6b18:	4317      	orrs	r7, r2
    6b1a:	d0ce      	beq.n	6aba <__gedf2+0x32>
    6b1c:	e7f8      	b.n	6b10 <__gedf2+0x88>
    6b1e:	42ac      	cmp	r4, r5
    6b20:	dce4      	bgt.n	6aec <__gedf2+0x64>
    6b22:	da03      	bge.n	6b2c <__gedf2+0xa4>
    6b24:	1e48      	subs	r0, r1, #1
    6b26:	2101      	movs	r1, #1
    6b28:	4308      	orrs	r0, r1
    6b2a:	e7e2      	b.n	6af2 <__gedf2+0x6a>
    6b2c:	455e      	cmp	r6, fp
    6b2e:	d8dd      	bhi.n	6aec <__gedf2+0x64>
    6b30:	d006      	beq.n	6b40 <__gedf2+0xb8>
    6b32:	2000      	movs	r0, #0
    6b34:	455e      	cmp	r6, fp
    6b36:	d2dc      	bcs.n	6af2 <__gedf2+0x6a>
    6b38:	2301      	movs	r3, #1
    6b3a:	1e48      	subs	r0, r1, #1
    6b3c:	4318      	orrs	r0, r3
    6b3e:	e7d8      	b.n	6af2 <__gedf2+0x6a>
    6b40:	45c4      	cmp	ip, r8
    6b42:	d8d3      	bhi.n	6aec <__gedf2+0x64>
    6b44:	2000      	movs	r0, #0
    6b46:	45c4      	cmp	ip, r8
    6b48:	d3f6      	bcc.n	6b38 <__gedf2+0xb0>
    6b4a:	e7d2      	b.n	6af2 <__gedf2+0x6a>
    6b4c:	000007ff 	.word	0x000007ff

00006b50 <__ledf2>:
    6b50:	b5f0      	push	{r4, r5, r6, r7, lr}
    6b52:	464e      	mov	r6, r9
    6b54:	4645      	mov	r5, r8
    6b56:	46de      	mov	lr, fp
    6b58:	4657      	mov	r7, sl
    6b5a:	005c      	lsls	r4, r3, #1
    6b5c:	b5e0      	push	{r5, r6, r7, lr}
    6b5e:	031f      	lsls	r7, r3, #12
    6b60:	0fdb      	lsrs	r3, r3, #31
    6b62:	4699      	mov	r9, r3
    6b64:	4b2a      	ldr	r3, [pc, #168]	; (6c10 <__ledf2+0xc0>)
    6b66:	030e      	lsls	r6, r1, #12
    6b68:	004d      	lsls	r5, r1, #1
    6b6a:	0fc9      	lsrs	r1, r1, #31
    6b6c:	4684      	mov	ip, r0
    6b6e:	0b36      	lsrs	r6, r6, #12
    6b70:	0d6d      	lsrs	r5, r5, #21
    6b72:	468b      	mov	fp, r1
    6b74:	4690      	mov	r8, r2
    6b76:	0b3f      	lsrs	r7, r7, #12
    6b78:	0d64      	lsrs	r4, r4, #21
    6b7a:	429d      	cmp	r5, r3
    6b7c:	d020      	beq.n	6bc0 <__ledf2+0x70>
    6b7e:	4b24      	ldr	r3, [pc, #144]	; (6c10 <__ledf2+0xc0>)
    6b80:	429c      	cmp	r4, r3
    6b82:	d022      	beq.n	6bca <__ledf2+0x7a>
    6b84:	2d00      	cmp	r5, #0
    6b86:	d112      	bne.n	6bae <__ledf2+0x5e>
    6b88:	4330      	orrs	r0, r6
    6b8a:	4243      	negs	r3, r0
    6b8c:	4143      	adcs	r3, r0
    6b8e:	b2db      	uxtb	r3, r3
    6b90:	2c00      	cmp	r4, #0
    6b92:	d01f      	beq.n	6bd4 <__ledf2+0x84>
    6b94:	2b00      	cmp	r3, #0
    6b96:	d00c      	beq.n	6bb2 <__ledf2+0x62>
    6b98:	464b      	mov	r3, r9
    6b9a:	2001      	movs	r0, #1
    6b9c:	3b01      	subs	r3, #1
    6b9e:	4303      	orrs	r3, r0
    6ba0:	0018      	movs	r0, r3
    6ba2:	bc3c      	pop	{r2, r3, r4, r5}
    6ba4:	4690      	mov	r8, r2
    6ba6:	4699      	mov	r9, r3
    6ba8:	46a2      	mov	sl, r4
    6baa:	46ab      	mov	fp, r5
    6bac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6bae:	2c00      	cmp	r4, #0
    6bb0:	d016      	beq.n	6be0 <__ledf2+0x90>
    6bb2:	45cb      	cmp	fp, r9
    6bb4:	d017      	beq.n	6be6 <__ledf2+0x96>
    6bb6:	465b      	mov	r3, fp
    6bb8:	4259      	negs	r1, r3
    6bba:	2301      	movs	r3, #1
    6bbc:	430b      	orrs	r3, r1
    6bbe:	e7ef      	b.n	6ba0 <__ledf2+0x50>
    6bc0:	0031      	movs	r1, r6
    6bc2:	2302      	movs	r3, #2
    6bc4:	4301      	orrs	r1, r0
    6bc6:	d1eb      	bne.n	6ba0 <__ledf2+0x50>
    6bc8:	e7d9      	b.n	6b7e <__ledf2+0x2e>
    6bca:	0039      	movs	r1, r7
    6bcc:	2302      	movs	r3, #2
    6bce:	4311      	orrs	r1, r2
    6bd0:	d1e6      	bne.n	6ba0 <__ledf2+0x50>
    6bd2:	e7d7      	b.n	6b84 <__ledf2+0x34>
    6bd4:	433a      	orrs	r2, r7
    6bd6:	d1dd      	bne.n	6b94 <__ledf2+0x44>
    6bd8:	2300      	movs	r3, #0
    6bda:	2800      	cmp	r0, #0
    6bdc:	d0e0      	beq.n	6ba0 <__ledf2+0x50>
    6bde:	e7ea      	b.n	6bb6 <__ledf2+0x66>
    6be0:	433a      	orrs	r2, r7
    6be2:	d1e6      	bne.n	6bb2 <__ledf2+0x62>
    6be4:	e7e7      	b.n	6bb6 <__ledf2+0x66>
    6be6:	42a5      	cmp	r5, r4
    6be8:	dce5      	bgt.n	6bb6 <__ledf2+0x66>
    6bea:	db05      	blt.n	6bf8 <__ledf2+0xa8>
    6bec:	42be      	cmp	r6, r7
    6bee:	d8e2      	bhi.n	6bb6 <__ledf2+0x66>
    6bf0:	d007      	beq.n	6c02 <__ledf2+0xb2>
    6bf2:	2300      	movs	r3, #0
    6bf4:	42be      	cmp	r6, r7
    6bf6:	d2d3      	bcs.n	6ba0 <__ledf2+0x50>
    6bf8:	4659      	mov	r1, fp
    6bfa:	2301      	movs	r3, #1
    6bfc:	3901      	subs	r1, #1
    6bfe:	430b      	orrs	r3, r1
    6c00:	e7ce      	b.n	6ba0 <__ledf2+0x50>
    6c02:	45c4      	cmp	ip, r8
    6c04:	d8d7      	bhi.n	6bb6 <__ledf2+0x66>
    6c06:	2300      	movs	r3, #0
    6c08:	45c4      	cmp	ip, r8
    6c0a:	d3f5      	bcc.n	6bf8 <__ledf2+0xa8>
    6c0c:	e7c8      	b.n	6ba0 <__ledf2+0x50>
    6c0e:	46c0      	nop			; (mov r8, r8)
    6c10:	000007ff 	.word	0x000007ff

00006c14 <__libc_init_array>:
    6c14:	b570      	push	{r4, r5, r6, lr}
    6c16:	4e0d      	ldr	r6, [pc, #52]	; (6c4c <__libc_init_array+0x38>)
    6c18:	4d0d      	ldr	r5, [pc, #52]	; (6c50 <__libc_init_array+0x3c>)
    6c1a:	2400      	movs	r4, #0
    6c1c:	1bad      	subs	r5, r5, r6
    6c1e:	10ad      	asrs	r5, r5, #2
    6c20:	d005      	beq.n	6c2e <__libc_init_array+0x1a>
    6c22:	00a3      	lsls	r3, r4, #2
    6c24:	58f3      	ldr	r3, [r6, r3]
    6c26:	3401      	adds	r4, #1
    6c28:	4798      	blx	r3
    6c2a:	42a5      	cmp	r5, r4
    6c2c:	d1f9      	bne.n	6c22 <__libc_init_array+0xe>
    6c2e:	f00d fc21 	bl	14474 <_init>
    6c32:	4e08      	ldr	r6, [pc, #32]	; (6c54 <__libc_init_array+0x40>)
    6c34:	4d08      	ldr	r5, [pc, #32]	; (6c58 <__libc_init_array+0x44>)
    6c36:	2400      	movs	r4, #0
    6c38:	1bad      	subs	r5, r5, r6
    6c3a:	10ad      	asrs	r5, r5, #2
    6c3c:	d005      	beq.n	6c4a <__libc_init_array+0x36>
    6c3e:	00a3      	lsls	r3, r4, #2
    6c40:	58f3      	ldr	r3, [r6, r3]
    6c42:	3401      	adds	r4, #1
    6c44:	4798      	blx	r3
    6c46:	42a5      	cmp	r5, r4
    6c48:	d1f9      	bne.n	6c3e <__libc_init_array+0x2a>
    6c4a:	bd70      	pop	{r4, r5, r6, pc}
    6c4c:	00014480 	.word	0x00014480
    6c50:	00014480 	.word	0x00014480
    6c54:	00014480 	.word	0x00014480
    6c58:	00014488 	.word	0x00014488

00006c5c <memcmp>:
    6c5c:	b510      	push	{r4, lr}
    6c5e:	2a03      	cmp	r2, #3
    6c60:	d91c      	bls.n	6c9c <memcmp+0x40>
    6c62:	0003      	movs	r3, r0
    6c64:	430b      	orrs	r3, r1
    6c66:	079b      	lsls	r3, r3, #30
    6c68:	d00f      	beq.n	6c8a <memcmp+0x2e>
    6c6a:	7803      	ldrb	r3, [r0, #0]
    6c6c:	780c      	ldrb	r4, [r1, #0]
    6c6e:	1882      	adds	r2, r0, r2
    6c70:	42a3      	cmp	r3, r4
    6c72:	d004      	beq.n	6c7e <memcmp+0x22>
    6c74:	e015      	b.n	6ca2 <memcmp+0x46>
    6c76:	7803      	ldrb	r3, [r0, #0]
    6c78:	780c      	ldrb	r4, [r1, #0]
    6c7a:	42a3      	cmp	r3, r4
    6c7c:	d111      	bne.n	6ca2 <memcmp+0x46>
    6c7e:	3001      	adds	r0, #1
    6c80:	3101      	adds	r1, #1
    6c82:	4282      	cmp	r2, r0
    6c84:	d1f7      	bne.n	6c76 <memcmp+0x1a>
    6c86:	2000      	movs	r0, #0
    6c88:	bd10      	pop	{r4, pc}
    6c8a:	6803      	ldr	r3, [r0, #0]
    6c8c:	680c      	ldr	r4, [r1, #0]
    6c8e:	42a3      	cmp	r3, r4
    6c90:	d1eb      	bne.n	6c6a <memcmp+0xe>
    6c92:	3a04      	subs	r2, #4
    6c94:	3004      	adds	r0, #4
    6c96:	3104      	adds	r1, #4
    6c98:	2a03      	cmp	r2, #3
    6c9a:	d8f6      	bhi.n	6c8a <memcmp+0x2e>
    6c9c:	2a00      	cmp	r2, #0
    6c9e:	d1e4      	bne.n	6c6a <memcmp+0xe>
    6ca0:	e7f1      	b.n	6c86 <memcmp+0x2a>
    6ca2:	1b18      	subs	r0, r3, r4
    6ca4:	e7f0      	b.n	6c88 <memcmp+0x2c>
    6ca6:	46c0      	nop			; (mov r8, r8)

00006ca8 <memcpy>:
    6ca8:	b5f0      	push	{r4, r5, r6, r7, lr}
    6caa:	0005      	movs	r5, r0
    6cac:	2a0f      	cmp	r2, #15
    6cae:	d92f      	bls.n	6d10 <memcpy+0x68>
    6cb0:	000b      	movs	r3, r1
    6cb2:	4303      	orrs	r3, r0
    6cb4:	079b      	lsls	r3, r3, #30
    6cb6:	d134      	bne.n	6d22 <memcpy+0x7a>
    6cb8:	0016      	movs	r6, r2
    6cba:	000c      	movs	r4, r1
    6cbc:	0003      	movs	r3, r0
    6cbe:	3e10      	subs	r6, #16
    6cc0:	0935      	lsrs	r5, r6, #4
    6cc2:	3501      	adds	r5, #1
    6cc4:	012d      	lsls	r5, r5, #4
    6cc6:	1945      	adds	r5, r0, r5
    6cc8:	6827      	ldr	r7, [r4, #0]
    6cca:	601f      	str	r7, [r3, #0]
    6ccc:	6867      	ldr	r7, [r4, #4]
    6cce:	605f      	str	r7, [r3, #4]
    6cd0:	68a7      	ldr	r7, [r4, #8]
    6cd2:	609f      	str	r7, [r3, #8]
    6cd4:	68e7      	ldr	r7, [r4, #12]
    6cd6:	3410      	adds	r4, #16
    6cd8:	60df      	str	r7, [r3, #12]
    6cda:	3310      	adds	r3, #16
    6cdc:	429d      	cmp	r5, r3
    6cde:	d1f3      	bne.n	6cc8 <memcpy+0x20>
    6ce0:	230f      	movs	r3, #15
    6ce2:	439e      	bics	r6, r3
    6ce4:	3610      	adds	r6, #16
    6ce6:	1985      	adds	r5, r0, r6
    6ce8:	1989      	adds	r1, r1, r6
    6cea:	4013      	ands	r3, r2
    6cec:	2b03      	cmp	r3, #3
    6cee:	d91a      	bls.n	6d26 <memcpy+0x7e>
    6cf0:	1f1e      	subs	r6, r3, #4
    6cf2:	2300      	movs	r3, #0
    6cf4:	08b4      	lsrs	r4, r6, #2
    6cf6:	3401      	adds	r4, #1
    6cf8:	00a4      	lsls	r4, r4, #2
    6cfa:	58cf      	ldr	r7, [r1, r3]
    6cfc:	50ef      	str	r7, [r5, r3]
    6cfe:	3304      	adds	r3, #4
    6d00:	42a3      	cmp	r3, r4
    6d02:	d1fa      	bne.n	6cfa <memcpy+0x52>
    6d04:	2403      	movs	r4, #3
    6d06:	43a6      	bics	r6, r4
    6d08:	1d33      	adds	r3, r6, #4
    6d0a:	4022      	ands	r2, r4
    6d0c:	18c9      	adds	r1, r1, r3
    6d0e:	18ed      	adds	r5, r5, r3
    6d10:	2a00      	cmp	r2, #0
    6d12:	d005      	beq.n	6d20 <memcpy+0x78>
    6d14:	2300      	movs	r3, #0
    6d16:	5ccc      	ldrb	r4, [r1, r3]
    6d18:	54ec      	strb	r4, [r5, r3]
    6d1a:	3301      	adds	r3, #1
    6d1c:	4293      	cmp	r3, r2
    6d1e:	d1fa      	bne.n	6d16 <memcpy+0x6e>
    6d20:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6d22:	0005      	movs	r5, r0
    6d24:	e7f6      	b.n	6d14 <memcpy+0x6c>
    6d26:	001a      	movs	r2, r3
    6d28:	e7f2      	b.n	6d10 <memcpy+0x68>
    6d2a:	46c0      	nop			; (mov r8, r8)

00006d2c <memset>:
    6d2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    6d2e:	0783      	lsls	r3, r0, #30
    6d30:	d043      	beq.n	6dba <memset+0x8e>
    6d32:	1e54      	subs	r4, r2, #1
    6d34:	2a00      	cmp	r2, #0
    6d36:	d03f      	beq.n	6db8 <memset+0x8c>
    6d38:	b2ce      	uxtb	r6, r1
    6d3a:	0002      	movs	r2, r0
    6d3c:	2503      	movs	r5, #3
    6d3e:	e002      	b.n	6d46 <memset+0x1a>
    6d40:	001a      	movs	r2, r3
    6d42:	3c01      	subs	r4, #1
    6d44:	d338      	bcc.n	6db8 <memset+0x8c>
    6d46:	1c53      	adds	r3, r2, #1
    6d48:	7016      	strb	r6, [r2, #0]
    6d4a:	422b      	tst	r3, r5
    6d4c:	d1f8      	bne.n	6d40 <memset+0x14>
    6d4e:	2c03      	cmp	r4, #3
    6d50:	d92a      	bls.n	6da8 <memset+0x7c>
    6d52:	22ff      	movs	r2, #255	; 0xff
    6d54:	400a      	ands	r2, r1
    6d56:	0215      	lsls	r5, r2, #8
    6d58:	4315      	orrs	r5, r2
    6d5a:	042a      	lsls	r2, r5, #16
    6d5c:	4315      	orrs	r5, r2
    6d5e:	2c0f      	cmp	r4, #15
    6d60:	d914      	bls.n	6d8c <memset+0x60>
    6d62:	0027      	movs	r7, r4
    6d64:	001a      	movs	r2, r3
    6d66:	3f10      	subs	r7, #16
    6d68:	093e      	lsrs	r6, r7, #4
    6d6a:	3601      	adds	r6, #1
    6d6c:	0136      	lsls	r6, r6, #4
    6d6e:	199e      	adds	r6, r3, r6
    6d70:	6015      	str	r5, [r2, #0]
    6d72:	6055      	str	r5, [r2, #4]
    6d74:	6095      	str	r5, [r2, #8]
    6d76:	60d5      	str	r5, [r2, #12]
    6d78:	3210      	adds	r2, #16
    6d7a:	4296      	cmp	r6, r2
    6d7c:	d1f8      	bne.n	6d70 <memset+0x44>
    6d7e:	220f      	movs	r2, #15
    6d80:	4397      	bics	r7, r2
    6d82:	3710      	adds	r7, #16
    6d84:	19db      	adds	r3, r3, r7
    6d86:	4014      	ands	r4, r2
    6d88:	2c03      	cmp	r4, #3
    6d8a:	d90d      	bls.n	6da8 <memset+0x7c>
    6d8c:	001a      	movs	r2, r3
    6d8e:	1f27      	subs	r7, r4, #4
    6d90:	08be      	lsrs	r6, r7, #2
    6d92:	3601      	adds	r6, #1
    6d94:	00b6      	lsls	r6, r6, #2
    6d96:	199e      	adds	r6, r3, r6
    6d98:	c220      	stmia	r2!, {r5}
    6d9a:	42b2      	cmp	r2, r6
    6d9c:	d1fc      	bne.n	6d98 <memset+0x6c>
    6d9e:	2203      	movs	r2, #3
    6da0:	4397      	bics	r7, r2
    6da2:	3704      	adds	r7, #4
    6da4:	19db      	adds	r3, r3, r7
    6da6:	4014      	ands	r4, r2
    6da8:	2c00      	cmp	r4, #0
    6daa:	d005      	beq.n	6db8 <memset+0x8c>
    6dac:	b2c9      	uxtb	r1, r1
    6dae:	191c      	adds	r4, r3, r4
    6db0:	7019      	strb	r1, [r3, #0]
    6db2:	3301      	adds	r3, #1
    6db4:	429c      	cmp	r4, r3
    6db6:	d1fb      	bne.n	6db0 <memset+0x84>
    6db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6dba:	0014      	movs	r4, r2
    6dbc:	0003      	movs	r3, r0
    6dbe:	e7c6      	b.n	6d4e <memset+0x22>

00006dc0 <printf>:
    6dc0:	b40f      	push	{r0, r1, r2, r3}
    6dc2:	b500      	push	{lr}
    6dc4:	4906      	ldr	r1, [pc, #24]	; (6de0 <printf+0x20>)
    6dc6:	b083      	sub	sp, #12
    6dc8:	ab04      	add	r3, sp, #16
    6dca:	6808      	ldr	r0, [r1, #0]
    6dcc:	cb04      	ldmia	r3!, {r2}
    6dce:	6881      	ldr	r1, [r0, #8]
    6dd0:	9301      	str	r3, [sp, #4]
    6dd2:	f002 ff47 	bl	9c64 <_vfprintf_r>
    6dd6:	b003      	add	sp, #12
    6dd8:	bc08      	pop	{r3}
    6dda:	b004      	add	sp, #16
    6ddc:	4718      	bx	r3
    6dde:	46c0      	nop			; (mov r8, r8)
    6de0:	2000006c 	.word	0x2000006c

00006de4 <_puts_r>:
    6de4:	b530      	push	{r4, r5, lr}
    6de6:	0004      	movs	r4, r0
    6de8:	b089      	sub	sp, #36	; 0x24
    6dea:	0008      	movs	r0, r1
    6dec:	000d      	movs	r5, r1
    6dee:	f000 fa0b 	bl	7208 <strlen>
    6df2:	ab04      	add	r3, sp, #16
    6df4:	4a21      	ldr	r2, [pc, #132]	; (6e7c <_puts_r+0x98>)
    6df6:	9301      	str	r3, [sp, #4]
    6df8:	2302      	movs	r3, #2
    6dfa:	9206      	str	r2, [sp, #24]
    6dfc:	2201      	movs	r2, #1
    6dfe:	9302      	str	r3, [sp, #8]
    6e00:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    6e02:	9005      	str	r0, [sp, #20]
    6e04:	3001      	adds	r0, #1
    6e06:	9504      	str	r5, [sp, #16]
    6e08:	9207      	str	r2, [sp, #28]
    6e0a:	9003      	str	r0, [sp, #12]
    6e0c:	68a5      	ldr	r5, [r4, #8]
    6e0e:	2b00      	cmp	r3, #0
    6e10:	d02f      	beq.n	6e72 <_puts_r+0x8e>
    6e12:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    6e14:	07db      	lsls	r3, r3, #31
    6e16:	d424      	bmi.n	6e62 <_puts_r+0x7e>
    6e18:	230c      	movs	r3, #12
    6e1a:	5eea      	ldrsh	r2, [r5, r3]
    6e1c:	b291      	uxth	r1, r2
    6e1e:	058b      	lsls	r3, r1, #22
    6e20:	d51c      	bpl.n	6e5c <_puts_r+0x78>
    6e22:	2380      	movs	r3, #128	; 0x80
    6e24:	019b      	lsls	r3, r3, #6
    6e26:	4219      	tst	r1, r3
    6e28:	d105      	bne.n	6e36 <_puts_r+0x52>
    6e2a:	4313      	orrs	r3, r2
    6e2c:	81ab      	strh	r3, [r5, #12]
    6e2e:	6e6a      	ldr	r2, [r5, #100]	; 0x64
    6e30:	4b13      	ldr	r3, [pc, #76]	; (6e80 <_puts_r+0x9c>)
    6e32:	4013      	ands	r3, r2
    6e34:	666b      	str	r3, [r5, #100]	; 0x64
    6e36:	0020      	movs	r0, r4
    6e38:	aa01      	add	r2, sp, #4
    6e3a:	0029      	movs	r1, r5
    6e3c:	f005 febc 	bl	cbb8 <__sfvwrite_r>
    6e40:	1e44      	subs	r4, r0, #1
    6e42:	41a0      	sbcs	r0, r4
    6e44:	4244      	negs	r4, r0
    6e46:	200a      	movs	r0, #10
    6e48:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    6e4a:	4304      	orrs	r4, r0
    6e4c:	07db      	lsls	r3, r3, #31
    6e4e:	d402      	bmi.n	6e56 <_puts_r+0x72>
    6e50:	89ab      	ldrh	r3, [r5, #12]
    6e52:	059b      	lsls	r3, r3, #22
    6e54:	d509      	bpl.n	6e6a <_puts_r+0x86>
    6e56:	0020      	movs	r0, r4
    6e58:	b009      	add	sp, #36	; 0x24
    6e5a:	bd30      	pop	{r4, r5, pc}
    6e5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
    6e5e:	f006 f895 	bl	cf8c <__retarget_lock_acquire_recursive>
    6e62:	230c      	movs	r3, #12
    6e64:	5eea      	ldrsh	r2, [r5, r3]
    6e66:	b291      	uxth	r1, r2
    6e68:	e7db      	b.n	6e22 <_puts_r+0x3e>
    6e6a:	6da8      	ldr	r0, [r5, #88]	; 0x58
    6e6c:	f006 f890 	bl	cf90 <__retarget_lock_release_recursive>
    6e70:	e7f1      	b.n	6e56 <_puts_r+0x72>
    6e72:	0020      	movs	r0, r4
    6e74:	f005 fd18 	bl	c8a8 <__sinit>
    6e78:	e7cb      	b.n	6e12 <_puts_r+0x2e>
    6e7a:	46c0      	nop			; (mov r8, r8)
    6e7c:	0001384c 	.word	0x0001384c
    6e80:	ffffdfff 	.word	0xffffdfff

00006e84 <puts>:
    6e84:	b510      	push	{r4, lr}
    6e86:	4b03      	ldr	r3, [pc, #12]	; (6e94 <puts+0x10>)
    6e88:	0001      	movs	r1, r0
    6e8a:	6818      	ldr	r0, [r3, #0]
    6e8c:	f7ff ffaa 	bl	6de4 <_puts_r>
    6e90:	bd10      	pop	{r4, pc}
    6e92:	46c0      	nop			; (mov r8, r8)
    6e94:	2000006c 	.word	0x2000006c

00006e98 <snprintf>:
    6e98:	b40c      	push	{r2, r3}
    6e9a:	b530      	push	{r4, r5, lr}
    6e9c:	4b1e      	ldr	r3, [pc, #120]	; (6f18 <snprintf+0x80>)
    6e9e:	b09d      	sub	sp, #116	; 0x74
    6ea0:	681d      	ldr	r5, [r3, #0]
    6ea2:	2900      	cmp	r1, #0
    6ea4:	db33      	blt.n	6f0e <snprintf+0x76>
    6ea6:	2382      	movs	r3, #130	; 0x82
    6ea8:	ac02      	add	r4, sp, #8
    6eaa:	009b      	lsls	r3, r3, #2
    6eac:	81a3      	strh	r3, [r4, #12]
    6eae:	9002      	str	r0, [sp, #8]
    6eb0:	6120      	str	r0, [r4, #16]
    6eb2:	2900      	cmp	r1, #0
    6eb4:	d012      	beq.n	6edc <snprintf+0x44>
    6eb6:	2301      	movs	r3, #1
    6eb8:	3901      	subs	r1, #1
    6eba:	425b      	negs	r3, r3
    6ebc:	60a1      	str	r1, [r4, #8]
    6ebe:	6161      	str	r1, [r4, #20]
    6ec0:	81e3      	strh	r3, [r4, #14]
    6ec2:	9a20      	ldr	r2, [sp, #128]	; 0x80
    6ec4:	ab21      	add	r3, sp, #132	; 0x84
    6ec6:	0021      	movs	r1, r4
    6ec8:	0028      	movs	r0, r5
    6eca:	9301      	str	r3, [sp, #4]
    6ecc:	f000 fcde 	bl	788c <_svfprintf_r>
    6ed0:	1c43      	adds	r3, r0, #1
    6ed2:	db16      	blt.n	6f02 <snprintf+0x6a>
    6ed4:	2300      	movs	r3, #0
    6ed6:	9a02      	ldr	r2, [sp, #8]
    6ed8:	7013      	strb	r3, [r2, #0]
    6eda:	e00d      	b.n	6ef8 <snprintf+0x60>
    6edc:	2301      	movs	r3, #1
    6ede:	425b      	negs	r3, r3
    6ee0:	60a1      	str	r1, [r4, #8]
    6ee2:	6161      	str	r1, [r4, #20]
    6ee4:	81e3      	strh	r3, [r4, #14]
    6ee6:	9a20      	ldr	r2, [sp, #128]	; 0x80
    6ee8:	ab21      	add	r3, sp, #132	; 0x84
    6eea:	0021      	movs	r1, r4
    6eec:	0028      	movs	r0, r5
    6eee:	9301      	str	r3, [sp, #4]
    6ef0:	f000 fccc 	bl	788c <_svfprintf_r>
    6ef4:	1c43      	adds	r3, r0, #1
    6ef6:	db07      	blt.n	6f08 <snprintf+0x70>
    6ef8:	b01d      	add	sp, #116	; 0x74
    6efa:	bc30      	pop	{r4, r5}
    6efc:	bc08      	pop	{r3}
    6efe:	b002      	add	sp, #8
    6f00:	4718      	bx	r3
    6f02:	238b      	movs	r3, #139	; 0x8b
    6f04:	602b      	str	r3, [r5, #0]
    6f06:	e7e5      	b.n	6ed4 <snprintf+0x3c>
    6f08:	238b      	movs	r3, #139	; 0x8b
    6f0a:	602b      	str	r3, [r5, #0]
    6f0c:	e7f4      	b.n	6ef8 <snprintf+0x60>
    6f0e:	238b      	movs	r3, #139	; 0x8b
    6f10:	2001      	movs	r0, #1
    6f12:	602b      	str	r3, [r5, #0]
    6f14:	4240      	negs	r0, r0
    6f16:	e7ef      	b.n	6ef8 <snprintf+0x60>
    6f18:	2000006c 	.word	0x2000006c

00006f1c <sprintf>:
    6f1c:	b40e      	push	{r1, r2, r3}
    6f1e:	b510      	push	{r4, lr}
    6f20:	b09d      	sub	sp, #116	; 0x74
    6f22:	a902      	add	r1, sp, #8
    6f24:	9002      	str	r0, [sp, #8]
    6f26:	6108      	str	r0, [r1, #16]
    6f28:	480b      	ldr	r0, [pc, #44]	; (6f58 <sprintf+0x3c>)
    6f2a:	2482      	movs	r4, #130	; 0x82
    6f2c:	6088      	str	r0, [r1, #8]
    6f2e:	6148      	str	r0, [r1, #20]
    6f30:	2001      	movs	r0, #1
    6f32:	4240      	negs	r0, r0
    6f34:	ab1f      	add	r3, sp, #124	; 0x7c
    6f36:	81c8      	strh	r0, [r1, #14]
    6f38:	4808      	ldr	r0, [pc, #32]	; (6f5c <sprintf+0x40>)
    6f3a:	cb04      	ldmia	r3!, {r2}
    6f3c:	00a4      	lsls	r4, r4, #2
    6f3e:	6800      	ldr	r0, [r0, #0]
    6f40:	9301      	str	r3, [sp, #4]
    6f42:	818c      	strh	r4, [r1, #12]
    6f44:	f000 fca2 	bl	788c <_svfprintf_r>
    6f48:	2300      	movs	r3, #0
    6f4a:	9a02      	ldr	r2, [sp, #8]
    6f4c:	7013      	strb	r3, [r2, #0]
    6f4e:	b01d      	add	sp, #116	; 0x74
    6f50:	bc10      	pop	{r4}
    6f52:	bc08      	pop	{r3}
    6f54:	b003      	add	sp, #12
    6f56:	4718      	bx	r3
    6f58:	7fffffff 	.word	0x7fffffff
    6f5c:	2000006c 	.word	0x2000006c

00006f60 <sscanf>:
    6f60:	b40e      	push	{r1, r2, r3}
    6f62:	2381      	movs	r3, #129	; 0x81
    6f64:	b570      	push	{r4, r5, r6, lr}
    6f66:	b09d      	sub	sp, #116	; 0x74
    6f68:	ac02      	add	r4, sp, #8
    6f6a:	ad21      	add	r5, sp, #132	; 0x84
    6f6c:	009b      	lsls	r3, r3, #2
    6f6e:	cd40      	ldmia	r5!, {r6}
    6f70:	81a3      	strh	r3, [r4, #12]
    6f72:	9002      	str	r0, [sp, #8]
    6f74:	9006      	str	r0, [sp, #24]
    6f76:	f000 f947 	bl	7208 <strlen>
    6f7a:	4b0b      	ldr	r3, [pc, #44]	; (6fa8 <sscanf+0x48>)
    6f7c:	6060      	str	r0, [r4, #4]
    6f7e:	6223      	str	r3, [r4, #32]
    6f80:	2300      	movs	r3, #0
    6f82:	6323      	str	r3, [r4, #48]	; 0x30
    6f84:	6463      	str	r3, [r4, #68]	; 0x44
    6f86:	3b01      	subs	r3, #1
    6f88:	81e3      	strh	r3, [r4, #14]
    6f8a:	4b08      	ldr	r3, [pc, #32]	; (6fac <sscanf+0x4c>)
    6f8c:	6160      	str	r0, [r4, #20]
    6f8e:	0032      	movs	r2, r6
    6f90:	6818      	ldr	r0, [r3, #0]
    6f92:	0021      	movs	r1, r4
    6f94:	002b      	movs	r3, r5
    6f96:	9501      	str	r5, [sp, #4]
    6f98:	f001 ff7c 	bl	8e94 <__ssvfscanf_r>
    6f9c:	b01d      	add	sp, #116	; 0x74
    6f9e:	bc70      	pop	{r4, r5, r6}
    6fa0:	bc08      	pop	{r3}
    6fa2:	b003      	add	sp, #12
    6fa4:	4718      	bx	r3
    6fa6:	46c0      	nop			; (mov r8, r8)
    6fa8:	00006fd9 	.word	0x00006fd9
    6fac:	2000006c 	.word	0x2000006c

00006fb0 <__sread>:
    6fb0:	b570      	push	{r4, r5, r6, lr}
    6fb2:	000c      	movs	r4, r1
    6fb4:	250e      	movs	r5, #14
    6fb6:	5f49      	ldrsh	r1, [r1, r5]
    6fb8:	f007 f8c2 	bl	e140 <_read_r>
    6fbc:	2800      	cmp	r0, #0
    6fbe:	db03      	blt.n	6fc8 <__sread+0x18>
    6fc0:	6d23      	ldr	r3, [r4, #80]	; 0x50
    6fc2:	181b      	adds	r3, r3, r0
    6fc4:	6523      	str	r3, [r4, #80]	; 0x50
    6fc6:	bd70      	pop	{r4, r5, r6, pc}
    6fc8:	89a3      	ldrh	r3, [r4, #12]
    6fca:	4a02      	ldr	r2, [pc, #8]	; (6fd4 <__sread+0x24>)
    6fcc:	4013      	ands	r3, r2
    6fce:	81a3      	strh	r3, [r4, #12]
    6fd0:	e7f9      	b.n	6fc6 <__sread+0x16>
    6fd2:	46c0      	nop			; (mov r8, r8)
    6fd4:	ffffefff 	.word	0xffffefff

00006fd8 <__seofread>:
    6fd8:	2000      	movs	r0, #0
    6fda:	4770      	bx	lr

00006fdc <__swrite>:
    6fdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6fde:	0016      	movs	r6, r2
    6fe0:	001f      	movs	r7, r3
    6fe2:	220c      	movs	r2, #12
    6fe4:	5e8b      	ldrsh	r3, [r1, r2]
    6fe6:	0005      	movs	r5, r0
    6fe8:	000c      	movs	r4, r1
    6fea:	05da      	lsls	r2, r3, #23
    6fec:	d507      	bpl.n	6ffe <__swrite+0x22>
    6fee:	230e      	movs	r3, #14
    6ff0:	5ec9      	ldrsh	r1, [r1, r3]
    6ff2:	2200      	movs	r2, #0
    6ff4:	2302      	movs	r3, #2
    6ff6:	f005 ffcd 	bl	cf94 <_lseek_r>
    6ffa:	220c      	movs	r2, #12
    6ffc:	5ea3      	ldrsh	r3, [r4, r2]
    6ffe:	4a05      	ldr	r2, [pc, #20]	; (7014 <__swrite+0x38>)
    7000:	0028      	movs	r0, r5
    7002:	4013      	ands	r3, r2
    7004:	81a3      	strh	r3, [r4, #12]
    7006:	0032      	movs	r2, r6
    7008:	230e      	movs	r3, #14
    700a:	5ee1      	ldrsh	r1, [r4, r3]
    700c:	003b      	movs	r3, r7
    700e:	f004 fa37 	bl	b480 <_write_r>
    7012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7014:	ffffefff 	.word	0xffffefff

00007018 <__sseek>:
    7018:	b570      	push	{r4, r5, r6, lr}
    701a:	000c      	movs	r4, r1
    701c:	250e      	movs	r5, #14
    701e:	5f49      	ldrsh	r1, [r1, r5]
    7020:	f005 ffb8 	bl	cf94 <_lseek_r>
    7024:	1c43      	adds	r3, r0, #1
    7026:	d006      	beq.n	7036 <__sseek+0x1e>
    7028:	2380      	movs	r3, #128	; 0x80
    702a:	89a2      	ldrh	r2, [r4, #12]
    702c:	015b      	lsls	r3, r3, #5
    702e:	4313      	orrs	r3, r2
    7030:	81a3      	strh	r3, [r4, #12]
    7032:	6520      	str	r0, [r4, #80]	; 0x50
    7034:	bd70      	pop	{r4, r5, r6, pc}
    7036:	89a3      	ldrh	r3, [r4, #12]
    7038:	4a01      	ldr	r2, [pc, #4]	; (7040 <__sseek+0x28>)
    703a:	4013      	ands	r3, r2
    703c:	81a3      	strh	r3, [r4, #12]
    703e:	e7f9      	b.n	7034 <__sseek+0x1c>
    7040:	ffffefff 	.word	0xffffefff

00007044 <__sclose>:
    7044:	b510      	push	{r4, lr}
    7046:	230e      	movs	r3, #14
    7048:	5ec9      	ldrsh	r1, [r1, r3]
    704a:	f004 faab 	bl	b5a4 <_close_r>
    704e:	bd10      	pop	{r4, pc}

00007050 <strcasecmp>:
    7050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7052:	4647      	mov	r7, r8
    7054:	46ce      	mov	lr, r9
    7056:	4688      	mov	r8, r1
    7058:	b580      	push	{r7, lr}
    705a:	4681      	mov	r9, r0
    705c:	2600      	movs	r6, #0
    705e:	2703      	movs	r7, #3
    7060:	464b      	mov	r3, r9
    7062:	5d9c      	ldrb	r4, [r3, r6]
    7064:	f005 ff70 	bl	cf48 <__locale_ctype_ptr>
    7068:	1900      	adds	r0, r0, r4
    706a:	7843      	ldrb	r3, [r0, #1]
    706c:	403b      	ands	r3, r7
    706e:	2b01      	cmp	r3, #1
    7070:	d016      	beq.n	70a0 <strcasecmp+0x50>
    7072:	4643      	mov	r3, r8
    7074:	5d9d      	ldrb	r5, [r3, r6]
    7076:	f005 ff67 	bl	cf48 <__locale_ctype_ptr>
    707a:	1940      	adds	r0, r0, r5
    707c:	7843      	ldrb	r3, [r0, #1]
    707e:	403b      	ands	r3, r7
    7080:	2b01      	cmp	r3, #1
    7082:	d005      	beq.n	7090 <strcasecmp+0x40>
    7084:	1b60      	subs	r0, r4, r5
    7086:	d107      	bne.n	7098 <strcasecmp+0x48>
    7088:	2d00      	cmp	r5, #0
    708a:	d005      	beq.n	7098 <strcasecmp+0x48>
    708c:	3601      	adds	r6, #1
    708e:	e7e7      	b.n	7060 <strcasecmp+0x10>
    7090:	0028      	movs	r0, r5
    7092:	3020      	adds	r0, #32
    7094:	1a20      	subs	r0, r4, r0
    7096:	d0f9      	beq.n	708c <strcasecmp+0x3c>
    7098:	bc0c      	pop	{r2, r3}
    709a:	4690      	mov	r8, r2
    709c:	4699      	mov	r9, r3
    709e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    70a0:	3420      	adds	r4, #32
    70a2:	e7e6      	b.n	7072 <strcasecmp+0x22>

000070a4 <strchr>:
    70a4:	b570      	push	{r4, r5, r6, lr}
    70a6:	b2cc      	uxtb	r4, r1
    70a8:	2c00      	cmp	r4, #0
    70aa:	d03b      	beq.n	7124 <strchr+0x80>
    70ac:	0783      	lsls	r3, r0, #30
    70ae:	d00e      	beq.n	70ce <strchr+0x2a>
    70b0:	7803      	ldrb	r3, [r0, #0]
    70b2:	2b00      	cmp	r3, #0
    70b4:	d05b      	beq.n	716e <strchr+0xca>
    70b6:	429c      	cmp	r4, r3
    70b8:	d033      	beq.n	7122 <strchr+0x7e>
    70ba:	2203      	movs	r2, #3
    70bc:	e004      	b.n	70c8 <strchr+0x24>
    70be:	7803      	ldrb	r3, [r0, #0]
    70c0:	2b00      	cmp	r3, #0
    70c2:	d054      	beq.n	716e <strchr+0xca>
    70c4:	429c      	cmp	r4, r3
    70c6:	d02c      	beq.n	7122 <strchr+0x7e>
    70c8:	3001      	adds	r0, #1
    70ca:	4210      	tst	r0, r2
    70cc:	d1f7      	bne.n	70be <strchr+0x1a>
    70ce:	25ff      	movs	r5, #255	; 0xff
    70d0:	4029      	ands	r1, r5
    70d2:	020d      	lsls	r5, r1, #8
    70d4:	4329      	orrs	r1, r5
    70d6:	040d      	lsls	r5, r1, #16
    70d8:	430d      	orrs	r5, r1
    70da:	0029      	movs	r1, r5
    70dc:	6802      	ldr	r2, [r0, #0]
    70de:	4b26      	ldr	r3, [pc, #152]	; (7178 <strchr+0xd4>)
    70e0:	4051      	eors	r1, r2
    70e2:	18d3      	adds	r3, r2, r3
    70e4:	4393      	bics	r3, r2
    70e6:	4a24      	ldr	r2, [pc, #144]	; (7178 <strchr+0xd4>)
    70e8:	4e24      	ldr	r6, [pc, #144]	; (717c <strchr+0xd8>)
    70ea:	188a      	adds	r2, r1, r2
    70ec:	438a      	bics	r2, r1
    70ee:	4313      	orrs	r3, r2
    70f0:	4233      	tst	r3, r6
    70f2:	d10c      	bne.n	710e <strchr+0x6a>
    70f4:	0029      	movs	r1, r5
    70f6:	3004      	adds	r0, #4
    70f8:	6802      	ldr	r2, [r0, #0]
    70fa:	4b1f      	ldr	r3, [pc, #124]	; (7178 <strchr+0xd4>)
    70fc:	4051      	eors	r1, r2
    70fe:	18d3      	adds	r3, r2, r3
    7100:	4393      	bics	r3, r2
    7102:	4a1d      	ldr	r2, [pc, #116]	; (7178 <strchr+0xd4>)
    7104:	188a      	adds	r2, r1, r2
    7106:	438a      	bics	r2, r1
    7108:	4313      	orrs	r3, r2
    710a:	4233      	tst	r3, r6
    710c:	d0f2      	beq.n	70f4 <strchr+0x50>
    710e:	7803      	ldrb	r3, [r0, #0]
    7110:	2b00      	cmp	r3, #0
    7112:	d104      	bne.n	711e <strchr+0x7a>
    7114:	e02b      	b.n	716e <strchr+0xca>
    7116:	3001      	adds	r0, #1
    7118:	7803      	ldrb	r3, [r0, #0]
    711a:	2b00      	cmp	r3, #0
    711c:	d027      	beq.n	716e <strchr+0xca>
    711e:	429c      	cmp	r4, r3
    7120:	d1f9      	bne.n	7116 <strchr+0x72>
    7122:	bd70      	pop	{r4, r5, r6, pc}
    7124:	0783      	lsls	r3, r0, #30
    7126:	d00a      	beq.n	713e <strchr+0x9a>
    7128:	7803      	ldrb	r3, [r0, #0]
    712a:	2b00      	cmp	r3, #0
    712c:	d0f9      	beq.n	7122 <strchr+0x7e>
    712e:	2203      	movs	r2, #3
    7130:	e002      	b.n	7138 <strchr+0x94>
    7132:	7803      	ldrb	r3, [r0, #0]
    7134:	2b00      	cmp	r3, #0
    7136:	d0f4      	beq.n	7122 <strchr+0x7e>
    7138:	3001      	adds	r0, #1
    713a:	4210      	tst	r0, r2
    713c:	d1f9      	bne.n	7132 <strchr+0x8e>
    713e:	6801      	ldr	r1, [r0, #0]
    7140:	4a0d      	ldr	r2, [pc, #52]	; (7178 <strchr+0xd4>)
    7142:	0003      	movs	r3, r0
    7144:	188a      	adds	r2, r1, r2
    7146:	480d      	ldr	r0, [pc, #52]	; (717c <strchr+0xd8>)
    7148:	438a      	bics	r2, r1
    714a:	4202      	tst	r2, r0
    714c:	d106      	bne.n	715c <strchr+0xb8>
    714e:	3304      	adds	r3, #4
    7150:	6819      	ldr	r1, [r3, #0]
    7152:	4a09      	ldr	r2, [pc, #36]	; (7178 <strchr+0xd4>)
    7154:	188a      	adds	r2, r1, r2
    7156:	438a      	bics	r2, r1
    7158:	4202      	tst	r2, r0
    715a:	d0f8      	beq.n	714e <strchr+0xaa>
    715c:	781a      	ldrb	r2, [r3, #0]
    715e:	0018      	movs	r0, r3
    7160:	2a00      	cmp	r2, #0
    7162:	d006      	beq.n	7172 <strchr+0xce>
    7164:	3001      	adds	r0, #1
    7166:	7803      	ldrb	r3, [r0, #0]
    7168:	2b00      	cmp	r3, #0
    716a:	d1fb      	bne.n	7164 <strchr+0xc0>
    716c:	e7d9      	b.n	7122 <strchr+0x7e>
    716e:	2000      	movs	r0, #0
    7170:	e7d7      	b.n	7122 <strchr+0x7e>
    7172:	0018      	movs	r0, r3
    7174:	e7d5      	b.n	7122 <strchr+0x7e>
    7176:	46c0      	nop			; (mov r8, r8)
    7178:	fefefeff 	.word	0xfefefeff
    717c:	80808080 	.word	0x80808080

00007180 <strcmp>:
    7180:	4602      	mov	r2, r0
    7182:	b570      	push	{r4, r5, r6, lr}
    7184:	430a      	orrs	r2, r1
    7186:	0792      	lsls	r2, r2, #30
    7188:	d12a      	bne.n	71e0 <strcmp+0x60>
    718a:	4d1e      	ldr	r5, [pc, #120]	; (7204 <strcmp+0x84>)
    718c:	01ee      	lsls	r6, r5, #7
    718e:	c804      	ldmia	r0!, {r2}
    7190:	c908      	ldmia	r1!, {r3}
    7192:	1b54      	subs	r4, r2, r5
    7194:	4394      	bics	r4, r2
    7196:	4034      	ands	r4, r6
    7198:	d017      	beq.n	71ca <strcmp+0x4a>
    719a:	b2d0      	uxtb	r0, r2
    719c:	b2d9      	uxtb	r1, r3
    719e:	1a40      	subs	r0, r0, r1
    71a0:	0621      	lsls	r1, r4, #24
    71a2:	4301      	orrs	r1, r0
    71a4:	d110      	bne.n	71c8 <strcmp+0x48>
    71a6:	b290      	uxth	r0, r2
    71a8:	b299      	uxth	r1, r3
    71aa:	1a40      	subs	r0, r0, r1
    71ac:	0421      	lsls	r1, r4, #16
    71ae:	4301      	orrs	r1, r0
    71b0:	d10a      	bne.n	71c8 <strcmp+0x48>
    71b2:	0210      	lsls	r0, r2, #8
    71b4:	0219      	lsls	r1, r3, #8
    71b6:	0a00      	lsrs	r0, r0, #8
    71b8:	0a09      	lsrs	r1, r1, #8
    71ba:	1a40      	subs	r0, r0, r1
    71bc:	0221      	lsls	r1, r4, #8
    71be:	4301      	orrs	r1, r0
    71c0:	d102      	bne.n	71c8 <strcmp+0x48>
    71c2:	0e10      	lsrs	r0, r2, #24
    71c4:	0e19      	lsrs	r1, r3, #24
    71c6:	1a40      	subs	r0, r0, r1
    71c8:	bd70      	pop	{r4, r5, r6, pc}
    71ca:	429a      	cmp	r2, r3
    71cc:	d0df      	beq.n	718e <strcmp+0xe>
    71ce:	ba10      	rev	r0, r2
    71d0:	ba19      	rev	r1, r3
    71d2:	4288      	cmp	r0, r1
    71d4:	d901      	bls.n	71da <strcmp+0x5a>
    71d6:	2001      	movs	r0, #1
    71d8:	bd70      	pop	{r4, r5, r6, pc}
    71da:	2000      	movs	r0, #0
    71dc:	43c0      	mvns	r0, r0
    71de:	bd70      	pop	{r4, r5, r6, pc}
    71e0:	7802      	ldrb	r2, [r0, #0]
    71e2:	780b      	ldrb	r3, [r1, #0]
    71e4:	3001      	adds	r0, #1
    71e6:	3101      	adds	r1, #1
    71e8:	2a00      	cmp	r2, #0
    71ea:	d009      	beq.n	7200 <strcmp+0x80>
    71ec:	429a      	cmp	r2, r3
    71ee:	d107      	bne.n	7200 <strcmp+0x80>
    71f0:	7802      	ldrb	r2, [r0, #0]
    71f2:	780b      	ldrb	r3, [r1, #0]
    71f4:	3001      	adds	r0, #1
    71f6:	3101      	adds	r1, #1
    71f8:	2a00      	cmp	r2, #0
    71fa:	d001      	beq.n	7200 <strcmp+0x80>
    71fc:	429a      	cmp	r2, r3
    71fe:	d0ef      	beq.n	71e0 <strcmp+0x60>
    7200:	1ad0      	subs	r0, r2, r3
    7202:	bd70      	pop	{r4, r5, r6, pc}
    7204:	01010101 	.word	0x01010101

00007208 <strlen>:
    7208:	b510      	push	{r4, lr}
    720a:	0783      	lsls	r3, r0, #30
    720c:	d025      	beq.n	725a <strlen+0x52>
    720e:	7803      	ldrb	r3, [r0, #0]
    7210:	2b00      	cmp	r3, #0
    7212:	d024      	beq.n	725e <strlen+0x56>
    7214:	0003      	movs	r3, r0
    7216:	2103      	movs	r1, #3
    7218:	e002      	b.n	7220 <strlen+0x18>
    721a:	781a      	ldrb	r2, [r3, #0]
    721c:	2a00      	cmp	r2, #0
    721e:	d01a      	beq.n	7256 <strlen+0x4e>
    7220:	3301      	adds	r3, #1
    7222:	420b      	tst	r3, r1
    7224:	d1f9      	bne.n	721a <strlen+0x12>
    7226:	6819      	ldr	r1, [r3, #0]
    7228:	4a0e      	ldr	r2, [pc, #56]	; (7264 <strlen+0x5c>)
    722a:	4c0f      	ldr	r4, [pc, #60]	; (7268 <strlen+0x60>)
    722c:	188a      	adds	r2, r1, r2
    722e:	438a      	bics	r2, r1
    7230:	4222      	tst	r2, r4
    7232:	d106      	bne.n	7242 <strlen+0x3a>
    7234:	3304      	adds	r3, #4
    7236:	6819      	ldr	r1, [r3, #0]
    7238:	4a0a      	ldr	r2, [pc, #40]	; (7264 <strlen+0x5c>)
    723a:	188a      	adds	r2, r1, r2
    723c:	438a      	bics	r2, r1
    723e:	4222      	tst	r2, r4
    7240:	d0f8      	beq.n	7234 <strlen+0x2c>
    7242:	001a      	movs	r2, r3
    7244:	781b      	ldrb	r3, [r3, #0]
    7246:	2b00      	cmp	r3, #0
    7248:	d003      	beq.n	7252 <strlen+0x4a>
    724a:	3201      	adds	r2, #1
    724c:	7811      	ldrb	r1, [r2, #0]
    724e:	2900      	cmp	r1, #0
    7250:	d1fb      	bne.n	724a <strlen+0x42>
    7252:	1a10      	subs	r0, r2, r0
    7254:	bd10      	pop	{r4, pc}
    7256:	1a18      	subs	r0, r3, r0
    7258:	e7fc      	b.n	7254 <strlen+0x4c>
    725a:	0003      	movs	r3, r0
    725c:	e7e3      	b.n	7226 <strlen+0x1e>
    725e:	2000      	movs	r0, #0
    7260:	e7f8      	b.n	7254 <strlen+0x4c>
    7262:	46c0      	nop			; (mov r8, r8)
    7264:	fefefeff 	.word	0xfefefeff
    7268:	80808080 	.word	0x80808080

0000726c <critical_factorization>:
    726c:	2301      	movs	r3, #1
    726e:	b5f0      	push	{r4, r5, r6, r7, lr}
    7270:	4647      	mov	r7, r8
    7272:	46ce      	mov	lr, r9
    7274:	4694      	mov	ip, r2
    7276:	2201      	movs	r2, #1
    7278:	4698      	mov	r8, r3
    727a:	2401      	movs	r4, #1
    727c:	2500      	movs	r5, #0
    727e:	b580      	push	{r7, lr}
    7280:	4252      	negs	r2, r2
    7282:	192b      	adds	r3, r5, r4
    7284:	428b      	cmp	r3, r1
    7286:	d20b      	bcs.n	72a0 <critical_factorization+0x34>
    7288:	1886      	adds	r6, r0, r2
    728a:	5cc7      	ldrb	r7, [r0, r3]
    728c:	5d36      	ldrb	r6, [r6, r4]
    728e:	42b7      	cmp	r7, r6
    7290:	d22d      	bcs.n	72ee <critical_factorization+0x82>
    7292:	1a9c      	subs	r4, r3, r2
    7294:	46a0      	mov	r8, r4
    7296:	001d      	movs	r5, r3
    7298:	2401      	movs	r4, #1
    729a:	192b      	adds	r3, r5, r4
    729c:	428b      	cmp	r3, r1
    729e:	d3f3      	bcc.n	7288 <critical_factorization+0x1c>
    72a0:	4644      	mov	r4, r8
    72a2:	4663      	mov	r3, ip
    72a4:	601c      	str	r4, [r3, #0]
    72a6:	2301      	movs	r3, #1
    72a8:	4699      	mov	r9, r3
    72aa:	3b02      	subs	r3, #2
    72ac:	2401      	movs	r4, #1
    72ae:	2500      	movs	r5, #0
    72b0:	4698      	mov	r8, r3
    72b2:	192b      	adds	r3, r5, r4
    72b4:	4299      	cmp	r1, r3
    72b6:	d90d      	bls.n	72d4 <critical_factorization+0x68>
    72b8:	4646      	mov	r6, r8
    72ba:	1986      	adds	r6, r0, r6
    72bc:	5cc7      	ldrb	r7, [r0, r3]
    72be:	5d36      	ldrb	r6, [r6, r4]
    72c0:	42b7      	cmp	r7, r6
    72c2:	d91c      	bls.n	72fe <critical_factorization+0x92>
    72c4:	4644      	mov	r4, r8
    72c6:	1b1c      	subs	r4, r3, r4
    72c8:	46a1      	mov	r9, r4
    72ca:	001d      	movs	r5, r3
    72cc:	2401      	movs	r4, #1
    72ce:	192b      	adds	r3, r5, r4
    72d0:	4299      	cmp	r1, r3
    72d2:	d8f1      	bhi.n	72b8 <critical_factorization+0x4c>
    72d4:	4643      	mov	r3, r8
    72d6:	1c50      	adds	r0, r2, #1
    72d8:	3301      	adds	r3, #1
    72da:	4283      	cmp	r3, r0
    72dc:	d303      	bcc.n	72e6 <critical_factorization+0x7a>
    72de:	4662      	mov	r2, ip
    72e0:	4649      	mov	r1, r9
    72e2:	0018      	movs	r0, r3
    72e4:	6011      	str	r1, [r2, #0]
    72e6:	bc0c      	pop	{r2, r3}
    72e8:	4690      	mov	r8, r2
    72ea:	4699      	mov	r9, r3
    72ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    72ee:	42b7      	cmp	r7, r6
    72f0:	d00d      	beq.n	730e <critical_factorization+0xa2>
    72f2:	2301      	movs	r3, #1
    72f4:	002a      	movs	r2, r5
    72f6:	4698      	mov	r8, r3
    72f8:	3501      	adds	r5, #1
    72fa:	2401      	movs	r4, #1
    72fc:	e7c1      	b.n	7282 <critical_factorization+0x16>
    72fe:	42b7      	cmp	r7, r6
    7300:	d009      	beq.n	7316 <critical_factorization+0xaa>
    7302:	2301      	movs	r3, #1
    7304:	46a8      	mov	r8, r5
    7306:	4699      	mov	r9, r3
    7308:	3501      	adds	r5, #1
    730a:	2401      	movs	r4, #1
    730c:	e7d1      	b.n	72b2 <critical_factorization+0x46>
    730e:	4544      	cmp	r4, r8
    7310:	d005      	beq.n	731e <critical_factorization+0xb2>
    7312:	3401      	adds	r4, #1
    7314:	e7b5      	b.n	7282 <critical_factorization+0x16>
    7316:	454c      	cmp	r4, r9
    7318:	d004      	beq.n	7324 <critical_factorization+0xb8>
    731a:	3401      	adds	r4, #1
    731c:	e7c9      	b.n	72b2 <critical_factorization+0x46>
    731e:	001d      	movs	r5, r3
    7320:	2401      	movs	r4, #1
    7322:	e7ae      	b.n	7282 <critical_factorization+0x16>
    7324:	001d      	movs	r5, r3
    7326:	2401      	movs	r4, #1
    7328:	e7c3      	b.n	72b2 <critical_factorization+0x46>
    732a:	46c0      	nop			; (mov r8, r8)

0000732c <two_way_long_needle>:
    732c:	b5f0      	push	{r4, r5, r6, r7, lr}
    732e:	46de      	mov	lr, fp
    7330:	4657      	mov	r7, sl
    7332:	464e      	mov	r6, r9
    7334:	4645      	mov	r5, r8
    7336:	b5e0      	push	{r5, r6, r7, lr}
    7338:	0015      	movs	r5, r2
    733a:	4c7b      	ldr	r4, [pc, #492]	; (7528 <two_way_long_needle+0x1fc>)
    733c:	0006      	movs	r6, r0
    733e:	44a5      	add	sp, r4
    7340:	aa03      	add	r2, sp, #12
    7342:	000f      	movs	r7, r1
    7344:	0028      	movs	r0, r5
    7346:	0019      	movs	r1, r3
    7348:	001c      	movs	r4, r3
    734a:	f7ff ff8f 	bl	726c <critical_factorization>
    734e:	4683      	mov	fp, r0
    7350:	aaff      	add	r2, sp, #1020	; 0x3fc
    7352:	ab04      	add	r3, sp, #16
    7354:	3214      	adds	r2, #20
    7356:	c310      	stmia	r3!, {r4}
    7358:	4293      	cmp	r3, r2
    735a:	d1fc      	bne.n	7356 <two_way_long_needle+0x2a>
    735c:	1e63      	subs	r3, r4, #1
    735e:	0029      	movs	r1, r5
    7360:	46a4      	mov	ip, r4
    7362:	2c00      	cmp	r4, #0
    7364:	d009      	beq.n	737a <two_way_long_needle+0x4e>
    7366:	2408      	movs	r4, #8
    7368:	780a      	ldrb	r2, [r1, #0]
    736a:	a802      	add	r0, sp, #8
    736c:	0092      	lsls	r2, r2, #2
    736e:	1900      	adds	r0, r0, r4
    7370:	5083      	str	r3, [r0, r2]
    7372:	3101      	adds	r1, #1
    7374:	3b01      	subs	r3, #1
    7376:	d2f6      	bcs.n	7366 <two_way_long_needle+0x3a>
    7378:	4664      	mov	r4, ip
    737a:	9b03      	ldr	r3, [sp, #12]
    737c:	465a      	mov	r2, fp
    737e:	18e9      	adds	r1, r5, r3
    7380:	0028      	movs	r0, r5
    7382:	f7ff fc6b 	bl	6c5c <memcmp>
    7386:	2800      	cmp	r0, #0
    7388:	d000      	beq.n	738c <two_way_long_needle+0x60>
    738a:	e074      	b.n	7476 <two_way_long_needle+0x14a>
    738c:	2300      	movs	r3, #0
    738e:	001a      	movs	r2, r3
    7390:	469a      	mov	sl, r3
    7392:	1e63      	subs	r3, r4, #1
    7394:	4698      	mov	r8, r3
    7396:	4659      	mov	r1, fp
    7398:	2301      	movs	r3, #1
    739a:	0038      	movs	r0, r7
    739c:	46a1      	mov	r9, r4
    739e:	0017      	movs	r7, r2
    73a0:	4644      	mov	r4, r8
    73a2:	46b0      	mov	r8, r6
    73a4:	1a5b      	subs	r3, r3, r1
    73a6:	9301      	str	r3, [sp, #4]
    73a8:	9100      	str	r1, [sp, #0]
    73aa:	4656      	mov	r6, sl
    73ac:	444e      	add	r6, r9
    73ae:	1a32      	subs	r2, r6, r0
    73b0:	2100      	movs	r1, #0
    73b2:	4440      	add	r0, r8
    73b4:	f006 f976 	bl	d6a4 <memchr>
    73b8:	2800      	cmp	r0, #0
    73ba:	d153      	bne.n	7464 <two_way_long_needle+0x138>
    73bc:	2e00      	cmp	r6, #0
    73be:	d051      	beq.n	7464 <two_way_long_needle+0x138>
    73c0:	4643      	mov	r3, r8
    73c2:	2108      	movs	r1, #8
    73c4:	199b      	adds	r3, r3, r6
    73c6:	3b01      	subs	r3, #1
    73c8:	781b      	ldrb	r3, [r3, #0]
    73ca:	aa02      	add	r2, sp, #8
    73cc:	009b      	lsls	r3, r3, #2
    73ce:	1852      	adds	r2, r2, r1
    73d0:	58d3      	ldr	r3, [r2, r3]
    73d2:	2b00      	cmp	r3, #0
    73d4:	d00a      	beq.n	73ec <two_way_long_needle+0xc0>
    73d6:	2f00      	cmp	r7, #0
    73d8:	d004      	beq.n	73e4 <two_way_long_needle+0xb8>
    73da:	9a03      	ldr	r2, [sp, #12]
    73dc:	4293      	cmp	r3, r2
    73de:	d201      	bcs.n	73e4 <two_way_long_needle+0xb8>
    73e0:	464b      	mov	r3, r9
    73e2:	1a9b      	subs	r3, r3, r2
    73e4:	449a      	add	sl, r3
    73e6:	2700      	movs	r7, #0
    73e8:	0030      	movs	r0, r6
    73ea:	e7de      	b.n	73aa <two_way_long_needle+0x7e>
    73ec:	9900      	ldr	r1, [sp, #0]
    73ee:	003b      	movs	r3, r7
    73f0:	428f      	cmp	r7, r1
    73f2:	d200      	bcs.n	73f6 <two_way_long_needle+0xca>
    73f4:	000b      	movs	r3, r1
    73f6:	42a3      	cmp	r3, r4
    73f8:	d20d      	bcs.n	7416 <two_way_long_needle+0xea>
    73fa:	4642      	mov	r2, r8
    73fc:	4452      	add	r2, sl
    73fe:	e002      	b.n	7406 <two_way_long_needle+0xda>
    7400:	3301      	adds	r3, #1
    7402:	42a3      	cmp	r3, r4
    7404:	d207      	bcs.n	7416 <two_way_long_needle+0xea>
    7406:	5ce8      	ldrb	r0, [r5, r3]
    7408:	5cd1      	ldrb	r1, [r2, r3]
    740a:	4288      	cmp	r0, r1
    740c:	d0f8      	beq.n	7400 <two_way_long_needle+0xd4>
    740e:	9a01      	ldr	r2, [sp, #4]
    7410:	4452      	add	r2, sl
    7412:	4692      	mov	sl, r2
    7414:	e7e6      	b.n	73e4 <two_way_long_needle+0xb8>
    7416:	9b00      	ldr	r3, [sp, #0]
    7418:	1e59      	subs	r1, r3, #1
    741a:	429f      	cmp	r7, r3
    741c:	d300      	bcc.n	7420 <two_way_long_needle+0xf4>
    741e:	e07d      	b.n	751c <two_way_long_needle+0x1f0>
    7420:	4642      	mov	r2, r8
    7422:	4452      	add	r2, sl
    7424:	5c50      	ldrb	r0, [r2, r1]
    7426:	5c6b      	ldrb	r3, [r5, r1]
    7428:	4298      	cmp	r0, r3
    742a:	d000      	beq.n	742e <two_way_long_needle+0x102>
    742c:	e074      	b.n	7518 <two_way_long_needle+0x1ec>
    742e:	1e7b      	subs	r3, r7, #1
    7430:	469b      	mov	fp, r3
    7432:	0023      	movs	r3, r4
    7434:	46b4      	mov	ip, r6
    7436:	465c      	mov	r4, fp
    7438:	0016      	movs	r6, r2
    743a:	469b      	mov	fp, r3
    743c:	e004      	b.n	7448 <two_way_long_needle+0x11c>
    743e:	5cea      	ldrb	r2, [r5, r3]
    7440:	5cf0      	ldrb	r0, [r6, r3]
    7442:	4282      	cmp	r2, r0
    7444:	d103      	bne.n	744e <two_way_long_needle+0x122>
    7446:	0019      	movs	r1, r3
    7448:	1e4b      	subs	r3, r1, #1
    744a:	42a3      	cmp	r3, r4
    744c:	d1f7      	bne.n	743e <two_way_long_needle+0x112>
    744e:	4666      	mov	r6, ip
    7450:	465c      	mov	r4, fp
    7452:	3701      	adds	r7, #1
    7454:	428f      	cmp	r7, r1
    7456:	d863      	bhi.n	7520 <two_way_long_needle+0x1f4>
    7458:	464b      	mov	r3, r9
    745a:	9f03      	ldr	r7, [sp, #12]
    745c:	0030      	movs	r0, r6
    745e:	44ba      	add	sl, r7
    7460:	1bdf      	subs	r7, r3, r7
    7462:	e7a2      	b.n	73aa <two_way_long_needle+0x7e>
    7464:	2000      	movs	r0, #0
    7466:	4b31      	ldr	r3, [pc, #196]	; (752c <two_way_long_needle+0x200>)
    7468:	449d      	add	sp, r3
    746a:	bc3c      	pop	{r2, r3, r4, r5}
    746c:	4690      	mov	r8, r2
    746e:	4699      	mov	r9, r3
    7470:	46a2      	mov	sl, r4
    7472:	46ab      	mov	fp, r5
    7474:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7476:	465b      	mov	r3, fp
    7478:	1ae3      	subs	r3, r4, r3
    747a:	455b      	cmp	r3, fp
    747c:	d34a      	bcc.n	7514 <two_way_long_needle+0x1e8>
    747e:	3301      	adds	r3, #1
    7480:	9303      	str	r3, [sp, #12]
    7482:	2300      	movs	r3, #0
    7484:	469a      	mov	sl, r3
    7486:	1e63      	subs	r3, r4, #1
    7488:	4698      	mov	r8, r3
    748a:	465a      	mov	r2, fp
    748c:	2301      	movs	r3, #1
    748e:	0038      	movs	r0, r7
    7490:	46a1      	mov	r9, r4
    7492:	4657      	mov	r7, sl
    7494:	4644      	mov	r4, r8
    7496:	46b0      	mov	r8, r6
    7498:	1a9b      	subs	r3, r3, r2
    749a:	9300      	str	r3, [sp, #0]
    749c:	464b      	mov	r3, r9
    749e:	18fe      	adds	r6, r7, r3
    74a0:	1a32      	subs	r2, r6, r0
    74a2:	2100      	movs	r1, #0
    74a4:	4440      	add	r0, r8
    74a6:	f006 f8fd 	bl	d6a4 <memchr>
    74aa:	2800      	cmp	r0, #0
    74ac:	d1da      	bne.n	7464 <two_way_long_needle+0x138>
    74ae:	2e00      	cmp	r6, #0
    74b0:	d0d8      	beq.n	7464 <two_way_long_needle+0x138>
    74b2:	4643      	mov	r3, r8
    74b4:	2108      	movs	r1, #8
    74b6:	199b      	adds	r3, r3, r6
    74b8:	3b01      	subs	r3, #1
    74ba:	781b      	ldrb	r3, [r3, #0]
    74bc:	aa02      	add	r2, sp, #8
    74be:	009b      	lsls	r3, r3, #2
    74c0:	1852      	adds	r2, r2, r1
    74c2:	58d3      	ldr	r3, [r2, r3]
    74c4:	2b00      	cmp	r3, #0
    74c6:	d122      	bne.n	750e <two_way_long_needle+0x1e2>
    74c8:	4643      	mov	r3, r8
    74ca:	19d8      	adds	r0, r3, r7
    74cc:	45a3      	cmp	fp, r4
    74ce:	d20c      	bcs.n	74ea <two_way_long_needle+0x1be>
    74d0:	465b      	mov	r3, fp
    74d2:	5cc1      	ldrb	r1, [r0, r3]
    74d4:	5cea      	ldrb	r2, [r5, r3]
    74d6:	4291      	cmp	r1, r2
    74d8:	d004      	beq.n	74e4 <two_way_long_needle+0x1b8>
    74da:	e015      	b.n	7508 <two_way_long_needle+0x1dc>
    74dc:	5ce9      	ldrb	r1, [r5, r3]
    74de:	5cc2      	ldrb	r2, [r0, r3]
    74e0:	4291      	cmp	r1, r2
    74e2:	d111      	bne.n	7508 <two_way_long_needle+0x1dc>
    74e4:	3301      	adds	r3, #1
    74e6:	42a3      	cmp	r3, r4
    74e8:	d3f8      	bcc.n	74dc <two_way_long_needle+0x1b0>
    74ea:	465b      	mov	r3, fp
    74ec:	3b01      	subs	r3, #1
    74ee:	d202      	bcs.n	74f6 <two_way_long_needle+0x1ca>
    74f0:	e7b9      	b.n	7466 <two_way_long_needle+0x13a>
    74f2:	3b01      	subs	r3, #1
    74f4:	d3b7      	bcc.n	7466 <two_way_long_needle+0x13a>
    74f6:	5ce9      	ldrb	r1, [r5, r3]
    74f8:	5cc2      	ldrb	r2, [r0, r3]
    74fa:	4291      	cmp	r1, r2
    74fc:	d0f9      	beq.n	74f2 <two_way_long_needle+0x1c6>
    74fe:	9b03      	ldr	r3, [sp, #12]
    7500:	0030      	movs	r0, r6
    7502:	469c      	mov	ip, r3
    7504:	4467      	add	r7, ip
    7506:	e7c9      	b.n	749c <two_way_long_needle+0x170>
    7508:	9a00      	ldr	r2, [sp, #0]
    750a:	4694      	mov	ip, r2
    750c:	4467      	add	r7, ip
    750e:	18ff      	adds	r7, r7, r3
    7510:	0030      	movs	r0, r6
    7512:	e7c3      	b.n	749c <two_way_long_needle+0x170>
    7514:	465b      	mov	r3, fp
    7516:	e7b2      	b.n	747e <two_way_long_needle+0x152>
    7518:	9900      	ldr	r1, [sp, #0]
    751a:	e79a      	b.n	7452 <two_way_long_needle+0x126>
    751c:	0019      	movs	r1, r3
    751e:	e798      	b.n	7452 <two_way_long_needle+0x126>
    7520:	4640      	mov	r0, r8
    7522:	4450      	add	r0, sl
    7524:	e79f      	b.n	7466 <two_way_long_needle+0x13a>
    7526:	46c0      	nop			; (mov r8, r8)
    7528:	fffffbec 	.word	0xfffffbec
    752c:	00000414 	.word	0x00000414

00007530 <strstr>:
    7530:	b5f0      	push	{r4, r5, r6, r7, lr}
    7532:	4657      	mov	r7, sl
    7534:	4645      	mov	r5, r8
    7536:	46de      	mov	lr, fp
    7538:	464e      	mov	r6, r9
    753a:	b5e0      	push	{r5, r6, r7, lr}
    753c:	7803      	ldrb	r3, [r0, #0]
    753e:	b085      	sub	sp, #20
    7540:	0007      	movs	r7, r0
    7542:	000d      	movs	r5, r1
    7544:	2b00      	cmp	r3, #0
    7546:	d035      	beq.n	75b4 <strstr+0x84>
    7548:	7809      	ldrb	r1, [r1, #0]
    754a:	1e0a      	subs	r2, r1, #0
    754c:	d100      	bne.n	7550 <strstr+0x20>
    754e:	e09f      	b.n	7690 <strstr+0x160>
    7550:	002c      	movs	r4, r5
    7552:	2601      	movs	r6, #1
    7554:	e002      	b.n	755c <strstr+0x2c>
    7556:	7822      	ldrb	r2, [r4, #0]
    7558:	2a00      	cmp	r2, #0
    755a:	d00b      	beq.n	7574 <strstr+0x44>
    755c:	1a9b      	subs	r3, r3, r2
    755e:	425a      	negs	r2, r3
    7560:	4153      	adcs	r3, r2
    7562:	3001      	adds	r0, #1
    7564:	401e      	ands	r6, r3
    7566:	7803      	ldrb	r3, [r0, #0]
    7568:	3401      	adds	r4, #1
    756a:	2b00      	cmp	r3, #0
    756c:	d1f3      	bne.n	7556 <strstr+0x26>
    756e:	7823      	ldrb	r3, [r4, #0]
    7570:	2b00      	cmp	r3, #0
    7572:	d122      	bne.n	75ba <strstr+0x8a>
    7574:	0038      	movs	r0, r7
    7576:	2e00      	cmp	r6, #0
    7578:	d006      	beq.n	7588 <strstr+0x58>
    757a:	b005      	add	sp, #20
    757c:	bc3c      	pop	{r2, r3, r4, r5}
    757e:	4690      	mov	r8, r2
    7580:	4699      	mov	r9, r3
    7582:	46a2      	mov	sl, r4
    7584:	46ab      	mov	fp, r5
    7586:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7588:	1c78      	adds	r0, r7, #1
    758a:	f7ff fd8b 	bl	70a4 <strchr>
    758e:	1b64      	subs	r4, r4, r5
    7590:	1e06      	subs	r6, r0, #0
    7592:	d012      	beq.n	75ba <strstr+0x8a>
    7594:	2c01      	cmp	r4, #1
    7596:	d0f0      	beq.n	757a <strstr+0x4a>
    7598:	193f      	adds	r7, r7, r4
    759a:	2101      	movs	r1, #1
    759c:	42b8      	cmp	r0, r7
    759e:	d800      	bhi.n	75a2 <strstr+0x72>
    75a0:	1a39      	subs	r1, r7, r0
    75a2:	000f      	movs	r7, r1
    75a4:	2c1f      	cmp	r4, #31
    75a6:	d90a      	bls.n	75be <strstr+0x8e>
    75a8:	0023      	movs	r3, r4
    75aa:	002a      	movs	r2, r5
    75ac:	0030      	movs	r0, r6
    75ae:	f7ff febd 	bl	732c <two_way_long_needle>
    75b2:	e7e2      	b.n	757a <strstr+0x4a>
    75b4:	780b      	ldrb	r3, [r1, #0]
    75b6:	2b00      	cmp	r3, #0
    75b8:	d06a      	beq.n	7690 <strstr+0x160>
    75ba:	2000      	movs	r0, #0
    75bc:	e7dd      	b.n	757a <strstr+0x4a>
    75be:	aa03      	add	r2, sp, #12
    75c0:	0021      	movs	r1, r4
    75c2:	0028      	movs	r0, r5
    75c4:	f7ff fe52 	bl	726c <critical_factorization>
    75c8:	9b03      	ldr	r3, [sp, #12]
    75ca:	4680      	mov	r8, r0
    75cc:	0002      	movs	r2, r0
    75ce:	18e9      	adds	r1, r5, r3
    75d0:	0028      	movs	r0, r5
    75d2:	f7ff fb43 	bl	6c5c <memcmp>
    75d6:	2800      	cmp	r0, #0
    75d8:	d15c      	bne.n	7694 <strstr+0x164>
    75da:	2300      	movs	r3, #0
    75dc:	4699      	mov	r9, r3
    75de:	4643      	mov	r3, r8
    75e0:	3b01      	subs	r3, #1
    75e2:	9300      	str	r3, [sp, #0]
    75e4:	4642      	mov	r2, r8
    75e6:	2301      	movs	r3, #1
    75e8:	46b2      	mov	sl, r6
    75ea:	0038      	movs	r0, r7
    75ec:	464e      	mov	r6, r9
    75ee:	464f      	mov	r7, r9
    75f0:	1a9b      	subs	r3, r3, r2
    75f2:	9301      	str	r3, [sp, #4]
    75f4:	19e3      	adds	r3, r4, r7
    75f6:	1a1a      	subs	r2, r3, r0
    75f8:	2100      	movs	r1, #0
    75fa:	4450      	add	r0, sl
    75fc:	4699      	mov	r9, r3
    75fe:	f006 f851 	bl	d6a4 <memchr>
    7602:	2800      	cmp	r0, #0
    7604:	d1d9      	bne.n	75ba <strstr+0x8a>
    7606:	464b      	mov	r3, r9
    7608:	2b00      	cmp	r3, #0
    760a:	d0d6      	beq.n	75ba <strstr+0x8a>
    760c:	4643      	mov	r3, r8
    760e:	45b0      	cmp	r8, r6
    7610:	d200      	bcs.n	7614 <strstr+0xe4>
    7612:	0033      	movs	r3, r6
    7614:	429c      	cmp	r4, r3
    7616:	d90f      	bls.n	7638 <strstr+0x108>
    7618:	4652      	mov	r2, sl
    761a:	18d2      	adds	r2, r2, r3
    761c:	5ce9      	ldrb	r1, [r5, r3]
    761e:	5dd2      	ldrb	r2, [r2, r7]
    7620:	4291      	cmp	r1, r2
    7622:	d12e      	bne.n	7682 <strstr+0x152>
    7624:	4652      	mov	r2, sl
    7626:	19d0      	adds	r0, r2, r7
    7628:	e003      	b.n	7632 <strstr+0x102>
    762a:	5ce9      	ldrb	r1, [r5, r3]
    762c:	5cc2      	ldrb	r2, [r0, r3]
    762e:	4291      	cmp	r1, r2
    7630:	d127      	bne.n	7682 <strstr+0x152>
    7632:	3301      	adds	r3, #1
    7634:	429c      	cmp	r4, r3
    7636:	d1f8      	bne.n	762a <strstr+0xfa>
    7638:	9a00      	ldr	r2, [sp, #0]
    763a:	45b0      	cmp	r8, r6
    763c:	d976      	bls.n	772c <strstr+0x1fc>
    763e:	46bc      	mov	ip, r7
    7640:	44d4      	add	ip, sl
    7642:	4661      	mov	r1, ip
    7644:	9b00      	ldr	r3, [sp, #0]
    7646:	5cc9      	ldrb	r1, [r1, r3]
    7648:	5ceb      	ldrb	r3, [r5, r3]
    764a:	4299      	cmp	r1, r3
    764c:	d16e      	bne.n	772c <strstr+0x1fc>
    764e:	1e73      	subs	r3, r6, #1
    7650:	469b      	mov	fp, r3
    7652:	4663      	mov	r3, ip
    7654:	46a4      	mov	ip, r4
    7656:	465c      	mov	r4, fp
    7658:	46b3      	mov	fp, r6
    765a:	001e      	movs	r6, r3
    765c:	e004      	b.n	7668 <strstr+0x138>
    765e:	5ce8      	ldrb	r0, [r5, r3]
    7660:	5cf1      	ldrb	r1, [r6, r3]
    7662:	4288      	cmp	r0, r1
    7664:	d103      	bne.n	766e <strstr+0x13e>
    7666:	001a      	movs	r2, r3
    7668:	1e53      	subs	r3, r2, #1
    766a:	42a3      	cmp	r3, r4
    766c:	d1f7      	bne.n	765e <strstr+0x12e>
    766e:	4664      	mov	r4, ip
    7670:	465e      	mov	r6, fp
    7672:	3601      	adds	r6, #1
    7674:	4296      	cmp	r6, r2
    7676:	d85b      	bhi.n	7730 <strstr+0x200>
    7678:	9e03      	ldr	r6, [sp, #12]
    767a:	4648      	mov	r0, r9
    767c:	19bf      	adds	r7, r7, r6
    767e:	1ba6      	subs	r6, r4, r6
    7680:	e7b8      	b.n	75f4 <strstr+0xc4>
    7682:	9a01      	ldr	r2, [sp, #4]
    7684:	2600      	movs	r6, #0
    7686:	4694      	mov	ip, r2
    7688:	4467      	add	r7, ip
    768a:	18ff      	adds	r7, r7, r3
    768c:	4648      	mov	r0, r9
    768e:	e7b1      	b.n	75f4 <strstr+0xc4>
    7690:	0038      	movs	r0, r7
    7692:	e772      	b.n	757a <strstr+0x4a>
    7694:	4643      	mov	r3, r8
    7696:	1ae3      	subs	r3, r4, r3
    7698:	4543      	cmp	r3, r8
    769a:	d200      	bcs.n	769e <strstr+0x16e>
    769c:	4643      	mov	r3, r8
    769e:	3301      	adds	r3, #1
    76a0:	9303      	str	r3, [sp, #12]
    76a2:	2300      	movs	r3, #0
    76a4:	4642      	mov	r2, r8
    76a6:	4699      	mov	r9, r3
    76a8:	3301      	adds	r3, #1
    76aa:	1a9b      	subs	r3, r3, r2
    76ac:	464a      	mov	r2, r9
    76ae:	46b3      	mov	fp, r6
    76b0:	46b1      	mov	r9, r6
    76b2:	0038      	movs	r0, r7
    76b4:	469a      	mov	sl, r3
    76b6:	0016      	movs	r6, r2
    76b8:	44c3      	add	fp, r8
    76ba:	19a7      	adds	r7, r4, r6
    76bc:	1a3a      	subs	r2, r7, r0
    76be:	2100      	movs	r1, #0
    76c0:	4448      	add	r0, r9
    76c2:	f005 ffef 	bl	d6a4 <memchr>
    76c6:	2800      	cmp	r0, #0
    76c8:	d000      	beq.n	76cc <strstr+0x19c>
    76ca:	e776      	b.n	75ba <strstr+0x8a>
    76cc:	2f00      	cmp	r7, #0
    76ce:	d100      	bne.n	76d2 <strstr+0x1a2>
    76d0:	e773      	b.n	75ba <strstr+0x8a>
    76d2:	464b      	mov	r3, r9
    76d4:	1998      	adds	r0, r3, r6
    76d6:	4544      	cmp	r4, r8
    76d8:	d90f      	bls.n	76fa <strstr+0x1ca>
    76da:	465b      	mov	r3, fp
    76dc:	5d99      	ldrb	r1, [r3, r6]
    76de:	4643      	mov	r3, r8
    76e0:	4648      	mov	r0, r9
    76e2:	5cea      	ldrb	r2, [r5, r3]
    76e4:	1980      	adds	r0, r0, r6
    76e6:	4291      	cmp	r1, r2
    76e8:	d004      	beq.n	76f4 <strstr+0x1c4>
    76ea:	e016      	b.n	771a <strstr+0x1ea>
    76ec:	5ce9      	ldrb	r1, [r5, r3]
    76ee:	5cc2      	ldrb	r2, [r0, r3]
    76f0:	4291      	cmp	r1, r2
    76f2:	d112      	bne.n	771a <strstr+0x1ea>
    76f4:	3301      	adds	r3, #1
    76f6:	429c      	cmp	r4, r3
    76f8:	d1f8      	bne.n	76ec <strstr+0x1bc>
    76fa:	4643      	mov	r3, r8
    76fc:	3b01      	subs	r3, #1
    76fe:	d200      	bcs.n	7702 <strstr+0x1d2>
    7700:	e73b      	b.n	757a <strstr+0x4a>
    7702:	5cc1      	ldrb	r1, [r0, r3]
    7704:	5cea      	ldrb	r2, [r5, r3]
    7706:	4291      	cmp	r1, r2
    7708:	d004      	beq.n	7714 <strstr+0x1e4>
    770a:	e00a      	b.n	7722 <strstr+0x1f2>
    770c:	5ce9      	ldrb	r1, [r5, r3]
    770e:	5cc2      	ldrb	r2, [r0, r3]
    7710:	4291      	cmp	r1, r2
    7712:	d106      	bne.n	7722 <strstr+0x1f2>
    7714:	3b01      	subs	r3, #1
    7716:	d2f9      	bcs.n	770c <strstr+0x1dc>
    7718:	e72f      	b.n	757a <strstr+0x4a>
    771a:	4456      	add	r6, sl
    771c:	18f6      	adds	r6, r6, r3
    771e:	0038      	movs	r0, r7
    7720:	e7cb      	b.n	76ba <strstr+0x18a>
    7722:	9b03      	ldr	r3, [sp, #12]
    7724:	0038      	movs	r0, r7
    7726:	469c      	mov	ip, r3
    7728:	4466      	add	r6, ip
    772a:	e7c6      	b.n	76ba <strstr+0x18a>
    772c:	4642      	mov	r2, r8
    772e:	e7a0      	b.n	7672 <strstr+0x142>
    7730:	46b9      	mov	r9, r7
    7732:	4650      	mov	r0, sl
    7734:	4448      	add	r0, r9
    7736:	e720      	b.n	757a <strstr+0x4a>

00007738 <_strtol_l.isra.0>:
    7738:	b5f0      	push	{r4, r5, r6, r7, lr}
    773a:	4657      	mov	r7, sl
    773c:	464e      	mov	r6, r9
    773e:	46de      	mov	lr, fp
    7740:	4645      	mov	r5, r8
    7742:	b5e0      	push	{r5, r6, r7, lr}
    7744:	001e      	movs	r6, r3
    7746:	2308      	movs	r3, #8
    7748:	b083      	sub	sp, #12
    774a:	9001      	str	r0, [sp, #4]
    774c:	9100      	str	r1, [sp, #0]
    774e:	4692      	mov	sl, r2
    7750:	000f      	movs	r7, r1
    7752:	4699      	mov	r9, r3
    7754:	e000      	b.n	7758 <_strtol_l.isra.0+0x20>
    7756:	002f      	movs	r7, r5
    7758:	980c      	ldr	r0, [sp, #48]	; 0x30
    775a:	783c      	ldrb	r4, [r7, #0]
    775c:	f005 fbf0 	bl	cf40 <__locale_ctype_ptr_l>
    7760:	464a      	mov	r2, r9
    7762:	1900      	adds	r0, r0, r4
    7764:	7843      	ldrb	r3, [r0, #1]
    7766:	1c7d      	adds	r5, r7, #1
    7768:	421a      	tst	r2, r3
    776a:	d1f4      	bne.n	7756 <_strtol_l.isra.0+0x1e>
    776c:	2c2d      	cmp	r4, #45	; 0x2d
    776e:	d04f      	beq.n	7810 <_strtol_l.isra.0+0xd8>
    7770:	2300      	movs	r3, #0
    7772:	4698      	mov	r8, r3
    7774:	2c2b      	cmp	r4, #43	; 0x2b
    7776:	d05c      	beq.n	7832 <_strtol_l.isra.0+0xfa>
    7778:	2e00      	cmp	r6, #0
    777a:	d003      	beq.n	7784 <_strtol_l.isra.0+0x4c>
    777c:	2e10      	cmp	r6, #16
    777e:	d05b      	beq.n	7838 <_strtol_l.isra.0+0x100>
    7780:	0037      	movs	r7, r6
    7782:	e003      	b.n	778c <_strtol_l.isra.0+0x54>
    7784:	2c30      	cmp	r4, #48	; 0x30
    7786:	d063      	beq.n	7850 <_strtol_l.isra.0+0x118>
    7788:	270a      	movs	r7, #10
    778a:	260a      	movs	r6, #10
    778c:	4b35      	ldr	r3, [pc, #212]	; (7864 <_strtol_l.isra.0+0x12c>)
    778e:	0039      	movs	r1, r7
    7790:	4443      	add	r3, r8
    7792:	0018      	movs	r0, r3
    7794:	4699      	mov	r9, r3
    7796:	f7fd f819 	bl	47cc <__aeabi_uidivmod>
    779a:	4648      	mov	r0, r9
    779c:	468b      	mov	fp, r1
    779e:	0039      	movs	r1, r7
    77a0:	f7fc ff8e 	bl	46c0 <__udivsi3>
    77a4:	2200      	movs	r2, #0
    77a6:	0001      	movs	r1, r0
    77a8:	2000      	movs	r0, #0
    77aa:	0023      	movs	r3, r4
    77ac:	3b30      	subs	r3, #48	; 0x30
    77ae:	2b09      	cmp	r3, #9
    77b0:	d907      	bls.n	77c2 <_strtol_l.isra.0+0x8a>
    77b2:	3b11      	subs	r3, #17
    77b4:	2b19      	cmp	r3, #25
    77b6:	d903      	bls.n	77c0 <_strtol_l.isra.0+0x88>
    77b8:	0023      	movs	r3, r4
    77ba:	3b61      	subs	r3, #97	; 0x61
    77bc:	2b19      	cmp	r3, #25
    77be:	d80d      	bhi.n	77dc <_strtol_l.isra.0+0xa4>
    77c0:	330a      	adds	r3, #10
    77c2:	429e      	cmp	r6, r3
    77c4:	dd0a      	ble.n	77dc <_strtol_l.isra.0+0xa4>
    77c6:	1c54      	adds	r4, r2, #1
    77c8:	d005      	beq.n	77d6 <_strtol_l.isra.0+0x9e>
    77ca:	4281      	cmp	r1, r0
    77cc:	d31d      	bcc.n	780a <_strtol_l.isra.0+0xd2>
    77ce:	d01a      	beq.n	7806 <_strtol_l.isra.0+0xce>
    77d0:	2201      	movs	r2, #1
    77d2:	4378      	muls	r0, r7
    77d4:	1818      	adds	r0, r3, r0
    77d6:	782c      	ldrb	r4, [r5, #0]
    77d8:	3501      	adds	r5, #1
    77da:	e7e6      	b.n	77aa <_strtol_l.isra.0+0x72>
    77dc:	1c53      	adds	r3, r2, #1
    77de:	d01c      	beq.n	781a <_strtol_l.isra.0+0xe2>
    77e0:	4643      	mov	r3, r8
    77e2:	2b00      	cmp	r3, #0
    77e4:	d000      	beq.n	77e8 <_strtol_l.isra.0+0xb0>
    77e6:	4240      	negs	r0, r0
    77e8:	4653      	mov	r3, sl
    77ea:	2b00      	cmp	r3, #0
    77ec:	d004      	beq.n	77f8 <_strtol_l.isra.0+0xc0>
    77ee:	9b00      	ldr	r3, [sp, #0]
    77f0:	2a00      	cmp	r2, #0
    77f2:	d11c      	bne.n	782e <_strtol_l.isra.0+0xf6>
    77f4:	4652      	mov	r2, sl
    77f6:	6013      	str	r3, [r2, #0]
    77f8:	b003      	add	sp, #12
    77fa:	bc3c      	pop	{r2, r3, r4, r5}
    77fc:	4690      	mov	r8, r2
    77fe:	4699      	mov	r9, r3
    7800:	46a2      	mov	sl, r4
    7802:	46ab      	mov	fp, r5
    7804:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7806:	459b      	cmp	fp, r3
    7808:	dae2      	bge.n	77d0 <_strtol_l.isra.0+0x98>
    780a:	2201      	movs	r2, #1
    780c:	4252      	negs	r2, r2
    780e:	e7e2      	b.n	77d6 <_strtol_l.isra.0+0x9e>
    7810:	2301      	movs	r3, #1
    7812:	782c      	ldrb	r4, [r5, #0]
    7814:	4698      	mov	r8, r3
    7816:	1cbd      	adds	r5, r7, #2
    7818:	e7ae      	b.n	7778 <_strtol_l.isra.0+0x40>
    781a:	2322      	movs	r3, #34	; 0x22
    781c:	9a01      	ldr	r2, [sp, #4]
    781e:	4648      	mov	r0, r9
    7820:	6013      	str	r3, [r2, #0]
    7822:	4653      	mov	r3, sl
    7824:	2b00      	cmp	r3, #0
    7826:	d0e7      	beq.n	77f8 <_strtol_l.isra.0+0xc0>
    7828:	1e6b      	subs	r3, r5, #1
    782a:	4648      	mov	r0, r9
    782c:	e7e2      	b.n	77f4 <_strtol_l.isra.0+0xbc>
    782e:	4681      	mov	r9, r0
    7830:	e7fa      	b.n	7828 <_strtol_l.isra.0+0xf0>
    7832:	782c      	ldrb	r4, [r5, #0]
    7834:	1cbd      	adds	r5, r7, #2
    7836:	e79f      	b.n	7778 <_strtol_l.isra.0+0x40>
    7838:	2c30      	cmp	r4, #48	; 0x30
    783a:	d111      	bne.n	7860 <_strtol_l.isra.0+0x128>
    783c:	2220      	movs	r2, #32
    783e:	782b      	ldrb	r3, [r5, #0]
    7840:	4393      	bics	r3, r2
    7842:	2b58      	cmp	r3, #88	; 0x58
    7844:	d10c      	bne.n	7860 <_strtol_l.isra.0+0x128>
    7846:	786c      	ldrb	r4, [r5, #1]
    7848:	2710      	movs	r7, #16
    784a:	3502      	adds	r5, #2
    784c:	2610      	movs	r6, #16
    784e:	e79d      	b.n	778c <_strtol_l.isra.0+0x54>
    7850:	2220      	movs	r2, #32
    7852:	782b      	ldrb	r3, [r5, #0]
    7854:	4393      	bics	r3, r2
    7856:	2b58      	cmp	r3, #88	; 0x58
    7858:	d0f5      	beq.n	7846 <_strtol_l.isra.0+0x10e>
    785a:	2708      	movs	r7, #8
    785c:	2608      	movs	r6, #8
    785e:	e795      	b.n	778c <_strtol_l.isra.0+0x54>
    7860:	2710      	movs	r7, #16
    7862:	e793      	b.n	778c <_strtol_l.isra.0+0x54>
    7864:	7fffffff 	.word	0x7fffffff

00007868 <_strtol_r>:
    7868:	b510      	push	{r4, lr}
    786a:	4c06      	ldr	r4, [pc, #24]	; (7884 <_strtol_r+0x1c>)
    786c:	b082      	sub	sp, #8
    786e:	6824      	ldr	r4, [r4, #0]
    7870:	6b64      	ldr	r4, [r4, #52]	; 0x34
    7872:	2c00      	cmp	r4, #0
    7874:	d004      	beq.n	7880 <_strtol_r+0x18>
    7876:	9400      	str	r4, [sp, #0]
    7878:	f7ff ff5e 	bl	7738 <_strtol_l.isra.0>
    787c:	b002      	add	sp, #8
    787e:	bd10      	pop	{r4, pc}
    7880:	4c01      	ldr	r4, [pc, #4]	; (7888 <_strtol_r+0x20>)
    7882:	e7f8      	b.n	7876 <_strtol_r+0xe>
    7884:	2000006c 	.word	0x2000006c
    7888:	2000049c 	.word	0x2000049c

0000788c <_svfprintf_r>:
    788c:	b5f0      	push	{r4, r5, r6, r7, lr}
    788e:	46de      	mov	lr, fp
    7890:	4645      	mov	r5, r8
    7892:	4657      	mov	r7, sl
    7894:	464e      	mov	r6, r9
    7896:	b5e0      	push	{r5, r6, r7, lr}
    7898:	b0c3      	sub	sp, #268	; 0x10c
    789a:	000d      	movs	r5, r1
    789c:	9106      	str	r1, [sp, #24]
    789e:	0014      	movs	r4, r2
    78a0:	930f      	str	r3, [sp, #60]	; 0x3c
    78a2:	9009      	str	r0, [sp, #36]	; 0x24
    78a4:	f005 fb60 	bl	cf68 <_localeconv_r>
    78a8:	6803      	ldr	r3, [r0, #0]
    78aa:	0018      	movs	r0, r3
    78ac:	9319      	str	r3, [sp, #100]	; 0x64
    78ae:	f7ff fcab 	bl	7208 <strlen>
    78b2:	9018      	str	r0, [sp, #96]	; 0x60
    78b4:	89ab      	ldrh	r3, [r5, #12]
    78b6:	061b      	lsls	r3, r3, #24
    78b8:	d505      	bpl.n	78c6 <_svfprintf_r+0x3a>
    78ba:	692b      	ldr	r3, [r5, #16]
    78bc:	9307      	str	r3, [sp, #28]
    78be:	2b00      	cmp	r3, #0
    78c0:	d101      	bne.n	78c6 <_svfprintf_r+0x3a>
    78c2:	f001 f863 	bl	898c <_svfprintf_r+0x1100>
    78c6:	ab32      	add	r3, sp, #200	; 0xc8
    78c8:	9325      	str	r3, [sp, #148]	; 0x94
    78ca:	2300      	movs	r3, #0
    78cc:	46a3      	mov	fp, r4
    78ce:	af25      	add	r7, sp, #148	; 0x94
    78d0:	60bb      	str	r3, [r7, #8]
    78d2:	607b      	str	r3, [r7, #4]
    78d4:	9314      	str	r3, [sp, #80]	; 0x50
    78d6:	9316      	str	r3, [sp, #88]	; 0x58
    78d8:	9315      	str	r3, [sp, #84]	; 0x54
    78da:	ae32      	add	r6, sp, #200	; 0xc8
    78dc:	9317      	str	r3, [sp, #92]	; 0x5c
    78de:	931a      	str	r3, [sp, #104]	; 0x68
    78e0:	930a      	str	r3, [sp, #40]	; 0x28
    78e2:	465b      	mov	r3, fp
    78e4:	781b      	ldrb	r3, [r3, #0]
    78e6:	465c      	mov	r4, fp
    78e8:	2b00      	cmp	r3, #0
    78ea:	d01c      	beq.n	7926 <_svfprintf_r+0x9a>
    78ec:	2b25      	cmp	r3, #37	; 0x25
    78ee:	d102      	bne.n	78f6 <_svfprintf_r+0x6a>
    78f0:	e019      	b.n	7926 <_svfprintf_r+0x9a>
    78f2:	2b25      	cmp	r3, #37	; 0x25
    78f4:	d003      	beq.n	78fe <_svfprintf_r+0x72>
    78f6:	3401      	adds	r4, #1
    78f8:	7823      	ldrb	r3, [r4, #0]
    78fa:	2b00      	cmp	r3, #0
    78fc:	d1f9      	bne.n	78f2 <_svfprintf_r+0x66>
    78fe:	465b      	mov	r3, fp
    7900:	1ae5      	subs	r5, r4, r3
    7902:	d010      	beq.n	7926 <_svfprintf_r+0x9a>
    7904:	465b      	mov	r3, fp
    7906:	6033      	str	r3, [r6, #0]
    7908:	68bb      	ldr	r3, [r7, #8]
    790a:	6075      	str	r5, [r6, #4]
    790c:	195b      	adds	r3, r3, r5
    790e:	60bb      	str	r3, [r7, #8]
    7910:	687b      	ldr	r3, [r7, #4]
    7912:	3301      	adds	r3, #1
    7914:	607b      	str	r3, [r7, #4]
    7916:	2b07      	cmp	r3, #7
    7918:	dc2e      	bgt.n	7978 <_svfprintf_r+0xec>
    791a:	3608      	adds	r6, #8
    791c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    791e:	469c      	mov	ip, r3
    7920:	44ac      	add	ip, r5
    7922:	4663      	mov	r3, ip
    7924:	930a      	str	r3, [sp, #40]	; 0x28
    7926:	7823      	ldrb	r3, [r4, #0]
    7928:	2b00      	cmp	r3, #0
    792a:	d02e      	beq.n	798a <_svfprintf_r+0xfe>
    792c:	1c63      	adds	r3, r4, #1
    792e:	469b      	mov	fp, r3
    7930:	2300      	movs	r3, #0
    7932:	aa16      	add	r2, sp, #88	; 0x58
    7934:	77d3      	strb	r3, [r2, #31]
    7936:	2201      	movs	r2, #1
    7938:	4252      	negs	r2, r2
    793a:	4692      	mov	sl, r2
    793c:	2200      	movs	r2, #0
    793e:	2100      	movs	r1, #0
    7940:	920b      	str	r2, [sp, #44]	; 0x2c
    7942:	3220      	adds	r2, #32
    7944:	4691      	mov	r9, r2
    7946:	3220      	adds	r2, #32
    7948:	7863      	ldrb	r3, [r4, #1]
    794a:	4688      	mov	r8, r1
    794c:	2000      	movs	r0, #0
    794e:	2400      	movs	r4, #0
    7950:	4694      	mov	ip, r2
    7952:	4659      	mov	r1, fp
    7954:	3101      	adds	r1, #1
    7956:	001a      	movs	r2, r3
    7958:	3a20      	subs	r2, #32
    795a:	2a58      	cmp	r2, #88	; 0x58
    795c:	d900      	bls.n	7960 <_svfprintf_r+0xd4>
    795e:	e2fd      	b.n	7f5c <_svfprintf_r+0x6d0>
    7960:	4dd7      	ldr	r5, [pc, #860]	; (7cc0 <_svfprintf_r+0x434>)
    7962:	0092      	lsls	r2, r2, #2
    7964:	58aa      	ldr	r2, [r5, r2]
    7966:	4697      	mov	pc, r2
    7968:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    796a:	920f      	str	r2, [sp, #60]	; 0x3c
    796c:	425b      	negs	r3, r3
    796e:	930b      	str	r3, [sp, #44]	; 0x2c
    7970:	2304      	movs	r3, #4
    7972:	431c      	orrs	r4, r3
    7974:	780b      	ldrb	r3, [r1, #0]
    7976:	e7ed      	b.n	7954 <_svfprintf_r+0xc8>
    7978:	003a      	movs	r2, r7
    797a:	9906      	ldr	r1, [sp, #24]
    797c:	9809      	ldr	r0, [sp, #36]	; 0x24
    797e:	f008 f80d 	bl	f99c <__ssprint_r>
    7982:	2800      	cmp	r0, #0
    7984:	d109      	bne.n	799a <_svfprintf_r+0x10e>
    7986:	ae32      	add	r6, sp, #200	; 0xc8
    7988:	e7c8      	b.n	791c <_svfprintf_r+0x90>
    798a:	68bb      	ldr	r3, [r7, #8]
    798c:	2b00      	cmp	r3, #0
    798e:	d004      	beq.n	799a <_svfprintf_r+0x10e>
    7990:	003a      	movs	r2, r7
    7992:	9906      	ldr	r1, [sp, #24]
    7994:	9809      	ldr	r0, [sp, #36]	; 0x24
    7996:	f008 f801 	bl	f99c <__ssprint_r>
    799a:	9b06      	ldr	r3, [sp, #24]
    799c:	899b      	ldrh	r3, [r3, #12]
    799e:	065b      	lsls	r3, r3, #25
    79a0:	d501      	bpl.n	79a6 <_svfprintf_r+0x11a>
    79a2:	f001 f8ce 	bl	8b42 <_svfprintf_r+0x12b6>
    79a6:	980a      	ldr	r0, [sp, #40]	; 0x28
    79a8:	b043      	add	sp, #268	; 0x10c
    79aa:	bc3c      	pop	{r2, r3, r4, r5}
    79ac:	4690      	mov	r8, r2
    79ae:	4699      	mov	r9, r3
    79b0:	46a2      	mov	sl, r4
    79b2:	46ab      	mov	fp, r5
    79b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    79b6:	2201      	movs	r2, #1
    79b8:	780b      	ldrb	r3, [r1, #0]
    79ba:	4690      	mov	r8, r2
    79bc:	202b      	movs	r0, #43	; 0x2b
    79be:	e7c9      	b.n	7954 <_svfprintf_r+0xc8>
    79c0:	1c4b      	adds	r3, r1, #1
    79c2:	469b      	mov	fp, r3
    79c4:	780b      	ldrb	r3, [r1, #0]
    79c6:	2b2a      	cmp	r3, #42	; 0x2a
    79c8:	d101      	bne.n	79ce <_svfprintf_r+0x142>
    79ca:	f001 fa1b 	bl	8e04 <_svfprintf_r+0x1578>
    79ce:	001a      	movs	r2, r3
    79d0:	2100      	movs	r1, #0
    79d2:	3a30      	subs	r2, #48	; 0x30
    79d4:	468a      	mov	sl, r1
    79d6:	4659      	mov	r1, fp
    79d8:	2a09      	cmp	r2, #9
    79da:	d8bc      	bhi.n	7956 <_svfprintf_r+0xca>
    79dc:	0003      	movs	r3, r0
    79de:	0011      	movs	r1, r2
    79e0:	4650      	mov	r0, sl
    79e2:	465a      	mov	r2, fp
    79e4:	469a      	mov	sl, r3
    79e6:	46a3      	mov	fp, r4
    79e8:	0083      	lsls	r3, r0, #2
    79ea:	181b      	adds	r3, r3, r0
    79ec:	7814      	ldrb	r4, [r2, #0]
    79ee:	005b      	lsls	r3, r3, #1
    79f0:	1858      	adds	r0, r3, r1
    79f2:	0021      	movs	r1, r4
    79f4:	1c53      	adds	r3, r2, #1
    79f6:	3930      	subs	r1, #48	; 0x30
    79f8:	001a      	movs	r2, r3
    79fa:	2909      	cmp	r1, #9
    79fc:	d9f4      	bls.n	79e8 <_svfprintf_r+0x15c>
    79fe:	4652      	mov	r2, sl
    7a00:	0019      	movs	r1, r3
    7a02:	4682      	mov	sl, r0
    7a04:	0023      	movs	r3, r4
    7a06:	0010      	movs	r0, r2
    7a08:	465c      	mov	r4, fp
    7a0a:	e7a4      	b.n	7956 <_svfprintf_r+0xca>
    7a0c:	2380      	movs	r3, #128	; 0x80
    7a0e:	431c      	orrs	r4, r3
    7a10:	780b      	ldrb	r3, [r1, #0]
    7a12:	e79f      	b.n	7954 <_svfprintf_r+0xc8>
    7a14:	468b      	mov	fp, r1
    7a16:	4641      	mov	r1, r8
    7a18:	9312      	str	r3, [sp, #72]	; 0x48
    7a1a:	2900      	cmp	r1, #0
    7a1c:	d001      	beq.n	7a22 <_svfprintf_r+0x196>
    7a1e:	f001 fa1f 	bl	8e60 <_svfprintf_r+0x15d4>
    7a22:	2310      	movs	r3, #16
    7a24:	431c      	orrs	r4, r3
    7a26:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    7a28:	06a3      	lsls	r3, r4, #26
    7a2a:	d501      	bpl.n	7a30 <_svfprintf_r+0x1a4>
    7a2c:	f000 fe88 	bl	8740 <_svfprintf_r+0xeb4>
    7a30:	06e3      	lsls	r3, r4, #27
    7a32:	d501      	bpl.n	7a38 <_svfprintf_r+0x1ac>
    7a34:	f000 fd80 	bl	8538 <_svfprintf_r+0xcac>
    7a38:	0663      	lsls	r3, r4, #25
    7a3a:	d401      	bmi.n	7a40 <_svfprintf_r+0x1b4>
    7a3c:	f000 fd7c 	bl	8538 <_svfprintf_r+0xcac>
    7a40:	2100      	movs	r1, #0
    7a42:	5e53      	ldrsh	r3, [r2, r1]
    7a44:	930c      	str	r3, [sp, #48]	; 0x30
    7a46:	3204      	adds	r2, #4
    7a48:	17db      	asrs	r3, r3, #31
    7a4a:	930d      	str	r3, [sp, #52]	; 0x34
    7a4c:	920f      	str	r2, [sp, #60]	; 0x3c
    7a4e:	d501      	bpl.n	7a54 <_svfprintf_r+0x1c8>
    7a50:	f000 fe86 	bl	8760 <_svfprintf_r+0xed4>
    7a54:	990c      	ldr	r1, [sp, #48]	; 0x30
    7a56:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    7a58:	0008      	movs	r0, r1
    7a5a:	ab16      	add	r3, sp, #88	; 0x58
    7a5c:	7fdb      	ldrb	r3, [r3, #31]
    7a5e:	4310      	orrs	r0, r2
    7a60:	4698      	mov	r8, r3
    7a62:	0002      	movs	r2, r0
    7a64:	2301      	movs	r3, #1
    7a66:	4651      	mov	r1, sl
    7a68:	3101      	adds	r1, #1
    7a6a:	d100      	bne.n	7a6e <_svfprintf_r+0x1e2>
    7a6c:	e0ff      	b.n	7c6e <_svfprintf_r+0x3e2>
    7a6e:	2180      	movs	r1, #128	; 0x80
    7a70:	0020      	movs	r0, r4
    7a72:	4388      	bics	r0, r1
    7a74:	9008      	str	r0, [sp, #32]
    7a76:	2a00      	cmp	r2, #0
    7a78:	d000      	beq.n	7a7c <_svfprintf_r+0x1f0>
    7a7a:	e0fc      	b.n	7c76 <_svfprintf_r+0x3ea>
    7a7c:	4652      	mov	r2, sl
    7a7e:	2a00      	cmp	r2, #0
    7a80:	d001      	beq.n	7a86 <_svfprintf_r+0x1fa>
    7a82:	f000 fc2c 	bl	82de <_svfprintf_r+0xa52>
    7a86:	2b00      	cmp	r3, #0
    7a88:	d001      	beq.n	7a8e <_svfprintf_r+0x202>
    7a8a:	f000 fd04 	bl	8496 <_svfprintf_r+0xc0a>
    7a8e:	2001      	movs	r0, #1
    7a90:	ab32      	add	r3, sp, #200	; 0xc8
    7a92:	4020      	ands	r0, r4
    7a94:	900e      	str	r0, [sp, #56]	; 0x38
    7a96:	9311      	str	r3, [sp, #68]	; 0x44
    7a98:	d008      	beq.n	7aac <_svfprintf_r+0x220>
    7a9a:	2327      	movs	r3, #39	; 0x27
    7a9c:	2130      	movs	r1, #48	; 0x30
    7a9e:	aa28      	add	r2, sp, #160	; 0xa0
    7aa0:	54d1      	strb	r1, [r2, r3]
    7aa2:	aa16      	add	r2, sp, #88	; 0x58
    7aa4:	4694      	mov	ip, r2
    7aa6:	3348      	adds	r3, #72	; 0x48
    7aa8:	4463      	add	r3, ip
    7aaa:	9311      	str	r3, [sp, #68]	; 0x44
    7aac:	4653      	mov	r3, sl
    7aae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    7ab0:	9307      	str	r3, [sp, #28]
    7ab2:	4592      	cmp	sl, r2
    7ab4:	da00      	bge.n	7ab8 <_svfprintf_r+0x22c>
    7ab6:	9207      	str	r2, [sp, #28]
    7ab8:	2300      	movs	r3, #0
    7aba:	9313      	str	r3, [sp, #76]	; 0x4c
    7abc:	4643      	mov	r3, r8
    7abe:	2b00      	cmp	r3, #0
    7ac0:	d002      	beq.n	7ac8 <_svfprintf_r+0x23c>
    7ac2:	9b07      	ldr	r3, [sp, #28]
    7ac4:	3301      	adds	r3, #1
    7ac6:	9307      	str	r3, [sp, #28]
    7ac8:	2302      	movs	r3, #2
    7aca:	9a08      	ldr	r2, [sp, #32]
    7acc:	401a      	ands	r2, r3
    7ace:	4691      	mov	r9, r2
    7ad0:	d002      	beq.n	7ad8 <_svfprintf_r+0x24c>
    7ad2:	9b07      	ldr	r3, [sp, #28]
    7ad4:	3302      	adds	r3, #2
    7ad6:	9307      	str	r3, [sp, #28]
    7ad8:	2384      	movs	r3, #132	; 0x84
    7ada:	9a08      	ldr	r2, [sp, #32]
    7adc:	401a      	ands	r2, r3
    7ade:	9210      	str	r2, [sp, #64]	; 0x40
    7ae0:	d000      	beq.n	7ae4 <_svfprintf_r+0x258>
    7ae2:	e24d      	b.n	7f80 <_svfprintf_r+0x6f4>
    7ae4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7ae6:	9a07      	ldr	r2, [sp, #28]
    7ae8:	1a9c      	subs	r4, r3, r2
    7aea:	2c00      	cmp	r4, #0
    7aec:	dc00      	bgt.n	7af0 <_svfprintf_r+0x264>
    7aee:	e247      	b.n	7f80 <_svfprintf_r+0x6f4>
    7af0:	4974      	ldr	r1, [pc, #464]	; (7cc4 <_svfprintf_r+0x438>)
    7af2:	68ba      	ldr	r2, [r7, #8]
    7af4:	687b      	ldr	r3, [r7, #4]
    7af6:	4688      	mov	r8, r1
    7af8:	2c10      	cmp	r4, #16
    7afa:	dd1f      	ble.n	7b3c <_svfprintf_r+0x2b0>
    7afc:	0031      	movs	r1, r6
    7afe:	2510      	movs	r5, #16
    7b00:	4646      	mov	r6, r8
    7b02:	e003      	b.n	7b0c <_svfprintf_r+0x280>
    7b04:	3c10      	subs	r4, #16
    7b06:	3108      	adds	r1, #8
    7b08:	2c10      	cmp	r4, #16
    7b0a:	dd15      	ble.n	7b38 <_svfprintf_r+0x2ac>
    7b0c:	3210      	adds	r2, #16
    7b0e:	3301      	adds	r3, #1
    7b10:	600e      	str	r6, [r1, #0]
    7b12:	604d      	str	r5, [r1, #4]
    7b14:	60ba      	str	r2, [r7, #8]
    7b16:	607b      	str	r3, [r7, #4]
    7b18:	2b07      	cmp	r3, #7
    7b1a:	ddf3      	ble.n	7b04 <_svfprintf_r+0x278>
    7b1c:	003a      	movs	r2, r7
    7b1e:	9906      	ldr	r1, [sp, #24]
    7b20:	9809      	ldr	r0, [sp, #36]	; 0x24
    7b22:	f007 ff3b 	bl	f99c <__ssprint_r>
    7b26:	2800      	cmp	r0, #0
    7b28:	d000      	beq.n	7b2c <_svfprintf_r+0x2a0>
    7b2a:	e736      	b.n	799a <_svfprintf_r+0x10e>
    7b2c:	3c10      	subs	r4, #16
    7b2e:	68ba      	ldr	r2, [r7, #8]
    7b30:	687b      	ldr	r3, [r7, #4]
    7b32:	a932      	add	r1, sp, #200	; 0xc8
    7b34:	2c10      	cmp	r4, #16
    7b36:	dce9      	bgt.n	7b0c <_svfprintf_r+0x280>
    7b38:	46b0      	mov	r8, r6
    7b3a:	000e      	movs	r6, r1
    7b3c:	4641      	mov	r1, r8
    7b3e:	6074      	str	r4, [r6, #4]
    7b40:	3301      	adds	r3, #1
    7b42:	18a4      	adds	r4, r4, r2
    7b44:	6031      	str	r1, [r6, #0]
    7b46:	60bc      	str	r4, [r7, #8]
    7b48:	607b      	str	r3, [r7, #4]
    7b4a:	2b07      	cmp	r3, #7
    7b4c:	dd01      	ble.n	7b52 <_svfprintf_r+0x2c6>
    7b4e:	f000 fca8 	bl	84a2 <_svfprintf_r+0xc16>
    7b52:	ab16      	add	r3, sp, #88	; 0x58
    7b54:	7fdb      	ldrb	r3, [r3, #31]
    7b56:	3608      	adds	r6, #8
    7b58:	4698      	mov	r8, r3
    7b5a:	e212      	b.n	7f82 <_svfprintf_r+0x6f6>
    7b5c:	468b      	mov	fp, r1
    7b5e:	4641      	mov	r1, r8
    7b60:	9312      	str	r3, [sp, #72]	; 0x48
    7b62:	2900      	cmp	r1, #0
    7b64:	d001      	beq.n	7b6a <_svfprintf_r+0x2de>
    7b66:	f001 f977 	bl	8e58 <_svfprintf_r+0x15cc>
    7b6a:	2207      	movs	r2, #7
    7b6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7b6e:	3307      	adds	r3, #7
    7b70:	4393      	bics	r3, r2
    7b72:	3201      	adds	r2, #1
    7b74:	4694      	mov	ip, r2
    7b76:	449c      	add	ip, r3
    7b78:	4662      	mov	r2, ip
    7b7a:	920f      	str	r2, [sp, #60]	; 0x3c
    7b7c:	681a      	ldr	r2, [r3, #0]
    7b7e:	9216      	str	r2, [sp, #88]	; 0x58
    7b80:	685b      	ldr	r3, [r3, #4]
    7b82:	2201      	movs	r2, #1
    7b84:	9315      	str	r3, [sp, #84]	; 0x54
    7b86:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7b88:	9d16      	ldr	r5, [sp, #88]	; 0x58
    7b8a:	005b      	lsls	r3, r3, #1
    7b8c:	085b      	lsrs	r3, r3, #1
    7b8e:	4698      	mov	r8, r3
    7b90:	4252      	negs	r2, r2
    7b92:	4b4d      	ldr	r3, [pc, #308]	; (7cc8 <_svfprintf_r+0x43c>)
    7b94:	0028      	movs	r0, r5
    7b96:	4641      	mov	r1, r8
    7b98:	f009 f9da 	bl	10f50 <__aeabi_dcmpun>
    7b9c:	2800      	cmp	r0, #0
    7b9e:	d001      	beq.n	7ba4 <_svfprintf_r+0x318>
    7ba0:	f000 fdfd 	bl	879e <_svfprintf_r+0xf12>
    7ba4:	2201      	movs	r2, #1
    7ba6:	4b48      	ldr	r3, [pc, #288]	; (7cc8 <_svfprintf_r+0x43c>)
    7ba8:	4252      	negs	r2, r2
    7baa:	0028      	movs	r0, r5
    7bac:	4641      	mov	r1, r8
    7bae:	f7fe fec9 	bl	6944 <__aeabi_dcmple>
    7bb2:	2800      	cmp	r0, #0
    7bb4:	d001      	beq.n	7bba <_svfprintf_r+0x32e>
    7bb6:	f000 fdf2 	bl	879e <_svfprintf_r+0xf12>
    7bba:	2200      	movs	r2, #0
    7bbc:	2300      	movs	r3, #0
    7bbe:	9816      	ldr	r0, [sp, #88]	; 0x58
    7bc0:	9915      	ldr	r1, [sp, #84]	; 0x54
    7bc2:	f7fe feb5 	bl	6930 <__aeabi_dcmplt>
    7bc6:	2800      	cmp	r0, #0
    7bc8:	d001      	beq.n	7bce <_svfprintf_r+0x342>
    7bca:	f001 f822 	bl	8c12 <_svfprintf_r+0x1386>
    7bce:	ab16      	add	r3, sp, #88	; 0x58
    7bd0:	7fdb      	ldrb	r3, [r3, #31]
    7bd2:	4698      	mov	r8, r3
    7bd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7bd6:	2b47      	cmp	r3, #71	; 0x47
    7bd8:	dd01      	ble.n	7bde <_svfprintf_r+0x352>
    7bda:	f000 fec7 	bl	896c <_svfprintf_r+0x10e0>
    7bde:	4b3b      	ldr	r3, [pc, #236]	; (7ccc <_svfprintf_r+0x440>)
    7be0:	9311      	str	r3, [sp, #68]	; 0x44
    7be2:	2380      	movs	r3, #128	; 0x80
    7be4:	439c      	bics	r4, r3
    7be6:	3b7d      	subs	r3, #125	; 0x7d
    7be8:	9307      	str	r3, [sp, #28]
    7bea:	930e      	str	r3, [sp, #56]	; 0x38
    7bec:	2300      	movs	r3, #0
    7bee:	9408      	str	r4, [sp, #32]
    7bf0:	469a      	mov	sl, r3
    7bf2:	9313      	str	r3, [sp, #76]	; 0x4c
    7bf4:	e762      	b.n	7abc <_svfprintf_r+0x230>
    7bf6:	2200      	movs	r2, #0
    7bf8:	3b30      	subs	r3, #48	; 0x30
    7bfa:	0015      	movs	r5, r2
    7bfc:	001a      	movs	r2, r3
    7bfe:	0003      	movs	r3, r0
    7c00:	9407      	str	r4, [sp, #28]
    7c02:	0008      	movs	r0, r1
    7c04:	002c      	movs	r4, r5
    7c06:	469b      	mov	fp, r3
    7c08:	00a3      	lsls	r3, r4, #2
    7c0a:	191c      	adds	r4, r3, r4
    7c0c:	7803      	ldrb	r3, [r0, #0]
    7c0e:	0064      	lsls	r4, r4, #1
    7c10:	1914      	adds	r4, r2, r4
    7c12:	001a      	movs	r2, r3
    7c14:	3101      	adds	r1, #1
    7c16:	3a30      	subs	r2, #48	; 0x30
    7c18:	0008      	movs	r0, r1
    7c1a:	2a09      	cmp	r2, #9
    7c1c:	d9f4      	bls.n	7c08 <_svfprintf_r+0x37c>
    7c1e:	940b      	str	r4, [sp, #44]	; 0x2c
    7c20:	4658      	mov	r0, fp
    7c22:	9c07      	ldr	r4, [sp, #28]
    7c24:	e697      	b.n	7956 <_svfprintf_r+0xca>
    7c26:	2308      	movs	r3, #8
    7c28:	431c      	orrs	r4, r3
    7c2a:	780b      	ldrb	r3, [r1, #0]
    7c2c:	e692      	b.n	7954 <_svfprintf_r+0xc8>
    7c2e:	9312      	str	r3, [sp, #72]	; 0x48
    7c30:	2310      	movs	r3, #16
    7c32:	431c      	orrs	r4, r3
    7c34:	468b      	mov	fp, r1
    7c36:	06a3      	lsls	r3, r4, #26
    7c38:	d500      	bpl.n	7c3c <_svfprintf_r+0x3b0>
    7c3a:	e17b      	b.n	7f34 <_svfprintf_r+0x6a8>
    7c3c:	06e3      	lsls	r3, r4, #27
    7c3e:	d501      	bpl.n	7c44 <_svfprintf_r+0x3b8>
    7c40:	f000 fc7e 	bl	8540 <_svfprintf_r+0xcb4>
    7c44:	0663      	lsls	r3, r4, #25
    7c46:	d401      	bmi.n	7c4c <_svfprintf_r+0x3c0>
    7c48:	f000 fc7a 	bl	8540 <_svfprintf_r+0xcb4>
    7c4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7c4e:	881a      	ldrh	r2, [r3, #0]
    7c50:	920c      	str	r2, [sp, #48]	; 0x30
    7c52:	2200      	movs	r2, #0
    7c54:	3304      	adds	r3, #4
    7c56:	930f      	str	r3, [sp, #60]	; 0x3c
    7c58:	2300      	movs	r3, #0
    7c5a:	920d      	str	r2, [sp, #52]	; 0x34
    7c5c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    7c5e:	2100      	movs	r1, #0
    7c60:	a816      	add	r0, sp, #88	; 0x58
    7c62:	77c1      	strb	r1, [r0, #31]
    7c64:	4688      	mov	r8, r1
    7c66:	4651      	mov	r1, sl
    7c68:	3101      	adds	r1, #1
    7c6a:	d000      	beq.n	7c6e <_svfprintf_r+0x3e2>
    7c6c:	e6ff      	b.n	7a6e <_svfprintf_r+0x1e2>
    7c6e:	2a00      	cmp	r2, #0
    7c70:	d100      	bne.n	7c74 <_svfprintf_r+0x3e8>
    7c72:	e335      	b.n	82e0 <_svfprintf_r+0xa54>
    7c74:	9408      	str	r4, [sp, #32]
    7c76:	2b01      	cmp	r3, #1
    7c78:	d100      	bne.n	7c7c <_svfprintf_r+0x3f0>
    7c7a:	e3e5      	b.n	8448 <_svfprintf_r+0xbbc>
    7c7c:	2b02      	cmp	r3, #2
    7c7e:	d000      	beq.n	7c82 <_svfprintf_r+0x3f6>
    7c80:	e362      	b.n	8348 <_svfprintf_r+0xabc>
    7c82:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    7c84:	200f      	movs	r0, #15
    7c86:	46a1      	mov	r9, r4
    7c88:	46b4      	mov	ip, r6
    7c8a:	ab32      	add	r3, sp, #200	; 0xc8
    7c8c:	0019      	movs	r1, r3
    7c8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    7c90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7c92:	0004      	movs	r4, r0
    7c94:	464d      	mov	r5, r9
    7c96:	4014      	ands	r4, r2
    7c98:	5d2c      	ldrb	r4, [r5, r4]
    7c9a:	071e      	lsls	r6, r3, #28
    7c9c:	0915      	lsrs	r5, r2, #4
    7c9e:	3901      	subs	r1, #1
    7ca0:	432e      	orrs	r6, r5
    7ca2:	700c      	strb	r4, [r1, #0]
    7ca4:	091c      	lsrs	r4, r3, #4
    7ca6:	0023      	movs	r3, r4
    7ca8:	0034      	movs	r4, r6
    7caa:	0032      	movs	r2, r6
    7cac:	431c      	orrs	r4, r3
    7cae:	d1f0      	bne.n	7c92 <_svfprintf_r+0x406>
    7cb0:	920c      	str	r2, [sp, #48]	; 0x30
    7cb2:	930d      	str	r3, [sp, #52]	; 0x34
    7cb4:	ab32      	add	r3, sp, #200	; 0xc8
    7cb6:	1a5b      	subs	r3, r3, r1
    7cb8:	9111      	str	r1, [sp, #68]	; 0x44
    7cba:	4666      	mov	r6, ip
    7cbc:	930e      	str	r3, [sp, #56]	; 0x38
    7cbe:	e6f5      	b.n	7aac <_svfprintf_r+0x220>
    7cc0:	00013850 	.word	0x00013850
    7cc4:	000139f8 	.word	0x000139f8
    7cc8:	7fefffff 	.word	0x7fefffff
    7ccc:	000139b4 	.word	0x000139b4
    7cd0:	9312      	str	r3, [sp, #72]	; 0x48
    7cd2:	2310      	movs	r3, #16
    7cd4:	431c      	orrs	r4, r3
    7cd6:	468b      	mov	fp, r1
    7cd8:	06a3      	lsls	r3, r4, #26
    7cda:	d500      	bpl.n	7cde <_svfprintf_r+0x452>
    7cdc:	e111      	b.n	7f02 <_svfprintf_r+0x676>
    7cde:	06e3      	lsls	r3, r4, #27
    7ce0:	d501      	bpl.n	7ce6 <_svfprintf_r+0x45a>
    7ce2:	f000 fc31 	bl	8548 <_svfprintf_r+0xcbc>
    7ce6:	0663      	lsls	r3, r4, #25
    7ce8:	d401      	bmi.n	7cee <_svfprintf_r+0x462>
    7cea:	f000 fc2d 	bl	8548 <_svfprintf_r+0xcbc>
    7cee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7cf0:	881a      	ldrh	r2, [r3, #0]
    7cf2:	920c      	str	r2, [sp, #48]	; 0x30
    7cf4:	2200      	movs	r2, #0
    7cf6:	3304      	adds	r3, #4
    7cf8:	920d      	str	r2, [sp, #52]	; 0x34
    7cfa:	930f      	str	r3, [sp, #60]	; 0x3c
    7cfc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    7cfe:	2301      	movs	r3, #1
    7d00:	e7ad      	b.n	7c5e <_svfprintf_r+0x3d2>
    7d02:	468b      	mov	fp, r1
    7d04:	4641      	mov	r1, r8
    7d06:	9312      	str	r3, [sp, #72]	; 0x48
    7d08:	2900      	cmp	r1, #0
    7d0a:	d001      	beq.n	7d10 <_svfprintf_r+0x484>
    7d0c:	f001 f890 	bl	8e30 <_svfprintf_r+0x15a4>
    7d10:	4bb8      	ldr	r3, [pc, #736]	; (7ff4 <_svfprintf_r+0x768>)
    7d12:	9317      	str	r3, [sp, #92]	; 0x5c
    7d14:	06a3      	lsls	r3, r4, #26
    7d16:	d500      	bpl.n	7d1a <_svfprintf_r+0x48e>
    7d18:	e0ab      	b.n	7e72 <_svfprintf_r+0x5e6>
    7d1a:	06e3      	lsls	r3, r4, #27
    7d1c:	d501      	bpl.n	7d22 <_svfprintf_r+0x496>
    7d1e:	f000 fc07 	bl	8530 <_svfprintf_r+0xca4>
    7d22:	0663      	lsls	r3, r4, #25
    7d24:	d401      	bmi.n	7d2a <_svfprintf_r+0x49e>
    7d26:	f000 fc03 	bl	8530 <_svfprintf_r+0xca4>
    7d2a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7d2c:	881a      	ldrh	r2, [r3, #0]
    7d2e:	920c      	str	r2, [sp, #48]	; 0x30
    7d30:	2200      	movs	r2, #0
    7d32:	3304      	adds	r3, #4
    7d34:	920d      	str	r2, [sp, #52]	; 0x34
    7d36:	930f      	str	r3, [sp, #60]	; 0x3c
    7d38:	07e3      	lsls	r3, r4, #31
    7d3a:	d400      	bmi.n	7d3e <_svfprintf_r+0x4b2>
    7d3c:	e0a9      	b.n	7e92 <_svfprintf_r+0x606>
    7d3e:	990c      	ldr	r1, [sp, #48]	; 0x30
    7d40:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    7d42:	000b      	movs	r3, r1
    7d44:	4313      	orrs	r3, r2
    7d46:	001a      	movs	r2, r3
    7d48:	2302      	movs	r3, #2
    7d4a:	2a00      	cmp	r2, #0
    7d4c:	d100      	bne.n	7d50 <_svfprintf_r+0x4c4>
    7d4e:	e786      	b.n	7c5e <_svfprintf_r+0x3d2>
    7d50:	2030      	movs	r0, #48	; 0x30
    7d52:	a91e      	add	r1, sp, #120	; 0x78
    7d54:	7008      	strb	r0, [r1, #0]
    7d56:	2548      	movs	r5, #72	; 0x48
    7d58:	4668      	mov	r0, sp
    7d5a:	1940      	adds	r0, r0, r5
    7d5c:	7800      	ldrb	r0, [r0, #0]
    7d5e:	431c      	orrs	r4, r3
    7d60:	7048      	strb	r0, [r1, #1]
    7d62:	e77c      	b.n	7c5e <_svfprintf_r+0x3d2>
    7d64:	468b      	mov	fp, r1
    7d66:	4641      	mov	r1, r8
    7d68:	2900      	cmp	r1, #0
    7d6a:	d001      	beq.n	7d70 <_svfprintf_r+0x4e4>
    7d6c:	f001 f883 	bl	8e76 <_svfprintf_r+0x15ea>
    7d70:	06a3      	lsls	r3, r4, #26
    7d72:	d501      	bpl.n	7d78 <_svfprintf_r+0x4ec>
    7d74:	f000 fde9 	bl	894a <_svfprintf_r+0x10be>
    7d78:	06e3      	lsls	r3, r4, #27
    7d7a:	d501      	bpl.n	7d80 <_svfprintf_r+0x4f4>
    7d7c:	f000 fd9b 	bl	88b6 <_svfprintf_r+0x102a>
    7d80:	0663      	lsls	r3, r4, #25
    7d82:	d401      	bmi.n	7d88 <_svfprintf_r+0x4fc>
    7d84:	f000 fd97 	bl	88b6 <_svfprintf_r+0x102a>
    7d88:	4669      	mov	r1, sp
    7d8a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7d8c:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    7d8e:	681a      	ldr	r2, [r3, #0]
    7d90:	3304      	adds	r3, #4
    7d92:	9207      	str	r2, [sp, #28]
    7d94:	8011      	strh	r1, [r2, #0]
    7d96:	930f      	str	r3, [sp, #60]	; 0x3c
    7d98:	e5a3      	b.n	78e2 <_svfprintf_r+0x56>
    7d9a:	464b      	mov	r3, r9
    7d9c:	431c      	orrs	r4, r3
    7d9e:	780b      	ldrb	r3, [r1, #0]
    7da0:	e5d8      	b.n	7954 <_svfprintf_r+0xc8>
    7da2:	9312      	str	r3, [sp, #72]	; 0x48
    7da4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7da6:	468b      	mov	fp, r1
    7da8:	1d1d      	adds	r5, r3, #4
    7daa:	681b      	ldr	r3, [r3, #0]
    7dac:	a916      	add	r1, sp, #88	; 0x58
    7dae:	001a      	movs	r2, r3
    7db0:	9311      	str	r3, [sp, #68]	; 0x44
    7db2:	2300      	movs	r3, #0
    7db4:	77cb      	strb	r3, [r1, #31]
    7db6:	2a00      	cmp	r2, #0
    7db8:	d101      	bne.n	7dbe <_svfprintf_r+0x532>
    7dba:	f000 fefb 	bl	8bb4 <_svfprintf_r+0x1328>
    7dbe:	4653      	mov	r3, sl
    7dc0:	3301      	adds	r3, #1
    7dc2:	d101      	bne.n	7dc8 <_svfprintf_r+0x53c>
    7dc4:	f000 fe38 	bl	8a38 <_svfprintf_r+0x11ac>
    7dc8:	4652      	mov	r2, sl
    7dca:	2100      	movs	r1, #0
    7dcc:	9811      	ldr	r0, [sp, #68]	; 0x44
    7dce:	f005 fc69 	bl	d6a4 <memchr>
    7dd2:	2800      	cmp	r0, #0
    7dd4:	d101      	bne.n	7dda <_svfprintf_r+0x54e>
    7dd6:	f000 ff54 	bl	8c82 <_svfprintf_r+0x13f6>
    7dda:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7ddc:	1ac3      	subs	r3, r0, r3
    7dde:	001a      	movs	r2, r3
    7de0:	930e      	str	r3, [sp, #56]	; 0x38
    7de2:	43db      	mvns	r3, r3
    7de4:	17db      	asrs	r3, r3, #31
    7de6:	401a      	ands	r2, r3
    7de8:	ab16      	add	r3, sp, #88	; 0x58
    7dea:	7fdb      	ldrb	r3, [r3, #31]
    7dec:	9207      	str	r2, [sp, #28]
    7dee:	4698      	mov	r8, r3
    7df0:	2300      	movs	r3, #0
    7df2:	950f      	str	r5, [sp, #60]	; 0x3c
    7df4:	9408      	str	r4, [sp, #32]
    7df6:	469a      	mov	sl, r3
    7df8:	9313      	str	r3, [sp, #76]	; 0x4c
    7dfa:	e65f      	b.n	7abc <_svfprintf_r+0x230>
    7dfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    7dfe:	9312      	str	r3, [sp, #72]	; 0x48
    7e00:	6813      	ldr	r3, [r2, #0]
    7e02:	ad28      	add	r5, sp, #160	; 0xa0
    7e04:	9307      	str	r3, [sp, #28]
    7e06:	466b      	mov	r3, sp
    7e08:	7f1b      	ldrb	r3, [r3, #28]
    7e0a:	468b      	mov	fp, r1
    7e0c:	702b      	strb	r3, [r5, #0]
    7e0e:	2300      	movs	r3, #0
    7e10:	a916      	add	r1, sp, #88	; 0x58
    7e12:	77cb      	strb	r3, [r1, #31]
    7e14:	0013      	movs	r3, r2
    7e16:	3304      	adds	r3, #4
    7e18:	930f      	str	r3, [sp, #60]	; 0x3c
    7e1a:	2300      	movs	r3, #0
    7e1c:	9408      	str	r4, [sp, #32]
    7e1e:	4698      	mov	r8, r3
    7e20:	3301      	adds	r3, #1
    7e22:	9307      	str	r3, [sp, #28]
    7e24:	930e      	str	r3, [sp, #56]	; 0x38
    7e26:	2300      	movs	r3, #0
    7e28:	9511      	str	r5, [sp, #68]	; 0x44
    7e2a:	469a      	mov	sl, r3
    7e2c:	9313      	str	r3, [sp, #76]	; 0x4c
    7e2e:	e64b      	b.n	7ac8 <_svfprintf_r+0x23c>
    7e30:	468b      	mov	fp, r1
    7e32:	4641      	mov	r1, r8
    7e34:	9312      	str	r3, [sp, #72]	; 0x48
    7e36:	2900      	cmp	r1, #0
    7e38:	d100      	bne.n	7e3c <_svfprintf_r+0x5b0>
    7e3a:	e5f4      	b.n	7a26 <_svfprintf_r+0x19a>
    7e3c:	ab16      	add	r3, sp, #88	; 0x58
    7e3e:	77d8      	strb	r0, [r3, #31]
    7e40:	e5f1      	b.n	7a26 <_svfprintf_r+0x19a>
    7e42:	4663      	mov	r3, ip
    7e44:	431c      	orrs	r4, r3
    7e46:	780b      	ldrb	r3, [r1, #0]
    7e48:	e584      	b.n	7954 <_svfprintf_r+0xc8>
    7e4a:	780b      	ldrb	r3, [r1, #0]
    7e4c:	2b6c      	cmp	r3, #108	; 0x6c
    7e4e:	d101      	bne.n	7e54 <_svfprintf_r+0x5c8>
    7e50:	f000 fd86 	bl	8960 <_svfprintf_r+0x10d4>
    7e54:	2210      	movs	r2, #16
    7e56:	4314      	orrs	r4, r2
    7e58:	e57c      	b.n	7954 <_svfprintf_r+0xc8>
    7e5a:	468b      	mov	fp, r1
    7e5c:	4641      	mov	r1, r8
    7e5e:	9312      	str	r3, [sp, #72]	; 0x48
    7e60:	2900      	cmp	r1, #0
    7e62:	d001      	beq.n	7e68 <_svfprintf_r+0x5dc>
    7e64:	f000 ffe8 	bl	8e38 <_svfprintf_r+0x15ac>
    7e68:	4b63      	ldr	r3, [pc, #396]	; (7ff8 <_svfprintf_r+0x76c>)
    7e6a:	9317      	str	r3, [sp, #92]	; 0x5c
    7e6c:	06a3      	lsls	r3, r4, #26
    7e6e:	d400      	bmi.n	7e72 <_svfprintf_r+0x5e6>
    7e70:	e753      	b.n	7d1a <_svfprintf_r+0x48e>
    7e72:	2207      	movs	r2, #7
    7e74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7e76:	3307      	adds	r3, #7
    7e78:	4393      	bics	r3, r2
    7e7a:	3201      	adds	r2, #1
    7e7c:	4694      	mov	ip, r2
    7e7e:	449c      	add	ip, r3
    7e80:	4662      	mov	r2, ip
    7e82:	920f      	str	r2, [sp, #60]	; 0x3c
    7e84:	681a      	ldr	r2, [r3, #0]
    7e86:	685b      	ldr	r3, [r3, #4]
    7e88:	920c      	str	r2, [sp, #48]	; 0x30
    7e8a:	930d      	str	r3, [sp, #52]	; 0x34
    7e8c:	07e3      	lsls	r3, r4, #31
    7e8e:	d500      	bpl.n	7e92 <_svfprintf_r+0x606>
    7e90:	e755      	b.n	7d3e <_svfprintf_r+0x4b2>
    7e92:	990c      	ldr	r1, [sp, #48]	; 0x30
    7e94:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    7e96:	0008      	movs	r0, r1
    7e98:	4310      	orrs	r0, r2
    7e9a:	2302      	movs	r3, #2
    7e9c:	0002      	movs	r2, r0
    7e9e:	e6de      	b.n	7c5e <_svfprintf_r+0x3d2>
    7ea0:	468b      	mov	fp, r1
    7ea2:	990f      	ldr	r1, [sp, #60]	; 0x3c
    7ea4:	2230      	movs	r2, #48	; 0x30
    7ea6:	680b      	ldr	r3, [r1, #0]
    7ea8:	930c      	str	r3, [sp, #48]	; 0x30
    7eaa:	2300      	movs	r3, #0
    7eac:	930d      	str	r3, [sp, #52]	; 0x34
    7eae:	3302      	adds	r3, #2
    7eb0:	431c      	orrs	r4, r3
    7eb2:	ab1e      	add	r3, sp, #120	; 0x78
    7eb4:	701a      	strb	r2, [r3, #0]
    7eb6:	3248      	adds	r2, #72	; 0x48
    7eb8:	705a      	strb	r2, [r3, #1]
    7eba:	000b      	movs	r3, r1
    7ebc:	3304      	adds	r3, #4
    7ebe:	930f      	str	r3, [sp, #60]	; 0x3c
    7ec0:	4b4d      	ldr	r3, [pc, #308]	; (7ff8 <_svfprintf_r+0x76c>)
    7ec2:	9212      	str	r2, [sp, #72]	; 0x48
    7ec4:	9317      	str	r3, [sp, #92]	; 0x5c
    7ec6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    7ec8:	2302      	movs	r3, #2
    7eca:	e6c8      	b.n	7c5e <_svfprintf_r+0x3d2>
    7ecc:	2301      	movs	r3, #1
    7ece:	431c      	orrs	r4, r3
    7ed0:	780b      	ldrb	r3, [r1, #0]
    7ed2:	e53f      	b.n	7954 <_svfprintf_r+0xc8>
    7ed4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7ed6:	1d1a      	adds	r2, r3, #4
    7ed8:	681b      	ldr	r3, [r3, #0]
    7eda:	930b      	str	r3, [sp, #44]	; 0x2c
    7edc:	2b00      	cmp	r3, #0
    7ede:	da00      	bge.n	7ee2 <_svfprintf_r+0x656>
    7ee0:	e542      	b.n	7968 <_svfprintf_r+0xdc>
    7ee2:	780b      	ldrb	r3, [r1, #0]
    7ee4:	920f      	str	r2, [sp, #60]	; 0x3c
    7ee6:	e535      	b.n	7954 <_svfprintf_r+0xc8>
    7ee8:	780b      	ldrb	r3, [r1, #0]
    7eea:	2800      	cmp	r0, #0
    7eec:	d000      	beq.n	7ef0 <_svfprintf_r+0x664>
    7eee:	e531      	b.n	7954 <_svfprintf_r+0xc8>
    7ef0:	2201      	movs	r2, #1
    7ef2:	3020      	adds	r0, #32
    7ef4:	4690      	mov	r8, r2
    7ef6:	e52d      	b.n	7954 <_svfprintf_r+0xc8>
    7ef8:	468b      	mov	fp, r1
    7efa:	9312      	str	r3, [sp, #72]	; 0x48
    7efc:	06a3      	lsls	r3, r4, #26
    7efe:	d400      	bmi.n	7f02 <_svfprintf_r+0x676>
    7f00:	e6ed      	b.n	7cde <_svfprintf_r+0x452>
    7f02:	2207      	movs	r2, #7
    7f04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7f06:	3307      	adds	r3, #7
    7f08:	4393      	bics	r3, r2
    7f0a:	3201      	adds	r2, #1
    7f0c:	4694      	mov	ip, r2
    7f0e:	449c      	add	ip, r3
    7f10:	4662      	mov	r2, ip
    7f12:	920f      	str	r2, [sp, #60]	; 0x3c
    7f14:	681a      	ldr	r2, [r3, #0]
    7f16:	685b      	ldr	r3, [r3, #4]
    7f18:	0011      	movs	r1, r2
    7f1a:	001a      	movs	r2, r3
    7f1c:	0008      	movs	r0, r1
    7f1e:	4310      	orrs	r0, r2
    7f20:	910c      	str	r1, [sp, #48]	; 0x30
    7f22:	920d      	str	r2, [sp, #52]	; 0x34
    7f24:	2301      	movs	r3, #1
    7f26:	0002      	movs	r2, r0
    7f28:	e699      	b.n	7c5e <_svfprintf_r+0x3d2>
    7f2a:	468b      	mov	fp, r1
    7f2c:	9312      	str	r3, [sp, #72]	; 0x48
    7f2e:	06a3      	lsls	r3, r4, #26
    7f30:	d400      	bmi.n	7f34 <_svfprintf_r+0x6a8>
    7f32:	e683      	b.n	7c3c <_svfprintf_r+0x3b0>
    7f34:	2207      	movs	r2, #7
    7f36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7f38:	3307      	adds	r3, #7
    7f3a:	4393      	bics	r3, r2
    7f3c:	3201      	adds	r2, #1
    7f3e:	4694      	mov	ip, r2
    7f40:	449c      	add	ip, r3
    7f42:	4662      	mov	r2, ip
    7f44:	920f      	str	r2, [sp, #60]	; 0x3c
    7f46:	681a      	ldr	r2, [r3, #0]
    7f48:	685b      	ldr	r3, [r3, #4]
    7f4a:	0011      	movs	r1, r2
    7f4c:	001a      	movs	r2, r3
    7f4e:	0008      	movs	r0, r1
    7f50:	4310      	orrs	r0, r2
    7f52:	910c      	str	r1, [sp, #48]	; 0x30
    7f54:	920d      	str	r2, [sp, #52]	; 0x34
    7f56:	2300      	movs	r3, #0
    7f58:	0002      	movs	r2, r0
    7f5a:	e680      	b.n	7c5e <_svfprintf_r+0x3d2>
    7f5c:	468b      	mov	fp, r1
    7f5e:	4641      	mov	r1, r8
    7f60:	9312      	str	r3, [sp, #72]	; 0x48
    7f62:	2900      	cmp	r1, #0
    7f64:	d001      	beq.n	7f6a <_svfprintf_r+0x6de>
    7f66:	f000 ff7f 	bl	8e68 <_svfprintf_r+0x15dc>
    7f6a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7f6c:	2b00      	cmp	r3, #0
    7f6e:	d100      	bne.n	7f72 <_svfprintf_r+0x6e6>
    7f70:	e50b      	b.n	798a <_svfprintf_r+0xfe>
    7f72:	ad28      	add	r5, sp, #160	; 0xa0
    7f74:	702b      	strb	r3, [r5, #0]
    7f76:	2300      	movs	r3, #0
    7f78:	aa16      	add	r2, sp, #88	; 0x58
    7f7a:	77d3      	strb	r3, [r2, #31]
    7f7c:	9408      	str	r4, [sp, #32]
    7f7e:	e74e      	b.n	7e1e <_svfprintf_r+0x592>
    7f80:	68bc      	ldr	r4, [r7, #8]
    7f82:	4643      	mov	r3, r8
    7f84:	2b00      	cmp	r3, #0
    7f86:	d00f      	beq.n	7fa8 <_svfprintf_r+0x71c>
    7f88:	aa16      	add	r2, sp, #88	; 0x58
    7f8a:	231f      	movs	r3, #31
    7f8c:	4694      	mov	ip, r2
    7f8e:	4463      	add	r3, ip
    7f90:	6033      	str	r3, [r6, #0]
    7f92:	2301      	movs	r3, #1
    7f94:	6073      	str	r3, [r6, #4]
    7f96:	687b      	ldr	r3, [r7, #4]
    7f98:	3401      	adds	r4, #1
    7f9a:	3301      	adds	r3, #1
    7f9c:	60bc      	str	r4, [r7, #8]
    7f9e:	607b      	str	r3, [r7, #4]
    7fa0:	2b07      	cmp	r3, #7
    7fa2:	dd00      	ble.n	7fa6 <_svfprintf_r+0x71a>
    7fa4:	e1b3      	b.n	830e <_svfprintf_r+0xa82>
    7fa6:	3608      	adds	r6, #8
    7fa8:	464b      	mov	r3, r9
    7faa:	2b00      	cmp	r3, #0
    7fac:	d00c      	beq.n	7fc8 <_svfprintf_r+0x73c>
    7fae:	ab1e      	add	r3, sp, #120	; 0x78
    7fb0:	6033      	str	r3, [r6, #0]
    7fb2:	2302      	movs	r3, #2
    7fb4:	6073      	str	r3, [r6, #4]
    7fb6:	687b      	ldr	r3, [r7, #4]
    7fb8:	3402      	adds	r4, #2
    7fba:	3301      	adds	r3, #1
    7fbc:	60bc      	str	r4, [r7, #8]
    7fbe:	607b      	str	r3, [r7, #4]
    7fc0:	2b07      	cmp	r3, #7
    7fc2:	dd00      	ble.n	7fc6 <_svfprintf_r+0x73a>
    7fc4:	e1af      	b.n	8326 <_svfprintf_r+0xa9a>
    7fc6:	3608      	adds	r6, #8
    7fc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    7fca:	2b80      	cmp	r3, #128	; 0x80
    7fcc:	d100      	bne.n	7fd0 <_svfprintf_r+0x744>
    7fce:	e120      	b.n	8212 <_svfprintf_r+0x986>
    7fd0:	4653      	mov	r3, sl
    7fd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    7fd4:	1a9d      	subs	r5, r3, r2
    7fd6:	2d00      	cmp	r5, #0
    7fd8:	dd3c      	ble.n	8054 <_svfprintf_r+0x7c8>
    7fda:	4a08      	ldr	r2, [pc, #32]	; (7ffc <_svfprintf_r+0x770>)
    7fdc:	687b      	ldr	r3, [r7, #4]
    7fde:	4691      	mov	r9, r2
    7fe0:	2d10      	cmp	r5, #16
    7fe2:	dd2c      	ble.n	803e <_svfprintf_r+0x7b2>
    7fe4:	2210      	movs	r2, #16
    7fe6:	0021      	movs	r1, r4
    7fe8:	4692      	mov	sl, r2
    7fea:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7fec:	0032      	movs	r2, r6
    7fee:	002e      	movs	r6, r5
    7ff0:	464d      	mov	r5, r9
    7ff2:	e009      	b.n	8008 <_svfprintf_r+0x77c>
    7ff4:	000139c4 	.word	0x000139c4
    7ff8:	000139d8 	.word	0x000139d8
    7ffc:	00013a08 	.word	0x00013a08
    8000:	3e10      	subs	r6, #16
    8002:	3208      	adds	r2, #8
    8004:	2e10      	cmp	r6, #16
    8006:	dd16      	ble.n	8036 <_svfprintf_r+0x7aa>
    8008:	4650      	mov	r0, sl
    800a:	3110      	adds	r1, #16
    800c:	3301      	adds	r3, #1
    800e:	6015      	str	r5, [r2, #0]
    8010:	6050      	str	r0, [r2, #4]
    8012:	60b9      	str	r1, [r7, #8]
    8014:	607b      	str	r3, [r7, #4]
    8016:	2b07      	cmp	r3, #7
    8018:	ddf2      	ble.n	8000 <_svfprintf_r+0x774>
    801a:	003a      	movs	r2, r7
    801c:	9906      	ldr	r1, [sp, #24]
    801e:	0020      	movs	r0, r4
    8020:	f007 fcbc 	bl	f99c <__ssprint_r>
    8024:	2800      	cmp	r0, #0
    8026:	d000      	beq.n	802a <_svfprintf_r+0x79e>
    8028:	e4b7      	b.n	799a <_svfprintf_r+0x10e>
    802a:	3e10      	subs	r6, #16
    802c:	68b9      	ldr	r1, [r7, #8]
    802e:	687b      	ldr	r3, [r7, #4]
    8030:	aa32      	add	r2, sp, #200	; 0xc8
    8032:	2e10      	cmp	r6, #16
    8034:	dce8      	bgt.n	8008 <_svfprintf_r+0x77c>
    8036:	46a9      	mov	r9, r5
    8038:	000c      	movs	r4, r1
    803a:	0035      	movs	r5, r6
    803c:	0016      	movs	r6, r2
    803e:	464a      	mov	r2, r9
    8040:	1964      	adds	r4, r4, r5
    8042:	3301      	adds	r3, #1
    8044:	6032      	str	r2, [r6, #0]
    8046:	6075      	str	r5, [r6, #4]
    8048:	60bc      	str	r4, [r7, #8]
    804a:	607b      	str	r3, [r7, #4]
    804c:	2b07      	cmp	r3, #7
    804e:	dd00      	ble.n	8052 <_svfprintf_r+0x7c6>
    8050:	e151      	b.n	82f6 <_svfprintf_r+0xa6a>
    8052:	3608      	adds	r6, #8
    8054:	9b08      	ldr	r3, [sp, #32]
    8056:	05db      	lsls	r3, r3, #23
    8058:	d500      	bpl.n	805c <_svfprintf_r+0x7d0>
    805a:	e0b6      	b.n	81ca <_svfprintf_r+0x93e>
    805c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    805e:	6033      	str	r3, [r6, #0]
    8060:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8062:	469c      	mov	ip, r3
    8064:	6073      	str	r3, [r6, #4]
    8066:	687b      	ldr	r3, [r7, #4]
    8068:	4464      	add	r4, ip
    806a:	3301      	adds	r3, #1
    806c:	60bc      	str	r4, [r7, #8]
    806e:	607b      	str	r3, [r7, #4]
    8070:	2b07      	cmp	r3, #7
    8072:	dd00      	ble.n	8076 <_svfprintf_r+0x7ea>
    8074:	e09d      	b.n	81b2 <_svfprintf_r+0x926>
    8076:	3608      	adds	r6, #8
    8078:	9b08      	ldr	r3, [sp, #32]
    807a:	075b      	lsls	r3, r3, #29
    807c:	d541      	bpl.n	8102 <_svfprintf_r+0x876>
    807e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8080:	9a07      	ldr	r2, [sp, #28]
    8082:	1a9d      	subs	r5, r3, r2
    8084:	2d00      	cmp	r5, #0
    8086:	dd3c      	ble.n	8102 <_svfprintf_r+0x876>
    8088:	4ac4      	ldr	r2, [pc, #784]	; (839c <_svfprintf_r+0xb10>)
    808a:	687b      	ldr	r3, [r7, #4]
    808c:	4690      	mov	r8, r2
    808e:	2d10      	cmp	r5, #16
    8090:	dd26      	ble.n	80e0 <_svfprintf_r+0x854>
    8092:	2210      	movs	r2, #16
    8094:	0021      	movs	r1, r4
    8096:	4691      	mov	r9, r2
    8098:	9c09      	ldr	r4, [sp, #36]	; 0x24
    809a:	0032      	movs	r2, r6
    809c:	002e      	movs	r6, r5
    809e:	9d06      	ldr	r5, [sp, #24]
    80a0:	e003      	b.n	80aa <_svfprintf_r+0x81e>
    80a2:	3e10      	subs	r6, #16
    80a4:	3208      	adds	r2, #8
    80a6:	2e10      	cmp	r6, #16
    80a8:	dd17      	ble.n	80da <_svfprintf_r+0x84e>
    80aa:	48bc      	ldr	r0, [pc, #752]	; (839c <_svfprintf_r+0xb10>)
    80ac:	3110      	adds	r1, #16
    80ae:	6010      	str	r0, [r2, #0]
    80b0:	4648      	mov	r0, r9
    80b2:	3301      	adds	r3, #1
    80b4:	6050      	str	r0, [r2, #4]
    80b6:	60b9      	str	r1, [r7, #8]
    80b8:	607b      	str	r3, [r7, #4]
    80ba:	2b07      	cmp	r3, #7
    80bc:	ddf1      	ble.n	80a2 <_svfprintf_r+0x816>
    80be:	003a      	movs	r2, r7
    80c0:	0029      	movs	r1, r5
    80c2:	0020      	movs	r0, r4
    80c4:	f007 fc6a 	bl	f99c <__ssprint_r>
    80c8:	2800      	cmp	r0, #0
    80ca:	d000      	beq.n	80ce <_svfprintf_r+0x842>
    80cc:	e465      	b.n	799a <_svfprintf_r+0x10e>
    80ce:	3e10      	subs	r6, #16
    80d0:	68b9      	ldr	r1, [r7, #8]
    80d2:	687b      	ldr	r3, [r7, #4]
    80d4:	aa32      	add	r2, sp, #200	; 0xc8
    80d6:	2e10      	cmp	r6, #16
    80d8:	dce7      	bgt.n	80aa <_svfprintf_r+0x81e>
    80da:	0035      	movs	r5, r6
    80dc:	000c      	movs	r4, r1
    80de:	0016      	movs	r6, r2
    80e0:	4642      	mov	r2, r8
    80e2:	1964      	adds	r4, r4, r5
    80e4:	3301      	adds	r3, #1
    80e6:	c624      	stmia	r6!, {r2, r5}
    80e8:	60bc      	str	r4, [r7, #8]
    80ea:	607b      	str	r3, [r7, #4]
    80ec:	2b07      	cmp	r3, #7
    80ee:	dd08      	ble.n	8102 <_svfprintf_r+0x876>
    80f0:	003a      	movs	r2, r7
    80f2:	9906      	ldr	r1, [sp, #24]
    80f4:	9809      	ldr	r0, [sp, #36]	; 0x24
    80f6:	f007 fc51 	bl	f99c <__ssprint_r>
    80fa:	2800      	cmp	r0, #0
    80fc:	d000      	beq.n	8100 <_svfprintf_r+0x874>
    80fe:	e44c      	b.n	799a <_svfprintf_r+0x10e>
    8100:	68bc      	ldr	r4, [r7, #8]
    8102:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8104:	9907      	ldr	r1, [sp, #28]
    8106:	428b      	cmp	r3, r1
    8108:	da00      	bge.n	810c <_svfprintf_r+0x880>
    810a:	000b      	movs	r3, r1
    810c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    810e:	4694      	mov	ip, r2
    8110:	449c      	add	ip, r3
    8112:	4663      	mov	r3, ip
    8114:	930a      	str	r3, [sp, #40]	; 0x28
    8116:	2c00      	cmp	r4, #0
    8118:	d000      	beq.n	811c <_svfprintf_r+0x890>
    811a:	e0d6      	b.n	82ca <_svfprintf_r+0xa3e>
    811c:	2300      	movs	r3, #0
    811e:	ae32      	add	r6, sp, #200	; 0xc8
    8120:	607b      	str	r3, [r7, #4]
    8122:	f7ff fbde 	bl	78e2 <_svfprintf_r+0x56>
    8126:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8128:	2b01      	cmp	r3, #1
    812a:	dc00      	bgt.n	812e <_svfprintf_r+0x8a2>
    812c:	e0ae      	b.n	828c <_svfprintf_r+0xa00>
    812e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8130:	3401      	adds	r4, #1
    8132:	6033      	str	r3, [r6, #0]
    8134:	2301      	movs	r3, #1
    8136:	6073      	str	r3, [r6, #4]
    8138:	687b      	ldr	r3, [r7, #4]
    813a:	60bc      	str	r4, [r7, #8]
    813c:	3301      	adds	r3, #1
    813e:	607b      	str	r3, [r7, #4]
    8140:	2b07      	cmp	r3, #7
    8142:	dd00      	ble.n	8146 <_svfprintf_r+0x8ba>
    8144:	e2df      	b.n	8706 <_svfprintf_r+0xe7a>
    8146:	3608      	adds	r6, #8
    8148:	9a19      	ldr	r2, [sp, #100]	; 0x64
    814a:	3301      	adds	r3, #1
    814c:	6032      	str	r2, [r6, #0]
    814e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    8150:	4698      	mov	r8, r3
    8152:	4694      	mov	ip, r2
    8154:	4464      	add	r4, ip
    8156:	6072      	str	r2, [r6, #4]
    8158:	60bc      	str	r4, [r7, #8]
    815a:	607b      	str	r3, [r7, #4]
    815c:	2b07      	cmp	r3, #7
    815e:	dd00      	ble.n	8162 <_svfprintf_r+0x8d6>
    8160:	e2de      	b.n	8720 <_svfprintf_r+0xe94>
    8162:	3608      	adds	r6, #8
    8164:	2200      	movs	r2, #0
    8166:	2300      	movs	r3, #0
    8168:	9816      	ldr	r0, [sp, #88]	; 0x58
    816a:	9915      	ldr	r1, [sp, #84]	; 0x54
    816c:	f7fe fbda 	bl	6924 <__aeabi_dcmpeq>
    8170:	2800      	cmp	r0, #0
    8172:	d000      	beq.n	8176 <_svfprintf_r+0x8ea>
    8174:	e1a4      	b.n	84c0 <_svfprintf_r+0xc34>
    8176:	9d11      	ldr	r5, [sp, #68]	; 0x44
    8178:	9b14      	ldr	r3, [sp, #80]	; 0x50
    817a:	3501      	adds	r5, #1
    817c:	3b01      	subs	r3, #1
    817e:	6035      	str	r5, [r6, #0]
    8180:	6073      	str	r3, [r6, #4]
    8182:	18e4      	adds	r4, r4, r3
    8184:	2301      	movs	r3, #1
    8186:	469c      	mov	ip, r3
    8188:	44e0      	add	r8, ip
    818a:	4643      	mov	r3, r8
    818c:	60bc      	str	r4, [r7, #8]
    818e:	607b      	str	r3, [r7, #4]
    8190:	2b07      	cmp	r3, #7
    8192:	dd00      	ble.n	8196 <_svfprintf_r+0x90a>
    8194:	e08b      	b.n	82ae <_svfprintf_r+0xa22>
    8196:	3608      	adds	r6, #8
    8198:	ab21      	add	r3, sp, #132	; 0x84
    819a:	6033      	str	r3, [r6, #0]
    819c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    819e:	469c      	mov	ip, r3
    81a0:	6073      	str	r3, [r6, #4]
    81a2:	4643      	mov	r3, r8
    81a4:	4464      	add	r4, ip
    81a6:	3301      	adds	r3, #1
    81a8:	60bc      	str	r4, [r7, #8]
    81aa:	607b      	str	r3, [r7, #4]
    81ac:	2b07      	cmp	r3, #7
    81ae:	dc00      	bgt.n	81b2 <_svfprintf_r+0x926>
    81b0:	e761      	b.n	8076 <_svfprintf_r+0x7ea>
    81b2:	003a      	movs	r2, r7
    81b4:	9906      	ldr	r1, [sp, #24]
    81b6:	9809      	ldr	r0, [sp, #36]	; 0x24
    81b8:	f007 fbf0 	bl	f99c <__ssprint_r>
    81bc:	2800      	cmp	r0, #0
    81be:	d001      	beq.n	81c4 <_svfprintf_r+0x938>
    81c0:	f7ff fbeb 	bl	799a <_svfprintf_r+0x10e>
    81c4:	68bc      	ldr	r4, [r7, #8]
    81c6:	ae32      	add	r6, sp, #200	; 0xc8
    81c8:	e756      	b.n	8078 <_svfprintf_r+0x7ec>
    81ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
    81cc:	2b65      	cmp	r3, #101	; 0x65
    81ce:	ddaa      	ble.n	8126 <_svfprintf_r+0x89a>
    81d0:	2200      	movs	r2, #0
    81d2:	2300      	movs	r3, #0
    81d4:	9816      	ldr	r0, [sp, #88]	; 0x58
    81d6:	9915      	ldr	r1, [sp, #84]	; 0x54
    81d8:	f7fe fba4 	bl	6924 <__aeabi_dcmpeq>
    81dc:	2800      	cmp	r0, #0
    81de:	d100      	bne.n	81e2 <_svfprintf_r+0x956>
    81e0:	e0e2      	b.n	83a8 <_svfprintf_r+0xb1c>
    81e2:	4b6f      	ldr	r3, [pc, #444]	; (83a0 <_svfprintf_r+0xb14>)
    81e4:	3401      	adds	r4, #1
    81e6:	6033      	str	r3, [r6, #0]
    81e8:	2301      	movs	r3, #1
    81ea:	6073      	str	r3, [r6, #4]
    81ec:	687b      	ldr	r3, [r7, #4]
    81ee:	60bc      	str	r4, [r7, #8]
    81f0:	3301      	adds	r3, #1
    81f2:	607b      	str	r3, [r7, #4]
    81f4:	2b07      	cmp	r3, #7
    81f6:	dd00      	ble.n	81fa <_svfprintf_r+0x96e>
    81f8:	e366      	b.n	88c8 <_svfprintf_r+0x103c>
    81fa:	3608      	adds	r6, #8
    81fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    81fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8200:	4293      	cmp	r3, r2
    8202:	da00      	bge.n	8206 <_svfprintf_r+0x97a>
    8204:	e1a4      	b.n	8550 <_svfprintf_r+0xcc4>
    8206:	9b08      	ldr	r3, [sp, #32]
    8208:	07db      	lsls	r3, r3, #31
    820a:	d500      	bpl.n	820e <_svfprintf_r+0x982>
    820c:	e1a0      	b.n	8550 <_svfprintf_r+0xcc4>
    820e:	68bc      	ldr	r4, [r7, #8]
    8210:	e732      	b.n	8078 <_svfprintf_r+0x7ec>
    8212:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8214:	9a07      	ldr	r2, [sp, #28]
    8216:	1a9d      	subs	r5, r3, r2
    8218:	2d00      	cmp	r5, #0
    821a:	dc00      	bgt.n	821e <_svfprintf_r+0x992>
    821c:	e6d8      	b.n	7fd0 <_svfprintf_r+0x744>
    821e:	4a61      	ldr	r2, [pc, #388]	; (83a4 <_svfprintf_r+0xb18>)
    8220:	687b      	ldr	r3, [r7, #4]
    8222:	4691      	mov	r9, r2
    8224:	2d10      	cmp	r5, #16
    8226:	dd25      	ble.n	8274 <_svfprintf_r+0x9e8>
    8228:	2210      	movs	r2, #16
    822a:	0021      	movs	r1, r4
    822c:	4690      	mov	r8, r2
    822e:	9c09      	ldr	r4, [sp, #36]	; 0x24
    8230:	0032      	movs	r2, r6
    8232:	464e      	mov	r6, r9
    8234:	e003      	b.n	823e <_svfprintf_r+0x9b2>
    8236:	3d10      	subs	r5, #16
    8238:	3208      	adds	r2, #8
    823a:	2d10      	cmp	r5, #16
    823c:	dd17      	ble.n	826e <_svfprintf_r+0x9e2>
    823e:	4640      	mov	r0, r8
    8240:	3110      	adds	r1, #16
    8242:	3301      	adds	r3, #1
    8244:	6016      	str	r6, [r2, #0]
    8246:	6050      	str	r0, [r2, #4]
    8248:	60b9      	str	r1, [r7, #8]
    824a:	607b      	str	r3, [r7, #4]
    824c:	2b07      	cmp	r3, #7
    824e:	ddf2      	ble.n	8236 <_svfprintf_r+0x9aa>
    8250:	003a      	movs	r2, r7
    8252:	9906      	ldr	r1, [sp, #24]
    8254:	0020      	movs	r0, r4
    8256:	f007 fba1 	bl	f99c <__ssprint_r>
    825a:	2800      	cmp	r0, #0
    825c:	d001      	beq.n	8262 <_svfprintf_r+0x9d6>
    825e:	f7ff fb9c 	bl	799a <_svfprintf_r+0x10e>
    8262:	3d10      	subs	r5, #16
    8264:	68b9      	ldr	r1, [r7, #8]
    8266:	687b      	ldr	r3, [r7, #4]
    8268:	aa32      	add	r2, sp, #200	; 0xc8
    826a:	2d10      	cmp	r5, #16
    826c:	dce7      	bgt.n	823e <_svfprintf_r+0x9b2>
    826e:	46b1      	mov	r9, r6
    8270:	000c      	movs	r4, r1
    8272:	0016      	movs	r6, r2
    8274:	464a      	mov	r2, r9
    8276:	1964      	adds	r4, r4, r5
    8278:	3301      	adds	r3, #1
    827a:	6032      	str	r2, [r6, #0]
    827c:	6075      	str	r5, [r6, #4]
    827e:	60bc      	str	r4, [r7, #8]
    8280:	607b      	str	r3, [r7, #4]
    8282:	2b07      	cmp	r3, #7
    8284:	dd00      	ble.n	8288 <_svfprintf_r+0x9fc>
    8286:	e27e      	b.n	8786 <_svfprintf_r+0xefa>
    8288:	3608      	adds	r6, #8
    828a:	e6a1      	b.n	7fd0 <_svfprintf_r+0x744>
    828c:	2301      	movs	r3, #1
    828e:	9a08      	ldr	r2, [sp, #32]
    8290:	4213      	tst	r3, r2
    8292:	d000      	beq.n	8296 <_svfprintf_r+0xa0a>
    8294:	e74b      	b.n	812e <_svfprintf_r+0x8a2>
    8296:	6073      	str	r3, [r6, #4]
    8298:	687b      	ldr	r3, [r7, #4]
    829a:	9a11      	ldr	r2, [sp, #68]	; 0x44
    829c:	3301      	adds	r3, #1
    829e:	3401      	adds	r4, #1
    82a0:	6032      	str	r2, [r6, #0]
    82a2:	60bc      	str	r4, [r7, #8]
    82a4:	4698      	mov	r8, r3
    82a6:	607b      	str	r3, [r7, #4]
    82a8:	2b07      	cmp	r3, #7
    82aa:	dc00      	bgt.n	82ae <_svfprintf_r+0xa22>
    82ac:	e773      	b.n	8196 <_svfprintf_r+0x90a>
    82ae:	003a      	movs	r2, r7
    82b0:	9906      	ldr	r1, [sp, #24]
    82b2:	9809      	ldr	r0, [sp, #36]	; 0x24
    82b4:	f007 fb72 	bl	f99c <__ssprint_r>
    82b8:	2800      	cmp	r0, #0
    82ba:	d001      	beq.n	82c0 <_svfprintf_r+0xa34>
    82bc:	f7ff fb6d 	bl	799a <_svfprintf_r+0x10e>
    82c0:	687b      	ldr	r3, [r7, #4]
    82c2:	68bc      	ldr	r4, [r7, #8]
    82c4:	4698      	mov	r8, r3
    82c6:	ae32      	add	r6, sp, #200	; 0xc8
    82c8:	e766      	b.n	8198 <_svfprintf_r+0x90c>
    82ca:	003a      	movs	r2, r7
    82cc:	9906      	ldr	r1, [sp, #24]
    82ce:	9809      	ldr	r0, [sp, #36]	; 0x24
    82d0:	f007 fb64 	bl	f99c <__ssprint_r>
    82d4:	2800      	cmp	r0, #0
    82d6:	d100      	bne.n	82da <_svfprintf_r+0xa4e>
    82d8:	e720      	b.n	811c <_svfprintf_r+0x890>
    82da:	f7ff fb5e 	bl	799a <_svfprintf_r+0x10e>
    82de:	9c08      	ldr	r4, [sp, #32]
    82e0:	2b01      	cmp	r3, #1
    82e2:	d100      	bne.n	82e6 <_svfprintf_r+0xa5a>
    82e4:	e184      	b.n	85f0 <_svfprintf_r+0xd64>
    82e6:	2b02      	cmp	r3, #2
    82e8:	d129      	bne.n	833e <_svfprintf_r+0xab2>
    82ea:	9408      	str	r4, [sp, #32]
    82ec:	2300      	movs	r3, #0
    82ee:	2400      	movs	r4, #0
    82f0:	930c      	str	r3, [sp, #48]	; 0x30
    82f2:	940d      	str	r4, [sp, #52]	; 0x34
    82f4:	e4c5      	b.n	7c82 <_svfprintf_r+0x3f6>
    82f6:	003a      	movs	r2, r7
    82f8:	9906      	ldr	r1, [sp, #24]
    82fa:	9809      	ldr	r0, [sp, #36]	; 0x24
    82fc:	f007 fb4e 	bl	f99c <__ssprint_r>
    8300:	2800      	cmp	r0, #0
    8302:	d001      	beq.n	8308 <_svfprintf_r+0xa7c>
    8304:	f7ff fb49 	bl	799a <_svfprintf_r+0x10e>
    8308:	68bc      	ldr	r4, [r7, #8]
    830a:	ae32      	add	r6, sp, #200	; 0xc8
    830c:	e6a2      	b.n	8054 <_svfprintf_r+0x7c8>
    830e:	003a      	movs	r2, r7
    8310:	9906      	ldr	r1, [sp, #24]
    8312:	9809      	ldr	r0, [sp, #36]	; 0x24
    8314:	f007 fb42 	bl	f99c <__ssprint_r>
    8318:	2800      	cmp	r0, #0
    831a:	d001      	beq.n	8320 <_svfprintf_r+0xa94>
    831c:	f7ff fb3d 	bl	799a <_svfprintf_r+0x10e>
    8320:	68bc      	ldr	r4, [r7, #8]
    8322:	ae32      	add	r6, sp, #200	; 0xc8
    8324:	e640      	b.n	7fa8 <_svfprintf_r+0x71c>
    8326:	003a      	movs	r2, r7
    8328:	9906      	ldr	r1, [sp, #24]
    832a:	9809      	ldr	r0, [sp, #36]	; 0x24
    832c:	f007 fb36 	bl	f99c <__ssprint_r>
    8330:	2800      	cmp	r0, #0
    8332:	d001      	beq.n	8338 <_svfprintf_r+0xaac>
    8334:	f7ff fb31 	bl	799a <_svfprintf_r+0x10e>
    8338:	68bc      	ldr	r4, [r7, #8]
    833a:	ae32      	add	r6, sp, #200	; 0xc8
    833c:	e644      	b.n	7fc8 <_svfprintf_r+0x73c>
    833e:	9408      	str	r4, [sp, #32]
    8340:	2300      	movs	r3, #0
    8342:	2400      	movs	r4, #0
    8344:	930c      	str	r3, [sp, #48]	; 0x30
    8346:	940d      	str	r4, [sp, #52]	; 0x34
    8348:	980c      	ldr	r0, [sp, #48]	; 0x30
    834a:	990d      	ldr	r1, [sp, #52]	; 0x34
    834c:	465b      	mov	r3, fp
    834e:	aa32      	add	r2, sp, #200	; 0xc8
    8350:	9307      	str	r3, [sp, #28]
    8352:	4691      	mov	r9, r2
    8354:	46b3      	mov	fp, r6
    8356:	e000      	b.n	835a <_svfprintf_r+0xace>
    8358:	46a1      	mov	r9, r4
    835a:	074a      	lsls	r2, r1, #29
    835c:	4694      	mov	ip, r2
    835e:	464b      	mov	r3, r9
    8360:	4665      	mov	r5, ip
    8362:	1e5c      	subs	r4, r3, #1
    8364:	08c6      	lsrs	r6, r0, #3
    8366:	2307      	movs	r3, #7
    8368:	08ca      	lsrs	r2, r1, #3
    836a:	4335      	orrs	r5, r6
    836c:	0011      	movs	r1, r2
    836e:	002a      	movs	r2, r5
    8370:	4003      	ands	r3, r0
    8372:	3330      	adds	r3, #48	; 0x30
    8374:	7023      	strb	r3, [r4, #0]
    8376:	0028      	movs	r0, r5
    8378:	430a      	orrs	r2, r1
    837a:	d1ed      	bne.n	8358 <_svfprintf_r+0xacc>
    837c:	900c      	str	r0, [sp, #48]	; 0x30
    837e:	910d      	str	r1, [sp, #52]	; 0x34
    8380:	9907      	ldr	r1, [sp, #28]
    8382:	465e      	mov	r6, fp
    8384:	468b      	mov	fp, r1
    8386:	9908      	ldr	r1, [sp, #32]
    8388:	464a      	mov	r2, r9
    838a:	9411      	str	r4, [sp, #68]	; 0x44
    838c:	07c9      	lsls	r1, r1, #31
    838e:	d500      	bpl.n	8392 <_svfprintf_r+0xb06>
    8390:	e13d      	b.n	860e <_svfprintf_r+0xd82>
    8392:	ab32      	add	r3, sp, #200	; 0xc8
    8394:	1b1b      	subs	r3, r3, r4
    8396:	930e      	str	r3, [sp, #56]	; 0x38
    8398:	f7ff fb88 	bl	7aac <_svfprintf_r+0x220>
    839c:	000139f8 	.word	0x000139f8
    83a0:	000139f4 	.word	0x000139f4
    83a4:	00013a08 	.word	0x00013a08
    83a8:	981f      	ldr	r0, [sp, #124]	; 0x7c
    83aa:	2800      	cmp	r0, #0
    83ac:	dc00      	bgt.n	83b0 <_svfprintf_r+0xb24>
    83ae:	e296      	b.n	88de <_svfprintf_r+0x1052>
    83b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    83b2:	9914      	ldr	r1, [sp, #80]	; 0x50
    83b4:	0013      	movs	r3, r2
    83b6:	4690      	mov	r8, r2
    83b8:	428b      	cmp	r3, r1
    83ba:	dd00      	ble.n	83be <_svfprintf_r+0xb32>
    83bc:	4688      	mov	r8, r1
    83be:	4643      	mov	r3, r8
    83c0:	2b00      	cmp	r3, #0
    83c2:	dd0c      	ble.n	83de <_svfprintf_r+0xb52>
    83c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    83c6:	4444      	add	r4, r8
    83c8:	6033      	str	r3, [r6, #0]
    83ca:	4643      	mov	r3, r8
    83cc:	6073      	str	r3, [r6, #4]
    83ce:	687b      	ldr	r3, [r7, #4]
    83d0:	60bc      	str	r4, [r7, #8]
    83d2:	3301      	adds	r3, #1
    83d4:	607b      	str	r3, [r7, #4]
    83d6:	2b07      	cmp	r3, #7
    83d8:	dd00      	ble.n	83dc <_svfprintf_r+0xb50>
    83da:	e3b7      	b.n	8b4c <_svfprintf_r+0x12c0>
    83dc:	3608      	adds	r6, #8
    83de:	4643      	mov	r3, r8
    83e0:	43db      	mvns	r3, r3
    83e2:	4642      	mov	r2, r8
    83e4:	17db      	asrs	r3, r3, #31
    83e6:	4013      	ands	r3, r2
    83e8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    83ea:	1ad3      	subs	r3, r2, r3
    83ec:	4698      	mov	r8, r3
    83ee:	2b00      	cmp	r3, #0
    83f0:	dc00      	bgt.n	83f4 <_svfprintf_r+0xb68>
    83f2:	e128      	b.n	8646 <_svfprintf_r+0xdba>
    83f4:	2b10      	cmp	r3, #16
    83f6:	dc01      	bgt.n	83fc <_svfprintf_r+0xb70>
    83f8:	f000 fce7 	bl	8dca <_svfprintf_r+0x153e>
    83fc:	4acf      	ldr	r2, [pc, #828]	; (873c <_svfprintf_r+0xeb0>)
    83fe:	0021      	movs	r1, r4
    8400:	4691      	mov	r9, r2
    8402:	2210      	movs	r2, #16
    8404:	687b      	ldr	r3, [r7, #4]
    8406:	4692      	mov	sl, r2
    8408:	9d09      	ldr	r5, [sp, #36]	; 0x24
    840a:	0032      	movs	r2, r6
    840c:	464c      	mov	r4, r9
    840e:	4646      	mov	r6, r8
    8410:	e004      	b.n	841c <_svfprintf_r+0xb90>
    8412:	3208      	adds	r2, #8
    8414:	3e10      	subs	r6, #16
    8416:	2e10      	cmp	r6, #16
    8418:	dc00      	bgt.n	841c <_svfprintf_r+0xb90>
    841a:	e104      	b.n	8626 <_svfprintf_r+0xd9a>
    841c:	4650      	mov	r0, sl
    841e:	3110      	adds	r1, #16
    8420:	3301      	adds	r3, #1
    8422:	6014      	str	r4, [r2, #0]
    8424:	6050      	str	r0, [r2, #4]
    8426:	60b9      	str	r1, [r7, #8]
    8428:	607b      	str	r3, [r7, #4]
    842a:	2b07      	cmp	r3, #7
    842c:	ddf1      	ble.n	8412 <_svfprintf_r+0xb86>
    842e:	003a      	movs	r2, r7
    8430:	9906      	ldr	r1, [sp, #24]
    8432:	0028      	movs	r0, r5
    8434:	f007 fab2 	bl	f99c <__ssprint_r>
    8438:	2800      	cmp	r0, #0
    843a:	d001      	beq.n	8440 <_svfprintf_r+0xbb4>
    843c:	f7ff faad 	bl	799a <_svfprintf_r+0x10e>
    8440:	68b9      	ldr	r1, [r7, #8]
    8442:	687b      	ldr	r3, [r7, #4]
    8444:	aa32      	add	r2, sp, #200	; 0xc8
    8446:	e7e5      	b.n	8414 <_svfprintf_r+0xb88>
    8448:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    844a:	2b00      	cmp	r3, #0
    844c:	d100      	bne.n	8450 <_svfprintf_r+0xbc4>
    844e:	e0ca      	b.n	85e6 <_svfprintf_r+0xd5a>
    8450:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    8452:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    8454:	ab32      	add	r3, sp, #200	; 0xc8
    8456:	46b1      	mov	r9, r6
    8458:	001e      	movs	r6, r3
    845a:	0020      	movs	r0, r4
    845c:	0029      	movs	r1, r5
    845e:	220a      	movs	r2, #10
    8460:	2300      	movs	r3, #0
    8462:	f7fc fadd 	bl	4a20 <__aeabi_uldivmod>
    8466:	3e01      	subs	r6, #1
    8468:	3230      	adds	r2, #48	; 0x30
    846a:	7032      	strb	r2, [r6, #0]
    846c:	2300      	movs	r3, #0
    846e:	0020      	movs	r0, r4
    8470:	0029      	movs	r1, r5
    8472:	220a      	movs	r2, #10
    8474:	f7fc fad4 	bl	4a20 <__aeabi_uldivmod>
    8478:	0003      	movs	r3, r0
    847a:	0004      	movs	r4, r0
    847c:	000d      	movs	r5, r1
    847e:	430b      	orrs	r3, r1
    8480:	d1eb      	bne.n	845a <_svfprintf_r+0xbce>
    8482:	0032      	movs	r2, r6
    8484:	ab32      	add	r3, sp, #200	; 0xc8
    8486:	1a9b      	subs	r3, r3, r2
    8488:	9611      	str	r6, [sp, #68]	; 0x44
    848a:	940c      	str	r4, [sp, #48]	; 0x30
    848c:	950d      	str	r5, [sp, #52]	; 0x34
    848e:	464e      	mov	r6, r9
    8490:	930e      	str	r3, [sp, #56]	; 0x38
    8492:	f7ff fb0b 	bl	7aac <_svfprintf_r+0x220>
    8496:	2300      	movs	r3, #0
    8498:	930e      	str	r3, [sp, #56]	; 0x38
    849a:	ab32      	add	r3, sp, #200	; 0xc8
    849c:	9311      	str	r3, [sp, #68]	; 0x44
    849e:	f7ff fb05 	bl	7aac <_svfprintf_r+0x220>
    84a2:	003a      	movs	r2, r7
    84a4:	9906      	ldr	r1, [sp, #24]
    84a6:	9809      	ldr	r0, [sp, #36]	; 0x24
    84a8:	f007 fa78 	bl	f99c <__ssprint_r>
    84ac:	2800      	cmp	r0, #0
    84ae:	d001      	beq.n	84b4 <_svfprintf_r+0xc28>
    84b0:	f7ff fa73 	bl	799a <_svfprintf_r+0x10e>
    84b4:	ab16      	add	r3, sp, #88	; 0x58
    84b6:	7fdb      	ldrb	r3, [r3, #31]
    84b8:	68bc      	ldr	r4, [r7, #8]
    84ba:	4698      	mov	r8, r3
    84bc:	ae32      	add	r6, sp, #200	; 0xc8
    84be:	e560      	b.n	7f82 <_svfprintf_r+0x6f6>
    84c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
    84c2:	1e5d      	subs	r5, r3, #1
    84c4:	2d00      	cmp	r5, #0
    84c6:	dc00      	bgt.n	84ca <_svfprintf_r+0xc3e>
    84c8:	e666      	b.n	8198 <_svfprintf_r+0x90c>
    84ca:	4b9c      	ldr	r3, [pc, #624]	; (873c <_svfprintf_r+0xeb0>)
    84cc:	4699      	mov	r9, r3
    84ce:	2d10      	cmp	r5, #16
    84d0:	dd29      	ble.n	8526 <_svfprintf_r+0xc9a>
    84d2:	2310      	movs	r3, #16
    84d4:	0032      	movs	r2, r6
    84d6:	469a      	mov	sl, r3
    84d8:	002e      	movs	r6, r5
    84da:	0021      	movs	r1, r4
    84dc:	4643      	mov	r3, r8
    84de:	9c09      	ldr	r4, [sp, #36]	; 0x24
    84e0:	464d      	mov	r5, r9
    84e2:	e003      	b.n	84ec <_svfprintf_r+0xc60>
    84e4:	3e10      	subs	r6, #16
    84e6:	3208      	adds	r2, #8
    84e8:	2e10      	cmp	r6, #16
    84ea:	dd17      	ble.n	851c <_svfprintf_r+0xc90>
    84ec:	4650      	mov	r0, sl
    84ee:	3110      	adds	r1, #16
    84f0:	3301      	adds	r3, #1
    84f2:	6015      	str	r5, [r2, #0]
    84f4:	6050      	str	r0, [r2, #4]
    84f6:	60b9      	str	r1, [r7, #8]
    84f8:	607b      	str	r3, [r7, #4]
    84fa:	2b07      	cmp	r3, #7
    84fc:	ddf2      	ble.n	84e4 <_svfprintf_r+0xc58>
    84fe:	003a      	movs	r2, r7
    8500:	9906      	ldr	r1, [sp, #24]
    8502:	0020      	movs	r0, r4
    8504:	f007 fa4a 	bl	f99c <__ssprint_r>
    8508:	2800      	cmp	r0, #0
    850a:	d001      	beq.n	8510 <_svfprintf_r+0xc84>
    850c:	f7ff fa45 	bl	799a <_svfprintf_r+0x10e>
    8510:	3e10      	subs	r6, #16
    8512:	68b9      	ldr	r1, [r7, #8]
    8514:	687b      	ldr	r3, [r7, #4]
    8516:	aa32      	add	r2, sp, #200	; 0xc8
    8518:	2e10      	cmp	r6, #16
    851a:	dce7      	bgt.n	84ec <_svfprintf_r+0xc60>
    851c:	46a9      	mov	r9, r5
    851e:	000c      	movs	r4, r1
    8520:	0035      	movs	r5, r6
    8522:	4698      	mov	r8, r3
    8524:	0016      	movs	r6, r2
    8526:	464b      	mov	r3, r9
    8528:	6075      	str	r5, [r6, #4]
    852a:	6033      	str	r3, [r6, #0]
    852c:	1964      	adds	r4, r4, r5
    852e:	e629      	b.n	8184 <_svfprintf_r+0x8f8>
    8530:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8532:	681a      	ldr	r2, [r3, #0]
    8534:	f7ff fbfb 	bl	7d2e <_svfprintf_r+0x4a2>
    8538:	6813      	ldr	r3, [r2, #0]
    853a:	9307      	str	r3, [sp, #28]
    853c:	f7ff fa82 	bl	7a44 <_svfprintf_r+0x1b8>
    8540:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8542:	681a      	ldr	r2, [r3, #0]
    8544:	f7ff fb84 	bl	7c50 <_svfprintf_r+0x3c4>
    8548:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    854a:	681a      	ldr	r2, [r3, #0]
    854c:	f7ff fbd1 	bl	7cf2 <_svfprintf_r+0x466>
    8550:	9b19      	ldr	r3, [sp, #100]	; 0x64
    8552:	68ba      	ldr	r2, [r7, #8]
    8554:	6033      	str	r3, [r6, #0]
    8556:	9b18      	ldr	r3, [sp, #96]	; 0x60
    8558:	469c      	mov	ip, r3
    855a:	6073      	str	r3, [r6, #4]
    855c:	687b      	ldr	r3, [r7, #4]
    855e:	4462      	add	r2, ip
    8560:	3301      	adds	r3, #1
    8562:	0014      	movs	r4, r2
    8564:	60ba      	str	r2, [r7, #8]
    8566:	607b      	str	r3, [r7, #4]
    8568:	2b07      	cmp	r3, #7
    856a:	dd00      	ble.n	856e <_svfprintf_r+0xce2>
    856c:	e202      	b.n	8974 <_svfprintf_r+0x10e8>
    856e:	3608      	adds	r6, #8
    8570:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8572:	1e5d      	subs	r5, r3, #1
    8574:	2d00      	cmp	r5, #0
    8576:	dc00      	bgt.n	857a <_svfprintf_r+0xcee>
    8578:	e57e      	b.n	8078 <_svfprintf_r+0x7ec>
    857a:	4a70      	ldr	r2, [pc, #448]	; (873c <_svfprintf_r+0xeb0>)
    857c:	687b      	ldr	r3, [r7, #4]
    857e:	4691      	mov	r9, r2
    8580:	2d10      	cmp	r5, #16
    8582:	dd25      	ble.n	85d0 <_svfprintf_r+0xd44>
    8584:	2210      	movs	r2, #16
    8586:	0021      	movs	r1, r4
    8588:	4690      	mov	r8, r2
    858a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    858c:	0032      	movs	r2, r6
    858e:	002e      	movs	r6, r5
    8590:	464d      	mov	r5, r9
    8592:	e003      	b.n	859c <_svfprintf_r+0xd10>
    8594:	3208      	adds	r2, #8
    8596:	3e10      	subs	r6, #16
    8598:	2e10      	cmp	r6, #16
    859a:	dd15      	ble.n	85c8 <_svfprintf_r+0xd3c>
    859c:	4640      	mov	r0, r8
    859e:	3110      	adds	r1, #16
    85a0:	3301      	adds	r3, #1
    85a2:	6015      	str	r5, [r2, #0]
    85a4:	6050      	str	r0, [r2, #4]
    85a6:	60b9      	str	r1, [r7, #8]
    85a8:	607b      	str	r3, [r7, #4]
    85aa:	2b07      	cmp	r3, #7
    85ac:	ddf2      	ble.n	8594 <_svfprintf_r+0xd08>
    85ae:	003a      	movs	r2, r7
    85b0:	9906      	ldr	r1, [sp, #24]
    85b2:	0020      	movs	r0, r4
    85b4:	f007 f9f2 	bl	f99c <__ssprint_r>
    85b8:	2800      	cmp	r0, #0
    85ba:	d001      	beq.n	85c0 <_svfprintf_r+0xd34>
    85bc:	f7ff f9ed 	bl	799a <_svfprintf_r+0x10e>
    85c0:	68b9      	ldr	r1, [r7, #8]
    85c2:	687b      	ldr	r3, [r7, #4]
    85c4:	aa32      	add	r2, sp, #200	; 0xc8
    85c6:	e7e6      	b.n	8596 <_svfprintf_r+0xd0a>
    85c8:	46a9      	mov	r9, r5
    85ca:	000c      	movs	r4, r1
    85cc:	0035      	movs	r5, r6
    85ce:	0016      	movs	r6, r2
    85d0:	464a      	mov	r2, r9
    85d2:	1964      	adds	r4, r4, r5
    85d4:	3301      	adds	r3, #1
    85d6:	6032      	str	r2, [r6, #0]
    85d8:	6075      	str	r5, [r6, #4]
    85da:	60bc      	str	r4, [r7, #8]
    85dc:	607b      	str	r3, [r7, #4]
    85de:	2b07      	cmp	r3, #7
    85e0:	dc00      	bgt.n	85e4 <_svfprintf_r+0xd58>
    85e2:	e548      	b.n	8076 <_svfprintf_r+0x7ea>
    85e4:	e5e5      	b.n	81b2 <_svfprintf_r+0x926>
    85e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    85e8:	2b09      	cmp	r3, #9
    85ea:	d900      	bls.n	85ee <_svfprintf_r+0xd62>
    85ec:	e730      	b.n	8450 <_svfprintf_r+0xbc4>
    85ee:	9c08      	ldr	r4, [sp, #32]
    85f0:	2227      	movs	r2, #39	; 0x27
    85f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    85f4:	a928      	add	r1, sp, #160	; 0xa0
    85f6:	3330      	adds	r3, #48	; 0x30
    85f8:	548b      	strb	r3, [r1, r2]
    85fa:	2301      	movs	r3, #1
    85fc:	aa16      	add	r2, sp, #88	; 0x58
    85fe:	4694      	mov	ip, r2
    8600:	930e      	str	r3, [sp, #56]	; 0x38
    8602:	336e      	adds	r3, #110	; 0x6e
    8604:	4463      	add	r3, ip
    8606:	9408      	str	r4, [sp, #32]
    8608:	9311      	str	r3, [sp, #68]	; 0x44
    860a:	f7ff fa4f 	bl	7aac <_svfprintf_r+0x220>
    860e:	2b30      	cmp	r3, #48	; 0x30
    8610:	d100      	bne.n	8614 <_svfprintf_r+0xd88>
    8612:	e20b      	b.n	8a2c <_svfprintf_r+0x11a0>
    8614:	2330      	movs	r3, #48	; 0x30
    8616:	3a02      	subs	r2, #2
    8618:	7013      	strb	r3, [r2, #0]
    861a:	ab32      	add	r3, sp, #200	; 0xc8
    861c:	1a9b      	subs	r3, r3, r2
    861e:	930e      	str	r3, [sp, #56]	; 0x38
    8620:	9211      	str	r2, [sp, #68]	; 0x44
    8622:	f7ff fa43 	bl	7aac <_svfprintf_r+0x220>
    8626:	46b0      	mov	r8, r6
    8628:	46a1      	mov	r9, r4
    862a:	0016      	movs	r6, r2
    862c:	000c      	movs	r4, r1
    862e:	464a      	mov	r2, r9
    8630:	6032      	str	r2, [r6, #0]
    8632:	4642      	mov	r2, r8
    8634:	4444      	add	r4, r8
    8636:	3301      	adds	r3, #1
    8638:	6072      	str	r2, [r6, #4]
    863a:	60bc      	str	r4, [r7, #8]
    863c:	607b      	str	r3, [r7, #4]
    863e:	2b07      	cmp	r3, #7
    8640:	dd00      	ble.n	8644 <_svfprintf_r+0xdb8>
    8642:	e29c      	b.n	8b7e <_svfprintf_r+0x12f2>
    8644:	3608      	adds	r6, #8
    8646:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    8648:	9a14      	ldr	r2, [sp, #80]	; 0x50
    864a:	4293      	cmp	r3, r2
    864c:	db4c      	blt.n	86e8 <_svfprintf_r+0xe5c>
    864e:	9a08      	ldr	r2, [sp, #32]
    8650:	07d2      	lsls	r2, r2, #31
    8652:	d449      	bmi.n	86e8 <_svfprintf_r+0xe5c>
    8654:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8656:	9913      	ldr	r1, [sp, #76]	; 0x4c
    8658:	1ad3      	subs	r3, r2, r3
    865a:	1a52      	subs	r2, r2, r1
    865c:	4690      	mov	r8, r2
    865e:	429a      	cmp	r2, r3
    8660:	dd00      	ble.n	8664 <_svfprintf_r+0xdd8>
    8662:	4698      	mov	r8, r3
    8664:	4642      	mov	r2, r8
    8666:	2a00      	cmp	r2, #0
    8668:	dd0f      	ble.n	868a <_svfprintf_r+0xdfe>
    866a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    866c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    866e:	468c      	mov	ip, r1
    8670:	4462      	add	r2, ip
    8672:	6032      	str	r2, [r6, #0]
    8674:	4642      	mov	r2, r8
    8676:	6072      	str	r2, [r6, #4]
    8678:	687a      	ldr	r2, [r7, #4]
    867a:	4444      	add	r4, r8
    867c:	3201      	adds	r2, #1
    867e:	60bc      	str	r4, [r7, #8]
    8680:	607a      	str	r2, [r7, #4]
    8682:	2a07      	cmp	r2, #7
    8684:	dd00      	ble.n	8688 <_svfprintf_r+0xdfc>
    8686:	e286      	b.n	8b96 <_svfprintf_r+0x130a>
    8688:	3608      	adds	r6, #8
    868a:	4642      	mov	r2, r8
    868c:	43d5      	mvns	r5, r2
    868e:	17ed      	asrs	r5, r5, #31
    8690:	4015      	ands	r5, r2
    8692:	1b5d      	subs	r5, r3, r5
    8694:	2d00      	cmp	r5, #0
    8696:	dc00      	bgt.n	869a <_svfprintf_r+0xe0e>
    8698:	e4ee      	b.n	8078 <_svfprintf_r+0x7ec>
    869a:	4a28      	ldr	r2, [pc, #160]	; (873c <_svfprintf_r+0xeb0>)
    869c:	687b      	ldr	r3, [r7, #4]
    869e:	4691      	mov	r9, r2
    86a0:	2d10      	cmp	r5, #16
    86a2:	dd95      	ble.n	85d0 <_svfprintf_r+0xd44>
    86a4:	2210      	movs	r2, #16
    86a6:	0021      	movs	r1, r4
    86a8:	4690      	mov	r8, r2
    86aa:	9c09      	ldr	r4, [sp, #36]	; 0x24
    86ac:	0032      	movs	r2, r6
    86ae:	002e      	movs	r6, r5
    86b0:	464d      	mov	r5, r9
    86b2:	e003      	b.n	86bc <_svfprintf_r+0xe30>
    86b4:	3208      	adds	r2, #8
    86b6:	3e10      	subs	r6, #16
    86b8:	2e10      	cmp	r6, #16
    86ba:	dd85      	ble.n	85c8 <_svfprintf_r+0xd3c>
    86bc:	4640      	mov	r0, r8
    86be:	3110      	adds	r1, #16
    86c0:	3301      	adds	r3, #1
    86c2:	6015      	str	r5, [r2, #0]
    86c4:	6050      	str	r0, [r2, #4]
    86c6:	60b9      	str	r1, [r7, #8]
    86c8:	607b      	str	r3, [r7, #4]
    86ca:	2b07      	cmp	r3, #7
    86cc:	ddf2      	ble.n	86b4 <_svfprintf_r+0xe28>
    86ce:	003a      	movs	r2, r7
    86d0:	9906      	ldr	r1, [sp, #24]
    86d2:	0020      	movs	r0, r4
    86d4:	f007 f962 	bl	f99c <__ssprint_r>
    86d8:	2800      	cmp	r0, #0
    86da:	d001      	beq.n	86e0 <_svfprintf_r+0xe54>
    86dc:	f7ff f95d 	bl	799a <_svfprintf_r+0x10e>
    86e0:	68b9      	ldr	r1, [r7, #8]
    86e2:	687b      	ldr	r3, [r7, #4]
    86e4:	aa32      	add	r2, sp, #200	; 0xc8
    86e6:	e7e6      	b.n	86b6 <_svfprintf_r+0xe2a>
    86e8:	9a19      	ldr	r2, [sp, #100]	; 0x64
    86ea:	6032      	str	r2, [r6, #0]
    86ec:	9a18      	ldr	r2, [sp, #96]	; 0x60
    86ee:	4694      	mov	ip, r2
    86f0:	6072      	str	r2, [r6, #4]
    86f2:	687a      	ldr	r2, [r7, #4]
    86f4:	4464      	add	r4, ip
    86f6:	3201      	adds	r2, #1
    86f8:	60bc      	str	r4, [r7, #8]
    86fa:	607a      	str	r2, [r7, #4]
    86fc:	2a07      	cmp	r2, #7
    86fe:	dd00      	ble.n	8702 <_svfprintf_r+0xe76>
    8700:	e230      	b.n	8b64 <_svfprintf_r+0x12d8>
    8702:	3608      	adds	r6, #8
    8704:	e7a6      	b.n	8654 <_svfprintf_r+0xdc8>
    8706:	003a      	movs	r2, r7
    8708:	9906      	ldr	r1, [sp, #24]
    870a:	9809      	ldr	r0, [sp, #36]	; 0x24
    870c:	f007 f946 	bl	f99c <__ssprint_r>
    8710:	2800      	cmp	r0, #0
    8712:	d001      	beq.n	8718 <_svfprintf_r+0xe8c>
    8714:	f7ff f941 	bl	799a <_svfprintf_r+0x10e>
    8718:	68bc      	ldr	r4, [r7, #8]
    871a:	687b      	ldr	r3, [r7, #4]
    871c:	ae32      	add	r6, sp, #200	; 0xc8
    871e:	e513      	b.n	8148 <_svfprintf_r+0x8bc>
    8720:	003a      	movs	r2, r7
    8722:	9906      	ldr	r1, [sp, #24]
    8724:	9809      	ldr	r0, [sp, #36]	; 0x24
    8726:	f007 f939 	bl	f99c <__ssprint_r>
    872a:	2800      	cmp	r0, #0
    872c:	d001      	beq.n	8732 <_svfprintf_r+0xea6>
    872e:	f7ff f934 	bl	799a <_svfprintf_r+0x10e>
    8732:	687b      	ldr	r3, [r7, #4]
    8734:	68bc      	ldr	r4, [r7, #8]
    8736:	4698      	mov	r8, r3
    8738:	ae32      	add	r6, sp, #200	; 0xc8
    873a:	e513      	b.n	8164 <_svfprintf_r+0x8d8>
    873c:	00013a08 	.word	0x00013a08
    8740:	2307      	movs	r3, #7
    8742:	3207      	adds	r2, #7
    8744:	439a      	bics	r2, r3
    8746:	3301      	adds	r3, #1
    8748:	469c      	mov	ip, r3
    874a:	4494      	add	ip, r2
    874c:	4663      	mov	r3, ip
    874e:	930f      	str	r3, [sp, #60]	; 0x3c
    8750:	6853      	ldr	r3, [r2, #4]
    8752:	6812      	ldr	r2, [r2, #0]
    8754:	930d      	str	r3, [sp, #52]	; 0x34
    8756:	920c      	str	r2, [sp, #48]	; 0x30
    8758:	2b00      	cmp	r3, #0
    875a:	db01      	blt.n	8760 <_svfprintf_r+0xed4>
    875c:	f7ff f97a 	bl	7a54 <_svfprintf_r+0x1c8>
    8760:	980c      	ldr	r0, [sp, #48]	; 0x30
    8762:	990d      	ldr	r1, [sp, #52]	; 0x34
    8764:	2300      	movs	r3, #0
    8766:	4242      	negs	r2, r0
    8768:	418b      	sbcs	r3, r1
    876a:	0011      	movs	r1, r2
    876c:	001a      	movs	r2, r3
    876e:	232d      	movs	r3, #45	; 0x2d
    8770:	a816      	add	r0, sp, #88	; 0x58
    8772:	77c3      	strb	r3, [r0, #31]
    8774:	0008      	movs	r0, r1
    8776:	4310      	orrs	r0, r2
    8778:	910c      	str	r1, [sp, #48]	; 0x30
    877a:	920d      	str	r2, [sp, #52]	; 0x34
    877c:	4698      	mov	r8, r3
    877e:	0002      	movs	r2, r0
    8780:	3b2c      	subs	r3, #44	; 0x2c
    8782:	f7ff f970 	bl	7a66 <_svfprintf_r+0x1da>
    8786:	003a      	movs	r2, r7
    8788:	9906      	ldr	r1, [sp, #24]
    878a:	9809      	ldr	r0, [sp, #36]	; 0x24
    878c:	f007 f906 	bl	f99c <__ssprint_r>
    8790:	2800      	cmp	r0, #0
    8792:	d001      	beq.n	8798 <_svfprintf_r+0xf0c>
    8794:	f7ff f901 	bl	799a <_svfprintf_r+0x10e>
    8798:	68bc      	ldr	r4, [r7, #8]
    879a:	ae32      	add	r6, sp, #200	; 0xc8
    879c:	e418      	b.n	7fd0 <_svfprintf_r+0x744>
    879e:	9916      	ldr	r1, [sp, #88]	; 0x58
    87a0:	9d15      	ldr	r5, [sp, #84]	; 0x54
    87a2:	000a      	movs	r2, r1
    87a4:	0008      	movs	r0, r1
    87a6:	002b      	movs	r3, r5
    87a8:	0029      	movs	r1, r5
    87aa:	f008 fbd1 	bl	10f50 <__aeabi_dcmpun>
    87ae:	2800      	cmp	r0, #0
    87b0:	d000      	beq.n	87b4 <_svfprintf_r+0xf28>
    87b2:	e2e6      	b.n	8d82 <_svfprintf_r+0x14f6>
    87b4:	4653      	mov	r3, sl
    87b6:	3301      	adds	r3, #1
    87b8:	d100      	bne.n	87bc <_svfprintf_r+0xf30>
    87ba:	e20d      	b.n	8bd8 <_svfprintf_r+0x134c>
    87bc:	2320      	movs	r3, #32
    87be:	9a12      	ldr	r2, [sp, #72]	; 0x48
    87c0:	439a      	bics	r2, r3
    87c2:	920e      	str	r2, [sp, #56]	; 0x38
    87c4:	2a47      	cmp	r2, #71	; 0x47
    87c6:	d100      	bne.n	87ca <_svfprintf_r+0xf3e>
    87c8:	e11c      	b.n	8a04 <_svfprintf_r+0x1178>
    87ca:	2380      	movs	r3, #128	; 0x80
    87cc:	005b      	lsls	r3, r3, #1
    87ce:	4323      	orrs	r3, r4
    87d0:	9308      	str	r3, [sp, #32]
    87d2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    87d4:	2b00      	cmp	r3, #0
    87d6:	da00      	bge.n	87da <_svfprintf_r+0xf4e>
    87d8:	e221      	b.n	8c1e <_svfprintf_r+0x1392>
    87da:	9a16      	ldr	r2, [sp, #88]	; 0x58
    87dc:	9307      	str	r3, [sp, #28]
    87de:	2300      	movs	r3, #0
    87e0:	4691      	mov	r9, r2
    87e2:	9310      	str	r3, [sp, #64]	; 0x40
    87e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    87e6:	2b66      	cmp	r3, #102	; 0x66
    87e8:	d100      	bne.n	87ec <_svfprintf_r+0xf60>
    87ea:	e1fc      	b.n	8be6 <_svfprintf_r+0x135a>
    87ec:	2b46      	cmp	r3, #70	; 0x46
    87ee:	d100      	bne.n	87f2 <_svfprintf_r+0xf66>
    87f0:	e0db      	b.n	89aa <_svfprintf_r+0x111e>
    87f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    87f4:	9809      	ldr	r0, [sp, #36]	; 0x24
    87f6:	3a45      	subs	r2, #69	; 0x45
    87f8:	0013      	movs	r3, r2
    87fa:	4259      	negs	r1, r3
    87fc:	4159      	adcs	r1, r3
    87fe:	ab20      	add	r3, sp, #128	; 0x80
    8800:	000d      	movs	r5, r1
    8802:	9303      	str	r3, [sp, #12]
    8804:	ab1f      	add	r3, sp, #124	; 0x7c
    8806:	9302      	str	r3, [sp, #8]
    8808:	2302      	movs	r3, #2
    880a:	aa23      	add	r2, sp, #140	; 0x8c
    880c:	4455      	add	r5, sl
    880e:	921b      	str	r2, [sp, #108]	; 0x6c
    8810:	9204      	str	r2, [sp, #16]
    8812:	9300      	str	r3, [sp, #0]
    8814:	9501      	str	r5, [sp, #4]
    8816:	9b07      	ldr	r3, [sp, #28]
    8818:	464a      	mov	r2, r9
    881a:	f002 ff7f 	bl	b71c <_dtoa_r>
    881e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8820:	9011      	str	r0, [sp, #68]	; 0x44
    8822:	2b67      	cmp	r3, #103	; 0x67
    8824:	d000      	beq.n	8828 <_svfprintf_r+0xf9c>
    8826:	e239      	b.n	8c9c <_svfprintf_r+0x1410>
    8828:	9b11      	ldr	r3, [sp, #68]	; 0x44
    882a:	4698      	mov	r8, r3
    882c:	44a8      	add	r8, r5
    882e:	07e3      	lsls	r3, r4, #31
    8830:	d400      	bmi.n	8834 <_svfprintf_r+0xfa8>
    8832:	e28b      	b.n	8d4c <_svfprintf_r+0x14c0>
    8834:	2300      	movs	r3, #0
    8836:	2200      	movs	r2, #0
    8838:	4648      	mov	r0, r9
    883a:	9907      	ldr	r1, [sp, #28]
    883c:	f7fe f872 	bl	6924 <__aeabi_dcmpeq>
    8840:	4643      	mov	r3, r8
    8842:	2800      	cmp	r0, #0
    8844:	d10a      	bne.n	885c <_svfprintf_r+0xfd0>
    8846:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8848:	4543      	cmp	r3, r8
    884a:	d207      	bcs.n	885c <_svfprintf_r+0xfd0>
    884c:	2130      	movs	r1, #48	; 0x30
    884e:	4640      	mov	r0, r8
    8850:	1c5a      	adds	r2, r3, #1
    8852:	9223      	str	r2, [sp, #140]	; 0x8c
    8854:	7019      	strb	r1, [r3, #0]
    8856:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8858:	4298      	cmp	r0, r3
    885a:	d8f9      	bhi.n	8850 <_svfprintf_r+0xfc4>
    885c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    885e:	1a9b      	subs	r3, r3, r2
    8860:	9314      	str	r3, [sp, #80]	; 0x50
    8862:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8864:	2b47      	cmp	r3, #71	; 0x47
    8866:	d100      	bne.n	886a <_svfprintf_r+0xfde>
    8868:	e0f6      	b.n	8a58 <_svfprintf_r+0x11cc>
    886a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    886c:	2b65      	cmp	r3, #101	; 0x65
    886e:	dc00      	bgt.n	8872 <_svfprintf_r+0xfe6>
    8870:	e226      	b.n	8cc0 <_svfprintf_r+0x1434>
    8872:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8874:	2b66      	cmp	r3, #102	; 0x66
    8876:	d100      	bne.n	887a <_svfprintf_r+0xfee>
    8878:	e1f4      	b.n	8c64 <_svfprintf_r+0x13d8>
    887a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    887c:	9313      	str	r3, [sp, #76]	; 0x4c
    887e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8880:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8882:	0019      	movs	r1, r3
    8884:	4291      	cmp	r1, r2
    8886:	dd00      	ble.n	888a <_svfprintf_r+0xffe>
    8888:	e1d4      	b.n	8c34 <_svfprintf_r+0x13a8>
    888a:	07e3      	lsls	r3, r4, #31
    888c:	d500      	bpl.n	8890 <_svfprintf_r+0x1004>
    888e:	e249      	b.n	8d24 <_svfprintf_r+0x1498>
    8890:	43d3      	mvns	r3, r2
    8892:	17db      	asrs	r3, r3, #31
    8894:	0011      	movs	r1, r2
    8896:	401a      	ands	r2, r3
    8898:	2367      	movs	r3, #103	; 0x67
    889a:	9207      	str	r2, [sp, #28]
    889c:	910e      	str	r1, [sp, #56]	; 0x38
    889e:	9312      	str	r3, [sp, #72]	; 0x48
    88a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    88a2:	2b00      	cmp	r3, #0
    88a4:	d000      	beq.n	88a8 <_svfprintf_r+0x101c>
    88a6:	e0cf      	b.n	8a48 <_svfprintf_r+0x11bc>
    88a8:	ab16      	add	r3, sp, #88	; 0x58
    88aa:	7fdb      	ldrb	r3, [r3, #31]
    88ac:	4698      	mov	r8, r3
    88ae:	2300      	movs	r3, #0
    88b0:	469a      	mov	sl, r3
    88b2:	f7ff f903 	bl	7abc <_svfprintf_r+0x230>
    88b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    88b8:	990a      	ldr	r1, [sp, #40]	; 0x28
    88ba:	6813      	ldr	r3, [r2, #0]
    88bc:	6019      	str	r1, [r3, #0]
    88be:	0013      	movs	r3, r2
    88c0:	3304      	adds	r3, #4
    88c2:	930f      	str	r3, [sp, #60]	; 0x3c
    88c4:	f7ff f80d 	bl	78e2 <_svfprintf_r+0x56>
    88c8:	003a      	movs	r2, r7
    88ca:	9906      	ldr	r1, [sp, #24]
    88cc:	9809      	ldr	r0, [sp, #36]	; 0x24
    88ce:	f007 f865 	bl	f99c <__ssprint_r>
    88d2:	2800      	cmp	r0, #0
    88d4:	d001      	beq.n	88da <_svfprintf_r+0x104e>
    88d6:	f7ff f860 	bl	799a <_svfprintf_r+0x10e>
    88da:	ae32      	add	r6, sp, #200	; 0xc8
    88dc:	e48e      	b.n	81fc <_svfprintf_r+0x970>
    88de:	4bde      	ldr	r3, [pc, #888]	; (8c58 <_svfprintf_r+0x13cc>)
    88e0:	3401      	adds	r4, #1
    88e2:	6033      	str	r3, [r6, #0]
    88e4:	2301      	movs	r3, #1
    88e6:	6073      	str	r3, [r6, #4]
    88e8:	687b      	ldr	r3, [r7, #4]
    88ea:	60bc      	str	r4, [r7, #8]
    88ec:	3301      	adds	r3, #1
    88ee:	607b      	str	r3, [r7, #4]
    88f0:	2b07      	cmp	r3, #7
    88f2:	dc7a      	bgt.n	89ea <_svfprintf_r+0x115e>
    88f4:	3608      	adds	r6, #8
    88f6:	2800      	cmp	r0, #0
    88f8:	d107      	bne.n	890a <_svfprintf_r+0x107e>
    88fa:	9b14      	ldr	r3, [sp, #80]	; 0x50
    88fc:	2b00      	cmp	r3, #0
    88fe:	d104      	bne.n	890a <_svfprintf_r+0x107e>
    8900:	9b08      	ldr	r3, [sp, #32]
    8902:	07db      	lsls	r3, r3, #31
    8904:	d401      	bmi.n	890a <_svfprintf_r+0x107e>
    8906:	f7ff fbb7 	bl	8078 <_svfprintf_r+0x7ec>
    890a:	9b19      	ldr	r3, [sp, #100]	; 0x64
    890c:	6033      	str	r3, [r6, #0]
    890e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    8910:	1919      	adds	r1, r3, r4
    8912:	6073      	str	r3, [r6, #4]
    8914:	687b      	ldr	r3, [r7, #4]
    8916:	60b9      	str	r1, [r7, #8]
    8918:	3301      	adds	r3, #1
    891a:	607b      	str	r3, [r7, #4]
    891c:	2b07      	cmp	r3, #7
    891e:	dd00      	ble.n	8922 <_svfprintf_r+0x1096>
    8920:	e1f2      	b.n	8d08 <_svfprintf_r+0x147c>
    8922:	0032      	movs	r2, r6
    8924:	3208      	adds	r2, #8
    8926:	2800      	cmp	r0, #0
    8928:	da00      	bge.n	892c <_svfprintf_r+0x10a0>
    892a:	e1cc      	b.n	8cc6 <_svfprintf_r+0x143a>
    892c:	9811      	ldr	r0, [sp, #68]	; 0x44
    892e:	3301      	adds	r3, #1
    8930:	6010      	str	r0, [r2, #0]
    8932:	9814      	ldr	r0, [sp, #80]	; 0x50
    8934:	607b      	str	r3, [r7, #4]
    8936:	1844      	adds	r4, r0, r1
    8938:	6050      	str	r0, [r2, #4]
    893a:	60bc      	str	r4, [r7, #8]
    893c:	2b07      	cmp	r3, #7
    893e:	dd00      	ble.n	8942 <_svfprintf_r+0x10b6>
    8940:	e437      	b.n	81b2 <_svfprintf_r+0x926>
    8942:	3208      	adds	r2, #8
    8944:	0016      	movs	r6, r2
    8946:	f7ff fb97 	bl	8078 <_svfprintf_r+0x7ec>
    894a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    894c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    894e:	680b      	ldr	r3, [r1, #0]
    8950:	601a      	str	r2, [r3, #0]
    8952:	17d2      	asrs	r2, r2, #31
    8954:	605a      	str	r2, [r3, #4]
    8956:	000b      	movs	r3, r1
    8958:	3304      	adds	r3, #4
    895a:	930f      	str	r3, [sp, #60]	; 0x3c
    895c:	f7fe ffc1 	bl	78e2 <_svfprintf_r+0x56>
    8960:	464b      	mov	r3, r9
    8962:	3101      	adds	r1, #1
    8964:	431c      	orrs	r4, r3
    8966:	780b      	ldrb	r3, [r1, #0]
    8968:	f7fe fff4 	bl	7954 <_svfprintf_r+0xc8>
    896c:	4bbb      	ldr	r3, [pc, #748]	; (8c5c <_svfprintf_r+0x13d0>)
    896e:	9311      	str	r3, [sp, #68]	; 0x44
    8970:	f7ff f937 	bl	7be2 <_svfprintf_r+0x356>
    8974:	003a      	movs	r2, r7
    8976:	9906      	ldr	r1, [sp, #24]
    8978:	9809      	ldr	r0, [sp, #36]	; 0x24
    897a:	f007 f80f 	bl	f99c <__ssprint_r>
    897e:	2800      	cmp	r0, #0
    8980:	d001      	beq.n	8986 <_svfprintf_r+0x10fa>
    8982:	f7ff f80a 	bl	799a <_svfprintf_r+0x10e>
    8986:	68bc      	ldr	r4, [r7, #8]
    8988:	ae32      	add	r6, sp, #200	; 0xc8
    898a:	e5f1      	b.n	8570 <_svfprintf_r+0xce4>
    898c:	2140      	movs	r1, #64	; 0x40
    898e:	9809      	ldr	r0, [sp, #36]	; 0x24
    8990:	f004 fb8c 	bl	d0ac <_malloc_r>
    8994:	9b06      	ldr	r3, [sp, #24]
    8996:	6018      	str	r0, [r3, #0]
    8998:	6118      	str	r0, [r3, #16]
    899a:	2800      	cmp	r0, #0
    899c:	d100      	bne.n	89a0 <_svfprintf_r+0x1114>
    899e:	e24f      	b.n	8e40 <_svfprintf_r+0x15b4>
    89a0:	2340      	movs	r3, #64	; 0x40
    89a2:	9a06      	ldr	r2, [sp, #24]
    89a4:	6153      	str	r3, [r2, #20]
    89a6:	f7fe ff8e 	bl	78c6 <_svfprintf_r+0x3a>
    89aa:	ab23      	add	r3, sp, #140	; 0x8c
    89ac:	931b      	str	r3, [sp, #108]	; 0x6c
    89ae:	9304      	str	r3, [sp, #16]
    89b0:	ab20      	add	r3, sp, #128	; 0x80
    89b2:	9303      	str	r3, [sp, #12]
    89b4:	ab1f      	add	r3, sp, #124	; 0x7c
    89b6:	9302      	str	r3, [sp, #8]
    89b8:	4653      	mov	r3, sl
    89ba:	9301      	str	r3, [sp, #4]
    89bc:	2303      	movs	r3, #3
    89be:	464a      	mov	r2, r9
    89c0:	9300      	str	r3, [sp, #0]
    89c2:	9809      	ldr	r0, [sp, #36]	; 0x24
    89c4:	9b07      	ldr	r3, [sp, #28]
    89c6:	f002 fea9 	bl	b71c <_dtoa_r>
    89ca:	4655      	mov	r5, sl
    89cc:	9011      	str	r0, [sp, #68]	; 0x44
    89ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
    89d0:	4698      	mov	r8, r3
    89d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    89d4:	44a8      	add	r8, r5
    89d6:	2b46      	cmp	r3, #70	; 0x46
    89d8:	d000      	beq.n	89dc <_svfprintf_r+0x1150>
    89da:	e72b      	b.n	8834 <_svfprintf_r+0xfa8>
    89dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    89de:	781b      	ldrb	r3, [r3, #0]
    89e0:	2b30      	cmp	r3, #48	; 0x30
    89e2:	d016      	beq.n	8a12 <_svfprintf_r+0x1186>
    89e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    89e6:	4498      	add	r8, r3
    89e8:	e724      	b.n	8834 <_svfprintf_r+0xfa8>
    89ea:	003a      	movs	r2, r7
    89ec:	9906      	ldr	r1, [sp, #24]
    89ee:	9809      	ldr	r0, [sp, #36]	; 0x24
    89f0:	f006 ffd4 	bl	f99c <__ssprint_r>
    89f4:	2800      	cmp	r0, #0
    89f6:	d001      	beq.n	89fc <_svfprintf_r+0x1170>
    89f8:	f7fe ffcf 	bl	799a <_svfprintf_r+0x10e>
    89fc:	981f      	ldr	r0, [sp, #124]	; 0x7c
    89fe:	68bc      	ldr	r4, [r7, #8]
    8a00:	ae32      	add	r6, sp, #200	; 0xc8
    8a02:	e778      	b.n	88f6 <_svfprintf_r+0x106a>
    8a04:	4653      	mov	r3, sl
    8a06:	2b00      	cmp	r3, #0
    8a08:	d000      	beq.n	8a0c <_svfprintf_r+0x1180>
    8a0a:	e6de      	b.n	87ca <_svfprintf_r+0xf3e>
    8a0c:	3301      	adds	r3, #1
    8a0e:	469a      	mov	sl, r3
    8a10:	e6db      	b.n	87ca <_svfprintf_r+0xf3e>
    8a12:	2200      	movs	r2, #0
    8a14:	2300      	movs	r3, #0
    8a16:	4648      	mov	r0, r9
    8a18:	9907      	ldr	r1, [sp, #28]
    8a1a:	f7fd ff83 	bl	6924 <__aeabi_dcmpeq>
    8a1e:	2800      	cmp	r0, #0
    8a20:	d1e0      	bne.n	89e4 <_svfprintf_r+0x1158>
    8a22:	2301      	movs	r3, #1
    8a24:	1b5b      	subs	r3, r3, r5
    8a26:	931f      	str	r3, [sp, #124]	; 0x7c
    8a28:	4498      	add	r8, r3
    8a2a:	e703      	b.n	8834 <_svfprintf_r+0xfa8>
    8a2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    8a2e:	ab32      	add	r3, sp, #200	; 0xc8
    8a30:	1a9b      	subs	r3, r3, r2
    8a32:	930e      	str	r3, [sp, #56]	; 0x38
    8a34:	f7ff f83a 	bl	7aac <_svfprintf_r+0x220>
    8a38:	9811      	ldr	r0, [sp, #68]	; 0x44
    8a3a:	f7fe fbe5 	bl	7208 <strlen>
    8a3e:	0002      	movs	r2, r0
    8a40:	900e      	str	r0, [sp, #56]	; 0x38
    8a42:	0003      	movs	r3, r0
    8a44:	f7ff f9cd 	bl	7de2 <_svfprintf_r+0x556>
    8a48:	232d      	movs	r3, #45	; 0x2d
    8a4a:	aa16      	add	r2, sp, #88	; 0x58
    8a4c:	77d3      	strb	r3, [r2, #31]
    8a4e:	4698      	mov	r8, r3
    8a50:	2300      	movs	r3, #0
    8a52:	469a      	mov	sl, r3
    8a54:	f7ff f835 	bl	7ac2 <_svfprintf_r+0x236>
    8a58:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    8a5a:	9313      	str	r3, [sp, #76]	; 0x4c
    8a5c:	1cda      	adds	r2, r3, #3
    8a5e:	db02      	blt.n	8a66 <_svfprintf_r+0x11da>
    8a60:	459a      	cmp	sl, r3
    8a62:	db00      	blt.n	8a66 <_svfprintf_r+0x11da>
    8a64:	e70b      	b.n	887e <_svfprintf_r+0xff2>
    8a66:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8a68:	3b02      	subs	r3, #2
    8a6a:	9312      	str	r3, [sp, #72]	; 0x48
    8a6c:	222c      	movs	r2, #44	; 0x2c
    8a6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8a70:	2148      	movs	r1, #72	; 0x48
    8a72:	1e5d      	subs	r5, r3, #1
    8a74:	ab16      	add	r3, sp, #88	; 0x58
    8a76:	189b      	adds	r3, r3, r2
    8a78:	466a      	mov	r2, sp
    8a7a:	1852      	adds	r2, r2, r1
    8a7c:	7812      	ldrb	r2, [r2, #0]
    8a7e:	951f      	str	r5, [sp, #124]	; 0x7c
    8a80:	701a      	strb	r2, [r3, #0]
    8a82:	2d00      	cmp	r5, #0
    8a84:	da00      	bge.n	8a88 <_svfprintf_r+0x11fc>
    8a86:	e1a4      	b.n	8dd2 <_svfprintf_r+0x1546>
    8a88:	212d      	movs	r1, #45	; 0x2d
    8a8a:	232b      	movs	r3, #43	; 0x2b
    8a8c:	aa16      	add	r2, sp, #88	; 0x58
    8a8e:	1852      	adds	r2, r2, r1
    8a90:	7013      	strb	r3, [r2, #0]
    8a92:	2d09      	cmp	r5, #9
    8a94:	dc00      	bgt.n	8a98 <_svfprintf_r+0x120c>
    8a96:	e14c      	b.n	8d32 <_svfprintf_r+0x14a6>
    8a98:	aa16      	add	r2, sp, #88	; 0x58
    8a9a:	233b      	movs	r3, #59	; 0x3b
    8a9c:	4694      	mov	ip, r2
    8a9e:	4463      	add	r3, ip
    8aa0:	469a      	mov	sl, r3
    8aa2:	46b1      	mov	r9, r6
    8aa4:	46a0      	mov	r8, r4
    8aa6:	4656      	mov	r6, sl
    8aa8:	e000      	b.n	8aac <_svfprintf_r+0x1220>
    8aaa:	0026      	movs	r6, r4
    8aac:	0028      	movs	r0, r5
    8aae:	210a      	movs	r1, #10
    8ab0:	f7fb ff76 	bl	49a0 <__aeabi_idivmod>
    8ab4:	1e74      	subs	r4, r6, #1
    8ab6:	3130      	adds	r1, #48	; 0x30
    8ab8:	7021      	strb	r1, [r4, #0]
    8aba:	0028      	movs	r0, r5
    8abc:	210a      	movs	r1, #10
    8abe:	f7fb fe89 	bl	47d4 <__divsi3>
    8ac2:	0005      	movs	r5, r0
    8ac4:	2809      	cmp	r0, #9
    8ac6:	dcf0      	bgt.n	8aaa <_svfprintf_r+0x121e>
    8ac8:	0023      	movs	r3, r4
    8aca:	4644      	mov	r4, r8
    8acc:	46b0      	mov	r8, r6
    8ace:	464e      	mov	r6, r9
    8ad0:	4699      	mov	r9, r3
    8ad2:	0003      	movs	r3, r0
    8ad4:	3330      	adds	r3, #48	; 0x30
    8ad6:	b2d8      	uxtb	r0, r3
    8ad8:	4643      	mov	r3, r8
    8ada:	3b02      	subs	r3, #2
    8adc:	7018      	strb	r0, [r3, #0]
    8ade:	459a      	cmp	sl, r3
    8ae0:	d800      	bhi.n	8ae4 <_svfprintf_r+0x1258>
    8ae2:	e1b4      	b.n	8e4e <_svfprintf_r+0x15c2>
    8ae4:	4642      	mov	r2, r8
    8ae6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    8ae8:	4645      	mov	r5, r8
    8aea:	1a99      	subs	r1, r3, r2
    8aec:	2301      	movs	r3, #1
    8aee:	3107      	adds	r1, #7
    8af0:	425b      	negs	r3, r3
    8af2:	e001      	b.n	8af8 <_svfprintf_r+0x126c>
    8af4:	5ce8      	ldrb	r0, [r5, r3]
    8af6:	3301      	adds	r3, #1
    8af8:	aa21      	add	r2, sp, #132	; 0x84
    8afa:	18d2      	adds	r2, r2, r3
    8afc:	70d0      	strb	r0, [r2, #3]
    8afe:	428b      	cmp	r3, r1
    8b00:	d1f8      	bne.n	8af4 <_svfprintf_r+0x1268>
    8b02:	a916      	add	r1, sp, #88	; 0x58
    8b04:	468c      	mov	ip, r1
    8b06:	222e      	movs	r2, #46	; 0x2e
    8b08:	464b      	mov	r3, r9
    8b0a:	4462      	add	r2, ip
    8b0c:	4694      	mov	ip, r2
    8b0e:	1afb      	subs	r3, r7, r3
    8b10:	4463      	add	r3, ip
    8b12:	aa21      	add	r2, sp, #132	; 0x84
    8b14:	9914      	ldr	r1, [sp, #80]	; 0x50
    8b16:	1a9b      	subs	r3, r3, r2
    8b18:	469c      	mov	ip, r3
    8b1a:	000a      	movs	r2, r1
    8b1c:	4462      	add	r2, ip
    8b1e:	931a      	str	r3, [sp, #104]	; 0x68
    8b20:	920e      	str	r2, [sp, #56]	; 0x38
    8b22:	2901      	cmp	r1, #1
    8b24:	dc00      	bgt.n	8b28 <_svfprintf_r+0x129c>
    8b26:	e145      	b.n	8db4 <_svfprintf_r+0x1528>
    8b28:	9a18      	ldr	r2, [sp, #96]	; 0x60
    8b2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8b2c:	4694      	mov	ip, r2
    8b2e:	4463      	add	r3, ip
    8b30:	001a      	movs	r2, r3
    8b32:	930e      	str	r3, [sp, #56]	; 0x38
    8b34:	43db      	mvns	r3, r3
    8b36:	17db      	asrs	r3, r3, #31
    8b38:	401a      	ands	r2, r3
    8b3a:	2300      	movs	r3, #0
    8b3c:	9207      	str	r2, [sp, #28]
    8b3e:	9313      	str	r3, [sp, #76]	; 0x4c
    8b40:	e6ae      	b.n	88a0 <_svfprintf_r+0x1014>
    8b42:	2301      	movs	r3, #1
    8b44:	425b      	negs	r3, r3
    8b46:	930a      	str	r3, [sp, #40]	; 0x28
    8b48:	f7fe ff2d 	bl	79a6 <_svfprintf_r+0x11a>
    8b4c:	003a      	movs	r2, r7
    8b4e:	9906      	ldr	r1, [sp, #24]
    8b50:	9809      	ldr	r0, [sp, #36]	; 0x24
    8b52:	f006 ff23 	bl	f99c <__ssprint_r>
    8b56:	2800      	cmp	r0, #0
    8b58:	d001      	beq.n	8b5e <_svfprintf_r+0x12d2>
    8b5a:	f7fe ff1e 	bl	799a <_svfprintf_r+0x10e>
    8b5e:	68bc      	ldr	r4, [r7, #8]
    8b60:	ae32      	add	r6, sp, #200	; 0xc8
    8b62:	e43c      	b.n	83de <_svfprintf_r+0xb52>
    8b64:	003a      	movs	r2, r7
    8b66:	9906      	ldr	r1, [sp, #24]
    8b68:	9809      	ldr	r0, [sp, #36]	; 0x24
    8b6a:	f006 ff17 	bl	f99c <__ssprint_r>
    8b6e:	2800      	cmp	r0, #0
    8b70:	d001      	beq.n	8b76 <_svfprintf_r+0x12ea>
    8b72:	f7fe ff12 	bl	799a <_svfprintf_r+0x10e>
    8b76:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    8b78:	68bc      	ldr	r4, [r7, #8]
    8b7a:	ae32      	add	r6, sp, #200	; 0xc8
    8b7c:	e56a      	b.n	8654 <_svfprintf_r+0xdc8>
    8b7e:	003a      	movs	r2, r7
    8b80:	9906      	ldr	r1, [sp, #24]
    8b82:	9809      	ldr	r0, [sp, #36]	; 0x24
    8b84:	f006 ff0a 	bl	f99c <__ssprint_r>
    8b88:	2800      	cmp	r0, #0
    8b8a:	d001      	beq.n	8b90 <_svfprintf_r+0x1304>
    8b8c:	f7fe ff05 	bl	799a <_svfprintf_r+0x10e>
    8b90:	68bc      	ldr	r4, [r7, #8]
    8b92:	ae32      	add	r6, sp, #200	; 0xc8
    8b94:	e557      	b.n	8646 <_svfprintf_r+0xdba>
    8b96:	003a      	movs	r2, r7
    8b98:	9906      	ldr	r1, [sp, #24]
    8b9a:	9809      	ldr	r0, [sp, #36]	; 0x24
    8b9c:	f006 fefe 	bl	f99c <__ssprint_r>
    8ba0:	2800      	cmp	r0, #0
    8ba2:	d001      	beq.n	8ba8 <_svfprintf_r+0x131c>
    8ba4:	f7fe fef9 	bl	799a <_svfprintf_r+0x10e>
    8ba8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8baa:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    8bac:	68bc      	ldr	r4, [r7, #8]
    8bae:	1a9b      	subs	r3, r3, r2
    8bb0:	ae32      	add	r6, sp, #200	; 0xc8
    8bb2:	e56a      	b.n	868a <_svfprintf_r+0xdfe>
    8bb4:	4653      	mov	r3, sl
    8bb6:	9307      	str	r3, [sp, #28]
    8bb8:	2b06      	cmp	r3, #6
    8bba:	d901      	bls.n	8bc0 <_svfprintf_r+0x1334>
    8bbc:	2306      	movs	r3, #6
    8bbe:	9307      	str	r3, [sp, #28]
    8bc0:	9b07      	ldr	r3, [sp, #28]
    8bc2:	950f      	str	r5, [sp, #60]	; 0x3c
    8bc4:	930e      	str	r3, [sp, #56]	; 0x38
    8bc6:	2300      	movs	r3, #0
    8bc8:	4698      	mov	r8, r3
    8bca:	469a      	mov	sl, r3
    8bcc:	9313      	str	r3, [sp, #76]	; 0x4c
    8bce:	4b24      	ldr	r3, [pc, #144]	; (8c60 <_svfprintf_r+0x13d4>)
    8bd0:	9408      	str	r4, [sp, #32]
    8bd2:	9311      	str	r3, [sp, #68]	; 0x44
    8bd4:	f7fe ff78 	bl	7ac8 <_svfprintf_r+0x23c>
    8bd8:	2320      	movs	r3, #32
    8bda:	9a12      	ldr	r2, [sp, #72]	; 0x48
    8bdc:	439a      	bics	r2, r3
    8bde:	3b1a      	subs	r3, #26
    8be0:	920e      	str	r2, [sp, #56]	; 0x38
    8be2:	469a      	mov	sl, r3
    8be4:	e5f1      	b.n	87ca <_svfprintf_r+0xf3e>
    8be6:	ab23      	add	r3, sp, #140	; 0x8c
    8be8:	931b      	str	r3, [sp, #108]	; 0x6c
    8bea:	9304      	str	r3, [sp, #16]
    8bec:	ab20      	add	r3, sp, #128	; 0x80
    8bee:	9303      	str	r3, [sp, #12]
    8bf0:	ab1f      	add	r3, sp, #124	; 0x7c
    8bf2:	9302      	str	r3, [sp, #8]
    8bf4:	4653      	mov	r3, sl
    8bf6:	9301      	str	r3, [sp, #4]
    8bf8:	2303      	movs	r3, #3
    8bfa:	464a      	mov	r2, r9
    8bfc:	9300      	str	r3, [sp, #0]
    8bfe:	9809      	ldr	r0, [sp, #36]	; 0x24
    8c00:	9b07      	ldr	r3, [sp, #28]
    8c02:	f002 fd8b 	bl	b71c <_dtoa_r>
    8c06:	0003      	movs	r3, r0
    8c08:	4453      	add	r3, sl
    8c0a:	9011      	str	r0, [sp, #68]	; 0x44
    8c0c:	4698      	mov	r8, r3
    8c0e:	4655      	mov	r5, sl
    8c10:	e6e4      	b.n	89dc <_svfprintf_r+0x1150>
    8c12:	232d      	movs	r3, #45	; 0x2d
    8c14:	aa16      	add	r2, sp, #88	; 0x58
    8c16:	77d3      	strb	r3, [r2, #31]
    8c18:	4698      	mov	r8, r3
    8c1a:	f7fe ffdb 	bl	7bd4 <_svfprintf_r+0x348>
    8c1e:	2280      	movs	r2, #128	; 0x80
    8c20:	0612      	lsls	r2, r2, #24
    8c22:	4694      	mov	ip, r2
    8c24:	9b16      	ldr	r3, [sp, #88]	; 0x58
    8c26:	4699      	mov	r9, r3
    8c28:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8c2a:	4463      	add	r3, ip
    8c2c:	9307      	str	r3, [sp, #28]
    8c2e:	232d      	movs	r3, #45	; 0x2d
    8c30:	9310      	str	r3, [sp, #64]	; 0x40
    8c32:	e5d7      	b.n	87e4 <_svfprintf_r+0xf58>
    8c34:	9a18      	ldr	r2, [sp, #96]	; 0x60
    8c36:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8c38:	4694      	mov	ip, r2
    8c3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8c3c:	4463      	add	r3, ip
    8c3e:	930e      	str	r3, [sp, #56]	; 0x38
    8c40:	2a00      	cmp	r2, #0
    8c42:	dc00      	bgt.n	8c46 <_svfprintf_r+0x13ba>
    8c44:	e0ce      	b.n	8de4 <_svfprintf_r+0x1558>
    8c46:	001a      	movs	r2, r3
    8c48:	43db      	mvns	r3, r3
    8c4a:	17db      	asrs	r3, r3, #31
    8c4c:	401a      	ands	r2, r3
    8c4e:	2367      	movs	r3, #103	; 0x67
    8c50:	9207      	str	r2, [sp, #28]
    8c52:	9312      	str	r3, [sp, #72]	; 0x48
    8c54:	e624      	b.n	88a0 <_svfprintf_r+0x1014>
    8c56:	46c0      	nop			; (mov r8, r8)
    8c58:	000139f4 	.word	0x000139f4
    8c5c:	000139b8 	.word	0x000139b8
    8c60:	000139ec 	.word	0x000139ec
    8c64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    8c66:	9313      	str	r3, [sp, #76]	; 0x4c
    8c68:	2b00      	cmp	r3, #0
    8c6a:	dc00      	bgt.n	8c6e <_svfprintf_r+0x13e2>
    8c6c:	e0d5      	b.n	8e1a <_svfprintf_r+0x158e>
    8c6e:	4652      	mov	r2, sl
    8c70:	2a00      	cmp	r2, #0
    8c72:	d000      	beq.n	8c76 <_svfprintf_r+0x13ea>
    8c74:	e092      	b.n	8d9c <_svfprintf_r+0x1510>
    8c76:	07e2      	lsls	r2, r4, #31
    8c78:	d500      	bpl.n	8c7c <_svfprintf_r+0x13f0>
    8c7a:	e08f      	b.n	8d9c <_svfprintf_r+0x1510>
    8c7c:	9307      	str	r3, [sp, #28]
    8c7e:	930e      	str	r3, [sp, #56]	; 0x38
    8c80:	e60e      	b.n	88a0 <_svfprintf_r+0x1014>
    8c82:	ab16      	add	r3, sp, #88	; 0x58
    8c84:	7fdb      	ldrb	r3, [r3, #31]
    8c86:	950f      	str	r5, [sp, #60]	; 0x3c
    8c88:	4698      	mov	r8, r3
    8c8a:	4653      	mov	r3, sl
    8c8c:	9307      	str	r3, [sp, #28]
    8c8e:	930e      	str	r3, [sp, #56]	; 0x38
    8c90:	2300      	movs	r3, #0
    8c92:	9408      	str	r4, [sp, #32]
    8c94:	469a      	mov	sl, r3
    8c96:	9313      	str	r3, [sp, #76]	; 0x4c
    8c98:	f7fe ff10 	bl	7abc <_svfprintf_r+0x230>
    8c9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8c9e:	4698      	mov	r8, r3
    8ca0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8ca2:	44a8      	add	r8, r5
    8ca4:	2b47      	cmp	r3, #71	; 0x47
    8ca6:	d000      	beq.n	8caa <_svfprintf_r+0x141e>
    8ca8:	e5c4      	b.n	8834 <_svfprintf_r+0xfa8>
    8caa:	07e3      	lsls	r3, r4, #31
    8cac:	d500      	bpl.n	8cb0 <_svfprintf_r+0x1424>
    8cae:	e68e      	b.n	89ce <_svfprintf_r+0x1142>
    8cb0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8cb2:	9a11      	ldr	r2, [sp, #68]	; 0x44
    8cb4:	1a9b      	subs	r3, r3, r2
    8cb6:	9314      	str	r3, [sp, #80]	; 0x50
    8cb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8cba:	2b47      	cmp	r3, #71	; 0x47
    8cbc:	d100      	bne.n	8cc0 <_svfprintf_r+0x1434>
    8cbe:	e6cb      	b.n	8a58 <_svfprintf_r+0x11cc>
    8cc0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    8cc2:	9313      	str	r3, [sp, #76]	; 0x4c
    8cc4:	e6d2      	b.n	8a6c <_svfprintf_r+0x11e0>
    8cc6:	4244      	negs	r4, r0
    8cc8:	3010      	adds	r0, #16
    8cca:	db00      	blt.n	8cce <_svfprintf_r+0x1442>
    8ccc:	e0d0      	b.n	8e70 <_svfprintf_r+0x15e4>
    8cce:	486e      	ldr	r0, [pc, #440]	; (8e88 <_svfprintf_r+0x15fc>)
    8cd0:	2610      	movs	r6, #16
    8cd2:	0005      	movs	r5, r0
    8cd4:	e003      	b.n	8cde <_svfprintf_r+0x1452>
    8cd6:	3208      	adds	r2, #8
    8cd8:	3c10      	subs	r4, #16
    8cda:	2c10      	cmp	r4, #16
    8cdc:	dd38      	ble.n	8d50 <_svfprintf_r+0x14c4>
    8cde:	3110      	adds	r1, #16
    8ce0:	3301      	adds	r3, #1
    8ce2:	6015      	str	r5, [r2, #0]
    8ce4:	6056      	str	r6, [r2, #4]
    8ce6:	60b9      	str	r1, [r7, #8]
    8ce8:	607b      	str	r3, [r7, #4]
    8cea:	2b07      	cmp	r3, #7
    8cec:	ddf3      	ble.n	8cd6 <_svfprintf_r+0x144a>
    8cee:	003a      	movs	r2, r7
    8cf0:	9906      	ldr	r1, [sp, #24]
    8cf2:	9809      	ldr	r0, [sp, #36]	; 0x24
    8cf4:	f006 fe52 	bl	f99c <__ssprint_r>
    8cf8:	2800      	cmp	r0, #0
    8cfa:	d001      	beq.n	8d00 <_svfprintf_r+0x1474>
    8cfc:	f7fe fe4d 	bl	799a <_svfprintf_r+0x10e>
    8d00:	68b9      	ldr	r1, [r7, #8]
    8d02:	687b      	ldr	r3, [r7, #4]
    8d04:	aa32      	add	r2, sp, #200	; 0xc8
    8d06:	e7e7      	b.n	8cd8 <_svfprintf_r+0x144c>
    8d08:	003a      	movs	r2, r7
    8d0a:	9906      	ldr	r1, [sp, #24]
    8d0c:	9809      	ldr	r0, [sp, #36]	; 0x24
    8d0e:	f006 fe45 	bl	f99c <__ssprint_r>
    8d12:	2800      	cmp	r0, #0
    8d14:	d001      	beq.n	8d1a <_svfprintf_r+0x148e>
    8d16:	f7fe fe40 	bl	799a <_svfprintf_r+0x10e>
    8d1a:	981f      	ldr	r0, [sp, #124]	; 0x7c
    8d1c:	68b9      	ldr	r1, [r7, #8]
    8d1e:	687b      	ldr	r3, [r7, #4]
    8d20:	aa32      	add	r2, sp, #200	; 0xc8
    8d22:	e600      	b.n	8926 <_svfprintf_r+0x109a>
    8d24:	9a18      	ldr	r2, [sp, #96]	; 0x60
    8d26:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8d28:	4694      	mov	ip, r2
    8d2a:	4463      	add	r3, ip
    8d2c:	001a      	movs	r2, r3
    8d2e:	930e      	str	r3, [sp, #56]	; 0x38
    8d30:	e78a      	b.n	8c48 <_svfprintf_r+0x13bc>
    8d32:	212e      	movs	r1, #46	; 0x2e
    8d34:	2330      	movs	r3, #48	; 0x30
    8d36:	aa16      	add	r2, sp, #88	; 0x58
    8d38:	1852      	adds	r2, r2, r1
    8d3a:	7013      	strb	r3, [r2, #0]
    8d3c:	002b      	movs	r3, r5
    8d3e:	aa16      	add	r2, sp, #88	; 0x58
    8d40:	3101      	adds	r1, #1
    8d42:	3330      	adds	r3, #48	; 0x30
    8d44:	1852      	adds	r2, r2, r1
    8d46:	7013      	strb	r3, [r2, #0]
    8d48:	ab22      	add	r3, sp, #136	; 0x88
    8d4a:	e6e2      	b.n	8b12 <_svfprintf_r+0x1286>
    8d4c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8d4e:	e585      	b.n	885c <_svfprintf_r+0xfd0>
    8d50:	46a9      	mov	r9, r5
    8d52:	4648      	mov	r0, r9
    8d54:	1909      	adds	r1, r1, r4
    8d56:	3301      	adds	r3, #1
    8d58:	6010      	str	r0, [r2, #0]
    8d5a:	6054      	str	r4, [r2, #4]
    8d5c:	60b9      	str	r1, [r7, #8]
    8d5e:	3208      	adds	r2, #8
    8d60:	607b      	str	r3, [r7, #4]
    8d62:	2b07      	cmp	r3, #7
    8d64:	dc00      	bgt.n	8d68 <_svfprintf_r+0x14dc>
    8d66:	e5e1      	b.n	892c <_svfprintf_r+0x10a0>
    8d68:	003a      	movs	r2, r7
    8d6a:	9906      	ldr	r1, [sp, #24]
    8d6c:	9809      	ldr	r0, [sp, #36]	; 0x24
    8d6e:	f006 fe15 	bl	f99c <__ssprint_r>
    8d72:	2800      	cmp	r0, #0
    8d74:	d001      	beq.n	8d7a <_svfprintf_r+0x14ee>
    8d76:	f7fe fe10 	bl	799a <_svfprintf_r+0x10e>
    8d7a:	68b9      	ldr	r1, [r7, #8]
    8d7c:	687b      	ldr	r3, [r7, #4]
    8d7e:	aa32      	add	r2, sp, #200	; 0xc8
    8d80:	e5d4      	b.n	892c <_svfprintf_r+0x10a0>
    8d82:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8d84:	2b00      	cmp	r3, #0
    8d86:	db38      	blt.n	8dfa <_svfprintf_r+0x156e>
    8d88:	ab16      	add	r3, sp, #88	; 0x58
    8d8a:	7fdb      	ldrb	r3, [r3, #31]
    8d8c:	4698      	mov	r8, r3
    8d8e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8d90:	2b47      	cmp	r3, #71	; 0x47
    8d92:	dc2e      	bgt.n	8df2 <_svfprintf_r+0x1566>
    8d94:	4b3d      	ldr	r3, [pc, #244]	; (8e8c <_svfprintf_r+0x1600>)
    8d96:	9311      	str	r3, [sp, #68]	; 0x44
    8d98:	f7fe ff23 	bl	7be2 <_svfprintf_r+0x356>
    8d9c:	9a18      	ldr	r2, [sp, #96]	; 0x60
    8d9e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8da0:	4694      	mov	ip, r2
    8da2:	4463      	add	r3, ip
    8da4:	4453      	add	r3, sl
    8da6:	001a      	movs	r2, r3
    8da8:	930e      	str	r3, [sp, #56]	; 0x38
    8daa:	43db      	mvns	r3, r3
    8dac:	17db      	asrs	r3, r3, #31
    8dae:	401a      	ands	r2, r3
    8db0:	9207      	str	r2, [sp, #28]
    8db2:	e575      	b.n	88a0 <_svfprintf_r+0x1014>
    8db4:	2301      	movs	r3, #1
    8db6:	4023      	ands	r3, r4
    8db8:	9313      	str	r3, [sp, #76]	; 0x4c
    8dba:	d000      	beq.n	8dbe <_svfprintf_r+0x1532>
    8dbc:	e6b4      	b.n	8b28 <_svfprintf_r+0x129c>
    8dbe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    8dc0:	43d3      	mvns	r3, r2
    8dc2:	17db      	asrs	r3, r3, #31
    8dc4:	401a      	ands	r2, r3
    8dc6:	9207      	str	r2, [sp, #28]
    8dc8:	e56a      	b.n	88a0 <_svfprintf_r+0x1014>
    8dca:	4a2f      	ldr	r2, [pc, #188]	; (8e88 <_svfprintf_r+0x15fc>)
    8dcc:	687b      	ldr	r3, [r7, #4]
    8dce:	4691      	mov	r9, r2
    8dd0:	e42d      	b.n	862e <_svfprintf_r+0xda2>
    8dd2:	2301      	movs	r3, #1
    8dd4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8dd6:	391b      	subs	r1, #27
    8dd8:	1a9d      	subs	r5, r3, r2
    8dda:	aa16      	add	r2, sp, #88	; 0x58
    8ddc:	332c      	adds	r3, #44	; 0x2c
    8dde:	1852      	adds	r2, r2, r1
    8de0:	7013      	strb	r3, [r2, #0]
    8de2:	e656      	b.n	8a92 <_svfprintf_r+0x1206>
    8de4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8de6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8de8:	1a98      	subs	r0, r3, r2
    8dea:	1c43      	adds	r3, r0, #1
    8dec:	001a      	movs	r2, r3
    8dee:	930e      	str	r3, [sp, #56]	; 0x38
    8df0:	e72a      	b.n	8c48 <_svfprintf_r+0x13bc>
    8df2:	4b27      	ldr	r3, [pc, #156]	; (8e90 <_svfprintf_r+0x1604>)
    8df4:	9311      	str	r3, [sp, #68]	; 0x44
    8df6:	f7fe fef4 	bl	7be2 <_svfprintf_r+0x356>
    8dfa:	232d      	movs	r3, #45	; 0x2d
    8dfc:	aa16      	add	r2, sp, #88	; 0x58
    8dfe:	77d3      	strb	r3, [r2, #31]
    8e00:	4698      	mov	r8, r3
    8e02:	e7c4      	b.n	8d8e <_svfprintf_r+0x1502>
    8e04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8e06:	1d1a      	adds	r2, r3, #4
    8e08:	681b      	ldr	r3, [r3, #0]
    8e0a:	469a      	mov	sl, r3
    8e0c:	2b00      	cmp	r3, #0
    8e0e:	db36      	blt.n	8e7e <_svfprintf_r+0x15f2>
    8e10:	784b      	ldrb	r3, [r1, #1]
    8e12:	920f      	str	r2, [sp, #60]	; 0x3c
    8e14:	4659      	mov	r1, fp
    8e16:	f7fe fd9d 	bl	7954 <_svfprintf_r+0xc8>
    8e1a:	4653      	mov	r3, sl
    8e1c:	2b00      	cmp	r3, #0
    8e1e:	d101      	bne.n	8e24 <_svfprintf_r+0x1598>
    8e20:	07e3      	lsls	r3, r4, #31
    8e22:	d503      	bpl.n	8e2c <_svfprintf_r+0x15a0>
    8e24:	9b18      	ldr	r3, [sp, #96]	; 0x60
    8e26:	1c58      	adds	r0, r3, #1
    8e28:	0003      	movs	r3, r0
    8e2a:	e7bb      	b.n	8da4 <_svfprintf_r+0x1518>
    8e2c:	2301      	movs	r3, #1
    8e2e:	e725      	b.n	8c7c <_svfprintf_r+0x13f0>
    8e30:	ab16      	add	r3, sp, #88	; 0x58
    8e32:	77d8      	strb	r0, [r3, #31]
    8e34:	f7fe ff6c 	bl	7d10 <_svfprintf_r+0x484>
    8e38:	ab16      	add	r3, sp, #88	; 0x58
    8e3a:	77d8      	strb	r0, [r3, #31]
    8e3c:	f7ff f814 	bl	7e68 <_svfprintf_r+0x5dc>
    8e40:	230c      	movs	r3, #12
    8e42:	9a09      	ldr	r2, [sp, #36]	; 0x24
    8e44:	6013      	str	r3, [r2, #0]
    8e46:	3b0d      	subs	r3, #13
    8e48:	930a      	str	r3, [sp, #40]	; 0x28
    8e4a:	f7fe fdac 	bl	79a6 <_svfprintf_r+0x11a>
    8e4e:	aa16      	add	r2, sp, #88	; 0x58
    8e50:	232e      	movs	r3, #46	; 0x2e
    8e52:	4694      	mov	ip, r2
    8e54:	4463      	add	r3, ip
    8e56:	e65c      	b.n	8b12 <_svfprintf_r+0x1286>
    8e58:	ab16      	add	r3, sp, #88	; 0x58
    8e5a:	77d8      	strb	r0, [r3, #31]
    8e5c:	f7fe fe85 	bl	7b6a <_svfprintf_r+0x2de>
    8e60:	ab16      	add	r3, sp, #88	; 0x58
    8e62:	77d8      	strb	r0, [r3, #31]
    8e64:	f7fe fddd 	bl	7a22 <_svfprintf_r+0x196>
    8e68:	ab16      	add	r3, sp, #88	; 0x58
    8e6a:	77d8      	strb	r0, [r3, #31]
    8e6c:	f7ff f87d 	bl	7f6a <_svfprintf_r+0x6de>
    8e70:	4805      	ldr	r0, [pc, #20]	; (8e88 <_svfprintf_r+0x15fc>)
    8e72:	4681      	mov	r9, r0
    8e74:	e76d      	b.n	8d52 <_svfprintf_r+0x14c6>
    8e76:	ab16      	add	r3, sp, #88	; 0x58
    8e78:	77d8      	strb	r0, [r3, #31]
    8e7a:	f7fe ff79 	bl	7d70 <_svfprintf_r+0x4e4>
    8e7e:	2301      	movs	r3, #1
    8e80:	425b      	negs	r3, r3
    8e82:	469a      	mov	sl, r3
    8e84:	e7c4      	b.n	8e10 <_svfprintf_r+0x1584>
    8e86:	46c0      	nop			; (mov r8, r8)
    8e88:	00013a08 	.word	0x00013a08
    8e8c:	000139bc 	.word	0x000139bc
    8e90:	000139c0 	.word	0x000139c0

00008e94 <__ssvfscanf_r>:
    8e94:	b5f0      	push	{r4, r5, r6, r7, lr}
    8e96:	464e      	mov	r6, r9
    8e98:	4645      	mov	r5, r8
    8e9a:	46de      	mov	lr, fp
    8e9c:	4657      	mov	r7, sl
    8e9e:	b5e0      	push	{r5, r6, r7, lr}
    8ea0:	4cce      	ldr	r4, [pc, #824]	; (91dc <__ssvfscanf_r+0x348>)
    8ea2:	000e      	movs	r6, r1
    8ea4:	44a5      	add	sp, r4
    8ea6:	9307      	str	r3, [sp, #28]
    8ea8:	230c      	movs	r3, #12
    8eaa:	5ec9      	ldrsh	r1, [r1, r3]
    8eac:	2380      	movs	r3, #128	; 0x80
    8eae:	019b      	lsls	r3, r3, #6
    8eb0:	4680      	mov	r8, r0
    8eb2:	4219      	tst	r1, r3
    8eb4:	d105      	bne.n	8ec2 <__ssvfscanf_r+0x2e>
    8eb6:	430b      	orrs	r3, r1
    8eb8:	81b3      	strh	r3, [r6, #12]
    8eba:	6e71      	ldr	r1, [r6, #100]	; 0x64
    8ebc:	4bc8      	ldr	r3, [pc, #800]	; (91e0 <__ssvfscanf_r+0x34c>)
    8ebe:	400b      	ands	r3, r1
    8ec0:	6673      	str	r3, [r6, #100]	; 0x64
    8ec2:	2300      	movs	r3, #0
    8ec4:	0014      	movs	r4, r2
    8ec6:	9309      	str	r3, [sp, #36]	; 0x24
    8ec8:	9305      	str	r3, [sp, #20]
    8eca:	9308      	str	r3, [sp, #32]
    8ecc:	7823      	ldrb	r3, [r4, #0]
    8ece:	1c62      	adds	r2, r4, #1
    8ed0:	2700      	movs	r7, #0
    8ed2:	9311      	str	r3, [sp, #68]	; 0x44
    8ed4:	4692      	mov	sl, r2
    8ed6:	2b00      	cmp	r3, #0
    8ed8:	d029      	beq.n	8f2e <__ssvfscanf_r+0x9a>
    8eda:	f004 f835 	bl	cf48 <__locale_ctype_ptr>
    8ede:	2508      	movs	r5, #8
    8ee0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8ee2:	18c0      	adds	r0, r0, r3
    8ee4:	7842      	ldrb	r2, [r0, #1]
    8ee6:	4015      	ands	r5, r2
    8ee8:	d02b      	beq.n	8f42 <__ssvfscanf_r+0xae>
    8eea:	6873      	ldr	r3, [r6, #4]
    8eec:	2408      	movs	r4, #8
    8eee:	4645      	mov	r5, r8
    8ef0:	e00d      	b.n	8f0e <__ssvfscanf_r+0x7a>
    8ef2:	f004 f829 	bl	cf48 <__locale_ctype_ptr>
    8ef6:	6832      	ldr	r2, [r6, #0]
    8ef8:	7813      	ldrb	r3, [r2, #0]
    8efa:	18c0      	adds	r0, r0, r3
    8efc:	7843      	ldrb	r3, [r0, #1]
    8efe:	421c      	tst	r4, r3
    8f00:	d00d      	beq.n	8f1e <__ssvfscanf_r+0x8a>
    8f02:	6873      	ldr	r3, [r6, #4]
    8f04:	3201      	adds	r2, #1
    8f06:	3b01      	subs	r3, #1
    8f08:	3701      	adds	r7, #1
    8f0a:	6073      	str	r3, [r6, #4]
    8f0c:	6032      	str	r2, [r6, #0]
    8f0e:	2b00      	cmp	r3, #0
    8f10:	dcef      	bgt.n	8ef2 <__ssvfscanf_r+0x5e>
    8f12:	0031      	movs	r1, r6
    8f14:	0028      	movs	r0, r5
    8f16:	f006 fe13 	bl	fb40 <__ssrefill_r>
    8f1a:	2800      	cmp	r0, #0
    8f1c:	d0e9      	beq.n	8ef2 <__ssvfscanf_r+0x5e>
    8f1e:	46a8      	mov	r8, r5
    8f20:	4654      	mov	r4, sl
    8f22:	7823      	ldrb	r3, [r4, #0]
    8f24:	1c62      	adds	r2, r4, #1
    8f26:	9311      	str	r3, [sp, #68]	; 0x44
    8f28:	4692      	mov	sl, r2
    8f2a:	2b00      	cmp	r3, #0
    8f2c:	d1d5      	bne.n	8eda <__ssvfscanf_r+0x46>
    8f2e:	9808      	ldr	r0, [sp, #32]
    8f30:	23ad      	movs	r3, #173	; 0xad
    8f32:	009b      	lsls	r3, r3, #2
    8f34:	449d      	add	sp, r3
    8f36:	bc3c      	pop	{r2, r3, r4, r5}
    8f38:	4690      	mov	r8, r2
    8f3a:	4699      	mov	r9, r3
    8f3c:	46a2      	mov	sl, r4
    8f3e:	46ab      	mov	fp, r5
    8f40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8f42:	2b25      	cmp	r3, #37	; 0x25
    8f44:	d116      	bne.n	8f74 <__ssvfscanf_r+0xe0>
    8f46:	7863      	ldrb	r3, [r4, #1]
    8f48:	2400      	movs	r4, #0
    8f4a:	469b      	mov	fp, r3
    8f4c:	2300      	movs	r3, #0
    8f4e:	4699      	mov	r9, r3
    8f50:	3301      	adds	r3, #1
    8f52:	9304      	str	r3, [sp, #16]
    8f54:	2004      	movs	r0, #4
    8f56:	465b      	mov	r3, fp
    8f58:	2202      	movs	r2, #2
    8f5a:	46a3      	mov	fp, r4
    8f5c:	4654      	mov	r4, sl
    8f5e:	3401      	adds	r4, #1
    8f60:	9403      	str	r4, [sp, #12]
    8f62:	2b78      	cmp	r3, #120	; 0x78
    8f64:	d900      	bls.n	8f68 <__ssvfscanf_r+0xd4>
    8f66:	e0d5      	b.n	9114 <__ssvfscanf_r+0x280>
    8f68:	499e      	ldr	r1, [pc, #632]	; (91e4 <__ssvfscanf_r+0x350>)
    8f6a:	009c      	lsls	r4, r3, #2
    8f6c:	590c      	ldr	r4, [r1, r4]
    8f6e:	46a7      	mov	pc, r4
    8f70:	9b03      	ldr	r3, [sp, #12]
    8f72:	469a      	mov	sl, r3
    8f74:	6873      	ldr	r3, [r6, #4]
    8f76:	2b00      	cmp	r3, #0
    8f78:	dc01      	bgt.n	8f7e <__ssvfscanf_r+0xea>
    8f7a:	f000 fd64 	bl	9a46 <__ssvfscanf_r+0xbb2>
    8f7e:	4652      	mov	r2, sl
    8f80:	6833      	ldr	r3, [r6, #0]
    8f82:	3a01      	subs	r2, #1
    8f84:	7811      	ldrb	r1, [r2, #0]
    8f86:	781a      	ldrb	r2, [r3, #0]
    8f88:	4291      	cmp	r1, r2
    8f8a:	d1d0      	bne.n	8f2e <__ssvfscanf_r+0x9a>
    8f8c:	6872      	ldr	r2, [r6, #4]
    8f8e:	3301      	adds	r3, #1
    8f90:	3a01      	subs	r2, #1
    8f92:	6072      	str	r2, [r6, #4]
    8f94:	6033      	str	r3, [r6, #0]
    8f96:	3701      	adds	r7, #1
    8f98:	4654      	mov	r4, sl
    8f9a:	e7c2      	b.n	8f22 <__ssvfscanf_r+0x8e>
    8f9c:	4655      	mov	r5, sl
    8f9e:	1c83      	adds	r3, r0, #2
    8fa0:	d001      	beq.n	8fa6 <__ssvfscanf_r+0x112>
    8fa2:	f000 fe1a 	bl	9bda <__ssvfscanf_r+0xd46>
    8fa6:	6873      	ldr	r3, [r6, #4]
    8fa8:	2b00      	cmp	r3, #0
    8faa:	dd01      	ble.n	8fb0 <__ssvfscanf_r+0x11c>
    8fac:	f000 fc2a 	bl	9804 <__ssvfscanf_r+0x970>
    8fb0:	0031      	movs	r1, r6
    8fb2:	4640      	mov	r0, r8
    8fb4:	f006 fdc4 	bl	fb40 <__ssrefill_r>
    8fb8:	2800      	cmp	r0, #0
    8fba:	d101      	bne.n	8fc0 <__ssvfscanf_r+0x12c>
    8fbc:	f000 fc22 	bl	9804 <__ssvfscanf_r+0x970>
    8fc0:	2d00      	cmp	r5, #0
    8fc2:	d101      	bne.n	8fc8 <__ssvfscanf_r+0x134>
    8fc4:	f000 fc2a 	bl	981c <__ssvfscanf_r+0x988>
    8fc8:	9b08      	ldr	r3, [sp, #32]
    8fca:	2b00      	cmp	r3, #0
    8fcc:	d002      	beq.n	8fd4 <__ssvfscanf_r+0x140>
    8fce:	89b3      	ldrh	r3, [r6, #12]
    8fd0:	065b      	lsls	r3, r3, #25
    8fd2:	d5ac      	bpl.n	8f2e <__ssvfscanf_r+0x9a>
    8fd4:	2301      	movs	r3, #1
    8fd6:	425b      	negs	r3, r3
    8fd8:	9308      	str	r3, [sp, #32]
    8fda:	e7a8      	b.n	8f2e <__ssvfscanf_r+0x9a>
    8fdc:	4b82      	ldr	r3, [pc, #520]	; (91e8 <__ssvfscanf_r+0x354>)
    8fde:	465c      	mov	r4, fp
    8fe0:	9309      	str	r3, [sp, #36]	; 0x24
    8fe2:	2300      	movs	r3, #0
    8fe4:	9305      	str	r3, [sp, #20]
    8fe6:	3303      	adds	r3, #3
    8fe8:	469b      	mov	fp, r3
    8fea:	6873      	ldr	r3, [r6, #4]
    8fec:	2b00      	cmp	r3, #0
    8fee:	dd27      	ble.n	9040 <__ssvfscanf_r+0x1ac>
    8ff0:	464b      	mov	r3, r9
    8ff2:	065b      	lsls	r3, r3, #25
    8ff4:	d42d      	bmi.n	9052 <__ssvfscanf_r+0x1be>
    8ff6:	2308      	movs	r3, #8
    8ff8:	469a      	mov	sl, r3
    8ffa:	e001      	b.n	9000 <__ssvfscanf_r+0x16c>
    8ffc:	3201      	adds	r2, #1
    8ffe:	6032      	str	r2, [r6, #0]
    9000:	f003 ffa2 	bl	cf48 <__locale_ctype_ptr>
    9004:	4651      	mov	r1, sl
    9006:	6832      	ldr	r2, [r6, #0]
    9008:	7813      	ldrb	r3, [r2, #0]
    900a:	18c0      	adds	r0, r0, r3
    900c:	7843      	ldrb	r3, [r0, #1]
    900e:	4219      	tst	r1, r3
    9010:	d01f      	beq.n	9052 <__ssvfscanf_r+0x1be>
    9012:	6873      	ldr	r3, [r6, #4]
    9014:	3701      	adds	r7, #1
    9016:	3b01      	subs	r3, #1
    9018:	6073      	str	r3, [r6, #4]
    901a:	2b00      	cmp	r3, #0
    901c:	dcee      	bgt.n	8ffc <__ssvfscanf_r+0x168>
    901e:	0031      	movs	r1, r6
    9020:	4640      	mov	r0, r8
    9022:	f006 fd8d 	bl	fb40 <__ssrefill_r>
    9026:	2800      	cmp	r0, #0
    9028:	d0ea      	beq.n	9000 <__ssvfscanf_r+0x16c>
    902a:	e7cd      	b.n	8fc8 <__ssvfscanf_r+0x134>
    902c:	465c      	mov	r4, fp
    902e:	4b6f      	ldr	r3, [pc, #444]	; (91ec <__ssvfscanf_r+0x358>)
    9030:	9309      	str	r3, [sp, #36]	; 0x24
    9032:	230a      	movs	r3, #10
    9034:	9305      	str	r3, [sp, #20]
    9036:	3b07      	subs	r3, #7
    9038:	469b      	mov	fp, r3
    903a:	6873      	ldr	r3, [r6, #4]
    903c:	2b00      	cmp	r3, #0
    903e:	dcd7      	bgt.n	8ff0 <__ssvfscanf_r+0x15c>
    9040:	0031      	movs	r1, r6
    9042:	4640      	mov	r0, r8
    9044:	f006 fd7c 	bl	fb40 <__ssrefill_r>
    9048:	2800      	cmp	r0, #0
    904a:	d1bd      	bne.n	8fc8 <__ssvfscanf_r+0x134>
    904c:	464b      	mov	r3, r9
    904e:	065b      	lsls	r3, r3, #25
    9050:	d5d1      	bpl.n	8ff6 <__ssvfscanf_r+0x162>
    9052:	465b      	mov	r3, fp
    9054:	2b02      	cmp	r3, #2
    9056:	d100      	bne.n	905a <__ssvfscanf_r+0x1c6>
    9058:	e326      	b.n	96a8 <__ssvfscanf_r+0x814>
    905a:	dc00      	bgt.n	905e <__ssvfscanf_r+0x1ca>
    905c:	e21b      	b.n	9496 <__ssvfscanf_r+0x602>
    905e:	465b      	mov	r3, fp
    9060:	2b03      	cmp	r3, #3
    9062:	d100      	bne.n	9066 <__ssvfscanf_r+0x1d2>
    9064:	e28a      	b.n	957c <__ssvfscanf_r+0x6e8>
    9066:	2b04      	cmp	r3, #4
    9068:	d000      	beq.n	906c <__ssvfscanf_r+0x1d8>
    906a:	e25b      	b.n	9524 <__ssvfscanf_r+0x690>
    906c:	4640      	mov	r0, r8
    906e:	f003 ff7b 	bl	cf68 <_localeconv_r>
    9072:	22ae      	movs	r2, #174	; 0xae
    9074:	2100      	movs	r1, #0
    9076:	6803      	ldr	r3, [r0, #0]
    9078:	0052      	lsls	r2, r2, #1
    907a:	930c      	str	r3, [sp, #48]	; 0x30
    907c:	1e63      	subs	r3, r4, #1
    907e:	910d      	str	r1, [sp, #52]	; 0x34
    9080:	4293      	cmp	r3, r2
    9082:	d904      	bls.n	908e <__ssvfscanf_r+0x1fa>
    9084:	3c5e      	subs	r4, #94	; 0x5e
    9086:	3cff      	subs	r4, #255	; 0xff
    9088:	940d      	str	r4, [sp, #52]	; 0x34
    908a:	245e      	movs	r4, #94	; 0x5e
    908c:	34ff      	adds	r4, #255	; 0xff
    908e:	23f0      	movs	r3, #240	; 0xf0
    9090:	464a      	mov	r2, r9
    9092:	00db      	lsls	r3, r3, #3
    9094:	431a      	orrs	r2, r3
    9096:	2300      	movs	r3, #0
    9098:	9304      	str	r3, [sp, #16]
    909a:	930e      	str	r3, [sp, #56]	; 0x38
    909c:	930f      	str	r3, [sp, #60]	; 0x3c
    909e:	9306      	str	r3, [sp, #24]
    90a0:	930b      	str	r3, [sp, #44]	; 0x2c
    90a2:	ab54      	add	r3, sp, #336	; 0x150
    90a4:	469b      	mov	fp, r3
    90a6:	930a      	str	r3, [sp, #40]	; 0x28
    90a8:	4b51      	ldr	r3, [pc, #324]	; (91f0 <__ssvfscanf_r+0x35c>)
    90aa:	4691      	mov	r9, r2
    90ac:	469a      	mov	sl, r3
    90ae:	002b      	movs	r3, r5
    90b0:	003d      	movs	r5, r7
    90b2:	465f      	mov	r7, fp
    90b4:	469b      	mov	fp, r3
    90b6:	6832      	ldr	r2, [r6, #0]
    90b8:	7811      	ldrb	r1, [r2, #0]
    90ba:	000b      	movs	r3, r1
    90bc:	3b2b      	subs	r3, #43	; 0x2b
    90be:	b2db      	uxtb	r3, r3
    90c0:	2b4e      	cmp	r3, #78	; 0x4e
    90c2:	d900      	bls.n	90c6 <__ssvfscanf_r+0x232>
    90c4:	e1d6      	b.n	9474 <__ssvfscanf_r+0x5e0>
    90c6:	4650      	mov	r0, sl
    90c8:	009b      	lsls	r3, r3, #2
    90ca:	58c3      	ldr	r3, [r0, r3]
    90cc:	469f      	mov	pc, r3
    90ce:	2302      	movs	r3, #2
    90d0:	465c      	mov	r4, fp
    90d2:	469b      	mov	fp, r3
    90d4:	e789      	b.n	8fea <__ssvfscanf_r+0x156>
    90d6:	465c      	mov	r4, fp
    90d8:	2388      	movs	r3, #136	; 0x88
    90da:	464a      	mov	r2, r9
    90dc:	009b      	lsls	r3, r3, #2
    90de:	431a      	orrs	r2, r3
    90e0:	4b42      	ldr	r3, [pc, #264]	; (91ec <__ssvfscanf_r+0x358>)
    90e2:	4691      	mov	r9, r2
    90e4:	9309      	str	r3, [sp, #36]	; 0x24
    90e6:	2310      	movs	r3, #16
    90e8:	9305      	str	r3, [sp, #20]
    90ea:	3b0d      	subs	r3, #13
    90ec:	469b      	mov	fp, r3
    90ee:	e77c      	b.n	8fea <__ssvfscanf_r+0x156>
    90f0:	4653      	mov	r3, sl
    90f2:	785b      	ldrb	r3, [r3, #1]
    90f4:	2b6c      	cmp	r3, #108	; 0x6c
    90f6:	d101      	bne.n	90fc <__ssvfscanf_r+0x268>
    90f8:	f000 fcd0 	bl	9a9c <__ssvfscanf_r+0xc08>
    90fc:	4649      	mov	r1, r9
    90fe:	9c04      	ldr	r4, [sp, #16]
    9100:	4321      	orrs	r1, r4
    9102:	4689      	mov	r9, r1
    9104:	9903      	ldr	r1, [sp, #12]
    9106:	468a      	mov	sl, r1
    9108:	4654      	mov	r4, sl
    910a:	3401      	adds	r4, #1
    910c:	9403      	str	r4, [sp, #12]
    910e:	2b78      	cmp	r3, #120	; 0x78
    9110:	d800      	bhi.n	9114 <__ssvfscanf_r+0x280>
    9112:	e729      	b.n	8f68 <__ssvfscanf_r+0xd4>
    9114:	465c      	mov	r4, fp
    9116:	469b      	mov	fp, r3
    9118:	f003 ff16 	bl	cf48 <__locale_ctype_ptr>
    911c:	2303      	movs	r3, #3
    911e:	4458      	add	r0, fp
    9120:	7842      	ldrb	r2, [r0, #1]
    9122:	4013      	ands	r3, r2
    9124:	2b01      	cmp	r3, #1
    9126:	d100      	bne.n	912a <__ssvfscanf_r+0x296>
    9128:	e30a      	b.n	9740 <__ssvfscanf_r+0x8ac>
    912a:	4b2f      	ldr	r3, [pc, #188]	; (91e8 <__ssvfscanf_r+0x354>)
    912c:	e780      	b.n	9030 <__ssvfscanf_r+0x19c>
    912e:	465c      	mov	r4, fp
    9130:	4b2e      	ldr	r3, [pc, #184]	; (91ec <__ssvfscanf_r+0x358>)
    9132:	9309      	str	r3, [sp, #36]	; 0x24
    9134:	2308      	movs	r3, #8
    9136:	9305      	str	r3, [sp, #20]
    9138:	3b05      	subs	r3, #5
    913a:	469b      	mov	fp, r3
    913c:	e755      	b.n	8fea <__ssvfscanf_r+0x156>
    913e:	9b03      	ldr	r3, [sp, #12]
    9140:	469a      	mov	sl, r3
    9142:	464b      	mov	r3, r9
    9144:	06db      	lsls	r3, r3, #27
    9146:	d500      	bpl.n	914a <__ssvfscanf_r+0x2b6>
    9148:	e6ea      	b.n	8f20 <__ssvfscanf_r+0x8c>
    914a:	464b      	mov	r3, r9
    914c:	075b      	lsls	r3, r3, #29
    914e:	d501      	bpl.n	9154 <__ssvfscanf_r+0x2c0>
    9150:	f000 fce2 	bl	9b18 <__ssvfscanf_r+0xc84>
    9154:	464b      	mov	r3, r9
    9156:	07db      	lsls	r3, r3, #31
    9158:	d500      	bpl.n	915c <__ssvfscanf_r+0x2c8>
    915a:	e30e      	b.n	977a <__ssvfscanf_r+0x8e6>
    915c:	464b      	mov	r3, r9
    915e:	079b      	lsls	r3, r3, #30
    9160:	d400      	bmi.n	9164 <__ssvfscanf_r+0x2d0>
    9162:	e30a      	b.n	977a <__ssvfscanf_r+0x8e6>
    9164:	9907      	ldr	r1, [sp, #28]
    9166:	17fa      	asrs	r2, r7, #31
    9168:	680b      	ldr	r3, [r1, #0]
    916a:	4654      	mov	r4, sl
    916c:	601f      	str	r7, [r3, #0]
    916e:	605a      	str	r2, [r3, #4]
    9170:	000b      	movs	r3, r1
    9172:	3304      	adds	r3, #4
    9174:	9307      	str	r3, [sp, #28]
    9176:	e6d4      	b.n	8f22 <__ssvfscanf_r+0x8e>
    9178:	464b      	mov	r3, r9
    917a:	4303      	orrs	r3, r0
    917c:	4699      	mov	r9, r3
    917e:	4653      	mov	r3, sl
    9180:	9903      	ldr	r1, [sp, #12]
    9182:	785b      	ldrb	r3, [r3, #1]
    9184:	468a      	mov	sl, r1
    9186:	e6e9      	b.n	8f5c <__ssvfscanf_r+0xc8>
    9188:	465c      	mov	r4, fp
    918a:	4b17      	ldr	r3, [pc, #92]	; (91e8 <__ssvfscanf_r+0x354>)
    918c:	e750      	b.n	9030 <__ssvfscanf_r+0x19c>
    918e:	2340      	movs	r3, #64	; 0x40
    9190:	464a      	mov	r2, r9
    9192:	431a      	orrs	r2, r3
    9194:	2300      	movs	r3, #0
    9196:	465c      	mov	r4, fp
    9198:	4691      	mov	r9, r2
    919a:	469b      	mov	fp, r3
    919c:	e725      	b.n	8fea <__ssvfscanf_r+0x156>
    919e:	ab14      	add	r3, sp, #80	; 0x50
    91a0:	0018      	movs	r0, r3
    91a2:	9903      	ldr	r1, [sp, #12]
    91a4:	f005 f9b0 	bl	e508 <__sccl>
    91a8:	2340      	movs	r3, #64	; 0x40
    91aa:	464a      	mov	r2, r9
    91ac:	431a      	orrs	r2, r3
    91ae:	3b3f      	subs	r3, #63	; 0x3f
    91b0:	465c      	mov	r4, fp
    91b2:	9003      	str	r0, [sp, #12]
    91b4:	4691      	mov	r9, r2
    91b6:	469b      	mov	fp, r3
    91b8:	e717      	b.n	8fea <__ssvfscanf_r+0x156>
    91ba:	465c      	mov	r4, fp
    91bc:	2380      	movs	r3, #128	; 0x80
    91be:	e78c      	b.n	90da <__ssvfscanf_r+0x246>
    91c0:	464a      	mov	r2, r9
    91c2:	2301      	movs	r3, #1
    91c4:	431a      	orrs	r2, r3
    91c6:	465c      	mov	r4, fp
    91c8:	4691      	mov	r9, r2
    91ca:	e7b1      	b.n	9130 <__ssvfscanf_r+0x29c>
    91cc:	464b      	mov	r3, r9
    91ce:	4313      	orrs	r3, r2
    91d0:	e7d4      	b.n	917c <__ssvfscanf_r+0x2e8>
    91d2:	2304      	movs	r3, #4
    91d4:	465c      	mov	r4, fp
    91d6:	469b      	mov	fp, r3
    91d8:	e707      	b.n	8fea <__ssvfscanf_r+0x156>
    91da:	46c0      	nop			; (mov r8, r8)
    91dc:	fffffd4c 	.word	0xfffffd4c
    91e0:	ffffdfff 	.word	0xffffdfff
    91e4:	00013a18 	.word	0x00013a18
    91e8:	00007869 	.word	0x00007869
    91ec:	0000f791 	.word	0x0000f791
    91f0:	00013bfc 	.word	0x00013bfc
    91f4:	2301      	movs	r3, #1
    91f6:	464a      	mov	r2, r9
    91f8:	431a      	orrs	r2, r3
    91fa:	465c      	mov	r4, fp
    91fc:	4691      	mov	r9, r2
    91fe:	4bc5      	ldr	r3, [pc, #788]	; (9514 <__ssvfscanf_r+0x680>)
    9200:	e716      	b.n	9030 <__ssvfscanf_r+0x19c>
    9202:	4659      	mov	r1, fp
    9204:	008c      	lsls	r4, r1, #2
    9206:	2130      	movs	r1, #48	; 0x30
    9208:	4249      	negs	r1, r1
    920a:	445c      	add	r4, fp
    920c:	468b      	mov	fp, r1
    920e:	0064      	lsls	r4, r4, #1
    9210:	18e3      	adds	r3, r4, r3
    9212:	449b      	add	fp, r3
    9214:	4653      	mov	r3, sl
    9216:	9903      	ldr	r1, [sp, #12]
    9218:	785b      	ldrb	r3, [r3, #1]
    921a:	468a      	mov	sl, r1
    921c:	e69e      	b.n	8f5c <__ssvfscanf_r+0xc8>
    921e:	464b      	mov	r3, r9
    9220:	2110      	movs	r1, #16
    9222:	430b      	orrs	r3, r1
    9224:	e7aa      	b.n	917c <__ssvfscanf_r+0x2e8>
    9226:	9b04      	ldr	r3, [sp, #16]
    9228:	445b      	add	r3, fp
    922a:	2b00      	cmp	r3, #0
    922c:	d111      	bne.n	9252 <__ssvfscanf_r+0x3be>
    922e:	4648      	mov	r0, r9
    9230:	4bb9      	ldr	r3, [pc, #740]	; (9518 <__ssvfscanf_r+0x684>)
    9232:	4018      	ands	r0, r3
    9234:	4681      	mov	r9, r0
    9236:	7039      	strb	r1, [r7, #0]
    9238:	3701      	adds	r7, #1
    923a:	6873      	ldr	r3, [r6, #4]
    923c:	3c01      	subs	r4, #1
    923e:	3b01      	subs	r3, #1
    9240:	3501      	adds	r5, #1
    9242:	6073      	str	r3, [r6, #4]
    9244:	2b00      	cmp	r3, #0
    9246:	dd23      	ble.n	9290 <__ssvfscanf_r+0x3fc>
    9248:	3201      	adds	r2, #1
    924a:	6032      	str	r2, [r6, #0]
    924c:	2c00      	cmp	r4, #0
    924e:	d000      	beq.n	9252 <__ssvfscanf_r+0x3be>
    9250:	e731      	b.n	90b6 <__ssvfscanf_r+0x222>
    9252:	465b      	mov	r3, fp
    9254:	46bb      	mov	fp, r7
    9256:	002f      	movs	r7, r5
    9258:	001d      	movs	r5, r3
    925a:	9b06      	ldr	r3, [sp, #24]
    925c:	2b00      	cmp	r3, #0
    925e:	d056      	beq.n	930e <__ssvfscanf_r+0x47a>
    9260:	e251      	b.n	9706 <__ssvfscanf_r+0x872>
    9262:	464b      	mov	r3, r9
    9264:	05db      	lsls	r3, r3, #23
    9266:	d5de      	bpl.n	9226 <__ssvfscanf_r+0x392>
    9268:	2380      	movs	r3, #128	; 0x80
    926a:	4649      	mov	r1, r9
    926c:	4399      	bics	r1, r3
    926e:	9b06      	ldr	r3, [sp, #24]
    9270:	4689      	mov	r9, r1
    9272:	3301      	adds	r3, #1
    9274:	9306      	str	r3, [sp, #24]
    9276:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9278:	2b00      	cmp	r3, #0
    927a:	d0de      	beq.n	923a <__ssvfscanf_r+0x3a6>
    927c:	3b01      	subs	r3, #1
    927e:	930d      	str	r3, [sp, #52]	; 0x34
    9280:	6873      	ldr	r3, [r6, #4]
    9282:	3401      	adds	r4, #1
    9284:	3b01      	subs	r3, #1
    9286:	3c01      	subs	r4, #1
    9288:	3501      	adds	r5, #1
    928a:	6073      	str	r3, [r6, #4]
    928c:	2b00      	cmp	r3, #0
    928e:	dcdb      	bgt.n	9248 <__ssvfscanf_r+0x3b4>
    9290:	0031      	movs	r1, r6
    9292:	4640      	mov	r0, r8
    9294:	f006 fc54 	bl	fb40 <__ssrefill_r>
    9298:	2800      	cmp	r0, #0
    929a:	d0d7      	beq.n	924c <__ssvfscanf_r+0x3b8>
    929c:	e7d9      	b.n	9252 <__ssvfscanf_r+0x3be>
    929e:	2380      	movs	r3, #128	; 0x80
    92a0:	4648      	mov	r0, r9
    92a2:	4203      	tst	r3, r0
    92a4:	d0d5      	beq.n	9252 <__ssvfscanf_r+0x3be>
    92a6:	4398      	bics	r0, r3
    92a8:	4681      	mov	r9, r0
    92aa:	e7c4      	b.n	9236 <__ssvfscanf_r+0x3a2>
    92ac:	465b      	mov	r3, fp
    92ae:	2b06      	cmp	r3, #6
    92b0:	d1d0      	bne.n	9254 <__ssvfscanf_r+0x3c0>
    92b2:	2307      	movs	r3, #7
    92b4:	469b      	mov	fp, r3
    92b6:	e7be      	b.n	9236 <__ssvfscanf_r+0x3a2>
    92b8:	9b04      	ldr	r3, [sp, #16]
    92ba:	2b00      	cmp	r3, #0
    92bc:	d000      	beq.n	92c0 <__ssvfscanf_r+0x42c>
    92be:	e121      	b.n	9504 <__ssvfscanf_r+0x670>
    92c0:	9b06      	ldr	r3, [sp, #24]
    92c2:	2b00      	cmp	r3, #0
    92c4:	d106      	bne.n	92d4 <__ssvfscanf_r+0x440>
    92c6:	23e0      	movs	r3, #224	; 0xe0
    92c8:	4648      	mov	r0, r9
    92ca:	00db      	lsls	r3, r3, #3
    92cc:	4018      	ands	r0, r3
    92ce:	4298      	cmp	r0, r3
    92d0:	d100      	bne.n	92d4 <__ssvfscanf_r+0x440>
    92d2:	e3db      	b.n	9a8c <__ssvfscanf_r+0xbf8>
    92d4:	465b      	mov	r3, fp
    92d6:	2b01      	cmp	r3, #1
    92d8:	d001      	beq.n	92de <__ssvfscanf_r+0x44a>
    92da:	2b04      	cmp	r3, #4
    92dc:	d1b9      	bne.n	9252 <__ssvfscanf_r+0x3be>
    92de:	465b      	mov	r3, fp
    92e0:	3301      	adds	r3, #1
    92e2:	b2db      	uxtb	r3, r3
    92e4:	469b      	mov	fp, r3
    92e6:	e7a6      	b.n	9236 <__ssvfscanf_r+0x3a2>
    92e8:	465b      	mov	r3, fp
    92ea:	2b00      	cmp	r3, #0
    92ec:	d000      	beq.n	92f0 <__ssvfscanf_r+0x45c>
    92ee:	e0ff      	b.n	94f0 <__ssvfscanf_r+0x65c>
    92f0:	9b06      	ldr	r3, [sp, #24]
    92f2:	2b00      	cmp	r3, #0
    92f4:	d000      	beq.n	92f8 <__ssvfscanf_r+0x464>
    92f6:	e202      	b.n	96fe <__ssvfscanf_r+0x86a>
    92f8:	23e0      	movs	r3, #224	; 0xe0
    92fa:	4648      	mov	r0, r9
    92fc:	00db      	lsls	r3, r3, #3
    92fe:	4018      	ands	r0, r3
    9300:	4298      	cmp	r0, r3
    9302:	d100      	bne.n	9306 <__ssvfscanf_r+0x472>
    9304:	e3ba      	b.n	9a7c <__ssvfscanf_r+0xbe8>
    9306:	465b      	mov	r3, fp
    9308:	46bb      	mov	fp, r7
    930a:	002f      	movs	r7, r5
    930c:	001d      	movs	r5, r3
    930e:	9b04      	ldr	r3, [sp, #16]
    9310:	3b01      	subs	r3, #1
    9312:	2b01      	cmp	r3, #1
    9314:	d801      	bhi.n	931a <__ssvfscanf_r+0x486>
    9316:	f000 fc63 	bl	9be0 <__ssvfscanf_r+0xd4c>
    931a:	1e6b      	subs	r3, r5, #1
    931c:	2b06      	cmp	r3, #6
    931e:	d820      	bhi.n	9362 <__ssvfscanf_r+0x4ce>
    9320:	2d02      	cmp	r5, #2
    9322:	d801      	bhi.n	9328 <__ssvfscanf_r+0x494>
    9324:	f000 fc6e 	bl	9c04 <__ssvfscanf_r+0xd70>
    9328:	2d03      	cmp	r5, #3
    932a:	d01a      	beq.n	9362 <__ssvfscanf_r+0x4ce>
    932c:	3d04      	subs	r5, #4
    932e:	b2ed      	uxtb	r5, r5
    9330:	43ec      	mvns	r4, r5
    9332:	0033      	movs	r3, r6
    9334:	445c      	add	r4, fp
    9336:	46aa      	mov	sl, r5
    9338:	4646      	mov	r6, r8
    933a:	0025      	movs	r5, r4
    933c:	46b8      	mov	r8, r7
    933e:	465c      	mov	r4, fp
    9340:	001f      	movs	r7, r3
    9342:	3c01      	subs	r4, #1
    9344:	7821      	ldrb	r1, [r4, #0]
    9346:	003a      	movs	r2, r7
    9348:	0030      	movs	r0, r6
    934a:	f006 fbb7 	bl	fabc <_sungetc_r>
    934e:	42a5      	cmp	r5, r4
    9350:	d1f7      	bne.n	9342 <__ssvfscanf_r+0x4ae>
    9352:	003b      	movs	r3, r7
    9354:	4647      	mov	r7, r8
    9356:	4655      	mov	r5, sl
    9358:	46b0      	mov	r8, r6
    935a:	46a3      	mov	fp, r4
    935c:	001e      	movs	r6, r3
    935e:	3f01      	subs	r7, #1
    9360:	1b7f      	subs	r7, r7, r5
    9362:	464b      	mov	r3, r9
    9364:	05db      	lsls	r3, r3, #23
    9366:	d519      	bpl.n	939c <__ssvfscanf_r+0x508>
    9368:	464b      	mov	r3, r9
    936a:	055b      	lsls	r3, r3, #21
    936c:	d501      	bpl.n	9372 <__ssvfscanf_r+0x4de>
    936e:	f000 fc5b 	bl	9c28 <__ssvfscanf_r+0xd94>
    9372:	465b      	mov	r3, fp
    9374:	1e5c      	subs	r4, r3, #1
    9376:	7821      	ldrb	r1, [r4, #0]
    9378:	1e7d      	subs	r5, r7, #1
    937a:	2965      	cmp	r1, #101	; 0x65
    937c:	d008      	beq.n	9390 <__ssvfscanf_r+0x4fc>
    937e:	2945      	cmp	r1, #69	; 0x45
    9380:	d006      	beq.n	9390 <__ssvfscanf_r+0x4fc>
    9382:	0032      	movs	r2, r6
    9384:	4640      	mov	r0, r8
    9386:	3c01      	subs	r4, #1
    9388:	f006 fb98 	bl	fabc <_sungetc_r>
    938c:	7821      	ldrb	r1, [r4, #0]
    938e:	1ebd      	subs	r5, r7, #2
    9390:	0032      	movs	r2, r6
    9392:	4640      	mov	r0, r8
    9394:	f006 fb92 	bl	fabc <_sungetc_r>
    9398:	002f      	movs	r7, r5
    939a:	46a3      	mov	fp, r4
    939c:	464a      	mov	r2, r9
    939e:	2310      	movs	r3, #16
    93a0:	4013      	ands	r3, r2
    93a2:	9a03      	ldr	r2, [sp, #12]
    93a4:	4692      	mov	sl, r2
    93a6:	d000      	beq.n	93aa <__ssvfscanf_r+0x516>
    93a8:	e5ba      	b.n	8f20 <__ssvfscanf_r+0x8c>
    93aa:	465a      	mov	r2, fp
    93ac:	7013      	strb	r3, [r2, #0]
    93ae:	23c0      	movs	r3, #192	; 0xc0
    93b0:	464a      	mov	r2, r9
    93b2:	00db      	lsls	r3, r3, #3
    93b4:	4013      	ands	r3, r2
    93b6:	2280      	movs	r2, #128	; 0x80
    93b8:	00d2      	lsls	r2, r2, #3
    93ba:	4293      	cmp	r3, r2
    93bc:	d100      	bne.n	93c0 <__ssvfscanf_r+0x52c>
    93be:	e389      	b.n	9ad4 <__ssvfscanf_r+0xc40>
    93c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    93c2:	2b00      	cmp	r3, #0
    93c4:	d000      	beq.n	93c8 <__ssvfscanf_r+0x534>
    93c6:	e1c0      	b.n	974a <__ssvfscanf_r+0x8b6>
    93c8:	2200      	movs	r2, #0
    93ca:	990a      	ldr	r1, [sp, #40]	; 0x28
    93cc:	4640      	mov	r0, r8
    93ce:	f006 f839 	bl	f444 <_strtod_r>
    93d2:	464b      	mov	r3, r9
    93d4:	0004      	movs	r4, r0
    93d6:	000d      	movs	r5, r1
    93d8:	07db      	lsls	r3, r3, #31
    93da:	d403      	bmi.n	93e4 <__ssvfscanf_r+0x550>
    93dc:	464b      	mov	r3, r9
    93de:	079b      	lsls	r3, r3, #30
    93e0:	d400      	bmi.n	93e4 <__ssvfscanf_r+0x550>
    93e2:	e198      	b.n	9716 <__ssvfscanf_r+0x882>
    93e4:	9a07      	ldr	r2, [sp, #28]
    93e6:	6813      	ldr	r3, [r2, #0]
    93e8:	601c      	str	r4, [r3, #0]
    93ea:	605d      	str	r5, [r3, #4]
    93ec:	0013      	movs	r3, r2
    93ee:	3304      	adds	r3, #4
    93f0:	9307      	str	r3, [sp, #28]
    93f2:	9b08      	ldr	r3, [sp, #32]
    93f4:	3301      	adds	r3, #1
    93f6:	9308      	str	r3, [sp, #32]
    93f8:	9b03      	ldr	r3, [sp, #12]
    93fa:	469a      	mov	sl, r3
    93fc:	4654      	mov	r4, sl
    93fe:	e590      	b.n	8f22 <__ssvfscanf_r+0x8e>
    9400:	465b      	mov	r3, fp
    9402:	2b02      	cmp	r3, #2
    9404:	d000      	beq.n	9408 <__ssvfscanf_r+0x574>
    9406:	e725      	b.n	9254 <__ssvfscanf_r+0x3c0>
    9408:	2303      	movs	r3, #3
    940a:	469b      	mov	fp, r3
    940c:	e713      	b.n	9236 <__ssvfscanf_r+0x3a2>
    940e:	23a0      	movs	r3, #160	; 0xa0
    9410:	4648      	mov	r0, r9
    9412:	00db      	lsls	r3, r3, #3
    9414:	4003      	ands	r3, r0
    9416:	2080      	movs	r0, #128	; 0x80
    9418:	00c0      	lsls	r0, r0, #3
    941a:	4283      	cmp	r3, r0
    941c:	d007      	beq.n	942e <__ssvfscanf_r+0x59a>
    941e:	464b      	mov	r3, r9
    9420:	4203      	tst	r3, r0
    9422:	d100      	bne.n	9426 <__ssvfscanf_r+0x592>
    9424:	e715      	b.n	9252 <__ssvfscanf_r+0x3be>
    9426:	9b06      	ldr	r3, [sp, #24]
    9428:	2b00      	cmp	r3, #0
    942a:	d100      	bne.n	942e <__ssvfscanf_r+0x59a>
    942c:	e76b      	b.n	9306 <__ssvfscanf_r+0x472>
    942e:	2080      	movs	r0, #128	; 0x80
    9430:	464b      	mov	r3, r9
    9432:	0080      	lsls	r0, r0, #2
    9434:	4203      	tst	r3, r0
    9436:	d104      	bne.n	9442 <__ssvfscanf_r+0x5ae>
    9438:	9b06      	ldr	r3, [sp, #24]
    943a:	980b      	ldr	r0, [sp, #44]	; 0x2c
    943c:	970e      	str	r7, [sp, #56]	; 0x38
    943e:	1a1b      	subs	r3, r3, r0
    9440:	930f      	str	r3, [sp, #60]	; 0x3c
    9442:	4648      	mov	r0, r9
    9444:	4b35      	ldr	r3, [pc, #212]	; (951c <__ssvfscanf_r+0x688>)
    9446:	4018      	ands	r0, r3
    9448:	0003      	movs	r3, r0
    944a:	20c0      	movs	r0, #192	; 0xc0
    944c:	0040      	lsls	r0, r0, #1
    944e:	4318      	orrs	r0, r3
    9450:	2300      	movs	r3, #0
    9452:	4681      	mov	r9, r0
    9454:	9306      	str	r3, [sp, #24]
    9456:	e6ee      	b.n	9236 <__ssvfscanf_r+0x3a2>
    9458:	9b04      	ldr	r3, [sp, #16]
    945a:	2b01      	cmp	r3, #1
    945c:	d000      	beq.n	9460 <__ssvfscanf_r+0x5cc>
    945e:	e6f8      	b.n	9252 <__ssvfscanf_r+0x3be>
    9460:	2302      	movs	r3, #2
    9462:	9304      	str	r3, [sp, #16]
    9464:	e6e7      	b.n	9236 <__ssvfscanf_r+0x3a2>
    9466:	465b      	mov	r3, fp
    9468:	2b07      	cmp	r3, #7
    946a:	d000      	beq.n	946e <__ssvfscanf_r+0x5da>
    946c:	e6f2      	b.n	9254 <__ssvfscanf_r+0x3c0>
    946e:	2308      	movs	r3, #8
    9470:	469b      	mov	fp, r3
    9472:	e6e0      	b.n	9236 <__ssvfscanf_r+0x3a2>
    9474:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9476:	781b      	ldrb	r3, [r3, #0]
    9478:	428b      	cmp	r3, r1
    947a:	d000      	beq.n	947e <__ssvfscanf_r+0x5ea>
    947c:	e6e9      	b.n	9252 <__ssvfscanf_r+0x3be>
    947e:	2080      	movs	r0, #128	; 0x80
    9480:	464b      	mov	r3, r9
    9482:	0080      	lsls	r0, r0, #2
    9484:	4203      	tst	r3, r0
    9486:	d100      	bne.n	948a <__ssvfscanf_r+0x5f6>
    9488:	e6e3      	b.n	9252 <__ssvfscanf_r+0x3be>
    948a:	4825      	ldr	r0, [pc, #148]	; (9520 <__ssvfscanf_r+0x68c>)
    948c:	4003      	ands	r3, r0
    948e:	4699      	mov	r9, r3
    9490:	9b06      	ldr	r3, [sp, #24]
    9492:	930b      	str	r3, [sp, #44]	; 0x2c
    9494:	e6cf      	b.n	9236 <__ssvfscanf_r+0x3a2>
    9496:	2b01      	cmp	r3, #1
    9498:	d144      	bne.n	9524 <__ssvfscanf_r+0x690>
    949a:	2c00      	cmp	r4, #0
    949c:	d100      	bne.n	94a0 <__ssvfscanf_r+0x60c>
    949e:	3c01      	subs	r4, #1
    94a0:	464b      	mov	r3, r9
    94a2:	06db      	lsls	r3, r3, #27
    94a4:	d400      	bmi.n	94a8 <__ssvfscanf_r+0x614>
    94a6:	e1c1      	b.n	982c <__ssvfscanf_r+0x998>
    94a8:	ab14      	add	r3, sp, #80	; 0x50
    94aa:	2500      	movs	r5, #0
    94ac:	469a      	mov	sl, r3
    94ae:	6832      	ldr	r2, [r6, #0]
    94b0:	4651      	mov	r1, sl
    94b2:	7813      	ldrb	r3, [r2, #0]
    94b4:	5ccb      	ldrb	r3, [r1, r3]
    94b6:	2b00      	cmp	r3, #0
    94b8:	d015      	beq.n	94e6 <__ssvfscanf_r+0x652>
    94ba:	6873      	ldr	r3, [r6, #4]
    94bc:	3201      	adds	r2, #1
    94be:	3b01      	subs	r3, #1
    94c0:	3501      	adds	r5, #1
    94c2:	6073      	str	r3, [r6, #4]
    94c4:	6032      	str	r2, [r6, #0]
    94c6:	42ac      	cmp	r4, r5
    94c8:	d010      	beq.n	94ec <__ssvfscanf_r+0x658>
    94ca:	2b00      	cmp	r3, #0
    94cc:	dcf0      	bgt.n	94b0 <__ssvfscanf_r+0x61c>
    94ce:	0031      	movs	r1, r6
    94d0:	4640      	mov	r0, r8
    94d2:	f006 fb35 	bl	fb40 <__ssrefill_r>
    94d6:	2800      	cmp	r0, #0
    94d8:	d108      	bne.n	94ec <__ssvfscanf_r+0x658>
    94da:	4651      	mov	r1, sl
    94dc:	6832      	ldr	r2, [r6, #0]
    94de:	7813      	ldrb	r3, [r2, #0]
    94e0:	5ccb      	ldrb	r3, [r1, r3]
    94e2:	2b00      	cmp	r3, #0
    94e4:	d1e9      	bne.n	94ba <__ssvfscanf_r+0x626>
    94e6:	2d00      	cmp	r5, #0
    94e8:	d100      	bne.n	94ec <__ssvfscanf_r+0x658>
    94ea:	e520      	b.n	8f2e <__ssvfscanf_r+0x9a>
    94ec:	197f      	adds	r7, r7, r5
    94ee:	e783      	b.n	93f8 <__ssvfscanf_r+0x564>
    94f0:	465b      	mov	r3, fp
    94f2:	20fd      	movs	r0, #253	; 0xfd
    94f4:	3b03      	subs	r3, #3
    94f6:	4203      	tst	r3, r0
    94f8:	d000      	beq.n	94fc <__ssvfscanf_r+0x668>
    94fa:	e6aa      	b.n	9252 <__ssvfscanf_r+0x3be>
    94fc:	3304      	adds	r3, #4
    94fe:	b2db      	uxtb	r3, r3
    9500:	469b      	mov	fp, r3
    9502:	e698      	b.n	9236 <__ssvfscanf_r+0x3a2>
    9504:	9b04      	ldr	r3, [sp, #16]
    9506:	2b02      	cmp	r3, #2
    9508:	d000      	beq.n	950c <__ssvfscanf_r+0x678>
    950a:	e6e3      	b.n	92d4 <__ssvfscanf_r+0x440>
    950c:	2303      	movs	r3, #3
    950e:	9304      	str	r3, [sp, #16]
    9510:	e691      	b.n	9236 <__ssvfscanf_r+0x3a2>
    9512:	46c0      	nop			; (mov r8, r8)
    9514:	00007869 	.word	0x00007869
    9518:	fffffe7f 	.word	0xfffffe7f
    951c:	fffff87f 	.word	0xfffff87f
    9520:	fffffd7f 	.word	0xfffffd7f
    9524:	2c00      	cmp	r4, #0
    9526:	d100      	bne.n	952a <__ssvfscanf_r+0x696>
    9528:	3401      	adds	r4, #1
    952a:	464b      	mov	r3, r9
    952c:	07db      	lsls	r3, r3, #31
    952e:	d500      	bpl.n	9532 <__ssvfscanf_r+0x69e>
    9530:	e1aa      	b.n	9888 <__ssvfscanf_r+0x9f4>
    9532:	464b      	mov	r3, r9
    9534:	06db      	lsls	r3, r3, #27
    9536:	d400      	bmi.n	953a <__ssvfscanf_r+0x6a6>
    9538:	e22f      	b.n	999a <__ssvfscanf_r+0xb06>
    953a:	4643      	mov	r3, r8
    953c:	2500      	movs	r5, #0
    953e:	46b8      	mov	r8, r7
    9540:	001f      	movs	r7, r3
    9542:	e00c      	b.n	955e <__ssvfscanf_r+0x6ca>
    9544:	6832      	ldr	r2, [r6, #0]
    9546:	18ed      	adds	r5, r5, r3
    9548:	4694      	mov	ip, r2
    954a:	1ae4      	subs	r4, r4, r3
    954c:	4463      	add	r3, ip
    954e:	6033      	str	r3, [r6, #0]
    9550:	0031      	movs	r1, r6
    9552:	0038      	movs	r0, r7
    9554:	f006 faf4 	bl	fb40 <__ssrefill_r>
    9558:	2800      	cmp	r0, #0
    955a:	d000      	beq.n	955e <__ssvfscanf_r+0x6ca>
    955c:	e214      	b.n	9988 <__ssvfscanf_r+0xaf4>
    955e:	6873      	ldr	r3, [r6, #4]
    9560:	42a3      	cmp	r3, r4
    9562:	dbef      	blt.n	9544 <__ssvfscanf_r+0x6b0>
    9564:	1b1b      	subs	r3, r3, r4
    9566:	6073      	str	r3, [r6, #4]
    9568:	6833      	ldr	r3, [r6, #0]
    956a:	003a      	movs	r2, r7
    956c:	469c      	mov	ip, r3
    956e:	4647      	mov	r7, r8
    9570:	192d      	adds	r5, r5, r4
    9572:	4464      	add	r4, ip
    9574:	4690      	mov	r8, r2
    9576:	6034      	str	r4, [r6, #0]
    9578:	197f      	adds	r7, r7, r5
    957a:	e73d      	b.n	93f8 <__ssvfscanf_r+0x564>
    957c:	22ae      	movs	r2, #174	; 0xae
    957e:	2100      	movs	r1, #0
    9580:	1e63      	subs	r3, r4, #1
    9582:	0052      	lsls	r2, r2, #1
    9584:	468b      	mov	fp, r1
    9586:	4293      	cmp	r3, r2
    9588:	d904      	bls.n	9594 <__ssvfscanf_r+0x700>
    958a:	4bcb      	ldr	r3, [pc, #812]	; (98b8 <__ssvfscanf_r+0xa24>)
    958c:	469b      	mov	fp, r3
    958e:	44a3      	add	fp, r4
    9590:	245e      	movs	r4, #94	; 0x5e
    9592:	34ff      	adds	r4, #255	; 0xff
    9594:	23d8      	movs	r3, #216	; 0xd8
    9596:	464a      	mov	r2, r9
    9598:	011b      	lsls	r3, r3, #4
    959a:	431a      	orrs	r2, r3
    959c:	2300      	movs	r3, #0
    959e:	469a      	mov	sl, r3
    95a0:	ab54      	add	r3, sp, #336	; 0x150
    95a2:	930a      	str	r3, [sp, #40]	; 0x28
    95a4:	001d      	movs	r5, r3
    95a6:	003b      	movs	r3, r7
    95a8:	0017      	movs	r7, r2
    95aa:	4699      	mov	r9, r3
    95ac:	6832      	ldr	r2, [r6, #0]
    95ae:	7811      	ldrb	r1, [r2, #0]
    95b0:	000b      	movs	r3, r1
    95b2:	3b2b      	subs	r3, #43	; 0x2b
    95b4:	b2db      	uxtb	r3, r3
    95b6:	2b4d      	cmp	r3, #77	; 0x4d
    95b8:	d81d      	bhi.n	95f6 <__ssvfscanf_r+0x762>
    95ba:	48c0      	ldr	r0, [pc, #768]	; (98bc <__ssvfscanf_r+0xa28>)
    95bc:	009b      	lsls	r3, r3, #2
    95be:	58c3      	ldr	r3, [r0, r3]
    95c0:	469f      	mov	pc, r3
    95c2:	23c0      	movs	r3, #192	; 0xc0
    95c4:	2080      	movs	r0, #128	; 0x80
    95c6:	00db      	lsls	r3, r3, #3
    95c8:	403b      	ands	r3, r7
    95ca:	0080      	lsls	r0, r0, #2
    95cc:	4283      	cmp	r3, r0
    95ce:	d112      	bne.n	95f6 <__ssvfscanf_r+0x762>
    95d0:	4bbb      	ldr	r3, [pc, #748]	; (98c0 <__ssvfscanf_r+0xa2c>)
    95d2:	401f      	ands	r7, r3
    95d4:	23a0      	movs	r3, #160	; 0xa0
    95d6:	00db      	lsls	r3, r3, #3
    95d8:	431f      	orrs	r7, r3
    95da:	2310      	movs	r3, #16
    95dc:	9305      	str	r3, [sp, #20]
    95de:	6873      	ldr	r3, [r6, #4]
    95e0:	7029      	strb	r1, [r5, #0]
    95e2:	3b01      	subs	r3, #1
    95e4:	3501      	adds	r5, #1
    95e6:	6073      	str	r3, [r6, #4]
    95e8:	2b00      	cmp	r3, #0
    95ea:	dd49      	ble.n	9680 <__ssvfscanf_r+0x7ec>
    95ec:	3201      	adds	r2, #1
    95ee:	6032      	str	r2, [r6, #0]
    95f0:	3c01      	subs	r4, #1
    95f2:	2c00      	cmp	r4, #0
    95f4:	d1da      	bne.n	95ac <__ssvfscanf_r+0x718>
    95f6:	464b      	mov	r3, r9
    95f8:	46b9      	mov	r9, r7
    95fa:	001f      	movs	r7, r3
    95fc:	464b      	mov	r3, r9
    95fe:	05db      	lsls	r3, r3, #23
    9600:	d507      	bpl.n	9612 <__ssvfscanf_r+0x77e>
    9602:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9604:	429d      	cmp	r5, r3
    9606:	d900      	bls.n	960a <__ssvfscanf_r+0x776>
    9608:	e231      	b.n	9a6e <__ssvfscanf_r+0xbda>
    960a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    960c:	429d      	cmp	r5, r3
    960e:	d100      	bne.n	9612 <__ssvfscanf_r+0x77e>
    9610:	e48d      	b.n	8f2e <__ssvfscanf_r+0x9a>
    9612:	2310      	movs	r3, #16
    9614:	464a      	mov	r2, r9
    9616:	4013      	ands	r3, r2
    9618:	d100      	bne.n	961c <__ssvfscanf_r+0x788>
    961a:	e0b7      	b.n	978c <__ssvfscanf_r+0x8f8>
    961c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    961e:	1aed      	subs	r5, r5, r3
    9620:	4455      	add	r5, sl
    9622:	197f      	adds	r7, r7, r5
    9624:	e6e8      	b.n	93f8 <__ssvfscanf_r+0x564>
    9626:	9b05      	ldr	r3, [sp, #20]
    9628:	2b0a      	cmp	r3, #10
    962a:	dde4      	ble.n	95f6 <__ssvfscanf_r+0x762>
    962c:	4ba5      	ldr	r3, [pc, #660]	; (98c4 <__ssvfscanf_r+0xa30>)
    962e:	401f      	ands	r7, r3
    9630:	e7d5      	b.n	95de <__ssvfscanf_r+0x74a>
    9632:	9b05      	ldr	r3, [sp, #20]
    9634:	48a4      	ldr	r0, [pc, #656]	; (98c8 <__ssvfscanf_r+0xa34>)
    9636:	005b      	lsls	r3, r3, #1
    9638:	5e1b      	ldrsh	r3, [r3, r0]
    963a:	9305      	str	r3, [sp, #20]
    963c:	4ba1      	ldr	r3, [pc, #644]	; (98c4 <__ssvfscanf_r+0xa30>)
    963e:	401f      	ands	r7, r3
    9640:	e7cd      	b.n	95de <__ssvfscanf_r+0x74a>
    9642:	053b      	lsls	r3, r7, #20
    9644:	d5cb      	bpl.n	95de <__ssvfscanf_r+0x74a>
    9646:	9b05      	ldr	r3, [sp, #20]
    9648:	2b00      	cmp	r3, #0
    964a:	d105      	bne.n	9658 <__ssvfscanf_r+0x7c4>
    964c:	2380      	movs	r3, #128	; 0x80
    964e:	009b      	lsls	r3, r3, #2
    9650:	431f      	orrs	r7, r3
    9652:	3bf9      	subs	r3, #249	; 0xf9
    9654:	3bff      	subs	r3, #255	; 0xff
    9656:	9305      	str	r3, [sp, #20]
    9658:	057b      	lsls	r3, r7, #21
    965a:	d459      	bmi.n	9710 <__ssvfscanf_r+0x87c>
    965c:	4b9b      	ldr	r3, [pc, #620]	; (98cc <__ssvfscanf_r+0xa38>)
    965e:	401f      	ands	r7, r3
    9660:	465b      	mov	r3, fp
    9662:	2b00      	cmp	r3, #0
    9664:	d004      	beq.n	9670 <__ssvfscanf_r+0x7dc>
    9666:	2301      	movs	r3, #1
    9668:	425b      	negs	r3, r3
    966a:	469c      	mov	ip, r3
    966c:	3401      	adds	r4, #1
    966e:	44e3      	add	fp, ip
    9670:	2301      	movs	r3, #1
    9672:	469c      	mov	ip, r3
    9674:	6873      	ldr	r3, [r6, #4]
    9676:	44e2      	add	sl, ip
    9678:	3b01      	subs	r3, #1
    967a:	6073      	str	r3, [r6, #4]
    967c:	2b00      	cmp	r3, #0
    967e:	dcb5      	bgt.n	95ec <__ssvfscanf_r+0x758>
    9680:	0031      	movs	r1, r6
    9682:	4640      	mov	r0, r8
    9684:	f006 fa5c 	bl	fb40 <__ssrefill_r>
    9688:	2800      	cmp	r0, #0
    968a:	d0b1      	beq.n	95f0 <__ssvfscanf_r+0x75c>
    968c:	e7b3      	b.n	95f6 <__ssvfscanf_r+0x762>
    968e:	9b05      	ldr	r3, [sp, #20]
    9690:	488d      	ldr	r0, [pc, #564]	; (98c8 <__ssvfscanf_r+0xa34>)
    9692:	005b      	lsls	r3, r3, #1
    9694:	5e1b      	ldrsh	r3, [r3, r0]
    9696:	9305      	str	r3, [sp, #20]
    9698:	2b08      	cmp	r3, #8
    969a:	dcc7      	bgt.n	962c <__ssvfscanf_r+0x798>
    969c:	e7ab      	b.n	95f6 <__ssvfscanf_r+0x762>
    969e:	2380      	movs	r3, #128	; 0x80
    96a0:	423b      	tst	r3, r7
    96a2:	d0a8      	beq.n	95f6 <__ssvfscanf_r+0x762>
    96a4:	439f      	bics	r7, r3
    96a6:	e79a      	b.n	95de <__ssvfscanf_r+0x74a>
    96a8:	2c00      	cmp	r4, #0
    96aa:	d100      	bne.n	96ae <__ssvfscanf_r+0x81a>
    96ac:	3c01      	subs	r4, #1
    96ae:	2501      	movs	r5, #1
    96b0:	464b      	mov	r3, r9
    96b2:	401d      	ands	r5, r3
    96b4:	d000      	beq.n	96b8 <__ssvfscanf_r+0x824>
    96b6:	e093      	b.n	97e0 <__ssvfscanf_r+0x94c>
    96b8:	464b      	mov	r3, r9
    96ba:	06db      	lsls	r3, r3, #27
    96bc:	d400      	bmi.n	96c0 <__ssvfscanf_r+0x82c>
    96be:	e183      	b.n	99c8 <__ssvfscanf_r+0xb34>
    96c0:	2308      	movs	r3, #8
    96c2:	4699      	mov	r9, r3
    96c4:	f003 fc40 	bl	cf48 <__locale_ctype_ptr>
    96c8:	4649      	mov	r1, r9
    96ca:	6833      	ldr	r3, [r6, #0]
    96cc:	781a      	ldrb	r2, [r3, #0]
    96ce:	1880      	adds	r0, r0, r2
    96d0:	7842      	ldrb	r2, [r0, #1]
    96d2:	4211      	tst	r1, r2
    96d4:	d000      	beq.n	96d8 <__ssvfscanf_r+0x844>
    96d6:	e709      	b.n	94ec <__ssvfscanf_r+0x658>
    96d8:	6872      	ldr	r2, [r6, #4]
    96da:	3301      	adds	r3, #1
    96dc:	3a01      	subs	r2, #1
    96de:	3501      	adds	r5, #1
    96e0:	6072      	str	r2, [r6, #4]
    96e2:	6033      	str	r3, [r6, #0]
    96e4:	42ac      	cmp	r4, r5
    96e6:	d100      	bne.n	96ea <__ssvfscanf_r+0x856>
    96e8:	e700      	b.n	94ec <__ssvfscanf_r+0x658>
    96ea:	2a00      	cmp	r2, #0
    96ec:	dcea      	bgt.n	96c4 <__ssvfscanf_r+0x830>
    96ee:	0031      	movs	r1, r6
    96f0:	4640      	mov	r0, r8
    96f2:	f006 fa25 	bl	fb40 <__ssrefill_r>
    96f6:	2800      	cmp	r0, #0
    96f8:	d0e4      	beq.n	96c4 <__ssvfscanf_r+0x830>
    96fa:	197f      	adds	r7, r7, r5
    96fc:	e67c      	b.n	93f8 <__ssvfscanf_r+0x564>
    96fe:	465b      	mov	r3, fp
    9700:	46bb      	mov	fp, r7
    9702:	002f      	movs	r7, r5
    9704:	001d      	movs	r5, r3
    9706:	464a      	mov	r2, r9
    9708:	4b71      	ldr	r3, [pc, #452]	; (98d0 <__ssvfscanf_r+0xa3c>)
    970a:	401a      	ands	r2, r3
    970c:	4691      	mov	r9, r2
    970e:	e5fe      	b.n	930e <__ssvfscanf_r+0x47a>
    9710:	4b70      	ldr	r3, [pc, #448]	; (98d4 <__ssvfscanf_r+0xa40>)
    9712:	401f      	ands	r7, r3
    9714:	e763      	b.n	95de <__ssvfscanf_r+0x74a>
    9716:	9b07      	ldr	r3, [sp, #28]
    9718:	1d1a      	adds	r2, r3, #4
    971a:	681b      	ldr	r3, [r3, #0]
    971c:	4692      	mov	sl, r2
    971e:	4699      	mov	r9, r3
    9720:	0002      	movs	r2, r0
    9722:	000b      	movs	r3, r1
    9724:	f007 fc14 	bl	10f50 <__aeabi_dcmpun>
    9728:	2800      	cmp	r0, #0
    972a:	d000      	beq.n	972e <__ssvfscanf_r+0x89a>
    972c:	e28e      	b.n	9c4c <__ssvfscanf_r+0xdb8>
    972e:	0020      	movs	r0, r4
    9730:	0029      	movs	r1, r5
    9732:	f7fd f85d 	bl	67f0 <__aeabi_d2f>
    9736:	464b      	mov	r3, r9
    9738:	6018      	str	r0, [r3, #0]
    973a:	4653      	mov	r3, sl
    973c:	9307      	str	r3, [sp, #28]
    973e:	e658      	b.n	93f2 <__ssvfscanf_r+0x55e>
    9740:	464a      	mov	r2, r9
    9742:	431a      	orrs	r2, r3
    9744:	4691      	mov	r9, r2
    9746:	4b64      	ldr	r3, [pc, #400]	; (98d8 <__ssvfscanf_r+0xa44>)
    9748:	e472      	b.n	9030 <__ssvfscanf_r+0x19c>
    974a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    974c:	2200      	movs	r2, #0
    974e:	1c59      	adds	r1, r3, #1
    9750:	4640      	mov	r0, r8
    9752:	230a      	movs	r3, #10
    9754:	f7fe f888 	bl	7868 <_strtol_r>
    9758:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    975a:	1ac2      	subs	r2, r0, r3
    975c:	a90e      	add	r1, sp, #56	; 0x38
    975e:	468c      	mov	ip, r1
    9760:	4b5e      	ldr	r3, [pc, #376]	; (98dc <__ssvfscanf_r+0xa48>)
    9762:	990e      	ldr	r1, [sp, #56]	; 0x38
    9764:	4463      	add	r3, ip
    9766:	4299      	cmp	r1, r3
    9768:	d302      	bcc.n	9770 <__ssvfscanf_r+0x8dc>
    976a:	4b5d      	ldr	r3, [pc, #372]	; (98e0 <__ssvfscanf_r+0xa4c>)
    976c:	4463      	add	r3, ip
    976e:	930e      	str	r3, [sp, #56]	; 0x38
    9770:	495c      	ldr	r1, [pc, #368]	; (98e4 <__ssvfscanf_r+0xa50>)
    9772:	980e      	ldr	r0, [sp, #56]	; 0x38
    9774:	f7fd fbd2 	bl	6f1c <sprintf>
    9778:	e626      	b.n	93c8 <__ssvfscanf_r+0x534>
    977a:	9a07      	ldr	r2, [sp, #28]
    977c:	4654      	mov	r4, sl
    977e:	6813      	ldr	r3, [r2, #0]
    9780:	601f      	str	r7, [r3, #0]
    9782:	0013      	movs	r3, r2
    9784:	3304      	adds	r3, #4
    9786:	9307      	str	r3, [sp, #28]
    9788:	f7ff fbcb 	bl	8f22 <__ssvfscanf_r+0x8e>
    978c:	702b      	strb	r3, [r5, #0]
    978e:	2200      	movs	r2, #0
    9790:	9b05      	ldr	r3, [sp, #20]
    9792:	990a      	ldr	r1, [sp, #40]	; 0x28
    9794:	4640      	mov	r0, r8
    9796:	9c09      	ldr	r4, [sp, #36]	; 0x24
    9798:	47a0      	blx	r4
    979a:	464b      	mov	r3, r9
    979c:	069b      	lsls	r3, r3, #26
    979e:	d500      	bpl.n	97a2 <__ssvfscanf_r+0x90e>
    97a0:	e15b      	b.n	9a5a <__ssvfscanf_r+0xbc6>
    97a2:	464b      	mov	r3, r9
    97a4:	075b      	lsls	r3, r3, #29
    97a6:	d500      	bpl.n	97aa <__ssvfscanf_r+0x916>
    97a8:	e1c6      	b.n	9b38 <__ssvfscanf_r+0xca4>
    97aa:	464b      	mov	r3, r9
    97ac:	07db      	lsls	r3, r3, #31
    97ae:	d500      	bpl.n	97b2 <__ssvfscanf_r+0x91e>
    97b0:	e153      	b.n	9a5a <__ssvfscanf_r+0xbc6>
    97b2:	464b      	mov	r3, r9
    97b4:	079b      	lsls	r3, r3, #30
    97b6:	d400      	bmi.n	97ba <__ssvfscanf_r+0x926>
    97b8:	e14f      	b.n	9a5a <__ssvfscanf_r+0xbc6>
    97ba:	4b4b      	ldr	r3, [pc, #300]	; (98e8 <__ssvfscanf_r+0xa54>)
    97bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
    97be:	429a      	cmp	r2, r3
    97c0:	d100      	bne.n	97c4 <__ssvfscanf_r+0x930>
    97c2:	e1b2      	b.n	9b2a <__ssvfscanf_r+0xc96>
    97c4:	9b05      	ldr	r3, [sp, #20]
    97c6:	2200      	movs	r2, #0
    97c8:	990a      	ldr	r1, [sp, #40]	; 0x28
    97ca:	4640      	mov	r0, r8
    97cc:	f005 ff28 	bl	f620 <_strtoll_r>
    97d0:	9a07      	ldr	r2, [sp, #28]
    97d2:	6813      	ldr	r3, [r2, #0]
    97d4:	6018      	str	r0, [r3, #0]
    97d6:	6059      	str	r1, [r3, #4]
    97d8:	0013      	movs	r3, r2
    97da:	3304      	adds	r3, #4
    97dc:	9307      	str	r3, [sp, #28]
    97de:	e142      	b.n	9a66 <__ssvfscanf_r+0xbd2>
    97e0:	ab12      	add	r3, sp, #72	; 0x48
    97e2:	2208      	movs	r2, #8
    97e4:	0018      	movs	r0, r3
    97e6:	2100      	movs	r1, #0
    97e8:	9306      	str	r3, [sp, #24]
    97ea:	f7fd fa9f 	bl	6d2c <memset>
    97ee:	2310      	movs	r3, #16
    97f0:	464a      	mov	r2, r9
    97f2:	401a      	ands	r2, r3
    97f4:	ab11      	add	r3, sp, #68	; 0x44
    97f6:	4693      	mov	fp, r2
    97f8:	4699      	mov	r9, r3
    97fa:	2a00      	cmp	r2, #0
    97fc:	d100      	bne.n	9800 <__ssvfscanf_r+0x96c>
    97fe:	e17f      	b.n	9b00 <__ssvfscanf_r+0xc6c>
    9800:	2300      	movs	r3, #0
    9802:	001d      	movs	r5, r3
    9804:	f003 fba0 	bl	cf48 <__locale_ctype_ptr>
    9808:	2208      	movs	r2, #8
    980a:	6833      	ldr	r3, [r6, #0]
    980c:	781b      	ldrb	r3, [r3, #0]
    980e:	18c0      	adds	r0, r0, r3
    9810:	7843      	ldrb	r3, [r0, #1]
    9812:	421a      	tst	r2, r3
    9814:	d102      	bne.n	981c <__ssvfscanf_r+0x988>
    9816:	2c00      	cmp	r4, #0
    9818:	d000      	beq.n	981c <__ssvfscanf_r+0x988>
    981a:	e194      	b.n	9b46 <__ssvfscanf_r+0xcb2>
    981c:	465b      	mov	r3, fp
    981e:	2b00      	cmp	r3, #0
    9820:	d000      	beq.n	9824 <__ssvfscanf_r+0x990>
    9822:	e5e9      	b.n	93f8 <__ssvfscanf_r+0x564>
    9824:	464b      	mov	r3, r9
    9826:	465a      	mov	r2, fp
    9828:	601a      	str	r2, [r3, #0]
    982a:	e5e2      	b.n	93f2 <__ssvfscanf_r+0x55e>
    982c:	9b07      	ldr	r3, [sp, #28]
    982e:	3c01      	subs	r4, #1
    9830:	1d1a      	adds	r2, r3, #4
    9832:	681b      	ldr	r3, [r3, #0]
    9834:	4693      	mov	fp, r2
    9836:	4699      	mov	r9, r3
    9838:	001a      	movs	r2, r3
    983a:	444c      	add	r4, r9
    983c:	ab14      	add	r3, sp, #80	; 0x50
    983e:	46ba      	mov	sl, r7
    9840:	001d      	movs	r5, r3
    9842:	0027      	movs	r7, r4
    9844:	6833      	ldr	r3, [r6, #0]
    9846:	7819      	ldrb	r1, [r3, #0]
    9848:	5c69      	ldrb	r1, [r5, r1]
    984a:	2900      	cmp	r1, #0
    984c:	d100      	bne.n	9850 <__ssvfscanf_r+0x9bc>
    984e:	e13e      	b.n	9ace <__ssvfscanf_r+0xc3a>
    9850:	6871      	ldr	r1, [r6, #4]
    9852:	1c54      	adds	r4, r2, #1
    9854:	3901      	subs	r1, #1
    9856:	6071      	str	r1, [r6, #4]
    9858:	1c59      	adds	r1, r3, #1
    985a:	6031      	str	r1, [r6, #0]
    985c:	781b      	ldrb	r3, [r3, #0]
    985e:	7013      	strb	r3, [r2, #0]
    9860:	42ba      	cmp	r2, r7
    9862:	d100      	bne.n	9866 <__ssvfscanf_r+0x9d2>
    9864:	e124      	b.n	9ab0 <__ssvfscanf_r+0xc1c>
    9866:	6873      	ldr	r3, [r6, #4]
    9868:	2b00      	cmp	r3, #0
    986a:	dd01      	ble.n	9870 <__ssvfscanf_r+0x9dc>
    986c:	0022      	movs	r2, r4
    986e:	e7e9      	b.n	9844 <__ssvfscanf_r+0x9b0>
    9870:	0031      	movs	r1, r6
    9872:	4640      	mov	r0, r8
    9874:	f006 f964 	bl	fb40 <__ssrefill_r>
    9878:	2800      	cmp	r0, #0
    987a:	d0f7      	beq.n	986c <__ssvfscanf_r+0x9d8>
    987c:	4657      	mov	r7, sl
    987e:	45a1      	cmp	r9, r4
    9880:	d000      	beq.n	9884 <__ssvfscanf_r+0x9f0>
    9882:	e116      	b.n	9ab2 <__ssvfscanf_r+0xc1e>
    9884:	f7ff fba0 	bl	8fc8 <__ssvfscanf_r+0x134>
    9888:	ab12      	add	r3, sp, #72	; 0x48
    988a:	2208      	movs	r2, #8
    988c:	0018      	movs	r0, r3
    988e:	2100      	movs	r1, #0
    9890:	9306      	str	r3, [sp, #24]
    9892:	f7fd fa4b 	bl	6d2c <memset>
    9896:	2310      	movs	r3, #16
    9898:	464a      	mov	r2, r9
    989a:	401a      	ands	r2, r3
    989c:	9204      	str	r2, [sp, #16]
    989e:	d100      	bne.n	98a2 <__ssvfscanf_r+0xa0e>
    98a0:	e124      	b.n	9aec <__ssvfscanf_r+0xc58>
    98a2:	2300      	movs	r3, #0
    98a4:	469b      	mov	fp, r3
    98a6:	2c00      	cmp	r4, #0
    98a8:	d100      	bne.n	98ac <__ssvfscanf_r+0xa18>
    98aa:	e5a5      	b.n	93f8 <__ssvfscanf_r+0x564>
    98ac:	9b06      	ldr	r3, [sp, #24]
    98ae:	46b9      	mov	r9, r7
    98b0:	2500      	movs	r5, #0
    98b2:	0027      	movs	r7, r4
    98b4:	469a      	mov	sl, r3
    98b6:	e02a      	b.n	990e <__ssvfscanf_r+0xa7a>
    98b8:	fffffea3 	.word	0xfffffea3
    98bc:	00013d38 	.word	0x00013d38
    98c0:	fffffdff 	.word	0xfffffdff
    98c4:	fffff47f 	.word	0xfffff47f
    98c8:	00013e78 	.word	0x00013e78
    98cc:	fffffc7f 	.word	0xfffffc7f
    98d0:	fffffeff 	.word	0xfffffeff
    98d4:	fffffa7f 	.word	0xfffffa7f
    98d8:	00007869 	.word	0x00007869
    98dc:	0000026b 	.word	0x0000026b
    98e0:	0000026a 	.word	0x0000026a
    98e4:	00013e70 	.word	0x00013e70
    98e8:	0000f791 	.word	0x0000f791
    98ec:	9b04      	ldr	r3, [sp, #16]
    98ee:	2b00      	cmp	r3, #0
    98f0:	d146      	bne.n	9980 <__ssvfscanf_r+0xaec>
    98f2:	465a      	mov	r2, fp
    98f4:	44a1      	add	r9, r4
    98f6:	6013      	str	r3, [r2, #0]
    98f8:	3f01      	subs	r7, #1
    98fa:	2304      	movs	r3, #4
    98fc:	469c      	mov	ip, r3
    98fe:	2500      	movs	r5, #0
    9900:	44e3      	add	fp, ip
    9902:	6873      	ldr	r3, [r6, #4]
    9904:	2b00      	cmp	r3, #0
    9906:	dd2f      	ble.n	9968 <__ssvfscanf_r+0xad4>
    9908:	2f00      	cmp	r7, #0
    990a:	d100      	bne.n	990e <__ssvfscanf_r+0xa7a>
    990c:	e0fe      	b.n	9b0c <__ssvfscanf_r+0xc78>
    990e:	f003 fb07 	bl	cf20 <__locale_mb_cur_max>
    9912:	42a8      	cmp	r0, r5
    9914:	d101      	bne.n	991a <__ssvfscanf_r+0xa86>
    9916:	f7ff fb57 	bl	8fc8 <__ssvfscanf_r+0x134>
    991a:	208c      	movs	r0, #140	; 0x8c
    991c:	6833      	ldr	r3, [r6, #0]
    991e:	0040      	lsls	r0, r0, #1
    9920:	781a      	ldrb	r2, [r3, #0]
    9922:	3301      	adds	r3, #1
    9924:	6033      	str	r3, [r6, #0]
    9926:	4653      	mov	r3, sl
    9928:	a90e      	add	r1, sp, #56	; 0x38
    992a:	1809      	adds	r1, r1, r0
    992c:	554a      	strb	r2, [r1, r5]
    992e:	6872      	ldr	r2, [r6, #4]
    9930:	1c6c      	adds	r4, r5, #1
    9932:	3a01      	subs	r2, #1
    9934:	6072      	str	r2, [r6, #4]
    9936:	4659      	mov	r1, fp
    9938:	9300      	str	r3, [sp, #0]
    993a:	aa54      	add	r2, sp, #336	; 0x150
    993c:	0023      	movs	r3, r4
    993e:	4640      	mov	r0, r8
    9940:	f003 fe68 	bl	d614 <_mbrtowc_r>
    9944:	1c43      	adds	r3, r0, #1
    9946:	d101      	bne.n	994c <__ssvfscanf_r+0xab8>
    9948:	f7ff fb3e 	bl	8fc8 <__ssvfscanf_r+0x134>
    994c:	2800      	cmp	r0, #0
    994e:	d0cd      	beq.n	98ec <__ssvfscanf_r+0xa58>
    9950:	0025      	movs	r5, r4
    9952:	1c83      	adds	r3, r0, #2
    9954:	d0d5      	beq.n	9902 <__ssvfscanf_r+0xa6e>
    9956:	9b04      	ldr	r3, [sp, #16]
    9958:	44a1      	add	r9, r4
    995a:	3f01      	subs	r7, #1
    995c:	2500      	movs	r5, #0
    995e:	2b00      	cmp	r3, #0
    9960:	d0cb      	beq.n	98fa <__ssvfscanf_r+0xa66>
    9962:	6873      	ldr	r3, [r6, #4]
    9964:	2b00      	cmp	r3, #0
    9966:	dccf      	bgt.n	9908 <__ssvfscanf_r+0xa74>
    9968:	0031      	movs	r1, r6
    996a:	4640      	mov	r0, r8
    996c:	f006 f8e8 	bl	fb40 <__ssrefill_r>
    9970:	2800      	cmp	r0, #0
    9972:	d0c9      	beq.n	9908 <__ssvfscanf_r+0xa74>
    9974:	464f      	mov	r7, r9
    9976:	2d00      	cmp	r5, #0
    9978:	d100      	bne.n	997c <__ssvfscanf_r+0xae8>
    997a:	e0c8      	b.n	9b0e <__ssvfscanf_r+0xc7a>
    997c:	f7ff fb24 	bl	8fc8 <__ssvfscanf_r+0x134>
    9980:	44a1      	add	r9, r4
    9982:	3f01      	subs	r7, #1
    9984:	2500      	movs	r5, #0
    9986:	e7bc      	b.n	9902 <__ssvfscanf_r+0xa6e>
    9988:	003b      	movs	r3, r7
    998a:	4647      	mov	r7, r8
    998c:	4698      	mov	r8, r3
    998e:	2d00      	cmp	r5, #0
    9990:	d101      	bne.n	9996 <__ssvfscanf_r+0xb02>
    9992:	f7ff fb19 	bl	8fc8 <__ssvfscanf_r+0x134>
    9996:	197f      	adds	r7, r7, r5
    9998:	e52e      	b.n	93f8 <__ssvfscanf_r+0x564>
    999a:	9b07      	ldr	r3, [sp, #28]
    999c:	2201      	movs	r2, #1
    999e:	6819      	ldr	r1, [r3, #0]
    99a0:	1d1d      	adds	r5, r3, #4
    99a2:	9600      	str	r6, [sp, #0]
    99a4:	0023      	movs	r3, r4
    99a6:	4640      	mov	r0, r8
    99a8:	f006 f8ea 	bl	fb80 <_sfread_r>
    99ac:	2800      	cmp	r0, #0
    99ae:	d101      	bne.n	99b4 <__ssvfscanf_r+0xb20>
    99b0:	f7ff fb0a 	bl	8fc8 <__ssvfscanf_r+0x134>
    99b4:	9b08      	ldr	r3, [sp, #32]
    99b6:	183f      	adds	r7, r7, r0
    99b8:	3301      	adds	r3, #1
    99ba:	9308      	str	r3, [sp, #32]
    99bc:	9b03      	ldr	r3, [sp, #12]
    99be:	9507      	str	r5, [sp, #28]
    99c0:	469a      	mov	sl, r3
    99c2:	4654      	mov	r4, sl
    99c4:	f7ff faad 	bl	8f22 <__ssvfscanf_r+0x8e>
    99c8:	9b07      	ldr	r3, [sp, #28]
    99ca:	46b9      	mov	r9, r7
    99cc:	1d1a      	adds	r2, r3, #4
    99ce:	681b      	ldr	r3, [r3, #0]
    99d0:	3c01      	subs	r4, #1
    99d2:	469a      	mov	sl, r3
    99d4:	9306      	str	r3, [sp, #24]
    99d6:	001d      	movs	r5, r3
    99d8:	2308      	movs	r3, #8
    99da:	469b      	mov	fp, r3
    99dc:	9204      	str	r2, [sp, #16]
    99de:	44a2      	add	sl, r4
    99e0:	f003 fab2 	bl	cf48 <__locale_ctype_ptr>
    99e4:	4659      	mov	r1, fp
    99e6:	6833      	ldr	r3, [r6, #0]
    99e8:	781a      	ldrb	r2, [r3, #0]
    99ea:	1880      	adds	r0, r0, r2
    99ec:	7842      	ldrb	r2, [r0, #1]
    99ee:	4211      	tst	r1, r2
    99f0:	d179      	bne.n	9ae6 <__ssvfscanf_r+0xc52>
    99f2:	6872      	ldr	r2, [r6, #4]
    99f4:	1c6c      	adds	r4, r5, #1
    99f6:	3a01      	subs	r2, #1
    99f8:	6072      	str	r2, [r6, #4]
    99fa:	1c5a      	adds	r2, r3, #1
    99fc:	6032      	str	r2, [r6, #0]
    99fe:	781b      	ldrb	r3, [r3, #0]
    9a00:	0027      	movs	r7, r4
    9a02:	702b      	strb	r3, [r5, #0]
    9a04:	4555      	cmp	r5, sl
    9a06:	d00a      	beq.n	9a1e <__ssvfscanf_r+0xb8a>
    9a08:	6873      	ldr	r3, [r6, #4]
    9a0a:	2b00      	cmp	r3, #0
    9a0c:	dd01      	ble.n	9a12 <__ssvfscanf_r+0xb7e>
    9a0e:	0025      	movs	r5, r4
    9a10:	e7e6      	b.n	99e0 <__ssvfscanf_r+0xb4c>
    9a12:	0031      	movs	r1, r6
    9a14:	4640      	mov	r0, r8
    9a16:	f006 f893 	bl	fb40 <__ssrefill_r>
    9a1a:	2800      	cmp	r0, #0
    9a1c:	d0f7      	beq.n	9a0e <__ssvfscanf_r+0xb7a>
    9a1e:	464b      	mov	r3, r9
    9a20:	46b9      	mov	r9, r7
    9a22:	001f      	movs	r7, r3
    9a24:	2300      	movs	r3, #0
    9a26:	464a      	mov	r2, r9
    9a28:	7013      	strb	r3, [r2, #0]
    9a2a:	464b      	mov	r3, r9
    9a2c:	9a06      	ldr	r2, [sp, #24]
    9a2e:	1a9b      	subs	r3, r3, r2
    9a30:	18ff      	adds	r7, r7, r3
    9a32:	9b08      	ldr	r3, [sp, #32]
    9a34:	3301      	adds	r3, #1
    9a36:	9308      	str	r3, [sp, #32]
    9a38:	9b04      	ldr	r3, [sp, #16]
    9a3a:	9307      	str	r3, [sp, #28]
    9a3c:	9b03      	ldr	r3, [sp, #12]
    9a3e:	469a      	mov	sl, r3
    9a40:	4654      	mov	r4, sl
    9a42:	f7ff fa6e 	bl	8f22 <__ssvfscanf_r+0x8e>
    9a46:	0031      	movs	r1, r6
    9a48:	4640      	mov	r0, r8
    9a4a:	f006 f879 	bl	fb40 <__ssrefill_r>
    9a4e:	2800      	cmp	r0, #0
    9a50:	d101      	bne.n	9a56 <__ssvfscanf_r+0xbc2>
    9a52:	f7ff fa94 	bl	8f7e <__ssvfscanf_r+0xea>
    9a56:	f7ff fab7 	bl	8fc8 <__ssvfscanf_r+0x134>
    9a5a:	9a07      	ldr	r2, [sp, #28]
    9a5c:	6813      	ldr	r3, [r2, #0]
    9a5e:	6018      	str	r0, [r3, #0]
    9a60:	0013      	movs	r3, r2
    9a62:	3304      	adds	r3, #4
    9a64:	9307      	str	r3, [sp, #28]
    9a66:	9b08      	ldr	r3, [sp, #32]
    9a68:	3301      	adds	r3, #1
    9a6a:	9308      	str	r3, [sp, #32]
    9a6c:	e5d6      	b.n	961c <__ssvfscanf_r+0x788>
    9a6e:	3d01      	subs	r5, #1
    9a70:	7829      	ldrb	r1, [r5, #0]
    9a72:	0032      	movs	r2, r6
    9a74:	4640      	mov	r0, r8
    9a76:	f006 f821 	bl	fabc <_sungetc_r>
    9a7a:	e5c6      	b.n	960a <__ssvfscanf_r+0x776>
    9a7c:	4648      	mov	r0, r9
    9a7e:	4b78      	ldr	r3, [pc, #480]	; (9c60 <__ssvfscanf_r+0xdcc>)
    9a80:	4018      	ands	r0, r3
    9a82:	2301      	movs	r3, #1
    9a84:	4681      	mov	r9, r0
    9a86:	469b      	mov	fp, r3
    9a88:	f7ff fbd5 	bl	9236 <__ssvfscanf_r+0x3a2>
    9a8c:	4648      	mov	r0, r9
    9a8e:	4b74      	ldr	r3, [pc, #464]	; (9c60 <__ssvfscanf_r+0xdcc>)
    9a90:	4018      	ands	r0, r3
    9a92:	2301      	movs	r3, #1
    9a94:	4681      	mov	r9, r0
    9a96:	9304      	str	r3, [sp, #16]
    9a98:	f7ff fbcd 	bl	9236 <__ssvfscanf_r+0x3a2>
    9a9c:	464b      	mov	r3, r9
    9a9e:	2102      	movs	r1, #2
    9aa0:	4313      	orrs	r3, r2
    9aa2:	4699      	mov	r9, r3
    9aa4:	468c      	mov	ip, r1
    9aa6:	4653      	mov	r3, sl
    9aa8:	44e2      	add	sl, ip
    9aaa:	789b      	ldrb	r3, [r3, #2]
    9aac:	f7ff fa56 	bl	8f5c <__ssvfscanf_r+0xc8>
    9ab0:	4657      	mov	r7, sl
    9ab2:	464b      	mov	r3, r9
    9ab4:	1ae5      	subs	r5, r4, r3
    9ab6:	d101      	bne.n	9abc <__ssvfscanf_r+0xc28>
    9ab8:	f7ff fa39 	bl	8f2e <__ssvfscanf_r+0x9a>
    9abc:	2300      	movs	r3, #0
    9abe:	7023      	strb	r3, [r4, #0]
    9ac0:	9b08      	ldr	r3, [sp, #32]
    9ac2:	197f      	adds	r7, r7, r5
    9ac4:	3301      	adds	r3, #1
    9ac6:	9308      	str	r3, [sp, #32]
    9ac8:	465b      	mov	r3, fp
    9aca:	9307      	str	r3, [sp, #28]
    9acc:	e494      	b.n	93f8 <__ssvfscanf_r+0x564>
    9ace:	4657      	mov	r7, sl
    9ad0:	0014      	movs	r4, r2
    9ad2:	e7ee      	b.n	9ab2 <__ssvfscanf_r+0xc1e>
    9ad4:	9b06      	ldr	r3, [sp, #24]
    9ad6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    9ad8:	1a9a      	subs	r2, r3, r2
    9ada:	d100      	bne.n	9ade <__ssvfscanf_r+0xc4a>
    9adc:	e474      	b.n	93c8 <__ssvfscanf_r+0x534>
    9ade:	465b      	mov	r3, fp
    9ae0:	4252      	negs	r2, r2
    9ae2:	930e      	str	r3, [sp, #56]	; 0x38
    9ae4:	e63a      	b.n	975c <__ssvfscanf_r+0x8c8>
    9ae6:	464f      	mov	r7, r9
    9ae8:	46a9      	mov	r9, r5
    9aea:	e79b      	b.n	9a24 <__ssvfscanf_r+0xb90>
    9aec:	9a07      	ldr	r2, [sp, #28]
    9aee:	0013      	movs	r3, r2
    9af0:	6812      	ldr	r2, [r2, #0]
    9af2:	3304      	adds	r3, #4
    9af4:	4693      	mov	fp, r2
    9af6:	9307      	str	r3, [sp, #28]
    9af8:	2c00      	cmp	r4, #0
    9afa:	d000      	beq.n	9afe <__ssvfscanf_r+0xc6a>
    9afc:	e6d6      	b.n	98ac <__ssvfscanf_r+0xa18>
    9afe:	e478      	b.n	93f2 <__ssvfscanf_r+0x55e>
    9b00:	9b07      	ldr	r3, [sp, #28]
    9b02:	681a      	ldr	r2, [r3, #0]
    9b04:	3304      	adds	r3, #4
    9b06:	4691      	mov	r9, r2
    9b08:	9307      	str	r3, [sp, #28]
    9b0a:	e679      	b.n	9800 <__ssvfscanf_r+0x96c>
    9b0c:	464f      	mov	r7, r9
    9b0e:	9b04      	ldr	r3, [sp, #16]
    9b10:	2b00      	cmp	r3, #0
    9b12:	d100      	bne.n	9b16 <__ssvfscanf_r+0xc82>
    9b14:	e46d      	b.n	93f2 <__ssvfscanf_r+0x55e>
    9b16:	e46f      	b.n	93f8 <__ssvfscanf_r+0x564>
    9b18:	9b07      	ldr	r3, [sp, #28]
    9b1a:	4654      	mov	r4, sl
    9b1c:	681a      	ldr	r2, [r3, #0]
    9b1e:	3304      	adds	r3, #4
    9b20:	9203      	str	r2, [sp, #12]
    9b22:	8017      	strh	r7, [r2, #0]
    9b24:	9307      	str	r3, [sp, #28]
    9b26:	f7ff f9fc 	bl	8f22 <__ssvfscanf_r+0x8e>
    9b2a:	9b05      	ldr	r3, [sp, #20]
    9b2c:	2200      	movs	r2, #0
    9b2e:	990a      	ldr	r1, [sp, #40]	; 0x28
    9b30:	4640      	mov	r0, r8
    9b32:	f005 ff21 	bl	f978 <_strtoull_r>
    9b36:	e64b      	b.n	97d0 <__ssvfscanf_r+0x93c>
    9b38:	9b07      	ldr	r3, [sp, #28]
    9b3a:	681a      	ldr	r2, [r3, #0]
    9b3c:	3304      	adds	r3, #4
    9b3e:	9204      	str	r2, [sp, #16]
    9b40:	8010      	strh	r0, [r2, #0]
    9b42:	9307      	str	r3, [sp, #28]
    9b44:	e78f      	b.n	9a66 <__ssvfscanf_r+0xbd2>
    9b46:	f003 f9eb 	bl	cf20 <__locale_mb_cur_max>
    9b4a:	4285      	cmp	r5, r0
    9b4c:	d101      	bne.n	9b52 <__ssvfscanf_r+0xcbe>
    9b4e:	f7ff fa3b 	bl	8fc8 <__ssvfscanf_r+0x134>
    9b52:	208c      	movs	r0, #140	; 0x8c
    9b54:	1c6b      	adds	r3, r5, #1
    9b56:	469a      	mov	sl, r3
    9b58:	6833      	ldr	r3, [r6, #0]
    9b5a:	0040      	lsls	r0, r0, #1
    9b5c:	781a      	ldrb	r2, [r3, #0]
    9b5e:	a90e      	add	r1, sp, #56	; 0x38
    9b60:	1809      	adds	r1, r1, r0
    9b62:	554a      	strb	r2, [r1, r5]
    9b64:	3301      	adds	r3, #1
    9b66:	6872      	ldr	r2, [r6, #4]
    9b68:	6033      	str	r3, [r6, #0]
    9b6a:	9b06      	ldr	r3, [sp, #24]
    9b6c:	3a01      	subs	r2, #1
    9b6e:	6072      	str	r2, [r6, #4]
    9b70:	4649      	mov	r1, r9
    9b72:	9300      	str	r3, [sp, #0]
    9b74:	aa54      	add	r2, sp, #336	; 0x150
    9b76:	4653      	mov	r3, sl
    9b78:	4640      	mov	r0, r8
    9b7a:	f003 fd4b 	bl	d614 <_mbrtowc_r>
    9b7e:	1c43      	adds	r3, r0, #1
    9b80:	d101      	bne.n	9b86 <__ssvfscanf_r+0xcf2>
    9b82:	f7ff fa21 	bl	8fc8 <__ssvfscanf_r+0x134>
    9b86:	2800      	cmp	r0, #0
    9b88:	d001      	beq.n	9b8e <__ssvfscanf_r+0xcfa>
    9b8a:	f7ff fa07 	bl	8f9c <__ssvfscanf_r+0x108>
    9b8e:	464b      	mov	r3, r9
    9b90:	6018      	str	r0, [r3, #0]
    9b92:	f003 f9b9 	bl	cf08 <iswspace>
    9b96:	1e05      	subs	r5, r0, #0
    9b98:	d012      	beq.n	9bc0 <__ssvfscanf_r+0xd2c>
    9b9a:	4655      	mov	r5, sl
    9b9c:	2d00      	cmp	r5, #0
    9b9e:	d100      	bne.n	9ba2 <__ssvfscanf_r+0xd0e>
    9ba0:	e63c      	b.n	981c <__ssvfscanf_r+0x988>
    9ba2:	4644      	mov	r4, r8
    9ba4:	228c      	movs	r2, #140	; 0x8c
    9ba6:	ab0e      	add	r3, sp, #56	; 0x38
    9ba8:	0052      	lsls	r2, r2, #1
    9baa:	3d01      	subs	r5, #1
    9bac:	189b      	adds	r3, r3, r2
    9bae:	5d59      	ldrb	r1, [r3, r5]
    9bb0:	0032      	movs	r2, r6
    9bb2:	0020      	movs	r0, r4
    9bb4:	f005 ff82 	bl	fabc <_sungetc_r>
    9bb8:	2d00      	cmp	r5, #0
    9bba:	d1f3      	bne.n	9ba4 <__ssvfscanf_r+0xd10>
    9bbc:	46a0      	mov	r8, r4
    9bbe:	e62d      	b.n	981c <__ssvfscanf_r+0x988>
    9bc0:	465b      	mov	r3, fp
    9bc2:	4457      	add	r7, sl
    9bc4:	3c01      	subs	r4, #1
    9bc6:	2b00      	cmp	r3, #0
    9bc8:	d001      	beq.n	9bce <__ssvfscanf_r+0xd3a>
    9bca:	f7ff f9ec 	bl	8fa6 <__ssvfscanf_r+0x112>
    9bce:	3304      	adds	r3, #4
    9bd0:	469c      	mov	ip, r3
    9bd2:	465d      	mov	r5, fp
    9bd4:	44e1      	add	r9, ip
    9bd6:	f7ff f9e6 	bl	8fa6 <__ssvfscanf_r+0x112>
    9bda:	464b      	mov	r3, r9
    9bdc:	6818      	ldr	r0, [r3, #0]
    9bde:	e7d8      	b.n	9b92 <__ssvfscanf_r+0xcfe>
    9be0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9be2:	459b      	cmp	fp, r3
    9be4:	d801      	bhi.n	9bea <__ssvfscanf_r+0xd56>
    9be6:	f7ff f9a2 	bl	8f2e <__ssvfscanf_r+0x9a>
    9bea:	465c      	mov	r4, fp
    9bec:	4645      	mov	r5, r8
    9bee:	3c01      	subs	r4, #1
    9bf0:	7821      	ldrb	r1, [r4, #0]
    9bf2:	0032      	movs	r2, r6
    9bf4:	0028      	movs	r0, r5
    9bf6:	f005 ff61 	bl	fabc <_sungetc_r>
    9bfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9bfc:	429c      	cmp	r4, r3
    9bfe:	d1f6      	bne.n	9bee <__ssvfscanf_r+0xd5a>
    9c00:	f7ff f995 	bl	8f2e <__ssvfscanf_r+0x9a>
    9c04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9c06:	465c      	mov	r4, fp
    9c08:	4645      	mov	r5, r8
    9c0a:	459b      	cmp	fp, r3
    9c0c:	d801      	bhi.n	9c12 <__ssvfscanf_r+0xd7e>
    9c0e:	f7ff f98e 	bl	8f2e <__ssvfscanf_r+0x9a>
    9c12:	3c01      	subs	r4, #1
    9c14:	7821      	ldrb	r1, [r4, #0]
    9c16:	0032      	movs	r2, r6
    9c18:	0028      	movs	r0, r5
    9c1a:	f005 ff4f 	bl	fabc <_sungetc_r>
    9c1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9c20:	429c      	cmp	r4, r3
    9c22:	d1f6      	bne.n	9c12 <__ssvfscanf_r+0xd7e>
    9c24:	f7ff f983 	bl	8f2e <__ssvfscanf_r+0x9a>
    9c28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9c2a:	459b      	cmp	fp, r3
    9c2c:	d801      	bhi.n	9c32 <__ssvfscanf_r+0xd9e>
    9c2e:	f7ff f97e 	bl	8f2e <__ssvfscanf_r+0x9a>
    9c32:	465c      	mov	r4, fp
    9c34:	4645      	mov	r5, r8
    9c36:	3c01      	subs	r4, #1
    9c38:	7821      	ldrb	r1, [r4, #0]
    9c3a:	0032      	movs	r2, r6
    9c3c:	0028      	movs	r0, r5
    9c3e:	f005 ff3d 	bl	fabc <_sungetc_r>
    9c42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9c44:	429c      	cmp	r4, r3
    9c46:	d1f6      	bne.n	9c36 <__ssvfscanf_r+0xda2>
    9c48:	f7ff f971 	bl	8f2e <__ssvfscanf_r+0x9a>
    9c4c:	2000      	movs	r0, #0
    9c4e:	f004 fc91 	bl	e574 <nanf>
    9c52:	464b      	mov	r3, r9
    9c54:	6018      	str	r0, [r3, #0]
    9c56:	4653      	mov	r3, sl
    9c58:	9307      	str	r3, [sp, #28]
    9c5a:	f7ff fbca 	bl	93f2 <__ssvfscanf_r+0x55e>
    9c5e:	46c0      	nop			; (mov r8, r8)
    9c60:	fffff87f 	.word	0xfffff87f

00009c64 <_vfprintf_r>:
    9c64:	b5f0      	push	{r4, r5, r6, r7, lr}
    9c66:	46de      	mov	lr, fp
    9c68:	464e      	mov	r6, r9
    9c6a:	4645      	mov	r5, r8
    9c6c:	4657      	mov	r7, sl
    9c6e:	b5e0      	push	{r5, r6, r7, lr}
    9c70:	b0c3      	sub	sp, #268	; 0x10c
    9c72:	4689      	mov	r9, r1
    9c74:	0014      	movs	r4, r2
    9c76:	001d      	movs	r5, r3
    9c78:	930f      	str	r3, [sp, #60]	; 0x3c
    9c7a:	0006      	movs	r6, r0
    9c7c:	9006      	str	r0, [sp, #24]
    9c7e:	f003 f973 	bl	cf68 <_localeconv_r>
    9c82:	6803      	ldr	r3, [r0, #0]
    9c84:	0018      	movs	r0, r3
    9c86:	9318      	str	r3, [sp, #96]	; 0x60
    9c88:	f7fd fabe 	bl	7208 <strlen>
    9c8c:	9017      	str	r0, [sp, #92]	; 0x5c
    9c8e:	2e00      	cmp	r6, #0
    9c90:	d004      	beq.n	9c9c <_vfprintf_r+0x38>
    9c92:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    9c94:	9307      	str	r3, [sp, #28]
    9c96:	2b00      	cmp	r3, #0
    9c98:	d100      	bne.n	9c9c <_vfprintf_r+0x38>
    9c9a:	e0a7      	b.n	9dec <_vfprintf_r+0x188>
    9c9c:	464b      	mov	r3, r9
    9c9e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    9ca0:	07db      	lsls	r3, r3, #31
    9ca2:	d478      	bmi.n	9d96 <_vfprintf_r+0x132>
    9ca4:	464b      	mov	r3, r9
    9ca6:	210c      	movs	r1, #12
    9ca8:	5e59      	ldrsh	r1, [r3, r1]
    9caa:	b28b      	uxth	r3, r1
    9cac:	059a      	lsls	r2, r3, #22
    9cae:	d56e      	bpl.n	9d8e <_vfprintf_r+0x12a>
    9cb0:	2280      	movs	r2, #128	; 0x80
    9cb2:	0192      	lsls	r2, r2, #6
    9cb4:	4213      	tst	r3, r2
    9cb6:	d109      	bne.n	9ccc <_vfprintf_r+0x68>
    9cb8:	430a      	orrs	r2, r1
    9cba:	464b      	mov	r3, r9
    9cbc:	4649      	mov	r1, r9
    9cbe:	819a      	strh	r2, [r3, #12]
    9cc0:	6e49      	ldr	r1, [r1, #100]	; 0x64
    9cc2:	4bcc      	ldr	r3, [pc, #816]	; (9ff4 <_vfprintf_r+0x390>)
    9cc4:	400b      	ands	r3, r1
    9cc6:	4649      	mov	r1, r9
    9cc8:	664b      	str	r3, [r1, #100]	; 0x64
    9cca:	b293      	uxth	r3, r2
    9ccc:	071a      	lsls	r2, r3, #28
    9cce:	d567      	bpl.n	9da0 <_vfprintf_r+0x13c>
    9cd0:	464a      	mov	r2, r9
    9cd2:	6912      	ldr	r2, [r2, #16]
    9cd4:	2a00      	cmp	r2, #0
    9cd6:	d063      	beq.n	9da0 <_vfprintf_r+0x13c>
    9cd8:	221a      	movs	r2, #26
    9cda:	401a      	ands	r2, r3
    9cdc:	2a0a      	cmp	r2, #10
    9cde:	d100      	bne.n	9ce2 <_vfprintf_r+0x7e>
    9ce0:	e088      	b.n	9df4 <_vfprintf_r+0x190>
    9ce2:	ab32      	add	r3, sp, #200	; 0xc8
    9ce4:	9325      	str	r3, [sp, #148]	; 0x94
    9ce6:	2300      	movs	r3, #0
    9ce8:	46cb      	mov	fp, r9
    9cea:	af25      	add	r7, sp, #148	; 0x94
    9cec:	60bb      	str	r3, [r7, #8]
    9cee:	607b      	str	r3, [r7, #4]
    9cf0:	9407      	str	r4, [sp, #28]
    9cf2:	9314      	str	r3, [sp, #80]	; 0x50
    9cf4:	9316      	str	r3, [sp, #88]	; 0x58
    9cf6:	9315      	str	r3, [sp, #84]	; 0x54
    9cf8:	ae32      	add	r6, sp, #200	; 0xc8
    9cfa:	9319      	str	r3, [sp, #100]	; 0x64
    9cfc:	931a      	str	r3, [sp, #104]	; 0x68
    9cfe:	930a      	str	r3, [sp, #40]	; 0x28
    9d00:	9c07      	ldr	r4, [sp, #28]
    9d02:	7823      	ldrb	r3, [r4, #0]
    9d04:	2b00      	cmp	r3, #0
    9d06:	d101      	bne.n	9d0c <_vfprintf_r+0xa8>
    9d08:	f000 fd9e 	bl	a848 <_vfprintf_r+0xbe4>
    9d0c:	2b25      	cmp	r3, #37	; 0x25
    9d0e:	d103      	bne.n	9d18 <_vfprintf_r+0xb4>
    9d10:	f000 fd9a 	bl	a848 <_vfprintf_r+0xbe4>
    9d14:	2b25      	cmp	r3, #37	; 0x25
    9d16:	d003      	beq.n	9d20 <_vfprintf_r+0xbc>
    9d18:	3401      	adds	r4, #1
    9d1a:	7823      	ldrb	r3, [r4, #0]
    9d1c:	2b00      	cmp	r3, #0
    9d1e:	d1f9      	bne.n	9d14 <_vfprintf_r+0xb0>
    9d20:	9b07      	ldr	r3, [sp, #28]
    9d22:	1ae5      	subs	r5, r4, r3
    9d24:	d010      	beq.n	9d48 <_vfprintf_r+0xe4>
    9d26:	9b07      	ldr	r3, [sp, #28]
    9d28:	6075      	str	r5, [r6, #4]
    9d2a:	6033      	str	r3, [r6, #0]
    9d2c:	68bb      	ldr	r3, [r7, #8]
    9d2e:	195b      	adds	r3, r3, r5
    9d30:	60bb      	str	r3, [r7, #8]
    9d32:	687b      	ldr	r3, [r7, #4]
    9d34:	3301      	adds	r3, #1
    9d36:	607b      	str	r3, [r7, #4]
    9d38:	2b07      	cmp	r3, #7
    9d3a:	dc4c      	bgt.n	9dd6 <_vfprintf_r+0x172>
    9d3c:	3608      	adds	r6, #8
    9d3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9d40:	469c      	mov	ip, r3
    9d42:	44ac      	add	ip, r5
    9d44:	4663      	mov	r3, ip
    9d46:	930a      	str	r3, [sp, #40]	; 0x28
    9d48:	7823      	ldrb	r3, [r4, #0]
    9d4a:	2b00      	cmp	r3, #0
    9d4c:	d101      	bne.n	9d52 <_vfprintf_r+0xee>
    9d4e:	f000 fc99 	bl	a684 <_vfprintf_r+0xa20>
    9d52:	1c63      	adds	r3, r4, #1
    9d54:	9307      	str	r3, [sp, #28]
    9d56:	2300      	movs	r3, #0
    9d58:	aa16      	add	r2, sp, #88	; 0x58
    9d5a:	77d3      	strb	r3, [r2, #31]
    9d5c:	2201      	movs	r2, #1
    9d5e:	4252      	negs	r2, r2
    9d60:	4692      	mov	sl, r2
    9d62:	2200      	movs	r2, #0
    9d64:	920b      	str	r2, [sp, #44]	; 0x2c
    9d66:	3220      	adds	r2, #32
    9d68:	4691      	mov	r9, r2
    9d6a:	3220      	adds	r2, #32
    9d6c:	7863      	ldrb	r3, [r4, #1]
    9d6e:	2100      	movs	r1, #0
    9d70:	2000      	movs	r0, #0
    9d72:	2400      	movs	r4, #0
    9d74:	4694      	mov	ip, r2
    9d76:	9a07      	ldr	r2, [sp, #28]
    9d78:	3201      	adds	r2, #1
    9d7a:	9207      	str	r2, [sp, #28]
    9d7c:	001a      	movs	r2, r3
    9d7e:	3a20      	subs	r2, #32
    9d80:	2a58      	cmp	r2, #88	; 0x58
    9d82:	d900      	bls.n	9d86 <_vfprintf_r+0x122>
    9d84:	e2e7      	b.n	a356 <_vfprintf_r+0x6f2>
    9d86:	4d9c      	ldr	r5, [pc, #624]	; (9ff8 <_vfprintf_r+0x394>)
    9d88:	0092      	lsls	r2, r2, #2
    9d8a:	58aa      	ldr	r2, [r5, r2]
    9d8c:	4697      	mov	pc, r2
    9d8e:	464b      	mov	r3, r9
    9d90:	6d98      	ldr	r0, [r3, #88]	; 0x58
    9d92:	f003 f8fb 	bl	cf8c <__retarget_lock_acquire_recursive>
    9d96:	464b      	mov	r3, r9
    9d98:	210c      	movs	r1, #12
    9d9a:	5e59      	ldrsh	r1, [r3, r1]
    9d9c:	b28b      	uxth	r3, r1
    9d9e:	e787      	b.n	9cb0 <_vfprintf_r+0x4c>
    9da0:	4649      	mov	r1, r9
    9da2:	9806      	ldr	r0, [sp, #24]
    9da4:	f001 fb80 	bl	b4a8 <__swsetup_r>
    9da8:	464b      	mov	r3, r9
    9daa:	2800      	cmp	r0, #0
    9dac:	d03a      	beq.n	9e24 <_vfprintf_r+0x1c0>
    9dae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    9db0:	07db      	lsls	r3, r3, #31
    9db2:	d405      	bmi.n	9dc0 <_vfprintf_r+0x15c>
    9db4:	464b      	mov	r3, r9
    9db6:	899b      	ldrh	r3, [r3, #12]
    9db8:	059b      	lsls	r3, r3, #22
    9dba:	d401      	bmi.n	9dc0 <_vfprintf_r+0x15c>
    9dbc:	f000 ffcf 	bl	ad5e <_vfprintf_r+0x10fa>
    9dc0:	2301      	movs	r3, #1
    9dc2:	425b      	negs	r3, r3
    9dc4:	930a      	str	r3, [sp, #40]	; 0x28
    9dc6:	980a      	ldr	r0, [sp, #40]	; 0x28
    9dc8:	b043      	add	sp, #268	; 0x10c
    9dca:	bc3c      	pop	{r2, r3, r4, r5}
    9dcc:	4690      	mov	r8, r2
    9dce:	4699      	mov	r9, r3
    9dd0:	46a2      	mov	sl, r4
    9dd2:	46ab      	mov	fp, r5
    9dd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9dd6:	003a      	movs	r2, r7
    9dd8:	4659      	mov	r1, fp
    9dda:	9806      	ldr	r0, [sp, #24]
    9ddc:	f005 ff9c 	bl	fd18 <__sprint_r>
    9de0:	2800      	cmp	r0, #0
    9de2:	d001      	beq.n	9de8 <_vfprintf_r+0x184>
    9de4:	f000 fcce 	bl	a784 <_vfprintf_r+0xb20>
    9de8:	ae32      	add	r6, sp, #200	; 0xc8
    9dea:	e7a8      	b.n	9d3e <_vfprintf_r+0xda>
    9dec:	9806      	ldr	r0, [sp, #24]
    9dee:	f002 fd5b 	bl	c8a8 <__sinit>
    9df2:	e753      	b.n	9c9c <_vfprintf_r+0x38>
    9df4:	464a      	mov	r2, r9
    9df6:	210e      	movs	r1, #14
    9df8:	5e52      	ldrsh	r2, [r2, r1]
    9dfa:	2a00      	cmp	r2, #0
    9dfc:	da00      	bge.n	9e00 <_vfprintf_r+0x19c>
    9dfe:	e770      	b.n	9ce2 <_vfprintf_r+0x7e>
    9e00:	464a      	mov	r2, r9
    9e02:	6e52      	ldr	r2, [r2, #100]	; 0x64
    9e04:	07d2      	lsls	r2, r2, #31
    9e06:	d405      	bmi.n	9e14 <_vfprintf_r+0x1b0>
    9e08:	059b      	lsls	r3, r3, #22
    9e0a:	d403      	bmi.n	9e14 <_vfprintf_r+0x1b0>
    9e0c:	464b      	mov	r3, r9
    9e0e:	6d98      	ldr	r0, [r3, #88]	; 0x58
    9e10:	f003 f8be 	bl	cf90 <__retarget_lock_release_recursive>
    9e14:	002b      	movs	r3, r5
    9e16:	0022      	movs	r2, r4
    9e18:	4649      	mov	r1, r9
    9e1a:	9806      	ldr	r0, [sp, #24]
    9e1c:	f001 fa8e 	bl	b33c <__sbprintf>
    9e20:	900a      	str	r0, [sp, #40]	; 0x28
    9e22:	e7d0      	b.n	9dc6 <_vfprintf_r+0x162>
    9e24:	899b      	ldrh	r3, [r3, #12]
    9e26:	e757      	b.n	9cd8 <_vfprintf_r+0x74>
    9e28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9e2a:	920f      	str	r2, [sp, #60]	; 0x3c
    9e2c:	425b      	negs	r3, r3
    9e2e:	930b      	str	r3, [sp, #44]	; 0x2c
    9e30:	2304      	movs	r3, #4
    9e32:	431c      	orrs	r4, r3
    9e34:	9b07      	ldr	r3, [sp, #28]
    9e36:	781b      	ldrb	r3, [r3, #0]
    9e38:	e79d      	b.n	9d76 <_vfprintf_r+0x112>
    9e3a:	9b07      	ldr	r3, [sp, #28]
    9e3c:	2101      	movs	r1, #1
    9e3e:	781b      	ldrb	r3, [r3, #0]
    9e40:	202b      	movs	r0, #43	; 0x2b
    9e42:	e798      	b.n	9d76 <_vfprintf_r+0x112>
    9e44:	9b07      	ldr	r3, [sp, #28]
    9e46:	1c5a      	adds	r2, r3, #1
    9e48:	781b      	ldrb	r3, [r3, #0]
    9e4a:	4690      	mov	r8, r2
    9e4c:	2b2a      	cmp	r3, #42	; 0x2a
    9e4e:	d101      	bne.n	9e54 <_vfprintf_r+0x1f0>
    9e50:	f001 fa38 	bl	b2c4 <_vfprintf_r+0x1660>
    9e54:	001a      	movs	r2, r3
    9e56:	2500      	movs	r5, #0
    9e58:	3a30      	subs	r2, #48	; 0x30
    9e5a:	46aa      	mov	sl, r5
    9e5c:	2a09      	cmp	r2, #9
    9e5e:	d901      	bls.n	9e64 <_vfprintf_r+0x200>
    9e60:	f001 f96d 	bl	b13e <_vfprintf_r+0x14da>
    9e64:	0025      	movs	r5, r4
    9e66:	4643      	mov	r3, r8
    9e68:	4654      	mov	r4, sl
    9e6a:	4688      	mov	r8, r1
    9e6c:	4682      	mov	sl, r0
    9e6e:	00a1      	lsls	r1, r4, #2
    9e70:	190c      	adds	r4, r1, r4
    9e72:	7818      	ldrb	r0, [r3, #0]
    9e74:	0064      	lsls	r4, r4, #1
    9e76:	18a4      	adds	r4, r4, r2
    9e78:	0002      	movs	r2, r0
    9e7a:	1c59      	adds	r1, r3, #1
    9e7c:	3a30      	subs	r2, #48	; 0x30
    9e7e:	000b      	movs	r3, r1
    9e80:	2a09      	cmp	r2, #9
    9e82:	d9f4      	bls.n	9e6e <_vfprintf_r+0x20a>
    9e84:	9107      	str	r1, [sp, #28]
    9e86:	0003      	movs	r3, r0
    9e88:	4641      	mov	r1, r8
    9e8a:	4650      	mov	r0, sl
    9e8c:	46a2      	mov	sl, r4
    9e8e:	002c      	movs	r4, r5
    9e90:	e774      	b.n	9d7c <_vfprintf_r+0x118>
    9e92:	9312      	str	r3, [sp, #72]	; 0x48
    9e94:	2900      	cmp	r1, #0
    9e96:	d001      	beq.n	9e9c <_vfprintf_r+0x238>
    9e98:	f001 fa2e 	bl	b2f8 <_vfprintf_r+0x1694>
    9e9c:	4b57      	ldr	r3, [pc, #348]	; (9ffc <_vfprintf_r+0x398>)
    9e9e:	9319      	str	r3, [sp, #100]	; 0x64
    9ea0:	06a3      	lsls	r3, r4, #26
    9ea2:	d501      	bpl.n	9ea8 <_vfprintf_r+0x244>
    9ea4:	f000 fe9a 	bl	abdc <_vfprintf_r+0xf78>
    9ea8:	06e3      	lsls	r3, r4, #27
    9eaa:	d501      	bpl.n	9eb0 <_vfprintf_r+0x24c>
    9eac:	f000 fd9a 	bl	a9e4 <_vfprintf_r+0xd80>
    9eb0:	0663      	lsls	r3, r4, #25
    9eb2:	d401      	bmi.n	9eb8 <_vfprintf_r+0x254>
    9eb4:	f000 fd96 	bl	a9e4 <_vfprintf_r+0xd80>
    9eb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    9eba:	881a      	ldrh	r2, [r3, #0]
    9ebc:	920c      	str	r2, [sp, #48]	; 0x30
    9ebe:	2200      	movs	r2, #0
    9ec0:	3304      	adds	r3, #4
    9ec2:	920d      	str	r2, [sp, #52]	; 0x34
    9ec4:	930f      	str	r3, [sp, #60]	; 0x3c
    9ec6:	07e3      	lsls	r3, r4, #31
    9ec8:	d401      	bmi.n	9ece <_vfprintf_r+0x26a>
    9eca:	f000 fd76 	bl	a9ba <_vfprintf_r+0xd56>
    9ece:	990c      	ldr	r1, [sp, #48]	; 0x30
    9ed0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    9ed2:	000b      	movs	r3, r1
    9ed4:	4313      	orrs	r3, r2
    9ed6:	001a      	movs	r2, r3
    9ed8:	2302      	movs	r3, #2
    9eda:	2a00      	cmp	r2, #0
    9edc:	d008      	beq.n	9ef0 <_vfprintf_r+0x28c>
    9ede:	2030      	movs	r0, #48	; 0x30
    9ee0:	a91e      	add	r1, sp, #120	; 0x78
    9ee2:	7008      	strb	r0, [r1, #0]
    9ee4:	2548      	movs	r5, #72	; 0x48
    9ee6:	4668      	mov	r0, sp
    9ee8:	1940      	adds	r0, r0, r5
    9eea:	7800      	ldrb	r0, [r0, #0]
    9eec:	431c      	orrs	r4, r3
    9eee:	7048      	strb	r0, [r1, #1]
    9ef0:	2100      	movs	r1, #0
    9ef2:	4688      	mov	r8, r1
    9ef4:	a816      	add	r0, sp, #88	; 0x58
    9ef6:	77c1      	strb	r1, [r0, #31]
    9ef8:	4651      	mov	r1, sl
    9efa:	3101      	adds	r1, #1
    9efc:	d100      	bne.n	9f00 <_vfprintf_r+0x29c>
    9efe:	e0e6      	b.n	a0ce <_vfprintf_r+0x46a>
    9f00:	2180      	movs	r1, #128	; 0x80
    9f02:	0020      	movs	r0, r4
    9f04:	4388      	bics	r0, r1
    9f06:	9009      	str	r0, [sp, #36]	; 0x24
    9f08:	2a00      	cmp	r2, #0
    9f0a:	d000      	beq.n	9f0e <_vfprintf_r+0x2aa>
    9f0c:	e0e3      	b.n	a0d6 <_vfprintf_r+0x472>
    9f0e:	4652      	mov	r2, sl
    9f10:	2a00      	cmp	r2, #0
    9f12:	d001      	beq.n	9f18 <_vfprintf_r+0x2b4>
    9f14:	f000 fc38 	bl	a788 <_vfprintf_r+0xb24>
    9f18:	2b00      	cmp	r3, #0
    9f1a:	d001      	beq.n	9f20 <_vfprintf_r+0x2bc>
    9f1c:	f000 fd0c 	bl	a938 <_vfprintf_r+0xcd4>
    9f20:	2001      	movs	r0, #1
    9f22:	ab32      	add	r3, sp, #200	; 0xc8
    9f24:	4020      	ands	r0, r4
    9f26:	900e      	str	r0, [sp, #56]	; 0x38
    9f28:	9311      	str	r3, [sp, #68]	; 0x44
    9f2a:	d008      	beq.n	9f3e <_vfprintf_r+0x2da>
    9f2c:	2327      	movs	r3, #39	; 0x27
    9f2e:	2130      	movs	r1, #48	; 0x30
    9f30:	aa28      	add	r2, sp, #160	; 0xa0
    9f32:	54d1      	strb	r1, [r2, r3]
    9f34:	aa16      	add	r2, sp, #88	; 0x58
    9f36:	4694      	mov	ip, r2
    9f38:	3348      	adds	r3, #72	; 0x48
    9f3a:	4463      	add	r3, ip
    9f3c:	9311      	str	r3, [sp, #68]	; 0x44
    9f3e:	4653      	mov	r3, sl
    9f40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    9f42:	9308      	str	r3, [sp, #32]
    9f44:	4592      	cmp	sl, r2
    9f46:	da00      	bge.n	9f4a <_vfprintf_r+0x2e6>
    9f48:	9208      	str	r2, [sp, #32]
    9f4a:	2300      	movs	r3, #0
    9f4c:	9313      	str	r3, [sp, #76]	; 0x4c
    9f4e:	4643      	mov	r3, r8
    9f50:	2b00      	cmp	r3, #0
    9f52:	d002      	beq.n	9f5a <_vfprintf_r+0x2f6>
    9f54:	9b08      	ldr	r3, [sp, #32]
    9f56:	3301      	adds	r3, #1
    9f58:	9308      	str	r3, [sp, #32]
    9f5a:	2302      	movs	r3, #2
    9f5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    9f5e:	401a      	ands	r2, r3
    9f60:	4691      	mov	r9, r2
    9f62:	d002      	beq.n	9f6a <_vfprintf_r+0x306>
    9f64:	9b08      	ldr	r3, [sp, #32]
    9f66:	3302      	adds	r3, #2
    9f68:	9308      	str	r3, [sp, #32]
    9f6a:	2384      	movs	r3, #132	; 0x84
    9f6c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    9f6e:	401a      	ands	r2, r3
    9f70:	9210      	str	r2, [sp, #64]	; 0x40
    9f72:	d000      	beq.n	9f76 <_vfprintf_r+0x312>
    9f74:	e207      	b.n	a386 <_vfprintf_r+0x722>
    9f76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9f78:	9a08      	ldr	r2, [sp, #32]
    9f7a:	1a9c      	subs	r4, r3, r2
    9f7c:	2c00      	cmp	r4, #0
    9f7e:	dc00      	bgt.n	9f82 <_vfprintf_r+0x31e>
    9f80:	e201      	b.n	a386 <_vfprintf_r+0x722>
    9f82:	491f      	ldr	r1, [pc, #124]	; (a000 <_vfprintf_r+0x39c>)
    9f84:	68ba      	ldr	r2, [r7, #8]
    9f86:	687b      	ldr	r3, [r7, #4]
    9f88:	4688      	mov	r8, r1
    9f8a:	2c10      	cmp	r4, #16
    9f8c:	dd21      	ble.n	9fd2 <_vfprintf_r+0x36e>
    9f8e:	0031      	movs	r1, r6
    9f90:	2510      	movs	r5, #16
    9f92:	465e      	mov	r6, fp
    9f94:	e003      	b.n	9f9e <_vfprintf_r+0x33a>
    9f96:	3c10      	subs	r4, #16
    9f98:	3108      	adds	r1, #8
    9f9a:	2c10      	cmp	r4, #16
    9f9c:	dd17      	ble.n	9fce <_vfprintf_r+0x36a>
    9f9e:	4640      	mov	r0, r8
    9fa0:	3210      	adds	r2, #16
    9fa2:	3301      	adds	r3, #1
    9fa4:	6008      	str	r0, [r1, #0]
    9fa6:	604d      	str	r5, [r1, #4]
    9fa8:	60ba      	str	r2, [r7, #8]
    9faa:	607b      	str	r3, [r7, #4]
    9fac:	2b07      	cmp	r3, #7
    9fae:	ddf2      	ble.n	9f96 <_vfprintf_r+0x332>
    9fb0:	003a      	movs	r2, r7
    9fb2:	0031      	movs	r1, r6
    9fb4:	9806      	ldr	r0, [sp, #24]
    9fb6:	f005 feaf 	bl	fd18 <__sprint_r>
    9fba:	2800      	cmp	r0, #0
    9fbc:	d001      	beq.n	9fc2 <_vfprintf_r+0x35e>
    9fbe:	f000 fccf 	bl	a960 <_vfprintf_r+0xcfc>
    9fc2:	3c10      	subs	r4, #16
    9fc4:	68ba      	ldr	r2, [r7, #8]
    9fc6:	687b      	ldr	r3, [r7, #4]
    9fc8:	a932      	add	r1, sp, #200	; 0xc8
    9fca:	2c10      	cmp	r4, #16
    9fcc:	dce7      	bgt.n	9f9e <_vfprintf_r+0x33a>
    9fce:	46b3      	mov	fp, r6
    9fd0:	000e      	movs	r6, r1
    9fd2:	4641      	mov	r1, r8
    9fd4:	6074      	str	r4, [r6, #4]
    9fd6:	3301      	adds	r3, #1
    9fd8:	18a4      	adds	r4, r4, r2
    9fda:	6031      	str	r1, [r6, #0]
    9fdc:	60bc      	str	r4, [r7, #8]
    9fde:	607b      	str	r3, [r7, #4]
    9fe0:	2b07      	cmp	r3, #7
    9fe2:	dd01      	ble.n	9fe8 <_vfprintf_r+0x384>
    9fe4:	f000 fcae 	bl	a944 <_vfprintf_r+0xce0>
    9fe8:	ab16      	add	r3, sp, #88	; 0x58
    9fea:	7fdb      	ldrb	r3, [r3, #31]
    9fec:	3608      	adds	r6, #8
    9fee:	4698      	mov	r8, r3
    9ff0:	e1ca      	b.n	a388 <_vfprintf_r+0x724>
    9ff2:	46c0      	nop			; (mov r8, r8)
    9ff4:	ffffdfff 	.word	0xffffdfff
    9ff8:	00013e9c 	.word	0x00013e9c
    9ffc:	000139d8 	.word	0x000139d8
    a000:	00014000 	.word	0x00014000
    a004:	2200      	movs	r2, #0
    a006:	9d07      	ldr	r5, [sp, #28]
    a008:	3b30      	subs	r3, #48	; 0x30
    a00a:	46a8      	mov	r8, r5
    a00c:	920b      	str	r2, [sp, #44]	; 0x2c
    a00e:	001a      	movs	r2, r3
    a010:	9408      	str	r4, [sp, #32]
    a012:	002c      	movs	r4, r5
    a014:	4655      	mov	r5, sl
    a016:	4682      	mov	sl, r0
    a018:	4640      	mov	r0, r8
    a01a:	4688      	mov	r8, r1
    a01c:	0011      	movs	r1, r2
    a01e:	2200      	movs	r2, #0
    a020:	0093      	lsls	r3, r2, #2
    a022:	189a      	adds	r2, r3, r2
    a024:	7803      	ldrb	r3, [r0, #0]
    a026:	0052      	lsls	r2, r2, #1
    a028:	188a      	adds	r2, r1, r2
    a02a:	0019      	movs	r1, r3
    a02c:	3401      	adds	r4, #1
    a02e:	3930      	subs	r1, #48	; 0x30
    a030:	0020      	movs	r0, r4
    a032:	2909      	cmp	r1, #9
    a034:	d9f4      	bls.n	a020 <_vfprintf_r+0x3bc>
    a036:	9407      	str	r4, [sp, #28]
    a038:	4650      	mov	r0, sl
    a03a:	9c08      	ldr	r4, [sp, #32]
    a03c:	920b      	str	r2, [sp, #44]	; 0x2c
    a03e:	4641      	mov	r1, r8
    a040:	46aa      	mov	sl, r5
    a042:	e69b      	b.n	9d7c <_vfprintf_r+0x118>
    a044:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    a046:	9312      	str	r3, [sp, #72]	; 0x48
    a048:	6813      	ldr	r3, [r2, #0]
    a04a:	2120      	movs	r1, #32
    a04c:	9308      	str	r3, [sp, #32]
    a04e:	466b      	mov	r3, sp
    a050:	185b      	adds	r3, r3, r1
    a052:	781b      	ldrb	r3, [r3, #0]
    a054:	ad28      	add	r5, sp, #160	; 0xa0
    a056:	702b      	strb	r3, [r5, #0]
    a058:	2300      	movs	r3, #0
    a05a:	a916      	add	r1, sp, #88	; 0x58
    a05c:	77cb      	strb	r3, [r1, #31]
    a05e:	0013      	movs	r3, r2
    a060:	3304      	adds	r3, #4
    a062:	930f      	str	r3, [sp, #60]	; 0x3c
    a064:	2300      	movs	r3, #0
    a066:	9409      	str	r4, [sp, #36]	; 0x24
    a068:	4698      	mov	r8, r3
    a06a:	3301      	adds	r3, #1
    a06c:	9308      	str	r3, [sp, #32]
    a06e:	930e      	str	r3, [sp, #56]	; 0x38
    a070:	2300      	movs	r3, #0
    a072:	9511      	str	r5, [sp, #68]	; 0x44
    a074:	469a      	mov	sl, r3
    a076:	9313      	str	r3, [sp, #76]	; 0x4c
    a078:	e76f      	b.n	9f5a <_vfprintf_r+0x2f6>
    a07a:	9312      	str	r3, [sp, #72]	; 0x48
    a07c:	2900      	cmp	r1, #0
    a07e:	d001      	beq.n	a084 <_vfprintf_r+0x420>
    a080:	f001 f94d 	bl	b31e <_vfprintf_r+0x16ba>
    a084:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    a086:	06a3      	lsls	r3, r4, #26
    a088:	d501      	bpl.n	a08e <_vfprintf_r+0x42a>
    a08a:	f000 fd5a 	bl	ab42 <_vfprintf_r+0xede>
    a08e:	06e3      	lsls	r3, r4, #27
    a090:	d501      	bpl.n	a096 <_vfprintf_r+0x432>
    a092:	f000 fcab 	bl	a9ec <_vfprintf_r+0xd88>
    a096:	0663      	lsls	r3, r4, #25
    a098:	d401      	bmi.n	a09e <_vfprintf_r+0x43a>
    a09a:	f000 fca7 	bl	a9ec <_vfprintf_r+0xd88>
    a09e:	2100      	movs	r1, #0
    a0a0:	5e53      	ldrsh	r3, [r2, r1]
    a0a2:	930c      	str	r3, [sp, #48]	; 0x30
    a0a4:	3204      	adds	r2, #4
    a0a6:	17db      	asrs	r3, r3, #31
    a0a8:	930d      	str	r3, [sp, #52]	; 0x34
    a0aa:	920f      	str	r2, [sp, #60]	; 0x3c
    a0ac:	2b00      	cmp	r3, #0
    a0ae:	da01      	bge.n	a0b4 <_vfprintf_r+0x450>
    a0b0:	f000 fdb2 	bl	ac18 <_vfprintf_r+0xfb4>
    a0b4:	990c      	ldr	r1, [sp, #48]	; 0x30
    a0b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    a0b8:	0008      	movs	r0, r1
    a0ba:	4651      	mov	r1, sl
    a0bc:	ab16      	add	r3, sp, #88	; 0x58
    a0be:	7fdb      	ldrb	r3, [r3, #31]
    a0c0:	4310      	orrs	r0, r2
    a0c2:	4698      	mov	r8, r3
    a0c4:	0002      	movs	r2, r0
    a0c6:	2301      	movs	r3, #1
    a0c8:	3101      	adds	r1, #1
    a0ca:	d000      	beq.n	a0ce <_vfprintf_r+0x46a>
    a0cc:	e718      	b.n	9f00 <_vfprintf_r+0x29c>
    a0ce:	2a00      	cmp	r2, #0
    a0d0:	d100      	bne.n	a0d4 <_vfprintf_r+0x470>
    a0d2:	e35a      	b.n	a78a <_vfprintf_r+0xb26>
    a0d4:	9409      	str	r4, [sp, #36]	; 0x24
    a0d6:	2b01      	cmp	r3, #1
    a0d8:	d101      	bne.n	a0de <_vfprintf_r+0x47a>
    a0da:	f000 fc06 	bl	a8ea <_vfprintf_r+0xc86>
    a0de:	2b02      	cmp	r3, #2
    a0e0:	d000      	beq.n	a0e4 <_vfprintf_r+0x480>
    a0e2:	e380      	b.n	a7e6 <_vfprintf_r+0xb82>
    a0e4:	9c19      	ldr	r4, [sp, #100]	; 0x64
    a0e6:	200f      	movs	r0, #15
    a0e8:	46a1      	mov	r9, r4
    a0ea:	46b4      	mov	ip, r6
    a0ec:	ab32      	add	r3, sp, #200	; 0xc8
    a0ee:	0019      	movs	r1, r3
    a0f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a0f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a0f4:	0004      	movs	r4, r0
    a0f6:	464d      	mov	r5, r9
    a0f8:	4014      	ands	r4, r2
    a0fa:	5d2c      	ldrb	r4, [r5, r4]
    a0fc:	071e      	lsls	r6, r3, #28
    a0fe:	0915      	lsrs	r5, r2, #4
    a100:	3901      	subs	r1, #1
    a102:	432e      	orrs	r6, r5
    a104:	700c      	strb	r4, [r1, #0]
    a106:	091c      	lsrs	r4, r3, #4
    a108:	0023      	movs	r3, r4
    a10a:	0034      	movs	r4, r6
    a10c:	0032      	movs	r2, r6
    a10e:	431c      	orrs	r4, r3
    a110:	d1f0      	bne.n	a0f4 <_vfprintf_r+0x490>
    a112:	920c      	str	r2, [sp, #48]	; 0x30
    a114:	930d      	str	r3, [sp, #52]	; 0x34
    a116:	ab32      	add	r3, sp, #200	; 0xc8
    a118:	1a5b      	subs	r3, r3, r1
    a11a:	9111      	str	r1, [sp, #68]	; 0x44
    a11c:	4666      	mov	r6, ip
    a11e:	930e      	str	r3, [sp, #56]	; 0x38
    a120:	e70d      	b.n	9f3e <_vfprintf_r+0x2da>
    a122:	4663      	mov	r3, ip
    a124:	431c      	orrs	r4, r3
    a126:	9b07      	ldr	r3, [sp, #28]
    a128:	781b      	ldrb	r3, [r3, #0]
    a12a:	e624      	b.n	9d76 <_vfprintf_r+0x112>
    a12c:	9b07      	ldr	r3, [sp, #28]
    a12e:	781b      	ldrb	r3, [r3, #0]
    a130:	2b6c      	cmp	r3, #108	; 0x6c
    a132:	d101      	bne.n	a138 <_vfprintf_r+0x4d4>
    a134:	f000 fe8c 	bl	ae50 <_vfprintf_r+0x11ec>
    a138:	2210      	movs	r2, #16
    a13a:	4314      	orrs	r4, r2
    a13c:	e61b      	b.n	9d76 <_vfprintf_r+0x112>
    a13e:	2900      	cmp	r1, #0
    a140:	d001      	beq.n	a146 <_vfprintf_r+0x4e2>
    a142:	f001 f8d5 	bl	b2f0 <_vfprintf_r+0x168c>
    a146:	06a3      	lsls	r3, r4, #26
    a148:	d501      	bpl.n	a14e <_vfprintf_r+0x4ea>
    a14a:	f000 fe76 	bl	ae3a <_vfprintf_r+0x11d6>
    a14e:	06e3      	lsls	r3, r4, #27
    a150:	d500      	bpl.n	a154 <_vfprintf_r+0x4f0>
    a152:	e110      	b.n	a376 <_vfprintf_r+0x712>
    a154:	0663      	lsls	r3, r4, #25
    a156:	d400      	bmi.n	a15a <_vfprintf_r+0x4f6>
    a158:	e10d      	b.n	a376 <_vfprintf_r+0x712>
    a15a:	4669      	mov	r1, sp
    a15c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a15e:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    a160:	681a      	ldr	r2, [r3, #0]
    a162:	3304      	adds	r3, #4
    a164:	9208      	str	r2, [sp, #32]
    a166:	8011      	strh	r1, [r2, #0]
    a168:	930f      	str	r3, [sp, #60]	; 0x3c
    a16a:	e5c9      	b.n	9d00 <_vfprintf_r+0x9c>
    a16c:	990f      	ldr	r1, [sp, #60]	; 0x3c
    a16e:	2230      	movs	r2, #48	; 0x30
    a170:	680b      	ldr	r3, [r1, #0]
    a172:	930c      	str	r3, [sp, #48]	; 0x30
    a174:	2300      	movs	r3, #0
    a176:	930d      	str	r3, [sp, #52]	; 0x34
    a178:	3302      	adds	r3, #2
    a17a:	431c      	orrs	r4, r3
    a17c:	ab1e      	add	r3, sp, #120	; 0x78
    a17e:	701a      	strb	r2, [r3, #0]
    a180:	3248      	adds	r2, #72	; 0x48
    a182:	705a      	strb	r2, [r3, #1]
    a184:	000b      	movs	r3, r1
    a186:	3304      	adds	r3, #4
    a188:	930f      	str	r3, [sp, #60]	; 0x3c
    a18a:	4bc1      	ldr	r3, [pc, #772]	; (a490 <_vfprintf_r+0x82c>)
    a18c:	9212      	str	r2, [sp, #72]	; 0x48
    a18e:	9319      	str	r3, [sp, #100]	; 0x64
    a190:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a192:	2302      	movs	r3, #2
    a194:	e6ac      	b.n	9ef0 <_vfprintf_r+0x28c>
    a196:	464b      	mov	r3, r9
    a198:	431c      	orrs	r4, r3
    a19a:	9b07      	ldr	r3, [sp, #28]
    a19c:	781b      	ldrb	r3, [r3, #0]
    a19e:	e5ea      	b.n	9d76 <_vfprintf_r+0x112>
    a1a0:	9312      	str	r3, [sp, #72]	; 0x48
    a1a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a1a4:	a916      	add	r1, sp, #88	; 0x58
    a1a6:	1d1d      	adds	r5, r3, #4
    a1a8:	681b      	ldr	r3, [r3, #0]
    a1aa:	001a      	movs	r2, r3
    a1ac:	9311      	str	r3, [sp, #68]	; 0x44
    a1ae:	2300      	movs	r3, #0
    a1b0:	77cb      	strb	r3, [r1, #31]
    a1b2:	2a00      	cmp	r2, #0
    a1b4:	d101      	bne.n	a1ba <_vfprintf_r+0x556>
    a1b6:	f000 ff01 	bl	afbc <_vfprintf_r+0x1358>
    a1ba:	4653      	mov	r3, sl
    a1bc:	3301      	adds	r3, #1
    a1be:	d101      	bne.n	a1c4 <_vfprintf_r+0x560>
    a1c0:	f000 fe64 	bl	ae8c <_vfprintf_r+0x1228>
    a1c4:	4652      	mov	r2, sl
    a1c6:	2100      	movs	r1, #0
    a1c8:	9811      	ldr	r0, [sp, #68]	; 0x44
    a1ca:	f003 fa6b 	bl	d6a4 <memchr>
    a1ce:	2800      	cmp	r0, #0
    a1d0:	d101      	bne.n	a1d6 <_vfprintf_r+0x572>
    a1d2:	f000 ff78 	bl	b0c6 <_vfprintf_r+0x1462>
    a1d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a1d8:	1ac3      	subs	r3, r0, r3
    a1da:	001a      	movs	r2, r3
    a1dc:	930e      	str	r3, [sp, #56]	; 0x38
    a1de:	43db      	mvns	r3, r3
    a1e0:	17db      	asrs	r3, r3, #31
    a1e2:	401a      	ands	r2, r3
    a1e4:	ab16      	add	r3, sp, #88	; 0x58
    a1e6:	7fdb      	ldrb	r3, [r3, #31]
    a1e8:	9208      	str	r2, [sp, #32]
    a1ea:	4698      	mov	r8, r3
    a1ec:	2300      	movs	r3, #0
    a1ee:	950f      	str	r5, [sp, #60]	; 0x3c
    a1f0:	9409      	str	r4, [sp, #36]	; 0x24
    a1f2:	469a      	mov	sl, r3
    a1f4:	9313      	str	r3, [sp, #76]	; 0x4c
    a1f6:	e6aa      	b.n	9f4e <_vfprintf_r+0x2ea>
    a1f8:	2308      	movs	r3, #8
    a1fa:	431c      	orrs	r4, r3
    a1fc:	9b07      	ldr	r3, [sp, #28]
    a1fe:	781b      	ldrb	r3, [r3, #0]
    a200:	e5b9      	b.n	9d76 <_vfprintf_r+0x112>
    a202:	9312      	str	r3, [sp, #72]	; 0x48
    a204:	2310      	movs	r3, #16
    a206:	431c      	orrs	r4, r3
    a208:	06a3      	lsls	r3, r4, #26
    a20a:	d501      	bpl.n	a210 <_vfprintf_r+0x5ac>
    a20c:	f000 fca7 	bl	ab5e <_vfprintf_r+0xefa>
    a210:	06e3      	lsls	r3, r4, #27
    a212:	d500      	bpl.n	a216 <_vfprintf_r+0x5b2>
    a214:	e3ee      	b.n	a9f4 <_vfprintf_r+0xd90>
    a216:	0663      	lsls	r3, r4, #25
    a218:	d400      	bmi.n	a21c <_vfprintf_r+0x5b8>
    a21a:	e3eb      	b.n	a9f4 <_vfprintf_r+0xd90>
    a21c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a21e:	881a      	ldrh	r2, [r3, #0]
    a220:	920c      	str	r2, [sp, #48]	; 0x30
    a222:	2200      	movs	r2, #0
    a224:	3304      	adds	r3, #4
    a226:	920d      	str	r2, [sp, #52]	; 0x34
    a228:	930f      	str	r3, [sp, #60]	; 0x3c
    a22a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a22c:	2300      	movs	r3, #0
    a22e:	e65f      	b.n	9ef0 <_vfprintf_r+0x28c>
    a230:	9312      	str	r3, [sp, #72]	; 0x48
    a232:	2310      	movs	r3, #16
    a234:	431c      	orrs	r4, r3
    a236:	06a3      	lsls	r3, r4, #26
    a238:	d501      	bpl.n	a23e <_vfprintf_r+0x5da>
    a23a:	f000 fcba 	bl	abb2 <_vfprintf_r+0xf4e>
    a23e:	06e3      	lsls	r3, r4, #27
    a240:	d500      	bpl.n	a244 <_vfprintf_r+0x5e0>
    a242:	e3da      	b.n	a9fa <_vfprintf_r+0xd96>
    a244:	0663      	lsls	r3, r4, #25
    a246:	d400      	bmi.n	a24a <_vfprintf_r+0x5e6>
    a248:	e3d7      	b.n	a9fa <_vfprintf_r+0xd96>
    a24a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a24c:	881a      	ldrh	r2, [r3, #0]
    a24e:	920c      	str	r2, [sp, #48]	; 0x30
    a250:	2200      	movs	r2, #0
    a252:	3304      	adds	r3, #4
    a254:	920d      	str	r2, [sp, #52]	; 0x34
    a256:	930f      	str	r3, [sp, #60]	; 0x3c
    a258:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a25a:	2301      	movs	r3, #1
    a25c:	e648      	b.n	9ef0 <_vfprintf_r+0x28c>
    a25e:	9312      	str	r3, [sp, #72]	; 0x48
    a260:	2900      	cmp	r1, #0
    a262:	d001      	beq.n	a268 <_vfprintf_r+0x604>
    a264:	f001 f857 	bl	b316 <_vfprintf_r+0x16b2>
    a268:	4b8a      	ldr	r3, [pc, #552]	; (a494 <_vfprintf_r+0x830>)
    a26a:	9319      	str	r3, [sp, #100]	; 0x64
    a26c:	e618      	b.n	9ea0 <_vfprintf_r+0x23c>
    a26e:	2301      	movs	r3, #1
    a270:	431c      	orrs	r4, r3
    a272:	9b07      	ldr	r3, [sp, #28]
    a274:	781b      	ldrb	r3, [r3, #0]
    a276:	e57e      	b.n	9d76 <_vfprintf_r+0x112>
    a278:	2380      	movs	r3, #128	; 0x80
    a27a:	431c      	orrs	r4, r3
    a27c:	9b07      	ldr	r3, [sp, #28]
    a27e:	781b      	ldrb	r3, [r3, #0]
    a280:	e579      	b.n	9d76 <_vfprintf_r+0x112>
    a282:	9b07      	ldr	r3, [sp, #28]
    a284:	781b      	ldrb	r3, [r3, #0]
    a286:	2800      	cmp	r0, #0
    a288:	d000      	beq.n	a28c <_vfprintf_r+0x628>
    a28a:	e574      	b.n	9d76 <_vfprintf_r+0x112>
    a28c:	2101      	movs	r1, #1
    a28e:	3020      	adds	r0, #32
    a290:	e571      	b.n	9d76 <_vfprintf_r+0x112>
    a292:	9312      	str	r3, [sp, #72]	; 0x48
    a294:	2900      	cmp	r1, #0
    a296:	d001      	beq.n	a29c <_vfprintf_r+0x638>
    a298:	f001 f839 	bl	b30e <_vfprintf_r+0x16aa>
    a29c:	2207      	movs	r2, #7
    a29e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a2a0:	3307      	adds	r3, #7
    a2a2:	4393      	bics	r3, r2
    a2a4:	3201      	adds	r2, #1
    a2a6:	4694      	mov	ip, r2
    a2a8:	449c      	add	ip, r3
    a2aa:	4662      	mov	r2, ip
    a2ac:	920f      	str	r2, [sp, #60]	; 0x3c
    a2ae:	681a      	ldr	r2, [r3, #0]
    a2b0:	9216      	str	r2, [sp, #88]	; 0x58
    a2b2:	685b      	ldr	r3, [r3, #4]
    a2b4:	2201      	movs	r2, #1
    a2b6:	9315      	str	r3, [sp, #84]	; 0x54
    a2b8:	9b15      	ldr	r3, [sp, #84]	; 0x54
    a2ba:	9d16      	ldr	r5, [sp, #88]	; 0x58
    a2bc:	005b      	lsls	r3, r3, #1
    a2be:	085b      	lsrs	r3, r3, #1
    a2c0:	4698      	mov	r8, r3
    a2c2:	4252      	negs	r2, r2
    a2c4:	4b74      	ldr	r3, [pc, #464]	; (a498 <_vfprintf_r+0x834>)
    a2c6:	0028      	movs	r0, r5
    a2c8:	4641      	mov	r1, r8
    a2ca:	f006 fe41 	bl	10f50 <__aeabi_dcmpun>
    a2ce:	2800      	cmp	r0, #0
    a2d0:	d001      	beq.n	a2d6 <_vfprintf_r+0x672>
    a2d2:	f000 fcb4 	bl	ac3e <_vfprintf_r+0xfda>
    a2d6:	2201      	movs	r2, #1
    a2d8:	4b6f      	ldr	r3, [pc, #444]	; (a498 <_vfprintf_r+0x834>)
    a2da:	4252      	negs	r2, r2
    a2dc:	0028      	movs	r0, r5
    a2de:	4641      	mov	r1, r8
    a2e0:	f7fc fb30 	bl	6944 <__aeabi_dcmple>
    a2e4:	2800      	cmp	r0, #0
    a2e6:	d001      	beq.n	a2ec <_vfprintf_r+0x688>
    a2e8:	f000 fca9 	bl	ac3e <_vfprintf_r+0xfda>
    a2ec:	2200      	movs	r2, #0
    a2ee:	2300      	movs	r3, #0
    a2f0:	9816      	ldr	r0, [sp, #88]	; 0x58
    a2f2:	9915      	ldr	r1, [sp, #84]	; 0x54
    a2f4:	f7fc fb1c 	bl	6930 <__aeabi_dcmplt>
    a2f8:	2800      	cmp	r0, #0
    a2fa:	d001      	beq.n	a300 <_vfprintf_r+0x69c>
    a2fc:	f000 fd55 	bl	adaa <_vfprintf_r+0x1146>
    a300:	ab16      	add	r3, sp, #88	; 0x58
    a302:	7fdb      	ldrb	r3, [r3, #31]
    a304:	4698      	mov	r8, r3
    a306:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a308:	2b47      	cmp	r3, #71	; 0x47
    a30a:	dd01      	ble.n	a310 <_vfprintf_r+0x6ac>
    a30c:	f000 fdb4 	bl	ae78 <_vfprintf_r+0x1214>
    a310:	4b62      	ldr	r3, [pc, #392]	; (a49c <_vfprintf_r+0x838>)
    a312:	9311      	str	r3, [sp, #68]	; 0x44
    a314:	2380      	movs	r3, #128	; 0x80
    a316:	439c      	bics	r4, r3
    a318:	3b7d      	subs	r3, #125	; 0x7d
    a31a:	9308      	str	r3, [sp, #32]
    a31c:	930e      	str	r3, [sp, #56]	; 0x38
    a31e:	2300      	movs	r3, #0
    a320:	9409      	str	r4, [sp, #36]	; 0x24
    a322:	469a      	mov	sl, r3
    a324:	9313      	str	r3, [sp, #76]	; 0x4c
    a326:	e612      	b.n	9f4e <_vfprintf_r+0x2ea>
    a328:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a32a:	1d1a      	adds	r2, r3, #4
    a32c:	681b      	ldr	r3, [r3, #0]
    a32e:	930b      	str	r3, [sp, #44]	; 0x2c
    a330:	2b00      	cmp	r3, #0
    a332:	da00      	bge.n	a336 <_vfprintf_r+0x6d2>
    a334:	e578      	b.n	9e28 <_vfprintf_r+0x1c4>
    a336:	9b07      	ldr	r3, [sp, #28]
    a338:	920f      	str	r2, [sp, #60]	; 0x3c
    a33a:	781b      	ldrb	r3, [r3, #0]
    a33c:	e51b      	b.n	9d76 <_vfprintf_r+0x112>
    a33e:	9312      	str	r3, [sp, #72]	; 0x48
    a340:	2900      	cmp	r1, #0
    a342:	d001      	beq.n	a348 <_vfprintf_r+0x6e4>
    a344:	f000 ffcc 	bl	b2e0 <_vfprintf_r+0x167c>
    a348:	2310      	movs	r3, #16
    a34a:	431c      	orrs	r4, r3
    a34c:	e69a      	b.n	a084 <_vfprintf_r+0x420>
    a34e:	9312      	str	r3, [sp, #72]	; 0x48
    a350:	e771      	b.n	a236 <_vfprintf_r+0x5d2>
    a352:	9312      	str	r3, [sp, #72]	; 0x48
    a354:	e758      	b.n	a208 <_vfprintf_r+0x5a4>
    a356:	9312      	str	r3, [sp, #72]	; 0x48
    a358:	2900      	cmp	r1, #0
    a35a:	d001      	beq.n	a360 <_vfprintf_r+0x6fc>
    a35c:	f000 ffd3 	bl	b306 <_vfprintf_r+0x16a2>
    a360:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a362:	2b00      	cmp	r3, #0
    a364:	d100      	bne.n	a368 <_vfprintf_r+0x704>
    a366:	e18d      	b.n	a684 <_vfprintf_r+0xa20>
    a368:	ad28      	add	r5, sp, #160	; 0xa0
    a36a:	702b      	strb	r3, [r5, #0]
    a36c:	2300      	movs	r3, #0
    a36e:	aa16      	add	r2, sp, #88	; 0x58
    a370:	77d3      	strb	r3, [r2, #31]
    a372:	9409      	str	r4, [sp, #36]	; 0x24
    a374:	e678      	b.n	a068 <_vfprintf_r+0x404>
    a376:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    a378:	990a      	ldr	r1, [sp, #40]	; 0x28
    a37a:	6813      	ldr	r3, [r2, #0]
    a37c:	6019      	str	r1, [r3, #0]
    a37e:	0013      	movs	r3, r2
    a380:	3304      	adds	r3, #4
    a382:	930f      	str	r3, [sp, #60]	; 0x3c
    a384:	e4bc      	b.n	9d00 <_vfprintf_r+0x9c>
    a386:	68bc      	ldr	r4, [r7, #8]
    a388:	4643      	mov	r3, r8
    a38a:	2b00      	cmp	r3, #0
    a38c:	d00f      	beq.n	a3ae <_vfprintf_r+0x74a>
    a38e:	aa16      	add	r2, sp, #88	; 0x58
    a390:	231f      	movs	r3, #31
    a392:	4694      	mov	ip, r2
    a394:	4463      	add	r3, ip
    a396:	6033      	str	r3, [r6, #0]
    a398:	2301      	movs	r3, #1
    a39a:	6073      	str	r3, [r6, #4]
    a39c:	687b      	ldr	r3, [r7, #4]
    a39e:	3401      	adds	r4, #1
    a3a0:	3301      	adds	r3, #1
    a3a2:	60bc      	str	r4, [r7, #8]
    a3a4:	607b      	str	r3, [r7, #4]
    a3a6:	2b07      	cmp	r3, #7
    a3a8:	dd00      	ble.n	a3ac <_vfprintf_r+0x748>
    a3aa:	e203      	b.n	a7b4 <_vfprintf_r+0xb50>
    a3ac:	3608      	adds	r6, #8
    a3ae:	464b      	mov	r3, r9
    a3b0:	2b00      	cmp	r3, #0
    a3b2:	d00c      	beq.n	a3ce <_vfprintf_r+0x76a>
    a3b4:	ab1e      	add	r3, sp, #120	; 0x78
    a3b6:	6033      	str	r3, [r6, #0]
    a3b8:	2302      	movs	r3, #2
    a3ba:	6073      	str	r3, [r6, #4]
    a3bc:	687b      	ldr	r3, [r7, #4]
    a3be:	3402      	adds	r4, #2
    a3c0:	3301      	adds	r3, #1
    a3c2:	60bc      	str	r4, [r7, #8]
    a3c4:	607b      	str	r3, [r7, #4]
    a3c6:	2b07      	cmp	r3, #7
    a3c8:	dd00      	ble.n	a3cc <_vfprintf_r+0x768>
    a3ca:	e1fd      	b.n	a7c8 <_vfprintf_r+0xb64>
    a3cc:	3608      	adds	r6, #8
    a3ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a3d0:	2b80      	cmp	r3, #128	; 0x80
    a3d2:	d100      	bne.n	a3d6 <_vfprintf_r+0x772>
    a3d4:	e173      	b.n	a6be <_vfprintf_r+0xa5a>
    a3d6:	4653      	mov	r3, sl
    a3d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    a3da:	1a9d      	subs	r5, r3, r2
    a3dc:	2d00      	cmp	r5, #0
    a3de:	dd32      	ble.n	a446 <_vfprintf_r+0x7e2>
    a3e0:	4a2f      	ldr	r2, [pc, #188]	; (a4a0 <_vfprintf_r+0x83c>)
    a3e2:	687b      	ldr	r3, [r7, #4]
    a3e4:	4691      	mov	r9, r2
    a3e6:	2d10      	cmp	r5, #16
    a3e8:	dd22      	ble.n	a430 <_vfprintf_r+0x7cc>
    a3ea:	2210      	movs	r2, #16
    a3ec:	4692      	mov	sl, r2
    a3ee:	0022      	movs	r2, r4
    a3f0:	465c      	mov	r4, fp
    a3f2:	e003      	b.n	a3fc <_vfprintf_r+0x798>
    a3f4:	3d10      	subs	r5, #16
    a3f6:	3608      	adds	r6, #8
    a3f8:	2d10      	cmp	r5, #16
    a3fa:	dd17      	ble.n	a42c <_vfprintf_r+0x7c8>
    a3fc:	4649      	mov	r1, r9
    a3fe:	6031      	str	r1, [r6, #0]
    a400:	4651      	mov	r1, sl
    a402:	3210      	adds	r2, #16
    a404:	3301      	adds	r3, #1
    a406:	6071      	str	r1, [r6, #4]
    a408:	60ba      	str	r2, [r7, #8]
    a40a:	607b      	str	r3, [r7, #4]
    a40c:	2b07      	cmp	r3, #7
    a40e:	ddf1      	ble.n	a3f4 <_vfprintf_r+0x790>
    a410:	003a      	movs	r2, r7
    a412:	0021      	movs	r1, r4
    a414:	9806      	ldr	r0, [sp, #24]
    a416:	f005 fc7f 	bl	fd18 <__sprint_r>
    a41a:	2800      	cmp	r0, #0
    a41c:	d000      	beq.n	a420 <_vfprintf_r+0x7bc>
    a41e:	e18a      	b.n	a736 <_vfprintf_r+0xad2>
    a420:	3d10      	subs	r5, #16
    a422:	68ba      	ldr	r2, [r7, #8]
    a424:	687b      	ldr	r3, [r7, #4]
    a426:	ae32      	add	r6, sp, #200	; 0xc8
    a428:	2d10      	cmp	r5, #16
    a42a:	dce7      	bgt.n	a3fc <_vfprintf_r+0x798>
    a42c:	46a3      	mov	fp, r4
    a42e:	0014      	movs	r4, r2
    a430:	464a      	mov	r2, r9
    a432:	1964      	adds	r4, r4, r5
    a434:	3301      	adds	r3, #1
    a436:	6032      	str	r2, [r6, #0]
    a438:	6075      	str	r5, [r6, #4]
    a43a:	60bc      	str	r4, [r7, #8]
    a43c:	607b      	str	r3, [r7, #4]
    a43e:	2b07      	cmp	r3, #7
    a440:	dd00      	ble.n	a444 <_vfprintf_r+0x7e0>
    a442:	e1ad      	b.n	a7a0 <_vfprintf_r+0xb3c>
    a444:	3608      	adds	r6, #8
    a446:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a448:	05db      	lsls	r3, r3, #23
    a44a:	d500      	bpl.n	a44e <_vfprintf_r+0x7ea>
    a44c:	e0be      	b.n	a5cc <_vfprintf_r+0x968>
    a44e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a450:	6033      	str	r3, [r6, #0]
    a452:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    a454:	469c      	mov	ip, r3
    a456:	6073      	str	r3, [r6, #4]
    a458:	687b      	ldr	r3, [r7, #4]
    a45a:	4464      	add	r4, ip
    a45c:	3301      	adds	r3, #1
    a45e:	60bc      	str	r4, [r7, #8]
    a460:	607b      	str	r3, [r7, #4]
    a462:	2b07      	cmp	r3, #7
    a464:	dd00      	ble.n	a468 <_vfprintf_r+0x804>
    a466:	e0a6      	b.n	a5b6 <_vfprintf_r+0x952>
    a468:	3608      	adds	r6, #8
    a46a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a46c:	075b      	lsls	r3, r3, #29
    a46e:	d54a      	bpl.n	a506 <_vfprintf_r+0x8a2>
    a470:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a472:	9a08      	ldr	r2, [sp, #32]
    a474:	1a9d      	subs	r5, r3, r2
    a476:	2d00      	cmp	r5, #0
    a478:	dd45      	ble.n	a506 <_vfprintf_r+0x8a2>
    a47a:	4a0a      	ldr	r2, [pc, #40]	; (a4a4 <_vfprintf_r+0x840>)
    a47c:	687b      	ldr	r3, [r7, #4]
    a47e:	4690      	mov	r8, r2
    a480:	2d10      	cmp	r5, #16
    a482:	dd2f      	ble.n	a4e4 <_vfprintf_r+0x880>
    a484:	2210      	movs	r2, #16
    a486:	4691      	mov	r9, r2
    a488:	0022      	movs	r2, r4
    a48a:	465c      	mov	r4, fp
    a48c:	e010      	b.n	a4b0 <_vfprintf_r+0x84c>
    a48e:	46c0      	nop			; (mov r8, r8)
    a490:	000139d8 	.word	0x000139d8
    a494:	000139c4 	.word	0x000139c4
    a498:	7fefffff 	.word	0x7fefffff
    a49c:	000139b4 	.word	0x000139b4
    a4a0:	00014010 	.word	0x00014010
    a4a4:	00014000 	.word	0x00014000
    a4a8:	3d10      	subs	r5, #16
    a4aa:	3608      	adds	r6, #8
    a4ac:	2d10      	cmp	r5, #16
    a4ae:	dd17      	ble.n	a4e0 <_vfprintf_r+0x87c>
    a4b0:	49d1      	ldr	r1, [pc, #836]	; (a7f8 <_vfprintf_r+0xb94>)
    a4b2:	3210      	adds	r2, #16
    a4b4:	6031      	str	r1, [r6, #0]
    a4b6:	4649      	mov	r1, r9
    a4b8:	3301      	adds	r3, #1
    a4ba:	6071      	str	r1, [r6, #4]
    a4bc:	60ba      	str	r2, [r7, #8]
    a4be:	607b      	str	r3, [r7, #4]
    a4c0:	2b07      	cmp	r3, #7
    a4c2:	ddf1      	ble.n	a4a8 <_vfprintf_r+0x844>
    a4c4:	003a      	movs	r2, r7
    a4c6:	0021      	movs	r1, r4
    a4c8:	9806      	ldr	r0, [sp, #24]
    a4ca:	f005 fc25 	bl	fd18 <__sprint_r>
    a4ce:	2800      	cmp	r0, #0
    a4d0:	d000      	beq.n	a4d4 <_vfprintf_r+0x870>
    a4d2:	e130      	b.n	a736 <_vfprintf_r+0xad2>
    a4d4:	3d10      	subs	r5, #16
    a4d6:	68ba      	ldr	r2, [r7, #8]
    a4d8:	687b      	ldr	r3, [r7, #4]
    a4da:	ae32      	add	r6, sp, #200	; 0xc8
    a4dc:	2d10      	cmp	r5, #16
    a4de:	dce7      	bgt.n	a4b0 <_vfprintf_r+0x84c>
    a4e0:	46a3      	mov	fp, r4
    a4e2:	0014      	movs	r4, r2
    a4e4:	4642      	mov	r2, r8
    a4e6:	1964      	adds	r4, r4, r5
    a4e8:	3301      	adds	r3, #1
    a4ea:	c624      	stmia	r6!, {r2, r5}
    a4ec:	60bc      	str	r4, [r7, #8]
    a4ee:	607b      	str	r3, [r7, #4]
    a4f0:	2b07      	cmp	r3, #7
    a4f2:	dd08      	ble.n	a506 <_vfprintf_r+0x8a2>
    a4f4:	003a      	movs	r2, r7
    a4f6:	4659      	mov	r1, fp
    a4f8:	9806      	ldr	r0, [sp, #24]
    a4fa:	f005 fc0d 	bl	fd18 <__sprint_r>
    a4fe:	2800      	cmp	r0, #0
    a500:	d000      	beq.n	a504 <_vfprintf_r+0x8a0>
    a502:	e13f      	b.n	a784 <_vfprintf_r+0xb20>
    a504:	68bc      	ldr	r4, [r7, #8]
    a506:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a508:	9908      	ldr	r1, [sp, #32]
    a50a:	428b      	cmp	r3, r1
    a50c:	da00      	bge.n	a510 <_vfprintf_r+0x8ac>
    a50e:	000b      	movs	r3, r1
    a510:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a512:	4694      	mov	ip, r2
    a514:	449c      	add	ip, r3
    a516:	4663      	mov	r3, ip
    a518:	930a      	str	r3, [sp, #40]	; 0x28
    a51a:	2c00      	cmp	r4, #0
    a51c:	d000      	beq.n	a520 <_vfprintf_r+0x8bc>
    a51e:	e129      	b.n	a774 <_vfprintf_r+0xb10>
    a520:	2300      	movs	r3, #0
    a522:	ae32      	add	r6, sp, #200	; 0xc8
    a524:	607b      	str	r3, [r7, #4]
    a526:	f7ff fbeb 	bl	9d00 <_vfprintf_r+0x9c>
    a52a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a52c:	2b01      	cmp	r3, #1
    a52e:	dc00      	bgt.n	a532 <_vfprintf_r+0x8ce>
    a530:	e103      	b.n	a73a <_vfprintf_r+0xad6>
    a532:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a534:	3401      	adds	r4, #1
    a536:	6033      	str	r3, [r6, #0]
    a538:	2301      	movs	r3, #1
    a53a:	6073      	str	r3, [r6, #4]
    a53c:	687b      	ldr	r3, [r7, #4]
    a53e:	60bc      	str	r4, [r7, #8]
    a540:	3301      	adds	r3, #1
    a542:	607b      	str	r3, [r7, #4]
    a544:	2b07      	cmp	r3, #7
    a546:	dd00      	ble.n	a54a <_vfprintf_r+0x8e6>
    a548:	e2ef      	b.n	ab2a <_vfprintf_r+0xec6>
    a54a:	3608      	adds	r6, #8
    a54c:	9a18      	ldr	r2, [sp, #96]	; 0x60
    a54e:	3301      	adds	r3, #1
    a550:	6032      	str	r2, [r6, #0]
    a552:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    a554:	4698      	mov	r8, r3
    a556:	4694      	mov	ip, r2
    a558:	4464      	add	r4, ip
    a55a:	6072      	str	r2, [r6, #4]
    a55c:	60bc      	str	r4, [r7, #8]
    a55e:	607b      	str	r3, [r7, #4]
    a560:	2b07      	cmp	r3, #7
    a562:	dd00      	ble.n	a566 <_vfprintf_r+0x902>
    a564:	e318      	b.n	ab98 <_vfprintf_r+0xf34>
    a566:	3608      	adds	r6, #8
    a568:	2200      	movs	r2, #0
    a56a:	2300      	movs	r3, #0
    a56c:	9816      	ldr	r0, [sp, #88]	; 0x58
    a56e:	9915      	ldr	r1, [sp, #84]	; 0x54
    a570:	f7fc f9d8 	bl	6924 <__aeabi_dcmpeq>
    a574:	2800      	cmp	r0, #0
    a576:	d000      	beq.n	a57a <_vfprintf_r+0x916>
    a578:	e1f4      	b.n	a964 <_vfprintf_r+0xd00>
    a57a:	9d11      	ldr	r5, [sp, #68]	; 0x44
    a57c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a57e:	3501      	adds	r5, #1
    a580:	3b01      	subs	r3, #1
    a582:	6035      	str	r5, [r6, #0]
    a584:	6073      	str	r3, [r6, #4]
    a586:	18e4      	adds	r4, r4, r3
    a588:	2301      	movs	r3, #1
    a58a:	469c      	mov	ip, r3
    a58c:	44e0      	add	r8, ip
    a58e:	4643      	mov	r3, r8
    a590:	60bc      	str	r4, [r7, #8]
    a592:	607b      	str	r3, [r7, #4]
    a594:	2b07      	cmp	r3, #7
    a596:	dd00      	ble.n	a59a <_vfprintf_r+0x936>
    a598:	e0e0      	b.n	a75c <_vfprintf_r+0xaf8>
    a59a:	3608      	adds	r6, #8
    a59c:	ab21      	add	r3, sp, #132	; 0x84
    a59e:	6033      	str	r3, [r6, #0]
    a5a0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    a5a2:	469c      	mov	ip, r3
    a5a4:	6073      	str	r3, [r6, #4]
    a5a6:	4643      	mov	r3, r8
    a5a8:	4464      	add	r4, ip
    a5aa:	3301      	adds	r3, #1
    a5ac:	60bc      	str	r4, [r7, #8]
    a5ae:	607b      	str	r3, [r7, #4]
    a5b0:	2b07      	cmp	r3, #7
    a5b2:	dc00      	bgt.n	a5b6 <_vfprintf_r+0x952>
    a5b4:	e758      	b.n	a468 <_vfprintf_r+0x804>
    a5b6:	003a      	movs	r2, r7
    a5b8:	4659      	mov	r1, fp
    a5ba:	9806      	ldr	r0, [sp, #24]
    a5bc:	f005 fbac 	bl	fd18 <__sprint_r>
    a5c0:	2800      	cmp	r0, #0
    a5c2:	d000      	beq.n	a5c6 <_vfprintf_r+0x962>
    a5c4:	e0de      	b.n	a784 <_vfprintf_r+0xb20>
    a5c6:	68bc      	ldr	r4, [r7, #8]
    a5c8:	ae32      	add	r6, sp, #200	; 0xc8
    a5ca:	e74e      	b.n	a46a <_vfprintf_r+0x806>
    a5cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a5ce:	2b65      	cmp	r3, #101	; 0x65
    a5d0:	ddab      	ble.n	a52a <_vfprintf_r+0x8c6>
    a5d2:	2200      	movs	r2, #0
    a5d4:	2300      	movs	r3, #0
    a5d6:	9816      	ldr	r0, [sp, #88]	; 0x58
    a5d8:	9915      	ldr	r1, [sp, #84]	; 0x54
    a5da:	f7fc f9a3 	bl	6924 <__aeabi_dcmpeq>
    a5de:	2800      	cmp	r0, #0
    a5e0:	d100      	bne.n	a5e4 <_vfprintf_r+0x980>
    a5e2:	e134      	b.n	a84e <_vfprintf_r+0xbea>
    a5e4:	4b85      	ldr	r3, [pc, #532]	; (a7fc <_vfprintf_r+0xb98>)
    a5e6:	3401      	adds	r4, #1
    a5e8:	6033      	str	r3, [r6, #0]
    a5ea:	2301      	movs	r3, #1
    a5ec:	6073      	str	r3, [r6, #4]
    a5ee:	687b      	ldr	r3, [r7, #4]
    a5f0:	60bc      	str	r4, [r7, #8]
    a5f2:	3301      	adds	r3, #1
    a5f4:	607b      	str	r3, [r7, #4]
    a5f6:	2b07      	cmp	r3, #7
    a5f8:	dd00      	ble.n	a5fc <_vfprintf_r+0x998>
    a5fa:	e3dc      	b.n	adb6 <_vfprintf_r+0x1152>
    a5fc:	3608      	adds	r6, #8
    a5fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a600:	9a14      	ldr	r2, [sp, #80]	; 0x50
    a602:	4293      	cmp	r3, r2
    a604:	db03      	blt.n	a60e <_vfprintf_r+0x9aa>
    a606:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a608:	07db      	lsls	r3, r3, #31
    a60a:	d400      	bmi.n	a60e <_vfprintf_r+0x9aa>
    a60c:	e3b7      	b.n	ad7e <_vfprintf_r+0x111a>
    a60e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    a610:	68ba      	ldr	r2, [r7, #8]
    a612:	6033      	str	r3, [r6, #0]
    a614:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    a616:	469c      	mov	ip, r3
    a618:	6073      	str	r3, [r6, #4]
    a61a:	687b      	ldr	r3, [r7, #4]
    a61c:	4462      	add	r2, ip
    a61e:	3301      	adds	r3, #1
    a620:	0014      	movs	r4, r2
    a622:	60ba      	str	r2, [r7, #8]
    a624:	607b      	str	r3, [r7, #4]
    a626:	2b07      	cmp	r3, #7
    a628:	dd01      	ble.n	a62e <_vfprintf_r+0x9ca>
    a62a:	f000 fc19 	bl	ae60 <_vfprintf_r+0x11fc>
    a62e:	3608      	adds	r6, #8
    a630:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a632:	1e5d      	subs	r5, r3, #1
    a634:	2d00      	cmp	r5, #0
    a636:	dc00      	bgt.n	a63a <_vfprintf_r+0x9d6>
    a638:	e717      	b.n	a46a <_vfprintf_r+0x806>
    a63a:	4a71      	ldr	r2, [pc, #452]	; (a800 <_vfprintf_r+0xb9c>)
    a63c:	687b      	ldr	r3, [r7, #4]
    a63e:	4691      	mov	r9, r2
    a640:	2d10      	cmp	r5, #16
    a642:	dc00      	bgt.n	a646 <_vfprintf_r+0x9e2>
    a644:	e1c3      	b.n	a9ce <_vfprintf_r+0xd6a>
    a646:	2210      	movs	r2, #16
    a648:	4690      	mov	r8, r2
    a64a:	0022      	movs	r2, r4
    a64c:	464c      	mov	r4, r9
    a64e:	46d9      	mov	r9, fp
    a650:	e004      	b.n	a65c <_vfprintf_r+0x9f8>
    a652:	3608      	adds	r6, #8
    a654:	3d10      	subs	r5, #16
    a656:	2d10      	cmp	r5, #16
    a658:	dc00      	bgt.n	a65c <_vfprintf_r+0x9f8>
    a65a:	e37c      	b.n	ad56 <_vfprintf_r+0x10f2>
    a65c:	4641      	mov	r1, r8
    a65e:	3210      	adds	r2, #16
    a660:	3301      	adds	r3, #1
    a662:	6034      	str	r4, [r6, #0]
    a664:	6071      	str	r1, [r6, #4]
    a666:	60ba      	str	r2, [r7, #8]
    a668:	607b      	str	r3, [r7, #4]
    a66a:	2b07      	cmp	r3, #7
    a66c:	ddf1      	ble.n	a652 <_vfprintf_r+0x9ee>
    a66e:	003a      	movs	r2, r7
    a670:	4649      	mov	r1, r9
    a672:	9806      	ldr	r0, [sp, #24]
    a674:	f005 fb50 	bl	fd18 <__sprint_r>
    a678:	2800      	cmp	r0, #0
    a67a:	d10b      	bne.n	a694 <_vfprintf_r+0xa30>
    a67c:	68ba      	ldr	r2, [r7, #8]
    a67e:	687b      	ldr	r3, [r7, #4]
    a680:	ae32      	add	r6, sp, #200	; 0xc8
    a682:	e7e7      	b.n	a654 <_vfprintf_r+0x9f0>
    a684:	68bb      	ldr	r3, [r7, #8]
    a686:	46d9      	mov	r9, fp
    a688:	2b00      	cmp	r3, #0
    a68a:	d001      	beq.n	a690 <_vfprintf_r+0xa2c>
    a68c:	f000 fd4c 	bl	b128 <_vfprintf_r+0x14c4>
    a690:	2300      	movs	r3, #0
    a692:	607b      	str	r3, [r7, #4]
    a694:	464b      	mov	r3, r9
    a696:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    a698:	07db      	lsls	r3, r3, #31
    a69a:	d40d      	bmi.n	a6b8 <_vfprintf_r+0xa54>
    a69c:	464b      	mov	r3, r9
    a69e:	899b      	ldrh	r3, [r3, #12]
    a6a0:	059a      	lsls	r2, r3, #22
    a6a2:	d505      	bpl.n	a6b0 <_vfprintf_r+0xa4c>
    a6a4:	065b      	lsls	r3, r3, #25
    a6a6:	d401      	bmi.n	a6ac <_vfprintf_r+0xa48>
    a6a8:	f7ff fb8d 	bl	9dc6 <_vfprintf_r+0x162>
    a6ac:	f7ff fb88 	bl	9dc0 <_vfprintf_r+0x15c>
    a6b0:	464b      	mov	r3, r9
    a6b2:	6d98      	ldr	r0, [r3, #88]	; 0x58
    a6b4:	f002 fc6c 	bl	cf90 <__retarget_lock_release_recursive>
    a6b8:	464b      	mov	r3, r9
    a6ba:	899b      	ldrh	r3, [r3, #12]
    a6bc:	e7f2      	b.n	a6a4 <_vfprintf_r+0xa40>
    a6be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a6c0:	9a08      	ldr	r2, [sp, #32]
    a6c2:	1a9d      	subs	r5, r3, r2
    a6c4:	2d00      	cmp	r5, #0
    a6c6:	dc00      	bgt.n	a6ca <_vfprintf_r+0xa66>
    a6c8:	e685      	b.n	a3d6 <_vfprintf_r+0x772>
    a6ca:	4a4d      	ldr	r2, [pc, #308]	; (a800 <_vfprintf_r+0xb9c>)
    a6cc:	687b      	ldr	r3, [r7, #4]
    a6ce:	4691      	mov	r9, r2
    a6d0:	2d10      	cmp	r5, #16
    a6d2:	dd24      	ble.n	a71e <_vfprintf_r+0xaba>
    a6d4:	2210      	movs	r2, #16
    a6d6:	0021      	movs	r1, r4
    a6d8:	4690      	mov	r8, r2
    a6da:	465c      	mov	r4, fp
    a6dc:	0032      	movs	r2, r6
    a6de:	464e      	mov	r6, r9
    a6e0:	e003      	b.n	a6ea <_vfprintf_r+0xa86>
    a6e2:	3d10      	subs	r5, #16
    a6e4:	3208      	adds	r2, #8
    a6e6:	2d10      	cmp	r5, #16
    a6e8:	dd15      	ble.n	a716 <_vfprintf_r+0xab2>
    a6ea:	4640      	mov	r0, r8
    a6ec:	3110      	adds	r1, #16
    a6ee:	3301      	adds	r3, #1
    a6f0:	6016      	str	r6, [r2, #0]
    a6f2:	6050      	str	r0, [r2, #4]
    a6f4:	60b9      	str	r1, [r7, #8]
    a6f6:	607b      	str	r3, [r7, #4]
    a6f8:	2b07      	cmp	r3, #7
    a6fa:	ddf2      	ble.n	a6e2 <_vfprintf_r+0xa7e>
    a6fc:	003a      	movs	r2, r7
    a6fe:	0021      	movs	r1, r4
    a700:	9806      	ldr	r0, [sp, #24]
    a702:	f005 fb09 	bl	fd18 <__sprint_r>
    a706:	2800      	cmp	r0, #0
    a708:	d115      	bne.n	a736 <_vfprintf_r+0xad2>
    a70a:	3d10      	subs	r5, #16
    a70c:	68b9      	ldr	r1, [r7, #8]
    a70e:	687b      	ldr	r3, [r7, #4]
    a710:	aa32      	add	r2, sp, #200	; 0xc8
    a712:	2d10      	cmp	r5, #16
    a714:	dce9      	bgt.n	a6ea <_vfprintf_r+0xa86>
    a716:	46a3      	mov	fp, r4
    a718:	46b1      	mov	r9, r6
    a71a:	000c      	movs	r4, r1
    a71c:	0016      	movs	r6, r2
    a71e:	464a      	mov	r2, r9
    a720:	1964      	adds	r4, r4, r5
    a722:	3301      	adds	r3, #1
    a724:	6032      	str	r2, [r6, #0]
    a726:	6075      	str	r5, [r6, #4]
    a728:	60bc      	str	r4, [r7, #8]
    a72a:	607b      	str	r3, [r7, #4]
    a72c:	2b07      	cmp	r3, #7
    a72e:	dd00      	ble.n	a732 <_vfprintf_r+0xace>
    a730:	e263      	b.n	abfa <_vfprintf_r+0xf96>
    a732:	3608      	adds	r6, #8
    a734:	e64f      	b.n	a3d6 <_vfprintf_r+0x772>
    a736:	46a1      	mov	r9, r4
    a738:	e7ac      	b.n	a694 <_vfprintf_r+0xa30>
    a73a:	2301      	movs	r3, #1
    a73c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a73e:	4213      	tst	r3, r2
    a740:	d000      	beq.n	a744 <_vfprintf_r+0xae0>
    a742:	e6f6      	b.n	a532 <_vfprintf_r+0x8ce>
    a744:	6073      	str	r3, [r6, #4]
    a746:	687b      	ldr	r3, [r7, #4]
    a748:	9a11      	ldr	r2, [sp, #68]	; 0x44
    a74a:	3301      	adds	r3, #1
    a74c:	3401      	adds	r4, #1
    a74e:	6032      	str	r2, [r6, #0]
    a750:	60bc      	str	r4, [r7, #8]
    a752:	4698      	mov	r8, r3
    a754:	607b      	str	r3, [r7, #4]
    a756:	2b07      	cmp	r3, #7
    a758:	dc00      	bgt.n	a75c <_vfprintf_r+0xaf8>
    a75a:	e71e      	b.n	a59a <_vfprintf_r+0x936>
    a75c:	003a      	movs	r2, r7
    a75e:	4659      	mov	r1, fp
    a760:	9806      	ldr	r0, [sp, #24]
    a762:	f005 fad9 	bl	fd18 <__sprint_r>
    a766:	2800      	cmp	r0, #0
    a768:	d10c      	bne.n	a784 <_vfprintf_r+0xb20>
    a76a:	687b      	ldr	r3, [r7, #4]
    a76c:	68bc      	ldr	r4, [r7, #8]
    a76e:	4698      	mov	r8, r3
    a770:	ae32      	add	r6, sp, #200	; 0xc8
    a772:	e713      	b.n	a59c <_vfprintf_r+0x938>
    a774:	003a      	movs	r2, r7
    a776:	4659      	mov	r1, fp
    a778:	9806      	ldr	r0, [sp, #24]
    a77a:	f005 facd 	bl	fd18 <__sprint_r>
    a77e:	2800      	cmp	r0, #0
    a780:	d100      	bne.n	a784 <_vfprintf_r+0xb20>
    a782:	e6cd      	b.n	a520 <_vfprintf_r+0x8bc>
    a784:	46d9      	mov	r9, fp
    a786:	e785      	b.n	a694 <_vfprintf_r+0xa30>
    a788:	9c09      	ldr	r4, [sp, #36]	; 0x24
    a78a:	2b01      	cmp	r3, #1
    a78c:	d100      	bne.n	a790 <_vfprintf_r+0xb2c>
    a78e:	e148      	b.n	aa22 <_vfprintf_r+0xdbe>
    a790:	2b02      	cmp	r3, #2
    a792:	d123      	bne.n	a7dc <_vfprintf_r+0xb78>
    a794:	9409      	str	r4, [sp, #36]	; 0x24
    a796:	2300      	movs	r3, #0
    a798:	2400      	movs	r4, #0
    a79a:	930c      	str	r3, [sp, #48]	; 0x30
    a79c:	940d      	str	r4, [sp, #52]	; 0x34
    a79e:	e4a1      	b.n	a0e4 <_vfprintf_r+0x480>
    a7a0:	003a      	movs	r2, r7
    a7a2:	4659      	mov	r1, fp
    a7a4:	9806      	ldr	r0, [sp, #24]
    a7a6:	f005 fab7 	bl	fd18 <__sprint_r>
    a7aa:	2800      	cmp	r0, #0
    a7ac:	d1ea      	bne.n	a784 <_vfprintf_r+0xb20>
    a7ae:	68bc      	ldr	r4, [r7, #8]
    a7b0:	ae32      	add	r6, sp, #200	; 0xc8
    a7b2:	e648      	b.n	a446 <_vfprintf_r+0x7e2>
    a7b4:	003a      	movs	r2, r7
    a7b6:	4659      	mov	r1, fp
    a7b8:	9806      	ldr	r0, [sp, #24]
    a7ba:	f005 faad 	bl	fd18 <__sprint_r>
    a7be:	2800      	cmp	r0, #0
    a7c0:	d1e0      	bne.n	a784 <_vfprintf_r+0xb20>
    a7c2:	68bc      	ldr	r4, [r7, #8]
    a7c4:	ae32      	add	r6, sp, #200	; 0xc8
    a7c6:	e5f2      	b.n	a3ae <_vfprintf_r+0x74a>
    a7c8:	003a      	movs	r2, r7
    a7ca:	4659      	mov	r1, fp
    a7cc:	9806      	ldr	r0, [sp, #24]
    a7ce:	f005 faa3 	bl	fd18 <__sprint_r>
    a7d2:	2800      	cmp	r0, #0
    a7d4:	d1d6      	bne.n	a784 <_vfprintf_r+0xb20>
    a7d6:	68bc      	ldr	r4, [r7, #8]
    a7d8:	ae32      	add	r6, sp, #200	; 0xc8
    a7da:	e5f8      	b.n	a3ce <_vfprintf_r+0x76a>
    a7dc:	9409      	str	r4, [sp, #36]	; 0x24
    a7de:	2300      	movs	r3, #0
    a7e0:	2400      	movs	r4, #0
    a7e2:	930c      	str	r3, [sp, #48]	; 0x30
    a7e4:	940d      	str	r4, [sp, #52]	; 0x34
    a7e6:	980c      	ldr	r0, [sp, #48]	; 0x30
    a7e8:	990d      	ldr	r1, [sp, #52]	; 0x34
    a7ea:	4653      	mov	r3, sl
    a7ec:	aa32      	add	r2, sp, #200	; 0xc8
    a7ee:	4691      	mov	r9, r2
    a7f0:	9308      	str	r3, [sp, #32]
    a7f2:	46b2      	mov	sl, r6
    a7f4:	e007      	b.n	a806 <_vfprintf_r+0xba2>
    a7f6:	46c0      	nop			; (mov r8, r8)
    a7f8:	00014000 	.word	0x00014000
    a7fc:	000139f4 	.word	0x000139f4
    a800:	00014010 	.word	0x00014010
    a804:	46a1      	mov	r9, r4
    a806:	074a      	lsls	r2, r1, #29
    a808:	4694      	mov	ip, r2
    a80a:	464b      	mov	r3, r9
    a80c:	4665      	mov	r5, ip
    a80e:	1e5c      	subs	r4, r3, #1
    a810:	08c6      	lsrs	r6, r0, #3
    a812:	2307      	movs	r3, #7
    a814:	08ca      	lsrs	r2, r1, #3
    a816:	4335      	orrs	r5, r6
    a818:	0011      	movs	r1, r2
    a81a:	002a      	movs	r2, r5
    a81c:	4003      	ands	r3, r0
    a81e:	3330      	adds	r3, #48	; 0x30
    a820:	7023      	strb	r3, [r4, #0]
    a822:	0028      	movs	r0, r5
    a824:	430a      	orrs	r2, r1
    a826:	d1ed      	bne.n	a804 <_vfprintf_r+0xba0>
    a828:	900c      	str	r0, [sp, #48]	; 0x30
    a82a:	910d      	str	r1, [sp, #52]	; 0x34
    a82c:	9908      	ldr	r1, [sp, #32]
    a82e:	4656      	mov	r6, sl
    a830:	468a      	mov	sl, r1
    a832:	9909      	ldr	r1, [sp, #36]	; 0x24
    a834:	464a      	mov	r2, r9
    a836:	9411      	str	r4, [sp, #68]	; 0x44
    a838:	07c9      	lsls	r1, r1, #31
    a83a:	d500      	bpl.n	a83e <_vfprintf_r+0xbda>
    a83c:	e0e0      	b.n	aa00 <_vfprintf_r+0xd9c>
    a83e:	ab32      	add	r3, sp, #200	; 0xc8
    a840:	1b1b      	subs	r3, r3, r4
    a842:	930e      	str	r3, [sp, #56]	; 0x38
    a844:	f7ff fb7b 	bl	9f3e <_vfprintf_r+0x2da>
    a848:	9c07      	ldr	r4, [sp, #28]
    a84a:	f7ff fa7d 	bl	9d48 <_vfprintf_r+0xe4>
    a84e:	981f      	ldr	r0, [sp, #124]	; 0x7c
    a850:	2800      	cmp	r0, #0
    a852:	dc00      	bgt.n	a856 <_vfprintf_r+0xbf2>
    a854:	e2b9      	b.n	adca <_vfprintf_r+0x1166>
    a856:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a858:	9914      	ldr	r1, [sp, #80]	; 0x50
    a85a:	0013      	movs	r3, r2
    a85c:	4690      	mov	r8, r2
    a85e:	428b      	cmp	r3, r1
    a860:	dd00      	ble.n	a864 <_vfprintf_r+0xc00>
    a862:	4688      	mov	r8, r1
    a864:	4643      	mov	r3, r8
    a866:	2b00      	cmp	r3, #0
    a868:	dd0c      	ble.n	a884 <_vfprintf_r+0xc20>
    a86a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a86c:	4444      	add	r4, r8
    a86e:	6033      	str	r3, [r6, #0]
    a870:	4643      	mov	r3, r8
    a872:	6073      	str	r3, [r6, #4]
    a874:	687b      	ldr	r3, [r7, #4]
    a876:	60bc      	str	r4, [r7, #8]
    a878:	3301      	adds	r3, #1
    a87a:	607b      	str	r3, [r7, #4]
    a87c:	2b07      	cmp	r3, #7
    a87e:	dd00      	ble.n	a882 <_vfprintf_r+0xc1e>
    a880:	e389      	b.n	af96 <_vfprintf_r+0x1332>
    a882:	3608      	adds	r6, #8
    a884:	4643      	mov	r3, r8
    a886:	43db      	mvns	r3, r3
    a888:	4642      	mov	r2, r8
    a88a:	17db      	asrs	r3, r3, #31
    a88c:	4013      	ands	r3, r2
    a88e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a890:	1ad3      	subs	r3, r2, r3
    a892:	4698      	mov	r8, r3
    a894:	2b00      	cmp	r3, #0
    a896:	dc00      	bgt.n	a89a <_vfprintf_r+0xc36>
    a898:	e0eb      	b.n	aa72 <_vfprintf_r+0xe0e>
    a89a:	2b10      	cmp	r3, #16
    a89c:	dc01      	bgt.n	a8a2 <_vfprintf_r+0xc3e>
    a89e:	f000 fcd9 	bl	b254 <_vfprintf_r+0x15f0>
    a8a2:	4adc      	ldr	r2, [pc, #880]	; (ac14 <_vfprintf_r+0xfb0>)
    a8a4:	687b      	ldr	r3, [r7, #4]
    a8a6:	4691      	mov	r9, r2
    a8a8:	2210      	movs	r2, #16
    a8aa:	464d      	mov	r5, r9
    a8ac:	4692      	mov	sl, r2
    a8ae:	0022      	movs	r2, r4
    a8b0:	4644      	mov	r4, r8
    a8b2:	46d8      	mov	r8, fp
    a8b4:	e004      	b.n	a8c0 <_vfprintf_r+0xc5c>
    a8b6:	3608      	adds	r6, #8
    a8b8:	3c10      	subs	r4, #16
    a8ba:	2c10      	cmp	r4, #16
    a8bc:	dc00      	bgt.n	a8c0 <_vfprintf_r+0xc5c>
    a8be:	e0bf      	b.n	aa40 <_vfprintf_r+0xddc>
    a8c0:	4651      	mov	r1, sl
    a8c2:	3210      	adds	r2, #16
    a8c4:	3301      	adds	r3, #1
    a8c6:	6035      	str	r5, [r6, #0]
    a8c8:	6071      	str	r1, [r6, #4]
    a8ca:	60ba      	str	r2, [r7, #8]
    a8cc:	607b      	str	r3, [r7, #4]
    a8ce:	2b07      	cmp	r3, #7
    a8d0:	ddf1      	ble.n	a8b6 <_vfprintf_r+0xc52>
    a8d2:	003a      	movs	r2, r7
    a8d4:	4641      	mov	r1, r8
    a8d6:	9806      	ldr	r0, [sp, #24]
    a8d8:	f005 fa1e 	bl	fd18 <__sprint_r>
    a8dc:	2800      	cmp	r0, #0
    a8de:	d000      	beq.n	a8e2 <_vfprintf_r+0xc7e>
    a8e0:	e3b6      	b.n	b050 <_vfprintf_r+0x13ec>
    a8e2:	68ba      	ldr	r2, [r7, #8]
    a8e4:	687b      	ldr	r3, [r7, #4]
    a8e6:	ae32      	add	r6, sp, #200	; 0xc8
    a8e8:	e7e6      	b.n	a8b8 <_vfprintf_r+0xc54>
    a8ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a8ec:	2b00      	cmp	r3, #0
    a8ee:	d100      	bne.n	a8f2 <_vfprintf_r+0xc8e>
    a8f0:	e092      	b.n	aa18 <_vfprintf_r+0xdb4>
    a8f2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    a8f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    a8f6:	ab32      	add	r3, sp, #200	; 0xc8
    a8f8:	46b1      	mov	r9, r6
    a8fa:	001e      	movs	r6, r3
    a8fc:	0020      	movs	r0, r4
    a8fe:	0029      	movs	r1, r5
    a900:	220a      	movs	r2, #10
    a902:	2300      	movs	r3, #0
    a904:	f7fa f88c 	bl	4a20 <__aeabi_uldivmod>
    a908:	3e01      	subs	r6, #1
    a90a:	3230      	adds	r2, #48	; 0x30
    a90c:	7032      	strb	r2, [r6, #0]
    a90e:	2300      	movs	r3, #0
    a910:	0020      	movs	r0, r4
    a912:	0029      	movs	r1, r5
    a914:	220a      	movs	r2, #10
    a916:	f7fa f883 	bl	4a20 <__aeabi_uldivmod>
    a91a:	0003      	movs	r3, r0
    a91c:	0004      	movs	r4, r0
    a91e:	000d      	movs	r5, r1
    a920:	430b      	orrs	r3, r1
    a922:	d1eb      	bne.n	a8fc <_vfprintf_r+0xc98>
    a924:	0032      	movs	r2, r6
    a926:	ab32      	add	r3, sp, #200	; 0xc8
    a928:	1a9b      	subs	r3, r3, r2
    a92a:	9611      	str	r6, [sp, #68]	; 0x44
    a92c:	940c      	str	r4, [sp, #48]	; 0x30
    a92e:	950d      	str	r5, [sp, #52]	; 0x34
    a930:	464e      	mov	r6, r9
    a932:	930e      	str	r3, [sp, #56]	; 0x38
    a934:	f7ff fb03 	bl	9f3e <_vfprintf_r+0x2da>
    a938:	2300      	movs	r3, #0
    a93a:	930e      	str	r3, [sp, #56]	; 0x38
    a93c:	ab32      	add	r3, sp, #200	; 0xc8
    a93e:	9311      	str	r3, [sp, #68]	; 0x44
    a940:	f7ff fafd 	bl	9f3e <_vfprintf_r+0x2da>
    a944:	003a      	movs	r2, r7
    a946:	4659      	mov	r1, fp
    a948:	9806      	ldr	r0, [sp, #24]
    a94a:	f005 f9e5 	bl	fd18 <__sprint_r>
    a94e:	2800      	cmp	r0, #0
    a950:	d000      	beq.n	a954 <_vfprintf_r+0xcf0>
    a952:	e717      	b.n	a784 <_vfprintf_r+0xb20>
    a954:	ab16      	add	r3, sp, #88	; 0x58
    a956:	7fdb      	ldrb	r3, [r3, #31]
    a958:	68bc      	ldr	r4, [r7, #8]
    a95a:	4698      	mov	r8, r3
    a95c:	ae32      	add	r6, sp, #200	; 0xc8
    a95e:	e513      	b.n	a388 <_vfprintf_r+0x724>
    a960:	46b1      	mov	r9, r6
    a962:	e697      	b.n	a694 <_vfprintf_r+0xa30>
    a964:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a966:	1e5d      	subs	r5, r3, #1
    a968:	2d00      	cmp	r5, #0
    a96a:	dc00      	bgt.n	a96e <_vfprintf_r+0xd0a>
    a96c:	e616      	b.n	a59c <_vfprintf_r+0x938>
    a96e:	4ba9      	ldr	r3, [pc, #676]	; (ac14 <_vfprintf_r+0xfb0>)
    a970:	4699      	mov	r9, r3
    a972:	2d10      	cmp	r5, #16
    a974:	dc00      	bgt.n	a978 <_vfprintf_r+0xd14>
    a976:	e10a      	b.n	ab8e <_vfprintf_r+0xf2a>
    a978:	2310      	movs	r3, #16
    a97a:	0022      	movs	r2, r4
    a97c:	469a      	mov	sl, r3
    a97e:	465c      	mov	r4, fp
    a980:	4643      	mov	r3, r8
    a982:	e004      	b.n	a98e <_vfprintf_r+0xd2a>
    a984:	3608      	adds	r6, #8
    a986:	3d10      	subs	r5, #16
    a988:	2d10      	cmp	r5, #16
    a98a:	dc00      	bgt.n	a98e <_vfprintf_r+0xd2a>
    a98c:	e0fc      	b.n	ab88 <_vfprintf_r+0xf24>
    a98e:	4649      	mov	r1, r9
    a990:	6031      	str	r1, [r6, #0]
    a992:	4651      	mov	r1, sl
    a994:	3210      	adds	r2, #16
    a996:	3301      	adds	r3, #1
    a998:	6071      	str	r1, [r6, #4]
    a99a:	60ba      	str	r2, [r7, #8]
    a99c:	607b      	str	r3, [r7, #4]
    a99e:	2b07      	cmp	r3, #7
    a9a0:	ddf0      	ble.n	a984 <_vfprintf_r+0xd20>
    a9a2:	003a      	movs	r2, r7
    a9a4:	0021      	movs	r1, r4
    a9a6:	9806      	ldr	r0, [sp, #24]
    a9a8:	f005 f9b6 	bl	fd18 <__sprint_r>
    a9ac:	2800      	cmp	r0, #0
    a9ae:	d000      	beq.n	a9b2 <_vfprintf_r+0xd4e>
    a9b0:	e6c1      	b.n	a736 <_vfprintf_r+0xad2>
    a9b2:	68ba      	ldr	r2, [r7, #8]
    a9b4:	687b      	ldr	r3, [r7, #4]
    a9b6:	ae32      	add	r6, sp, #200	; 0xc8
    a9b8:	e7e5      	b.n	a986 <_vfprintf_r+0xd22>
    a9ba:	990c      	ldr	r1, [sp, #48]	; 0x30
    a9bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    a9be:	0008      	movs	r0, r1
    a9c0:	4310      	orrs	r0, r2
    a9c2:	2302      	movs	r3, #2
    a9c4:	0002      	movs	r2, r0
    a9c6:	f7ff fa93 	bl	9ef0 <_vfprintf_r+0x28c>
    a9ca:	46a3      	mov	fp, r4
    a9cc:	0014      	movs	r4, r2
    a9ce:	464a      	mov	r2, r9
    a9d0:	1964      	adds	r4, r4, r5
    a9d2:	3301      	adds	r3, #1
    a9d4:	6032      	str	r2, [r6, #0]
    a9d6:	6075      	str	r5, [r6, #4]
    a9d8:	60bc      	str	r4, [r7, #8]
    a9da:	607b      	str	r3, [r7, #4]
    a9dc:	2b07      	cmp	r3, #7
    a9de:	dc00      	bgt.n	a9e2 <_vfprintf_r+0xd7e>
    a9e0:	e542      	b.n	a468 <_vfprintf_r+0x804>
    a9e2:	e5e8      	b.n	a5b6 <_vfprintf_r+0x952>
    a9e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a9e6:	681a      	ldr	r2, [r3, #0]
    a9e8:	f7ff fa68 	bl	9ebc <_vfprintf_r+0x258>
    a9ec:	6813      	ldr	r3, [r2, #0]
    a9ee:	9308      	str	r3, [sp, #32]
    a9f0:	f7ff fb57 	bl	a0a2 <_vfprintf_r+0x43e>
    a9f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a9f6:	681a      	ldr	r2, [r3, #0]
    a9f8:	e412      	b.n	a220 <_vfprintf_r+0x5bc>
    a9fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a9fc:	681a      	ldr	r2, [r3, #0]
    a9fe:	e426      	b.n	a24e <_vfprintf_r+0x5ea>
    aa00:	2b30      	cmp	r3, #48	; 0x30
    aa02:	d100      	bne.n	aa06 <_vfprintf_r+0xda2>
    aa04:	e23c      	b.n	ae80 <_vfprintf_r+0x121c>
    aa06:	2330      	movs	r3, #48	; 0x30
    aa08:	3a02      	subs	r2, #2
    aa0a:	7013      	strb	r3, [r2, #0]
    aa0c:	ab32      	add	r3, sp, #200	; 0xc8
    aa0e:	1a9b      	subs	r3, r3, r2
    aa10:	930e      	str	r3, [sp, #56]	; 0x38
    aa12:	9211      	str	r2, [sp, #68]	; 0x44
    aa14:	f7ff fa93 	bl	9f3e <_vfprintf_r+0x2da>
    aa18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    aa1a:	2b09      	cmp	r3, #9
    aa1c:	d900      	bls.n	aa20 <_vfprintf_r+0xdbc>
    aa1e:	e768      	b.n	a8f2 <_vfprintf_r+0xc8e>
    aa20:	9c09      	ldr	r4, [sp, #36]	; 0x24
    aa22:	2227      	movs	r2, #39	; 0x27
    aa24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    aa26:	a928      	add	r1, sp, #160	; 0xa0
    aa28:	3330      	adds	r3, #48	; 0x30
    aa2a:	548b      	strb	r3, [r1, r2]
    aa2c:	2301      	movs	r3, #1
    aa2e:	aa16      	add	r2, sp, #88	; 0x58
    aa30:	4694      	mov	ip, r2
    aa32:	930e      	str	r3, [sp, #56]	; 0x38
    aa34:	336e      	adds	r3, #110	; 0x6e
    aa36:	4463      	add	r3, ip
    aa38:	9409      	str	r4, [sp, #36]	; 0x24
    aa3a:	9311      	str	r3, [sp, #68]	; 0x44
    aa3c:	f7ff fa7f 	bl	9f3e <_vfprintf_r+0x2da>
    aa40:	46c3      	mov	fp, r8
    aa42:	46a9      	mov	r9, r5
    aa44:	46a0      	mov	r8, r4
    aa46:	0014      	movs	r4, r2
    aa48:	464a      	mov	r2, r9
    aa4a:	6032      	str	r2, [r6, #0]
    aa4c:	4642      	mov	r2, r8
    aa4e:	4444      	add	r4, r8
    aa50:	3301      	adds	r3, #1
    aa52:	6072      	str	r2, [r6, #4]
    aa54:	60bc      	str	r4, [r7, #8]
    aa56:	607b      	str	r3, [r7, #4]
    aa58:	2b07      	cmp	r3, #7
    aa5a:	dc00      	bgt.n	aa5e <_vfprintf_r+0xdfa>
    aa5c:	e18d      	b.n	ad7a <_vfprintf_r+0x1116>
    aa5e:	003a      	movs	r2, r7
    aa60:	4659      	mov	r1, fp
    aa62:	9806      	ldr	r0, [sp, #24]
    aa64:	f005 f958 	bl	fd18 <__sprint_r>
    aa68:	2800      	cmp	r0, #0
    aa6a:	d000      	beq.n	aa6e <_vfprintf_r+0xe0a>
    aa6c:	e68a      	b.n	a784 <_vfprintf_r+0xb20>
    aa6e:	68bc      	ldr	r4, [r7, #8]
    aa70:	ae32      	add	r6, sp, #200	; 0xc8
    aa72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    aa74:	9a14      	ldr	r2, [sp, #80]	; 0x50
    aa76:	4293      	cmp	r3, r2
    aa78:	db00      	blt.n	aa7c <_vfprintf_r+0xe18>
    aa7a:	e179      	b.n	ad70 <_vfprintf_r+0x110c>
    aa7c:	9a18      	ldr	r2, [sp, #96]	; 0x60
    aa7e:	6032      	str	r2, [r6, #0]
    aa80:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    aa82:	4694      	mov	ip, r2
    aa84:	6072      	str	r2, [r6, #4]
    aa86:	687a      	ldr	r2, [r7, #4]
    aa88:	4464      	add	r4, ip
    aa8a:	3201      	adds	r2, #1
    aa8c:	60bc      	str	r4, [r7, #8]
    aa8e:	607a      	str	r2, [r7, #4]
    aa90:	2a07      	cmp	r2, #7
    aa92:	dd00      	ble.n	aa96 <_vfprintf_r+0xe32>
    aa94:	e176      	b.n	ad84 <_vfprintf_r+0x1120>
    aa96:	3608      	adds	r6, #8
    aa98:	9a14      	ldr	r2, [sp, #80]	; 0x50
    aa9a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    aa9c:	1ad3      	subs	r3, r2, r3
    aa9e:	1a52      	subs	r2, r2, r1
    aaa0:	4690      	mov	r8, r2
    aaa2:	429a      	cmp	r2, r3
    aaa4:	dd00      	ble.n	aaa8 <_vfprintf_r+0xe44>
    aaa6:	4698      	mov	r8, r3
    aaa8:	4642      	mov	r2, r8
    aaaa:	2a00      	cmp	r2, #0
    aaac:	dd0f      	ble.n	aace <_vfprintf_r+0xe6a>
    aaae:	9913      	ldr	r1, [sp, #76]	; 0x4c
    aab0:	9a11      	ldr	r2, [sp, #68]	; 0x44
    aab2:	468c      	mov	ip, r1
    aab4:	4462      	add	r2, ip
    aab6:	6032      	str	r2, [r6, #0]
    aab8:	4642      	mov	r2, r8
    aaba:	6072      	str	r2, [r6, #4]
    aabc:	687a      	ldr	r2, [r7, #4]
    aabe:	4444      	add	r4, r8
    aac0:	3201      	adds	r2, #1
    aac2:	60bc      	str	r4, [r7, #8]
    aac4:	607a      	str	r2, [r7, #4]
    aac6:	2a07      	cmp	r2, #7
    aac8:	dd00      	ble.n	aacc <_vfprintf_r+0xe68>
    aaca:	e289      	b.n	afe0 <_vfprintf_r+0x137c>
    aacc:	3608      	adds	r6, #8
    aace:	4642      	mov	r2, r8
    aad0:	43d5      	mvns	r5, r2
    aad2:	17ed      	asrs	r5, r5, #31
    aad4:	4015      	ands	r5, r2
    aad6:	1b5d      	subs	r5, r3, r5
    aad8:	2d00      	cmp	r5, #0
    aada:	dc00      	bgt.n	aade <_vfprintf_r+0xe7a>
    aadc:	e4c5      	b.n	a46a <_vfprintf_r+0x806>
    aade:	4a4d      	ldr	r2, [pc, #308]	; (ac14 <_vfprintf_r+0xfb0>)
    aae0:	687b      	ldr	r3, [r7, #4]
    aae2:	4691      	mov	r9, r2
    aae4:	2d10      	cmp	r5, #16
    aae6:	dc00      	bgt.n	aaea <_vfprintf_r+0xe86>
    aae8:	e771      	b.n	a9ce <_vfprintf_r+0xd6a>
    aaea:	2210      	movs	r2, #16
    aaec:	4690      	mov	r8, r2
    aaee:	0022      	movs	r2, r4
    aaf0:	465c      	mov	r4, fp
    aaf2:	e004      	b.n	aafe <_vfprintf_r+0xe9a>
    aaf4:	3608      	adds	r6, #8
    aaf6:	3d10      	subs	r5, #16
    aaf8:	2d10      	cmp	r5, #16
    aafa:	dc00      	bgt.n	aafe <_vfprintf_r+0xe9a>
    aafc:	e765      	b.n	a9ca <_vfprintf_r+0xd66>
    aafe:	4649      	mov	r1, r9
    ab00:	6031      	str	r1, [r6, #0]
    ab02:	4641      	mov	r1, r8
    ab04:	3210      	adds	r2, #16
    ab06:	3301      	adds	r3, #1
    ab08:	6071      	str	r1, [r6, #4]
    ab0a:	60ba      	str	r2, [r7, #8]
    ab0c:	607b      	str	r3, [r7, #4]
    ab0e:	2b07      	cmp	r3, #7
    ab10:	ddf0      	ble.n	aaf4 <_vfprintf_r+0xe90>
    ab12:	003a      	movs	r2, r7
    ab14:	0021      	movs	r1, r4
    ab16:	9806      	ldr	r0, [sp, #24]
    ab18:	f005 f8fe 	bl	fd18 <__sprint_r>
    ab1c:	2800      	cmp	r0, #0
    ab1e:	d000      	beq.n	ab22 <_vfprintf_r+0xebe>
    ab20:	e609      	b.n	a736 <_vfprintf_r+0xad2>
    ab22:	68ba      	ldr	r2, [r7, #8]
    ab24:	687b      	ldr	r3, [r7, #4]
    ab26:	ae32      	add	r6, sp, #200	; 0xc8
    ab28:	e7e5      	b.n	aaf6 <_vfprintf_r+0xe92>
    ab2a:	003a      	movs	r2, r7
    ab2c:	4659      	mov	r1, fp
    ab2e:	9806      	ldr	r0, [sp, #24]
    ab30:	f005 f8f2 	bl	fd18 <__sprint_r>
    ab34:	2800      	cmp	r0, #0
    ab36:	d000      	beq.n	ab3a <_vfprintf_r+0xed6>
    ab38:	e624      	b.n	a784 <_vfprintf_r+0xb20>
    ab3a:	68bc      	ldr	r4, [r7, #8]
    ab3c:	687b      	ldr	r3, [r7, #4]
    ab3e:	ae32      	add	r6, sp, #200	; 0xc8
    ab40:	e504      	b.n	a54c <_vfprintf_r+0x8e8>
    ab42:	2307      	movs	r3, #7
    ab44:	3207      	adds	r2, #7
    ab46:	439a      	bics	r2, r3
    ab48:	3301      	adds	r3, #1
    ab4a:	469c      	mov	ip, r3
    ab4c:	4494      	add	ip, r2
    ab4e:	4663      	mov	r3, ip
    ab50:	930f      	str	r3, [sp, #60]	; 0x3c
    ab52:	6853      	ldr	r3, [r2, #4]
    ab54:	6812      	ldr	r2, [r2, #0]
    ab56:	930d      	str	r3, [sp, #52]	; 0x34
    ab58:	920c      	str	r2, [sp, #48]	; 0x30
    ab5a:	f7ff faa7 	bl	a0ac <_vfprintf_r+0x448>
    ab5e:	2207      	movs	r2, #7
    ab60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ab62:	3307      	adds	r3, #7
    ab64:	4393      	bics	r3, r2
    ab66:	3201      	adds	r2, #1
    ab68:	4694      	mov	ip, r2
    ab6a:	449c      	add	ip, r3
    ab6c:	4662      	mov	r2, ip
    ab6e:	920f      	str	r2, [sp, #60]	; 0x3c
    ab70:	681a      	ldr	r2, [r3, #0]
    ab72:	685b      	ldr	r3, [r3, #4]
    ab74:	0011      	movs	r1, r2
    ab76:	001a      	movs	r2, r3
    ab78:	0008      	movs	r0, r1
    ab7a:	4310      	orrs	r0, r2
    ab7c:	910c      	str	r1, [sp, #48]	; 0x30
    ab7e:	920d      	str	r2, [sp, #52]	; 0x34
    ab80:	2300      	movs	r3, #0
    ab82:	0002      	movs	r2, r0
    ab84:	f7ff f9b4 	bl	9ef0 <_vfprintf_r+0x28c>
    ab88:	46a3      	mov	fp, r4
    ab8a:	4698      	mov	r8, r3
    ab8c:	0014      	movs	r4, r2
    ab8e:	464b      	mov	r3, r9
    ab90:	6075      	str	r5, [r6, #4]
    ab92:	6033      	str	r3, [r6, #0]
    ab94:	1964      	adds	r4, r4, r5
    ab96:	e4f7      	b.n	a588 <_vfprintf_r+0x924>
    ab98:	003a      	movs	r2, r7
    ab9a:	4659      	mov	r1, fp
    ab9c:	9806      	ldr	r0, [sp, #24]
    ab9e:	f005 f8bb 	bl	fd18 <__sprint_r>
    aba2:	2800      	cmp	r0, #0
    aba4:	d000      	beq.n	aba8 <_vfprintf_r+0xf44>
    aba6:	e5ed      	b.n	a784 <_vfprintf_r+0xb20>
    aba8:	687b      	ldr	r3, [r7, #4]
    abaa:	68bc      	ldr	r4, [r7, #8]
    abac:	4698      	mov	r8, r3
    abae:	ae32      	add	r6, sp, #200	; 0xc8
    abb0:	e4da      	b.n	a568 <_vfprintf_r+0x904>
    abb2:	2207      	movs	r2, #7
    abb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    abb6:	3307      	adds	r3, #7
    abb8:	4393      	bics	r3, r2
    abba:	3201      	adds	r2, #1
    abbc:	4694      	mov	ip, r2
    abbe:	449c      	add	ip, r3
    abc0:	4662      	mov	r2, ip
    abc2:	920f      	str	r2, [sp, #60]	; 0x3c
    abc4:	681a      	ldr	r2, [r3, #0]
    abc6:	685b      	ldr	r3, [r3, #4]
    abc8:	0011      	movs	r1, r2
    abca:	001a      	movs	r2, r3
    abcc:	0008      	movs	r0, r1
    abce:	4310      	orrs	r0, r2
    abd0:	910c      	str	r1, [sp, #48]	; 0x30
    abd2:	920d      	str	r2, [sp, #52]	; 0x34
    abd4:	2301      	movs	r3, #1
    abd6:	0002      	movs	r2, r0
    abd8:	f7ff f98a 	bl	9ef0 <_vfprintf_r+0x28c>
    abdc:	2207      	movs	r2, #7
    abde:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    abe0:	3307      	adds	r3, #7
    abe2:	4393      	bics	r3, r2
    abe4:	3201      	adds	r2, #1
    abe6:	4694      	mov	ip, r2
    abe8:	449c      	add	ip, r3
    abea:	4662      	mov	r2, ip
    abec:	920f      	str	r2, [sp, #60]	; 0x3c
    abee:	681a      	ldr	r2, [r3, #0]
    abf0:	685b      	ldr	r3, [r3, #4]
    abf2:	920c      	str	r2, [sp, #48]	; 0x30
    abf4:	930d      	str	r3, [sp, #52]	; 0x34
    abf6:	f7ff f966 	bl	9ec6 <_vfprintf_r+0x262>
    abfa:	003a      	movs	r2, r7
    abfc:	4659      	mov	r1, fp
    abfe:	9806      	ldr	r0, [sp, #24]
    ac00:	f005 f88a 	bl	fd18 <__sprint_r>
    ac04:	2800      	cmp	r0, #0
    ac06:	d000      	beq.n	ac0a <_vfprintf_r+0xfa6>
    ac08:	e5bc      	b.n	a784 <_vfprintf_r+0xb20>
    ac0a:	68bc      	ldr	r4, [r7, #8]
    ac0c:	ae32      	add	r6, sp, #200	; 0xc8
    ac0e:	f7ff fbe2 	bl	a3d6 <_vfprintf_r+0x772>
    ac12:	46c0      	nop			; (mov r8, r8)
    ac14:	00014010 	.word	0x00014010
    ac18:	980c      	ldr	r0, [sp, #48]	; 0x30
    ac1a:	990d      	ldr	r1, [sp, #52]	; 0x34
    ac1c:	2300      	movs	r3, #0
    ac1e:	4242      	negs	r2, r0
    ac20:	418b      	sbcs	r3, r1
    ac22:	0011      	movs	r1, r2
    ac24:	001a      	movs	r2, r3
    ac26:	232d      	movs	r3, #45	; 0x2d
    ac28:	a816      	add	r0, sp, #88	; 0x58
    ac2a:	77c3      	strb	r3, [r0, #31]
    ac2c:	0008      	movs	r0, r1
    ac2e:	4310      	orrs	r0, r2
    ac30:	910c      	str	r1, [sp, #48]	; 0x30
    ac32:	920d      	str	r2, [sp, #52]	; 0x34
    ac34:	4698      	mov	r8, r3
    ac36:	0002      	movs	r2, r0
    ac38:	3b2c      	subs	r3, #44	; 0x2c
    ac3a:	f7ff f95d 	bl	9ef8 <_vfprintf_r+0x294>
    ac3e:	9916      	ldr	r1, [sp, #88]	; 0x58
    ac40:	9d15      	ldr	r5, [sp, #84]	; 0x54
    ac42:	000a      	movs	r2, r1
    ac44:	0008      	movs	r0, r1
    ac46:	002b      	movs	r3, r5
    ac48:	0029      	movs	r1, r5
    ac4a:	f006 f981 	bl	10f50 <__aeabi_dcmpun>
    ac4e:	2800      	cmp	r0, #0
    ac50:	d000      	beq.n	ac54 <_vfprintf_r+0xff0>
    ac52:	e2c6      	b.n	b1e2 <_vfprintf_r+0x157e>
    ac54:	4653      	mov	r3, sl
    ac56:	3301      	adds	r3, #1
    ac58:	d100      	bne.n	ac5c <_vfprintf_r+0xff8>
    ac5a:	e09f      	b.n	ad9c <_vfprintf_r+0x1138>
    ac5c:	2320      	movs	r3, #32
    ac5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    ac60:	439a      	bics	r2, r3
    ac62:	920e      	str	r2, [sp, #56]	; 0x38
    ac64:	2a47      	cmp	r2, #71	; 0x47
    ac66:	d100      	bne.n	ac6a <_vfprintf_r+0x1006>
    ac68:	e1a1      	b.n	afae <_vfprintf_r+0x134a>
    ac6a:	2380      	movs	r3, #128	; 0x80
    ac6c:	005b      	lsls	r3, r3, #1
    ac6e:	4323      	orrs	r3, r4
    ac70:	9309      	str	r3, [sp, #36]	; 0x24
    ac72:	9b15      	ldr	r3, [sp, #84]	; 0x54
    ac74:	2b00      	cmp	r3, #0
    ac76:	da00      	bge.n	ac7a <_vfprintf_r+0x1016>
    ac78:	e1ed      	b.n	b056 <_vfprintf_r+0x13f2>
    ac7a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    ac7c:	9308      	str	r3, [sp, #32]
    ac7e:	2300      	movs	r3, #0
    ac80:	4691      	mov	r9, r2
    ac82:	9310      	str	r3, [sp, #64]	; 0x40
    ac84:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ac86:	2b66      	cmp	r3, #102	; 0x66
    ac88:	d100      	bne.n	ac8c <_vfprintf_r+0x1028>
    ac8a:	e1b8      	b.n	affe <_vfprintf_r+0x139a>
    ac8c:	2b46      	cmp	r3, #70	; 0x46
    ac8e:	d100      	bne.n	ac92 <_vfprintf_r+0x102e>
    ac90:	e237      	b.n	b102 <_vfprintf_r+0x149e>
    ac92:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    ac94:	9806      	ldr	r0, [sp, #24]
    ac96:	3a45      	subs	r2, #69	; 0x45
    ac98:	0013      	movs	r3, r2
    ac9a:	4259      	negs	r1, r3
    ac9c:	4159      	adcs	r1, r3
    ac9e:	ab20      	add	r3, sp, #128	; 0x80
    aca0:	000d      	movs	r5, r1
    aca2:	9303      	str	r3, [sp, #12]
    aca4:	ab1f      	add	r3, sp, #124	; 0x7c
    aca6:	9302      	str	r3, [sp, #8]
    aca8:	2302      	movs	r3, #2
    acaa:	aa23      	add	r2, sp, #140	; 0x8c
    acac:	4455      	add	r5, sl
    acae:	921b      	str	r2, [sp, #108]	; 0x6c
    acb0:	9204      	str	r2, [sp, #16]
    acb2:	9300      	str	r3, [sp, #0]
    acb4:	9501      	str	r5, [sp, #4]
    acb6:	9b08      	ldr	r3, [sp, #32]
    acb8:	464a      	mov	r2, r9
    acba:	f000 fd2f 	bl	b71c <_dtoa_r>
    acbe:	9b12      	ldr	r3, [sp, #72]	; 0x48
    acc0:	9011      	str	r0, [sp, #68]	; 0x44
    acc2:	2b67      	cmp	r3, #103	; 0x67
    acc4:	d000      	beq.n	acc8 <_vfprintf_r+0x1064>
    acc6:	e20b      	b.n	b0e0 <_vfprintf_r+0x147c>
    acc8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    acca:	4698      	mov	r8, r3
    accc:	44a8      	add	r8, r5
    acce:	07e3      	lsls	r3, r4, #31
    acd0:	d400      	bmi.n	acd4 <_vfprintf_r+0x1070>
    acd2:	e277      	b.n	b1c4 <_vfprintf_r+0x1560>
    acd4:	2300      	movs	r3, #0
    acd6:	2200      	movs	r2, #0
    acd8:	4648      	mov	r0, r9
    acda:	9908      	ldr	r1, [sp, #32]
    acdc:	f7fb fe22 	bl	6924 <__aeabi_dcmpeq>
    ace0:	4643      	mov	r3, r8
    ace2:	2800      	cmp	r0, #0
    ace4:	d10a      	bne.n	acfc <_vfprintf_r+0x1098>
    ace6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    ace8:	4543      	cmp	r3, r8
    acea:	d207      	bcs.n	acfc <_vfprintf_r+0x1098>
    acec:	2130      	movs	r1, #48	; 0x30
    acee:	4640      	mov	r0, r8
    acf0:	1c5a      	adds	r2, r3, #1
    acf2:	9223      	str	r2, [sp, #140]	; 0x8c
    acf4:	7019      	strb	r1, [r3, #0]
    acf6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    acf8:	4298      	cmp	r0, r3
    acfa:	d8f9      	bhi.n	acf0 <_vfprintf_r+0x108c>
    acfc:	9a11      	ldr	r2, [sp, #68]	; 0x44
    acfe:	1a9b      	subs	r3, r3, r2
    ad00:	9314      	str	r3, [sp, #80]	; 0x50
    ad02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ad04:	2b47      	cmp	r3, #71	; 0x47
    ad06:	d100      	bne.n	ad0a <_vfprintf_r+0x10a6>
    ad08:	e0d0      	b.n	aeac <_vfprintf_r+0x1248>
    ad0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ad0c:	2b65      	cmp	r3, #101	; 0x65
    ad0e:	dc00      	bgt.n	ad12 <_vfprintf_r+0x10ae>
    ad10:	e2d5      	b.n	b2be <_vfprintf_r+0x165a>
    ad12:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ad14:	2b66      	cmp	r3, #102	; 0x66
    ad16:	d100      	bne.n	ad1a <_vfprintf_r+0x10b6>
    ad18:	e1c6      	b.n	b0a8 <_vfprintf_r+0x1444>
    ad1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    ad1c:	9313      	str	r3, [sp, #76]	; 0x4c
    ad1e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    ad20:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    ad22:	0019      	movs	r1, r3
    ad24:	4291      	cmp	r1, r2
    ad26:	dd00      	ble.n	ad2a <_vfprintf_r+0x10c6>
    ad28:	e1a0      	b.n	b06c <_vfprintf_r+0x1408>
    ad2a:	07e3      	lsls	r3, r4, #31
    ad2c:	d500      	bpl.n	ad30 <_vfprintf_r+0x10cc>
    ad2e:	e242      	b.n	b1b6 <_vfprintf_r+0x1552>
    ad30:	43d3      	mvns	r3, r2
    ad32:	17db      	asrs	r3, r3, #31
    ad34:	0011      	movs	r1, r2
    ad36:	401a      	ands	r2, r3
    ad38:	2367      	movs	r3, #103	; 0x67
    ad3a:	9208      	str	r2, [sp, #32]
    ad3c:	910e      	str	r1, [sp, #56]	; 0x38
    ad3e:	9312      	str	r3, [sp, #72]	; 0x48
    ad40:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ad42:	2b00      	cmp	r3, #0
    ad44:	d000      	beq.n	ad48 <_vfprintf_r+0x10e4>
    ad46:	e0a9      	b.n	ae9c <_vfprintf_r+0x1238>
    ad48:	ab16      	add	r3, sp, #88	; 0x58
    ad4a:	7fdb      	ldrb	r3, [r3, #31]
    ad4c:	4698      	mov	r8, r3
    ad4e:	2300      	movs	r3, #0
    ad50:	469a      	mov	sl, r3
    ad52:	f7ff f8fc 	bl	9f4e <_vfprintf_r+0x2ea>
    ad56:	46cb      	mov	fp, r9
    ad58:	46a1      	mov	r9, r4
    ad5a:	0014      	movs	r4, r2
    ad5c:	e637      	b.n	a9ce <_vfprintf_r+0xd6a>
    ad5e:	464b      	mov	r3, r9
    ad60:	6d98      	ldr	r0, [r3, #88]	; 0x58
    ad62:	f002 f915 	bl	cf90 <__retarget_lock_release_recursive>
    ad66:	2301      	movs	r3, #1
    ad68:	425b      	negs	r3, r3
    ad6a:	930a      	str	r3, [sp, #40]	; 0x28
    ad6c:	f7ff f82b 	bl	9dc6 <_vfprintf_r+0x162>
    ad70:	9a09      	ldr	r2, [sp, #36]	; 0x24
    ad72:	07d2      	lsls	r2, r2, #31
    ad74:	d400      	bmi.n	ad78 <_vfprintf_r+0x1114>
    ad76:	e68f      	b.n	aa98 <_vfprintf_r+0xe34>
    ad78:	e680      	b.n	aa7c <_vfprintf_r+0xe18>
    ad7a:	3608      	adds	r6, #8
    ad7c:	e679      	b.n	aa72 <_vfprintf_r+0xe0e>
    ad7e:	68bc      	ldr	r4, [r7, #8]
    ad80:	f7ff fb73 	bl	a46a <_vfprintf_r+0x806>
    ad84:	003a      	movs	r2, r7
    ad86:	4659      	mov	r1, fp
    ad88:	9806      	ldr	r0, [sp, #24]
    ad8a:	f004 ffc5 	bl	fd18 <__sprint_r>
    ad8e:	2800      	cmp	r0, #0
    ad90:	d000      	beq.n	ad94 <_vfprintf_r+0x1130>
    ad92:	e4f7      	b.n	a784 <_vfprintf_r+0xb20>
    ad94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    ad96:	68bc      	ldr	r4, [r7, #8]
    ad98:	ae32      	add	r6, sp, #200	; 0xc8
    ad9a:	e67d      	b.n	aa98 <_vfprintf_r+0xe34>
    ad9c:	2320      	movs	r3, #32
    ad9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    ada0:	439a      	bics	r2, r3
    ada2:	3b1a      	subs	r3, #26
    ada4:	920e      	str	r2, [sp, #56]	; 0x38
    ada6:	469a      	mov	sl, r3
    ada8:	e75f      	b.n	ac6a <_vfprintf_r+0x1006>
    adaa:	232d      	movs	r3, #45	; 0x2d
    adac:	aa16      	add	r2, sp, #88	; 0x58
    adae:	77d3      	strb	r3, [r2, #31]
    adb0:	4698      	mov	r8, r3
    adb2:	f7ff faa8 	bl	a306 <_vfprintf_r+0x6a2>
    adb6:	003a      	movs	r2, r7
    adb8:	4659      	mov	r1, fp
    adba:	9806      	ldr	r0, [sp, #24]
    adbc:	f004 ffac 	bl	fd18 <__sprint_r>
    adc0:	2800      	cmp	r0, #0
    adc2:	d000      	beq.n	adc6 <_vfprintf_r+0x1162>
    adc4:	e4de      	b.n	a784 <_vfprintf_r+0xb20>
    adc6:	ae32      	add	r6, sp, #200	; 0xc8
    adc8:	e419      	b.n	a5fe <_vfprintf_r+0x99a>
    adca:	4be3      	ldr	r3, [pc, #908]	; (b158 <_vfprintf_r+0x14f4>)
    adcc:	3401      	adds	r4, #1
    adce:	6033      	str	r3, [r6, #0]
    add0:	2301      	movs	r3, #1
    add2:	6073      	str	r3, [r6, #4]
    add4:	687b      	ldr	r3, [r7, #4]
    add6:	60bc      	str	r4, [r7, #8]
    add8:	3301      	adds	r3, #1
    adda:	607b      	str	r3, [r7, #4]
    addc:	2b07      	cmp	r3, #7
    adde:	dd00      	ble.n	ade2 <_vfprintf_r+0x117e>
    ade0:	e155      	b.n	b08e <_vfprintf_r+0x142a>
    ade2:	3608      	adds	r6, #8
    ade4:	2800      	cmp	r0, #0
    ade6:	d107      	bne.n	adf8 <_vfprintf_r+0x1194>
    ade8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    adea:	2b00      	cmp	r3, #0
    adec:	d104      	bne.n	adf8 <_vfprintf_r+0x1194>
    adee:	9b09      	ldr	r3, [sp, #36]	; 0x24
    adf0:	07db      	lsls	r3, r3, #31
    adf2:	d401      	bmi.n	adf8 <_vfprintf_r+0x1194>
    adf4:	f7ff fb39 	bl	a46a <_vfprintf_r+0x806>
    adf8:	9b18      	ldr	r3, [sp, #96]	; 0x60
    adfa:	6033      	str	r3, [r6, #0]
    adfc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    adfe:	1919      	adds	r1, r3, r4
    ae00:	6073      	str	r3, [r6, #4]
    ae02:	687b      	ldr	r3, [r7, #4]
    ae04:	60b9      	str	r1, [r7, #8]
    ae06:	3301      	adds	r3, #1
    ae08:	607b      	str	r3, [r7, #4]
    ae0a:	2b07      	cmp	r3, #7
    ae0c:	dd00      	ble.n	ae10 <_vfprintf_r+0x11ac>
    ae0e:	e1c4      	b.n	b19a <_vfprintf_r+0x1536>
    ae10:	0032      	movs	r2, r6
    ae12:	3208      	adds	r2, #8
    ae14:	2800      	cmp	r0, #0
    ae16:	da00      	bge.n	ae1a <_vfprintf_r+0x11b6>
    ae18:	e195      	b.n	b146 <_vfprintf_r+0x14e2>
    ae1a:	9811      	ldr	r0, [sp, #68]	; 0x44
    ae1c:	3301      	adds	r3, #1
    ae1e:	6010      	str	r0, [r2, #0]
    ae20:	9814      	ldr	r0, [sp, #80]	; 0x50
    ae22:	607b      	str	r3, [r7, #4]
    ae24:	1844      	adds	r4, r0, r1
    ae26:	6050      	str	r0, [r2, #4]
    ae28:	60bc      	str	r4, [r7, #8]
    ae2a:	2b07      	cmp	r3, #7
    ae2c:	dd01      	ble.n	ae32 <_vfprintf_r+0x11ce>
    ae2e:	f7ff fbc2 	bl	a5b6 <_vfprintf_r+0x952>
    ae32:	3208      	adds	r2, #8
    ae34:	0016      	movs	r6, r2
    ae36:	f7ff fb18 	bl	a46a <_vfprintf_r+0x806>
    ae3a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    ae3c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ae3e:	680b      	ldr	r3, [r1, #0]
    ae40:	601a      	str	r2, [r3, #0]
    ae42:	17d2      	asrs	r2, r2, #31
    ae44:	605a      	str	r2, [r3, #4]
    ae46:	000b      	movs	r3, r1
    ae48:	3304      	adds	r3, #4
    ae4a:	930f      	str	r3, [sp, #60]	; 0x3c
    ae4c:	f7fe ff58 	bl	9d00 <_vfprintf_r+0x9c>
    ae50:	464b      	mov	r3, r9
    ae52:	9a07      	ldr	r2, [sp, #28]
    ae54:	431c      	orrs	r4, r3
    ae56:	3201      	adds	r2, #1
    ae58:	7813      	ldrb	r3, [r2, #0]
    ae5a:	9207      	str	r2, [sp, #28]
    ae5c:	f7fe ff8b 	bl	9d76 <_vfprintf_r+0x112>
    ae60:	003a      	movs	r2, r7
    ae62:	4659      	mov	r1, fp
    ae64:	9806      	ldr	r0, [sp, #24]
    ae66:	f004 ff57 	bl	fd18 <__sprint_r>
    ae6a:	2800      	cmp	r0, #0
    ae6c:	d000      	beq.n	ae70 <_vfprintf_r+0x120c>
    ae6e:	e489      	b.n	a784 <_vfprintf_r+0xb20>
    ae70:	68bc      	ldr	r4, [r7, #8]
    ae72:	ae32      	add	r6, sp, #200	; 0xc8
    ae74:	f7ff fbdc 	bl	a630 <_vfprintf_r+0x9cc>
    ae78:	4bb8      	ldr	r3, [pc, #736]	; (b15c <_vfprintf_r+0x14f8>)
    ae7a:	9311      	str	r3, [sp, #68]	; 0x44
    ae7c:	f7ff fa4a 	bl	a314 <_vfprintf_r+0x6b0>
    ae80:	9a11      	ldr	r2, [sp, #68]	; 0x44
    ae82:	ab32      	add	r3, sp, #200	; 0xc8
    ae84:	1a9b      	subs	r3, r3, r2
    ae86:	930e      	str	r3, [sp, #56]	; 0x38
    ae88:	f7ff f859 	bl	9f3e <_vfprintf_r+0x2da>
    ae8c:	9811      	ldr	r0, [sp, #68]	; 0x44
    ae8e:	f7fc f9bb 	bl	7208 <strlen>
    ae92:	0002      	movs	r2, r0
    ae94:	900e      	str	r0, [sp, #56]	; 0x38
    ae96:	0003      	movs	r3, r0
    ae98:	f7ff f9a1 	bl	a1de <_vfprintf_r+0x57a>
    ae9c:	232d      	movs	r3, #45	; 0x2d
    ae9e:	aa16      	add	r2, sp, #88	; 0x58
    aea0:	77d3      	strb	r3, [r2, #31]
    aea2:	4698      	mov	r8, r3
    aea4:	2300      	movs	r3, #0
    aea6:	469a      	mov	sl, r3
    aea8:	f7ff f854 	bl	9f54 <_vfprintf_r+0x2f0>
    aeac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    aeae:	9313      	str	r3, [sp, #76]	; 0x4c
    aeb0:	1cda      	adds	r2, r3, #3
    aeb2:	db02      	blt.n	aeba <_vfprintf_r+0x1256>
    aeb4:	459a      	cmp	sl, r3
    aeb6:	db00      	blt.n	aeba <_vfprintf_r+0x1256>
    aeb8:	e731      	b.n	ad1e <_vfprintf_r+0x10ba>
    aeba:	9b12      	ldr	r3, [sp, #72]	; 0x48
    aebc:	3b02      	subs	r3, #2
    aebe:	9312      	str	r3, [sp, #72]	; 0x48
    aec0:	222c      	movs	r2, #44	; 0x2c
    aec2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    aec4:	2148      	movs	r1, #72	; 0x48
    aec6:	1e5d      	subs	r5, r3, #1
    aec8:	ab16      	add	r3, sp, #88	; 0x58
    aeca:	189b      	adds	r3, r3, r2
    aecc:	466a      	mov	r2, sp
    aece:	1852      	adds	r2, r2, r1
    aed0:	7812      	ldrb	r2, [r2, #0]
    aed2:	951f      	str	r5, [sp, #124]	; 0x7c
    aed4:	701a      	strb	r2, [r3, #0]
    aed6:	2d00      	cmp	r5, #0
    aed8:	da00      	bge.n	aedc <_vfprintf_r+0x1278>
    aeda:	e1cb      	b.n	b274 <_vfprintf_r+0x1610>
    aedc:	212d      	movs	r1, #45	; 0x2d
    aede:	232b      	movs	r3, #43	; 0x2b
    aee0:	aa16      	add	r2, sp, #88	; 0x58
    aee2:	1852      	adds	r2, r2, r1
    aee4:	7013      	strb	r3, [r2, #0]
    aee6:	2d09      	cmp	r5, #9
    aee8:	dc00      	bgt.n	aeec <_vfprintf_r+0x1288>
    aeea:	e16d      	b.n	b1c8 <_vfprintf_r+0x1564>
    aeec:	aa16      	add	r2, sp, #88	; 0x58
    aeee:	233b      	movs	r3, #59	; 0x3b
    aef0:	4694      	mov	ip, r2
    aef2:	4463      	add	r3, ip
    aef4:	469a      	mov	sl, r3
    aef6:	46b1      	mov	r9, r6
    aef8:	46a0      	mov	r8, r4
    aefa:	4656      	mov	r6, sl
    aefc:	e000      	b.n	af00 <_vfprintf_r+0x129c>
    aefe:	0026      	movs	r6, r4
    af00:	0028      	movs	r0, r5
    af02:	210a      	movs	r1, #10
    af04:	f7f9 fd4c 	bl	49a0 <__aeabi_idivmod>
    af08:	1e74      	subs	r4, r6, #1
    af0a:	3130      	adds	r1, #48	; 0x30
    af0c:	7021      	strb	r1, [r4, #0]
    af0e:	0028      	movs	r0, r5
    af10:	210a      	movs	r1, #10
    af12:	f7f9 fc5f 	bl	47d4 <__divsi3>
    af16:	0005      	movs	r5, r0
    af18:	2809      	cmp	r0, #9
    af1a:	dcf0      	bgt.n	aefe <_vfprintf_r+0x129a>
    af1c:	0023      	movs	r3, r4
    af1e:	4644      	mov	r4, r8
    af20:	46b0      	mov	r8, r6
    af22:	464e      	mov	r6, r9
    af24:	4699      	mov	r9, r3
    af26:	0003      	movs	r3, r0
    af28:	3330      	adds	r3, #48	; 0x30
    af2a:	b2d8      	uxtb	r0, r3
    af2c:	4643      	mov	r3, r8
    af2e:	3b02      	subs	r3, #2
    af30:	7018      	strb	r0, [r3, #0]
    af32:	459a      	cmp	sl, r3
    af34:	d800      	bhi.n	af38 <_vfprintf_r+0x12d4>
    af36:	e1f6      	b.n	b326 <_vfprintf_r+0x16c2>
    af38:	4642      	mov	r2, r8
    af3a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    af3c:	4645      	mov	r5, r8
    af3e:	1a99      	subs	r1, r3, r2
    af40:	2301      	movs	r3, #1
    af42:	3107      	adds	r1, #7
    af44:	425b      	negs	r3, r3
    af46:	e001      	b.n	af4c <_vfprintf_r+0x12e8>
    af48:	5ce8      	ldrb	r0, [r5, r3]
    af4a:	3301      	adds	r3, #1
    af4c:	aa21      	add	r2, sp, #132	; 0x84
    af4e:	18d2      	adds	r2, r2, r3
    af50:	70d0      	strb	r0, [r2, #3]
    af52:	428b      	cmp	r3, r1
    af54:	d1f8      	bne.n	af48 <_vfprintf_r+0x12e4>
    af56:	a916      	add	r1, sp, #88	; 0x58
    af58:	468c      	mov	ip, r1
    af5a:	222e      	movs	r2, #46	; 0x2e
    af5c:	464b      	mov	r3, r9
    af5e:	4462      	add	r2, ip
    af60:	4694      	mov	ip, r2
    af62:	1afb      	subs	r3, r7, r3
    af64:	4463      	add	r3, ip
    af66:	aa21      	add	r2, sp, #132	; 0x84
    af68:	9914      	ldr	r1, [sp, #80]	; 0x50
    af6a:	1a9b      	subs	r3, r3, r2
    af6c:	469c      	mov	ip, r3
    af6e:	000a      	movs	r2, r1
    af70:	4462      	add	r2, ip
    af72:	931a      	str	r3, [sp, #104]	; 0x68
    af74:	920e      	str	r2, [sp, #56]	; 0x38
    af76:	2901      	cmp	r1, #1
    af78:	dc00      	bgt.n	af7c <_vfprintf_r+0x1318>
    af7a:	e170      	b.n	b25e <_vfprintf_r+0x15fa>
    af7c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    af7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    af80:	4694      	mov	ip, r2
    af82:	4463      	add	r3, ip
    af84:	001a      	movs	r2, r3
    af86:	930e      	str	r3, [sp, #56]	; 0x38
    af88:	43db      	mvns	r3, r3
    af8a:	17db      	asrs	r3, r3, #31
    af8c:	401a      	ands	r2, r3
    af8e:	2300      	movs	r3, #0
    af90:	9208      	str	r2, [sp, #32]
    af92:	9313      	str	r3, [sp, #76]	; 0x4c
    af94:	e6d4      	b.n	ad40 <_vfprintf_r+0x10dc>
    af96:	003a      	movs	r2, r7
    af98:	4659      	mov	r1, fp
    af9a:	9806      	ldr	r0, [sp, #24]
    af9c:	f004 febc 	bl	fd18 <__sprint_r>
    afa0:	2800      	cmp	r0, #0
    afa2:	d001      	beq.n	afa8 <_vfprintf_r+0x1344>
    afa4:	f7ff fbee 	bl	a784 <_vfprintf_r+0xb20>
    afa8:	68bc      	ldr	r4, [r7, #8]
    afaa:	ae32      	add	r6, sp, #200	; 0xc8
    afac:	e46a      	b.n	a884 <_vfprintf_r+0xc20>
    afae:	4653      	mov	r3, sl
    afb0:	2b00      	cmp	r3, #0
    afb2:	d000      	beq.n	afb6 <_vfprintf_r+0x1352>
    afb4:	e659      	b.n	ac6a <_vfprintf_r+0x1006>
    afb6:	3301      	adds	r3, #1
    afb8:	469a      	mov	sl, r3
    afba:	e656      	b.n	ac6a <_vfprintf_r+0x1006>
    afbc:	4653      	mov	r3, sl
    afbe:	9308      	str	r3, [sp, #32]
    afc0:	2b06      	cmp	r3, #6
    afc2:	d901      	bls.n	afc8 <_vfprintf_r+0x1364>
    afc4:	2306      	movs	r3, #6
    afc6:	9308      	str	r3, [sp, #32]
    afc8:	9b08      	ldr	r3, [sp, #32]
    afca:	950f      	str	r5, [sp, #60]	; 0x3c
    afcc:	930e      	str	r3, [sp, #56]	; 0x38
    afce:	2300      	movs	r3, #0
    afd0:	4698      	mov	r8, r3
    afd2:	469a      	mov	sl, r3
    afd4:	9313      	str	r3, [sp, #76]	; 0x4c
    afd6:	4b62      	ldr	r3, [pc, #392]	; (b160 <_vfprintf_r+0x14fc>)
    afd8:	9409      	str	r4, [sp, #36]	; 0x24
    afda:	9311      	str	r3, [sp, #68]	; 0x44
    afdc:	f7fe ffbd 	bl	9f5a <_vfprintf_r+0x2f6>
    afe0:	003a      	movs	r2, r7
    afe2:	4659      	mov	r1, fp
    afe4:	9806      	ldr	r0, [sp, #24]
    afe6:	f004 fe97 	bl	fd18 <__sprint_r>
    afea:	2800      	cmp	r0, #0
    afec:	d001      	beq.n	aff2 <_vfprintf_r+0x138e>
    afee:	f7ff fbc9 	bl	a784 <_vfprintf_r+0xb20>
    aff2:	9b14      	ldr	r3, [sp, #80]	; 0x50
    aff4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    aff6:	68bc      	ldr	r4, [r7, #8]
    aff8:	1a9b      	subs	r3, r3, r2
    affa:	ae32      	add	r6, sp, #200	; 0xc8
    affc:	e567      	b.n	aace <_vfprintf_r+0xe6a>
    affe:	ab23      	add	r3, sp, #140	; 0x8c
    b000:	931b      	str	r3, [sp, #108]	; 0x6c
    b002:	9304      	str	r3, [sp, #16]
    b004:	ab20      	add	r3, sp, #128	; 0x80
    b006:	9303      	str	r3, [sp, #12]
    b008:	ab1f      	add	r3, sp, #124	; 0x7c
    b00a:	9302      	str	r3, [sp, #8]
    b00c:	4653      	mov	r3, sl
    b00e:	9301      	str	r3, [sp, #4]
    b010:	2303      	movs	r3, #3
    b012:	464a      	mov	r2, r9
    b014:	9300      	str	r3, [sp, #0]
    b016:	9806      	ldr	r0, [sp, #24]
    b018:	9b08      	ldr	r3, [sp, #32]
    b01a:	f000 fb7f 	bl	b71c <_dtoa_r>
    b01e:	0003      	movs	r3, r0
    b020:	4453      	add	r3, sl
    b022:	4698      	mov	r8, r3
    b024:	4655      	mov	r5, sl
    b026:	9011      	str	r0, [sp, #68]	; 0x44
    b028:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b02a:	781b      	ldrb	r3, [r3, #0]
    b02c:	2b30      	cmp	r3, #48	; 0x30
    b02e:	d002      	beq.n	b036 <_vfprintf_r+0x13d2>
    b030:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b032:	4498      	add	r8, r3
    b034:	e64e      	b.n	acd4 <_vfprintf_r+0x1070>
    b036:	2200      	movs	r2, #0
    b038:	2300      	movs	r3, #0
    b03a:	4648      	mov	r0, r9
    b03c:	9908      	ldr	r1, [sp, #32]
    b03e:	f7fb fc71 	bl	6924 <__aeabi_dcmpeq>
    b042:	2800      	cmp	r0, #0
    b044:	d1f4      	bne.n	b030 <_vfprintf_r+0x13cc>
    b046:	2301      	movs	r3, #1
    b048:	1b5b      	subs	r3, r3, r5
    b04a:	931f      	str	r3, [sp, #124]	; 0x7c
    b04c:	4498      	add	r8, r3
    b04e:	e641      	b.n	acd4 <_vfprintf_r+0x1070>
    b050:	46c1      	mov	r9, r8
    b052:	f7ff fb1f 	bl	a694 <_vfprintf_r+0xa30>
    b056:	2280      	movs	r2, #128	; 0x80
    b058:	0612      	lsls	r2, r2, #24
    b05a:	4694      	mov	ip, r2
    b05c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    b05e:	4699      	mov	r9, r3
    b060:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b062:	4463      	add	r3, ip
    b064:	9308      	str	r3, [sp, #32]
    b066:	232d      	movs	r3, #45	; 0x2d
    b068:	9310      	str	r3, [sp, #64]	; 0x40
    b06a:	e60b      	b.n	ac84 <_vfprintf_r+0x1020>
    b06c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    b06e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b070:	4694      	mov	ip, r2
    b072:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    b074:	4463      	add	r3, ip
    b076:	930e      	str	r3, [sp, #56]	; 0x38
    b078:	2a00      	cmp	r2, #0
    b07a:	dc00      	bgt.n	b07e <_vfprintf_r+0x141a>
    b07c:	e0e3      	b.n	b246 <_vfprintf_r+0x15e2>
    b07e:	001a      	movs	r2, r3
    b080:	43db      	mvns	r3, r3
    b082:	17db      	asrs	r3, r3, #31
    b084:	401a      	ands	r2, r3
    b086:	2367      	movs	r3, #103	; 0x67
    b088:	9208      	str	r2, [sp, #32]
    b08a:	9312      	str	r3, [sp, #72]	; 0x48
    b08c:	e658      	b.n	ad40 <_vfprintf_r+0x10dc>
    b08e:	003a      	movs	r2, r7
    b090:	4659      	mov	r1, fp
    b092:	9806      	ldr	r0, [sp, #24]
    b094:	f004 fe40 	bl	fd18 <__sprint_r>
    b098:	2800      	cmp	r0, #0
    b09a:	d001      	beq.n	b0a0 <_vfprintf_r+0x143c>
    b09c:	f7ff fb72 	bl	a784 <_vfprintf_r+0xb20>
    b0a0:	981f      	ldr	r0, [sp, #124]	; 0x7c
    b0a2:	68bc      	ldr	r4, [r7, #8]
    b0a4:	ae32      	add	r6, sp, #200	; 0xc8
    b0a6:	e69d      	b.n	ade4 <_vfprintf_r+0x1180>
    b0a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b0aa:	9313      	str	r3, [sp, #76]	; 0x4c
    b0ac:	2b00      	cmp	r3, #0
    b0ae:	dc00      	bgt.n	b0b2 <_vfprintf_r+0x144e>
    b0b0:	e0f2      	b.n	b298 <_vfprintf_r+0x1634>
    b0b2:	4652      	mov	r2, sl
    b0b4:	2a00      	cmp	r2, #0
    b0b6:	d000      	beq.n	b0ba <_vfprintf_r+0x1456>
    b0b8:	e0a0      	b.n	b1fc <_vfprintf_r+0x1598>
    b0ba:	07e2      	lsls	r2, r4, #31
    b0bc:	d500      	bpl.n	b0c0 <_vfprintf_r+0x145c>
    b0be:	e09d      	b.n	b1fc <_vfprintf_r+0x1598>
    b0c0:	9308      	str	r3, [sp, #32]
    b0c2:	930e      	str	r3, [sp, #56]	; 0x38
    b0c4:	e63c      	b.n	ad40 <_vfprintf_r+0x10dc>
    b0c6:	ab16      	add	r3, sp, #88	; 0x58
    b0c8:	7fdb      	ldrb	r3, [r3, #31]
    b0ca:	950f      	str	r5, [sp, #60]	; 0x3c
    b0cc:	4698      	mov	r8, r3
    b0ce:	4653      	mov	r3, sl
    b0d0:	9308      	str	r3, [sp, #32]
    b0d2:	930e      	str	r3, [sp, #56]	; 0x38
    b0d4:	2300      	movs	r3, #0
    b0d6:	9409      	str	r4, [sp, #36]	; 0x24
    b0d8:	469a      	mov	sl, r3
    b0da:	9313      	str	r3, [sp, #76]	; 0x4c
    b0dc:	f7fe ff37 	bl	9f4e <_vfprintf_r+0x2ea>
    b0e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b0e2:	4698      	mov	r8, r3
    b0e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b0e6:	44a8      	add	r8, r5
    b0e8:	2b47      	cmp	r3, #71	; 0x47
    b0ea:	d000      	beq.n	b0ee <_vfprintf_r+0x148a>
    b0ec:	e5f2      	b.n	acd4 <_vfprintf_r+0x1070>
    b0ee:	07e3      	lsls	r3, r4, #31
    b0f0:	d400      	bmi.n	b0f4 <_vfprintf_r+0x1490>
    b0f2:	e0dc      	b.n	b2ae <_vfprintf_r+0x164a>
    b0f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b0f6:	4698      	mov	r8, r3
    b0f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b0fa:	44a8      	add	r8, r5
    b0fc:	2b46      	cmp	r3, #70	; 0x46
    b0fe:	d093      	beq.n	b028 <_vfprintf_r+0x13c4>
    b100:	e5e8      	b.n	acd4 <_vfprintf_r+0x1070>
    b102:	ab23      	add	r3, sp, #140	; 0x8c
    b104:	931b      	str	r3, [sp, #108]	; 0x6c
    b106:	9304      	str	r3, [sp, #16]
    b108:	ab20      	add	r3, sp, #128	; 0x80
    b10a:	9303      	str	r3, [sp, #12]
    b10c:	ab1f      	add	r3, sp, #124	; 0x7c
    b10e:	9302      	str	r3, [sp, #8]
    b110:	4653      	mov	r3, sl
    b112:	9301      	str	r3, [sp, #4]
    b114:	2303      	movs	r3, #3
    b116:	464a      	mov	r2, r9
    b118:	9300      	str	r3, [sp, #0]
    b11a:	9806      	ldr	r0, [sp, #24]
    b11c:	9b08      	ldr	r3, [sp, #32]
    b11e:	f000 fafd 	bl	b71c <_dtoa_r>
    b122:	4655      	mov	r5, sl
    b124:	9011      	str	r0, [sp, #68]	; 0x44
    b126:	e7e5      	b.n	b0f4 <_vfprintf_r+0x1490>
    b128:	003a      	movs	r2, r7
    b12a:	4659      	mov	r1, fp
    b12c:	9806      	ldr	r0, [sp, #24]
    b12e:	f004 fdf3 	bl	fd18 <__sprint_r>
    b132:	2800      	cmp	r0, #0
    b134:	d101      	bne.n	b13a <_vfprintf_r+0x14d6>
    b136:	f7ff faab 	bl	a690 <_vfprintf_r+0xa2c>
    b13a:	f7ff faab 	bl	a694 <_vfprintf_r+0xa30>
    b13e:	4642      	mov	r2, r8
    b140:	9207      	str	r2, [sp, #28]
    b142:	f7fe fe1b 	bl	9d7c <_vfprintf_r+0x118>
    b146:	4244      	negs	r4, r0
    b148:	3010      	adds	r0, #16
    b14a:	db00      	blt.n	b14e <_vfprintf_r+0x14ea>
    b14c:	e0d8      	b.n	b300 <_vfprintf_r+0x169c>
    b14e:	4805      	ldr	r0, [pc, #20]	; (b164 <_vfprintf_r+0x1500>)
    b150:	2610      	movs	r6, #16
    b152:	0005      	movs	r5, r0
    b154:	e00c      	b.n	b170 <_vfprintf_r+0x150c>
    b156:	46c0      	nop			; (mov r8, r8)
    b158:	000139f4 	.word	0x000139f4
    b15c:	000139b8 	.word	0x000139b8
    b160:	000139ec 	.word	0x000139ec
    b164:	00014010 	.word	0x00014010
    b168:	3208      	adds	r2, #8
    b16a:	3c10      	subs	r4, #16
    b16c:	2c10      	cmp	r4, #16
    b16e:	dd51      	ble.n	b214 <_vfprintf_r+0x15b0>
    b170:	3110      	adds	r1, #16
    b172:	3301      	adds	r3, #1
    b174:	6015      	str	r5, [r2, #0]
    b176:	6056      	str	r6, [r2, #4]
    b178:	60b9      	str	r1, [r7, #8]
    b17a:	607b      	str	r3, [r7, #4]
    b17c:	2b07      	cmp	r3, #7
    b17e:	ddf3      	ble.n	b168 <_vfprintf_r+0x1504>
    b180:	003a      	movs	r2, r7
    b182:	4659      	mov	r1, fp
    b184:	9806      	ldr	r0, [sp, #24]
    b186:	f004 fdc7 	bl	fd18 <__sprint_r>
    b18a:	2800      	cmp	r0, #0
    b18c:	d001      	beq.n	b192 <_vfprintf_r+0x152e>
    b18e:	f7ff faf9 	bl	a784 <_vfprintf_r+0xb20>
    b192:	68b9      	ldr	r1, [r7, #8]
    b194:	687b      	ldr	r3, [r7, #4]
    b196:	aa32      	add	r2, sp, #200	; 0xc8
    b198:	e7e7      	b.n	b16a <_vfprintf_r+0x1506>
    b19a:	003a      	movs	r2, r7
    b19c:	4659      	mov	r1, fp
    b19e:	9806      	ldr	r0, [sp, #24]
    b1a0:	f004 fdba 	bl	fd18 <__sprint_r>
    b1a4:	2800      	cmp	r0, #0
    b1a6:	d001      	beq.n	b1ac <_vfprintf_r+0x1548>
    b1a8:	f7ff faec 	bl	a784 <_vfprintf_r+0xb20>
    b1ac:	981f      	ldr	r0, [sp, #124]	; 0x7c
    b1ae:	68b9      	ldr	r1, [r7, #8]
    b1b0:	687b      	ldr	r3, [r7, #4]
    b1b2:	aa32      	add	r2, sp, #200	; 0xc8
    b1b4:	e62e      	b.n	ae14 <_vfprintf_r+0x11b0>
    b1b6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    b1b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b1ba:	4694      	mov	ip, r2
    b1bc:	4463      	add	r3, ip
    b1be:	001a      	movs	r2, r3
    b1c0:	930e      	str	r3, [sp, #56]	; 0x38
    b1c2:	e75d      	b.n	b080 <_vfprintf_r+0x141c>
    b1c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    b1c6:	e599      	b.n	acfc <_vfprintf_r+0x1098>
    b1c8:	212e      	movs	r1, #46	; 0x2e
    b1ca:	2330      	movs	r3, #48	; 0x30
    b1cc:	aa16      	add	r2, sp, #88	; 0x58
    b1ce:	1852      	adds	r2, r2, r1
    b1d0:	7013      	strb	r3, [r2, #0]
    b1d2:	002b      	movs	r3, r5
    b1d4:	aa16      	add	r2, sp, #88	; 0x58
    b1d6:	3101      	adds	r1, #1
    b1d8:	3330      	adds	r3, #48	; 0x30
    b1da:	1852      	adds	r2, r2, r1
    b1dc:	7013      	strb	r3, [r2, #0]
    b1de:	ab22      	add	r3, sp, #136	; 0x88
    b1e0:	e6c1      	b.n	af66 <_vfprintf_r+0x1302>
    b1e2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b1e4:	2b00      	cmp	r3, #0
    b1e6:	db52      	blt.n	b28e <_vfprintf_r+0x162a>
    b1e8:	ab16      	add	r3, sp, #88	; 0x58
    b1ea:	7fdb      	ldrb	r3, [r3, #31]
    b1ec:	4698      	mov	r8, r3
    b1ee:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b1f0:	2b47      	cmp	r3, #71	; 0x47
    b1f2:	dc48      	bgt.n	b286 <_vfprintf_r+0x1622>
    b1f4:	4b4e      	ldr	r3, [pc, #312]	; (b330 <_vfprintf_r+0x16cc>)
    b1f6:	9311      	str	r3, [sp, #68]	; 0x44
    b1f8:	f7ff f88c 	bl	a314 <_vfprintf_r+0x6b0>
    b1fc:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    b1fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b200:	4694      	mov	ip, r2
    b202:	4463      	add	r3, ip
    b204:	4453      	add	r3, sl
    b206:	001a      	movs	r2, r3
    b208:	930e      	str	r3, [sp, #56]	; 0x38
    b20a:	43db      	mvns	r3, r3
    b20c:	17db      	asrs	r3, r3, #31
    b20e:	401a      	ands	r2, r3
    b210:	9208      	str	r2, [sp, #32]
    b212:	e595      	b.n	ad40 <_vfprintf_r+0x10dc>
    b214:	46a9      	mov	r9, r5
    b216:	4648      	mov	r0, r9
    b218:	1909      	adds	r1, r1, r4
    b21a:	3301      	adds	r3, #1
    b21c:	6010      	str	r0, [r2, #0]
    b21e:	6054      	str	r4, [r2, #4]
    b220:	60b9      	str	r1, [r7, #8]
    b222:	3208      	adds	r2, #8
    b224:	607b      	str	r3, [r7, #4]
    b226:	2b07      	cmp	r3, #7
    b228:	dc00      	bgt.n	b22c <_vfprintf_r+0x15c8>
    b22a:	e5f6      	b.n	ae1a <_vfprintf_r+0x11b6>
    b22c:	003a      	movs	r2, r7
    b22e:	4659      	mov	r1, fp
    b230:	9806      	ldr	r0, [sp, #24]
    b232:	f004 fd71 	bl	fd18 <__sprint_r>
    b236:	2800      	cmp	r0, #0
    b238:	d001      	beq.n	b23e <_vfprintf_r+0x15da>
    b23a:	f7ff faa3 	bl	a784 <_vfprintf_r+0xb20>
    b23e:	68b9      	ldr	r1, [r7, #8]
    b240:	687b      	ldr	r3, [r7, #4]
    b242:	aa32      	add	r2, sp, #200	; 0xc8
    b244:	e5e9      	b.n	ae1a <_vfprintf_r+0x11b6>
    b246:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b248:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    b24a:	1a98      	subs	r0, r3, r2
    b24c:	1c43      	adds	r3, r0, #1
    b24e:	001a      	movs	r2, r3
    b250:	930e      	str	r3, [sp, #56]	; 0x38
    b252:	e715      	b.n	b080 <_vfprintf_r+0x141c>
    b254:	4a37      	ldr	r2, [pc, #220]	; (b334 <_vfprintf_r+0x16d0>)
    b256:	687b      	ldr	r3, [r7, #4]
    b258:	4691      	mov	r9, r2
    b25a:	f7ff fbf5 	bl	aa48 <_vfprintf_r+0xde4>
    b25e:	2301      	movs	r3, #1
    b260:	4023      	ands	r3, r4
    b262:	9313      	str	r3, [sp, #76]	; 0x4c
    b264:	d000      	beq.n	b268 <_vfprintf_r+0x1604>
    b266:	e689      	b.n	af7c <_vfprintf_r+0x1318>
    b268:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    b26a:	43d3      	mvns	r3, r2
    b26c:	17db      	asrs	r3, r3, #31
    b26e:	401a      	ands	r2, r3
    b270:	9208      	str	r2, [sp, #32]
    b272:	e565      	b.n	ad40 <_vfprintf_r+0x10dc>
    b274:	2301      	movs	r3, #1
    b276:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    b278:	391b      	subs	r1, #27
    b27a:	1a9d      	subs	r5, r3, r2
    b27c:	aa16      	add	r2, sp, #88	; 0x58
    b27e:	332c      	adds	r3, #44	; 0x2c
    b280:	1852      	adds	r2, r2, r1
    b282:	7013      	strb	r3, [r2, #0]
    b284:	e62f      	b.n	aee6 <_vfprintf_r+0x1282>
    b286:	4b2c      	ldr	r3, [pc, #176]	; (b338 <_vfprintf_r+0x16d4>)
    b288:	9311      	str	r3, [sp, #68]	; 0x44
    b28a:	f7ff f843 	bl	a314 <_vfprintf_r+0x6b0>
    b28e:	232d      	movs	r3, #45	; 0x2d
    b290:	aa16      	add	r2, sp, #88	; 0x58
    b292:	77d3      	strb	r3, [r2, #31]
    b294:	4698      	mov	r8, r3
    b296:	e7aa      	b.n	b1ee <_vfprintf_r+0x158a>
    b298:	4653      	mov	r3, sl
    b29a:	2b00      	cmp	r3, #0
    b29c:	d101      	bne.n	b2a2 <_vfprintf_r+0x163e>
    b29e:	07e3      	lsls	r3, r4, #31
    b2a0:	d503      	bpl.n	b2aa <_vfprintf_r+0x1646>
    b2a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    b2a4:	1c58      	adds	r0, r3, #1
    b2a6:	0003      	movs	r3, r0
    b2a8:	e7ac      	b.n	b204 <_vfprintf_r+0x15a0>
    b2aa:	2301      	movs	r3, #1
    b2ac:	e708      	b.n	b0c0 <_vfprintf_r+0x145c>
    b2ae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    b2b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
    b2b2:	1a9b      	subs	r3, r3, r2
    b2b4:	9314      	str	r3, [sp, #80]	; 0x50
    b2b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b2b8:	2b47      	cmp	r3, #71	; 0x47
    b2ba:	d100      	bne.n	b2be <_vfprintf_r+0x165a>
    b2bc:	e5f6      	b.n	aeac <_vfprintf_r+0x1248>
    b2be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b2c0:	9313      	str	r3, [sp, #76]	; 0x4c
    b2c2:	e5fd      	b.n	aec0 <_vfprintf_r+0x125c>
    b2c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b2c6:	1d1d      	adds	r5, r3, #4
    b2c8:	681b      	ldr	r3, [r3, #0]
    b2ca:	46a8      	mov	r8, r5
    b2cc:	469a      	mov	sl, r3
    b2ce:	2b00      	cmp	r3, #0
    b2d0:	db0a      	blt.n	b2e8 <_vfprintf_r+0x1684>
    b2d2:	4645      	mov	r5, r8
    b2d4:	9b07      	ldr	r3, [sp, #28]
    b2d6:	950f      	str	r5, [sp, #60]	; 0x3c
    b2d8:	785b      	ldrb	r3, [r3, #1]
    b2da:	9207      	str	r2, [sp, #28]
    b2dc:	f7fe fd4b 	bl	9d76 <_vfprintf_r+0x112>
    b2e0:	ab16      	add	r3, sp, #88	; 0x58
    b2e2:	77d8      	strb	r0, [r3, #31]
    b2e4:	f7ff f830 	bl	a348 <_vfprintf_r+0x6e4>
    b2e8:	2301      	movs	r3, #1
    b2ea:	425b      	negs	r3, r3
    b2ec:	469a      	mov	sl, r3
    b2ee:	e7f0      	b.n	b2d2 <_vfprintf_r+0x166e>
    b2f0:	ab16      	add	r3, sp, #88	; 0x58
    b2f2:	77d8      	strb	r0, [r3, #31]
    b2f4:	f7fe ff27 	bl	a146 <_vfprintf_r+0x4e2>
    b2f8:	ab16      	add	r3, sp, #88	; 0x58
    b2fa:	77d8      	strb	r0, [r3, #31]
    b2fc:	f7fe fdce 	bl	9e9c <_vfprintf_r+0x238>
    b300:	480c      	ldr	r0, [pc, #48]	; (b334 <_vfprintf_r+0x16d0>)
    b302:	4681      	mov	r9, r0
    b304:	e787      	b.n	b216 <_vfprintf_r+0x15b2>
    b306:	ab16      	add	r3, sp, #88	; 0x58
    b308:	77d8      	strb	r0, [r3, #31]
    b30a:	f7ff f829 	bl	a360 <_vfprintf_r+0x6fc>
    b30e:	ab16      	add	r3, sp, #88	; 0x58
    b310:	77d8      	strb	r0, [r3, #31]
    b312:	f7fe ffc3 	bl	a29c <_vfprintf_r+0x638>
    b316:	ab16      	add	r3, sp, #88	; 0x58
    b318:	77d8      	strb	r0, [r3, #31]
    b31a:	f7fe ffa5 	bl	a268 <_vfprintf_r+0x604>
    b31e:	ab16      	add	r3, sp, #88	; 0x58
    b320:	77d8      	strb	r0, [r3, #31]
    b322:	f7fe feaf 	bl	a084 <_vfprintf_r+0x420>
    b326:	aa16      	add	r2, sp, #88	; 0x58
    b328:	232e      	movs	r3, #46	; 0x2e
    b32a:	4694      	mov	ip, r2
    b32c:	4463      	add	r3, ip
    b32e:	e61a      	b.n	af66 <_vfprintf_r+0x1302>
    b330:	000139bc 	.word	0x000139bc
    b334:	00014010 	.word	0x00014010
    b338:	000139c0 	.word	0x000139c0

0000b33c <__sbprintf>:
    b33c:	b5f0      	push	{r4, r5, r6, r7, lr}
    b33e:	0015      	movs	r5, r2
    b340:	2202      	movs	r2, #2
    b342:	4c1e      	ldr	r4, [pc, #120]	; (b3bc <__sbprintf+0x80>)
    b344:	001f      	movs	r7, r3
    b346:	898b      	ldrh	r3, [r1, #12]
    b348:	44a5      	add	sp, r4
    b34a:	4393      	bics	r3, r2
    b34c:	466a      	mov	r2, sp
    b34e:	8193      	strh	r3, [r2, #12]
    b350:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    b352:	0006      	movs	r6, r0
    b354:	9319      	str	r3, [sp, #100]	; 0x64
    b356:	89cb      	ldrh	r3, [r1, #14]
    b358:	a816      	add	r0, sp, #88	; 0x58
    b35a:	81d3      	strh	r3, [r2, #14]
    b35c:	69cb      	ldr	r3, [r1, #28]
    b35e:	000c      	movs	r4, r1
    b360:	9307      	str	r3, [sp, #28]
    b362:	6a4b      	ldr	r3, [r1, #36]	; 0x24
    b364:	9309      	str	r3, [sp, #36]	; 0x24
    b366:	ab1a      	add	r3, sp, #104	; 0x68
    b368:	9300      	str	r3, [sp, #0]
    b36a:	9304      	str	r3, [sp, #16]
    b36c:	2380      	movs	r3, #128	; 0x80
    b36e:	00db      	lsls	r3, r3, #3
    b370:	9302      	str	r3, [sp, #8]
    b372:	9305      	str	r3, [sp, #20]
    b374:	2300      	movs	r3, #0
    b376:	9306      	str	r3, [sp, #24]
    b378:	f001 fe04 	bl	cf84 <__retarget_lock_init_recursive>
    b37c:	002a      	movs	r2, r5
    b37e:	003b      	movs	r3, r7
    b380:	4669      	mov	r1, sp
    b382:	0030      	movs	r0, r6
    b384:	f7fe fc6e 	bl	9c64 <_vfprintf_r>
    b388:	1e05      	subs	r5, r0, #0
    b38a:	db05      	blt.n	b398 <__sbprintf+0x5c>
    b38c:	4669      	mov	r1, sp
    b38e:	0030      	movs	r0, r6
    b390:	f001 fa30 	bl	c7f4 <_fflush_r>
    b394:	2800      	cmp	r0, #0
    b396:	d10e      	bne.n	b3b6 <__sbprintf+0x7a>
    b398:	466b      	mov	r3, sp
    b39a:	899b      	ldrh	r3, [r3, #12]
    b39c:	065b      	lsls	r3, r3, #25
    b39e:	d503      	bpl.n	b3a8 <__sbprintf+0x6c>
    b3a0:	2240      	movs	r2, #64	; 0x40
    b3a2:	89a3      	ldrh	r3, [r4, #12]
    b3a4:	4313      	orrs	r3, r2
    b3a6:	81a3      	strh	r3, [r4, #12]
    b3a8:	9816      	ldr	r0, [sp, #88]	; 0x58
    b3aa:	f001 fded 	bl	cf88 <__retarget_lock_close_recursive>
    b3ae:	0028      	movs	r0, r5
    b3b0:	4b03      	ldr	r3, [pc, #12]	; (b3c0 <__sbprintf+0x84>)
    b3b2:	449d      	add	sp, r3
    b3b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b3b6:	2501      	movs	r5, #1
    b3b8:	426d      	negs	r5, r5
    b3ba:	e7ed      	b.n	b398 <__sbprintf+0x5c>
    b3bc:	fffffb94 	.word	0xfffffb94
    b3c0:	0000046c 	.word	0x0000046c

0000b3c4 <__swbuf_r>:
    b3c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b3c6:	0006      	movs	r6, r0
    b3c8:	000d      	movs	r5, r1
    b3ca:	0014      	movs	r4, r2
    b3cc:	2800      	cmp	r0, #0
    b3ce:	d002      	beq.n	b3d6 <__swbuf_r+0x12>
    b3d0:	6b83      	ldr	r3, [r0, #56]	; 0x38
    b3d2:	2b00      	cmp	r3, #0
    b3d4:	d04e      	beq.n	b474 <__swbuf_r+0xb0>
    b3d6:	69a3      	ldr	r3, [r4, #24]
    b3d8:	60a3      	str	r3, [r4, #8]
    b3da:	230c      	movs	r3, #12
    b3dc:	5ee0      	ldrsh	r0, [r4, r3]
    b3de:	b281      	uxth	r1, r0
    b3e0:	070b      	lsls	r3, r1, #28
    b3e2:	d53c      	bpl.n	b45e <__swbuf_r+0x9a>
    b3e4:	6923      	ldr	r3, [r4, #16]
    b3e6:	2b00      	cmp	r3, #0
    b3e8:	d039      	beq.n	b45e <__swbuf_r+0x9a>
    b3ea:	22ff      	movs	r2, #255	; 0xff
    b3ec:	b2ef      	uxtb	r7, r5
    b3ee:	4015      	ands	r5, r2
    b3f0:	2280      	movs	r2, #128	; 0x80
    b3f2:	0192      	lsls	r2, r2, #6
    b3f4:	4211      	tst	r1, r2
    b3f6:	d015      	beq.n	b424 <__swbuf_r+0x60>
    b3f8:	6822      	ldr	r2, [r4, #0]
    b3fa:	6961      	ldr	r1, [r4, #20]
    b3fc:	1ad3      	subs	r3, r2, r3
    b3fe:	428b      	cmp	r3, r1
    b400:	da1b      	bge.n	b43a <__swbuf_r+0x76>
    b402:	3301      	adds	r3, #1
    b404:	68a1      	ldr	r1, [r4, #8]
    b406:	3901      	subs	r1, #1
    b408:	60a1      	str	r1, [r4, #8]
    b40a:	1c51      	adds	r1, r2, #1
    b40c:	6021      	str	r1, [r4, #0]
    b40e:	7017      	strb	r7, [r2, #0]
    b410:	6962      	ldr	r2, [r4, #20]
    b412:	429a      	cmp	r2, r3
    b414:	d01a      	beq.n	b44c <__swbuf_r+0x88>
    b416:	89a3      	ldrh	r3, [r4, #12]
    b418:	07db      	lsls	r3, r3, #31
    b41a:	d501      	bpl.n	b420 <__swbuf_r+0x5c>
    b41c:	2d0a      	cmp	r5, #10
    b41e:	d015      	beq.n	b44c <__swbuf_r+0x88>
    b420:	0028      	movs	r0, r5
    b422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    b424:	4302      	orrs	r2, r0
    b426:	6e61      	ldr	r1, [r4, #100]	; 0x64
    b428:	81a2      	strh	r2, [r4, #12]
    b42a:	4a14      	ldr	r2, [pc, #80]	; (b47c <__swbuf_r+0xb8>)
    b42c:	400a      	ands	r2, r1
    b42e:	6662      	str	r2, [r4, #100]	; 0x64
    b430:	6961      	ldr	r1, [r4, #20]
    b432:	6822      	ldr	r2, [r4, #0]
    b434:	1ad3      	subs	r3, r2, r3
    b436:	428b      	cmp	r3, r1
    b438:	dbe3      	blt.n	b402 <__swbuf_r+0x3e>
    b43a:	0021      	movs	r1, r4
    b43c:	0030      	movs	r0, r6
    b43e:	f001 f9d9 	bl	c7f4 <_fflush_r>
    b442:	2800      	cmp	r0, #0
    b444:	d108      	bne.n	b458 <__swbuf_r+0x94>
    b446:	6822      	ldr	r2, [r4, #0]
    b448:	2301      	movs	r3, #1
    b44a:	e7db      	b.n	b404 <__swbuf_r+0x40>
    b44c:	0021      	movs	r1, r4
    b44e:	0030      	movs	r0, r6
    b450:	f001 f9d0 	bl	c7f4 <_fflush_r>
    b454:	2800      	cmp	r0, #0
    b456:	d0e3      	beq.n	b420 <__swbuf_r+0x5c>
    b458:	2501      	movs	r5, #1
    b45a:	426d      	negs	r5, r5
    b45c:	e7e0      	b.n	b420 <__swbuf_r+0x5c>
    b45e:	0021      	movs	r1, r4
    b460:	0030      	movs	r0, r6
    b462:	f000 f821 	bl	b4a8 <__swsetup_r>
    b466:	2800      	cmp	r0, #0
    b468:	d1f6      	bne.n	b458 <__swbuf_r+0x94>
    b46a:	230c      	movs	r3, #12
    b46c:	5ee0      	ldrsh	r0, [r4, r3]
    b46e:	6923      	ldr	r3, [r4, #16]
    b470:	b281      	uxth	r1, r0
    b472:	e7ba      	b.n	b3ea <__swbuf_r+0x26>
    b474:	f001 fa18 	bl	c8a8 <__sinit>
    b478:	e7ad      	b.n	b3d6 <__swbuf_r+0x12>
    b47a:	46c0      	nop			; (mov r8, r8)
    b47c:	ffffdfff 	.word	0xffffdfff

0000b480 <_write_r>:
    b480:	b570      	push	{r4, r5, r6, lr}
    b482:	0005      	movs	r5, r0
    b484:	0008      	movs	r0, r1
    b486:	0011      	movs	r1, r2
    b488:	2200      	movs	r2, #0
    b48a:	4c06      	ldr	r4, [pc, #24]	; (b4a4 <_write_r+0x24>)
    b48c:	6022      	str	r2, [r4, #0]
    b48e:	001a      	movs	r2, r3
    b490:	f7f7 f9c0 	bl	2814 <_write>
    b494:	1c43      	adds	r3, r0, #1
    b496:	d000      	beq.n	b49a <_write_r+0x1a>
    b498:	bd70      	pop	{r4, r5, r6, pc}
    b49a:	6823      	ldr	r3, [r4, #0]
    b49c:	2b00      	cmp	r3, #0
    b49e:	d0fb      	beq.n	b498 <_write_r+0x18>
    b4a0:	602b      	str	r3, [r5, #0]
    b4a2:	e7f9      	b.n	b498 <_write_r+0x18>
    b4a4:	20001678 	.word	0x20001678

0000b4a8 <__swsetup_r>:
    b4a8:	4b33      	ldr	r3, [pc, #204]	; (b578 <__swsetup_r+0xd0>)
    b4aa:	b570      	push	{r4, r5, r6, lr}
    b4ac:	0005      	movs	r5, r0
    b4ae:	6818      	ldr	r0, [r3, #0]
    b4b0:	000c      	movs	r4, r1
    b4b2:	2800      	cmp	r0, #0
    b4b4:	d002      	beq.n	b4bc <__swsetup_r+0x14>
    b4b6:	6b83      	ldr	r3, [r0, #56]	; 0x38
    b4b8:	2b00      	cmp	r3, #0
    b4ba:	d03c      	beq.n	b536 <__swsetup_r+0x8e>
    b4bc:	230c      	movs	r3, #12
    b4be:	5ee2      	ldrsh	r2, [r4, r3]
    b4c0:	b293      	uxth	r3, r2
    b4c2:	0719      	lsls	r1, r3, #28
    b4c4:	d50d      	bpl.n	b4e2 <__swsetup_r+0x3a>
    b4c6:	6921      	ldr	r1, [r4, #16]
    b4c8:	2900      	cmp	r1, #0
    b4ca:	d015      	beq.n	b4f8 <__swsetup_r+0x50>
    b4cc:	07da      	lsls	r2, r3, #31
    b4ce:	d521      	bpl.n	b514 <__swsetup_r+0x6c>
    b4d0:	2300      	movs	r3, #0
    b4d2:	60a3      	str	r3, [r4, #8]
    b4d4:	6963      	ldr	r3, [r4, #20]
    b4d6:	2000      	movs	r0, #0
    b4d8:	425b      	negs	r3, r3
    b4da:	61a3      	str	r3, [r4, #24]
    b4dc:	2900      	cmp	r1, #0
    b4de:	d021      	beq.n	b524 <__swsetup_r+0x7c>
    b4e0:	bd70      	pop	{r4, r5, r6, pc}
    b4e2:	06d9      	lsls	r1, r3, #27
    b4e4:	d53f      	bpl.n	b566 <__swsetup_r+0xbe>
    b4e6:	075b      	lsls	r3, r3, #29
    b4e8:	d428      	bmi.n	b53c <__swsetup_r+0x94>
    b4ea:	6921      	ldr	r1, [r4, #16]
    b4ec:	2308      	movs	r3, #8
    b4ee:	4313      	orrs	r3, r2
    b4f0:	81a3      	strh	r3, [r4, #12]
    b4f2:	b29b      	uxth	r3, r3
    b4f4:	2900      	cmp	r1, #0
    b4f6:	d1e9      	bne.n	b4cc <__swsetup_r+0x24>
    b4f8:	22a0      	movs	r2, #160	; 0xa0
    b4fa:	2080      	movs	r0, #128	; 0x80
    b4fc:	0092      	lsls	r2, r2, #2
    b4fe:	0080      	lsls	r0, r0, #2
    b500:	401a      	ands	r2, r3
    b502:	4282      	cmp	r2, r0
    b504:	d0e2      	beq.n	b4cc <__swsetup_r+0x24>
    b506:	0021      	movs	r1, r4
    b508:	0028      	movs	r0, r5
    b50a:	f001 fd87 	bl	d01c <__smakebuf_r>
    b50e:	89a3      	ldrh	r3, [r4, #12]
    b510:	6921      	ldr	r1, [r4, #16]
    b512:	e7db      	b.n	b4cc <__swsetup_r+0x24>
    b514:	2200      	movs	r2, #0
    b516:	079b      	lsls	r3, r3, #30
    b518:	d400      	bmi.n	b51c <__swsetup_r+0x74>
    b51a:	6962      	ldr	r2, [r4, #20]
    b51c:	60a2      	str	r2, [r4, #8]
    b51e:	2000      	movs	r0, #0
    b520:	2900      	cmp	r1, #0
    b522:	d1dd      	bne.n	b4e0 <__swsetup_r+0x38>
    b524:	220c      	movs	r2, #12
    b526:	5ea3      	ldrsh	r3, [r4, r2]
    b528:	061a      	lsls	r2, r3, #24
    b52a:	d5d9      	bpl.n	b4e0 <__swsetup_r+0x38>
    b52c:	2240      	movs	r2, #64	; 0x40
    b52e:	4313      	orrs	r3, r2
    b530:	81a3      	strh	r3, [r4, #12]
    b532:	3801      	subs	r0, #1
    b534:	e7d4      	b.n	b4e0 <__swsetup_r+0x38>
    b536:	f001 f9b7 	bl	c8a8 <__sinit>
    b53a:	e7bf      	b.n	b4bc <__swsetup_r+0x14>
    b53c:	6b21      	ldr	r1, [r4, #48]	; 0x30
    b53e:	2900      	cmp	r1, #0
    b540:	d00a      	beq.n	b558 <__swsetup_r+0xb0>
    b542:	0023      	movs	r3, r4
    b544:	3340      	adds	r3, #64	; 0x40
    b546:	4299      	cmp	r1, r3
    b548:	d004      	beq.n	b554 <__swsetup_r+0xac>
    b54a:	0028      	movs	r0, r5
    b54c:	f001 fa56 	bl	c9fc <_free_r>
    b550:	230c      	movs	r3, #12
    b552:	5ee2      	ldrsh	r2, [r4, r3]
    b554:	2300      	movs	r3, #0
    b556:	6323      	str	r3, [r4, #48]	; 0x30
    b558:	2324      	movs	r3, #36	; 0x24
    b55a:	439a      	bics	r2, r3
    b55c:	2300      	movs	r3, #0
    b55e:	6921      	ldr	r1, [r4, #16]
    b560:	6063      	str	r3, [r4, #4]
    b562:	6021      	str	r1, [r4, #0]
    b564:	e7c2      	b.n	b4ec <__swsetup_r+0x44>
    b566:	2309      	movs	r3, #9
    b568:	602b      	str	r3, [r5, #0]
    b56a:	2340      	movs	r3, #64	; 0x40
    b56c:	2001      	movs	r0, #1
    b56e:	431a      	orrs	r2, r3
    b570:	81a2      	strh	r2, [r4, #12]
    b572:	4240      	negs	r0, r0
    b574:	e7b4      	b.n	b4e0 <__swsetup_r+0x38>
    b576:	46c0      	nop			; (mov r8, r8)
    b578:	2000006c 	.word	0x2000006c

0000b57c <register_fini>:
    b57c:	4b03      	ldr	r3, [pc, #12]	; (b58c <register_fini+0x10>)
    b57e:	b510      	push	{r4, lr}
    b580:	2b00      	cmp	r3, #0
    b582:	d002      	beq.n	b58a <register_fini+0xe>
    b584:	4802      	ldr	r0, [pc, #8]	; (b590 <register_fini+0x14>)
    b586:	f000 f805 	bl	b594 <atexit>
    b58a:	bd10      	pop	{r4, pc}
    b58c:	00000000 	.word	0x00000000
    b590:	0000c929 	.word	0x0000c929

0000b594 <atexit>:
    b594:	b510      	push	{r4, lr}
    b596:	0001      	movs	r1, r0
    b598:	2300      	movs	r3, #0
    b59a:	2200      	movs	r2, #0
    b59c:	2000      	movs	r0, #0
    b59e:	f004 fbd3 	bl	fd48 <__register_exitproc>
    b5a2:	bd10      	pop	{r4, pc}

0000b5a4 <_close_r>:
    b5a4:	2300      	movs	r3, #0
    b5a6:	b570      	push	{r4, r5, r6, lr}
    b5a8:	4c06      	ldr	r4, [pc, #24]	; (b5c4 <_close_r+0x20>)
    b5aa:	0005      	movs	r5, r0
    b5ac:	0008      	movs	r0, r1
    b5ae:	6023      	str	r3, [r4, #0]
    b5b0:	f7f5 fb36 	bl	c20 <_close>
    b5b4:	1c43      	adds	r3, r0, #1
    b5b6:	d000      	beq.n	b5ba <_close_r+0x16>
    b5b8:	bd70      	pop	{r4, r5, r6, pc}
    b5ba:	6823      	ldr	r3, [r4, #0]
    b5bc:	2b00      	cmp	r3, #0
    b5be:	d0fb      	beq.n	b5b8 <_close_r+0x14>
    b5c0:	602b      	str	r3, [r5, #0]
    b5c2:	e7f9      	b.n	b5b8 <_close_r+0x14>
    b5c4:	20001678 	.word	0x20001678

0000b5c8 <quorem>:
    b5c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    b5ca:	4645      	mov	r5, r8
    b5cc:	4680      	mov	r8, r0
    b5ce:	46de      	mov	lr, fp
    b5d0:	4657      	mov	r7, sl
    b5d2:	464e      	mov	r6, r9
    b5d4:	4642      	mov	r2, r8
    b5d6:	b5e0      	push	{r5, r6, r7, lr}
    b5d8:	690c      	ldr	r4, [r1, #16]
    b5da:	6912      	ldr	r2, [r2, #16]
    b5dc:	b085      	sub	sp, #20
    b5de:	000b      	movs	r3, r1
    b5e0:	9102      	str	r1, [sp, #8]
    b5e2:	2000      	movs	r0, #0
    b5e4:	4294      	cmp	r4, r2
    b5e6:	dd00      	ble.n	b5ea <quorem+0x22>
    b5e8:	e090      	b.n	b70c <quorem+0x144>
    b5ea:	2214      	movs	r2, #20
    b5ec:	4694      	mov	ip, r2
    b5ee:	4463      	add	r3, ip
    b5f0:	4699      	mov	r9, r3
    b5f2:	464a      	mov	r2, r9
    b5f4:	3c01      	subs	r4, #1
    b5f6:	00a3      	lsls	r3, r4, #2
    b5f8:	18d6      	adds	r6, r2, r3
    b5fa:	2214      	movs	r2, #20
    b5fc:	4442      	add	r2, r8
    b5fe:	4693      	mov	fp, r2
    b600:	449b      	add	fp, r3
    b602:	6833      	ldr	r3, [r6, #0]
    b604:	0015      	movs	r5, r2
    b606:	1c59      	adds	r1, r3, #1
    b608:	465b      	mov	r3, fp
    b60a:	6818      	ldr	r0, [r3, #0]
    b60c:	9201      	str	r2, [sp, #4]
    b60e:	f7f9 f857 	bl	46c0 <__udivsi3>
    b612:	1e03      	subs	r3, r0, #0
    b614:	9000      	str	r0, [sp, #0]
    b616:	d042      	beq.n	b69e <quorem+0xd6>
    b618:	0029      	movs	r1, r5
    b61a:	2700      	movs	r7, #0
    b61c:	464d      	mov	r5, r9
    b61e:	2000      	movs	r0, #0
    b620:	46b1      	mov	r9, r6
    b622:	46a2      	mov	sl, r4
    b624:	003e      	movs	r6, r7
    b626:	0004      	movs	r4, r0
    b628:	469c      	mov	ip, r3
    b62a:	002f      	movs	r7, r5
    b62c:	0008      	movs	r0, r1
    b62e:	9503      	str	r5, [sp, #12]
    b630:	4663      	mov	r3, ip
    b632:	cf04      	ldmia	r7!, {r2}
    b634:	0415      	lsls	r5, r2, #16
    b636:	0c2d      	lsrs	r5, r5, #16
    b638:	435d      	muls	r5, r3
    b63a:	0c12      	lsrs	r2, r2, #16
    b63c:	435a      	muls	r2, r3
    b63e:	19ad      	adds	r5, r5, r6
    b640:	0c2b      	lsrs	r3, r5, #16
    b642:	18d2      	adds	r2, r2, r3
    b644:	6803      	ldr	r3, [r0, #0]
    b646:	042d      	lsls	r5, r5, #16
    b648:	0419      	lsls	r1, r3, #16
    b64a:	0c09      	lsrs	r1, r1, #16
    b64c:	1909      	adds	r1, r1, r4
    b64e:	0c16      	lsrs	r6, r2, #16
    b650:	0c2d      	lsrs	r5, r5, #16
    b652:	0412      	lsls	r2, r2, #16
    b654:	1b49      	subs	r1, r1, r5
    b656:	0c12      	lsrs	r2, r2, #16
    b658:	0c1b      	lsrs	r3, r3, #16
    b65a:	1a9b      	subs	r3, r3, r2
    b65c:	140a      	asrs	r2, r1, #16
    b65e:	189b      	adds	r3, r3, r2
    b660:	0409      	lsls	r1, r1, #16
    b662:	141c      	asrs	r4, r3, #16
    b664:	0c09      	lsrs	r1, r1, #16
    b666:	041b      	lsls	r3, r3, #16
    b668:	4319      	orrs	r1, r3
    b66a:	c002      	stmia	r0!, {r1}
    b66c:	45b9      	cmp	r9, r7
    b66e:	d2df      	bcs.n	b630 <quorem+0x68>
    b670:	9b03      	ldr	r3, [sp, #12]
    b672:	464e      	mov	r6, r9
    b674:	4699      	mov	r9, r3
    b676:	465b      	mov	r3, fp
    b678:	681b      	ldr	r3, [r3, #0]
    b67a:	4654      	mov	r4, sl
    b67c:	2b00      	cmp	r3, #0
    b67e:	d10e      	bne.n	b69e <quorem+0xd6>
    b680:	465b      	mov	r3, fp
    b682:	9a01      	ldr	r2, [sp, #4]
    b684:	3b04      	subs	r3, #4
    b686:	429a      	cmp	r2, r3
    b688:	d304      	bcc.n	b694 <quorem+0xcc>
    b68a:	e006      	b.n	b69a <quorem+0xd2>
    b68c:	3b04      	subs	r3, #4
    b68e:	3c01      	subs	r4, #1
    b690:	429a      	cmp	r2, r3
    b692:	d202      	bcs.n	b69a <quorem+0xd2>
    b694:	6819      	ldr	r1, [r3, #0]
    b696:	2900      	cmp	r1, #0
    b698:	d0f8      	beq.n	b68c <quorem+0xc4>
    b69a:	4643      	mov	r3, r8
    b69c:	611c      	str	r4, [r3, #16]
    b69e:	9902      	ldr	r1, [sp, #8]
    b6a0:	4640      	mov	r0, r8
    b6a2:	f002 fb1d 	bl	dce0 <__mcmp>
    b6a6:	2800      	cmp	r0, #0
    b6a8:	db2f      	blt.n	b70a <quorem+0x142>
    b6aa:	464f      	mov	r7, r9
    b6ac:	2000      	movs	r0, #0
    b6ae:	9b00      	ldr	r3, [sp, #0]
    b6b0:	9d01      	ldr	r5, [sp, #4]
    b6b2:	3301      	adds	r3, #1
    b6b4:	9300      	str	r3, [sp, #0]
    b6b6:	682b      	ldr	r3, [r5, #0]
    b6b8:	cf02      	ldmia	r7!, {r1}
    b6ba:	041a      	lsls	r2, r3, #16
    b6bc:	0c12      	lsrs	r2, r2, #16
    b6be:	1810      	adds	r0, r2, r0
    b6c0:	040a      	lsls	r2, r1, #16
    b6c2:	0c12      	lsrs	r2, r2, #16
    b6c4:	1a82      	subs	r2, r0, r2
    b6c6:	0c09      	lsrs	r1, r1, #16
    b6c8:	0c1b      	lsrs	r3, r3, #16
    b6ca:	1a5b      	subs	r3, r3, r1
    b6cc:	1411      	asrs	r1, r2, #16
    b6ce:	185b      	adds	r3, r3, r1
    b6d0:	0412      	lsls	r2, r2, #16
    b6d2:	1418      	asrs	r0, r3, #16
    b6d4:	0c12      	lsrs	r2, r2, #16
    b6d6:	041b      	lsls	r3, r3, #16
    b6d8:	4313      	orrs	r3, r2
    b6da:	c508      	stmia	r5!, {r3}
    b6dc:	42be      	cmp	r6, r7
    b6de:	d2ea      	bcs.n	b6b6 <quorem+0xee>
    b6e0:	9901      	ldr	r1, [sp, #4]
    b6e2:	00a3      	lsls	r3, r4, #2
    b6e4:	468c      	mov	ip, r1
    b6e6:	4463      	add	r3, ip
    b6e8:	681a      	ldr	r2, [r3, #0]
    b6ea:	2a00      	cmp	r2, #0
    b6ec:	d10d      	bne.n	b70a <quorem+0x142>
    b6ee:	3b04      	subs	r3, #4
    b6f0:	000a      	movs	r2, r1
    b6f2:	4299      	cmp	r1, r3
    b6f4:	d304      	bcc.n	b700 <quorem+0x138>
    b6f6:	e006      	b.n	b706 <quorem+0x13e>
    b6f8:	3b04      	subs	r3, #4
    b6fa:	3c01      	subs	r4, #1
    b6fc:	429a      	cmp	r2, r3
    b6fe:	d202      	bcs.n	b706 <quorem+0x13e>
    b700:	6819      	ldr	r1, [r3, #0]
    b702:	2900      	cmp	r1, #0
    b704:	d0f8      	beq.n	b6f8 <quorem+0x130>
    b706:	4643      	mov	r3, r8
    b708:	611c      	str	r4, [r3, #16]
    b70a:	9800      	ldr	r0, [sp, #0]
    b70c:	b005      	add	sp, #20
    b70e:	bc3c      	pop	{r2, r3, r4, r5}
    b710:	4690      	mov	r8, r2
    b712:	4699      	mov	r9, r3
    b714:	46a2      	mov	sl, r4
    b716:	46ab      	mov	fp, r5
    b718:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b71a:	46c0      	nop			; (mov r8, r8)

0000b71c <_dtoa_r>:
    b71c:	b5f0      	push	{r4, r5, r6, r7, lr}
    b71e:	4657      	mov	r7, sl
    b720:	464e      	mov	r6, r9
    b722:	4645      	mov	r5, r8
    b724:	46de      	mov	lr, fp
    b726:	b5e0      	push	{r5, r6, r7, lr}
    b728:	6c01      	ldr	r1, [r0, #64]	; 0x40
    b72a:	b099      	sub	sp, #100	; 0x64
    b72c:	4682      	mov	sl, r0
    b72e:	001d      	movs	r5, r3
    b730:	0016      	movs	r6, r2
    b732:	001f      	movs	r7, r3
    b734:	2900      	cmp	r1, #0
    b736:	d009      	beq.n	b74c <_dtoa_r+0x30>
    b738:	2301      	movs	r3, #1
    b73a:	6c42      	ldr	r2, [r0, #68]	; 0x44
    b73c:	4093      	lsls	r3, r2
    b73e:	604a      	str	r2, [r1, #4]
    b740:	608b      	str	r3, [r1, #8]
    b742:	f002 f877 	bl	d834 <_Bfree>
    b746:	2300      	movs	r3, #0
    b748:	4652      	mov	r2, sl
    b74a:	6413      	str	r3, [r2, #64]	; 0x40
    b74c:	46b8      	mov	r8, r7
    b74e:	2f00      	cmp	r7, #0
    b750:	db37      	blt.n	b7c2 <_dtoa_r+0xa6>
    b752:	2300      	movs	r3, #0
    b754:	9a25      	ldr	r2, [sp, #148]	; 0x94
    b756:	6013      	str	r3, [r2, #0]
    b758:	4642      	mov	r2, r8
    b75a:	4bd6      	ldr	r3, [pc, #856]	; (bab4 <_dtoa_r+0x398>)
    b75c:	401a      	ands	r2, r3
    b75e:	429a      	cmp	r2, r3
    b760:	d018      	beq.n	b794 <_dtoa_r+0x78>
    b762:	2200      	movs	r2, #0
    b764:	2300      	movs	r3, #0
    b766:	0030      	movs	r0, r6
    b768:	0039      	movs	r1, r7
    b76a:	f7fb f8db 	bl	6924 <__aeabi_dcmpeq>
    b76e:	2800      	cmp	r0, #0
    b770:	d02f      	beq.n	b7d2 <_dtoa_r+0xb6>
    b772:	2301      	movs	r3, #1
    b774:	9a24      	ldr	r2, [sp, #144]	; 0x90
    b776:	6013      	str	r3, [r2, #0]
    b778:	9b26      	ldr	r3, [sp, #152]	; 0x98
    b77a:	2b00      	cmp	r3, #0
    b77c:	d100      	bne.n	b780 <_dtoa_r+0x64>
    b77e:	e22a      	b.n	bbd6 <_dtoa_r+0x4ba>
    b780:	48cd      	ldr	r0, [pc, #820]	; (bab8 <_dtoa_r+0x39c>)
    b782:	6018      	str	r0, [r3, #0]
    b784:	3801      	subs	r0, #1
    b786:	b019      	add	sp, #100	; 0x64
    b788:	bc3c      	pop	{r2, r3, r4, r5}
    b78a:	4690      	mov	r8, r2
    b78c:	4699      	mov	r9, r3
    b78e:	46a2      	mov	sl, r4
    b790:	46ab      	mov	fp, r5
    b792:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b794:	4bc9      	ldr	r3, [pc, #804]	; (babc <_dtoa_r+0x3a0>)
    b796:	9a24      	ldr	r2, [sp, #144]	; 0x90
    b798:	6013      	str	r3, [r2, #0]
    b79a:	2e00      	cmp	r6, #0
    b79c:	d10b      	bne.n	b7b6 <_dtoa_r+0x9a>
    b79e:	4643      	mov	r3, r8
    b7a0:	0318      	lsls	r0, r3, #12
    b7a2:	d108      	bne.n	b7b6 <_dtoa_r+0x9a>
    b7a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
    b7a6:	48c6      	ldr	r0, [pc, #792]	; (bac0 <_dtoa_r+0x3a4>)
    b7a8:	2b00      	cmp	r3, #0
    b7aa:	d0ec      	beq.n	b786 <_dtoa_r+0x6a>
    b7ac:	0003      	movs	r3, r0
    b7ae:	3308      	adds	r3, #8
    b7b0:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b7b2:	6013      	str	r3, [r2, #0]
    b7b4:	e7e7      	b.n	b786 <_dtoa_r+0x6a>
    b7b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
    b7b8:	48c2      	ldr	r0, [pc, #776]	; (bac4 <_dtoa_r+0x3a8>)
    b7ba:	2b00      	cmp	r3, #0
    b7bc:	d0e3      	beq.n	b786 <_dtoa_r+0x6a>
    b7be:	1cc3      	adds	r3, r0, #3
    b7c0:	e7f6      	b.n	b7b0 <_dtoa_r+0x94>
    b7c2:	2301      	movs	r3, #1
    b7c4:	9a25      	ldr	r2, [sp, #148]	; 0x94
    b7c6:	0068      	lsls	r0, r5, #1
    b7c8:	6013      	str	r3, [r2, #0]
    b7ca:	0843      	lsrs	r3, r0, #1
    b7cc:	4698      	mov	r8, r3
    b7ce:	001f      	movs	r7, r3
    b7d0:	e7c2      	b.n	b758 <_dtoa_r+0x3c>
    b7d2:	ab16      	add	r3, sp, #88	; 0x58
    b7d4:	9301      	str	r3, [sp, #4]
    b7d6:	ab17      	add	r3, sp, #92	; 0x5c
    b7d8:	9300      	str	r3, [sp, #0]
    b7da:	0032      	movs	r2, r6
    b7dc:	003b      	movs	r3, r7
    b7de:	4650      	mov	r0, sl
    b7e0:	f002 fbc6 	bl	df70 <__d2b>
    b7e4:	4643      	mov	r3, r8
    b7e6:	4683      	mov	fp, r0
    b7e8:	0d1a      	lsrs	r2, r3, #20
    b7ea:	d100      	bne.n	b7ee <_dtoa_r+0xd2>
    b7ec:	e1d6      	b.n	bb9c <_dtoa_r+0x480>
    b7ee:	033b      	lsls	r3, r7, #12
    b7f0:	4cb5      	ldr	r4, [pc, #724]	; (bac8 <_dtoa_r+0x3ac>)
    b7f2:	0b1b      	lsrs	r3, r3, #12
    b7f4:	431c      	orrs	r4, r3
    b7f6:	4bb5      	ldr	r3, [pc, #724]	; (bacc <_dtoa_r+0x3b0>)
    b7f8:	0030      	movs	r0, r6
    b7fa:	4698      	mov	r8, r3
    b7fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
    b7fe:	0021      	movs	r1, r4
    b800:	4699      	mov	r9, r3
    b802:	2300      	movs	r3, #0
    b804:	4490      	add	r8, r2
    b806:	930f      	str	r3, [sp, #60]	; 0x3c
    b808:	2200      	movs	r2, #0
    b80a:	4bb1      	ldr	r3, [pc, #708]	; (bad0 <_dtoa_r+0x3b4>)
    b80c:	f7fa fbda 	bl	5fc4 <__aeabi_dsub>
    b810:	4ab0      	ldr	r2, [pc, #704]	; (bad4 <_dtoa_r+0x3b8>)
    b812:	4bb1      	ldr	r3, [pc, #708]	; (bad8 <_dtoa_r+0x3bc>)
    b814:	f7fa f956 	bl	5ac4 <__aeabi_dmul>
    b818:	4ab0      	ldr	r2, [pc, #704]	; (badc <_dtoa_r+0x3c0>)
    b81a:	4bb1      	ldr	r3, [pc, #708]	; (bae0 <_dtoa_r+0x3c4>)
    b81c:	f005 f888 	bl	10930 <__aeabi_dadd>
    b820:	0004      	movs	r4, r0
    b822:	4640      	mov	r0, r8
    b824:	000d      	movs	r5, r1
    b826:	f7fa ff17 	bl	6658 <__aeabi_i2d>
    b82a:	4aae      	ldr	r2, [pc, #696]	; (bae4 <_dtoa_r+0x3c8>)
    b82c:	4bae      	ldr	r3, [pc, #696]	; (bae8 <_dtoa_r+0x3cc>)
    b82e:	f7fa f949 	bl	5ac4 <__aeabi_dmul>
    b832:	0002      	movs	r2, r0
    b834:	000b      	movs	r3, r1
    b836:	0020      	movs	r0, r4
    b838:	0029      	movs	r1, r5
    b83a:	f005 f879 	bl	10930 <__aeabi_dadd>
    b83e:	0004      	movs	r4, r0
    b840:	000d      	movs	r5, r1
    b842:	f7fa fed5 	bl	65f0 <__aeabi_d2iz>
    b846:	2200      	movs	r2, #0
    b848:	9003      	str	r0, [sp, #12]
    b84a:	2300      	movs	r3, #0
    b84c:	0020      	movs	r0, r4
    b84e:	0029      	movs	r1, r5
    b850:	f7fb f86e 	bl	6930 <__aeabi_dcmplt>
    b854:	2800      	cmp	r0, #0
    b856:	d000      	beq.n	b85a <_dtoa_r+0x13e>
    b858:	e2b1      	b.n	bdbe <_dtoa_r+0x6a2>
    b85a:	2301      	movs	r3, #1
    b85c:	9c03      	ldr	r4, [sp, #12]
    b85e:	930c      	str	r3, [sp, #48]	; 0x30
    b860:	2c16      	cmp	r4, #22
    b862:	d810      	bhi.n	b886 <_dtoa_r+0x16a>
    b864:	49a1      	ldr	r1, [pc, #644]	; (baec <_dtoa_r+0x3d0>)
    b866:	00e3      	lsls	r3, r4, #3
    b868:	18c9      	adds	r1, r1, r3
    b86a:	0032      	movs	r2, r6
    b86c:	6808      	ldr	r0, [r1, #0]
    b86e:	6849      	ldr	r1, [r1, #4]
    b870:	003b      	movs	r3, r7
    b872:	f7fb f871 	bl	6958 <__aeabi_dcmpgt>
    b876:	2800      	cmp	r0, #0
    b878:	d100      	bne.n	b87c <_dtoa_r+0x160>
    b87a:	e31d      	b.n	beb8 <_dtoa_r+0x79c>
    b87c:	0023      	movs	r3, r4
    b87e:	3b01      	subs	r3, #1
    b880:	9303      	str	r3, [sp, #12]
    b882:	2300      	movs	r3, #0
    b884:	930c      	str	r3, [sp, #48]	; 0x30
    b886:	464b      	mov	r3, r9
    b888:	4642      	mov	r2, r8
    b88a:	1a9a      	subs	r2, r3, r2
    b88c:	2300      	movs	r3, #0
    b88e:	9306      	str	r3, [sp, #24]
    b890:	0013      	movs	r3, r2
    b892:	3b01      	subs	r3, #1
    b894:	9304      	str	r3, [sp, #16]
    b896:	d500      	bpl.n	b89a <_dtoa_r+0x17e>
    b898:	e2a1      	b.n	bdde <_dtoa_r+0x6c2>
    b89a:	9b03      	ldr	r3, [sp, #12]
    b89c:	2b00      	cmp	r3, #0
    b89e:	da00      	bge.n	b8a2 <_dtoa_r+0x186>
    b8a0:	e284      	b.n	bdac <_dtoa_r+0x690>
    b8a2:	469c      	mov	ip, r3
    b8a4:	930d      	str	r3, [sp, #52]	; 0x34
    b8a6:	2300      	movs	r3, #0
    b8a8:	9a04      	ldr	r2, [sp, #16]
    b8aa:	4699      	mov	r9, r3
    b8ac:	0011      	movs	r1, r2
    b8ae:	4461      	add	r1, ip
    b8b0:	9104      	str	r1, [sp, #16]
    b8b2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b8b4:	2b09      	cmp	r3, #9
    b8b6:	d900      	bls.n	b8ba <_dtoa_r+0x19e>
    b8b8:	e18f      	b.n	bbda <_dtoa_r+0x4be>
    b8ba:	2401      	movs	r4, #1
    b8bc:	2b05      	cmp	r3, #5
    b8be:	dd02      	ble.n	b8c6 <_dtoa_r+0x1aa>
    b8c0:	2400      	movs	r4, #0
    b8c2:	3b04      	subs	r3, #4
    b8c4:	9322      	str	r3, [sp, #136]	; 0x88
    b8c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b8c8:	2b03      	cmp	r3, #3
    b8ca:	d101      	bne.n	b8d0 <_dtoa_r+0x1b4>
    b8cc:	f000 fcce 	bl	c26c <_dtoa_r+0xb50>
    b8d0:	dc01      	bgt.n	b8d6 <_dtoa_r+0x1ba>
    b8d2:	f000 fc92 	bl	c1fa <_dtoa_r+0xade>
    b8d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b8d8:	2b04      	cmp	r3, #4
    b8da:	d101      	bne.n	b8e0 <_dtoa_r+0x1c4>
    b8dc:	f000 fc40 	bl	c160 <_dtoa_r+0xa44>
    b8e0:	2301      	movs	r3, #1
    b8e2:	930b      	str	r3, [sp, #44]	; 0x2c
    b8e4:	9b22      	ldr	r3, [sp, #136]	; 0x88
    b8e6:	2b05      	cmp	r3, #5
    b8e8:	d001      	beq.n	b8ee <_dtoa_r+0x1d2>
    b8ea:	f000 fc8b 	bl	c204 <_dtoa_r+0xae8>
    b8ee:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    b8f0:	9b03      	ldr	r3, [sp, #12]
    b8f2:	4694      	mov	ip, r2
    b8f4:	4463      	add	r3, ip
    b8f6:	930e      	str	r3, [sp, #56]	; 0x38
    b8f8:	3301      	adds	r3, #1
    b8fa:	9307      	str	r3, [sp, #28]
    b8fc:	1e1d      	subs	r5, r3, #0
    b8fe:	dc01      	bgt.n	b904 <_dtoa_r+0x1e8>
    b900:	f000 fd49 	bl	c396 <_dtoa_r+0xc7a>
    b904:	9b07      	ldr	r3, [sp, #28]
    b906:	4698      	mov	r8, r3
    b908:	2300      	movs	r3, #0
    b90a:	4652      	mov	r2, sl
    b90c:	2100      	movs	r1, #0
    b90e:	6453      	str	r3, [r2, #68]	; 0x44
    b910:	2d17      	cmp	r5, #23
    b912:	d90a      	bls.n	b92a <_dtoa_r+0x20e>
    b914:	2201      	movs	r2, #1
    b916:	3304      	adds	r3, #4
    b918:	005b      	lsls	r3, r3, #1
    b91a:	0018      	movs	r0, r3
    b91c:	3014      	adds	r0, #20
    b91e:	0011      	movs	r1, r2
    b920:	3201      	adds	r2, #1
    b922:	4285      	cmp	r5, r0
    b924:	d2f8      	bcs.n	b918 <_dtoa_r+0x1fc>
    b926:	4653      	mov	r3, sl
    b928:	6459      	str	r1, [r3, #68]	; 0x44
    b92a:	4650      	mov	r0, sl
    b92c:	f001 ff5a 	bl	d7e4 <_Balloc>
    b930:	4653      	mov	r3, sl
    b932:	6418      	str	r0, [r3, #64]	; 0x40
    b934:	4643      	mov	r3, r8
    b936:	900a      	str	r0, [sp, #40]	; 0x28
    b938:	2b0e      	cmp	r3, #14
    b93a:	d900      	bls.n	b93e <_dtoa_r+0x222>
    b93c:	e161      	b.n	bc02 <_dtoa_r+0x4e6>
    b93e:	2c00      	cmp	r4, #0
    b940:	d100      	bne.n	b944 <_dtoa_r+0x228>
    b942:	e15e      	b.n	bc02 <_dtoa_r+0x4e6>
    b944:	9610      	str	r6, [sp, #64]	; 0x40
    b946:	9711      	str	r7, [sp, #68]	; 0x44
    b948:	9e03      	ldr	r6, [sp, #12]
    b94a:	2e00      	cmp	r6, #0
    b94c:	dc01      	bgt.n	b952 <_dtoa_r+0x236>
    b94e:	f000 fd25 	bl	c39c <_dtoa_r+0xc80>
    b952:	0032      	movs	r2, r6
    b954:	210f      	movs	r1, #15
    b956:	4b65      	ldr	r3, [pc, #404]	; (baec <_dtoa_r+0x3d0>)
    b958:	400a      	ands	r2, r1
    b95a:	00d2      	lsls	r2, r2, #3
    b95c:	189b      	adds	r3, r3, r2
    b95e:	1136      	asrs	r6, r6, #4
    b960:	681c      	ldr	r4, [r3, #0]
    b962:	685d      	ldr	r5, [r3, #4]
    b964:	06f3      	lsls	r3, r6, #27
    b966:	d401      	bmi.n	b96c <_dtoa_r+0x250>
    b968:	f000 fcca 	bl	c300 <_dtoa_r+0xbe4>
    b96c:	4b60      	ldr	r3, [pc, #384]	; (baf0 <_dtoa_r+0x3d4>)
    b96e:	400e      	ands	r6, r1
    b970:	6a1a      	ldr	r2, [r3, #32]
    b972:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b974:	9810      	ldr	r0, [sp, #64]	; 0x40
    b976:	9911      	ldr	r1, [sp, #68]	; 0x44
    b978:	f7f9 fd70 	bl	545c <__aeabi_ddiv>
    b97c:	2303      	movs	r3, #3
    b97e:	4698      	mov	r8, r3
    b980:	9008      	str	r0, [sp, #32]
    b982:	9109      	str	r1, [sp, #36]	; 0x24
    b984:	2e00      	cmp	r6, #0
    b986:	d011      	beq.n	b9ac <_dtoa_r+0x290>
    b988:	4f59      	ldr	r7, [pc, #356]	; (baf0 <_dtoa_r+0x3d4>)
    b98a:	2301      	movs	r3, #1
    b98c:	4233      	tst	r3, r6
    b98e:	d009      	beq.n	b9a4 <_dtoa_r+0x288>
    b990:	469c      	mov	ip, r3
    b992:	683a      	ldr	r2, [r7, #0]
    b994:	687b      	ldr	r3, [r7, #4]
    b996:	0020      	movs	r0, r4
    b998:	0029      	movs	r1, r5
    b99a:	44e0      	add	r8, ip
    b99c:	f7fa f892 	bl	5ac4 <__aeabi_dmul>
    b9a0:	0004      	movs	r4, r0
    b9a2:	000d      	movs	r5, r1
    b9a4:	1076      	asrs	r6, r6, #1
    b9a6:	3708      	adds	r7, #8
    b9a8:	2e00      	cmp	r6, #0
    b9aa:	d1ee      	bne.n	b98a <_dtoa_r+0x26e>
    b9ac:	0022      	movs	r2, r4
    b9ae:	9808      	ldr	r0, [sp, #32]
    b9b0:	9909      	ldr	r1, [sp, #36]	; 0x24
    b9b2:	002b      	movs	r3, r5
    b9b4:	f7f9 fd52 	bl	545c <__aeabi_ddiv>
    b9b8:	0006      	movs	r6, r0
    b9ba:	000f      	movs	r7, r1
    b9bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b9be:	2b00      	cmp	r3, #0
    b9c0:	d009      	beq.n	b9d6 <_dtoa_r+0x2ba>
    b9c2:	2200      	movs	r2, #0
    b9c4:	4b40      	ldr	r3, [pc, #256]	; (bac8 <_dtoa_r+0x3ac>)
    b9c6:	0030      	movs	r0, r6
    b9c8:	0039      	movs	r1, r7
    b9ca:	f7fa ffb1 	bl	6930 <__aeabi_dcmplt>
    b9ce:	2800      	cmp	r0, #0
    b9d0:	d001      	beq.n	b9d6 <_dtoa_r+0x2ba>
    b9d2:	f000 fdc2 	bl	c55a <_dtoa_r+0xe3e>
    b9d6:	4640      	mov	r0, r8
    b9d8:	f7fa fe3e 	bl	6658 <__aeabi_i2d>
    b9dc:	0032      	movs	r2, r6
    b9de:	003b      	movs	r3, r7
    b9e0:	f7fa f870 	bl	5ac4 <__aeabi_dmul>
    b9e4:	2200      	movs	r2, #0
    b9e6:	4b43      	ldr	r3, [pc, #268]	; (baf4 <_dtoa_r+0x3d8>)
    b9e8:	f004 ffa2 	bl	10930 <__aeabi_dadd>
    b9ec:	4a42      	ldr	r2, [pc, #264]	; (baf8 <_dtoa_r+0x3dc>)
    b9ee:	000b      	movs	r3, r1
    b9f0:	4694      	mov	ip, r2
    b9f2:	4463      	add	r3, ip
    b9f4:	9008      	str	r0, [sp, #32]
    b9f6:	9109      	str	r1, [sp, #36]	; 0x24
    b9f8:	9309      	str	r3, [sp, #36]	; 0x24
    b9fa:	9b07      	ldr	r3, [sp, #28]
    b9fc:	2b00      	cmp	r3, #0
    b9fe:	d101      	bne.n	ba04 <_dtoa_r+0x2e8>
    ba00:	f000 fc50 	bl	c2a4 <_dtoa_r+0xb88>
    ba04:	9b03      	ldr	r3, [sp, #12]
    ba06:	9313      	str	r3, [sp, #76]	; 0x4c
    ba08:	9b07      	ldr	r3, [sp, #28]
    ba0a:	9312      	str	r3, [sp, #72]	; 0x48
    ba0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ba0e:	2b00      	cmp	r3, #0
    ba10:	d101      	bne.n	ba16 <_dtoa_r+0x2fa>
    ba12:	f000 fd1d 	bl	c450 <_dtoa_r+0xd34>
    ba16:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ba18:	2000      	movs	r0, #0
    ba1a:	1e5a      	subs	r2, r3, #1
    ba1c:	4b33      	ldr	r3, [pc, #204]	; (baec <_dtoa_r+0x3d0>)
    ba1e:	00d2      	lsls	r2, r2, #3
    ba20:	189b      	adds	r3, r3, r2
    ba22:	681a      	ldr	r2, [r3, #0]
    ba24:	685b      	ldr	r3, [r3, #4]
    ba26:	4935      	ldr	r1, [pc, #212]	; (bafc <_dtoa_r+0x3e0>)
    ba28:	f7f9 fd18 	bl	545c <__aeabi_ddiv>
    ba2c:	9a08      	ldr	r2, [sp, #32]
    ba2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ba30:	f7fa fac8 	bl	5fc4 <__aeabi_dsub>
    ba34:	9008      	str	r0, [sp, #32]
    ba36:	9109      	str	r1, [sp, #36]	; 0x24
    ba38:	0039      	movs	r1, r7
    ba3a:	0030      	movs	r0, r6
    ba3c:	f7fa fdd8 	bl	65f0 <__aeabi_d2iz>
    ba40:	0004      	movs	r4, r0
    ba42:	f7fa fe09 	bl	6658 <__aeabi_i2d>
    ba46:	0002      	movs	r2, r0
    ba48:	000b      	movs	r3, r1
    ba4a:	0030      	movs	r0, r6
    ba4c:	0039      	movs	r1, r7
    ba4e:	f7fa fab9 	bl	5fc4 <__aeabi_dsub>
    ba52:	0005      	movs	r5, r0
    ba54:	000e      	movs	r6, r1
    ba56:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ba58:	3430      	adds	r4, #48	; 0x30
    ba5a:	1c51      	adds	r1, r2, #1
    ba5c:	b2e7      	uxtb	r7, r4
    ba5e:	9114      	str	r1, [sp, #80]	; 0x50
    ba60:	7017      	strb	r7, [r2, #0]
    ba62:	0033      	movs	r3, r6
    ba64:	9808      	ldr	r0, [sp, #32]
    ba66:	9909      	ldr	r1, [sp, #36]	; 0x24
    ba68:	002a      	movs	r2, r5
    ba6a:	f7fa ff75 	bl	6958 <__aeabi_dcmpgt>
    ba6e:	2800      	cmp	r0, #0
    ba70:	d001      	beq.n	ba76 <_dtoa_r+0x35a>
    ba72:	f000 fdfe 	bl	c672 <_dtoa_r+0xf56>
    ba76:	002a      	movs	r2, r5
    ba78:	0033      	movs	r3, r6
    ba7a:	2000      	movs	r0, #0
    ba7c:	4912      	ldr	r1, [pc, #72]	; (bac8 <_dtoa_r+0x3ac>)
    ba7e:	f7fa faa1 	bl	5fc4 <__aeabi_dsub>
    ba82:	0002      	movs	r2, r0
    ba84:	000b      	movs	r3, r1
    ba86:	9808      	ldr	r0, [sp, #32]
    ba88:	9909      	ldr	r1, [sp, #36]	; 0x24
    ba8a:	f7fa ff65 	bl	6958 <__aeabi_dcmpgt>
    ba8e:	2800      	cmp	r0, #0
    ba90:	d001      	beq.n	ba96 <_dtoa_r+0x37a>
    ba92:	f000 fde7 	bl	c664 <_dtoa_r+0xf48>
    ba96:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ba98:	2b01      	cmp	r3, #1
    ba9a:	d101      	bne.n	baa0 <_dtoa_r+0x384>
    ba9c:	f000 fc78 	bl	c390 <_dtoa_r+0xc74>
    baa0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    baa2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    baa4:	4694      	mov	ip, r2
    baa6:	4463      	add	r3, ip
    baa8:	4698      	mov	r8, r3
    baaa:	464b      	mov	r3, r9
    baac:	9312      	str	r3, [sp, #72]	; 0x48
    baae:	9b14      	ldr	r3, [sp, #80]	; 0x50
    bab0:	4699      	mov	r9, r3
    bab2:	e038      	b.n	bb26 <_dtoa_r+0x40a>
    bab4:	7ff00000 	.word	0x7ff00000
    bab8:	000139f5 	.word	0x000139f5
    babc:	0000270f 	.word	0x0000270f
    bac0:	00014020 	.word	0x00014020
    bac4:	0001402c 	.word	0x0001402c
    bac8:	3ff00000 	.word	0x3ff00000
    bacc:	fffffc01 	.word	0xfffffc01
    bad0:	3ff80000 	.word	0x3ff80000
    bad4:	636f4361 	.word	0x636f4361
    bad8:	3fd287a7 	.word	0x3fd287a7
    badc:	8b60c8b3 	.word	0x8b60c8b3
    bae0:	3fc68a28 	.word	0x3fc68a28
    bae4:	509f79fb 	.word	0x509f79fb
    bae8:	3fd34413 	.word	0x3fd34413
    baec:	00014068 	.word	0x00014068
    baf0:	00014040 	.word	0x00014040
    baf4:	401c0000 	.word	0x401c0000
    baf8:	fcc00000 	.word	0xfcc00000
    bafc:	3fe00000 	.word	0x3fe00000
    bb00:	002a      	movs	r2, r5
    bb02:	0033      	movs	r3, r6
    bb04:	2000      	movs	r0, #0
    bb06:	49b9      	ldr	r1, [pc, #740]	; (bdec <_dtoa_r+0x6d0>)
    bb08:	f7fa fa5c 	bl	5fc4 <__aeabi_dsub>
    bb0c:	9a08      	ldr	r2, [sp, #32]
    bb0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bb10:	f7fa ff0e 	bl	6930 <__aeabi_dcmplt>
    bb14:	2800      	cmp	r0, #0
    bb16:	d001      	beq.n	bb1c <_dtoa_r+0x400>
    bb18:	f000 fd74 	bl	c604 <_dtoa_r+0xee8>
    bb1c:	46a1      	mov	r9, r4
    bb1e:	4544      	cmp	r4, r8
    bb20:	d101      	bne.n	bb26 <_dtoa_r+0x40a>
    bb22:	f000 fc33 	bl	c38c <_dtoa_r+0xc70>
    bb26:	9808      	ldr	r0, [sp, #32]
    bb28:	9909      	ldr	r1, [sp, #36]	; 0x24
    bb2a:	2200      	movs	r2, #0
    bb2c:	4bb0      	ldr	r3, [pc, #704]	; (bdf0 <_dtoa_r+0x6d4>)
    bb2e:	f7f9 ffc9 	bl	5ac4 <__aeabi_dmul>
    bb32:	2200      	movs	r2, #0
    bb34:	4bae      	ldr	r3, [pc, #696]	; (bdf0 <_dtoa_r+0x6d4>)
    bb36:	9008      	str	r0, [sp, #32]
    bb38:	9109      	str	r1, [sp, #36]	; 0x24
    bb3a:	0028      	movs	r0, r5
    bb3c:	0031      	movs	r1, r6
    bb3e:	f7f9 ffc1 	bl	5ac4 <__aeabi_dmul>
    bb42:	000d      	movs	r5, r1
    bb44:	0004      	movs	r4, r0
    bb46:	f7fa fd53 	bl	65f0 <__aeabi_d2iz>
    bb4a:	0007      	movs	r7, r0
    bb4c:	f7fa fd84 	bl	6658 <__aeabi_i2d>
    bb50:	0002      	movs	r2, r0
    bb52:	000b      	movs	r3, r1
    bb54:	0020      	movs	r0, r4
    bb56:	0029      	movs	r1, r5
    bb58:	f7fa fa34 	bl	5fc4 <__aeabi_dsub>
    bb5c:	464b      	mov	r3, r9
    bb5e:	3730      	adds	r7, #48	; 0x30
    bb60:	b2ff      	uxtb	r7, r7
    bb62:	1c5c      	adds	r4, r3, #1
    bb64:	701f      	strb	r7, [r3, #0]
    bb66:	9a08      	ldr	r2, [sp, #32]
    bb68:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bb6a:	0005      	movs	r5, r0
    bb6c:	000e      	movs	r6, r1
    bb6e:	f7fa fedf 	bl	6930 <__aeabi_dcmplt>
    bb72:	2800      	cmp	r0, #0
    bb74:	d0c4      	beq.n	bb00 <_dtoa_r+0x3e4>
    bb76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    bb78:	9303      	str	r3, [sp, #12]
    bb7a:	4659      	mov	r1, fp
    bb7c:	4650      	mov	r0, sl
    bb7e:	f001 fe59 	bl	d834 <_Bfree>
    bb82:	2300      	movs	r3, #0
    bb84:	7023      	strb	r3, [r4, #0]
    bb86:	9b03      	ldr	r3, [sp, #12]
    bb88:	9a24      	ldr	r2, [sp, #144]	; 0x90
    bb8a:	3301      	adds	r3, #1
    bb8c:	6013      	str	r3, [r2, #0]
    bb8e:	9b26      	ldr	r3, [sp, #152]	; 0x98
    bb90:	2b00      	cmp	r3, #0
    bb92:	d100      	bne.n	bb96 <_dtoa_r+0x47a>
    bb94:	e3a8      	b.n	c2e8 <_dtoa_r+0xbcc>
    bb96:	601c      	str	r4, [r3, #0]
    bb98:	980a      	ldr	r0, [sp, #40]	; 0x28
    bb9a:	e5f4      	b.n	b786 <_dtoa_r+0x6a>
    bb9c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    bb9e:	4699      	mov	r9, r3
    bba0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    bba2:	444b      	add	r3, r9
    bba4:	001c      	movs	r4, r3
    bba6:	4b93      	ldr	r3, [pc, #588]	; (bdf4 <_dtoa_r+0x6d8>)
    bba8:	18e3      	adds	r3, r4, r3
    bbaa:	2b20      	cmp	r3, #32
    bbac:	dc00      	bgt.n	bbb0 <_dtoa_r+0x494>
    bbae:	e17e      	b.n	beae <_dtoa_r+0x792>
    bbb0:	0031      	movs	r1, r6
    bbb2:	4a91      	ldr	r2, [pc, #580]	; (bdf8 <_dtoa_r+0x6dc>)
    bbb4:	4640      	mov	r0, r8
    bbb6:	18a2      	adds	r2, r4, r2
    bbb8:	40d1      	lsrs	r1, r2
    bbba:	000a      	movs	r2, r1
    bbbc:	2140      	movs	r1, #64	; 0x40
    bbbe:	1acb      	subs	r3, r1, r3
    bbc0:	4098      	lsls	r0, r3
    bbc2:	4310      	orrs	r0, r2
    bbc4:	f7fa fd8a 	bl	66dc <__aeabi_ui2d>
    bbc8:	1e63      	subs	r3, r4, #1
    bbca:	4698      	mov	r8, r3
    bbcc:	2301      	movs	r3, #1
    bbce:	4d8b      	ldr	r5, [pc, #556]	; (bdfc <_dtoa_r+0x6e0>)
    bbd0:	930f      	str	r3, [sp, #60]	; 0x3c
    bbd2:	1949      	adds	r1, r1, r5
    bbd4:	e618      	b.n	b808 <_dtoa_r+0xec>
    bbd6:	488a      	ldr	r0, [pc, #552]	; (be00 <_dtoa_r+0x6e4>)
    bbd8:	e5d5      	b.n	b786 <_dtoa_r+0x6a>
    bbda:	2300      	movs	r3, #0
    bbdc:	4652      	mov	r2, sl
    bbde:	2100      	movs	r1, #0
    bbe0:	6453      	str	r3, [r2, #68]	; 0x44
    bbe2:	4650      	mov	r0, sl
    bbe4:	f001 fdfe 	bl	d7e4 <_Balloc>
    bbe8:	4653      	mov	r3, sl
    bbea:	6418      	str	r0, [r3, #64]	; 0x40
    bbec:	2301      	movs	r3, #1
    bbee:	425b      	negs	r3, r3
    bbf0:	9307      	str	r3, [sp, #28]
    bbf2:	930e      	str	r3, [sp, #56]	; 0x38
    bbf4:	3302      	adds	r3, #2
    bbf6:	2200      	movs	r2, #0
    bbf8:	930b      	str	r3, [sp, #44]	; 0x2c
    bbfa:	2300      	movs	r3, #0
    bbfc:	900a      	str	r0, [sp, #40]	; 0x28
    bbfe:	9223      	str	r2, [sp, #140]	; 0x8c
    bc00:	9322      	str	r3, [sp, #136]	; 0x88
    bc02:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    bc04:	2b00      	cmp	r3, #0
    bc06:	da00      	bge.n	bc0a <_dtoa_r+0x4ee>
    bc08:	e0ab      	b.n	bd62 <_dtoa_r+0x646>
    bc0a:	9a03      	ldr	r2, [sp, #12]
    bc0c:	2a0e      	cmp	r2, #14
    bc0e:	dd00      	ble.n	bc12 <_dtoa_r+0x4f6>
    bc10:	e0a7      	b.n	bd62 <_dtoa_r+0x646>
    bc12:	4b7c      	ldr	r3, [pc, #496]	; (be04 <_dtoa_r+0x6e8>)
    bc14:	00d2      	lsls	r2, r2, #3
    bc16:	189b      	adds	r3, r3, r2
    bc18:	685c      	ldr	r4, [r3, #4]
    bc1a:	681b      	ldr	r3, [r3, #0]
    bc1c:	9304      	str	r3, [sp, #16]
    bc1e:	9405      	str	r4, [sp, #20]
    bc20:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    bc22:	2b00      	cmp	r3, #0
    bc24:	da00      	bge.n	bc28 <_dtoa_r+0x50c>
    bc26:	e2a7      	b.n	c178 <_dtoa_r+0xa5c>
    bc28:	9c04      	ldr	r4, [sp, #16]
    bc2a:	9d05      	ldr	r5, [sp, #20]
    bc2c:	0030      	movs	r0, r6
    bc2e:	0022      	movs	r2, r4
    bc30:	002b      	movs	r3, r5
    bc32:	0039      	movs	r1, r7
    bc34:	f7f9 fc12 	bl	545c <__aeabi_ddiv>
    bc38:	f7fa fcda 	bl	65f0 <__aeabi_d2iz>
    bc3c:	4680      	mov	r8, r0
    bc3e:	f7fa fd0b 	bl	6658 <__aeabi_i2d>
    bc42:	0022      	movs	r2, r4
    bc44:	002b      	movs	r3, r5
    bc46:	f7f9 ff3d 	bl	5ac4 <__aeabi_dmul>
    bc4a:	0002      	movs	r2, r0
    bc4c:	000b      	movs	r3, r1
    bc4e:	0030      	movs	r0, r6
    bc50:	0039      	movs	r1, r7
    bc52:	f7fa f9b7 	bl	5fc4 <__aeabi_dsub>
    bc56:	4643      	mov	r3, r8
    bc58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    bc5a:	3330      	adds	r3, #48	; 0x30
    bc5c:	7013      	strb	r3, [r2, #0]
    bc5e:	9b07      	ldr	r3, [sp, #28]
    bc60:	0006      	movs	r6, r0
    bc62:	000f      	movs	r7, r1
    bc64:	1c54      	adds	r4, r2, #1
    bc66:	2b01      	cmp	r3, #1
    bc68:	d04e      	beq.n	bd08 <_dtoa_r+0x5ec>
    bc6a:	2200      	movs	r2, #0
    bc6c:	4b60      	ldr	r3, [pc, #384]	; (bdf0 <_dtoa_r+0x6d4>)
    bc6e:	f7f9 ff29 	bl	5ac4 <__aeabi_dmul>
    bc72:	2200      	movs	r2, #0
    bc74:	2300      	movs	r3, #0
    bc76:	0006      	movs	r6, r0
    bc78:	000f      	movs	r7, r1
    bc7a:	f7fa fe53 	bl	6924 <__aeabi_dcmpeq>
    bc7e:	2800      	cmp	r0, #0
    bc80:	d000      	beq.n	bc84 <_dtoa_r+0x568>
    bc82:	e77a      	b.n	bb7a <_dtoa_r+0x45e>
    bc84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bc86:	9a07      	ldr	r2, [sp, #28]
    bc88:	1c9d      	adds	r5, r3, #2
    bc8a:	469c      	mov	ip, r3
    bc8c:	465b      	mov	r3, fp
    bc8e:	9306      	str	r3, [sp, #24]
    bc90:	4653      	mov	r3, sl
    bc92:	4462      	add	r2, ip
    bc94:	46aa      	mov	sl, r5
    bc96:	9c04      	ldr	r4, [sp, #16]
    bc98:	9d05      	ldr	r5, [sp, #20]
    bc9a:	4691      	mov	r9, r2
    bc9c:	9307      	str	r3, [sp, #28]
    bc9e:	e00f      	b.n	bcc0 <_dtoa_r+0x5a4>
    bca0:	2200      	movs	r2, #0
    bca2:	4b53      	ldr	r3, [pc, #332]	; (bdf0 <_dtoa_r+0x6d4>)
    bca4:	f7f9 ff0e 	bl	5ac4 <__aeabi_dmul>
    bca8:	2301      	movs	r3, #1
    bcaa:	469c      	mov	ip, r3
    bcac:	2200      	movs	r2, #0
    bcae:	2300      	movs	r3, #0
    bcb0:	0006      	movs	r6, r0
    bcb2:	000f      	movs	r7, r1
    bcb4:	44e2      	add	sl, ip
    bcb6:	f7fa fe35 	bl	6924 <__aeabi_dcmpeq>
    bcba:	2800      	cmp	r0, #0
    bcbc:	d000      	beq.n	bcc0 <_dtoa_r+0x5a4>
    bcbe:	e2d9      	b.n	c274 <_dtoa_r+0xb58>
    bcc0:	0022      	movs	r2, r4
    bcc2:	002b      	movs	r3, r5
    bcc4:	0030      	movs	r0, r6
    bcc6:	0039      	movs	r1, r7
    bcc8:	f7f9 fbc8 	bl	545c <__aeabi_ddiv>
    bccc:	f7fa fc90 	bl	65f0 <__aeabi_d2iz>
    bcd0:	4680      	mov	r8, r0
    bcd2:	f7fa fcc1 	bl	6658 <__aeabi_i2d>
    bcd6:	0022      	movs	r2, r4
    bcd8:	002b      	movs	r3, r5
    bcda:	f7f9 fef3 	bl	5ac4 <__aeabi_dmul>
    bcde:	0002      	movs	r2, r0
    bce0:	000b      	movs	r3, r1
    bce2:	0030      	movs	r0, r6
    bce4:	0039      	movs	r1, r7
    bce6:	f7fa f96d 	bl	5fc4 <__aeabi_dsub>
    bcea:	4653      	mov	r3, sl
    bcec:	4642      	mov	r2, r8
    bcee:	3b01      	subs	r3, #1
    bcf0:	3230      	adds	r2, #48	; 0x30
    bcf2:	0006      	movs	r6, r0
    bcf4:	000f      	movs	r7, r1
    bcf6:	46d3      	mov	fp, sl
    bcf8:	701a      	strb	r2, [r3, #0]
    bcfa:	45d1      	cmp	r9, sl
    bcfc:	d1d0      	bne.n	bca0 <_dtoa_r+0x584>
    bcfe:	9b06      	ldr	r3, [sp, #24]
    bd00:	4654      	mov	r4, sl
    bd02:	469b      	mov	fp, r3
    bd04:	9b07      	ldr	r3, [sp, #28]
    bd06:	469a      	mov	sl, r3
    bd08:	0032      	movs	r2, r6
    bd0a:	003b      	movs	r3, r7
    bd0c:	0030      	movs	r0, r6
    bd0e:	0039      	movs	r1, r7
    bd10:	f004 fe0e 	bl	10930 <__aeabi_dadd>
    bd14:	0006      	movs	r6, r0
    bd16:	000f      	movs	r7, r1
    bd18:	0002      	movs	r2, r0
    bd1a:	000b      	movs	r3, r1
    bd1c:	9804      	ldr	r0, [sp, #16]
    bd1e:	9905      	ldr	r1, [sp, #20]
    bd20:	f7fa fe06 	bl	6930 <__aeabi_dcmplt>
    bd24:	2800      	cmp	r0, #0
    bd26:	d10c      	bne.n	bd42 <_dtoa_r+0x626>
    bd28:	9804      	ldr	r0, [sp, #16]
    bd2a:	9905      	ldr	r1, [sp, #20]
    bd2c:	0032      	movs	r2, r6
    bd2e:	003b      	movs	r3, r7
    bd30:	f7fa fdf8 	bl	6924 <__aeabi_dcmpeq>
    bd34:	2800      	cmp	r0, #0
    bd36:	d100      	bne.n	bd3a <_dtoa_r+0x61e>
    bd38:	e71f      	b.n	bb7a <_dtoa_r+0x45e>
    bd3a:	4643      	mov	r3, r8
    bd3c:	07db      	lsls	r3, r3, #31
    bd3e:	d400      	bmi.n	bd42 <_dtoa_r+0x626>
    bd40:	e71b      	b.n	bb7a <_dtoa_r+0x45e>
    bd42:	1e65      	subs	r5, r4, #1
    bd44:	782f      	ldrb	r7, [r5, #0]
    bd46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bd48:	e006      	b.n	bd58 <_dtoa_r+0x63c>
    bd4a:	429d      	cmp	r5, r3
    bd4c:	d100      	bne.n	bd50 <_dtoa_r+0x634>
    bd4e:	e351      	b.n	c3f4 <_dtoa_r+0xcd8>
    bd50:	3c02      	subs	r4, #2
    bd52:	7827      	ldrb	r7, [r4, #0]
    bd54:	002c      	movs	r4, r5
    bd56:	3d01      	subs	r5, #1
    bd58:	2f39      	cmp	r7, #57	; 0x39
    bd5a:	d0f6      	beq.n	bd4a <_dtoa_r+0x62e>
    bd5c:	3701      	adds	r7, #1
    bd5e:	702f      	strb	r7, [r5, #0]
    bd60:	e70b      	b.n	bb7a <_dtoa_r+0x45e>
    bd62:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    bd64:	2a00      	cmp	r2, #0
    bd66:	d04f      	beq.n	be08 <_dtoa_r+0x6ec>
    bd68:	9a22      	ldr	r2, [sp, #136]	; 0x88
    bd6a:	2a01      	cmp	r2, #1
    bd6c:	dc00      	bgt.n	bd70 <_dtoa_r+0x654>
    bd6e:	e22c      	b.n	c1ca <_dtoa_r+0xaae>
    bd70:	9b07      	ldr	r3, [sp, #28]
    bd72:	1e5c      	subs	r4, r3, #1
    bd74:	464b      	mov	r3, r9
    bd76:	45a1      	cmp	r9, r4
    bd78:	da00      	bge.n	bd7c <_dtoa_r+0x660>
    bd7a:	e2b8      	b.n	c2ee <_dtoa_r+0xbd2>
    bd7c:	1b1c      	subs	r4, r3, r4
    bd7e:	9b07      	ldr	r3, [sp, #28]
    bd80:	2b00      	cmp	r3, #0
    bd82:	da00      	bge.n	bd86 <_dtoa_r+0x66a>
    bd84:	e3d4      	b.n	c530 <_dtoa_r+0xe14>
    bd86:	9b06      	ldr	r3, [sp, #24]
    bd88:	9308      	str	r3, [sp, #32]
    bd8a:	9b07      	ldr	r3, [sp, #28]
    bd8c:	9a06      	ldr	r2, [sp, #24]
    bd8e:	2101      	movs	r1, #1
    bd90:	4694      	mov	ip, r2
    bd92:	449c      	add	ip, r3
    bd94:	4662      	mov	r2, ip
    bd96:	9206      	str	r2, [sp, #24]
    bd98:	9a04      	ldr	r2, [sp, #16]
    bd9a:	4650      	mov	r0, sl
    bd9c:	4694      	mov	ip, r2
    bd9e:	449c      	add	ip, r3
    bda0:	4663      	mov	r3, ip
    bda2:	9304      	str	r3, [sp, #16]
    bda4:	f001 fe28 	bl	d9f8 <__i2b>
    bda8:	4680      	mov	r8, r0
    bdaa:	e032      	b.n	be12 <_dtoa_r+0x6f6>
    bdac:	9a06      	ldr	r2, [sp, #24]
    bdae:	9b03      	ldr	r3, [sp, #12]
    bdb0:	1ad2      	subs	r2, r2, r3
    bdb2:	425b      	negs	r3, r3
    bdb4:	4699      	mov	r9, r3
    bdb6:	2300      	movs	r3, #0
    bdb8:	9206      	str	r2, [sp, #24]
    bdba:	930d      	str	r3, [sp, #52]	; 0x34
    bdbc:	e579      	b.n	b8b2 <_dtoa_r+0x196>
    bdbe:	9803      	ldr	r0, [sp, #12]
    bdc0:	f7fa fc4a 	bl	6658 <__aeabi_i2d>
    bdc4:	000b      	movs	r3, r1
    bdc6:	0002      	movs	r2, r0
    bdc8:	0029      	movs	r1, r5
    bdca:	0020      	movs	r0, r4
    bdcc:	f7fa fdaa 	bl	6924 <__aeabi_dcmpeq>
    bdd0:	0002      	movs	r2, r0
    bdd2:	4250      	negs	r0, r2
    bdd4:	4150      	adcs	r0, r2
    bdd6:	9b03      	ldr	r3, [sp, #12]
    bdd8:	1a1b      	subs	r3, r3, r0
    bdda:	9303      	str	r3, [sp, #12]
    bddc:	e53d      	b.n	b85a <_dtoa_r+0x13e>
    bdde:	2301      	movs	r3, #1
    bde0:	1a9b      	subs	r3, r3, r2
    bde2:	9306      	str	r3, [sp, #24]
    bde4:	2300      	movs	r3, #0
    bde6:	9304      	str	r3, [sp, #16]
    bde8:	e557      	b.n	b89a <_dtoa_r+0x17e>
    bdea:	46c0      	nop			; (mov r8, r8)
    bdec:	3ff00000 	.word	0x3ff00000
    bdf0:	40240000 	.word	0x40240000
    bdf4:	00000432 	.word	0x00000432
    bdf8:	00000412 	.word	0x00000412
    bdfc:	fe100000 	.word	0xfe100000
    be00:	000139f4 	.word	0x000139f4
    be04:	00014068 	.word	0x00014068
    be08:	9b06      	ldr	r3, [sp, #24]
    be0a:	464c      	mov	r4, r9
    be0c:	9308      	str	r3, [sp, #32]
    be0e:	2300      	movs	r3, #0
    be10:	4698      	mov	r8, r3
    be12:	9908      	ldr	r1, [sp, #32]
    be14:	1e0b      	subs	r3, r1, #0
    be16:	dd0e      	ble.n	be36 <_dtoa_r+0x71a>
    be18:	9a04      	ldr	r2, [sp, #16]
    be1a:	2a00      	cmp	r2, #0
    be1c:	dd0b      	ble.n	be36 <_dtoa_r+0x71a>
    be1e:	4293      	cmp	r3, r2
    be20:	dd00      	ble.n	be24 <_dtoa_r+0x708>
    be22:	e187      	b.n	c134 <_dtoa_r+0xa18>
    be24:	9a06      	ldr	r2, [sp, #24]
    be26:	1ad2      	subs	r2, r2, r3
    be28:	9206      	str	r2, [sp, #24]
    be2a:	9a08      	ldr	r2, [sp, #32]
    be2c:	1ad2      	subs	r2, r2, r3
    be2e:	9208      	str	r2, [sp, #32]
    be30:	9a04      	ldr	r2, [sp, #16]
    be32:	1ad3      	subs	r3, r2, r3
    be34:	9304      	str	r3, [sp, #16]
    be36:	464b      	mov	r3, r9
    be38:	2b00      	cmp	r3, #0
    be3a:	d01a      	beq.n	be72 <_dtoa_r+0x756>
    be3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    be3e:	2b00      	cmp	r3, #0
    be40:	d100      	bne.n	be44 <_dtoa_r+0x728>
    be42:	e1bb      	b.n	c1bc <_dtoa_r+0xaa0>
    be44:	2c00      	cmp	r4, #0
    be46:	dd10      	ble.n	be6a <_dtoa_r+0x74e>
    be48:	4641      	mov	r1, r8
    be4a:	0022      	movs	r2, r4
    be4c:	4650      	mov	r0, sl
    be4e:	f001 fe87 	bl	db60 <__pow5mult>
    be52:	465a      	mov	r2, fp
    be54:	0001      	movs	r1, r0
    be56:	4680      	mov	r8, r0
    be58:	4650      	mov	r0, sl
    be5a:	f001 fdd7 	bl	da0c <__multiply>
    be5e:	0005      	movs	r5, r0
    be60:	4659      	mov	r1, fp
    be62:	4650      	mov	r0, sl
    be64:	f001 fce6 	bl	d834 <_Bfree>
    be68:	46ab      	mov	fp, r5
    be6a:	464b      	mov	r3, r9
    be6c:	1b1a      	subs	r2, r3, r4
    be6e:	d000      	beq.n	be72 <_dtoa_r+0x756>
    be70:	e1a5      	b.n	c1be <_dtoa_r+0xaa2>
    be72:	2101      	movs	r1, #1
    be74:	4650      	mov	r0, sl
    be76:	f001 fdbf 	bl	d9f8 <__i2b>
    be7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    be7c:	4681      	mov	r9, r0
    be7e:	2b00      	cmp	r3, #0
    be80:	dd1d      	ble.n	bebe <_dtoa_r+0x7a2>
    be82:	001a      	movs	r2, r3
    be84:	0001      	movs	r1, r0
    be86:	4650      	mov	r0, sl
    be88:	f001 fe6a 	bl	db60 <__pow5mult>
    be8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    be8e:	4681      	mov	r9, r0
    be90:	2b01      	cmp	r3, #1
    be92:	dc00      	bgt.n	be96 <_dtoa_r+0x77a>
    be94:	e150      	b.n	c138 <_dtoa_r+0xa1c>
    be96:	2400      	movs	r4, #0
    be98:	464b      	mov	r3, r9
    be9a:	691b      	ldr	r3, [r3, #16]
    be9c:	3303      	adds	r3, #3
    be9e:	009b      	lsls	r3, r3, #2
    bea0:	444b      	add	r3, r9
    bea2:	6858      	ldr	r0, [r3, #4]
    bea4:	f001 fd60 	bl	d968 <__hi0bits>
    bea8:	2320      	movs	r3, #32
    beaa:	1a1b      	subs	r3, r3, r0
    beac:	e010      	b.n	bed0 <_dtoa_r+0x7b4>
    beae:	2220      	movs	r2, #32
    beb0:	0030      	movs	r0, r6
    beb2:	1ad3      	subs	r3, r2, r3
    beb4:	4098      	lsls	r0, r3
    beb6:	e685      	b.n	bbc4 <_dtoa_r+0x4a8>
    beb8:	2300      	movs	r3, #0
    beba:	930c      	str	r3, [sp, #48]	; 0x30
    bebc:	e4e3      	b.n	b886 <_dtoa_r+0x16a>
    bebe:	9b22      	ldr	r3, [sp, #136]	; 0x88
    bec0:	2400      	movs	r4, #0
    bec2:	2b01      	cmp	r3, #1
    bec4:	dc00      	bgt.n	bec8 <_dtoa_r+0x7ac>
    bec6:	e18b      	b.n	c1e0 <_dtoa_r+0xac4>
    bec8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    beca:	2301      	movs	r3, #1
    becc:	2a00      	cmp	r2, #0
    bece:	d1e3      	bne.n	be98 <_dtoa_r+0x77c>
    bed0:	9904      	ldr	r1, [sp, #16]
    bed2:	201f      	movs	r0, #31
    bed4:	468c      	mov	ip, r1
    bed6:	4463      	add	r3, ip
    bed8:	4018      	ands	r0, r3
    beda:	d100      	bne.n	bede <_dtoa_r+0x7c2>
    bedc:	e0ae      	b.n	c03c <_dtoa_r+0x920>
    bede:	2320      	movs	r3, #32
    bee0:	1a1b      	subs	r3, r3, r0
    bee2:	2b04      	cmp	r3, #4
    bee4:	dc00      	bgt.n	bee8 <_dtoa_r+0x7cc>
    bee6:	e3cc      	b.n	c682 <_dtoa_r+0xf66>
    bee8:	231c      	movs	r3, #28
    beea:	1a18      	subs	r0, r3, r0
    beec:	9b06      	ldr	r3, [sp, #24]
    beee:	469c      	mov	ip, r3
    bef0:	4484      	add	ip, r0
    bef2:	4663      	mov	r3, ip
    bef4:	9306      	str	r3, [sp, #24]
    bef6:	9b08      	ldr	r3, [sp, #32]
    bef8:	469c      	mov	ip, r3
    befa:	4484      	add	ip, r0
    befc:	4663      	mov	r3, ip
    befe:	468c      	mov	ip, r1
    bf00:	4484      	add	ip, r0
    bf02:	9308      	str	r3, [sp, #32]
    bf04:	4663      	mov	r3, ip
    bf06:	9304      	str	r3, [sp, #16]
    bf08:	9b06      	ldr	r3, [sp, #24]
    bf0a:	2b00      	cmp	r3, #0
    bf0c:	dd05      	ble.n	bf1a <_dtoa_r+0x7fe>
    bf0e:	4659      	mov	r1, fp
    bf10:	001a      	movs	r2, r3
    bf12:	4650      	mov	r0, sl
    bf14:	f001 fe84 	bl	dc20 <__lshift>
    bf18:	4683      	mov	fp, r0
    bf1a:	9b04      	ldr	r3, [sp, #16]
    bf1c:	2b00      	cmp	r3, #0
    bf1e:	dd05      	ble.n	bf2c <_dtoa_r+0x810>
    bf20:	4649      	mov	r1, r9
    bf22:	001a      	movs	r2, r3
    bf24:	4650      	mov	r0, sl
    bf26:	f001 fe7b 	bl	dc20 <__lshift>
    bf2a:	4681      	mov	r9, r0
    bf2c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bf2e:	2b00      	cmp	r3, #0
    bf30:	d000      	beq.n	bf34 <_dtoa_r+0x818>
    bf32:	e094      	b.n	c05e <_dtoa_r+0x942>
    bf34:	9b07      	ldr	r3, [sp, #28]
    bf36:	2b00      	cmp	r3, #0
    bf38:	dc00      	bgt.n	bf3c <_dtoa_r+0x820>
    bf3a:	e175      	b.n	c228 <_dtoa_r+0xb0c>
    bf3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bf3e:	2b00      	cmp	r3, #0
    bf40:	d100      	bne.n	bf44 <_dtoa_r+0x828>
    bf42:	e0a6      	b.n	c092 <_dtoa_r+0x976>
    bf44:	9b08      	ldr	r3, [sp, #32]
    bf46:	2b00      	cmp	r3, #0
    bf48:	dd05      	ble.n	bf56 <_dtoa_r+0x83a>
    bf4a:	4641      	mov	r1, r8
    bf4c:	001a      	movs	r2, r3
    bf4e:	4650      	mov	r0, sl
    bf50:	f001 fe66 	bl	dc20 <__lshift>
    bf54:	4680      	mov	r8, r0
    bf56:	4643      	mov	r3, r8
    bf58:	930c      	str	r3, [sp, #48]	; 0x30
    bf5a:	2c00      	cmp	r4, #0
    bf5c:	d000      	beq.n	bf60 <_dtoa_r+0x844>
    bf5e:	e250      	b.n	c402 <_dtoa_r+0xce6>
    bf60:	9c07      	ldr	r4, [sp, #28]
    bf62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    bf64:	3c01      	subs	r4, #1
    bf66:	0023      	movs	r3, r4
    bf68:	4694      	mov	ip, r2
    bf6a:	4463      	add	r3, ip
    bf6c:	9308      	str	r3, [sp, #32]
    bf6e:	2301      	movs	r3, #1
    bf70:	4033      	ands	r3, r6
    bf72:	9307      	str	r3, [sp, #28]
    bf74:	464b      	mov	r3, r9
    bf76:	9306      	str	r3, [sp, #24]
    bf78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bf7a:	4657      	mov	r7, sl
    bf7c:	4645      	mov	r5, r8
    bf7e:	465e      	mov	r6, fp
    bf80:	4692      	mov	sl, r2
    bf82:	4698      	mov	r8, r3
    bf84:	9b06      	ldr	r3, [sp, #24]
    bf86:	0030      	movs	r0, r6
    bf88:	0019      	movs	r1, r3
    bf8a:	4699      	mov	r9, r3
    bf8c:	f7ff fb1c 	bl	b5c8 <quorem>
    bf90:	0003      	movs	r3, r0
    bf92:	900b      	str	r0, [sp, #44]	; 0x2c
    bf94:	3330      	adds	r3, #48	; 0x30
    bf96:	0029      	movs	r1, r5
    bf98:	0030      	movs	r0, r6
    bf9a:	9304      	str	r3, [sp, #16]
    bf9c:	f001 fea0 	bl	dce0 <__mcmp>
    bfa0:	4649      	mov	r1, r9
    bfa2:	0004      	movs	r4, r0
    bfa4:	4642      	mov	r2, r8
    bfa6:	0038      	movs	r0, r7
    bfa8:	f001 feb4 	bl	dd14 <__mdiff>
    bfac:	68c3      	ldr	r3, [r0, #12]
    bfae:	4681      	mov	r9, r0
    bfb0:	2b00      	cmp	r3, #0
    bfb2:	d000      	beq.n	bfb6 <_dtoa_r+0x89a>
    bfb4:	e11e      	b.n	c1f4 <_dtoa_r+0xad8>
    bfb6:	0001      	movs	r1, r0
    bfb8:	0030      	movs	r0, r6
    bfba:	f001 fe91 	bl	dce0 <__mcmp>
    bfbe:	4683      	mov	fp, r0
    bfc0:	4649      	mov	r1, r9
    bfc2:	0038      	movs	r0, r7
    bfc4:	f001 fc36 	bl	d834 <_Bfree>
    bfc8:	465b      	mov	r3, fp
    bfca:	9a22      	ldr	r2, [sp, #136]	; 0x88
    bfcc:	4313      	orrs	r3, r2
    bfce:	d103      	bne.n	bfd8 <_dtoa_r+0x8bc>
    bfd0:	9b07      	ldr	r3, [sp, #28]
    bfd2:	2b00      	cmp	r3, #0
    bfd4:	d100      	bne.n	bfd8 <_dtoa_r+0x8bc>
    bfd6:	e306      	b.n	c5e6 <_dtoa_r+0xeca>
    bfd8:	2c00      	cmp	r4, #0
    bfda:	da00      	bge.n	bfde <_dtoa_r+0x8c2>
    bfdc:	e1a8      	b.n	c330 <_dtoa_r+0xc14>
    bfde:	9b22      	ldr	r3, [sp, #136]	; 0x88
    bfe0:	431c      	orrs	r4, r3
    bfe2:	d103      	bne.n	bfec <_dtoa_r+0x8d0>
    bfe4:	9b07      	ldr	r3, [sp, #28]
    bfe6:	2b00      	cmp	r3, #0
    bfe8:	d100      	bne.n	bfec <_dtoa_r+0x8d0>
    bfea:	e1a1      	b.n	c330 <_dtoa_r+0xc14>
    bfec:	465b      	mov	r3, fp
    bfee:	2b00      	cmp	r3, #0
    bff0:	dd00      	ble.n	bff4 <_dtoa_r+0x8d8>
    bff2:	e282      	b.n	c4fa <_dtoa_r+0xdde>
    bff4:	4669      	mov	r1, sp
    bff6:	4652      	mov	r2, sl
    bff8:	4653      	mov	r3, sl
    bffa:	7c09      	ldrb	r1, [r1, #16]
    bffc:	1c5c      	adds	r4, r3, #1
    bffe:	7011      	strb	r1, [r2, #0]
    c000:	9a08      	ldr	r2, [sp, #32]
    c002:	4552      	cmp	r2, sl
    c004:	d100      	bne.n	c008 <_dtoa_r+0x8ec>
    c006:	e28a      	b.n	c51e <_dtoa_r+0xe02>
    c008:	0031      	movs	r1, r6
    c00a:	2300      	movs	r3, #0
    c00c:	220a      	movs	r2, #10
    c00e:	0038      	movs	r0, r7
    c010:	f001 fc1a 	bl	d848 <__multadd>
    c014:	2300      	movs	r3, #0
    c016:	0006      	movs	r6, r0
    c018:	220a      	movs	r2, #10
    c01a:	0029      	movs	r1, r5
    c01c:	0038      	movs	r0, r7
    c01e:	4545      	cmp	r5, r8
    c020:	d100      	bne.n	c024 <_dtoa_r+0x908>
    c022:	e0e1      	b.n	c1e8 <_dtoa_r+0xacc>
    c024:	f001 fc10 	bl	d848 <__multadd>
    c028:	4641      	mov	r1, r8
    c02a:	0005      	movs	r5, r0
    c02c:	2300      	movs	r3, #0
    c02e:	220a      	movs	r2, #10
    c030:	0038      	movs	r0, r7
    c032:	f001 fc09 	bl	d848 <__multadd>
    c036:	46a2      	mov	sl, r4
    c038:	4680      	mov	r8, r0
    c03a:	e7a3      	b.n	bf84 <_dtoa_r+0x868>
    c03c:	201c      	movs	r0, #28
    c03e:	9b06      	ldr	r3, [sp, #24]
    c040:	469c      	mov	ip, r3
    c042:	4484      	add	ip, r0
    c044:	4663      	mov	r3, ip
    c046:	9306      	str	r3, [sp, #24]
    c048:	9b08      	ldr	r3, [sp, #32]
    c04a:	469c      	mov	ip, r3
    c04c:	4484      	add	ip, r0
    c04e:	4663      	mov	r3, ip
    c050:	9308      	str	r3, [sp, #32]
    c052:	9b04      	ldr	r3, [sp, #16]
    c054:	469c      	mov	ip, r3
    c056:	4484      	add	ip, r0
    c058:	4663      	mov	r3, ip
    c05a:	9304      	str	r3, [sp, #16]
    c05c:	e754      	b.n	bf08 <_dtoa_r+0x7ec>
    c05e:	4649      	mov	r1, r9
    c060:	4658      	mov	r0, fp
    c062:	f001 fe3d 	bl	dce0 <__mcmp>
    c066:	2800      	cmp	r0, #0
    c068:	db00      	blt.n	c06c <_dtoa_r+0x950>
    c06a:	e763      	b.n	bf34 <_dtoa_r+0x818>
    c06c:	9b03      	ldr	r3, [sp, #12]
    c06e:	4659      	mov	r1, fp
    c070:	3b01      	subs	r3, #1
    c072:	9303      	str	r3, [sp, #12]
    c074:	220a      	movs	r2, #10
    c076:	2300      	movs	r3, #0
    c078:	4650      	mov	r0, sl
    c07a:	f001 fbe5 	bl	d848 <__multadd>
    c07e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c080:	4683      	mov	fp, r0
    c082:	2b00      	cmp	r3, #0
    c084:	d000      	beq.n	c088 <_dtoa_r+0x96c>
    c086:	e2ca      	b.n	c61e <_dtoa_r+0xf02>
    c088:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c08a:	2b00      	cmp	r3, #0
    c08c:	dc00      	bgt.n	c090 <_dtoa_r+0x974>
    c08e:	e2d8      	b.n	c642 <_dtoa_r+0xf26>
    c090:	9307      	str	r3, [sp, #28]
    c092:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c094:	465d      	mov	r5, fp
    c096:	2400      	movs	r4, #0
    c098:	9f07      	ldr	r7, [sp, #28]
    c09a:	469b      	mov	fp, r3
    c09c:	e006      	b.n	c0ac <_dtoa_r+0x990>
    c09e:	0029      	movs	r1, r5
    c0a0:	2300      	movs	r3, #0
    c0a2:	220a      	movs	r2, #10
    c0a4:	4650      	mov	r0, sl
    c0a6:	f001 fbcf 	bl	d848 <__multadd>
    c0aa:	0005      	movs	r5, r0
    c0ac:	4649      	mov	r1, r9
    c0ae:	0028      	movs	r0, r5
    c0b0:	f7ff fa8a 	bl	b5c8 <quorem>
    c0b4:	465b      	mov	r3, fp
    c0b6:	3030      	adds	r0, #48	; 0x30
    c0b8:	5518      	strb	r0, [r3, r4]
    c0ba:	3401      	adds	r4, #1
    c0bc:	42bc      	cmp	r4, r7
    c0be:	dbee      	blt.n	c09e <_dtoa_r+0x982>
    c0c0:	46ab      	mov	fp, r5
    c0c2:	0006      	movs	r6, r0
    c0c4:	9c07      	ldr	r4, [sp, #28]
    c0c6:	2c00      	cmp	r4, #0
    c0c8:	dc00      	bgt.n	c0cc <_dtoa_r+0x9b0>
    c0ca:	e237      	b.n	c53c <_dtoa_r+0xe20>
    c0cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c0ce:	2700      	movs	r7, #0
    c0d0:	469c      	mov	ip, r3
    c0d2:	4464      	add	r4, ip
    c0d4:	4659      	mov	r1, fp
    c0d6:	2201      	movs	r2, #1
    c0d8:	4650      	mov	r0, sl
    c0da:	f001 fda1 	bl	dc20 <__lshift>
    c0de:	4649      	mov	r1, r9
    c0e0:	4683      	mov	fp, r0
    c0e2:	f001 fdfd 	bl	dce0 <__mcmp>
    c0e6:	2800      	cmp	r0, #0
    c0e8:	dc00      	bgt.n	c0ec <_dtoa_r+0x9d0>
    c0ea:	e144      	b.n	c376 <_dtoa_r+0xc5a>
    c0ec:	1e65      	subs	r5, r4, #1
    c0ee:	782b      	ldrb	r3, [r5, #0]
    c0f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    c0f2:	e006      	b.n	c102 <_dtoa_r+0x9e6>
    c0f4:	4295      	cmp	r5, r2
    c0f6:	d100      	bne.n	c0fa <_dtoa_r+0x9de>
    c0f8:	e0b1      	b.n	c25e <_dtoa_r+0xb42>
    c0fa:	3c02      	subs	r4, #2
    c0fc:	7823      	ldrb	r3, [r4, #0]
    c0fe:	002c      	movs	r4, r5
    c100:	3d01      	subs	r5, #1
    c102:	2b39      	cmp	r3, #57	; 0x39
    c104:	d0f6      	beq.n	c0f4 <_dtoa_r+0x9d8>
    c106:	3301      	adds	r3, #1
    c108:	702b      	strb	r3, [r5, #0]
    c10a:	4649      	mov	r1, r9
    c10c:	4650      	mov	r0, sl
    c10e:	f001 fb91 	bl	d834 <_Bfree>
    c112:	4643      	mov	r3, r8
    c114:	2b00      	cmp	r3, #0
    c116:	d100      	bne.n	c11a <_dtoa_r+0x9fe>
    c118:	e52f      	b.n	bb7a <_dtoa_r+0x45e>
    c11a:	2f00      	cmp	r7, #0
    c11c:	d005      	beq.n	c12a <_dtoa_r+0xa0e>
    c11e:	4547      	cmp	r7, r8
    c120:	d003      	beq.n	c12a <_dtoa_r+0xa0e>
    c122:	0039      	movs	r1, r7
    c124:	4650      	mov	r0, sl
    c126:	f001 fb85 	bl	d834 <_Bfree>
    c12a:	4641      	mov	r1, r8
    c12c:	4650      	mov	r0, sl
    c12e:	f001 fb81 	bl	d834 <_Bfree>
    c132:	e522      	b.n	bb7a <_dtoa_r+0x45e>
    c134:	0013      	movs	r3, r2
    c136:	e675      	b.n	be24 <_dtoa_r+0x708>
    c138:	2e00      	cmp	r6, #0
    c13a:	d000      	beq.n	c13e <_dtoa_r+0xa22>
    c13c:	e6ab      	b.n	be96 <_dtoa_r+0x77a>
    c13e:	033b      	lsls	r3, r7, #12
    c140:	2400      	movs	r4, #0
    c142:	2b00      	cmp	r3, #0
    c144:	d000      	beq.n	c148 <_dtoa_r+0xa2c>
    c146:	e6bf      	b.n	bec8 <_dtoa_r+0x7ac>
    c148:	4bba      	ldr	r3, [pc, #744]	; (c434 <_dtoa_r+0xd18>)
    c14a:	423b      	tst	r3, r7
    c14c:	d100      	bne.n	c150 <_dtoa_r+0xa34>
    c14e:	e6bb      	b.n	bec8 <_dtoa_r+0x7ac>
    c150:	9b06      	ldr	r3, [sp, #24]
    c152:	3401      	adds	r4, #1
    c154:	3301      	adds	r3, #1
    c156:	9306      	str	r3, [sp, #24]
    c158:	9b04      	ldr	r3, [sp, #16]
    c15a:	3301      	adds	r3, #1
    c15c:	9304      	str	r3, [sp, #16]
    c15e:	e6b3      	b.n	bec8 <_dtoa_r+0x7ac>
    c160:	2301      	movs	r3, #1
    c162:	930b      	str	r3, [sp, #44]	; 0x2c
    c164:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    c166:	2b00      	cmp	r3, #0
    c168:	dc00      	bgt.n	c16c <_dtoa_r+0xa50>
    c16a:	e0d1      	b.n	c310 <_dtoa_r+0xbf4>
    c16c:	001d      	movs	r5, r3
    c16e:	4698      	mov	r8, r3
    c170:	930e      	str	r3, [sp, #56]	; 0x38
    c172:	9307      	str	r3, [sp, #28]
    c174:	f7ff fbc8 	bl	b908 <_dtoa_r+0x1ec>
    c178:	9b07      	ldr	r3, [sp, #28]
    c17a:	2b00      	cmp	r3, #0
    c17c:	dd00      	ble.n	c180 <_dtoa_r+0xa64>
    c17e:	e553      	b.n	bc28 <_dtoa_r+0x50c>
    c180:	d000      	beq.n	c184 <_dtoa_r+0xa68>
    c182:	e0ad      	b.n	c2e0 <_dtoa_r+0xbc4>
    c184:	9804      	ldr	r0, [sp, #16]
    c186:	9905      	ldr	r1, [sp, #20]
    c188:	2200      	movs	r2, #0
    c18a:	4bab      	ldr	r3, [pc, #684]	; (c438 <_dtoa_r+0xd1c>)
    c18c:	f7f9 fc9a 	bl	5ac4 <__aeabi_dmul>
    c190:	003b      	movs	r3, r7
    c192:	0032      	movs	r2, r6
    c194:	f7fa fbea 	bl	696c <__aeabi_dcmpge>
    c198:	2300      	movs	r3, #0
    c19a:	4699      	mov	r9, r3
    c19c:	4698      	mov	r8, r3
    c19e:	2800      	cmp	r0, #0
    c1a0:	d055      	beq.n	c24e <_dtoa_r+0xb32>
    c1a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    c1a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    c1a6:	43db      	mvns	r3, r3
    c1a8:	9303      	str	r3, [sp, #12]
    c1aa:	4649      	mov	r1, r9
    c1ac:	4650      	mov	r0, sl
    c1ae:	f001 fb41 	bl	d834 <_Bfree>
    c1b2:	4643      	mov	r3, r8
    c1b4:	2b00      	cmp	r3, #0
    c1b6:	d100      	bne.n	c1ba <_dtoa_r+0xa9e>
    c1b8:	e4df      	b.n	bb7a <_dtoa_r+0x45e>
    c1ba:	e7b6      	b.n	c12a <_dtoa_r+0xa0e>
    c1bc:	464a      	mov	r2, r9
    c1be:	4659      	mov	r1, fp
    c1c0:	4650      	mov	r0, sl
    c1c2:	f001 fccd 	bl	db60 <__pow5mult>
    c1c6:	4683      	mov	fp, r0
    c1c8:	e653      	b.n	be72 <_dtoa_r+0x756>
    c1ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    c1cc:	2a00      	cmp	r2, #0
    c1ce:	d100      	bne.n	c1d2 <_dtoa_r+0xab6>
    c1d0:	e1b6      	b.n	c540 <_dtoa_r+0xe24>
    c1d2:	4a9a      	ldr	r2, [pc, #616]	; (c43c <_dtoa_r+0xd20>)
    c1d4:	464c      	mov	r4, r9
    c1d6:	4694      	mov	ip, r2
    c1d8:	9a06      	ldr	r2, [sp, #24]
    c1da:	4463      	add	r3, ip
    c1dc:	9208      	str	r2, [sp, #32]
    c1de:	e5d5      	b.n	bd8c <_dtoa_r+0x670>
    c1e0:	2e00      	cmp	r6, #0
    c1e2:	d000      	beq.n	c1e6 <_dtoa_r+0xaca>
    c1e4:	e670      	b.n	bec8 <_dtoa_r+0x7ac>
    c1e6:	e7aa      	b.n	c13e <_dtoa_r+0xa22>
    c1e8:	f001 fb2e 	bl	d848 <__multadd>
    c1ec:	46a2      	mov	sl, r4
    c1ee:	0005      	movs	r5, r0
    c1f0:	4680      	mov	r8, r0
    c1f2:	e6c7      	b.n	bf84 <_dtoa_r+0x868>
    c1f4:	2301      	movs	r3, #1
    c1f6:	469b      	mov	fp, r3
    c1f8:	e6e2      	b.n	bfc0 <_dtoa_r+0x8a4>
    c1fa:	2300      	movs	r3, #0
    c1fc:	930b      	str	r3, [sp, #44]	; 0x2c
    c1fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c200:	2b02      	cmp	r3, #2
    c202:	d0af      	beq.n	c164 <_dtoa_r+0xa48>
    c204:	2400      	movs	r4, #0
    c206:	4653      	mov	r3, sl
    c208:	0021      	movs	r1, r4
    c20a:	645c      	str	r4, [r3, #68]	; 0x44
    c20c:	4650      	mov	r0, sl
    c20e:	f001 fae9 	bl	d7e4 <_Balloc>
    c212:	4653      	mov	r3, sl
    c214:	6418      	str	r0, [r3, #64]	; 0x40
    c216:	2301      	movs	r3, #1
    c218:	425b      	negs	r3, r3
    c21a:	9307      	str	r3, [sp, #28]
    c21c:	930e      	str	r3, [sp, #56]	; 0x38
    c21e:	3302      	adds	r3, #2
    c220:	900a      	str	r0, [sp, #40]	; 0x28
    c222:	9423      	str	r4, [sp, #140]	; 0x8c
    c224:	930b      	str	r3, [sp, #44]	; 0x2c
    c226:	e4ec      	b.n	bc02 <_dtoa_r+0x4e6>
    c228:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c22a:	2b02      	cmp	r3, #2
    c22c:	dc00      	bgt.n	c230 <_dtoa_r+0xb14>
    c22e:	e685      	b.n	bf3c <_dtoa_r+0x820>
    c230:	9b07      	ldr	r3, [sp, #28]
    c232:	2b00      	cmp	r3, #0
    c234:	d1b5      	bne.n	c1a2 <_dtoa_r+0xa86>
    c236:	4649      	mov	r1, r9
    c238:	2205      	movs	r2, #5
    c23a:	4650      	mov	r0, sl
    c23c:	f001 fb04 	bl	d848 <__multadd>
    c240:	4681      	mov	r9, r0
    c242:	0001      	movs	r1, r0
    c244:	4658      	mov	r0, fp
    c246:	f001 fd4b 	bl	dce0 <__mcmp>
    c24a:	2800      	cmp	r0, #0
    c24c:	dda9      	ble.n	c1a2 <_dtoa_r+0xa86>
    c24e:	2331      	movs	r3, #49	; 0x31
    c250:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    c252:	7013      	strb	r3, [r2, #0]
    c254:	9b03      	ldr	r3, [sp, #12]
    c256:	1c54      	adds	r4, r2, #1
    c258:	3301      	adds	r3, #1
    c25a:	9303      	str	r3, [sp, #12]
    c25c:	e7a5      	b.n	c1aa <_dtoa_r+0xa8e>
    c25e:	9b03      	ldr	r3, [sp, #12]
    c260:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    c262:	3301      	adds	r3, #1
    c264:	9303      	str	r3, [sp, #12]
    c266:	2331      	movs	r3, #49	; 0x31
    c268:	7013      	strb	r3, [r2, #0]
    c26a:	e74e      	b.n	c10a <_dtoa_r+0x9ee>
    c26c:	2300      	movs	r3, #0
    c26e:	930b      	str	r3, [sp, #44]	; 0x2c
    c270:	f7ff fb3d 	bl	b8ee <_dtoa_r+0x1d2>
    c274:	9b06      	ldr	r3, [sp, #24]
    c276:	465c      	mov	r4, fp
    c278:	469b      	mov	fp, r3
    c27a:	9b07      	ldr	r3, [sp, #28]
    c27c:	469a      	mov	sl, r3
    c27e:	e47c      	b.n	bb7a <_dtoa_r+0x45e>
    c280:	4640      	mov	r0, r8
    c282:	f7fa f9e9 	bl	6658 <__aeabi_i2d>
    c286:	0032      	movs	r2, r6
    c288:	003b      	movs	r3, r7
    c28a:	f7f9 fc1b 	bl	5ac4 <__aeabi_dmul>
    c28e:	2200      	movs	r2, #0
    c290:	4b6b      	ldr	r3, [pc, #428]	; (c440 <_dtoa_r+0xd24>)
    c292:	f004 fb4d 	bl	10930 <__aeabi_dadd>
    c296:	4a6b      	ldr	r2, [pc, #428]	; (c444 <_dtoa_r+0xd28>)
    c298:	000b      	movs	r3, r1
    c29a:	4694      	mov	ip, r2
    c29c:	4463      	add	r3, ip
    c29e:	9008      	str	r0, [sp, #32]
    c2a0:	9109      	str	r1, [sp, #36]	; 0x24
    c2a2:	9309      	str	r3, [sp, #36]	; 0x24
    c2a4:	2200      	movs	r2, #0
    c2a6:	4b64      	ldr	r3, [pc, #400]	; (c438 <_dtoa_r+0xd1c>)
    c2a8:	0030      	movs	r0, r6
    c2aa:	0039      	movs	r1, r7
    c2ac:	f7f9 fe8a 	bl	5fc4 <__aeabi_dsub>
    c2b0:	9e08      	ldr	r6, [sp, #32]
    c2b2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    c2b4:	0032      	movs	r2, r6
    c2b6:	003b      	movs	r3, r7
    c2b8:	0004      	movs	r4, r0
    c2ba:	000d      	movs	r5, r1
    c2bc:	f7fa fb4c 	bl	6958 <__aeabi_dcmpgt>
    c2c0:	2800      	cmp	r0, #0
    c2c2:	d000      	beq.n	c2c6 <_dtoa_r+0xbaa>
    c2c4:	e0b2      	b.n	c42c <_dtoa_r+0xd10>
    c2c6:	2080      	movs	r0, #128	; 0x80
    c2c8:	0600      	lsls	r0, r0, #24
    c2ca:	4684      	mov	ip, r0
    c2cc:	0039      	movs	r1, r7
    c2ce:	4461      	add	r1, ip
    c2d0:	000b      	movs	r3, r1
    c2d2:	0032      	movs	r2, r6
    c2d4:	0020      	movs	r0, r4
    c2d6:	0029      	movs	r1, r5
    c2d8:	f7fa fb2a 	bl	6930 <__aeabi_dcmplt>
    c2dc:	2800      	cmp	r0, #0
    c2de:	d057      	beq.n	c390 <_dtoa_r+0xc74>
    c2e0:	2300      	movs	r3, #0
    c2e2:	4699      	mov	r9, r3
    c2e4:	4698      	mov	r8, r3
    c2e6:	e75c      	b.n	c1a2 <_dtoa_r+0xa86>
    c2e8:	980a      	ldr	r0, [sp, #40]	; 0x28
    c2ea:	f7ff fa4c 	bl	b786 <_dtoa_r+0x6a>
    c2ee:	1ae2      	subs	r2, r4, r3
    c2f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    c2f2:	46a1      	mov	r9, r4
    c2f4:	469c      	mov	ip, r3
    c2f6:	4494      	add	ip, r2
    c2f8:	4663      	mov	r3, ip
    c2fa:	2400      	movs	r4, #0
    c2fc:	930d      	str	r3, [sp, #52]	; 0x34
    c2fe:	e53e      	b.n	bd7e <_dtoa_r+0x662>
    c300:	9a10      	ldr	r2, [sp, #64]	; 0x40
    c302:	9b11      	ldr	r3, [sp, #68]	; 0x44
    c304:	9208      	str	r2, [sp, #32]
    c306:	9309      	str	r3, [sp, #36]	; 0x24
    c308:	2302      	movs	r3, #2
    c30a:	4698      	mov	r8, r3
    c30c:	f7ff fb3a 	bl	b984 <_dtoa_r+0x268>
    c310:	2300      	movs	r3, #0
    c312:	4652      	mov	r2, sl
    c314:	2100      	movs	r1, #0
    c316:	6453      	str	r3, [r2, #68]	; 0x44
    c318:	4650      	mov	r0, sl
    c31a:	f001 fa63 	bl	d7e4 <_Balloc>
    c31e:	4653      	mov	r3, sl
    c320:	6418      	str	r0, [r3, #64]	; 0x40
    c322:	2301      	movs	r3, #1
    c324:	900a      	str	r0, [sp, #40]	; 0x28
    c326:	9307      	str	r3, [sp, #28]
    c328:	9323      	str	r3, [sp, #140]	; 0x8c
    c32a:	930e      	str	r3, [sp, #56]	; 0x38
    c32c:	f7ff fb07 	bl	b93e <_dtoa_r+0x222>
    c330:	4643      	mov	r3, r8
    c332:	930c      	str	r3, [sp, #48]	; 0x30
    c334:	465b      	mov	r3, fp
    c336:	9a06      	ldr	r2, [sp, #24]
    c338:	46a8      	mov	r8, r5
    c33a:	46b3      	mov	fp, r6
    c33c:	4655      	mov	r5, sl
    c33e:	9e04      	ldr	r6, [sp, #16]
    c340:	4691      	mov	r9, r2
    c342:	46ba      	mov	sl, r7
    c344:	2b00      	cmp	r3, #0
    c346:	dd10      	ble.n	c36a <_dtoa_r+0xc4e>
    c348:	4659      	mov	r1, fp
    c34a:	2201      	movs	r2, #1
    c34c:	0038      	movs	r0, r7
    c34e:	f001 fc67 	bl	dc20 <__lshift>
    c352:	4649      	mov	r1, r9
    c354:	4683      	mov	fp, r0
    c356:	f001 fcc3 	bl	dce0 <__mcmp>
    c35a:	2800      	cmp	r0, #0
    c35c:	dc00      	bgt.n	c360 <_dtoa_r+0xc44>
    c35e:	e157      	b.n	c610 <_dtoa_r+0xef4>
    c360:	2e39      	cmp	r6, #57	; 0x39
    c362:	d100      	bne.n	c366 <_dtoa_r+0xc4a>
    c364:	e122      	b.n	c5ac <_dtoa_r+0xe90>
    c366:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    c368:	3631      	adds	r6, #49	; 0x31
    c36a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c36c:	4647      	mov	r7, r8
    c36e:	1c6c      	adds	r4, r5, #1
    c370:	702e      	strb	r6, [r5, #0]
    c372:	4698      	mov	r8, r3
    c374:	e6c9      	b.n	c10a <_dtoa_r+0x9ee>
    c376:	2800      	cmp	r0, #0
    c378:	d103      	bne.n	c382 <_dtoa_r+0xc66>
    c37a:	07f3      	lsls	r3, r6, #31
    c37c:	d501      	bpl.n	c382 <_dtoa_r+0xc66>
    c37e:	e6b5      	b.n	c0ec <_dtoa_r+0x9d0>
    c380:	001c      	movs	r4, r3
    c382:	1e63      	subs	r3, r4, #1
    c384:	781a      	ldrb	r2, [r3, #0]
    c386:	2a30      	cmp	r2, #48	; 0x30
    c388:	d0fa      	beq.n	c380 <_dtoa_r+0xc64>
    c38a:	e6be      	b.n	c10a <_dtoa_r+0x9ee>
    c38c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    c38e:	4699      	mov	r9, r3
    c390:	9e10      	ldr	r6, [sp, #64]	; 0x40
    c392:	9f11      	ldr	r7, [sp, #68]	; 0x44
    c394:	e435      	b.n	bc02 <_dtoa_r+0x4e6>
    c396:	2501      	movs	r5, #1
    c398:	f7ff fab4 	bl	b904 <_dtoa_r+0x1e8>
    c39c:	9b03      	ldr	r3, [sp, #12]
    c39e:	2b00      	cmp	r3, #0
    c3a0:	d100      	bne.n	c3a4 <_dtoa_r+0xc88>
    c3a2:	e0d4      	b.n	c54e <_dtoa_r+0xe32>
    c3a4:	9810      	ldr	r0, [sp, #64]	; 0x40
    c3a6:	9911      	ldr	r1, [sp, #68]	; 0x44
    c3a8:	425c      	negs	r4, r3
    c3aa:	230f      	movs	r3, #15
    c3ac:	4a26      	ldr	r2, [pc, #152]	; (c448 <_dtoa_r+0xd2c>)
    c3ae:	4023      	ands	r3, r4
    c3b0:	00db      	lsls	r3, r3, #3
    c3b2:	18d3      	adds	r3, r2, r3
    c3b4:	681a      	ldr	r2, [r3, #0]
    c3b6:	685b      	ldr	r3, [r3, #4]
    c3b8:	f7f9 fb84 	bl	5ac4 <__aeabi_dmul>
    c3bc:	1124      	asrs	r4, r4, #4
    c3be:	0006      	movs	r6, r0
    c3c0:	000f      	movs	r7, r1
    c3c2:	2c00      	cmp	r4, #0
    c3c4:	d100      	bne.n	c3c8 <_dtoa_r+0xcac>
    c3c6:	e149      	b.n	c65c <_dtoa_r+0xf40>
    c3c8:	2302      	movs	r3, #2
    c3ca:	4698      	mov	r8, r3
    c3cc:	4d1f      	ldr	r5, [pc, #124]	; (c44c <_dtoa_r+0xd30>)
    c3ce:	2301      	movs	r3, #1
    c3d0:	4223      	tst	r3, r4
    c3d2:	d009      	beq.n	c3e8 <_dtoa_r+0xccc>
    c3d4:	469c      	mov	ip, r3
    c3d6:	682a      	ldr	r2, [r5, #0]
    c3d8:	686b      	ldr	r3, [r5, #4]
    c3da:	0030      	movs	r0, r6
    c3dc:	0039      	movs	r1, r7
    c3de:	44e0      	add	r8, ip
    c3e0:	f7f9 fb70 	bl	5ac4 <__aeabi_dmul>
    c3e4:	0006      	movs	r6, r0
    c3e6:	000f      	movs	r7, r1
    c3e8:	1064      	asrs	r4, r4, #1
    c3ea:	3508      	adds	r5, #8
    c3ec:	2c00      	cmp	r4, #0
    c3ee:	d1ee      	bne.n	c3ce <_dtoa_r+0xcb2>
    c3f0:	f7ff fae4 	bl	b9bc <_dtoa_r+0x2a0>
    c3f4:	9b03      	ldr	r3, [sp, #12]
    c3f6:	2730      	movs	r7, #48	; 0x30
    c3f8:	3301      	adds	r3, #1
    c3fa:	9303      	str	r3, [sp, #12]
    c3fc:	2330      	movs	r3, #48	; 0x30
    c3fe:	702b      	strb	r3, [r5, #0]
    c400:	e4ac      	b.n	bd5c <_dtoa_r+0x640>
    c402:	6859      	ldr	r1, [r3, #4]
    c404:	4650      	mov	r0, sl
    c406:	f001 f9ed 	bl	d7e4 <_Balloc>
    c40a:	4643      	mov	r3, r8
    c40c:	4641      	mov	r1, r8
    c40e:	0004      	movs	r4, r0
    c410:	691b      	ldr	r3, [r3, #16]
    c412:	310c      	adds	r1, #12
    c414:	1c9a      	adds	r2, r3, #2
    c416:	0092      	lsls	r2, r2, #2
    c418:	300c      	adds	r0, #12
    c41a:	f7fa fc45 	bl	6ca8 <memcpy>
    c41e:	2201      	movs	r2, #1
    c420:	0021      	movs	r1, r4
    c422:	4650      	mov	r0, sl
    c424:	f001 fbfc 	bl	dc20 <__lshift>
    c428:	900c      	str	r0, [sp, #48]	; 0x30
    c42a:	e599      	b.n	bf60 <_dtoa_r+0x844>
    c42c:	2300      	movs	r3, #0
    c42e:	4699      	mov	r9, r3
    c430:	4698      	mov	r8, r3
    c432:	e70c      	b.n	c24e <_dtoa_r+0xb32>
    c434:	7ff00000 	.word	0x7ff00000
    c438:	40140000 	.word	0x40140000
    c43c:	00000433 	.word	0x00000433
    c440:	401c0000 	.word	0x401c0000
    c444:	fcc00000 	.word	0xfcc00000
    c448:	00014068 	.word	0x00014068
    c44c:	00014040 	.word	0x00014040
    c450:	9b12      	ldr	r3, [sp, #72]	; 0x48
    c452:	498f      	ldr	r1, [pc, #572]	; (c690 <_dtoa_r+0xf74>)
    c454:	3b01      	subs	r3, #1
    c456:	00db      	lsls	r3, r3, #3
    c458:	18c9      	adds	r1, r1, r3
    c45a:	6808      	ldr	r0, [r1, #0]
    c45c:	6849      	ldr	r1, [r1, #4]
    c45e:	9a08      	ldr	r2, [sp, #32]
    c460:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c462:	f7f9 fb2f 	bl	5ac4 <__aeabi_dmul>
    c466:	9014      	str	r0, [sp, #80]	; 0x50
    c468:	9115      	str	r1, [sp, #84]	; 0x54
    c46a:	0039      	movs	r1, r7
    c46c:	0030      	movs	r0, r6
    c46e:	f7fa f8bf 	bl	65f0 <__aeabi_d2iz>
    c472:	0005      	movs	r5, r0
    c474:	f7fa f8f0 	bl	6658 <__aeabi_i2d>
    c478:	0002      	movs	r2, r0
    c47a:	000b      	movs	r3, r1
    c47c:	0030      	movs	r0, r6
    c47e:	0039      	movs	r1, r7
    c480:	f7f9 fda0 	bl	5fc4 <__aeabi_dsub>
    c484:	9b12      	ldr	r3, [sp, #72]	; 0x48
    c486:	9008      	str	r0, [sp, #32]
    c488:	9109      	str	r1, [sp, #36]	; 0x24
    c48a:	990a      	ldr	r1, [sp, #40]	; 0x28
    c48c:	001a      	movs	r2, r3
    c48e:	468c      	mov	ip, r1
    c490:	3530      	adds	r5, #48	; 0x30
    c492:	4462      	add	r2, ip
    c494:	1c4c      	adds	r4, r1, #1
    c496:	700d      	strb	r5, [r1, #0]
    c498:	4690      	mov	r8, r2
    c49a:	2b01      	cmp	r3, #1
    c49c:	d01b      	beq.n	c4d6 <_dtoa_r+0xdba>
    c49e:	9808      	ldr	r0, [sp, #32]
    c4a0:	9909      	ldr	r1, [sp, #36]	; 0x24
    c4a2:	0025      	movs	r5, r4
    c4a4:	2200      	movs	r2, #0
    c4a6:	4b7b      	ldr	r3, [pc, #492]	; (c694 <_dtoa_r+0xf78>)
    c4a8:	f7f9 fb0c 	bl	5ac4 <__aeabi_dmul>
    c4ac:	000f      	movs	r7, r1
    c4ae:	0006      	movs	r6, r0
    c4b0:	f7fa f89e 	bl	65f0 <__aeabi_d2iz>
    c4b4:	0004      	movs	r4, r0
    c4b6:	f7fa f8cf 	bl	6658 <__aeabi_i2d>
    c4ba:	3430      	adds	r4, #48	; 0x30
    c4bc:	0002      	movs	r2, r0
    c4be:	000b      	movs	r3, r1
    c4c0:	0030      	movs	r0, r6
    c4c2:	0039      	movs	r1, r7
    c4c4:	f7f9 fd7e 	bl	5fc4 <__aeabi_dsub>
    c4c8:	702c      	strb	r4, [r5, #0]
    c4ca:	3501      	adds	r5, #1
    c4cc:	45a8      	cmp	r8, r5
    c4ce:	d1e9      	bne.n	c4a4 <_dtoa_r+0xd88>
    c4d0:	4644      	mov	r4, r8
    c4d2:	9008      	str	r0, [sp, #32]
    c4d4:	9109      	str	r1, [sp, #36]	; 0x24
    c4d6:	9814      	ldr	r0, [sp, #80]	; 0x50
    c4d8:	9915      	ldr	r1, [sp, #84]	; 0x54
    c4da:	2200      	movs	r2, #0
    c4dc:	4b6e      	ldr	r3, [pc, #440]	; (c698 <_dtoa_r+0xf7c>)
    c4de:	f004 fa27 	bl	10930 <__aeabi_dadd>
    c4e2:	9a08      	ldr	r2, [sp, #32]
    c4e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c4e6:	f7fa fa23 	bl	6930 <__aeabi_dcmplt>
    c4ea:	2800      	cmp	r0, #0
    c4ec:	d067      	beq.n	c5be <_dtoa_r+0xea2>
    c4ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c4f0:	1e65      	subs	r5, r4, #1
    c4f2:	9303      	str	r3, [sp, #12]
    c4f4:	782f      	ldrb	r7, [r5, #0]
    c4f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c4f8:	e42e      	b.n	bd58 <_dtoa_r+0x63c>
    c4fa:	4643      	mov	r3, r8
    c4fc:	46b3      	mov	fp, r6
    c4fe:	930c      	str	r3, [sp, #48]	; 0x30
    c500:	9e04      	ldr	r6, [sp, #16]
    c502:	9b06      	ldr	r3, [sp, #24]
    c504:	46a8      	mov	r8, r5
    c506:	4699      	mov	r9, r3
    c508:	4655      	mov	r5, sl
    c50a:	46ba      	mov	sl, r7
    c50c:	2e39      	cmp	r6, #57	; 0x39
    c50e:	d04d      	beq.n	c5ac <_dtoa_r+0xe90>
    c510:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c512:	3601      	adds	r6, #1
    c514:	4647      	mov	r7, r8
    c516:	1c6c      	adds	r4, r5, #1
    c518:	702e      	strb	r6, [r5, #0]
    c51a:	4698      	mov	r8, r3
    c51c:	e5f5      	b.n	c10a <_dtoa_r+0x9ee>
    c51e:	4642      	mov	r2, r8
    c520:	9b06      	ldr	r3, [sp, #24]
    c522:	46b3      	mov	fp, r6
    c524:	46ba      	mov	sl, r7
    c526:	9e04      	ldr	r6, [sp, #16]
    c528:	4699      	mov	r9, r3
    c52a:	002f      	movs	r7, r5
    c52c:	4690      	mov	r8, r2
    c52e:	e5d1      	b.n	c0d4 <_dtoa_r+0x9b8>
    c530:	9b06      	ldr	r3, [sp, #24]
    c532:	9a07      	ldr	r2, [sp, #28]
    c534:	1a9b      	subs	r3, r3, r2
    c536:	9308      	str	r3, [sp, #32]
    c538:	2300      	movs	r3, #0
    c53a:	e427      	b.n	bd8c <_dtoa_r+0x670>
    c53c:	2401      	movs	r4, #1
    c53e:	e5c5      	b.n	c0cc <_dtoa_r+0x9b0>
    c540:	2336      	movs	r3, #54	; 0x36
    c542:	9a16      	ldr	r2, [sp, #88]	; 0x58
    c544:	464c      	mov	r4, r9
    c546:	1a9b      	subs	r3, r3, r2
    c548:	9a06      	ldr	r2, [sp, #24]
    c54a:	9208      	str	r2, [sp, #32]
    c54c:	e41e      	b.n	bd8c <_dtoa_r+0x670>
    c54e:	2302      	movs	r3, #2
    c550:	9e10      	ldr	r6, [sp, #64]	; 0x40
    c552:	9f11      	ldr	r7, [sp, #68]	; 0x44
    c554:	4698      	mov	r8, r3
    c556:	f7ff fa31 	bl	b9bc <_dtoa_r+0x2a0>
    c55a:	9b07      	ldr	r3, [sp, #28]
    c55c:	2b00      	cmp	r3, #0
    c55e:	d100      	bne.n	c562 <_dtoa_r+0xe46>
    c560:	e68e      	b.n	c280 <_dtoa_r+0xb64>
    c562:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    c564:	2c00      	cmp	r4, #0
    c566:	dc00      	bgt.n	c56a <_dtoa_r+0xe4e>
    c568:	e712      	b.n	c390 <_dtoa_r+0xc74>
    c56a:	9b03      	ldr	r3, [sp, #12]
    c56c:	2200      	movs	r2, #0
    c56e:	3b01      	subs	r3, #1
    c570:	9313      	str	r3, [sp, #76]	; 0x4c
    c572:	0030      	movs	r0, r6
    c574:	4b47      	ldr	r3, [pc, #284]	; (c694 <_dtoa_r+0xf78>)
    c576:	0039      	movs	r1, r7
    c578:	f7f9 faa4 	bl	5ac4 <__aeabi_dmul>
    c57c:	0006      	movs	r6, r0
    c57e:	4640      	mov	r0, r8
    c580:	000f      	movs	r7, r1
    c582:	3001      	adds	r0, #1
    c584:	f7fa f868 	bl	6658 <__aeabi_i2d>
    c588:	0032      	movs	r2, r6
    c58a:	003b      	movs	r3, r7
    c58c:	f7f9 fa9a 	bl	5ac4 <__aeabi_dmul>
    c590:	2200      	movs	r2, #0
    c592:	4b42      	ldr	r3, [pc, #264]	; (c69c <_dtoa_r+0xf80>)
    c594:	f004 f9cc 	bl	10930 <__aeabi_dadd>
    c598:	4a41      	ldr	r2, [pc, #260]	; (c6a0 <_dtoa_r+0xf84>)
    c59a:	000b      	movs	r3, r1
    c59c:	4694      	mov	ip, r2
    c59e:	4463      	add	r3, ip
    c5a0:	9008      	str	r0, [sp, #32]
    c5a2:	9109      	str	r1, [sp, #36]	; 0x24
    c5a4:	9412      	str	r4, [sp, #72]	; 0x48
    c5a6:	9309      	str	r3, [sp, #36]	; 0x24
    c5a8:	f7ff fa30 	bl	ba0c <_dtoa_r+0x2f0>
    c5ac:	2339      	movs	r3, #57	; 0x39
    c5ae:	702b      	strb	r3, [r5, #0]
    c5b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c5b2:	4647      	mov	r7, r8
    c5b4:	1c6c      	adds	r4, r5, #1
    c5b6:	4698      	mov	r8, r3
    c5b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    c5ba:	2339      	movs	r3, #57	; 0x39
    c5bc:	e5a1      	b.n	c102 <_dtoa_r+0x9e6>
    c5be:	9a14      	ldr	r2, [sp, #80]	; 0x50
    c5c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
    c5c2:	2000      	movs	r0, #0
    c5c4:	4934      	ldr	r1, [pc, #208]	; (c698 <_dtoa_r+0xf7c>)
    c5c6:	f7f9 fcfd 	bl	5fc4 <__aeabi_dsub>
    c5ca:	9a08      	ldr	r2, [sp, #32]
    c5cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c5ce:	f7fa f9c3 	bl	6958 <__aeabi_dcmpgt>
    c5d2:	2800      	cmp	r0, #0
    c5d4:	d101      	bne.n	c5da <_dtoa_r+0xebe>
    c5d6:	e6db      	b.n	c390 <_dtoa_r+0xc74>
    c5d8:	001c      	movs	r4, r3
    c5da:	1e63      	subs	r3, r4, #1
    c5dc:	781a      	ldrb	r2, [r3, #0]
    c5de:	2a30      	cmp	r2, #48	; 0x30
    c5e0:	d0fa      	beq.n	c5d8 <_dtoa_r+0xebc>
    c5e2:	f7ff fac8 	bl	bb76 <_dtoa_r+0x45a>
    c5e6:	4643      	mov	r3, r8
    c5e8:	46b3      	mov	fp, r6
    c5ea:	930c      	str	r3, [sp, #48]	; 0x30
    c5ec:	9e04      	ldr	r6, [sp, #16]
    c5ee:	9b06      	ldr	r3, [sp, #24]
    c5f0:	46a8      	mov	r8, r5
    c5f2:	4699      	mov	r9, r3
    c5f4:	4655      	mov	r5, sl
    c5f6:	46ba      	mov	sl, r7
    c5f8:	2e39      	cmp	r6, #57	; 0x39
    c5fa:	d0d7      	beq.n	c5ac <_dtoa_r+0xe90>
    c5fc:	2c00      	cmp	r4, #0
    c5fe:	dd00      	ble.n	c602 <_dtoa_r+0xee6>
    c600:	e6b1      	b.n	c366 <_dtoa_r+0xc4a>
    c602:	e6b2      	b.n	c36a <_dtoa_r+0xc4e>
    c604:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    c606:	464d      	mov	r5, r9
    c608:	9203      	str	r2, [sp, #12]
    c60a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c60c:	f7ff fba4 	bl	bd58 <_dtoa_r+0x63c>
    c610:	2800      	cmp	r0, #0
    c612:	d000      	beq.n	c616 <_dtoa_r+0xefa>
    c614:	e6a9      	b.n	c36a <_dtoa_r+0xc4e>
    c616:	07f3      	lsls	r3, r6, #31
    c618:	d400      	bmi.n	c61c <_dtoa_r+0xf00>
    c61a:	e6a6      	b.n	c36a <_dtoa_r+0xc4e>
    c61c:	e6a0      	b.n	c360 <_dtoa_r+0xc44>
    c61e:	2300      	movs	r3, #0
    c620:	4641      	mov	r1, r8
    c622:	220a      	movs	r2, #10
    c624:	4650      	mov	r0, sl
    c626:	f001 f90f 	bl	d848 <__multadd>
    c62a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c62c:	4680      	mov	r8, r0
    c62e:	2b00      	cmp	r3, #0
    c630:	dd01      	ble.n	c636 <_dtoa_r+0xf1a>
    c632:	9307      	str	r3, [sp, #28]
    c634:	e486      	b.n	bf44 <_dtoa_r+0x828>
    c636:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c638:	2b02      	cmp	r3, #2
    c63a:	dc1f      	bgt.n	c67c <_dtoa_r+0xf60>
    c63c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c63e:	9307      	str	r3, [sp, #28]
    c640:	e480      	b.n	bf44 <_dtoa_r+0x828>
    c642:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c644:	2b02      	cmp	r3, #2
    c646:	dc19      	bgt.n	c67c <_dtoa_r+0xf60>
    c648:	4649      	mov	r1, r9
    c64a:	f7fe ffbd 	bl	b5c8 <quorem>
    c64e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c650:	3030      	adds	r0, #48	; 0x30
    c652:	7018      	strb	r0, [r3, #0]
    c654:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c656:	0006      	movs	r6, r0
    c658:	9307      	str	r3, [sp, #28]
    c65a:	e533      	b.n	c0c4 <_dtoa_r+0x9a8>
    c65c:	2302      	movs	r3, #2
    c65e:	4698      	mov	r8, r3
    c660:	f7ff f9ac 	bl	b9bc <_dtoa_r+0x2a0>
    c664:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c666:	9c14      	ldr	r4, [sp, #80]	; 0x50
    c668:	9303      	str	r3, [sp, #12]
    c66a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c66c:	001d      	movs	r5, r3
    c66e:	f7ff fb73 	bl	bd58 <_dtoa_r+0x63c>
    c672:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c674:	9c14      	ldr	r4, [sp, #80]	; 0x50
    c676:	9303      	str	r3, [sp, #12]
    c678:	f7ff fa7f 	bl	bb7a <_dtoa_r+0x45e>
    c67c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c67e:	9307      	str	r3, [sp, #28]
    c680:	e5d6      	b.n	c230 <_dtoa_r+0xb14>
    c682:	2b04      	cmp	r3, #4
    c684:	d100      	bne.n	c688 <_dtoa_r+0xf6c>
    c686:	e43f      	b.n	bf08 <_dtoa_r+0x7ec>
    c688:	233c      	movs	r3, #60	; 0x3c
    c68a:	1a18      	subs	r0, r3, r0
    c68c:	e4d7      	b.n	c03e <_dtoa_r+0x922>
    c68e:	46c0      	nop			; (mov r8, r8)
    c690:	00014068 	.word	0x00014068
    c694:	40240000 	.word	0x40240000
    c698:	3fe00000 	.word	0x3fe00000
    c69c:	401c0000 	.word	0x401c0000
    c6a0:	fcc00000 	.word	0xfcc00000

0000c6a4 <__sflush_r>:
    c6a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    c6a6:	46c6      	mov	lr, r8
    c6a8:	b500      	push	{lr}
    c6aa:	230c      	movs	r3, #12
    c6ac:	5eca      	ldrsh	r2, [r1, r3]
    c6ae:	4680      	mov	r8, r0
    c6b0:	b293      	uxth	r3, r2
    c6b2:	000c      	movs	r4, r1
    c6b4:	0719      	lsls	r1, r3, #28
    c6b6:	d440      	bmi.n	c73a <__sflush_r+0x96>
    c6b8:	2380      	movs	r3, #128	; 0x80
    c6ba:	011b      	lsls	r3, r3, #4
    c6bc:	4313      	orrs	r3, r2
    c6be:	6862      	ldr	r2, [r4, #4]
    c6c0:	81a3      	strh	r3, [r4, #12]
    c6c2:	2a00      	cmp	r2, #0
    c6c4:	dc00      	bgt.n	c6c8 <__sflush_r+0x24>
    c6c6:	e070      	b.n	c7aa <__sflush_r+0x106>
    c6c8:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    c6ca:	2e00      	cmp	r6, #0
    c6cc:	d031      	beq.n	c732 <__sflush_r+0x8e>
    c6ce:	4642      	mov	r2, r8
    c6d0:	4641      	mov	r1, r8
    c6d2:	6815      	ldr	r5, [r2, #0]
    c6d4:	2200      	movs	r2, #0
    c6d6:	b29b      	uxth	r3, r3
    c6d8:	600a      	str	r2, [r1, #0]
    c6da:	04da      	lsls	r2, r3, #19
    c6dc:	d400      	bmi.n	c6e0 <__sflush_r+0x3c>
    c6de:	e069      	b.n	c7b4 <__sflush_r+0x110>
    c6e0:	6d22      	ldr	r2, [r4, #80]	; 0x50
    c6e2:	075b      	lsls	r3, r3, #29
    c6e4:	d506      	bpl.n	c6f4 <__sflush_r+0x50>
    c6e6:	6863      	ldr	r3, [r4, #4]
    c6e8:	1ad2      	subs	r2, r2, r3
    c6ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
    c6ec:	2b00      	cmp	r3, #0
    c6ee:	d001      	beq.n	c6f4 <__sflush_r+0x50>
    c6f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    c6f2:	1ad2      	subs	r2, r2, r3
    c6f4:	2300      	movs	r3, #0
    c6f6:	69e1      	ldr	r1, [r4, #28]
    c6f8:	4640      	mov	r0, r8
    c6fa:	47b0      	blx	r6
    c6fc:	1c43      	adds	r3, r0, #1
    c6fe:	d03d      	beq.n	c77c <__sflush_r+0xd8>
    c700:	89a3      	ldrh	r3, [r4, #12]
    c702:	4a3a      	ldr	r2, [pc, #232]	; (c7ec <__sflush_r+0x148>)
    c704:	4013      	ands	r3, r2
    c706:	2200      	movs	r2, #0
    c708:	6062      	str	r2, [r4, #4]
    c70a:	6922      	ldr	r2, [r4, #16]
    c70c:	b21b      	sxth	r3, r3
    c70e:	81a3      	strh	r3, [r4, #12]
    c710:	6022      	str	r2, [r4, #0]
    c712:	04db      	lsls	r3, r3, #19
    c714:	d447      	bmi.n	c7a6 <__sflush_r+0x102>
    c716:	4643      	mov	r3, r8
    c718:	6b21      	ldr	r1, [r4, #48]	; 0x30
    c71a:	601d      	str	r5, [r3, #0]
    c71c:	2900      	cmp	r1, #0
    c71e:	d008      	beq.n	c732 <__sflush_r+0x8e>
    c720:	0023      	movs	r3, r4
    c722:	3340      	adds	r3, #64	; 0x40
    c724:	4299      	cmp	r1, r3
    c726:	d002      	beq.n	c72e <__sflush_r+0x8a>
    c728:	4640      	mov	r0, r8
    c72a:	f000 f967 	bl	c9fc <_free_r>
    c72e:	2300      	movs	r3, #0
    c730:	6323      	str	r3, [r4, #48]	; 0x30
    c732:	2000      	movs	r0, #0
    c734:	bc04      	pop	{r2}
    c736:	4690      	mov	r8, r2
    c738:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c73a:	6926      	ldr	r6, [r4, #16]
    c73c:	2e00      	cmp	r6, #0
    c73e:	d0f8      	beq.n	c732 <__sflush_r+0x8e>
    c740:	6822      	ldr	r2, [r4, #0]
    c742:	6026      	str	r6, [r4, #0]
    c744:	1b95      	subs	r5, r2, r6
    c746:	2200      	movs	r2, #0
    c748:	079b      	lsls	r3, r3, #30
    c74a:	d100      	bne.n	c74e <__sflush_r+0xaa>
    c74c:	6962      	ldr	r2, [r4, #20]
    c74e:	60a2      	str	r2, [r4, #8]
    c750:	2d00      	cmp	r5, #0
    c752:	dc04      	bgt.n	c75e <__sflush_r+0xba>
    c754:	e7ed      	b.n	c732 <__sflush_r+0x8e>
    c756:	1836      	adds	r6, r6, r0
    c758:	1a2d      	subs	r5, r5, r0
    c75a:	2d00      	cmp	r5, #0
    c75c:	dde9      	ble.n	c732 <__sflush_r+0x8e>
    c75e:	002b      	movs	r3, r5
    c760:	0032      	movs	r2, r6
    c762:	69e1      	ldr	r1, [r4, #28]
    c764:	4640      	mov	r0, r8
    c766:	6a67      	ldr	r7, [r4, #36]	; 0x24
    c768:	47b8      	blx	r7
    c76a:	2800      	cmp	r0, #0
    c76c:	dcf3      	bgt.n	c756 <__sflush_r+0xb2>
    c76e:	2240      	movs	r2, #64	; 0x40
    c770:	2001      	movs	r0, #1
    c772:	89a3      	ldrh	r3, [r4, #12]
    c774:	4240      	negs	r0, r0
    c776:	4313      	orrs	r3, r2
    c778:	81a3      	strh	r3, [r4, #12]
    c77a:	e7db      	b.n	c734 <__sflush_r+0x90>
    c77c:	4643      	mov	r3, r8
    c77e:	6819      	ldr	r1, [r3, #0]
    c780:	291d      	cmp	r1, #29
    c782:	d8f4      	bhi.n	c76e <__sflush_r+0xca>
    c784:	4b1a      	ldr	r3, [pc, #104]	; (c7f0 <__sflush_r+0x14c>)
    c786:	2201      	movs	r2, #1
    c788:	40cb      	lsrs	r3, r1
    c78a:	439a      	bics	r2, r3
    c78c:	d1ef      	bne.n	c76e <__sflush_r+0xca>
    c78e:	89a3      	ldrh	r3, [r4, #12]
    c790:	4e16      	ldr	r6, [pc, #88]	; (c7ec <__sflush_r+0x148>)
    c792:	6062      	str	r2, [r4, #4]
    c794:	4033      	ands	r3, r6
    c796:	6922      	ldr	r2, [r4, #16]
    c798:	b21b      	sxth	r3, r3
    c79a:	81a3      	strh	r3, [r4, #12]
    c79c:	6022      	str	r2, [r4, #0]
    c79e:	04db      	lsls	r3, r3, #19
    c7a0:	d5b9      	bpl.n	c716 <__sflush_r+0x72>
    c7a2:	2900      	cmp	r1, #0
    c7a4:	d1b7      	bne.n	c716 <__sflush_r+0x72>
    c7a6:	6520      	str	r0, [r4, #80]	; 0x50
    c7a8:	e7b5      	b.n	c716 <__sflush_r+0x72>
    c7aa:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    c7ac:	2a00      	cmp	r2, #0
    c7ae:	dd00      	ble.n	c7b2 <__sflush_r+0x10e>
    c7b0:	e78a      	b.n	c6c8 <__sflush_r+0x24>
    c7b2:	e7be      	b.n	c732 <__sflush_r+0x8e>
    c7b4:	2200      	movs	r2, #0
    c7b6:	2301      	movs	r3, #1
    c7b8:	69e1      	ldr	r1, [r4, #28]
    c7ba:	4640      	mov	r0, r8
    c7bc:	47b0      	blx	r6
    c7be:	0002      	movs	r2, r0
    c7c0:	1c43      	adds	r3, r0, #1
    c7c2:	d002      	beq.n	c7ca <__sflush_r+0x126>
    c7c4:	89a3      	ldrh	r3, [r4, #12]
    c7c6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    c7c8:	e78b      	b.n	c6e2 <__sflush_r+0x3e>
    c7ca:	4643      	mov	r3, r8
    c7cc:	681b      	ldr	r3, [r3, #0]
    c7ce:	2b00      	cmp	r3, #0
    c7d0:	d0f8      	beq.n	c7c4 <__sflush_r+0x120>
    c7d2:	2b1d      	cmp	r3, #29
    c7d4:	d001      	beq.n	c7da <__sflush_r+0x136>
    c7d6:	2b16      	cmp	r3, #22
    c7d8:	d103      	bne.n	c7e2 <__sflush_r+0x13e>
    c7da:	4643      	mov	r3, r8
    c7dc:	2000      	movs	r0, #0
    c7de:	601d      	str	r5, [r3, #0]
    c7e0:	e7a8      	b.n	c734 <__sflush_r+0x90>
    c7e2:	2140      	movs	r1, #64	; 0x40
    c7e4:	89a3      	ldrh	r3, [r4, #12]
    c7e6:	430b      	orrs	r3, r1
    c7e8:	81a3      	strh	r3, [r4, #12]
    c7ea:	e7a3      	b.n	c734 <__sflush_r+0x90>
    c7ec:	fffff7ff 	.word	0xfffff7ff
    c7f0:	20400001 	.word	0x20400001

0000c7f4 <_fflush_r>:
    c7f4:	b570      	push	{r4, r5, r6, lr}
    c7f6:	0005      	movs	r5, r0
    c7f8:	000c      	movs	r4, r1
    c7fa:	2800      	cmp	r0, #0
    c7fc:	d002      	beq.n	c804 <_fflush_r+0x10>
    c7fe:	6b83      	ldr	r3, [r0, #56]	; 0x38
    c800:	2b00      	cmp	r3, #0
    c802:	d016      	beq.n	c832 <_fflush_r+0x3e>
    c804:	220c      	movs	r2, #12
    c806:	5ea3      	ldrsh	r3, [r4, r2]
    c808:	2600      	movs	r6, #0
    c80a:	2b00      	cmp	r3, #0
    c80c:	d00f      	beq.n	c82e <_fflush_r+0x3a>
    c80e:	6e62      	ldr	r2, [r4, #100]	; 0x64
    c810:	07d2      	lsls	r2, r2, #31
    c812:	d401      	bmi.n	c818 <_fflush_r+0x24>
    c814:	059b      	lsls	r3, r3, #22
    c816:	d513      	bpl.n	c840 <_fflush_r+0x4c>
    c818:	0021      	movs	r1, r4
    c81a:	0028      	movs	r0, r5
    c81c:	f7ff ff42 	bl	c6a4 <__sflush_r>
    c820:	6e63      	ldr	r3, [r4, #100]	; 0x64
    c822:	0006      	movs	r6, r0
    c824:	07db      	lsls	r3, r3, #31
    c826:	d402      	bmi.n	c82e <_fflush_r+0x3a>
    c828:	89a3      	ldrh	r3, [r4, #12]
    c82a:	059b      	lsls	r3, r3, #22
    c82c:	d504      	bpl.n	c838 <_fflush_r+0x44>
    c82e:	0030      	movs	r0, r6
    c830:	bd70      	pop	{r4, r5, r6, pc}
    c832:	f000 f839 	bl	c8a8 <__sinit>
    c836:	e7e5      	b.n	c804 <_fflush_r+0x10>
    c838:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c83a:	f000 fba9 	bl	cf90 <__retarget_lock_release_recursive>
    c83e:	e7f6      	b.n	c82e <_fflush_r+0x3a>
    c840:	6da0      	ldr	r0, [r4, #88]	; 0x58
    c842:	f000 fba3 	bl	cf8c <__retarget_lock_acquire_recursive>
    c846:	e7e7      	b.n	c818 <_fflush_r+0x24>

0000c848 <_cleanup_r>:
    c848:	b510      	push	{r4, lr}
    c84a:	4902      	ldr	r1, [pc, #8]	; (c854 <_cleanup_r+0xc>)
    c84c:	f000 fb36 	bl	cebc <_fwalk_reent>
    c850:	bd10      	pop	{r4, pc}
    c852:	46c0      	nop			; (mov r8, r8)
    c854:	0000fe95 	.word	0x0000fe95

0000c858 <std.isra.0>:
    c858:	2300      	movs	r3, #0
    c85a:	b510      	push	{r4, lr}
    c85c:	0004      	movs	r4, r0
    c85e:	6003      	str	r3, [r0, #0]
    c860:	6043      	str	r3, [r0, #4]
    c862:	6083      	str	r3, [r0, #8]
    c864:	8181      	strh	r1, [r0, #12]
    c866:	6643      	str	r3, [r0, #100]	; 0x64
    c868:	81c2      	strh	r2, [r0, #14]
    c86a:	6103      	str	r3, [r0, #16]
    c86c:	6143      	str	r3, [r0, #20]
    c86e:	6183      	str	r3, [r0, #24]
    c870:	2208      	movs	r2, #8
    c872:	2100      	movs	r1, #0
    c874:	305c      	adds	r0, #92	; 0x5c
    c876:	f7fa fa59 	bl	6d2c <memset>
    c87a:	0020      	movs	r0, r4
    c87c:	4b06      	ldr	r3, [pc, #24]	; (c898 <std.isra.0+0x40>)
    c87e:	61e4      	str	r4, [r4, #28]
    c880:	6223      	str	r3, [r4, #32]
    c882:	4b06      	ldr	r3, [pc, #24]	; (c89c <std.isra.0+0x44>)
    c884:	3058      	adds	r0, #88	; 0x58
    c886:	6263      	str	r3, [r4, #36]	; 0x24
    c888:	4b05      	ldr	r3, [pc, #20]	; (c8a0 <std.isra.0+0x48>)
    c88a:	62a3      	str	r3, [r4, #40]	; 0x28
    c88c:	4b05      	ldr	r3, [pc, #20]	; (c8a4 <std.isra.0+0x4c>)
    c88e:	62e3      	str	r3, [r4, #44]	; 0x2c
    c890:	f000 fb78 	bl	cf84 <__retarget_lock_init_recursive>
    c894:	bd10      	pop	{r4, pc}
    c896:	46c0      	nop			; (mov r8, r8)
    c898:	00006fb1 	.word	0x00006fb1
    c89c:	00006fdd 	.word	0x00006fdd
    c8a0:	00007019 	.word	0x00007019
    c8a4:	00007045 	.word	0x00007045

0000c8a8 <__sinit>:
    c8a8:	b570      	push	{r4, r5, r6, lr}
    c8aa:	0004      	movs	r4, r0
    c8ac:	4d14      	ldr	r5, [pc, #80]	; (c900 <__sinit+0x58>)
    c8ae:	0028      	movs	r0, r5
    c8b0:	f000 fb6c 	bl	cf8c <__retarget_lock_acquire_recursive>
    c8b4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    c8b6:	2b00      	cmp	r3, #0
    c8b8:	d11d      	bne.n	c8f6 <__sinit+0x4e>
    c8ba:	4a12      	ldr	r2, [pc, #72]	; (c904 <__sinit+0x5c>)
    c8bc:	2104      	movs	r1, #4
    c8be:	63e2      	str	r2, [r4, #60]	; 0x3c
    c8c0:	22b8      	movs	r2, #184	; 0xb8
    c8c2:	0092      	lsls	r2, r2, #2
    c8c4:	50a3      	str	r3, [r4, r2]
    c8c6:	23b9      	movs	r3, #185	; 0xb9
    c8c8:	2203      	movs	r2, #3
    c8ca:	009b      	lsls	r3, r3, #2
    c8cc:	50e2      	str	r2, [r4, r3]
    c8ce:	3308      	adds	r3, #8
    c8d0:	18e2      	adds	r2, r4, r3
    c8d2:	3b04      	subs	r3, #4
    c8d4:	50e2      	str	r2, [r4, r3]
    c8d6:	6860      	ldr	r0, [r4, #4]
    c8d8:	2200      	movs	r2, #0
    c8da:	f7ff ffbd 	bl	c858 <std.isra.0>
    c8de:	2201      	movs	r2, #1
    c8e0:	2109      	movs	r1, #9
    c8e2:	68a0      	ldr	r0, [r4, #8]
    c8e4:	f7ff ffb8 	bl	c858 <std.isra.0>
    c8e8:	2202      	movs	r2, #2
    c8ea:	2112      	movs	r1, #18
    c8ec:	68e0      	ldr	r0, [r4, #12]
    c8ee:	f7ff ffb3 	bl	c858 <std.isra.0>
    c8f2:	2301      	movs	r3, #1
    c8f4:	63a3      	str	r3, [r4, #56]	; 0x38
    c8f6:	0028      	movs	r0, r5
    c8f8:	f000 fb4a 	bl	cf90 <__retarget_lock_release_recursive>
    c8fc:	bd70      	pop	{r4, r5, r6, pc}
    c8fe:	46c0      	nop			; (mov r8, r8)
    c900:	20001660 	.word	0x20001660
    c904:	0000c849 	.word	0x0000c849

0000c908 <__sfp_lock_acquire>:
    c908:	b510      	push	{r4, lr}
    c90a:	4802      	ldr	r0, [pc, #8]	; (c914 <__sfp_lock_acquire+0xc>)
    c90c:	f000 fb3e 	bl	cf8c <__retarget_lock_acquire_recursive>
    c910:	bd10      	pop	{r4, pc}
    c912:	46c0      	nop			; (mov r8, r8)
    c914:	20001674 	.word	0x20001674

0000c918 <__sfp_lock_release>:
    c918:	b510      	push	{r4, lr}
    c91a:	4802      	ldr	r0, [pc, #8]	; (c924 <__sfp_lock_release+0xc>)
    c91c:	f000 fb38 	bl	cf90 <__retarget_lock_release_recursive>
    c920:	bd10      	pop	{r4, pc}
    c922:	46c0      	nop			; (mov r8, r8)
    c924:	20001674 	.word	0x20001674

0000c928 <__libc_fini_array>:
    c928:	b570      	push	{r4, r5, r6, lr}
    c92a:	4b09      	ldr	r3, [pc, #36]	; (c950 <__libc_fini_array+0x28>)
    c92c:	4c09      	ldr	r4, [pc, #36]	; (c954 <__libc_fini_array+0x2c>)
    c92e:	1ae4      	subs	r4, r4, r3
    c930:	10a4      	asrs	r4, r4, #2
    c932:	d009      	beq.n	c948 <__libc_fini_array+0x20>
    c934:	4a08      	ldr	r2, [pc, #32]	; (c958 <__libc_fini_array+0x30>)
    c936:	18a5      	adds	r5, r4, r2
    c938:	00ad      	lsls	r5, r5, #2
    c93a:	18ed      	adds	r5, r5, r3
    c93c:	682b      	ldr	r3, [r5, #0]
    c93e:	3c01      	subs	r4, #1
    c940:	4798      	blx	r3
    c942:	3d04      	subs	r5, #4
    c944:	2c00      	cmp	r4, #0
    c946:	d1f9      	bne.n	c93c <__libc_fini_array+0x14>
    c948:	f007 fd9e 	bl	14488 <_fini>
    c94c:	bd70      	pop	{r4, r5, r6, pc}
    c94e:	46c0      	nop			; (mov r8, r8)
    c950:	00014494 	.word	0x00014494
    c954:	00014498 	.word	0x00014498
    c958:	3fffffff 	.word	0x3fffffff

0000c95c <_malloc_trim_r>:
    c95c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    c95e:	000c      	movs	r4, r1
    c960:	0006      	movs	r6, r0
    c962:	f000 ff2f 	bl	d7c4 <__malloc_lock>
    c966:	4f20      	ldr	r7, [pc, #128]	; (c9e8 <_malloc_trim_r+0x8c>)
    c968:	68bb      	ldr	r3, [r7, #8]
    c96a:	685d      	ldr	r5, [r3, #4]
    c96c:	2303      	movs	r3, #3
    c96e:	439d      	bics	r5, r3
    c970:	4b1e      	ldr	r3, [pc, #120]	; (c9ec <_malloc_trim_r+0x90>)
    c972:	1b2c      	subs	r4, r5, r4
    c974:	469c      	mov	ip, r3
    c976:	4464      	add	r4, ip
    c978:	0b24      	lsrs	r4, r4, #12
    c97a:	4b1d      	ldr	r3, [pc, #116]	; (c9f0 <_malloc_trim_r+0x94>)
    c97c:	3c01      	subs	r4, #1
    c97e:	0324      	lsls	r4, r4, #12
    c980:	429c      	cmp	r4, r3
    c982:	dd07      	ble.n	c994 <_malloc_trim_r+0x38>
    c984:	2100      	movs	r1, #0
    c986:	0030      	movs	r0, r6
    c988:	f001 fdac 	bl	e4e4 <_sbrk_r>
    c98c:	68bb      	ldr	r3, [r7, #8]
    c98e:	195b      	adds	r3, r3, r5
    c990:	4298      	cmp	r0, r3
    c992:	d004      	beq.n	c99e <_malloc_trim_r+0x42>
    c994:	0030      	movs	r0, r6
    c996:	f000 ff1d 	bl	d7d4 <__malloc_unlock>
    c99a:	2000      	movs	r0, #0
    c99c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    c99e:	4261      	negs	r1, r4
    c9a0:	0030      	movs	r0, r6
    c9a2:	f001 fd9f 	bl	e4e4 <_sbrk_r>
    c9a6:	1c43      	adds	r3, r0, #1
    c9a8:	d00d      	beq.n	c9c6 <_malloc_trim_r+0x6a>
    c9aa:	2201      	movs	r2, #1
    c9ac:	68bb      	ldr	r3, [r7, #8]
    c9ae:	1b2d      	subs	r5, r5, r4
    c9b0:	4315      	orrs	r5, r2
    c9b2:	605d      	str	r5, [r3, #4]
    c9b4:	4b0f      	ldr	r3, [pc, #60]	; (c9f4 <_malloc_trim_r+0x98>)
    c9b6:	0030      	movs	r0, r6
    c9b8:	681a      	ldr	r2, [r3, #0]
    c9ba:	1b14      	subs	r4, r2, r4
    c9bc:	601c      	str	r4, [r3, #0]
    c9be:	f000 ff09 	bl	d7d4 <__malloc_unlock>
    c9c2:	2001      	movs	r0, #1
    c9c4:	e7ea      	b.n	c99c <_malloc_trim_r+0x40>
    c9c6:	2100      	movs	r1, #0
    c9c8:	0030      	movs	r0, r6
    c9ca:	f001 fd8b 	bl	e4e4 <_sbrk_r>
    c9ce:	68ba      	ldr	r2, [r7, #8]
    c9d0:	1a83      	subs	r3, r0, r2
    c9d2:	2b0f      	cmp	r3, #15
    c9d4:	ddde      	ble.n	c994 <_malloc_trim_r+0x38>
    c9d6:	4908      	ldr	r1, [pc, #32]	; (c9f8 <_malloc_trim_r+0x9c>)
    c9d8:	6809      	ldr	r1, [r1, #0]
    c9da:	1a40      	subs	r0, r0, r1
    c9dc:	4905      	ldr	r1, [pc, #20]	; (c9f4 <_malloc_trim_r+0x98>)
    c9de:	6008      	str	r0, [r1, #0]
    c9e0:	2101      	movs	r1, #1
    c9e2:	430b      	orrs	r3, r1
    c9e4:	6053      	str	r3, [r2, #4]
    c9e6:	e7d5      	b.n	c994 <_malloc_trim_r+0x38>
    c9e8:	20000608 	.word	0x20000608
    c9ec:	00000fef 	.word	0x00000fef
    c9f0:	00000fff 	.word	0x00000fff
    c9f4:	20000b48 	.word	0x20000b48
    c9f8:	20000a10 	.word	0x20000a10

0000c9fc <_free_r>:
    c9fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    c9fe:	0004      	movs	r4, r0
    ca00:	1e0d      	subs	r5, r1, #0
    ca02:	d03c      	beq.n	ca7e <_free_r+0x82>
    ca04:	f000 fede 	bl	d7c4 <__malloc_lock>
    ca08:	0029      	movs	r1, r5
    ca0a:	3908      	subs	r1, #8
    ca0c:	6848      	ldr	r0, [r1, #4]
    ca0e:	2301      	movs	r3, #1
    ca10:	0005      	movs	r5, r0
    ca12:	2603      	movs	r6, #3
    ca14:	439d      	bics	r5, r3
    ca16:	194a      	adds	r2, r1, r5
    ca18:	469c      	mov	ip, r3
    ca1a:	4f61      	ldr	r7, [pc, #388]	; (cba0 <_free_r+0x1a4>)
    ca1c:	6853      	ldr	r3, [r2, #4]
    ca1e:	43b3      	bics	r3, r6
    ca20:	68be      	ldr	r6, [r7, #8]
    ca22:	42b2      	cmp	r2, r6
    ca24:	d056      	beq.n	cad4 <_free_r+0xd8>
    ca26:	4666      	mov	r6, ip
    ca28:	6053      	str	r3, [r2, #4]
    ca2a:	4206      	tst	r6, r0
    ca2c:	d10a      	bne.n	ca44 <_free_r+0x48>
    ca2e:	003e      	movs	r6, r7
    ca30:	6808      	ldr	r0, [r1, #0]
    ca32:	3608      	adds	r6, #8
    ca34:	1a09      	subs	r1, r1, r0
    ca36:	182d      	adds	r5, r5, r0
    ca38:	6888      	ldr	r0, [r1, #8]
    ca3a:	42b0      	cmp	r0, r6
    ca3c:	d065      	beq.n	cb0a <_free_r+0x10e>
    ca3e:	68ce      	ldr	r6, [r1, #12]
    ca40:	60c6      	str	r6, [r0, #12]
    ca42:	60b0      	str	r0, [r6, #8]
    ca44:	2001      	movs	r0, #1
    ca46:	18d6      	adds	r6, r2, r3
    ca48:	6876      	ldr	r6, [r6, #4]
    ca4a:	4206      	tst	r6, r0
    ca4c:	d033      	beq.n	cab6 <_free_r+0xba>
    ca4e:	4b55      	ldr	r3, [pc, #340]	; (cba4 <_free_r+0x1a8>)
    ca50:	4328      	orrs	r0, r5
    ca52:	6048      	str	r0, [r1, #4]
    ca54:	514d      	str	r5, [r1, r5]
    ca56:	429d      	cmp	r5, r3
    ca58:	d812      	bhi.n	ca80 <_free_r+0x84>
    ca5a:	08ed      	lsrs	r5, r5, #3
    ca5c:	3bff      	subs	r3, #255	; 0xff
    ca5e:	10aa      	asrs	r2, r5, #2
    ca60:	3bff      	subs	r3, #255	; 0xff
    ca62:	4093      	lsls	r3, r2
    ca64:	687a      	ldr	r2, [r7, #4]
    ca66:	00ed      	lsls	r5, r5, #3
    ca68:	4313      	orrs	r3, r2
    ca6a:	607b      	str	r3, [r7, #4]
    ca6c:	19ef      	adds	r7, r5, r7
    ca6e:	68bb      	ldr	r3, [r7, #8]
    ca70:	60cf      	str	r7, [r1, #12]
    ca72:	608b      	str	r3, [r1, #8]
    ca74:	60b9      	str	r1, [r7, #8]
    ca76:	60d9      	str	r1, [r3, #12]
    ca78:	0020      	movs	r0, r4
    ca7a:	f000 feab 	bl	d7d4 <__malloc_unlock>
    ca7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ca80:	0a68      	lsrs	r0, r5, #9
    ca82:	2804      	cmp	r0, #4
    ca84:	d850      	bhi.n	cb28 <_free_r+0x12c>
    ca86:	09a8      	lsrs	r0, r5, #6
    ca88:	0002      	movs	r2, r0
    ca8a:	3039      	adds	r0, #57	; 0x39
    ca8c:	3238      	adds	r2, #56	; 0x38
    ca8e:	00c0      	lsls	r0, r0, #3
    ca90:	1838      	adds	r0, r7, r0
    ca92:	3808      	subs	r0, #8
    ca94:	6883      	ldr	r3, [r0, #8]
    ca96:	2603      	movs	r6, #3
    ca98:	4298      	cmp	r0, r3
    ca9a:	d04c      	beq.n	cb36 <_free_r+0x13a>
    ca9c:	685a      	ldr	r2, [r3, #4]
    ca9e:	43b2      	bics	r2, r6
    caa0:	4295      	cmp	r5, r2
    caa2:	d230      	bcs.n	cb06 <_free_r+0x10a>
    caa4:	689b      	ldr	r3, [r3, #8]
    caa6:	4298      	cmp	r0, r3
    caa8:	d1f8      	bne.n	ca9c <_free_r+0xa0>
    caaa:	68c3      	ldr	r3, [r0, #12]
    caac:	60cb      	str	r3, [r1, #12]
    caae:	6088      	str	r0, [r1, #8]
    cab0:	6099      	str	r1, [r3, #8]
    cab2:	60c1      	str	r1, [r0, #12]
    cab4:	e7e0      	b.n	ca78 <_free_r+0x7c>
    cab6:	18ed      	adds	r5, r5, r3
    cab8:	4e3b      	ldr	r6, [pc, #236]	; (cba8 <_free_r+0x1ac>)
    caba:	6893      	ldr	r3, [r2, #8]
    cabc:	42b3      	cmp	r3, r6
    cabe:	d042      	beq.n	cb46 <_free_r+0x14a>
    cac0:	68d2      	ldr	r2, [r2, #12]
    cac2:	4328      	orrs	r0, r5
    cac4:	60da      	str	r2, [r3, #12]
    cac6:	6093      	str	r3, [r2, #8]
    cac8:	4b36      	ldr	r3, [pc, #216]	; (cba4 <_free_r+0x1a8>)
    caca:	6048      	str	r0, [r1, #4]
    cacc:	514d      	str	r5, [r1, r5]
    cace:	429d      	cmp	r5, r3
    cad0:	d8d6      	bhi.n	ca80 <_free_r+0x84>
    cad2:	e7c2      	b.n	ca5a <_free_r+0x5e>
    cad4:	4662      	mov	r2, ip
    cad6:	18eb      	adds	r3, r5, r3
    cad8:	4202      	tst	r2, r0
    cada:	d106      	bne.n	caea <_free_r+0xee>
    cadc:	680a      	ldr	r2, [r1, #0]
    cade:	1a89      	subs	r1, r1, r2
    cae0:	6888      	ldr	r0, [r1, #8]
    cae2:	189b      	adds	r3, r3, r2
    cae4:	68ca      	ldr	r2, [r1, #12]
    cae6:	60c2      	str	r2, [r0, #12]
    cae8:	6090      	str	r0, [r2, #8]
    caea:	2201      	movs	r2, #1
    caec:	431a      	orrs	r2, r3
    caee:	604a      	str	r2, [r1, #4]
    caf0:	4a2e      	ldr	r2, [pc, #184]	; (cbac <_free_r+0x1b0>)
    caf2:	60b9      	str	r1, [r7, #8]
    caf4:	6812      	ldr	r2, [r2, #0]
    caf6:	4293      	cmp	r3, r2
    caf8:	d3be      	bcc.n	ca78 <_free_r+0x7c>
    cafa:	4b2d      	ldr	r3, [pc, #180]	; (cbb0 <_free_r+0x1b4>)
    cafc:	0020      	movs	r0, r4
    cafe:	6819      	ldr	r1, [r3, #0]
    cb00:	f7ff ff2c 	bl	c95c <_malloc_trim_r>
    cb04:	e7b8      	b.n	ca78 <_free_r+0x7c>
    cb06:	0018      	movs	r0, r3
    cb08:	e7cf      	b.n	caaa <_free_r+0xae>
    cb0a:	4666      	mov	r6, ip
    cb0c:	18d0      	adds	r0, r2, r3
    cb0e:	6840      	ldr	r0, [r0, #4]
    cb10:	4230      	tst	r0, r6
    cb12:	d13f      	bne.n	cb94 <_free_r+0x198>
    cb14:	6890      	ldr	r0, [r2, #8]
    cb16:	195d      	adds	r5, r3, r5
    cb18:	68d3      	ldr	r3, [r2, #12]
    cb1a:	60c3      	str	r3, [r0, #12]
    cb1c:	6098      	str	r0, [r3, #8]
    cb1e:	4663      	mov	r3, ip
    cb20:	432b      	orrs	r3, r5
    cb22:	604b      	str	r3, [r1, #4]
    cb24:	514d      	str	r5, [r1, r5]
    cb26:	e7a7      	b.n	ca78 <_free_r+0x7c>
    cb28:	2814      	cmp	r0, #20
    cb2a:	d814      	bhi.n	cb56 <_free_r+0x15a>
    cb2c:	0002      	movs	r2, r0
    cb2e:	305c      	adds	r0, #92	; 0x5c
    cb30:	325b      	adds	r2, #91	; 0x5b
    cb32:	00c0      	lsls	r0, r0, #3
    cb34:	e7ac      	b.n	ca90 <_free_r+0x94>
    cb36:	2301      	movs	r3, #1
    cb38:	1092      	asrs	r2, r2, #2
    cb3a:	4093      	lsls	r3, r2
    cb3c:	687a      	ldr	r2, [r7, #4]
    cb3e:	4313      	orrs	r3, r2
    cb40:	607b      	str	r3, [r7, #4]
    cb42:	0003      	movs	r3, r0
    cb44:	e7b2      	b.n	caac <_free_r+0xb0>
    cb46:	4328      	orrs	r0, r5
    cb48:	60d9      	str	r1, [r3, #12]
    cb4a:	6099      	str	r1, [r3, #8]
    cb4c:	60cb      	str	r3, [r1, #12]
    cb4e:	608b      	str	r3, [r1, #8]
    cb50:	6048      	str	r0, [r1, #4]
    cb52:	514d      	str	r5, [r1, r5]
    cb54:	e790      	b.n	ca78 <_free_r+0x7c>
    cb56:	2854      	cmp	r0, #84	; 0x54
    cb58:	d805      	bhi.n	cb66 <_free_r+0x16a>
    cb5a:	0b28      	lsrs	r0, r5, #12
    cb5c:	0002      	movs	r2, r0
    cb5e:	306f      	adds	r0, #111	; 0x6f
    cb60:	326e      	adds	r2, #110	; 0x6e
    cb62:	00c0      	lsls	r0, r0, #3
    cb64:	e794      	b.n	ca90 <_free_r+0x94>
    cb66:	22aa      	movs	r2, #170	; 0xaa
    cb68:	0052      	lsls	r2, r2, #1
    cb6a:	4290      	cmp	r0, r2
    cb6c:	d805      	bhi.n	cb7a <_free_r+0x17e>
    cb6e:	0be8      	lsrs	r0, r5, #15
    cb70:	0002      	movs	r2, r0
    cb72:	3078      	adds	r0, #120	; 0x78
    cb74:	3277      	adds	r2, #119	; 0x77
    cb76:	00c0      	lsls	r0, r0, #3
    cb78:	e78a      	b.n	ca90 <_free_r+0x94>
    cb7a:	4a0e      	ldr	r2, [pc, #56]	; (cbb4 <_free_r+0x1b8>)
    cb7c:	4290      	cmp	r0, r2
    cb7e:	d805      	bhi.n	cb8c <_free_r+0x190>
    cb80:	0ca8      	lsrs	r0, r5, #18
    cb82:	0002      	movs	r2, r0
    cb84:	307d      	adds	r0, #125	; 0x7d
    cb86:	327c      	adds	r2, #124	; 0x7c
    cb88:	00c0      	lsls	r0, r0, #3
    cb8a:	e781      	b.n	ca90 <_free_r+0x94>
    cb8c:	20fe      	movs	r0, #254	; 0xfe
    cb8e:	227e      	movs	r2, #126	; 0x7e
    cb90:	0080      	lsls	r0, r0, #2
    cb92:	e77d      	b.n	ca90 <_free_r+0x94>
    cb94:	4663      	mov	r3, ip
    cb96:	432b      	orrs	r3, r5
    cb98:	604b      	str	r3, [r1, #4]
    cb9a:	6015      	str	r5, [r2, #0]
    cb9c:	e76c      	b.n	ca78 <_free_r+0x7c>
    cb9e:	46c0      	nop			; (mov r8, r8)
    cba0:	20000608 	.word	0x20000608
    cba4:	000001ff 	.word	0x000001ff
    cba8:	20000610 	.word	0x20000610
    cbac:	20000a14 	.word	0x20000a14
    cbb0:	20000b78 	.word	0x20000b78
    cbb4:	00000554 	.word	0x00000554

0000cbb8 <__sfvwrite_r>:
    cbb8:	b5f0      	push	{r4, r5, r6, r7, lr}
    cbba:	464e      	mov	r6, r9
    cbbc:	46de      	mov	lr, fp
    cbbe:	4657      	mov	r7, sl
    cbc0:	4645      	mov	r5, r8
    cbc2:	b5e0      	push	{r5, r6, r7, lr}
    cbc4:	6893      	ldr	r3, [r2, #8]
    cbc6:	b083      	sub	sp, #12
    cbc8:	9000      	str	r0, [sp, #0]
    cbca:	000c      	movs	r4, r1
    cbcc:	0016      	movs	r6, r2
    cbce:	2b00      	cmp	r3, #0
    cbd0:	d025      	beq.n	cc1e <__sfvwrite_r+0x66>
    cbd2:	898b      	ldrh	r3, [r1, #12]
    cbd4:	071a      	lsls	r2, r3, #28
    cbd6:	d52a      	bpl.n	cc2e <__sfvwrite_r+0x76>
    cbd8:	690a      	ldr	r2, [r1, #16]
    cbda:	2a00      	cmp	r2, #0
    cbdc:	d027      	beq.n	cc2e <__sfvwrite_r+0x76>
    cbde:	6832      	ldr	r2, [r6, #0]
    cbe0:	4693      	mov	fp, r2
    cbe2:	079a      	lsls	r2, r3, #30
    cbe4:	d52f      	bpl.n	cc46 <__sfvwrite_r+0x8e>
    cbe6:	4bb2      	ldr	r3, [pc, #712]	; (ceb0 <__sfvwrite_r+0x2f8>)
    cbe8:	2700      	movs	r7, #0
    cbea:	2500      	movs	r5, #0
    cbec:	4698      	mov	r8, r3
    cbee:	46b1      	mov	r9, r6
    cbf0:	2d00      	cmp	r5, #0
    cbf2:	d100      	bne.n	cbf6 <__sfvwrite_r+0x3e>
    cbf4:	e072      	b.n	ccdc <__sfvwrite_r+0x124>
    cbf6:	002b      	movs	r3, r5
    cbf8:	4545      	cmp	r5, r8
    cbfa:	d900      	bls.n	cbfe <__sfvwrite_r+0x46>
    cbfc:	4bac      	ldr	r3, [pc, #688]	; (ceb0 <__sfvwrite_r+0x2f8>)
    cbfe:	003a      	movs	r2, r7
    cc00:	69e1      	ldr	r1, [r4, #28]
    cc02:	9800      	ldr	r0, [sp, #0]
    cc04:	6a66      	ldr	r6, [r4, #36]	; 0x24
    cc06:	47b0      	blx	r6
    cc08:	2800      	cmp	r0, #0
    cc0a:	dc00      	bgt.n	cc0e <__sfvwrite_r+0x56>
    cc0c:	e073      	b.n	ccf6 <__sfvwrite_r+0x13e>
    cc0e:	464b      	mov	r3, r9
    cc10:	689b      	ldr	r3, [r3, #8]
    cc12:	183f      	adds	r7, r7, r0
    cc14:	1a2d      	subs	r5, r5, r0
    cc16:	1a18      	subs	r0, r3, r0
    cc18:	464b      	mov	r3, r9
    cc1a:	6098      	str	r0, [r3, #8]
    cc1c:	d1e8      	bne.n	cbf0 <__sfvwrite_r+0x38>
    cc1e:	2000      	movs	r0, #0
    cc20:	b003      	add	sp, #12
    cc22:	bc3c      	pop	{r2, r3, r4, r5}
    cc24:	4690      	mov	r8, r2
    cc26:	4699      	mov	r9, r3
    cc28:	46a2      	mov	sl, r4
    cc2a:	46ab      	mov	fp, r5
    cc2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    cc2e:	0021      	movs	r1, r4
    cc30:	9800      	ldr	r0, [sp, #0]
    cc32:	f7fe fc39 	bl	b4a8 <__swsetup_r>
    cc36:	2800      	cmp	r0, #0
    cc38:	d000      	beq.n	cc3c <__sfvwrite_r+0x84>
    cc3a:	e130      	b.n	ce9e <__sfvwrite_r+0x2e6>
    cc3c:	6832      	ldr	r2, [r6, #0]
    cc3e:	89a3      	ldrh	r3, [r4, #12]
    cc40:	4693      	mov	fp, r2
    cc42:	079a      	lsls	r2, r3, #30
    cc44:	d4cf      	bmi.n	cbe6 <__sfvwrite_r+0x2e>
    cc46:	07da      	lsls	r2, r3, #31
    cc48:	d55d      	bpl.n	cd06 <__sfvwrite_r+0x14e>
    cc4a:	2300      	movs	r3, #0
    cc4c:	2000      	movs	r0, #0
    cc4e:	469a      	mov	sl, r3
    cc50:	2700      	movs	r7, #0
    cc52:	001d      	movs	r5, r3
    cc54:	46b1      	mov	r9, r6
    cc56:	e029      	b.n	ccac <__sfvwrite_r+0xf4>
    cc58:	2800      	cmp	r0, #0
    cc5a:	d033      	beq.n	ccc4 <__sfvwrite_r+0x10c>
    cc5c:	46a8      	mov	r8, r5
    cc5e:	42bd      	cmp	r5, r7
    cc60:	d900      	bls.n	cc64 <__sfvwrite_r+0xac>
    cc62:	46b8      	mov	r8, r7
    cc64:	6820      	ldr	r0, [r4, #0]
    cc66:	6922      	ldr	r2, [r4, #16]
    cc68:	4646      	mov	r6, r8
    cc6a:	6963      	ldr	r3, [r4, #20]
    cc6c:	4290      	cmp	r0, r2
    cc6e:	d907      	bls.n	cc80 <__sfvwrite_r+0xc8>
    cc70:	68a2      	ldr	r2, [r4, #8]
    cc72:	4694      	mov	ip, r2
    cc74:	449c      	add	ip, r3
    cc76:	4662      	mov	r2, ip
    cc78:	9201      	str	r2, [sp, #4]
    cc7a:	45e0      	cmp	r8, ip
    cc7c:	dd00      	ble.n	cc80 <__sfvwrite_r+0xc8>
    cc7e:	e0e9      	b.n	ce54 <__sfvwrite_r+0x29c>
    cc80:	4598      	cmp	r8, r3
    cc82:	da00      	bge.n	cc86 <__sfvwrite_r+0xce>
    cc84:	e08f      	b.n	cda6 <__sfvwrite_r+0x1ee>
    cc86:	6a66      	ldr	r6, [r4, #36]	; 0x24
    cc88:	4652      	mov	r2, sl
    cc8a:	69e1      	ldr	r1, [r4, #28]
    cc8c:	9800      	ldr	r0, [sp, #0]
    cc8e:	47b0      	blx	r6
    cc90:	1e06      	subs	r6, r0, #0
    cc92:	dd30      	ble.n	ccf6 <__sfvwrite_r+0x13e>
    cc94:	1bad      	subs	r5, r5, r6
    cc96:	2001      	movs	r0, #1
    cc98:	2d00      	cmp	r5, #0
    cc9a:	d026      	beq.n	ccea <__sfvwrite_r+0x132>
    cc9c:	464b      	mov	r3, r9
    cc9e:	689b      	ldr	r3, [r3, #8]
    cca0:	44b2      	add	sl, r6
    cca2:	1bbf      	subs	r7, r7, r6
    cca4:	1b9e      	subs	r6, r3, r6
    cca6:	464b      	mov	r3, r9
    cca8:	609e      	str	r6, [r3, #8]
    ccaa:	d0b8      	beq.n	cc1e <__sfvwrite_r+0x66>
    ccac:	2f00      	cmp	r7, #0
    ccae:	d1d3      	bne.n	cc58 <__sfvwrite_r+0xa0>
    ccb0:	465b      	mov	r3, fp
    ccb2:	681b      	ldr	r3, [r3, #0]
    ccb4:	469a      	mov	sl, r3
    ccb6:	465b      	mov	r3, fp
    ccb8:	685f      	ldr	r7, [r3, #4]
    ccba:	2308      	movs	r3, #8
    ccbc:	469c      	mov	ip, r3
    ccbe:	44e3      	add	fp, ip
    ccc0:	2f00      	cmp	r7, #0
    ccc2:	d0f5      	beq.n	ccb0 <__sfvwrite_r+0xf8>
    ccc4:	003a      	movs	r2, r7
    ccc6:	210a      	movs	r1, #10
    ccc8:	4650      	mov	r0, sl
    ccca:	f000 fceb 	bl	d6a4 <memchr>
    ccce:	2800      	cmp	r0, #0
    ccd0:	d100      	bne.n	ccd4 <__sfvwrite_r+0x11c>
    ccd2:	e0e2      	b.n	ce9a <__sfvwrite_r+0x2e2>
    ccd4:	4653      	mov	r3, sl
    ccd6:	3001      	adds	r0, #1
    ccd8:	1ac5      	subs	r5, r0, r3
    ccda:	e7bf      	b.n	cc5c <__sfvwrite_r+0xa4>
    ccdc:	465b      	mov	r3, fp
    ccde:	681f      	ldr	r7, [r3, #0]
    cce0:	685d      	ldr	r5, [r3, #4]
    cce2:	2308      	movs	r3, #8
    cce4:	469c      	mov	ip, r3
    cce6:	44e3      	add	fp, ip
    cce8:	e782      	b.n	cbf0 <__sfvwrite_r+0x38>
    ccea:	0021      	movs	r1, r4
    ccec:	9800      	ldr	r0, [sp, #0]
    ccee:	f7ff fd81 	bl	c7f4 <_fflush_r>
    ccf2:	2800      	cmp	r0, #0
    ccf4:	d0d2      	beq.n	cc9c <__sfvwrite_r+0xe4>
    ccf6:	220c      	movs	r2, #12
    ccf8:	5ea3      	ldrsh	r3, [r4, r2]
    ccfa:	2240      	movs	r2, #64	; 0x40
    ccfc:	2001      	movs	r0, #1
    ccfe:	4313      	orrs	r3, r2
    cd00:	81a3      	strh	r3, [r4, #12]
    cd02:	4240      	negs	r0, r0
    cd04:	e78c      	b.n	cc20 <__sfvwrite_r+0x68>
    cd06:	2200      	movs	r2, #0
    cd08:	4691      	mov	r9, r2
    cd0a:	464d      	mov	r5, r9
    cd0c:	2d00      	cmp	r5, #0
    cd0e:	d023      	beq.n	cd58 <__sfvwrite_r+0x1a0>
    cd10:	68a2      	ldr	r2, [r4, #8]
    cd12:	4690      	mov	r8, r2
    cd14:	2280      	movs	r2, #128	; 0x80
    cd16:	0092      	lsls	r2, r2, #2
    cd18:	4213      	tst	r3, r2
    cd1a:	d026      	beq.n	cd6a <__sfvwrite_r+0x1b2>
    cd1c:	46c2      	mov	sl, r8
    cd1e:	4545      	cmp	r5, r8
    cd20:	d34d      	bcc.n	cdbe <__sfvwrite_r+0x206>
    cd22:	2290      	movs	r2, #144	; 0x90
    cd24:	00d2      	lsls	r2, r2, #3
    cd26:	4213      	tst	r3, r2
    cd28:	d14e      	bne.n	cdc8 <__sfvwrite_r+0x210>
    cd2a:	002f      	movs	r7, r5
    cd2c:	6820      	ldr	r0, [r4, #0]
    cd2e:	4652      	mov	r2, sl
    cd30:	4649      	mov	r1, r9
    cd32:	f000 fcf7 	bl	d724 <memmove>
    cd36:	4642      	mov	r2, r8
    cd38:	68a3      	ldr	r3, [r4, #8]
    cd3a:	1a98      	subs	r0, r3, r2
    cd3c:	6823      	ldr	r3, [r4, #0]
    cd3e:	60a0      	str	r0, [r4, #8]
    cd40:	4453      	add	r3, sl
    cd42:	6023      	str	r3, [r4, #0]
    cd44:	68b3      	ldr	r3, [r6, #8]
    cd46:	44b9      	add	r9, r7
    cd48:	1bed      	subs	r5, r5, r7
    cd4a:	1bdf      	subs	r7, r3, r7
    cd4c:	60b7      	str	r7, [r6, #8]
    cd4e:	d100      	bne.n	cd52 <__sfvwrite_r+0x19a>
    cd50:	e765      	b.n	cc1e <__sfvwrite_r+0x66>
    cd52:	89a3      	ldrh	r3, [r4, #12]
    cd54:	2d00      	cmp	r5, #0
    cd56:	d1db      	bne.n	cd10 <__sfvwrite_r+0x158>
    cd58:	465a      	mov	r2, fp
    cd5a:	6812      	ldr	r2, [r2, #0]
    cd5c:	4691      	mov	r9, r2
    cd5e:	465a      	mov	r2, fp
    cd60:	6855      	ldr	r5, [r2, #4]
    cd62:	2208      	movs	r2, #8
    cd64:	4694      	mov	ip, r2
    cd66:	44e3      	add	fp, ip
    cd68:	e7d0      	b.n	cd0c <__sfvwrite_r+0x154>
    cd6a:	6820      	ldr	r0, [r4, #0]
    cd6c:	6923      	ldr	r3, [r4, #16]
    cd6e:	4298      	cmp	r0, r3
    cd70:	d802      	bhi.n	cd78 <__sfvwrite_r+0x1c0>
    cd72:	6967      	ldr	r7, [r4, #20]
    cd74:	42bd      	cmp	r5, r7
    cd76:	d259      	bcs.n	ce2c <__sfvwrite_r+0x274>
    cd78:	4647      	mov	r7, r8
    cd7a:	42af      	cmp	r7, r5
    cd7c:	d900      	bls.n	cd80 <__sfvwrite_r+0x1c8>
    cd7e:	002f      	movs	r7, r5
    cd80:	003a      	movs	r2, r7
    cd82:	4649      	mov	r1, r9
    cd84:	f000 fcce 	bl	d724 <memmove>
    cd88:	68a3      	ldr	r3, [r4, #8]
    cd8a:	6822      	ldr	r2, [r4, #0]
    cd8c:	1bdb      	subs	r3, r3, r7
    cd8e:	19d2      	adds	r2, r2, r7
    cd90:	60a3      	str	r3, [r4, #8]
    cd92:	6022      	str	r2, [r4, #0]
    cd94:	2b00      	cmp	r3, #0
    cd96:	d1d5      	bne.n	cd44 <__sfvwrite_r+0x18c>
    cd98:	0021      	movs	r1, r4
    cd9a:	9800      	ldr	r0, [sp, #0]
    cd9c:	f7ff fd2a 	bl	c7f4 <_fflush_r>
    cda0:	2800      	cmp	r0, #0
    cda2:	d0cf      	beq.n	cd44 <__sfvwrite_r+0x18c>
    cda4:	e7a7      	b.n	ccf6 <__sfvwrite_r+0x13e>
    cda6:	4642      	mov	r2, r8
    cda8:	4651      	mov	r1, sl
    cdaa:	f000 fcbb 	bl	d724 <memmove>
    cdae:	4642      	mov	r2, r8
    cdb0:	68a3      	ldr	r3, [r4, #8]
    cdb2:	1a9b      	subs	r3, r3, r2
    cdb4:	60a3      	str	r3, [r4, #8]
    cdb6:	6823      	ldr	r3, [r4, #0]
    cdb8:	4443      	add	r3, r8
    cdba:	6023      	str	r3, [r4, #0]
    cdbc:	e76a      	b.n	cc94 <__sfvwrite_r+0xdc>
    cdbe:	46a8      	mov	r8, r5
    cdc0:	6820      	ldr	r0, [r4, #0]
    cdc2:	002f      	movs	r7, r5
    cdc4:	46aa      	mov	sl, r5
    cdc6:	e7b2      	b.n	cd2e <__sfvwrite_r+0x176>
    cdc8:	6921      	ldr	r1, [r4, #16]
    cdca:	6822      	ldr	r2, [r4, #0]
    cdcc:	1a52      	subs	r2, r2, r1
    cdce:	4692      	mov	sl, r2
    cdd0:	6962      	ldr	r2, [r4, #20]
    cdd2:	0057      	lsls	r7, r2, #1
    cdd4:	18bf      	adds	r7, r7, r2
    cdd6:	0ffa      	lsrs	r2, r7, #31
    cdd8:	19d7      	adds	r7, r2, r7
    cdda:	4652      	mov	r2, sl
    cddc:	1c50      	adds	r0, r2, #1
    cdde:	107f      	asrs	r7, r7, #1
    cde0:	1940      	adds	r0, r0, r5
    cde2:	003a      	movs	r2, r7
    cde4:	42b8      	cmp	r0, r7
    cde6:	d901      	bls.n	cdec <__sfvwrite_r+0x234>
    cde8:	0007      	movs	r7, r0
    cdea:	0002      	movs	r2, r0
    cdec:	055b      	lsls	r3, r3, #21
    cdee:	d542      	bpl.n	ce76 <__sfvwrite_r+0x2be>
    cdf0:	0011      	movs	r1, r2
    cdf2:	9800      	ldr	r0, [sp, #0]
    cdf4:	f000 f95a 	bl	d0ac <_malloc_r>
    cdf8:	4680      	mov	r8, r0
    cdfa:	1e03      	subs	r3, r0, #0
    cdfc:	d052      	beq.n	cea4 <__sfvwrite_r+0x2ec>
    cdfe:	4652      	mov	r2, sl
    ce00:	6921      	ldr	r1, [r4, #16]
    ce02:	f7f9 ff51 	bl	6ca8 <memcpy>
    ce06:	89a3      	ldrh	r3, [r4, #12]
    ce08:	4a2a      	ldr	r2, [pc, #168]	; (ceb4 <__sfvwrite_r+0x2fc>)
    ce0a:	4013      	ands	r3, r2
    ce0c:	2280      	movs	r2, #128	; 0x80
    ce0e:	4313      	orrs	r3, r2
    ce10:	81a3      	strh	r3, [r4, #12]
    ce12:	4643      	mov	r3, r8
    ce14:	4640      	mov	r0, r8
    ce16:	6123      	str	r3, [r4, #16]
    ce18:	4653      	mov	r3, sl
    ce1a:	4450      	add	r0, sl
    ce1c:	6167      	str	r7, [r4, #20]
    ce1e:	1aff      	subs	r7, r7, r3
    ce20:	60a7      	str	r7, [r4, #8]
    ce22:	6020      	str	r0, [r4, #0]
    ce24:	46a8      	mov	r8, r5
    ce26:	002f      	movs	r7, r5
    ce28:	46aa      	mov	sl, r5
    ce2a:	e780      	b.n	cd2e <__sfvwrite_r+0x176>
    ce2c:	4b22      	ldr	r3, [pc, #136]	; (ceb8 <__sfvwrite_r+0x300>)
    ce2e:	0028      	movs	r0, r5
    ce30:	429d      	cmp	r5, r3
    ce32:	d900      	bls.n	ce36 <__sfvwrite_r+0x27e>
    ce34:	0018      	movs	r0, r3
    ce36:	0039      	movs	r1, r7
    ce38:	f7f7 fccc 	bl	47d4 <__divsi3>
    ce3c:	003b      	movs	r3, r7
    ce3e:	464a      	mov	r2, r9
    ce40:	4343      	muls	r3, r0
    ce42:	69e1      	ldr	r1, [r4, #28]
    ce44:	9800      	ldr	r0, [sp, #0]
    ce46:	6a67      	ldr	r7, [r4, #36]	; 0x24
    ce48:	47b8      	blx	r7
    ce4a:	2800      	cmp	r0, #0
    ce4c:	dc00      	bgt.n	ce50 <__sfvwrite_r+0x298>
    ce4e:	e752      	b.n	ccf6 <__sfvwrite_r+0x13e>
    ce50:	0007      	movs	r7, r0
    ce52:	e777      	b.n	cd44 <__sfvwrite_r+0x18c>
    ce54:	4666      	mov	r6, ip
    ce56:	4651      	mov	r1, sl
    ce58:	f000 fc64 	bl	d724 <memmove>
    ce5c:	46b4      	mov	ip, r6
    ce5e:	6823      	ldr	r3, [r4, #0]
    ce60:	0021      	movs	r1, r4
    ce62:	4463      	add	r3, ip
    ce64:	6023      	str	r3, [r4, #0]
    ce66:	9800      	ldr	r0, [sp, #0]
    ce68:	f7ff fcc4 	bl	c7f4 <_fflush_r>
    ce6c:	2800      	cmp	r0, #0
    ce6e:	d000      	beq.n	ce72 <__sfvwrite_r+0x2ba>
    ce70:	e741      	b.n	ccf6 <__sfvwrite_r+0x13e>
    ce72:	9e01      	ldr	r6, [sp, #4]
    ce74:	e70e      	b.n	cc94 <__sfvwrite_r+0xdc>
    ce76:	9800      	ldr	r0, [sp, #0]
    ce78:	f001 f976 	bl	e168 <_realloc_r>
    ce7c:	4680      	mov	r8, r0
    ce7e:	2800      	cmp	r0, #0
    ce80:	d1c7      	bne.n	ce12 <__sfvwrite_r+0x25a>
    ce82:	9d00      	ldr	r5, [sp, #0]
    ce84:	6921      	ldr	r1, [r4, #16]
    ce86:	0028      	movs	r0, r5
    ce88:	f7ff fdb8 	bl	c9fc <_free_r>
    ce8c:	2280      	movs	r2, #128	; 0x80
    ce8e:	89a3      	ldrh	r3, [r4, #12]
    ce90:	4393      	bics	r3, r2
    ce92:	3a74      	subs	r2, #116	; 0x74
    ce94:	b21b      	sxth	r3, r3
    ce96:	602a      	str	r2, [r5, #0]
    ce98:	e72f      	b.n	ccfa <__sfvwrite_r+0x142>
    ce9a:	1c7d      	adds	r5, r7, #1
    ce9c:	e6de      	b.n	cc5c <__sfvwrite_r+0xa4>
    ce9e:	2001      	movs	r0, #1
    cea0:	4240      	negs	r0, r0
    cea2:	e6bd      	b.n	cc20 <__sfvwrite_r+0x68>
    cea4:	9a00      	ldr	r2, [sp, #0]
    cea6:	330c      	adds	r3, #12
    cea8:	6013      	str	r3, [r2, #0]
    ceaa:	220c      	movs	r2, #12
    ceac:	5ea3      	ldrsh	r3, [r4, r2]
    ceae:	e724      	b.n	ccfa <__sfvwrite_r+0x142>
    ceb0:	7ffffc00 	.word	0x7ffffc00
    ceb4:	fffffb7f 	.word	0xfffffb7f
    ceb8:	7fffffff 	.word	0x7fffffff

0000cebc <_fwalk_reent>:
    cebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    cebe:	4647      	mov	r7, r8
    cec0:	46ce      	mov	lr, r9
    cec2:	b580      	push	{r7, lr}
    cec4:	27b8      	movs	r7, #184	; 0xb8
    cec6:	4680      	mov	r8, r0
    cec8:	00bf      	lsls	r7, r7, #2
    ceca:	4447      	add	r7, r8
    cecc:	4689      	mov	r9, r1
    cece:	2600      	movs	r6, #0
    ced0:	2f00      	cmp	r7, #0
    ced2:	d014      	beq.n	cefe <_fwalk_reent+0x42>
    ced4:	687b      	ldr	r3, [r7, #4]
    ced6:	68bc      	ldr	r4, [r7, #8]
    ced8:	1e5d      	subs	r5, r3, #1
    ceda:	d40d      	bmi.n	cef8 <_fwalk_reent+0x3c>
    cedc:	89a3      	ldrh	r3, [r4, #12]
    cede:	2b01      	cmp	r3, #1
    cee0:	d907      	bls.n	cef2 <_fwalk_reent+0x36>
    cee2:	220e      	movs	r2, #14
    cee4:	5ea3      	ldrsh	r3, [r4, r2]
    cee6:	3301      	adds	r3, #1
    cee8:	d003      	beq.n	cef2 <_fwalk_reent+0x36>
    ceea:	0021      	movs	r1, r4
    ceec:	4640      	mov	r0, r8
    ceee:	47c8      	blx	r9
    cef0:	4306      	orrs	r6, r0
    cef2:	3468      	adds	r4, #104	; 0x68
    cef4:	3d01      	subs	r5, #1
    cef6:	d2f1      	bcs.n	cedc <_fwalk_reent+0x20>
    cef8:	683f      	ldr	r7, [r7, #0]
    cefa:	2f00      	cmp	r7, #0
    cefc:	d1ea      	bne.n	ced4 <_fwalk_reent+0x18>
    cefe:	0030      	movs	r0, r6
    cf00:	bc0c      	pop	{r2, r3}
    cf02:	4690      	mov	r8, r2
    cf04:	4699      	mov	r9, r3
    cf06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000cf08 <iswspace>:
    cf08:	b510      	push	{r4, lr}
    cf0a:	0004      	movs	r4, r0
    cf0c:	2000      	movs	r0, #0
    cf0e:	2cff      	cmp	r4, #255	; 0xff
    cf10:	d805      	bhi.n	cf1e <iswspace+0x16>
    cf12:	f000 f819 	bl	cf48 <__locale_ctype_ptr>
    cf16:	1904      	adds	r4, r0, r4
    cf18:	2008      	movs	r0, #8
    cf1a:	7863      	ldrb	r3, [r4, #1]
    cf1c:	4018      	ands	r0, r3
    cf1e:	bd10      	pop	{r4, pc}

0000cf20 <__locale_mb_cur_max>:
    cf20:	4b05      	ldr	r3, [pc, #20]	; (cf38 <__locale_mb_cur_max+0x18>)
    cf22:	681b      	ldr	r3, [r3, #0]
    cf24:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    cf26:	2b00      	cmp	r3, #0
    cf28:	d003      	beq.n	cf32 <__locale_mb_cur_max+0x12>
    cf2a:	2294      	movs	r2, #148	; 0x94
    cf2c:	0052      	lsls	r2, r2, #1
    cf2e:	5c98      	ldrb	r0, [r3, r2]
    cf30:	4770      	bx	lr
    cf32:	4b02      	ldr	r3, [pc, #8]	; (cf3c <__locale_mb_cur_max+0x1c>)
    cf34:	e7f9      	b.n	cf2a <__locale_mb_cur_max+0xa>
    cf36:	46c0      	nop			; (mov r8, r8)
    cf38:	2000006c 	.word	0x2000006c
    cf3c:	2000049c 	.word	0x2000049c

0000cf40 <__locale_ctype_ptr_l>:
    cf40:	23ec      	movs	r3, #236	; 0xec
    cf42:	58c0      	ldr	r0, [r0, r3]
    cf44:	4770      	bx	lr
    cf46:	46c0      	nop			; (mov r8, r8)

0000cf48 <__locale_ctype_ptr>:
    cf48:	4b04      	ldr	r3, [pc, #16]	; (cf5c <__locale_ctype_ptr+0x14>)
    cf4a:	681b      	ldr	r3, [r3, #0]
    cf4c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    cf4e:	2b00      	cmp	r3, #0
    cf50:	d002      	beq.n	cf58 <__locale_ctype_ptr+0x10>
    cf52:	22ec      	movs	r2, #236	; 0xec
    cf54:	5898      	ldr	r0, [r3, r2]
    cf56:	4770      	bx	lr
    cf58:	4b01      	ldr	r3, [pc, #4]	; (cf60 <__locale_ctype_ptr+0x18>)
    cf5a:	e7fa      	b.n	cf52 <__locale_ctype_ptr+0xa>
    cf5c:	2000006c 	.word	0x2000006c
    cf60:	2000049c 	.word	0x2000049c

0000cf64 <__localeconv_l>:
    cf64:	30f0      	adds	r0, #240	; 0xf0
    cf66:	4770      	bx	lr

0000cf68 <_localeconv_r>:
    cf68:	4b04      	ldr	r3, [pc, #16]	; (cf7c <_localeconv_r+0x14>)
    cf6a:	681b      	ldr	r3, [r3, #0]
    cf6c:	6b58      	ldr	r0, [r3, #52]	; 0x34
    cf6e:	2800      	cmp	r0, #0
    cf70:	d001      	beq.n	cf76 <_localeconv_r+0xe>
    cf72:	30f0      	adds	r0, #240	; 0xf0
    cf74:	4770      	bx	lr
    cf76:	4802      	ldr	r0, [pc, #8]	; (cf80 <_localeconv_r+0x18>)
    cf78:	e7fb      	b.n	cf72 <_localeconv_r+0xa>
    cf7a:	46c0      	nop			; (mov r8, r8)
    cf7c:	2000006c 	.word	0x2000006c
    cf80:	2000049c 	.word	0x2000049c

0000cf84 <__retarget_lock_init_recursive>:
    cf84:	4770      	bx	lr
    cf86:	46c0      	nop			; (mov r8, r8)

0000cf88 <__retarget_lock_close_recursive>:
    cf88:	4770      	bx	lr
    cf8a:	46c0      	nop			; (mov r8, r8)

0000cf8c <__retarget_lock_acquire_recursive>:
    cf8c:	4770      	bx	lr
    cf8e:	46c0      	nop			; (mov r8, r8)

0000cf90 <__retarget_lock_release_recursive>:
    cf90:	4770      	bx	lr
    cf92:	46c0      	nop			; (mov r8, r8)

0000cf94 <_lseek_r>:
    cf94:	b570      	push	{r4, r5, r6, lr}
    cf96:	0005      	movs	r5, r0
    cf98:	0008      	movs	r0, r1
    cf9a:	0011      	movs	r1, r2
    cf9c:	2200      	movs	r2, #0
    cf9e:	4c06      	ldr	r4, [pc, #24]	; (cfb8 <_lseek_r+0x24>)
    cfa0:	6022      	str	r2, [r4, #0]
    cfa2:	001a      	movs	r2, r3
    cfa4:	f7f3 fe46 	bl	c34 <_lseek>
    cfa8:	1c43      	adds	r3, r0, #1
    cfaa:	d000      	beq.n	cfae <_lseek_r+0x1a>
    cfac:	bd70      	pop	{r4, r5, r6, pc}
    cfae:	6823      	ldr	r3, [r4, #0]
    cfb0:	2b00      	cmp	r3, #0
    cfb2:	d0fb      	beq.n	cfac <_lseek_r+0x18>
    cfb4:	602b      	str	r3, [r5, #0]
    cfb6:	e7f9      	b.n	cfac <_lseek_r+0x18>
    cfb8:	20001678 	.word	0x20001678

0000cfbc <__swhatbuf_r>:
    cfbc:	b570      	push	{r4, r5, r6, lr}
    cfbe:	000c      	movs	r4, r1
    cfc0:	001e      	movs	r6, r3
    cfc2:	230e      	movs	r3, #14
    cfc4:	5ec9      	ldrsh	r1, [r1, r3]
    cfc6:	b090      	sub	sp, #64	; 0x40
    cfc8:	0015      	movs	r5, r2
    cfca:	2900      	cmp	r1, #0
    cfcc:	db15      	blt.n	cffa <__swhatbuf_r+0x3e>
    cfce:	aa01      	add	r2, sp, #4
    cfd0:	f003 f840 	bl	10054 <_fstat_r>
    cfd4:	2800      	cmp	r0, #0
    cfd6:	db10      	blt.n	cffa <__swhatbuf_r+0x3e>
    cfd8:	22f0      	movs	r2, #240	; 0xf0
    cfda:	9b02      	ldr	r3, [sp, #8]
    cfdc:	0212      	lsls	r2, r2, #8
    cfde:	4013      	ands	r3, r2
    cfe0:	4a0d      	ldr	r2, [pc, #52]	; (d018 <__swhatbuf_r+0x5c>)
    cfe2:	2080      	movs	r0, #128	; 0x80
    cfe4:	4694      	mov	ip, r2
    cfe6:	4463      	add	r3, ip
    cfe8:	425a      	negs	r2, r3
    cfea:	4153      	adcs	r3, r2
    cfec:	6033      	str	r3, [r6, #0]
    cfee:	2380      	movs	r3, #128	; 0x80
    cff0:	00db      	lsls	r3, r3, #3
    cff2:	602b      	str	r3, [r5, #0]
    cff4:	0100      	lsls	r0, r0, #4
    cff6:	b010      	add	sp, #64	; 0x40
    cff8:	bd70      	pop	{r4, r5, r6, pc}
    cffa:	2300      	movs	r3, #0
    cffc:	6033      	str	r3, [r6, #0]
    cffe:	89a3      	ldrh	r3, [r4, #12]
    d000:	061b      	lsls	r3, r3, #24
    d002:	d503      	bpl.n	d00c <__swhatbuf_r+0x50>
    d004:	2340      	movs	r3, #64	; 0x40
    d006:	2000      	movs	r0, #0
    d008:	602b      	str	r3, [r5, #0]
    d00a:	e7f4      	b.n	cff6 <__swhatbuf_r+0x3a>
    d00c:	2380      	movs	r3, #128	; 0x80
    d00e:	00db      	lsls	r3, r3, #3
    d010:	602b      	str	r3, [r5, #0]
    d012:	2000      	movs	r0, #0
    d014:	e7ef      	b.n	cff6 <__swhatbuf_r+0x3a>
    d016:	46c0      	nop			; (mov r8, r8)
    d018:	ffffe000 	.word	0xffffe000

0000d01c <__smakebuf_r>:
    d01c:	b570      	push	{r4, r5, r6, lr}
    d01e:	898b      	ldrh	r3, [r1, #12]
    d020:	b082      	sub	sp, #8
    d022:	0006      	movs	r6, r0
    d024:	000c      	movs	r4, r1
    d026:	079b      	lsls	r3, r3, #30
    d028:	d507      	bpl.n	d03a <__smakebuf_r+0x1e>
    d02a:	0023      	movs	r3, r4
    d02c:	3343      	adds	r3, #67	; 0x43
    d02e:	6023      	str	r3, [r4, #0]
    d030:	6123      	str	r3, [r4, #16]
    d032:	2301      	movs	r3, #1
    d034:	6163      	str	r3, [r4, #20]
    d036:	b002      	add	sp, #8
    d038:	bd70      	pop	{r4, r5, r6, pc}
    d03a:	ab01      	add	r3, sp, #4
    d03c:	466a      	mov	r2, sp
    d03e:	f7ff ffbd 	bl	cfbc <__swhatbuf_r>
    d042:	9900      	ldr	r1, [sp, #0]
    d044:	0005      	movs	r5, r0
    d046:	0030      	movs	r0, r6
    d048:	f000 f830 	bl	d0ac <_malloc_r>
    d04c:	2800      	cmp	r0, #0
    d04e:	d01e      	beq.n	d08e <__smakebuf_r+0x72>
    d050:	2280      	movs	r2, #128	; 0x80
    d052:	4b15      	ldr	r3, [pc, #84]	; (d0a8 <__smakebuf_r+0x8c>)
    d054:	63f3      	str	r3, [r6, #60]	; 0x3c
    d056:	89a3      	ldrh	r3, [r4, #12]
    d058:	6020      	str	r0, [r4, #0]
    d05a:	4313      	orrs	r3, r2
    d05c:	9a00      	ldr	r2, [sp, #0]
    d05e:	b21b      	sxth	r3, r3
    d060:	6162      	str	r2, [r4, #20]
    d062:	9a01      	ldr	r2, [sp, #4]
    d064:	81a3      	strh	r3, [r4, #12]
    d066:	6120      	str	r0, [r4, #16]
    d068:	2a00      	cmp	r2, #0
    d06a:	d102      	bne.n	d072 <__smakebuf_r+0x56>
    d06c:	432b      	orrs	r3, r5
    d06e:	81a3      	strh	r3, [r4, #12]
    d070:	e7e1      	b.n	d036 <__smakebuf_r+0x1a>
    d072:	230e      	movs	r3, #14
    d074:	5ee1      	ldrsh	r1, [r4, r3]
    d076:	0030      	movs	r0, r6
    d078:	f003 fbd4 	bl	10824 <_isatty_r>
    d07c:	2800      	cmp	r0, #0
    d07e:	d010      	beq.n	d0a2 <__smakebuf_r+0x86>
    d080:	2203      	movs	r2, #3
    d082:	89a3      	ldrh	r3, [r4, #12]
    d084:	4393      	bics	r3, r2
    d086:	2201      	movs	r2, #1
    d088:	4313      	orrs	r3, r2
    d08a:	b21b      	sxth	r3, r3
    d08c:	e7ee      	b.n	d06c <__smakebuf_r+0x50>
    d08e:	220c      	movs	r2, #12
    d090:	5ea3      	ldrsh	r3, [r4, r2]
    d092:	059a      	lsls	r2, r3, #22
    d094:	d4cf      	bmi.n	d036 <__smakebuf_r+0x1a>
    d096:	2203      	movs	r2, #3
    d098:	4393      	bics	r3, r2
    d09a:	2202      	movs	r2, #2
    d09c:	4313      	orrs	r3, r2
    d09e:	81a3      	strh	r3, [r4, #12]
    d0a0:	e7c3      	b.n	d02a <__smakebuf_r+0xe>
    d0a2:	220c      	movs	r2, #12
    d0a4:	5ea3      	ldrsh	r3, [r4, r2]
    d0a6:	e7e1      	b.n	d06c <__smakebuf_r+0x50>
    d0a8:	0000c849 	.word	0x0000c849

0000d0ac <_malloc_r>:
    d0ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    d0ae:	4657      	mov	r7, sl
    d0b0:	4645      	mov	r5, r8
    d0b2:	46de      	mov	lr, fp
    d0b4:	464e      	mov	r6, r9
    d0b6:	b5e0      	push	{r5, r6, r7, lr}
    d0b8:	000d      	movs	r5, r1
    d0ba:	350b      	adds	r5, #11
    d0bc:	b083      	sub	sp, #12
    d0be:	0007      	movs	r7, r0
    d0c0:	2d16      	cmp	r5, #22
    d0c2:	d800      	bhi.n	d0c6 <_malloc_r+0x1a>
    d0c4:	e09f      	b.n	d206 <_malloc_r+0x15a>
    d0c6:	2307      	movs	r3, #7
    d0c8:	439d      	bics	r5, r3
    d0ca:	d500      	bpl.n	d0ce <_malloc_r+0x22>
    d0cc:	e0c4      	b.n	d258 <_malloc_r+0x1ac>
    d0ce:	42a9      	cmp	r1, r5
    d0d0:	d900      	bls.n	d0d4 <_malloc_r+0x28>
    d0d2:	e0c1      	b.n	d258 <_malloc_r+0x1ac>
    d0d4:	f000 fb76 	bl	d7c4 <__malloc_lock>
    d0d8:	23f8      	movs	r3, #248	; 0xf8
    d0da:	33ff      	adds	r3, #255	; 0xff
    d0dc:	429d      	cmp	r5, r3
    d0de:	d800      	bhi.n	d0e2 <_malloc_r+0x36>
    d0e0:	e28f      	b.n	d602 <_malloc_r+0x556>
    d0e2:	0a68      	lsrs	r0, r5, #9
    d0e4:	d100      	bne.n	d0e8 <_malloc_r+0x3c>
    d0e6:	e0bb      	b.n	d260 <_malloc_r+0x1b4>
    d0e8:	2804      	cmp	r0, #4
    d0ea:	d900      	bls.n	d0ee <_malloc_r+0x42>
    d0ec:	e162      	b.n	d3b4 <_malloc_r+0x308>
    d0ee:	2338      	movs	r3, #56	; 0x38
    d0f0:	4698      	mov	r8, r3
    d0f2:	09a8      	lsrs	r0, r5, #6
    d0f4:	4480      	add	r8, r0
    d0f6:	3039      	adds	r0, #57	; 0x39
    d0f8:	00c1      	lsls	r1, r0, #3
    d0fa:	4ed2      	ldr	r6, [pc, #840]	; (d444 <_malloc_r+0x398>)
    d0fc:	1871      	adds	r1, r6, r1
    d0fe:	3908      	subs	r1, #8
    d100:	68cc      	ldr	r4, [r1, #12]
    d102:	42a1      	cmp	r1, r4
    d104:	d019      	beq.n	d13a <_malloc_r+0x8e>
    d106:	2303      	movs	r3, #3
    d108:	6862      	ldr	r2, [r4, #4]
    d10a:	439a      	bics	r2, r3
    d10c:	0013      	movs	r3, r2
    d10e:	1b52      	subs	r2, r2, r5
    d110:	2a0f      	cmp	r2, #15
    d112:	dd00      	ble.n	d116 <_malloc_r+0x6a>
    d114:	e0aa      	b.n	d26c <_malloc_r+0x1c0>
    d116:	2a00      	cmp	r2, #0
    d118:	db00      	blt.n	d11c <_malloc_r+0x70>
    d11a:	e088      	b.n	d22e <_malloc_r+0x182>
    d11c:	2303      	movs	r3, #3
    d11e:	469c      	mov	ip, r3
    d120:	e008      	b.n	d134 <_malloc_r+0x88>
    d122:	4662      	mov	r2, ip
    d124:	6863      	ldr	r3, [r4, #4]
    d126:	4393      	bics	r3, r2
    d128:	1b5a      	subs	r2, r3, r5
    d12a:	2a0f      	cmp	r2, #15
    d12c:	dd00      	ble.n	d130 <_malloc_r+0x84>
    d12e:	e09d      	b.n	d26c <_malloc_r+0x1c0>
    d130:	2a00      	cmp	r2, #0
    d132:	da7c      	bge.n	d22e <_malloc_r+0x182>
    d134:	68e4      	ldr	r4, [r4, #12]
    d136:	42a1      	cmp	r1, r4
    d138:	d1f3      	bne.n	d122 <_malloc_r+0x76>
    d13a:	0032      	movs	r2, r6
    d13c:	6934      	ldr	r4, [r6, #16]
    d13e:	3208      	adds	r2, #8
    d140:	4294      	cmp	r4, r2
    d142:	d100      	bne.n	d146 <_malloc_r+0x9a>
    d144:	e190      	b.n	d468 <_malloc_r+0x3bc>
    d146:	2303      	movs	r3, #3
    d148:	6861      	ldr	r1, [r4, #4]
    d14a:	4399      	bics	r1, r3
    d14c:	4689      	mov	r9, r1
    d14e:	1b49      	subs	r1, r1, r5
    d150:	290f      	cmp	r1, #15
    d152:	dd00      	ble.n	d156 <_malloc_r+0xaa>
    d154:	e162      	b.n	d41c <_malloc_r+0x370>
    d156:	6172      	str	r2, [r6, #20]
    d158:	6132      	str	r2, [r6, #16]
    d15a:	2900      	cmp	r1, #0
    d15c:	db00      	blt.n	d160 <_malloc_r+0xb4>
    d15e:	e087      	b.n	d270 <_malloc_r+0x1c4>
    d160:	4ab9      	ldr	r2, [pc, #740]	; (d448 <_malloc_r+0x39c>)
    d162:	464b      	mov	r3, r9
    d164:	4591      	cmp	r9, r2
    d166:	d900      	bls.n	d16a <_malloc_r+0xbe>
    d168:	e130      	b.n	d3cc <_malloc_r+0x320>
    d16a:	08db      	lsrs	r3, r3, #3
    d16c:	3aff      	subs	r2, #255	; 0xff
    d16e:	1099      	asrs	r1, r3, #2
    d170:	3aff      	subs	r2, #255	; 0xff
    d172:	408a      	lsls	r2, r1
    d174:	00db      	lsls	r3, r3, #3
    d176:	6871      	ldr	r1, [r6, #4]
    d178:	199b      	adds	r3, r3, r6
    d17a:	430a      	orrs	r2, r1
    d17c:	6899      	ldr	r1, [r3, #8]
    d17e:	6072      	str	r2, [r6, #4]
    d180:	60e3      	str	r3, [r4, #12]
    d182:	60a1      	str	r1, [r4, #8]
    d184:	609c      	str	r4, [r3, #8]
    d186:	0013      	movs	r3, r2
    d188:	60cc      	str	r4, [r1, #12]
    d18a:	2101      	movs	r1, #1
    d18c:	1082      	asrs	r2, r0, #2
    d18e:	4091      	lsls	r1, r2
    d190:	4299      	cmp	r1, r3
    d192:	d86f      	bhi.n	d274 <_malloc_r+0x1c8>
    d194:	420b      	tst	r3, r1
    d196:	d105      	bne.n	d1a4 <_malloc_r+0xf8>
    d198:	2203      	movs	r2, #3
    d19a:	4390      	bics	r0, r2
    d19c:	0049      	lsls	r1, r1, #1
    d19e:	3004      	adds	r0, #4
    d1a0:	420b      	tst	r3, r1
    d1a2:	d0fb      	beq.n	d19c <_malloc_r+0xf0>
    d1a4:	2303      	movs	r3, #3
    d1a6:	4698      	mov	r8, r3
    d1a8:	00c3      	lsls	r3, r0, #3
    d1aa:	4699      	mov	r9, r3
    d1ac:	44b1      	add	r9, r6
    d1ae:	46cc      	mov	ip, r9
    d1b0:	4682      	mov	sl, r0
    d1b2:	4663      	mov	r3, ip
    d1b4:	68dc      	ldr	r4, [r3, #12]
    d1b6:	45a4      	cmp	ip, r4
    d1b8:	d107      	bne.n	d1ca <_malloc_r+0x11e>
    d1ba:	e157      	b.n	d46c <_malloc_r+0x3c0>
    d1bc:	2a00      	cmp	r2, #0
    d1be:	db00      	blt.n	d1c2 <_malloc_r+0x116>
    d1c0:	e166      	b.n	d490 <_malloc_r+0x3e4>
    d1c2:	68e4      	ldr	r4, [r4, #12]
    d1c4:	45a4      	cmp	ip, r4
    d1c6:	d100      	bne.n	d1ca <_malloc_r+0x11e>
    d1c8:	e150      	b.n	d46c <_malloc_r+0x3c0>
    d1ca:	4642      	mov	r2, r8
    d1cc:	6863      	ldr	r3, [r4, #4]
    d1ce:	4393      	bics	r3, r2
    d1d0:	1b5a      	subs	r2, r3, r5
    d1d2:	2a0f      	cmp	r2, #15
    d1d4:	ddf2      	ble.n	d1bc <_malloc_r+0x110>
    d1d6:	2001      	movs	r0, #1
    d1d8:	4680      	mov	r8, r0
    d1da:	1961      	adds	r1, r4, r5
    d1dc:	4305      	orrs	r5, r0
    d1de:	6065      	str	r5, [r4, #4]
    d1e0:	68a0      	ldr	r0, [r4, #8]
    d1e2:	68e5      	ldr	r5, [r4, #12]
    d1e4:	3608      	adds	r6, #8
    d1e6:	60c5      	str	r5, [r0, #12]
    d1e8:	60a8      	str	r0, [r5, #8]
    d1ea:	4640      	mov	r0, r8
    d1ec:	60f1      	str	r1, [r6, #12]
    d1ee:	60b1      	str	r1, [r6, #8]
    d1f0:	4310      	orrs	r0, r2
    d1f2:	6048      	str	r0, [r1, #4]
    d1f4:	60ce      	str	r6, [r1, #12]
    d1f6:	608e      	str	r6, [r1, #8]
    d1f8:	0038      	movs	r0, r7
    d1fa:	50e2      	str	r2, [r4, r3]
    d1fc:	f000 faea 	bl	d7d4 <__malloc_unlock>
    d200:	0020      	movs	r0, r4
    d202:	3008      	adds	r0, #8
    d204:	e021      	b.n	d24a <_malloc_r+0x19e>
    d206:	2910      	cmp	r1, #16
    d208:	d826      	bhi.n	d258 <_malloc_r+0x1ac>
    d20a:	0038      	movs	r0, r7
    d20c:	f000 fada 	bl	d7c4 <__malloc_lock>
    d210:	2510      	movs	r5, #16
    d212:	2318      	movs	r3, #24
    d214:	2002      	movs	r0, #2
    d216:	4e8b      	ldr	r6, [pc, #556]	; (d444 <_malloc_r+0x398>)
    d218:	18f3      	adds	r3, r6, r3
    d21a:	001a      	movs	r2, r3
    d21c:	685c      	ldr	r4, [r3, #4]
    d21e:	3a08      	subs	r2, #8
    d220:	4294      	cmp	r4, r2
    d222:	d100      	bne.n	d226 <_malloc_r+0x17a>
    d224:	e12e      	b.n	d484 <_malloc_r+0x3d8>
    d226:	2303      	movs	r3, #3
    d228:	6862      	ldr	r2, [r4, #4]
    d22a:	439a      	bics	r2, r3
    d22c:	0013      	movs	r3, r2
    d22e:	68e2      	ldr	r2, [r4, #12]
    d230:	68a1      	ldr	r1, [r4, #8]
    d232:	60ca      	str	r2, [r1, #12]
    d234:	6091      	str	r1, [r2, #8]
    d236:	2201      	movs	r2, #1
    d238:	18e3      	adds	r3, r4, r3
    d23a:	6859      	ldr	r1, [r3, #4]
    d23c:	0038      	movs	r0, r7
    d23e:	430a      	orrs	r2, r1
    d240:	605a      	str	r2, [r3, #4]
    d242:	f000 fac7 	bl	d7d4 <__malloc_unlock>
    d246:	0020      	movs	r0, r4
    d248:	3008      	adds	r0, #8
    d24a:	b003      	add	sp, #12
    d24c:	bc3c      	pop	{r2, r3, r4, r5}
    d24e:	4690      	mov	r8, r2
    d250:	4699      	mov	r9, r3
    d252:	46a2      	mov	sl, r4
    d254:	46ab      	mov	fp, r5
    d256:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d258:	230c      	movs	r3, #12
    d25a:	2000      	movs	r0, #0
    d25c:	603b      	str	r3, [r7, #0]
    d25e:	e7f4      	b.n	d24a <_malloc_r+0x19e>
    d260:	2180      	movs	r1, #128	; 0x80
    d262:	233f      	movs	r3, #63	; 0x3f
    d264:	2040      	movs	r0, #64	; 0x40
    d266:	0089      	lsls	r1, r1, #2
    d268:	4698      	mov	r8, r3
    d26a:	e746      	b.n	d0fa <_malloc_r+0x4e>
    d26c:	4640      	mov	r0, r8
    d26e:	e764      	b.n	d13a <_malloc_r+0x8e>
    d270:	464b      	mov	r3, r9
    d272:	e7e0      	b.n	d236 <_malloc_r+0x18a>
    d274:	2303      	movs	r3, #3
    d276:	68b4      	ldr	r4, [r6, #8]
    d278:	6862      	ldr	r2, [r4, #4]
    d27a:	439a      	bics	r2, r3
    d27c:	4690      	mov	r8, r2
    d27e:	42aa      	cmp	r2, r5
    d280:	d303      	bcc.n	d28a <_malloc_r+0x1de>
    d282:	1b53      	subs	r3, r2, r5
    d284:	2b0f      	cmp	r3, #15
    d286:	dd00      	ble.n	d28a <_malloc_r+0x1de>
    d288:	e086      	b.n	d398 <_malloc_r+0x2ec>
    d28a:	0023      	movs	r3, r4
    d28c:	4443      	add	r3, r8
    d28e:	4a6f      	ldr	r2, [pc, #444]	; (d44c <_malloc_r+0x3a0>)
    d290:	9301      	str	r3, [sp, #4]
    d292:	4b6f      	ldr	r3, [pc, #444]	; (d450 <_malloc_r+0x3a4>)
    d294:	4693      	mov	fp, r2
    d296:	681b      	ldr	r3, [r3, #0]
    d298:	6812      	ldr	r2, [r2, #0]
    d29a:	18eb      	adds	r3, r5, r3
    d29c:	3201      	adds	r2, #1
    d29e:	d100      	bne.n	d2a2 <_malloc_r+0x1f6>
    d2a0:	e168      	b.n	d574 <_malloc_r+0x4c8>
    d2a2:	4a6c      	ldr	r2, [pc, #432]	; (d454 <_malloc_r+0x3a8>)
    d2a4:	4694      	mov	ip, r2
    d2a6:	4463      	add	r3, ip
    d2a8:	0b1b      	lsrs	r3, r3, #12
    d2aa:	031b      	lsls	r3, r3, #12
    d2ac:	9300      	str	r3, [sp, #0]
    d2ae:	9900      	ldr	r1, [sp, #0]
    d2b0:	0038      	movs	r0, r7
    d2b2:	f001 f917 	bl	e4e4 <_sbrk_r>
    d2b6:	0003      	movs	r3, r0
    d2b8:	4681      	mov	r9, r0
    d2ba:	3301      	adds	r3, #1
    d2bc:	d061      	beq.n	d382 <_malloc_r+0x2d6>
    d2be:	9b01      	ldr	r3, [sp, #4]
    d2c0:	4283      	cmp	r3, r0
    d2c2:	d900      	bls.n	d2c6 <_malloc_r+0x21a>
    d2c4:	e0ff      	b.n	d4c6 <_malloc_r+0x41a>
    d2c6:	4b64      	ldr	r3, [pc, #400]	; (d458 <_malloc_r+0x3ac>)
    d2c8:	9a00      	ldr	r2, [sp, #0]
    d2ca:	469a      	mov	sl, r3
    d2cc:	681b      	ldr	r3, [r3, #0]
    d2ce:	469c      	mov	ip, r3
    d2d0:	4653      	mov	r3, sl
    d2d2:	4462      	add	r2, ip
    d2d4:	601a      	str	r2, [r3, #0]
    d2d6:	9b01      	ldr	r3, [sp, #4]
    d2d8:	0011      	movs	r1, r2
    d2da:	4283      	cmp	r3, r0
    d2dc:	d100      	bne.n	d2e0 <_malloc_r+0x234>
    d2de:	e155      	b.n	d58c <_malloc_r+0x4e0>
    d2e0:	465b      	mov	r3, fp
    d2e2:	681b      	ldr	r3, [r3, #0]
    d2e4:	3301      	adds	r3, #1
    d2e6:	d100      	bne.n	d2ea <_malloc_r+0x23e>
    d2e8:	e16c      	b.n	d5c4 <_malloc_r+0x518>
    d2ea:	464b      	mov	r3, r9
    d2ec:	9a01      	ldr	r2, [sp, #4]
    d2ee:	1a9b      	subs	r3, r3, r2
    d2f0:	1859      	adds	r1, r3, r1
    d2f2:	4653      	mov	r3, sl
    d2f4:	6019      	str	r1, [r3, #0]
    d2f6:	2307      	movs	r3, #7
    d2f8:	464a      	mov	r2, r9
    d2fa:	4013      	ands	r3, r2
    d2fc:	d100      	bne.n	d300 <_malloc_r+0x254>
    d2fe:	e124      	b.n	d54a <_malloc_r+0x49e>
    d300:	2108      	movs	r1, #8
    d302:	4689      	mov	r9, r1
    d304:	4955      	ldr	r1, [pc, #340]	; (d45c <_malloc_r+0x3b0>)
    d306:	1ad2      	subs	r2, r2, r3
    d308:	4491      	add	r9, r2
    d30a:	1acb      	subs	r3, r1, r3
    d30c:	9a00      	ldr	r2, [sp, #0]
    d30e:	0038      	movs	r0, r7
    d310:	444a      	add	r2, r9
    d312:	0511      	lsls	r1, r2, #20
    d314:	0d09      	lsrs	r1, r1, #20
    d316:	1a5b      	subs	r3, r3, r1
    d318:	0019      	movs	r1, r3
    d31a:	469b      	mov	fp, r3
    d31c:	f001 f8e2 	bl	e4e4 <_sbrk_r>
    d320:	1c43      	adds	r3, r0, #1
    d322:	d100      	bne.n	d326 <_malloc_r+0x27a>
    d324:	e142      	b.n	d5ac <_malloc_r+0x500>
    d326:	464b      	mov	r3, r9
    d328:	1ac0      	subs	r0, r0, r3
    d32a:	2301      	movs	r3, #1
    d32c:	4458      	add	r0, fp
    d32e:	4318      	orrs	r0, r3
    d330:	4653      	mov	r3, sl
    d332:	681b      	ldr	r3, [r3, #0]
    d334:	445b      	add	r3, fp
    d336:	0019      	movs	r1, r3
    d338:	4653      	mov	r3, sl
    d33a:	6019      	str	r1, [r3, #0]
    d33c:	464b      	mov	r3, r9
    d33e:	60b3      	str	r3, [r6, #8]
    d340:	6058      	str	r0, [r3, #4]
    d342:	42b4      	cmp	r4, r6
    d344:	d013      	beq.n	d36e <_malloc_r+0x2c2>
    d346:	4643      	mov	r3, r8
    d348:	2b0f      	cmp	r3, #15
    d34a:	d800      	bhi.n	d34e <_malloc_r+0x2a2>
    d34c:	e0e8      	b.n	d520 <_malloc_r+0x474>
    d34e:	4643      	mov	r3, r8
    d350:	2207      	movs	r2, #7
    d352:	6860      	ldr	r0, [r4, #4]
    d354:	3b0c      	subs	r3, #12
    d356:	4393      	bics	r3, r2
    d358:	3a06      	subs	r2, #6
    d35a:	4002      	ands	r2, r0
    d35c:	2005      	movs	r0, #5
    d35e:	431a      	orrs	r2, r3
    d360:	6062      	str	r2, [r4, #4]
    d362:	18e2      	adds	r2, r4, r3
    d364:	6050      	str	r0, [r2, #4]
    d366:	6090      	str	r0, [r2, #8]
    d368:	2b0f      	cmp	r3, #15
    d36a:	d900      	bls.n	d36e <_malloc_r+0x2c2>
    d36c:	e122      	b.n	d5b4 <_malloc_r+0x508>
    d36e:	4b3c      	ldr	r3, [pc, #240]	; (d460 <_malloc_r+0x3b4>)
    d370:	681a      	ldr	r2, [r3, #0]
    d372:	4291      	cmp	r1, r2
    d374:	d900      	bls.n	d378 <_malloc_r+0x2cc>
    d376:	6019      	str	r1, [r3, #0]
    d378:	4b3a      	ldr	r3, [pc, #232]	; (d464 <_malloc_r+0x3b8>)
    d37a:	681a      	ldr	r2, [r3, #0]
    d37c:	4291      	cmp	r1, r2
    d37e:	d900      	bls.n	d382 <_malloc_r+0x2d6>
    d380:	6019      	str	r1, [r3, #0]
    d382:	2303      	movs	r3, #3
    d384:	68b4      	ldr	r4, [r6, #8]
    d386:	6862      	ldr	r2, [r4, #4]
    d388:	439a      	bics	r2, r3
    d38a:	1b53      	subs	r3, r2, r5
    d38c:	4295      	cmp	r5, r2
    d38e:	d900      	bls.n	d392 <_malloc_r+0x2e6>
    d390:	e0c9      	b.n	d526 <_malloc_r+0x47a>
    d392:	2b0f      	cmp	r3, #15
    d394:	dc00      	bgt.n	d398 <_malloc_r+0x2ec>
    d396:	e0c6      	b.n	d526 <_malloc_r+0x47a>
    d398:	2201      	movs	r2, #1
    d39a:	0029      	movs	r1, r5
    d39c:	4313      	orrs	r3, r2
    d39e:	4311      	orrs	r1, r2
    d3a0:	1965      	adds	r5, r4, r5
    d3a2:	6061      	str	r1, [r4, #4]
    d3a4:	0038      	movs	r0, r7
    d3a6:	60b5      	str	r5, [r6, #8]
    d3a8:	606b      	str	r3, [r5, #4]
    d3aa:	f000 fa13 	bl	d7d4 <__malloc_unlock>
    d3ae:	0020      	movs	r0, r4
    d3b0:	3008      	adds	r0, #8
    d3b2:	e74a      	b.n	d24a <_malloc_r+0x19e>
    d3b4:	2814      	cmp	r0, #20
    d3b6:	d97a      	bls.n	d4ae <_malloc_r+0x402>
    d3b8:	2854      	cmp	r0, #84	; 0x54
    d3ba:	d900      	bls.n	d3be <_malloc_r+0x312>
    d3bc:	e0ba      	b.n	d534 <_malloc_r+0x488>
    d3be:	236e      	movs	r3, #110	; 0x6e
    d3c0:	4698      	mov	r8, r3
    d3c2:	0b28      	lsrs	r0, r5, #12
    d3c4:	4480      	add	r8, r0
    d3c6:	306f      	adds	r0, #111	; 0x6f
    d3c8:	00c1      	lsls	r1, r0, #3
    d3ca:	e696      	b.n	d0fa <_malloc_r+0x4e>
    d3cc:	0a5a      	lsrs	r2, r3, #9
    d3ce:	2a04      	cmp	r2, #4
    d3d0:	d973      	bls.n	d4ba <_malloc_r+0x40e>
    d3d2:	2a14      	cmp	r2, #20
    d3d4:	d900      	bls.n	d3d8 <_malloc_r+0x32c>
    d3d6:	e0d0      	b.n	d57a <_malloc_r+0x4ce>
    d3d8:	0011      	movs	r1, r2
    d3da:	325c      	adds	r2, #92	; 0x5c
    d3dc:	315b      	adds	r1, #91	; 0x5b
    d3de:	00d2      	lsls	r2, r2, #3
    d3e0:	2308      	movs	r3, #8
    d3e2:	425b      	negs	r3, r3
    d3e4:	469c      	mov	ip, r3
    d3e6:	18b2      	adds	r2, r6, r2
    d3e8:	4494      	add	ip, r2
    d3ea:	4663      	mov	r3, ip
    d3ec:	689a      	ldr	r2, [r3, #8]
    d3ee:	2303      	movs	r3, #3
    d3f0:	4698      	mov	r8, r3
    d3f2:	4594      	cmp	ip, r2
    d3f4:	d100      	bne.n	d3f8 <_malloc_r+0x34c>
    d3f6:	e0ab      	b.n	d550 <_malloc_r+0x4a4>
    d3f8:	4643      	mov	r3, r8
    d3fa:	6851      	ldr	r1, [r2, #4]
    d3fc:	4399      	bics	r1, r3
    d3fe:	4589      	cmp	r9, r1
    d400:	d300      	bcc.n	d404 <_malloc_r+0x358>
    d402:	e095      	b.n	d530 <_malloc_r+0x484>
    d404:	6892      	ldr	r2, [r2, #8]
    d406:	4594      	cmp	ip, r2
    d408:	d1f6      	bne.n	d3f8 <_malloc_r+0x34c>
    d40a:	4663      	mov	r3, ip
    d40c:	68da      	ldr	r2, [r3, #12]
    d40e:	6873      	ldr	r3, [r6, #4]
    d410:	4661      	mov	r1, ip
    d412:	60e2      	str	r2, [r4, #12]
    d414:	60a1      	str	r1, [r4, #8]
    d416:	6094      	str	r4, [r2, #8]
    d418:	60cc      	str	r4, [r1, #12]
    d41a:	e6b6      	b.n	d18a <_malloc_r+0xde>
    d41c:	2301      	movs	r3, #1
    d41e:	1960      	adds	r0, r4, r5
    d420:	431d      	orrs	r5, r3
    d422:	6065      	str	r5, [r4, #4]
    d424:	6170      	str	r0, [r6, #20]
    d426:	6130      	str	r0, [r6, #16]
    d428:	60c2      	str	r2, [r0, #12]
    d42a:	6082      	str	r2, [r0, #8]
    d42c:	001a      	movs	r2, r3
    d42e:	464b      	mov	r3, r9
    d430:	430a      	orrs	r2, r1
    d432:	6042      	str	r2, [r0, #4]
    d434:	0038      	movs	r0, r7
    d436:	50e1      	str	r1, [r4, r3]
    d438:	f000 f9cc 	bl	d7d4 <__malloc_unlock>
    d43c:	0020      	movs	r0, r4
    d43e:	3008      	adds	r0, #8
    d440:	e703      	b.n	d24a <_malloc_r+0x19e>
    d442:	46c0      	nop			; (mov r8, r8)
    d444:	20000608 	.word	0x20000608
    d448:	000001ff 	.word	0x000001ff
    d44c:	20000a10 	.word	0x20000a10
    d450:	20000b78 	.word	0x20000b78
    d454:	0000100f 	.word	0x0000100f
    d458:	20000b48 	.word	0x20000b48
    d45c:	00001008 	.word	0x00001008
    d460:	20000b70 	.word	0x20000b70
    d464:	20000b74 	.word	0x20000b74
    d468:	6873      	ldr	r3, [r6, #4]
    d46a:	e68e      	b.n	d18a <_malloc_r+0xde>
    d46c:	2308      	movs	r3, #8
    d46e:	469b      	mov	fp, r3
    d470:	3b07      	subs	r3, #7
    d472:	44dc      	add	ip, fp
    d474:	469b      	mov	fp, r3
    d476:	44da      	add	sl, fp
    d478:	4643      	mov	r3, r8
    d47a:	4652      	mov	r2, sl
    d47c:	4213      	tst	r3, r2
    d47e:	d000      	beq.n	d482 <_malloc_r+0x3d6>
    d480:	e697      	b.n	d1b2 <_malloc_r+0x106>
    d482:	e037      	b.n	d4f4 <_malloc_r+0x448>
    d484:	68dc      	ldr	r4, [r3, #12]
    d486:	3002      	adds	r0, #2
    d488:	42a3      	cmp	r3, r4
    d48a:	d100      	bne.n	d48e <_malloc_r+0x3e2>
    d48c:	e655      	b.n	d13a <_malloc_r+0x8e>
    d48e:	e6ca      	b.n	d226 <_malloc_r+0x17a>
    d490:	2201      	movs	r2, #1
    d492:	18e3      	adds	r3, r4, r3
    d494:	6859      	ldr	r1, [r3, #4]
    d496:	0038      	movs	r0, r7
    d498:	430a      	orrs	r2, r1
    d49a:	605a      	str	r2, [r3, #4]
    d49c:	68e3      	ldr	r3, [r4, #12]
    d49e:	68a2      	ldr	r2, [r4, #8]
    d4a0:	60d3      	str	r3, [r2, #12]
    d4a2:	609a      	str	r2, [r3, #8]
    d4a4:	f000 f996 	bl	d7d4 <__malloc_unlock>
    d4a8:	0020      	movs	r0, r4
    d4aa:	3008      	adds	r0, #8
    d4ac:	e6cd      	b.n	d24a <_malloc_r+0x19e>
    d4ae:	235b      	movs	r3, #91	; 0x5b
    d4b0:	4698      	mov	r8, r3
    d4b2:	4480      	add	r8, r0
    d4b4:	305c      	adds	r0, #92	; 0x5c
    d4b6:	00c1      	lsls	r1, r0, #3
    d4b8:	e61f      	b.n	d0fa <_malloc_r+0x4e>
    d4ba:	099a      	lsrs	r2, r3, #6
    d4bc:	0011      	movs	r1, r2
    d4be:	3239      	adds	r2, #57	; 0x39
    d4c0:	3138      	adds	r1, #56	; 0x38
    d4c2:	00d2      	lsls	r2, r2, #3
    d4c4:	e78c      	b.n	d3e0 <_malloc_r+0x334>
    d4c6:	42b4      	cmp	r4, r6
    d4c8:	d000      	beq.n	d4cc <_malloc_r+0x420>
    d4ca:	e75a      	b.n	d382 <_malloc_r+0x2d6>
    d4cc:	4b4f      	ldr	r3, [pc, #316]	; (d60c <_malloc_r+0x560>)
    d4ce:	9a00      	ldr	r2, [sp, #0]
    d4d0:	469a      	mov	sl, r3
    d4d2:	681b      	ldr	r3, [r3, #0]
    d4d4:	469c      	mov	ip, r3
    d4d6:	4653      	mov	r3, sl
    d4d8:	4462      	add	r2, ip
    d4da:	0011      	movs	r1, r2
    d4dc:	601a      	str	r2, [r3, #0]
    d4de:	e6ff      	b.n	d2e0 <_malloc_r+0x234>
    d4e0:	2308      	movs	r3, #8
    d4e2:	425b      	negs	r3, r3
    d4e4:	469c      	mov	ip, r3
    d4e6:	44e1      	add	r9, ip
    d4e8:	464b      	mov	r3, r9
    d4ea:	689b      	ldr	r3, [r3, #8]
    d4ec:	3801      	subs	r0, #1
    d4ee:	4599      	cmp	r9, r3
    d4f0:	d000      	beq.n	d4f4 <_malloc_r+0x448>
    d4f2:	e084      	b.n	d5fe <_malloc_r+0x552>
    d4f4:	4643      	mov	r3, r8
    d4f6:	4203      	tst	r3, r0
    d4f8:	d1f2      	bne.n	d4e0 <_malloc_r+0x434>
    d4fa:	6873      	ldr	r3, [r6, #4]
    d4fc:	438b      	bics	r3, r1
    d4fe:	6073      	str	r3, [r6, #4]
    d500:	0049      	lsls	r1, r1, #1
    d502:	4299      	cmp	r1, r3
    d504:	d900      	bls.n	d508 <_malloc_r+0x45c>
    d506:	e6b5      	b.n	d274 <_malloc_r+0x1c8>
    d508:	2900      	cmp	r1, #0
    d50a:	d100      	bne.n	d50e <_malloc_r+0x462>
    d50c:	e6b2      	b.n	d274 <_malloc_r+0x1c8>
    d50e:	4650      	mov	r0, sl
    d510:	420b      	tst	r3, r1
    d512:	d000      	beq.n	d516 <_malloc_r+0x46a>
    d514:	e648      	b.n	d1a8 <_malloc_r+0xfc>
    d516:	0049      	lsls	r1, r1, #1
    d518:	3004      	adds	r0, #4
    d51a:	420b      	tst	r3, r1
    d51c:	d0fb      	beq.n	d516 <_malloc_r+0x46a>
    d51e:	e643      	b.n	d1a8 <_malloc_r+0xfc>
    d520:	2301      	movs	r3, #1
    d522:	464a      	mov	r2, r9
    d524:	6053      	str	r3, [r2, #4]
    d526:	0038      	movs	r0, r7
    d528:	f000 f954 	bl	d7d4 <__malloc_unlock>
    d52c:	2000      	movs	r0, #0
    d52e:	e68c      	b.n	d24a <_malloc_r+0x19e>
    d530:	4694      	mov	ip, r2
    d532:	e76a      	b.n	d40a <_malloc_r+0x35e>
    d534:	23aa      	movs	r3, #170	; 0xaa
    d536:	005b      	lsls	r3, r3, #1
    d538:	4298      	cmp	r0, r3
    d53a:	d811      	bhi.n	d560 <_malloc_r+0x4b4>
    d53c:	3bdd      	subs	r3, #221	; 0xdd
    d53e:	4698      	mov	r8, r3
    d540:	0be8      	lsrs	r0, r5, #15
    d542:	4480      	add	r8, r0
    d544:	3078      	adds	r0, #120	; 0x78
    d546:	00c1      	lsls	r1, r0, #3
    d548:	e5d7      	b.n	d0fa <_malloc_r+0x4e>
    d54a:	2380      	movs	r3, #128	; 0x80
    d54c:	015b      	lsls	r3, r3, #5
    d54e:	e6dd      	b.n	d30c <_malloc_r+0x260>
    d550:	1089      	asrs	r1, r1, #2
    d552:	3b02      	subs	r3, #2
    d554:	408b      	lsls	r3, r1
    d556:	6872      	ldr	r2, [r6, #4]
    d558:	4313      	orrs	r3, r2
    d55a:	6073      	str	r3, [r6, #4]
    d55c:	4662      	mov	r2, ip
    d55e:	e757      	b.n	d410 <_malloc_r+0x364>
    d560:	4b2b      	ldr	r3, [pc, #172]	; (d610 <_malloc_r+0x564>)
    d562:	4298      	cmp	r0, r3
    d564:	d81c      	bhi.n	d5a0 <_malloc_r+0x4f4>
    d566:	237c      	movs	r3, #124	; 0x7c
    d568:	4698      	mov	r8, r3
    d56a:	0ca8      	lsrs	r0, r5, #18
    d56c:	4480      	add	r8, r0
    d56e:	307d      	adds	r0, #125	; 0x7d
    d570:	00c1      	lsls	r1, r0, #3
    d572:	e5c2      	b.n	d0fa <_malloc_r+0x4e>
    d574:	3310      	adds	r3, #16
    d576:	9300      	str	r3, [sp, #0]
    d578:	e699      	b.n	d2ae <_malloc_r+0x202>
    d57a:	2a54      	cmp	r2, #84	; 0x54
    d57c:	d826      	bhi.n	d5cc <_malloc_r+0x520>
    d57e:	464b      	mov	r3, r9
    d580:	0b1a      	lsrs	r2, r3, #12
    d582:	0011      	movs	r1, r2
    d584:	326f      	adds	r2, #111	; 0x6f
    d586:	316e      	adds	r1, #110	; 0x6e
    d588:	00d2      	lsls	r2, r2, #3
    d58a:	e729      	b.n	d3e0 <_malloc_r+0x334>
    d58c:	051b      	lsls	r3, r3, #20
    d58e:	d000      	beq.n	d592 <_malloc_r+0x4e6>
    d590:	e6a6      	b.n	d2e0 <_malloc_r+0x234>
    d592:	2001      	movs	r0, #1
    d594:	9b00      	ldr	r3, [sp, #0]
    d596:	68b2      	ldr	r2, [r6, #8]
    d598:	4443      	add	r3, r8
    d59a:	4303      	orrs	r3, r0
    d59c:	6053      	str	r3, [r2, #4]
    d59e:	e6e6      	b.n	d36e <_malloc_r+0x2c2>
    d5a0:	21fe      	movs	r1, #254	; 0xfe
    d5a2:	237e      	movs	r3, #126	; 0x7e
    d5a4:	207f      	movs	r0, #127	; 0x7f
    d5a6:	0089      	lsls	r1, r1, #2
    d5a8:	4698      	mov	r8, r3
    d5aa:	e5a6      	b.n	d0fa <_malloc_r+0x4e>
    d5ac:	2300      	movs	r3, #0
    d5ae:	2001      	movs	r0, #1
    d5b0:	469b      	mov	fp, r3
    d5b2:	e6bd      	b.n	d330 <_malloc_r+0x284>
    d5b4:	0021      	movs	r1, r4
    d5b6:	0038      	movs	r0, r7
    d5b8:	3108      	adds	r1, #8
    d5ba:	f7ff fa1f 	bl	c9fc <_free_r>
    d5be:	4653      	mov	r3, sl
    d5c0:	6819      	ldr	r1, [r3, #0]
    d5c2:	e6d4      	b.n	d36e <_malloc_r+0x2c2>
    d5c4:	465b      	mov	r3, fp
    d5c6:	464a      	mov	r2, r9
    d5c8:	601a      	str	r2, [r3, #0]
    d5ca:	e694      	b.n	d2f6 <_malloc_r+0x24a>
    d5cc:	21aa      	movs	r1, #170	; 0xaa
    d5ce:	0049      	lsls	r1, r1, #1
    d5d0:	428a      	cmp	r2, r1
    d5d2:	d806      	bhi.n	d5e2 <_malloc_r+0x536>
    d5d4:	464b      	mov	r3, r9
    d5d6:	0bda      	lsrs	r2, r3, #15
    d5d8:	0011      	movs	r1, r2
    d5da:	3278      	adds	r2, #120	; 0x78
    d5dc:	3177      	adds	r1, #119	; 0x77
    d5de:	00d2      	lsls	r2, r2, #3
    d5e0:	e6fe      	b.n	d3e0 <_malloc_r+0x334>
    d5e2:	490b      	ldr	r1, [pc, #44]	; (d610 <_malloc_r+0x564>)
    d5e4:	428a      	cmp	r2, r1
    d5e6:	d806      	bhi.n	d5f6 <_malloc_r+0x54a>
    d5e8:	464b      	mov	r3, r9
    d5ea:	0c9a      	lsrs	r2, r3, #18
    d5ec:	0011      	movs	r1, r2
    d5ee:	327d      	adds	r2, #125	; 0x7d
    d5f0:	317c      	adds	r1, #124	; 0x7c
    d5f2:	00d2      	lsls	r2, r2, #3
    d5f4:	e6f4      	b.n	d3e0 <_malloc_r+0x334>
    d5f6:	22fe      	movs	r2, #254	; 0xfe
    d5f8:	217e      	movs	r1, #126	; 0x7e
    d5fa:	0092      	lsls	r2, r2, #2
    d5fc:	e6f0      	b.n	d3e0 <_malloc_r+0x334>
    d5fe:	6873      	ldr	r3, [r6, #4]
    d600:	e77e      	b.n	d500 <_malloc_r+0x454>
    d602:	002b      	movs	r3, r5
    d604:	08e8      	lsrs	r0, r5, #3
    d606:	3308      	adds	r3, #8
    d608:	e605      	b.n	d216 <_malloc_r+0x16a>
    d60a:	46c0      	nop			; (mov r8, r8)
    d60c:	20000b48 	.word	0x20000b48
    d610:	00000554 	.word	0x00000554

0000d614 <_mbrtowc_r>:
    d614:	b530      	push	{r4, r5, lr}
    d616:	0004      	movs	r4, r0
    d618:	b083      	sub	sp, #12
    d61a:	2a00      	cmp	r2, #0
    d61c:	d013      	beq.n	d646 <_mbrtowc_r+0x32>
    d61e:	4813      	ldr	r0, [pc, #76]	; (d66c <_mbrtowc_r+0x58>)
    d620:	6800      	ldr	r0, [r0, #0]
    d622:	6b40      	ldr	r0, [r0, #52]	; 0x34
    d624:	2800      	cmp	r0, #0
    d626:	d01d      	beq.n	d664 <_mbrtowc_r+0x50>
    d628:	9d06      	ldr	r5, [sp, #24]
    d62a:	9500      	str	r5, [sp, #0]
    d62c:	25e4      	movs	r5, #228	; 0xe4
    d62e:	5945      	ldr	r5, [r0, r5]
    d630:	0020      	movs	r0, r4
    d632:	47a8      	blx	r5
    d634:	1c43      	adds	r3, r0, #1
    d636:	d104      	bne.n	d642 <_mbrtowc_r+0x2e>
    d638:	2300      	movs	r3, #0
    d63a:	9a06      	ldr	r2, [sp, #24]
    d63c:	6013      	str	r3, [r2, #0]
    d63e:	338a      	adds	r3, #138	; 0x8a
    d640:	6023      	str	r3, [r4, #0]
    d642:	b003      	add	sp, #12
    d644:	bd30      	pop	{r4, r5, pc}
    d646:	4b09      	ldr	r3, [pc, #36]	; (d66c <_mbrtowc_r+0x58>)
    d648:	681b      	ldr	r3, [r3, #0]
    d64a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    d64c:	2b00      	cmp	r3, #0
    d64e:	d00b      	beq.n	d668 <_mbrtowc_r+0x54>
    d650:	9a06      	ldr	r2, [sp, #24]
    d652:	2100      	movs	r1, #0
    d654:	9200      	str	r2, [sp, #0]
    d656:	22e4      	movs	r2, #228	; 0xe4
    d658:	0020      	movs	r0, r4
    d65a:	589d      	ldr	r5, [r3, r2]
    d65c:	2301      	movs	r3, #1
    d65e:	4a04      	ldr	r2, [pc, #16]	; (d670 <_mbrtowc_r+0x5c>)
    d660:	47a8      	blx	r5
    d662:	e7e7      	b.n	d634 <_mbrtowc_r+0x20>
    d664:	4803      	ldr	r0, [pc, #12]	; (d674 <_mbrtowc_r+0x60>)
    d666:	e7df      	b.n	d628 <_mbrtowc_r+0x14>
    d668:	4b02      	ldr	r3, [pc, #8]	; (d674 <_mbrtowc_r+0x60>)
    d66a:	e7f1      	b.n	d650 <_mbrtowc_r+0x3c>
    d66c:	2000006c 	.word	0x2000006c
    d670:	0001187c 	.word	0x0001187c
    d674:	2000049c 	.word	0x2000049c

0000d678 <__ascii_mbtowc>:
    d678:	b082      	sub	sp, #8
    d67a:	2900      	cmp	r1, #0
    d67c:	d00a      	beq.n	d694 <__ascii_mbtowc+0x1c>
    d67e:	2a00      	cmp	r2, #0
    d680:	d00b      	beq.n	d69a <__ascii_mbtowc+0x22>
    d682:	2b00      	cmp	r3, #0
    d684:	d00b      	beq.n	d69e <__ascii_mbtowc+0x26>
    d686:	7813      	ldrb	r3, [r2, #0]
    d688:	600b      	str	r3, [r1, #0]
    d68a:	7810      	ldrb	r0, [r2, #0]
    d68c:	1e43      	subs	r3, r0, #1
    d68e:	4198      	sbcs	r0, r3
    d690:	b002      	add	sp, #8
    d692:	4770      	bx	lr
    d694:	a901      	add	r1, sp, #4
    d696:	2a00      	cmp	r2, #0
    d698:	d1f3      	bne.n	d682 <__ascii_mbtowc+0xa>
    d69a:	2000      	movs	r0, #0
    d69c:	e7f8      	b.n	d690 <__ascii_mbtowc+0x18>
    d69e:	2002      	movs	r0, #2
    d6a0:	4240      	negs	r0, r0
    d6a2:	e7f5      	b.n	d690 <__ascii_mbtowc+0x18>

0000d6a4 <memchr>:
    d6a4:	b570      	push	{r4, r5, r6, lr}
    d6a6:	b2cd      	uxtb	r5, r1
    d6a8:	0783      	lsls	r3, r0, #30
    d6aa:	d034      	beq.n	d716 <memchr+0x72>
    d6ac:	1e54      	subs	r4, r2, #1
    d6ae:	2a00      	cmp	r2, #0
    d6b0:	d01b      	beq.n	d6ea <memchr+0x46>
    d6b2:	7803      	ldrb	r3, [r0, #0]
    d6b4:	42ab      	cmp	r3, r5
    d6b6:	d019      	beq.n	d6ec <memchr+0x48>
    d6b8:	2203      	movs	r2, #3
    d6ba:	e004      	b.n	d6c6 <memchr+0x22>
    d6bc:	3c01      	subs	r4, #1
    d6be:	d314      	bcc.n	d6ea <memchr+0x46>
    d6c0:	7803      	ldrb	r3, [r0, #0]
    d6c2:	42ab      	cmp	r3, r5
    d6c4:	d012      	beq.n	d6ec <memchr+0x48>
    d6c6:	3001      	adds	r0, #1
    d6c8:	4210      	tst	r0, r2
    d6ca:	d1f7      	bne.n	d6bc <memchr+0x18>
    d6cc:	2c03      	cmp	r4, #3
    d6ce:	d80e      	bhi.n	d6ee <memchr+0x4a>
    d6d0:	2c00      	cmp	r4, #0
    d6d2:	d00a      	beq.n	d6ea <memchr+0x46>
    d6d4:	7803      	ldrb	r3, [r0, #0]
    d6d6:	42ab      	cmp	r3, r5
    d6d8:	d008      	beq.n	d6ec <memchr+0x48>
    d6da:	1904      	adds	r4, r0, r4
    d6dc:	e002      	b.n	d6e4 <memchr+0x40>
    d6de:	7803      	ldrb	r3, [r0, #0]
    d6e0:	42ab      	cmp	r3, r5
    d6e2:	d003      	beq.n	d6ec <memchr+0x48>
    d6e4:	3001      	adds	r0, #1
    d6e6:	4284      	cmp	r4, r0
    d6e8:	d1f9      	bne.n	d6de <memchr+0x3a>
    d6ea:	2000      	movs	r0, #0
    d6ec:	bd70      	pop	{r4, r5, r6, pc}
    d6ee:	22ff      	movs	r2, #255	; 0xff
    d6f0:	060b      	lsls	r3, r1, #24
    d6f2:	0c1b      	lsrs	r3, r3, #16
    d6f4:	4011      	ands	r1, r2
    d6f6:	4319      	orrs	r1, r3
    d6f8:	040b      	lsls	r3, r1, #16
    d6fa:	4e08      	ldr	r6, [pc, #32]	; (d71c <memchr+0x78>)
    d6fc:	4319      	orrs	r1, r3
    d6fe:	6803      	ldr	r3, [r0, #0]
    d700:	4a07      	ldr	r2, [pc, #28]	; (d720 <memchr+0x7c>)
    d702:	404b      	eors	r3, r1
    d704:	189a      	adds	r2, r3, r2
    d706:	439a      	bics	r2, r3
    d708:	4232      	tst	r2, r6
    d70a:	d1e3      	bne.n	d6d4 <memchr+0x30>
    d70c:	3c04      	subs	r4, #4
    d70e:	3004      	adds	r0, #4
    d710:	2c03      	cmp	r4, #3
    d712:	d8f4      	bhi.n	d6fe <memchr+0x5a>
    d714:	e7dc      	b.n	d6d0 <memchr+0x2c>
    d716:	0014      	movs	r4, r2
    d718:	e7d8      	b.n	d6cc <memchr+0x28>
    d71a:	46c0      	nop			; (mov r8, r8)
    d71c:	80808080 	.word	0x80808080
    d720:	fefefeff 	.word	0xfefefeff

0000d724 <memmove>:
    d724:	b5f0      	push	{r4, r5, r6, r7, lr}
    d726:	4288      	cmp	r0, r1
    d728:	d90a      	bls.n	d740 <memmove+0x1c>
    d72a:	188b      	adds	r3, r1, r2
    d72c:	4298      	cmp	r0, r3
    d72e:	d207      	bcs.n	d740 <memmove+0x1c>
    d730:	1e53      	subs	r3, r2, #1
    d732:	2a00      	cmp	r2, #0
    d734:	d003      	beq.n	d73e <memmove+0x1a>
    d736:	5cca      	ldrb	r2, [r1, r3]
    d738:	54c2      	strb	r2, [r0, r3]
    d73a:	3b01      	subs	r3, #1
    d73c:	d2fb      	bcs.n	d736 <memmove+0x12>
    d73e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d740:	0005      	movs	r5, r0
    d742:	2a0f      	cmp	r2, #15
    d744:	d808      	bhi.n	d758 <memmove+0x34>
    d746:	2a00      	cmp	r2, #0
    d748:	d0f9      	beq.n	d73e <memmove+0x1a>
    d74a:	2300      	movs	r3, #0
    d74c:	5ccc      	ldrb	r4, [r1, r3]
    d74e:	54ec      	strb	r4, [r5, r3]
    d750:	3301      	adds	r3, #1
    d752:	4293      	cmp	r3, r2
    d754:	d1fa      	bne.n	d74c <memmove+0x28>
    d756:	e7f2      	b.n	d73e <memmove+0x1a>
    d758:	000b      	movs	r3, r1
    d75a:	4303      	orrs	r3, r0
    d75c:	079b      	lsls	r3, r3, #30
    d75e:	d12d      	bne.n	d7bc <memmove+0x98>
    d760:	0015      	movs	r5, r2
    d762:	000c      	movs	r4, r1
    d764:	0003      	movs	r3, r0
    d766:	3d10      	subs	r5, #16
    d768:	092f      	lsrs	r7, r5, #4
    d76a:	3701      	adds	r7, #1
    d76c:	013f      	lsls	r7, r7, #4
    d76e:	19c7      	adds	r7, r0, r7
    d770:	6826      	ldr	r6, [r4, #0]
    d772:	601e      	str	r6, [r3, #0]
    d774:	6866      	ldr	r6, [r4, #4]
    d776:	605e      	str	r6, [r3, #4]
    d778:	68a6      	ldr	r6, [r4, #8]
    d77a:	609e      	str	r6, [r3, #8]
    d77c:	68e6      	ldr	r6, [r4, #12]
    d77e:	3410      	adds	r4, #16
    d780:	60de      	str	r6, [r3, #12]
    d782:	3310      	adds	r3, #16
    d784:	429f      	cmp	r7, r3
    d786:	d1f3      	bne.n	d770 <memmove+0x4c>
    d788:	240f      	movs	r4, #15
    d78a:	43a5      	bics	r5, r4
    d78c:	3510      	adds	r5, #16
    d78e:	1949      	adds	r1, r1, r5
    d790:	4014      	ands	r4, r2
    d792:	1945      	adds	r5, r0, r5
    d794:	2c03      	cmp	r4, #3
    d796:	d913      	bls.n	d7c0 <memmove+0x9c>
    d798:	2300      	movs	r3, #0
    d79a:	1f27      	subs	r7, r4, #4
    d79c:	08be      	lsrs	r6, r7, #2
    d79e:	3601      	adds	r6, #1
    d7a0:	00b6      	lsls	r6, r6, #2
    d7a2:	58cc      	ldr	r4, [r1, r3]
    d7a4:	50ec      	str	r4, [r5, r3]
    d7a6:	3304      	adds	r3, #4
    d7a8:	42b3      	cmp	r3, r6
    d7aa:	d1fa      	bne.n	d7a2 <memmove+0x7e>
    d7ac:	2603      	movs	r6, #3
    d7ae:	43b7      	bics	r7, r6
    d7b0:	1d3c      	adds	r4, r7, #4
    d7b2:	1909      	adds	r1, r1, r4
    d7b4:	192d      	adds	r5, r5, r4
    d7b6:	4032      	ands	r2, r6
    d7b8:	d1c7      	bne.n	d74a <memmove+0x26>
    d7ba:	e7c0      	b.n	d73e <memmove+0x1a>
    d7bc:	0005      	movs	r5, r0
    d7be:	e7c4      	b.n	d74a <memmove+0x26>
    d7c0:	0022      	movs	r2, r4
    d7c2:	e7c0      	b.n	d746 <memmove+0x22>

0000d7c4 <__malloc_lock>:
    d7c4:	b510      	push	{r4, lr}
    d7c6:	4802      	ldr	r0, [pc, #8]	; (d7d0 <__malloc_lock+0xc>)
    d7c8:	f7ff fbe0 	bl	cf8c <__retarget_lock_acquire_recursive>
    d7cc:	bd10      	pop	{r4, pc}
    d7ce:	46c0      	nop			; (mov r8, r8)
    d7d0:	20001664 	.word	0x20001664

0000d7d4 <__malloc_unlock>:
    d7d4:	b510      	push	{r4, lr}
    d7d6:	4802      	ldr	r0, [pc, #8]	; (d7e0 <__malloc_unlock+0xc>)
    d7d8:	f7ff fbda 	bl	cf90 <__retarget_lock_release_recursive>
    d7dc:	bd10      	pop	{r4, pc}
    d7de:	46c0      	nop			; (mov r8, r8)
    d7e0:	20001664 	.word	0x20001664

0000d7e4 <_Balloc>:
    d7e4:	b570      	push	{r4, r5, r6, lr}
    d7e6:	0004      	movs	r4, r0
    d7e8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    d7ea:	000d      	movs	r5, r1
    d7ec:	2800      	cmp	r0, #0
    d7ee:	d00a      	beq.n	d806 <_Balloc+0x22>
    d7f0:	00ab      	lsls	r3, r5, #2
    d7f2:	18c3      	adds	r3, r0, r3
    d7f4:	6818      	ldr	r0, [r3, #0]
    d7f6:	2800      	cmp	r0, #0
    d7f8:	d00f      	beq.n	d81a <_Balloc+0x36>
    d7fa:	6802      	ldr	r2, [r0, #0]
    d7fc:	601a      	str	r2, [r3, #0]
    d7fe:	2300      	movs	r3, #0
    d800:	6103      	str	r3, [r0, #16]
    d802:	60c3      	str	r3, [r0, #12]
    d804:	bd70      	pop	{r4, r5, r6, pc}
    d806:	2221      	movs	r2, #33	; 0x21
    d808:	2104      	movs	r1, #4
    d80a:	0020      	movs	r0, r4
    d80c:	f002 fb16 	bl	fe3c <_calloc_r>
    d810:	64e0      	str	r0, [r4, #76]	; 0x4c
    d812:	2800      	cmp	r0, #0
    d814:	d1ec      	bne.n	d7f0 <_Balloc+0xc>
    d816:	2000      	movs	r0, #0
    d818:	e7f4      	b.n	d804 <_Balloc+0x20>
    d81a:	2601      	movs	r6, #1
    d81c:	40ae      	lsls	r6, r5
    d81e:	1d72      	adds	r2, r6, #5
    d820:	0092      	lsls	r2, r2, #2
    d822:	2101      	movs	r1, #1
    d824:	0020      	movs	r0, r4
    d826:	f002 fb09 	bl	fe3c <_calloc_r>
    d82a:	2800      	cmp	r0, #0
    d82c:	d0f3      	beq.n	d816 <_Balloc+0x32>
    d82e:	6045      	str	r5, [r0, #4]
    d830:	6086      	str	r6, [r0, #8]
    d832:	e7e4      	b.n	d7fe <_Balloc+0x1a>

0000d834 <_Bfree>:
    d834:	2900      	cmp	r1, #0
    d836:	d006      	beq.n	d846 <_Bfree+0x12>
    d838:	684b      	ldr	r3, [r1, #4]
    d83a:	009a      	lsls	r2, r3, #2
    d83c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    d83e:	189b      	adds	r3, r3, r2
    d840:	681a      	ldr	r2, [r3, #0]
    d842:	600a      	str	r2, [r1, #0]
    d844:	6019      	str	r1, [r3, #0]
    d846:	4770      	bx	lr

0000d848 <__multadd>:
    d848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d84a:	46ce      	mov	lr, r9
    d84c:	4647      	mov	r7, r8
    d84e:	4681      	mov	r9, r0
    d850:	0008      	movs	r0, r1
    d852:	b580      	push	{r7, lr}
    d854:	000d      	movs	r5, r1
    d856:	690c      	ldr	r4, [r1, #16]
    d858:	001f      	movs	r7, r3
    d85a:	2100      	movs	r1, #0
    d85c:	3014      	adds	r0, #20
    d85e:	6803      	ldr	r3, [r0, #0]
    d860:	3101      	adds	r1, #1
    d862:	041e      	lsls	r6, r3, #16
    d864:	0c36      	lsrs	r6, r6, #16
    d866:	4356      	muls	r6, r2
    d868:	0c1b      	lsrs	r3, r3, #16
    d86a:	4353      	muls	r3, r2
    d86c:	19f6      	adds	r6, r6, r7
    d86e:	0c37      	lsrs	r7, r6, #16
    d870:	19db      	adds	r3, r3, r7
    d872:	0436      	lsls	r6, r6, #16
    d874:	0c1f      	lsrs	r7, r3, #16
    d876:	0c36      	lsrs	r6, r6, #16
    d878:	041b      	lsls	r3, r3, #16
    d87a:	199b      	adds	r3, r3, r6
    d87c:	c008      	stmia	r0!, {r3}
    d87e:	428c      	cmp	r4, r1
    d880:	dced      	bgt.n	d85e <__multadd+0x16>
    d882:	2f00      	cmp	r7, #0
    d884:	d008      	beq.n	d898 <__multadd+0x50>
    d886:	68ab      	ldr	r3, [r5, #8]
    d888:	429c      	cmp	r4, r3
    d88a:	da0a      	bge.n	d8a2 <__multadd+0x5a>
    d88c:	1d23      	adds	r3, r4, #4
    d88e:	009b      	lsls	r3, r3, #2
    d890:	18eb      	adds	r3, r5, r3
    d892:	3401      	adds	r4, #1
    d894:	605f      	str	r7, [r3, #4]
    d896:	612c      	str	r4, [r5, #16]
    d898:	0028      	movs	r0, r5
    d89a:	bc0c      	pop	{r2, r3}
    d89c:	4690      	mov	r8, r2
    d89e:	4699      	mov	r9, r3
    d8a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d8a2:	686b      	ldr	r3, [r5, #4]
    d8a4:	4648      	mov	r0, r9
    d8a6:	1c59      	adds	r1, r3, #1
    d8a8:	f7ff ff9c 	bl	d7e4 <_Balloc>
    d8ac:	0029      	movs	r1, r5
    d8ae:	692b      	ldr	r3, [r5, #16]
    d8b0:	4680      	mov	r8, r0
    d8b2:	1c9a      	adds	r2, r3, #2
    d8b4:	0092      	lsls	r2, r2, #2
    d8b6:	310c      	adds	r1, #12
    d8b8:	300c      	adds	r0, #12
    d8ba:	f7f9 f9f5 	bl	6ca8 <memcpy>
    d8be:	686b      	ldr	r3, [r5, #4]
    d8c0:	009a      	lsls	r2, r3, #2
    d8c2:	464b      	mov	r3, r9
    d8c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    d8c6:	189b      	adds	r3, r3, r2
    d8c8:	681a      	ldr	r2, [r3, #0]
    d8ca:	602a      	str	r2, [r5, #0]
    d8cc:	601d      	str	r5, [r3, #0]
    d8ce:	4645      	mov	r5, r8
    d8d0:	e7dc      	b.n	d88c <__multadd+0x44>
    d8d2:	46c0      	nop			; (mov r8, r8)

0000d8d4 <__s2b>:
    d8d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d8d6:	4647      	mov	r7, r8
    d8d8:	46ce      	mov	lr, r9
    d8da:	0006      	movs	r6, r0
    d8dc:	0018      	movs	r0, r3
    d8de:	b580      	push	{r7, lr}
    d8e0:	000d      	movs	r5, r1
    d8e2:	3008      	adds	r0, #8
    d8e4:	2109      	movs	r1, #9
    d8e6:	4690      	mov	r8, r2
    d8e8:	001f      	movs	r7, r3
    d8ea:	f7f6 ff73 	bl	47d4 <__divsi3>
    d8ee:	2801      	cmp	r0, #1
    d8f0:	dd38      	ble.n	d964 <__s2b+0x90>
    d8f2:	2201      	movs	r2, #1
    d8f4:	2100      	movs	r1, #0
    d8f6:	0052      	lsls	r2, r2, #1
    d8f8:	3101      	adds	r1, #1
    d8fa:	4290      	cmp	r0, r2
    d8fc:	dcfb      	bgt.n	d8f6 <__s2b+0x22>
    d8fe:	0030      	movs	r0, r6
    d900:	f7ff ff70 	bl	d7e4 <_Balloc>
    d904:	9b08      	ldr	r3, [sp, #32]
    d906:	6143      	str	r3, [r0, #20]
    d908:	2301      	movs	r3, #1
    d90a:	6103      	str	r3, [r0, #16]
    d90c:	4643      	mov	r3, r8
    d90e:	2b09      	cmp	r3, #9
    d910:	dd24      	ble.n	d95c <__s2b+0x88>
    d912:	2309      	movs	r3, #9
    d914:	4699      	mov	r9, r3
    d916:	44a9      	add	r9, r5
    d918:	464c      	mov	r4, r9
    d91a:	4445      	add	r5, r8
    d91c:	7823      	ldrb	r3, [r4, #0]
    d91e:	0001      	movs	r1, r0
    d920:	3b30      	subs	r3, #48	; 0x30
    d922:	220a      	movs	r2, #10
    d924:	0030      	movs	r0, r6
    d926:	3401      	adds	r4, #1
    d928:	f7ff ff8e 	bl	d848 <__multadd>
    d92c:	42ac      	cmp	r4, r5
    d92e:	d1f5      	bne.n	d91c <__s2b+0x48>
    d930:	4645      	mov	r5, r8
    d932:	3d08      	subs	r5, #8
    d934:	444d      	add	r5, r9
    d936:	4547      	cmp	r7, r8
    d938:	dd0c      	ble.n	d954 <__s2b+0x80>
    d93a:	4643      	mov	r3, r8
    d93c:	1aff      	subs	r7, r7, r3
    d93e:	19ef      	adds	r7, r5, r7
    d940:	782b      	ldrb	r3, [r5, #0]
    d942:	0001      	movs	r1, r0
    d944:	3b30      	subs	r3, #48	; 0x30
    d946:	220a      	movs	r2, #10
    d948:	0030      	movs	r0, r6
    d94a:	3501      	adds	r5, #1
    d94c:	f7ff ff7c 	bl	d848 <__multadd>
    d950:	42bd      	cmp	r5, r7
    d952:	d1f5      	bne.n	d940 <__s2b+0x6c>
    d954:	bc0c      	pop	{r2, r3}
    d956:	4690      	mov	r8, r2
    d958:	4699      	mov	r9, r3
    d95a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d95c:	2309      	movs	r3, #9
    d95e:	350a      	adds	r5, #10
    d960:	4698      	mov	r8, r3
    d962:	e7e8      	b.n	d936 <__s2b+0x62>
    d964:	2100      	movs	r1, #0
    d966:	e7ca      	b.n	d8fe <__s2b+0x2a>

0000d968 <__hi0bits>:
    d968:	0003      	movs	r3, r0
    d96a:	0c02      	lsrs	r2, r0, #16
    d96c:	2000      	movs	r0, #0
    d96e:	2a00      	cmp	r2, #0
    d970:	d101      	bne.n	d976 <__hi0bits+0xe>
    d972:	041b      	lsls	r3, r3, #16
    d974:	3010      	adds	r0, #16
    d976:	0e1a      	lsrs	r2, r3, #24
    d978:	d101      	bne.n	d97e <__hi0bits+0x16>
    d97a:	3008      	adds	r0, #8
    d97c:	021b      	lsls	r3, r3, #8
    d97e:	0f1a      	lsrs	r2, r3, #28
    d980:	d101      	bne.n	d986 <__hi0bits+0x1e>
    d982:	3004      	adds	r0, #4
    d984:	011b      	lsls	r3, r3, #4
    d986:	0f9a      	lsrs	r2, r3, #30
    d988:	d101      	bne.n	d98e <__hi0bits+0x26>
    d98a:	3002      	adds	r0, #2
    d98c:	009b      	lsls	r3, r3, #2
    d98e:	2b00      	cmp	r3, #0
    d990:	db03      	blt.n	d99a <__hi0bits+0x32>
    d992:	3001      	adds	r0, #1
    d994:	005b      	lsls	r3, r3, #1
    d996:	d400      	bmi.n	d99a <__hi0bits+0x32>
    d998:	2020      	movs	r0, #32
    d99a:	4770      	bx	lr

0000d99c <__lo0bits>:
    d99c:	6803      	ldr	r3, [r0, #0]
    d99e:	075a      	lsls	r2, r3, #29
    d9a0:	d009      	beq.n	d9b6 <__lo0bits+0x1a>
    d9a2:	2200      	movs	r2, #0
    d9a4:	07d9      	lsls	r1, r3, #31
    d9a6:	d404      	bmi.n	d9b2 <__lo0bits+0x16>
    d9a8:	079a      	lsls	r2, r3, #30
    d9aa:	d420      	bmi.n	d9ee <__lo0bits+0x52>
    d9ac:	2202      	movs	r2, #2
    d9ae:	089b      	lsrs	r3, r3, #2
    d9b0:	6003      	str	r3, [r0, #0]
    d9b2:	0010      	movs	r0, r2
    d9b4:	4770      	bx	lr
    d9b6:	0419      	lsls	r1, r3, #16
    d9b8:	2200      	movs	r2, #0
    d9ba:	2900      	cmp	r1, #0
    d9bc:	d101      	bne.n	d9c2 <__lo0bits+0x26>
    d9be:	0c1b      	lsrs	r3, r3, #16
    d9c0:	3210      	adds	r2, #16
    d9c2:	21ff      	movs	r1, #255	; 0xff
    d9c4:	4219      	tst	r1, r3
    d9c6:	d101      	bne.n	d9cc <__lo0bits+0x30>
    d9c8:	3208      	adds	r2, #8
    d9ca:	0a1b      	lsrs	r3, r3, #8
    d9cc:	0719      	lsls	r1, r3, #28
    d9ce:	d101      	bne.n	d9d4 <__lo0bits+0x38>
    d9d0:	3204      	adds	r2, #4
    d9d2:	091b      	lsrs	r3, r3, #4
    d9d4:	0799      	lsls	r1, r3, #30
    d9d6:	d101      	bne.n	d9dc <__lo0bits+0x40>
    d9d8:	3202      	adds	r2, #2
    d9da:	089b      	lsrs	r3, r3, #2
    d9dc:	07d9      	lsls	r1, r3, #31
    d9de:	d404      	bmi.n	d9ea <__lo0bits+0x4e>
    d9e0:	085b      	lsrs	r3, r3, #1
    d9e2:	d101      	bne.n	d9e8 <__lo0bits+0x4c>
    d9e4:	2220      	movs	r2, #32
    d9e6:	e7e4      	b.n	d9b2 <__lo0bits+0x16>
    d9e8:	3201      	adds	r2, #1
    d9ea:	6003      	str	r3, [r0, #0]
    d9ec:	e7e1      	b.n	d9b2 <__lo0bits+0x16>
    d9ee:	085b      	lsrs	r3, r3, #1
    d9f0:	6003      	str	r3, [r0, #0]
    d9f2:	2201      	movs	r2, #1
    d9f4:	e7dd      	b.n	d9b2 <__lo0bits+0x16>
    d9f6:	46c0      	nop			; (mov r8, r8)

0000d9f8 <__i2b>:
    d9f8:	b510      	push	{r4, lr}
    d9fa:	000c      	movs	r4, r1
    d9fc:	2101      	movs	r1, #1
    d9fe:	f7ff fef1 	bl	d7e4 <_Balloc>
    da02:	2301      	movs	r3, #1
    da04:	6144      	str	r4, [r0, #20]
    da06:	6103      	str	r3, [r0, #16]
    da08:	bd10      	pop	{r4, pc}
    da0a:	46c0      	nop			; (mov r8, r8)

0000da0c <__multiply>:
    da0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    da0e:	4657      	mov	r7, sl
    da10:	464e      	mov	r6, r9
    da12:	4645      	mov	r5, r8
    da14:	46de      	mov	lr, fp
    da16:	b5e0      	push	{r5, r6, r7, lr}
    da18:	6914      	ldr	r4, [r2, #16]
    da1a:	690e      	ldr	r6, [r1, #16]
    da1c:	b085      	sub	sp, #20
    da1e:	000f      	movs	r7, r1
    da20:	0015      	movs	r5, r2
    da22:	42a6      	cmp	r6, r4
    da24:	da04      	bge.n	da30 <__multiply+0x24>
    da26:	0033      	movs	r3, r6
    da28:	0017      	movs	r7, r2
    da2a:	0026      	movs	r6, r4
    da2c:	000d      	movs	r5, r1
    da2e:	001c      	movs	r4, r3
    da30:	1933      	adds	r3, r6, r4
    da32:	4698      	mov	r8, r3
    da34:	68bb      	ldr	r3, [r7, #8]
    da36:	6879      	ldr	r1, [r7, #4]
    da38:	4598      	cmp	r8, r3
    da3a:	dd00      	ble.n	da3e <__multiply+0x32>
    da3c:	3101      	adds	r1, #1
    da3e:	f7ff fed1 	bl	d7e4 <_Balloc>
    da42:	2214      	movs	r2, #20
    da44:	0003      	movs	r3, r0
    da46:	4694      	mov	ip, r2
    da48:	4463      	add	r3, ip
    da4a:	469b      	mov	fp, r3
    da4c:	4643      	mov	r3, r8
    da4e:	009b      	lsls	r3, r3, #2
    da50:	445b      	add	r3, fp
    da52:	0019      	movs	r1, r3
    da54:	9302      	str	r3, [sp, #8]
    da56:	9003      	str	r0, [sp, #12]
    da58:	465b      	mov	r3, fp
    da5a:	2200      	movs	r2, #0
    da5c:	458b      	cmp	fp, r1
    da5e:	d203      	bcs.n	da68 <__multiply+0x5c>
    da60:	9902      	ldr	r1, [sp, #8]
    da62:	c304      	stmia	r3!, {r2}
    da64:	4299      	cmp	r1, r3
    da66:	d8fc      	bhi.n	da62 <__multiply+0x56>
    da68:	2314      	movs	r3, #20
    da6a:	00a4      	lsls	r4, r4, #2
    da6c:	469a      	mov	sl, r3
    da6e:	3714      	adds	r7, #20
    da70:	0023      	movs	r3, r4
    da72:	46bc      	mov	ip, r7
    da74:	44aa      	add	sl, r5
    da76:	00b6      	lsls	r6, r6, #2
    da78:	4453      	add	r3, sl
    da7a:	9700      	str	r7, [sp, #0]
    da7c:	44b4      	add	ip, r6
    da7e:	9301      	str	r3, [sp, #4]
    da80:	459a      	cmp	sl, r3
    da82:	d24f      	bcs.n	db24 <__multiply+0x118>
    da84:	4653      	mov	r3, sl
    da86:	681b      	ldr	r3, [r3, #0]
    da88:	041e      	lsls	r6, r3, #16
    da8a:	0c36      	lsrs	r6, r6, #16
    da8c:	d020      	beq.n	dad0 <__multiply+0xc4>
    da8e:	465c      	mov	r4, fp
    da90:	2700      	movs	r7, #0
    da92:	9d00      	ldr	r5, [sp, #0]
    da94:	0021      	movs	r1, r4
    da96:	cc08      	ldmia	r4!, {r3}
    da98:	cd04      	ldmia	r5!, {r2}
    da9a:	4699      	mov	r9, r3
    da9c:	4648      	mov	r0, r9
    da9e:	0413      	lsls	r3, r2, #16
    daa0:	0c1b      	lsrs	r3, r3, #16
    daa2:	4373      	muls	r3, r6
    daa4:	0400      	lsls	r0, r0, #16
    daa6:	0c00      	lsrs	r0, r0, #16
    daa8:	181b      	adds	r3, r3, r0
    daaa:	19d8      	adds	r0, r3, r7
    daac:	0c13      	lsrs	r3, r2, #16
    daae:	464a      	mov	r2, r9
    dab0:	4373      	muls	r3, r6
    dab2:	0c12      	lsrs	r2, r2, #16
    dab4:	189b      	adds	r3, r3, r2
    dab6:	0c02      	lsrs	r2, r0, #16
    dab8:	189b      	adds	r3, r3, r2
    daba:	0402      	lsls	r2, r0, #16
    dabc:	0c1f      	lsrs	r7, r3, #16
    dabe:	0c12      	lsrs	r2, r2, #16
    dac0:	041b      	lsls	r3, r3, #16
    dac2:	4313      	orrs	r3, r2
    dac4:	600b      	str	r3, [r1, #0]
    dac6:	45ac      	cmp	ip, r5
    dac8:	d8e4      	bhi.n	da94 <__multiply+0x88>
    daca:	4653      	mov	r3, sl
    dacc:	6027      	str	r7, [r4, #0]
    dace:	681b      	ldr	r3, [r3, #0]
    dad0:	0c1e      	lsrs	r6, r3, #16
    dad2:	d020      	beq.n	db16 <__multiply+0x10a>
    dad4:	465b      	mov	r3, fp
    dad6:	2100      	movs	r1, #0
    dad8:	681b      	ldr	r3, [r3, #0]
    dada:	465c      	mov	r4, fp
    dadc:	0018      	movs	r0, r3
    dade:	000f      	movs	r7, r1
    dae0:	4662      	mov	r2, ip
    dae2:	9d00      	ldr	r5, [sp, #0]
    dae4:	8829      	ldrh	r1, [r5, #0]
    dae6:	0c00      	lsrs	r0, r0, #16
    dae8:	4371      	muls	r1, r6
    daea:	1809      	adds	r1, r1, r0
    daec:	19c9      	adds	r1, r1, r7
    daee:	041b      	lsls	r3, r3, #16
    daf0:	0408      	lsls	r0, r1, #16
    daf2:	0c1b      	lsrs	r3, r3, #16
    daf4:	4303      	orrs	r3, r0
    daf6:	6023      	str	r3, [r4, #0]
    daf8:	cd08      	ldmia	r5!, {r3}
    dafa:	6860      	ldr	r0, [r4, #4]
    dafc:	0c1b      	lsrs	r3, r3, #16
    dafe:	4373      	muls	r3, r6
    db00:	0407      	lsls	r7, r0, #16
    db02:	0c3f      	lsrs	r7, r7, #16
    db04:	19db      	adds	r3, r3, r7
    db06:	0c09      	lsrs	r1, r1, #16
    db08:	185b      	adds	r3, r3, r1
    db0a:	0c1f      	lsrs	r7, r3, #16
    db0c:	3404      	adds	r4, #4
    db0e:	42aa      	cmp	r2, r5
    db10:	d8e8      	bhi.n	dae4 <__multiply+0xd8>
    db12:	4694      	mov	ip, r2
    db14:	6023      	str	r3, [r4, #0]
    db16:	2304      	movs	r3, #4
    db18:	4699      	mov	r9, r3
    db1a:	9b01      	ldr	r3, [sp, #4]
    db1c:	44ca      	add	sl, r9
    db1e:	44cb      	add	fp, r9
    db20:	4553      	cmp	r3, sl
    db22:	d8af      	bhi.n	da84 <__multiply+0x78>
    db24:	4643      	mov	r3, r8
    db26:	2b00      	cmp	r3, #0
    db28:	dd0e      	ble.n	db48 <__multiply+0x13c>
    db2a:	9b02      	ldr	r3, [sp, #8]
    db2c:	3b04      	subs	r3, #4
    db2e:	681a      	ldr	r2, [r3, #0]
    db30:	2a00      	cmp	r2, #0
    db32:	d109      	bne.n	db48 <__multiply+0x13c>
    db34:	4642      	mov	r2, r8
    db36:	e003      	b.n	db40 <__multiply+0x134>
    db38:	3b04      	subs	r3, #4
    db3a:	6819      	ldr	r1, [r3, #0]
    db3c:	2900      	cmp	r1, #0
    db3e:	d102      	bne.n	db46 <__multiply+0x13a>
    db40:	3a01      	subs	r2, #1
    db42:	2a00      	cmp	r2, #0
    db44:	d1f8      	bne.n	db38 <__multiply+0x12c>
    db46:	4690      	mov	r8, r2
    db48:	9b03      	ldr	r3, [sp, #12]
    db4a:	4642      	mov	r2, r8
    db4c:	0018      	movs	r0, r3
    db4e:	611a      	str	r2, [r3, #16]
    db50:	b005      	add	sp, #20
    db52:	bc3c      	pop	{r2, r3, r4, r5}
    db54:	4690      	mov	r8, r2
    db56:	4699      	mov	r9, r3
    db58:	46a2      	mov	sl, r4
    db5a:	46ab      	mov	fp, r5
    db5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    db5e:	46c0      	nop			; (mov r8, r8)

0000db60 <__pow5mult>:
    db60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    db62:	4647      	mov	r7, r8
    db64:	46ce      	mov	lr, r9
    db66:	2303      	movs	r3, #3
    db68:	b580      	push	{r7, lr}
    db6a:	4680      	mov	r8, r0
    db6c:	000f      	movs	r7, r1
    db6e:	0014      	movs	r4, r2
    db70:	4013      	ands	r3, r2
    db72:	d13a      	bne.n	dbea <__pow5mult+0x8a>
    db74:	10a4      	asrs	r4, r4, #2
    db76:	003e      	movs	r6, r7
    db78:	2c00      	cmp	r4, #0
    db7a:	d025      	beq.n	dbc8 <__pow5mult+0x68>
    db7c:	4643      	mov	r3, r8
    db7e:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    db80:	2d00      	cmp	r5, #0
    db82:	d03b      	beq.n	dbfc <__pow5mult+0x9c>
    db84:	003e      	movs	r6, r7
    db86:	2300      	movs	r3, #0
    db88:	2701      	movs	r7, #1
    db8a:	4699      	mov	r9, r3
    db8c:	4227      	tst	r7, r4
    db8e:	d107      	bne.n	dba0 <__pow5mult+0x40>
    db90:	1064      	asrs	r4, r4, #1
    db92:	d019      	beq.n	dbc8 <__pow5mult+0x68>
    db94:	6828      	ldr	r0, [r5, #0]
    db96:	2800      	cmp	r0, #0
    db98:	d01b      	beq.n	dbd2 <__pow5mult+0x72>
    db9a:	0005      	movs	r5, r0
    db9c:	4227      	tst	r7, r4
    db9e:	d0f7      	beq.n	db90 <__pow5mult+0x30>
    dba0:	002a      	movs	r2, r5
    dba2:	0031      	movs	r1, r6
    dba4:	4640      	mov	r0, r8
    dba6:	f7ff ff31 	bl	da0c <__multiply>
    dbaa:	2e00      	cmp	r6, #0
    dbac:	d01b      	beq.n	dbe6 <__pow5mult+0x86>
    dbae:	4642      	mov	r2, r8
    dbb0:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    dbb2:	6873      	ldr	r3, [r6, #4]
    dbb4:	4694      	mov	ip, r2
    dbb6:	009b      	lsls	r3, r3, #2
    dbb8:	4463      	add	r3, ip
    dbba:	681a      	ldr	r2, [r3, #0]
    dbbc:	1064      	asrs	r4, r4, #1
    dbbe:	6032      	str	r2, [r6, #0]
    dbc0:	601e      	str	r6, [r3, #0]
    dbc2:	0006      	movs	r6, r0
    dbc4:	2c00      	cmp	r4, #0
    dbc6:	d1e5      	bne.n	db94 <__pow5mult+0x34>
    dbc8:	0030      	movs	r0, r6
    dbca:	bc0c      	pop	{r2, r3}
    dbcc:	4690      	mov	r8, r2
    dbce:	4699      	mov	r9, r3
    dbd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    dbd2:	002a      	movs	r2, r5
    dbd4:	0029      	movs	r1, r5
    dbd6:	4640      	mov	r0, r8
    dbd8:	f7ff ff18 	bl	da0c <__multiply>
    dbdc:	464b      	mov	r3, r9
    dbde:	6028      	str	r0, [r5, #0]
    dbe0:	6003      	str	r3, [r0, #0]
    dbe2:	0005      	movs	r5, r0
    dbe4:	e7da      	b.n	db9c <__pow5mult+0x3c>
    dbe6:	0006      	movs	r6, r0
    dbe8:	e7d2      	b.n	db90 <__pow5mult+0x30>
    dbea:	4a0b      	ldr	r2, [pc, #44]	; (dc18 <__pow5mult+0xb8>)
    dbec:	3b01      	subs	r3, #1
    dbee:	009b      	lsls	r3, r3, #2
    dbf0:	589a      	ldr	r2, [r3, r2]
    dbf2:	2300      	movs	r3, #0
    dbf4:	f7ff fe28 	bl	d848 <__multadd>
    dbf8:	0007      	movs	r7, r0
    dbfa:	e7bb      	b.n	db74 <__pow5mult+0x14>
    dbfc:	2101      	movs	r1, #1
    dbfe:	4640      	mov	r0, r8
    dc00:	f7ff fdf0 	bl	d7e4 <_Balloc>
    dc04:	4b05      	ldr	r3, [pc, #20]	; (dc1c <__pow5mult+0xbc>)
    dc06:	0005      	movs	r5, r0
    dc08:	6143      	str	r3, [r0, #20]
    dc0a:	2301      	movs	r3, #1
    dc0c:	6103      	str	r3, [r0, #16]
    dc0e:	4643      	mov	r3, r8
    dc10:	6498      	str	r0, [r3, #72]	; 0x48
    dc12:	2300      	movs	r3, #0
    dc14:	6003      	str	r3, [r0, #0]
    dc16:	e7b5      	b.n	db84 <__pow5mult+0x24>
    dc18:	00014130 	.word	0x00014130
    dc1c:	00000271 	.word	0x00000271

0000dc20 <__lshift>:
    dc20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    dc22:	464e      	mov	r6, r9
    dc24:	4645      	mov	r5, r8
    dc26:	46de      	mov	lr, fp
    dc28:	4657      	mov	r7, sl
    dc2a:	b5e0      	push	{r5, r6, r7, lr}
    dc2c:	000e      	movs	r6, r1
    dc2e:	6933      	ldr	r3, [r6, #16]
    dc30:	1154      	asrs	r4, r2, #5
    dc32:	4698      	mov	r8, r3
    dc34:	44a0      	add	r8, r4
    dc36:	4643      	mov	r3, r8
    dc38:	1c5d      	adds	r5, r3, #1
    dc3a:	68b3      	ldr	r3, [r6, #8]
    dc3c:	4683      	mov	fp, r0
    dc3e:	4691      	mov	r9, r2
    dc40:	6849      	ldr	r1, [r1, #4]
    dc42:	429d      	cmp	r5, r3
    dc44:	dd03      	ble.n	dc4e <__lshift+0x2e>
    dc46:	3101      	adds	r1, #1
    dc48:	005b      	lsls	r3, r3, #1
    dc4a:	429d      	cmp	r5, r3
    dc4c:	dcfb      	bgt.n	dc46 <__lshift+0x26>
    dc4e:	4658      	mov	r0, fp
    dc50:	f7ff fdc8 	bl	d7e4 <_Balloc>
    dc54:	0003      	movs	r3, r0
    dc56:	4684      	mov	ip, r0
    dc58:	3314      	adds	r3, #20
    dc5a:	2c00      	cmp	r4, #0
    dc5c:	dd06      	ble.n	dc6c <__lshift+0x4c>
    dc5e:	2100      	movs	r1, #0
    dc60:	00a4      	lsls	r4, r4, #2
    dc62:	001a      	movs	r2, r3
    dc64:	191b      	adds	r3, r3, r4
    dc66:	c202      	stmia	r2!, {r1}
    dc68:	4293      	cmp	r3, r2
    dc6a:	d1fc      	bne.n	dc66 <__lshift+0x46>
    dc6c:	6932      	ldr	r2, [r6, #16]
    dc6e:	4648      	mov	r0, r9
    dc70:	0097      	lsls	r7, r2, #2
    dc72:	0031      	movs	r1, r6
    dc74:	221f      	movs	r2, #31
    dc76:	3114      	adds	r1, #20
    dc78:	4010      	ands	r0, r2
    dc7a:	19cf      	adds	r7, r1, r7
    dc7c:	4681      	mov	r9, r0
    dc7e:	2800      	cmp	r0, #0
    dc80:	d025      	beq.n	dcce <__lshift+0xae>
    dc82:	2220      	movs	r2, #32
    dc84:	1a12      	subs	r2, r2, r0
    dc86:	4692      	mov	sl, r2
    dc88:	2200      	movs	r2, #0
    dc8a:	4648      	mov	r0, r9
    dc8c:	680c      	ldr	r4, [r1, #0]
    dc8e:	4084      	lsls	r4, r0
    dc90:	4650      	mov	r0, sl
    dc92:	4314      	orrs	r4, r2
    dc94:	601c      	str	r4, [r3, #0]
    dc96:	c904      	ldmia	r1!, {r2}
    dc98:	3304      	adds	r3, #4
    dc9a:	40c2      	lsrs	r2, r0
    dc9c:	428f      	cmp	r7, r1
    dc9e:	d8f4      	bhi.n	dc8a <__lshift+0x6a>
    dca0:	601a      	str	r2, [r3, #0]
    dca2:	2a00      	cmp	r2, #0
    dca4:	d001      	beq.n	dcaa <__lshift+0x8a>
    dca6:	4645      	mov	r5, r8
    dca8:	3502      	adds	r5, #2
    dcaa:	4663      	mov	r3, ip
    dcac:	3d01      	subs	r5, #1
    dcae:	611d      	str	r5, [r3, #16]
    dcb0:	6873      	ldr	r3, [r6, #4]
    dcb2:	4660      	mov	r0, ip
    dcb4:	009a      	lsls	r2, r3, #2
    dcb6:	465b      	mov	r3, fp
    dcb8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    dcba:	189b      	adds	r3, r3, r2
    dcbc:	681a      	ldr	r2, [r3, #0]
    dcbe:	6032      	str	r2, [r6, #0]
    dcc0:	601e      	str	r6, [r3, #0]
    dcc2:	bc3c      	pop	{r2, r3, r4, r5}
    dcc4:	4690      	mov	r8, r2
    dcc6:	4699      	mov	r9, r3
    dcc8:	46a2      	mov	sl, r4
    dcca:	46ab      	mov	fp, r5
    dccc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    dcce:	c904      	ldmia	r1!, {r2}
    dcd0:	c304      	stmia	r3!, {r2}
    dcd2:	428f      	cmp	r7, r1
    dcd4:	d9e9      	bls.n	dcaa <__lshift+0x8a>
    dcd6:	c904      	ldmia	r1!, {r2}
    dcd8:	c304      	stmia	r3!, {r2}
    dcda:	428f      	cmp	r7, r1
    dcdc:	d8f7      	bhi.n	dcce <__lshift+0xae>
    dcde:	e7e4      	b.n	dcaa <__lshift+0x8a>

0000dce0 <__mcmp>:
    dce0:	690a      	ldr	r2, [r1, #16]
    dce2:	6903      	ldr	r3, [r0, #16]
    dce4:	b530      	push	{r4, r5, lr}
    dce6:	0005      	movs	r5, r0
    dce8:	1a98      	subs	r0, r3, r2
    dcea:	d111      	bne.n	dd10 <__mcmp+0x30>
    dcec:	0092      	lsls	r2, r2, #2
    dcee:	3514      	adds	r5, #20
    dcf0:	3114      	adds	r1, #20
    dcf2:	18ab      	adds	r3, r5, r2
    dcf4:	1889      	adds	r1, r1, r2
    dcf6:	e001      	b.n	dcfc <__mcmp+0x1c>
    dcf8:	429d      	cmp	r5, r3
    dcfa:	d209      	bcs.n	dd10 <__mcmp+0x30>
    dcfc:	3b04      	subs	r3, #4
    dcfe:	3904      	subs	r1, #4
    dd00:	681c      	ldr	r4, [r3, #0]
    dd02:	680a      	ldr	r2, [r1, #0]
    dd04:	4294      	cmp	r4, r2
    dd06:	d0f7      	beq.n	dcf8 <__mcmp+0x18>
    dd08:	4294      	cmp	r4, r2
    dd0a:	4180      	sbcs	r0, r0
    dd0c:	2201      	movs	r2, #1
    dd0e:	4310      	orrs	r0, r2
    dd10:	bd30      	pop	{r4, r5, pc}
    dd12:	46c0      	nop			; (mov r8, r8)

0000dd14 <__mdiff>:
    dd14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    dd16:	4645      	mov	r5, r8
    dd18:	46de      	mov	lr, fp
    dd1a:	4657      	mov	r7, sl
    dd1c:	464e      	mov	r6, r9
    dd1e:	0014      	movs	r4, r2
    dd20:	690b      	ldr	r3, [r1, #16]
    dd22:	6912      	ldr	r2, [r2, #16]
    dd24:	b5e0      	push	{r5, r6, r7, lr}
    dd26:	4688      	mov	r8, r1
    dd28:	1a9d      	subs	r5, r3, r2
    dd2a:	d11a      	bne.n	dd62 <__mdiff+0x4e>
    dd2c:	000f      	movs	r7, r1
    dd2e:	2114      	movs	r1, #20
    dd30:	468c      	mov	ip, r1
    dd32:	0092      	lsls	r2, r2, #2
    dd34:	3714      	adds	r7, #20
    dd36:	44a4      	add	ip, r4
    dd38:	18bb      	adds	r3, r7, r2
    dd3a:	4462      	add	r2, ip
    dd3c:	e002      	b.n	dd44 <__mdiff+0x30>
    dd3e:	429f      	cmp	r7, r3
    dd40:	d300      	bcc.n	dd44 <__mdiff+0x30>
    dd42:	e070      	b.n	de26 <__mdiff+0x112>
    dd44:	3b04      	subs	r3, #4
    dd46:	3a04      	subs	r2, #4
    dd48:	681e      	ldr	r6, [r3, #0]
    dd4a:	6811      	ldr	r1, [r2, #0]
    dd4c:	428e      	cmp	r6, r1
    dd4e:	d0f6      	beq.n	dd3e <__mdiff+0x2a>
    dd50:	d300      	bcc.n	dd54 <__mdiff+0x40>
    dd52:	e071      	b.n	de38 <__mdiff+0x124>
    dd54:	4643      	mov	r3, r8
    dd56:	003e      	movs	r6, r7
    dd58:	46a0      	mov	r8, r4
    dd5a:	4667      	mov	r7, ip
    dd5c:	001c      	movs	r4, r3
    dd5e:	2501      	movs	r5, #1
    dd60:	e006      	b.n	dd70 <__mdiff+0x5c>
    dd62:	2d00      	cmp	r5, #0
    dd64:	db6a      	blt.n	de3c <__mdiff+0x128>
    dd66:	4647      	mov	r7, r8
    dd68:	0026      	movs	r6, r4
    dd6a:	2500      	movs	r5, #0
    dd6c:	3714      	adds	r7, #20
    dd6e:	3614      	adds	r6, #20
    dd70:	4643      	mov	r3, r8
    dd72:	6859      	ldr	r1, [r3, #4]
    dd74:	f7ff fd36 	bl	d7e4 <_Balloc>
    dd78:	4643      	mov	r3, r8
    dd7a:	4681      	mov	r9, r0
    dd7c:	60c5      	str	r5, [r0, #12]
    dd7e:	6918      	ldr	r0, [r3, #16]
    dd80:	464d      	mov	r5, r9
    dd82:	0083      	lsls	r3, r0, #2
    dd84:	469c      	mov	ip, r3
    dd86:	6923      	ldr	r3, [r4, #16]
    dd88:	44bc      	add	ip, r7
    dd8a:	009b      	lsls	r3, r3, #2
    dd8c:	4698      	mov	r8, r3
    dd8e:	2300      	movs	r3, #0
    dd90:	44b0      	add	r8, r6
    dd92:	3514      	adds	r5, #20
    dd94:	469a      	mov	sl, r3
    dd96:	e000      	b.n	dd9a <__mdiff+0x86>
    dd98:	0027      	movs	r7, r4
    dd9a:	ce04      	ldmia	r6!, {r2}
    dd9c:	003c      	movs	r4, r7
    dd9e:	4693      	mov	fp, r2
    dda0:	4659      	mov	r1, fp
    dda2:	cc08      	ldmia	r4!, {r3}
    dda4:	0409      	lsls	r1, r1, #16
    dda6:	041a      	lsls	r2, r3, #16
    dda8:	0c12      	lsrs	r2, r2, #16
    ddaa:	4452      	add	r2, sl
    ddac:	0c09      	lsrs	r1, r1, #16
    ddae:	1a52      	subs	r2, r2, r1
    ddb0:	0c19      	lsrs	r1, r3, #16
    ddb2:	465b      	mov	r3, fp
    ddb4:	0c1b      	lsrs	r3, r3, #16
    ddb6:	1acb      	subs	r3, r1, r3
    ddb8:	1411      	asrs	r1, r2, #16
    ddba:	185b      	adds	r3, r3, r1
    ddbc:	0412      	lsls	r2, r2, #16
    ddbe:	1419      	asrs	r1, r3, #16
    ddc0:	0c12      	lsrs	r2, r2, #16
    ddc2:	041b      	lsls	r3, r3, #16
    ddc4:	468a      	mov	sl, r1
    ddc6:	4313      	orrs	r3, r2
    ddc8:	1d29      	adds	r1, r5, #4
    ddca:	602b      	str	r3, [r5, #0]
    ddcc:	000d      	movs	r5, r1
    ddce:	45b0      	cmp	r8, r6
    ddd0:	d8e2      	bhi.n	dd98 <__mdiff+0x84>
    ddd2:	45a4      	cmp	ip, r4
    ddd4:	d916      	bls.n	de04 <__mdiff+0xf0>
    ddd6:	cc08      	ldmia	r4!, {r3}
    ddd8:	041a      	lsls	r2, r3, #16
    ddda:	0c12      	lsrs	r2, r2, #16
    dddc:	4452      	add	r2, sl
    ddde:	1416      	asrs	r6, r2, #16
    dde0:	0c1b      	lsrs	r3, r3, #16
    dde2:	199b      	adds	r3, r3, r6
    dde4:	0412      	lsls	r2, r2, #16
    dde6:	141e      	asrs	r6, r3, #16
    dde8:	0c12      	lsrs	r2, r2, #16
    ddea:	041b      	lsls	r3, r3, #16
    ddec:	4313      	orrs	r3, r2
    ddee:	46b2      	mov	sl, r6
    ddf0:	c508      	stmia	r5!, {r3}
    ddf2:	45a4      	cmp	ip, r4
    ddf4:	d8ef      	bhi.n	ddd6 <__mdiff+0xc2>
    ddf6:	4662      	mov	r2, ip
    ddf8:	2403      	movs	r4, #3
    ddfa:	1bd2      	subs	r2, r2, r7
    ddfc:	3a05      	subs	r2, #5
    ddfe:	43a2      	bics	r2, r4
    de00:	3204      	adds	r2, #4
    de02:	1889      	adds	r1, r1, r2
    de04:	3904      	subs	r1, #4
    de06:	2b00      	cmp	r3, #0
    de08:	d104      	bne.n	de14 <__mdiff+0x100>
    de0a:	3904      	subs	r1, #4
    de0c:	680b      	ldr	r3, [r1, #0]
    de0e:	3801      	subs	r0, #1
    de10:	2b00      	cmp	r3, #0
    de12:	d0fa      	beq.n	de0a <__mdiff+0xf6>
    de14:	464b      	mov	r3, r9
    de16:	6118      	str	r0, [r3, #16]
    de18:	4648      	mov	r0, r9
    de1a:	bc3c      	pop	{r2, r3, r4, r5}
    de1c:	4690      	mov	r8, r2
    de1e:	4699      	mov	r9, r3
    de20:	46a2      	mov	sl, r4
    de22:	46ab      	mov	fp, r5
    de24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    de26:	2100      	movs	r1, #0
    de28:	f7ff fcdc 	bl	d7e4 <_Balloc>
    de2c:	2301      	movs	r3, #1
    de2e:	6103      	str	r3, [r0, #16]
    de30:	2300      	movs	r3, #0
    de32:	4681      	mov	r9, r0
    de34:	6143      	str	r3, [r0, #20]
    de36:	e7ef      	b.n	de18 <__mdiff+0x104>
    de38:	4666      	mov	r6, ip
    de3a:	e799      	b.n	dd70 <__mdiff+0x5c>
    de3c:	0027      	movs	r7, r4
    de3e:	000e      	movs	r6, r1
    de40:	46a0      	mov	r8, r4
    de42:	3714      	adds	r7, #20
    de44:	3614      	adds	r6, #20
    de46:	000c      	movs	r4, r1
    de48:	2501      	movs	r5, #1
    de4a:	e791      	b.n	dd70 <__mdiff+0x5c>

0000de4c <__ulp>:
    de4c:	4b10      	ldr	r3, [pc, #64]	; (de90 <__ulp+0x44>)
    de4e:	b510      	push	{r4, lr}
    de50:	4019      	ands	r1, r3
    de52:	4b10      	ldr	r3, [pc, #64]	; (de94 <__ulp+0x48>)
    de54:	469c      	mov	ip, r3
    de56:	4461      	add	r1, ip
    de58:	2900      	cmp	r1, #0
    de5a:	dd04      	ble.n	de66 <__ulp+0x1a>
    de5c:	2200      	movs	r2, #0
    de5e:	000b      	movs	r3, r1
    de60:	0010      	movs	r0, r2
    de62:	0019      	movs	r1, r3
    de64:	bd10      	pop	{r4, pc}
    de66:	4249      	negs	r1, r1
    de68:	1509      	asrs	r1, r1, #20
    de6a:	2200      	movs	r2, #0
    de6c:	2300      	movs	r3, #0
    de6e:	2913      	cmp	r1, #19
    de70:	dd08      	ble.n	de84 <__ulp+0x38>
    de72:	3914      	subs	r1, #20
    de74:	2001      	movs	r0, #1
    de76:	291e      	cmp	r1, #30
    de78:	dc02      	bgt.n	de80 <__ulp+0x34>
    de7a:	241f      	movs	r4, #31
    de7c:	1a61      	subs	r1, r4, r1
    de7e:	4088      	lsls	r0, r1
    de80:	0002      	movs	r2, r0
    de82:	e7ed      	b.n	de60 <__ulp+0x14>
    de84:	2080      	movs	r0, #128	; 0x80
    de86:	0300      	lsls	r0, r0, #12
    de88:	4108      	asrs	r0, r1
    de8a:	0003      	movs	r3, r0
    de8c:	e7e8      	b.n	de60 <__ulp+0x14>
    de8e:	46c0      	nop			; (mov r8, r8)
    de90:	7ff00000 	.word	0x7ff00000
    de94:	fcc00000 	.word	0xfcc00000

0000de98 <__b2d>:
    de98:	b5f0      	push	{r4, r5, r6, r7, lr}
    de9a:	464f      	mov	r7, r9
    de9c:	4646      	mov	r6, r8
    de9e:	46d6      	mov	lr, sl
    dea0:	6904      	ldr	r4, [r0, #16]
    dea2:	b5c0      	push	{r6, r7, lr}
    dea4:	00a4      	lsls	r4, r4, #2
    dea6:	0006      	movs	r6, r0
    dea8:	46a1      	mov	r9, r4
    deaa:	3614      	adds	r6, #20
    deac:	44b1      	add	r9, r6
    deae:	464b      	mov	r3, r9
    deb0:	4688      	mov	r8, r1
    deb2:	1f1f      	subs	r7, r3, #4
    deb4:	683d      	ldr	r5, [r7, #0]
    deb6:	0028      	movs	r0, r5
    deb8:	f7ff fd56 	bl	d968 <__hi0bits>
    debc:	2120      	movs	r1, #32
    debe:	4643      	mov	r3, r8
    dec0:	1a0a      	subs	r2, r1, r0
    dec2:	601a      	str	r2, [r3, #0]
    dec4:	280a      	cmp	r0, #10
    dec6:	dc20      	bgt.n	df0a <__b2d+0x72>
    dec8:	3915      	subs	r1, #21
    deca:	1a0b      	subs	r3, r1, r0
    decc:	469a      	mov	sl, r3
    dece:	002b      	movs	r3, r5
    ded0:	4652      	mov	r2, sl
    ded2:	4926      	ldr	r1, [pc, #152]	; (df6c <__b2d+0xd4>)
    ded4:	40d3      	lsrs	r3, r2
    ded6:	4688      	mov	r8, r1
    ded8:	0019      	movs	r1, r3
    deda:	4644      	mov	r4, r8
    dedc:	4321      	orrs	r1, r4
    dede:	000b      	movs	r3, r1
    dee0:	2100      	movs	r1, #0
    dee2:	468c      	mov	ip, r1
    dee4:	42be      	cmp	r6, r7
    dee6:	d204      	bcs.n	def2 <__b2d+0x5a>
    dee8:	464c      	mov	r4, r9
    deea:	3c08      	subs	r4, #8
    deec:	6824      	ldr	r4, [r4, #0]
    deee:	40d4      	lsrs	r4, r2
    def0:	46a4      	mov	ip, r4
    def2:	3015      	adds	r0, #21
    def4:	4085      	lsls	r5, r0
    def6:	4661      	mov	r1, ip
    def8:	4329      	orrs	r1, r5
    defa:	000a      	movs	r2, r1
    defc:	0010      	movs	r0, r2
    defe:	0019      	movs	r1, r3
    df00:	bc1c      	pop	{r2, r3, r4}
    df02:	4690      	mov	r8, r2
    df04:	4699      	mov	r9, r3
    df06:	46a2      	mov	sl, r4
    df08:	bdf0      	pop	{r4, r5, r6, r7, pc}
    df0a:	42be      	cmp	r6, r7
    df0c:	d21b      	bcs.n	df46 <__b2d+0xae>
    df0e:	2308      	movs	r3, #8
    df10:	425b      	negs	r3, r3
    df12:	469c      	mov	ip, r3
    df14:	44cc      	add	ip, r9
    df16:	4663      	mov	r3, ip
    df18:	380b      	subs	r0, #11
    df1a:	681f      	ldr	r7, [r3, #0]
    df1c:	2800      	cmp	r0, #0
    df1e:	d016      	beq.n	df4e <__b2d+0xb6>
    df20:	4085      	lsls	r5, r0
    df22:	4b12      	ldr	r3, [pc, #72]	; (df6c <__b2d+0xd4>)
    df24:	1a09      	subs	r1, r1, r0
    df26:	431d      	orrs	r5, r3
    df28:	003b      	movs	r3, r7
    df2a:	40cb      	lsrs	r3, r1
    df2c:	001c      	movs	r4, r3
    df2e:	432c      	orrs	r4, r5
    df30:	0023      	movs	r3, r4
    df32:	4566      	cmp	r6, ip
    df34:	d217      	bcs.n	df66 <__b2d+0xce>
    df36:	464c      	mov	r4, r9
    df38:	3c0c      	subs	r4, #12
    df3a:	6824      	ldr	r4, [r4, #0]
    df3c:	4087      	lsls	r7, r0
    df3e:	40cc      	lsrs	r4, r1
    df40:	4327      	orrs	r7, r4
    df42:	003a      	movs	r2, r7
    df44:	e7da      	b.n	defc <__b2d+0x64>
    df46:	380b      	subs	r0, #11
    df48:	2700      	movs	r7, #0
    df4a:	2800      	cmp	r0, #0
    df4c:	d104      	bne.n	df58 <__b2d+0xc0>
    df4e:	4907      	ldr	r1, [pc, #28]	; (df6c <__b2d+0xd4>)
    df50:	003a      	movs	r2, r7
    df52:	4329      	orrs	r1, r5
    df54:	000b      	movs	r3, r1
    df56:	e7d1      	b.n	defc <__b2d+0x64>
    df58:	4085      	lsls	r5, r0
    df5a:	2700      	movs	r7, #0
    df5c:	4903      	ldr	r1, [pc, #12]	; (df6c <__b2d+0xd4>)
    df5e:	003a      	movs	r2, r7
    df60:	4329      	orrs	r1, r5
    df62:	000b      	movs	r3, r1
    df64:	e7ca      	b.n	defc <__b2d+0x64>
    df66:	4087      	lsls	r7, r0
    df68:	003a      	movs	r2, r7
    df6a:	e7c7      	b.n	defc <__b2d+0x64>
    df6c:	3ff00000 	.word	0x3ff00000

0000df70 <__d2b>:
    df70:	b5f0      	push	{r4, r5, r6, r7, lr}
    df72:	2101      	movs	r1, #1
    df74:	001c      	movs	r4, r3
    df76:	b083      	sub	sp, #12
    df78:	9e08      	ldr	r6, [sp, #32]
    df7a:	0015      	movs	r5, r2
    df7c:	f7ff fc32 	bl	d7e4 <_Balloc>
    df80:	0323      	lsls	r3, r4, #12
    df82:	0064      	lsls	r4, r4, #1
    df84:	0007      	movs	r7, r0
    df86:	0b1b      	lsrs	r3, r3, #12
    df88:	0d64      	lsrs	r4, r4, #21
    df8a:	d002      	beq.n	df92 <__d2b+0x22>
    df8c:	2280      	movs	r2, #128	; 0x80
    df8e:	0352      	lsls	r2, r2, #13
    df90:	4313      	orrs	r3, r2
    df92:	9301      	str	r3, [sp, #4]
    df94:	2d00      	cmp	r5, #0
    df96:	d019      	beq.n	dfcc <__d2b+0x5c>
    df98:	4668      	mov	r0, sp
    df9a:	9500      	str	r5, [sp, #0]
    df9c:	f7ff fcfe 	bl	d99c <__lo0bits>
    dfa0:	2800      	cmp	r0, #0
    dfa2:	d130      	bne.n	e006 <__d2b+0x96>
    dfa4:	9b00      	ldr	r3, [sp, #0]
    dfa6:	617b      	str	r3, [r7, #20]
    dfa8:	9b01      	ldr	r3, [sp, #4]
    dfaa:	61bb      	str	r3, [r7, #24]
    dfac:	1e5a      	subs	r2, r3, #1
    dfae:	4193      	sbcs	r3, r2
    dfb0:	1c5d      	adds	r5, r3, #1
    dfb2:	613d      	str	r5, [r7, #16]
    dfb4:	2c00      	cmp	r4, #0
    dfb6:	d014      	beq.n	dfe2 <__d2b+0x72>
    dfb8:	4b19      	ldr	r3, [pc, #100]	; (e020 <__d2b+0xb0>)
    dfba:	469c      	mov	ip, r3
    dfbc:	2335      	movs	r3, #53	; 0x35
    dfbe:	4464      	add	r4, ip
    dfc0:	1824      	adds	r4, r4, r0
    dfc2:	1a18      	subs	r0, r3, r0
    dfc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    dfc6:	6034      	str	r4, [r6, #0]
    dfc8:	6018      	str	r0, [r3, #0]
    dfca:	e019      	b.n	e000 <__d2b+0x90>
    dfcc:	a801      	add	r0, sp, #4
    dfce:	f7ff fce5 	bl	d99c <__lo0bits>
    dfd2:	9b01      	ldr	r3, [sp, #4]
    dfd4:	3020      	adds	r0, #32
    dfd6:	617b      	str	r3, [r7, #20]
    dfd8:	2301      	movs	r3, #1
    dfda:	2501      	movs	r5, #1
    dfdc:	613b      	str	r3, [r7, #16]
    dfde:	2c00      	cmp	r4, #0
    dfe0:	d1ea      	bne.n	dfb8 <__d2b+0x48>
    dfe2:	4b10      	ldr	r3, [pc, #64]	; (e024 <__d2b+0xb4>)
    dfe4:	469c      	mov	ip, r3
    dfe6:	4b10      	ldr	r3, [pc, #64]	; (e028 <__d2b+0xb8>)
    dfe8:	4460      	add	r0, ip
    dfea:	18eb      	adds	r3, r5, r3
    dfec:	009b      	lsls	r3, r3, #2
    dfee:	18fb      	adds	r3, r7, r3
    dff0:	6030      	str	r0, [r6, #0]
    dff2:	6958      	ldr	r0, [r3, #20]
    dff4:	f7ff fcb8 	bl	d968 <__hi0bits>
    dff8:	016b      	lsls	r3, r5, #5
    dffa:	1a18      	subs	r0, r3, r0
    dffc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    dffe:	6018      	str	r0, [r3, #0]
    e000:	0038      	movs	r0, r7
    e002:	b003      	add	sp, #12
    e004:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e006:	9b01      	ldr	r3, [sp, #4]
    e008:	2220      	movs	r2, #32
    e00a:	0019      	movs	r1, r3
    e00c:	1a12      	subs	r2, r2, r0
    e00e:	4091      	lsls	r1, r2
    e010:	000a      	movs	r2, r1
    e012:	40c3      	lsrs	r3, r0
    e014:	9900      	ldr	r1, [sp, #0]
    e016:	9301      	str	r3, [sp, #4]
    e018:	430a      	orrs	r2, r1
    e01a:	617a      	str	r2, [r7, #20]
    e01c:	e7c5      	b.n	dfaa <__d2b+0x3a>
    e01e:	46c0      	nop			; (mov r8, r8)
    e020:	fffffbcd 	.word	0xfffffbcd
    e024:	fffffbce 	.word	0xfffffbce
    e028:	3fffffff 	.word	0x3fffffff

0000e02c <__ratio>:
    e02c:	b5f0      	push	{r4, r5, r6, r7, lr}
    e02e:	46ce      	mov	lr, r9
    e030:	4647      	mov	r7, r8
    e032:	b580      	push	{r7, lr}
    e034:	b085      	sub	sp, #20
    e036:	4688      	mov	r8, r1
    e038:	a902      	add	r1, sp, #8
    e03a:	4681      	mov	r9, r0
    e03c:	f7ff ff2c 	bl	de98 <__b2d>
    e040:	0006      	movs	r6, r0
    e042:	000f      	movs	r7, r1
    e044:	4640      	mov	r0, r8
    e046:	a903      	add	r1, sp, #12
    e048:	f7ff ff26 	bl	de98 <__b2d>
    e04c:	464b      	mov	r3, r9
    e04e:	691b      	ldr	r3, [r3, #16]
    e050:	9000      	str	r0, [sp, #0]
    e052:	9101      	str	r1, [sp, #4]
    e054:	469c      	mov	ip, r3
    e056:	4643      	mov	r3, r8
    e058:	691b      	ldr	r3, [r3, #16]
    e05a:	4698      	mov	r8, r3
    e05c:	4663      	mov	r3, ip
    e05e:	4642      	mov	r2, r8
    e060:	1a9b      	subs	r3, r3, r2
    e062:	015b      	lsls	r3, r3, #5
    e064:	469c      	mov	ip, r3
    e066:	9a03      	ldr	r2, [sp, #12]
    e068:	9b02      	ldr	r3, [sp, #8]
    e06a:	1a9b      	subs	r3, r3, r2
    e06c:	4698      	mov	r8, r3
    e06e:	44c4      	add	ip, r8
    e070:	4663      	mov	r3, ip
    e072:	2b00      	cmp	r3, #0
    e074:	dd0d      	ble.n	e092 <__ratio+0x66>
    e076:	051b      	lsls	r3, r3, #20
    e078:	19dd      	adds	r5, r3, r7
    e07a:	002f      	movs	r7, r5
    e07c:	0002      	movs	r2, r0
    e07e:	000b      	movs	r3, r1
    e080:	0030      	movs	r0, r6
    e082:	0039      	movs	r1, r7
    e084:	f7f7 f9ea 	bl	545c <__aeabi_ddiv>
    e088:	b005      	add	sp, #20
    e08a:	bc0c      	pop	{r2, r3}
    e08c:	4690      	mov	r8, r2
    e08e:	4699      	mov	r9, r3
    e090:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e092:	4663      	mov	r3, ip
    e094:	0518      	lsls	r0, r3, #20
    e096:	1a0b      	subs	r3, r1, r0
    e098:	9301      	str	r3, [sp, #4]
    e09a:	9800      	ldr	r0, [sp, #0]
    e09c:	9901      	ldr	r1, [sp, #4]
    e09e:	e7ed      	b.n	e07c <__ratio+0x50>

0000e0a0 <__copybits>:
    e0a0:	0013      	movs	r3, r2
    e0a2:	b570      	push	{r4, r5, r6, lr}
    e0a4:	1e4c      	subs	r4, r1, #1
    e0a6:	6911      	ldr	r1, [r2, #16]
    e0a8:	1164      	asrs	r4, r4, #5
    e0aa:	3401      	adds	r4, #1
    e0ac:	3314      	adds	r3, #20
    e0ae:	0089      	lsls	r1, r1, #2
    e0b0:	00a4      	lsls	r4, r4, #2
    e0b2:	1859      	adds	r1, r3, r1
    e0b4:	1904      	adds	r4, r0, r4
    e0b6:	428b      	cmp	r3, r1
    e0b8:	d20b      	bcs.n	e0d2 <__copybits+0x32>
    e0ba:	0005      	movs	r5, r0
    e0bc:	cb40      	ldmia	r3!, {r6}
    e0be:	c540      	stmia	r5!, {r6}
    e0c0:	4299      	cmp	r1, r3
    e0c2:	d8fb      	bhi.n	e0bc <__copybits+0x1c>
    e0c4:	2303      	movs	r3, #3
    e0c6:	3218      	adds	r2, #24
    e0c8:	1a9a      	subs	r2, r3, r2
    e0ca:	1889      	adds	r1, r1, r2
    e0cc:	4399      	bics	r1, r3
    e0ce:	3104      	adds	r1, #4
    e0d0:	1840      	adds	r0, r0, r1
    e0d2:	2300      	movs	r3, #0
    e0d4:	4284      	cmp	r4, r0
    e0d6:	d902      	bls.n	e0de <__copybits+0x3e>
    e0d8:	c008      	stmia	r0!, {r3}
    e0da:	4284      	cmp	r4, r0
    e0dc:	d8fc      	bhi.n	e0d8 <__copybits+0x38>
    e0de:	bd70      	pop	{r4, r5, r6, pc}

0000e0e0 <__any_on>:
    e0e0:	0002      	movs	r2, r0
    e0e2:	6903      	ldr	r3, [r0, #16]
    e0e4:	b510      	push	{r4, lr}
    e0e6:	3214      	adds	r2, #20
    e0e8:	1148      	asrs	r0, r1, #5
    e0ea:	4283      	cmp	r3, r0
    e0ec:	da0f      	bge.n	e10e <__any_on+0x2e>
    e0ee:	009b      	lsls	r3, r3, #2
    e0f0:	18d3      	adds	r3, r2, r3
    e0f2:	429a      	cmp	r2, r3
    e0f4:	d221      	bcs.n	e13a <__any_on+0x5a>
    e0f6:	3b04      	subs	r3, #4
    e0f8:	6818      	ldr	r0, [r3, #0]
    e0fa:	2800      	cmp	r0, #0
    e0fc:	d004      	beq.n	e108 <__any_on+0x28>
    e0fe:	e01a      	b.n	e136 <__any_on+0x56>
    e100:	3b04      	subs	r3, #4
    e102:	6819      	ldr	r1, [r3, #0]
    e104:	2900      	cmp	r1, #0
    e106:	d116      	bne.n	e136 <__any_on+0x56>
    e108:	429a      	cmp	r2, r3
    e10a:	d3f9      	bcc.n	e100 <__any_on+0x20>
    e10c:	bd10      	pop	{r4, pc}
    e10e:	4283      	cmp	r3, r0
    e110:	dd0e      	ble.n	e130 <__any_on+0x50>
    e112:	231f      	movs	r3, #31
    e114:	4019      	ands	r1, r3
    e116:	0083      	lsls	r3, r0, #2
    e118:	18d3      	adds	r3, r2, r3
    e11a:	2900      	cmp	r1, #0
    e11c:	d0e9      	beq.n	e0f2 <__any_on+0x12>
    e11e:	681c      	ldr	r4, [r3, #0]
    e120:	0020      	movs	r0, r4
    e122:	40c8      	lsrs	r0, r1
    e124:	4088      	lsls	r0, r1
    e126:	0001      	movs	r1, r0
    e128:	2001      	movs	r0, #1
    e12a:	428c      	cmp	r4, r1
    e12c:	d1ee      	bne.n	e10c <__any_on+0x2c>
    e12e:	e7e0      	b.n	e0f2 <__any_on+0x12>
    e130:	0083      	lsls	r3, r0, #2
    e132:	18d3      	adds	r3, r2, r3
    e134:	e7dd      	b.n	e0f2 <__any_on+0x12>
    e136:	2001      	movs	r0, #1
    e138:	e7e8      	b.n	e10c <__any_on+0x2c>
    e13a:	2000      	movs	r0, #0
    e13c:	e7e6      	b.n	e10c <__any_on+0x2c>
    e13e:	46c0      	nop			; (mov r8, r8)

0000e140 <_read_r>:
    e140:	b570      	push	{r4, r5, r6, lr}
    e142:	0005      	movs	r5, r0
    e144:	0008      	movs	r0, r1
    e146:	0011      	movs	r1, r2
    e148:	2200      	movs	r2, #0
    e14a:	4c06      	ldr	r4, [pc, #24]	; (e164 <_read_r+0x24>)
    e14c:	6022      	str	r2, [r4, #0]
    e14e:	001a      	movs	r2, r3
    e150:	f7f4 fb76 	bl	2840 <_read>
    e154:	1c43      	adds	r3, r0, #1
    e156:	d000      	beq.n	e15a <_read_r+0x1a>
    e158:	bd70      	pop	{r4, r5, r6, pc}
    e15a:	6823      	ldr	r3, [r4, #0]
    e15c:	2b00      	cmp	r3, #0
    e15e:	d0fb      	beq.n	e158 <_read_r+0x18>
    e160:	602b      	str	r3, [r5, #0]
    e162:	e7f9      	b.n	e158 <_read_r+0x18>
    e164:	20001678 	.word	0x20001678

0000e168 <_realloc_r>:
    e168:	b5f0      	push	{r4, r5, r6, r7, lr}
    e16a:	464e      	mov	r6, r9
    e16c:	4645      	mov	r5, r8
    e16e:	46de      	mov	lr, fp
    e170:	4657      	mov	r7, sl
    e172:	b5e0      	push	{r5, r6, r7, lr}
    e174:	b085      	sub	sp, #20
    e176:	9001      	str	r0, [sp, #4]
    e178:	000e      	movs	r6, r1
    e17a:	0015      	movs	r5, r2
    e17c:	2900      	cmp	r1, #0
    e17e:	d100      	bne.n	e182 <_realloc_r+0x1a>
    e180:	e09e      	b.n	e2c0 <_realloc_r+0x158>
    e182:	0037      	movs	r7, r6
    e184:	9801      	ldr	r0, [sp, #4]
    e186:	3f08      	subs	r7, #8
    e188:	f7ff fb1c 	bl	d7c4 <__malloc_lock>
    e18c:	687a      	ldr	r2, [r7, #4]
    e18e:	2303      	movs	r3, #3
    e190:	0014      	movs	r4, r2
    e192:	439c      	bics	r4, r3
    e194:	002b      	movs	r3, r5
    e196:	330b      	adds	r3, #11
    e198:	46b9      	mov	r9, r7
    e19a:	2b16      	cmp	r3, #22
    e19c:	d847      	bhi.n	e22e <_realloc_r+0xc6>
    e19e:	2110      	movs	r1, #16
    e1a0:	2310      	movs	r3, #16
    e1a2:	4688      	mov	r8, r1
    e1a4:	4545      	cmp	r5, r8
    e1a6:	d846      	bhi.n	e236 <_realloc_r+0xce>
    e1a8:	429c      	cmp	r4, r3
    e1aa:	da49      	bge.n	e240 <_realloc_r+0xd8>
    e1ac:	49cc      	ldr	r1, [pc, #816]	; (e4e0 <_realloc_r+0x378>)
    e1ae:	1938      	adds	r0, r7, r4
    e1b0:	468b      	mov	fp, r1
    e1b2:	6889      	ldr	r1, [r1, #8]
    e1b4:	9002      	str	r0, [sp, #8]
    e1b6:	4288      	cmp	r0, r1
    e1b8:	d100      	bne.n	e1bc <_realloc_r+0x54>
    e1ba:	e0c2      	b.n	e342 <_realloc_r+0x1da>
    e1bc:	2101      	movs	r1, #1
    e1be:	468a      	mov	sl, r1
    e1c0:	6840      	ldr	r0, [r0, #4]
    e1c2:	0001      	movs	r1, r0
    e1c4:	9003      	str	r0, [sp, #12]
    e1c6:	4650      	mov	r0, sl
    e1c8:	4381      	bics	r1, r0
    e1ca:	468c      	mov	ip, r1
    e1cc:	9902      	ldr	r1, [sp, #8]
    e1ce:	468b      	mov	fp, r1
    e1d0:	44dc      	add	ip, fp
    e1d2:	4661      	mov	r1, ip
    e1d4:	6849      	ldr	r1, [r1, #4]
    e1d6:	4201      	tst	r1, r0
    e1d8:	d04d      	beq.n	e276 <_realloc_r+0x10e>
    e1da:	4210      	tst	r0, r2
    e1dc:	d100      	bne.n	e1e0 <_realloc_r+0x78>
    e1de:	e0a2      	b.n	e326 <_realloc_r+0x1be>
    e1e0:	0029      	movs	r1, r5
    e1e2:	9801      	ldr	r0, [sp, #4]
    e1e4:	f7fe ff62 	bl	d0ac <_malloc_r>
    e1e8:	1e05      	subs	r5, r0, #0
    e1ea:	d039      	beq.n	e260 <_realloc_r+0xf8>
    e1ec:	2301      	movs	r3, #1
    e1ee:	0002      	movs	r2, r0
    e1f0:	6879      	ldr	r1, [r7, #4]
    e1f2:	3a08      	subs	r2, #8
    e1f4:	4399      	bics	r1, r3
    e1f6:	187f      	adds	r7, r7, r1
    e1f8:	42ba      	cmp	r2, r7
    e1fa:	d100      	bne.n	e1fe <_realloc_r+0x96>
    e1fc:	e12e      	b.n	e45c <_realloc_r+0x2f4>
    e1fe:	1f22      	subs	r2, r4, #4
    e200:	2a24      	cmp	r2, #36	; 0x24
    e202:	d900      	bls.n	e206 <_realloc_r+0x9e>
    e204:	e114      	b.n	e430 <_realloc_r+0x2c8>
    e206:	2a13      	cmp	r2, #19
    e208:	d900      	bls.n	e20c <_realloc_r+0xa4>
    e20a:	e0e8      	b.n	e3de <_realloc_r+0x276>
    e20c:	0003      	movs	r3, r0
    e20e:	0032      	movs	r2, r6
    e210:	6811      	ldr	r1, [r2, #0]
    e212:	6019      	str	r1, [r3, #0]
    e214:	6851      	ldr	r1, [r2, #4]
    e216:	6059      	str	r1, [r3, #4]
    e218:	6892      	ldr	r2, [r2, #8]
    e21a:	609a      	str	r2, [r3, #8]
    e21c:	9c01      	ldr	r4, [sp, #4]
    e21e:	0031      	movs	r1, r6
    e220:	0020      	movs	r0, r4
    e222:	f7fe fbeb 	bl	c9fc <_free_r>
    e226:	0020      	movs	r0, r4
    e228:	f7ff fad4 	bl	d7d4 <__malloc_unlock>
    e22c:	e01b      	b.n	e266 <_realloc_r+0xfe>
    e22e:	2107      	movs	r1, #7
    e230:	438b      	bics	r3, r1
    e232:	4698      	mov	r8, r3
    e234:	d5b6      	bpl.n	e1a4 <_realloc_r+0x3c>
    e236:	230c      	movs	r3, #12
    e238:	9a01      	ldr	r2, [sp, #4]
    e23a:	2500      	movs	r5, #0
    e23c:	6013      	str	r3, [r2, #0]
    e23e:	e012      	b.n	e266 <_realloc_r+0xfe>
    e240:	0035      	movs	r5, r6
    e242:	4643      	mov	r3, r8
    e244:	1ae3      	subs	r3, r4, r3
    e246:	2b0f      	cmp	r3, #15
    e248:	d825      	bhi.n	e296 <_realloc_r+0x12e>
    e24a:	464b      	mov	r3, r9
    e24c:	2201      	movs	r2, #1
    e24e:	4649      	mov	r1, r9
    e250:	685b      	ldr	r3, [r3, #4]
    e252:	4013      	ands	r3, r2
    e254:	4323      	orrs	r3, r4
    e256:	604b      	str	r3, [r1, #4]
    e258:	444c      	add	r4, r9
    e25a:	6863      	ldr	r3, [r4, #4]
    e25c:	431a      	orrs	r2, r3
    e25e:	6062      	str	r2, [r4, #4]
    e260:	9801      	ldr	r0, [sp, #4]
    e262:	f7ff fab7 	bl	d7d4 <__malloc_unlock>
    e266:	0028      	movs	r0, r5
    e268:	b005      	add	sp, #20
    e26a:	bc3c      	pop	{r2, r3, r4, r5}
    e26c:	4690      	mov	r8, r2
    e26e:	4699      	mov	r9, r3
    e270:	46a2      	mov	sl, r4
    e272:	46ab      	mov	fp, r5
    e274:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e276:	2103      	movs	r1, #3
    e278:	9803      	ldr	r0, [sp, #12]
    e27a:	468c      	mov	ip, r1
    e27c:	4388      	bics	r0, r1
    e27e:	1821      	adds	r1, r4, r0
    e280:	468b      	mov	fp, r1
    e282:	4299      	cmp	r1, r3
    e284:	db21      	blt.n	e2ca <_realloc_r+0x162>
    e286:	9a02      	ldr	r2, [sp, #8]
    e288:	0035      	movs	r5, r6
    e28a:	68d3      	ldr	r3, [r2, #12]
    e28c:	6892      	ldr	r2, [r2, #8]
    e28e:	465c      	mov	r4, fp
    e290:	60d3      	str	r3, [r2, #12]
    e292:	609a      	str	r2, [r3, #8]
    e294:	e7d5      	b.n	e242 <_realloc_r+0xda>
    e296:	464a      	mov	r2, r9
    e298:	2001      	movs	r0, #1
    e29a:	4646      	mov	r6, r8
    e29c:	6852      	ldr	r2, [r2, #4]
    e29e:	4649      	mov	r1, r9
    e2a0:	4002      	ands	r2, r0
    e2a2:	4332      	orrs	r2, r6
    e2a4:	464e      	mov	r6, r9
    e2a6:	4441      	add	r1, r8
    e2a8:	4303      	orrs	r3, r0
    e2aa:	6072      	str	r2, [r6, #4]
    e2ac:	444c      	add	r4, r9
    e2ae:	604b      	str	r3, [r1, #4]
    e2b0:	6863      	ldr	r3, [r4, #4]
    e2b2:	3108      	adds	r1, #8
    e2b4:	4318      	orrs	r0, r3
    e2b6:	6060      	str	r0, [r4, #4]
    e2b8:	9801      	ldr	r0, [sp, #4]
    e2ba:	f7fe fb9f 	bl	c9fc <_free_r>
    e2be:	e7cf      	b.n	e260 <_realloc_r+0xf8>
    e2c0:	0011      	movs	r1, r2
    e2c2:	f7fe fef3 	bl	d0ac <_malloc_r>
    e2c6:	0005      	movs	r5, r0
    e2c8:	e7cd      	b.n	e266 <_realloc_r+0xfe>
    e2ca:	4651      	mov	r1, sl
    e2cc:	4211      	tst	r1, r2
    e2ce:	d000      	beq.n	e2d2 <_realloc_r+0x16a>
    e2d0:	e786      	b.n	e1e0 <_realloc_r+0x78>
    e2d2:	4661      	mov	r1, ip
    e2d4:	683a      	ldr	r2, [r7, #0]
    e2d6:	1aba      	subs	r2, r7, r2
    e2d8:	4692      	mov	sl, r2
    e2da:	6852      	ldr	r2, [r2, #4]
    e2dc:	438a      	bics	r2, r1
    e2de:	1880      	adds	r0, r0, r2
    e2e0:	4683      	mov	fp, r0
    e2e2:	44a3      	add	fp, r4
    e2e4:	459b      	cmp	fp, r3
    e2e6:	db26      	blt.n	e336 <_realloc_r+0x1ce>
    e2e8:	9a02      	ldr	r2, [sp, #8]
    e2ea:	68d3      	ldr	r3, [r2, #12]
    e2ec:	6892      	ldr	r2, [r2, #8]
    e2ee:	60d3      	str	r3, [r2, #12]
    e2f0:	609a      	str	r2, [r3, #8]
    e2f2:	4653      	mov	r3, sl
    e2f4:	4652      	mov	r2, sl
    e2f6:	4655      	mov	r5, sl
    e2f8:	6892      	ldr	r2, [r2, #8]
    e2fa:	68db      	ldr	r3, [r3, #12]
    e2fc:	3508      	adds	r5, #8
    e2fe:	60d3      	str	r3, [r2, #12]
    e300:	609a      	str	r2, [r3, #8]
    e302:	1f22      	subs	r2, r4, #4
    e304:	2a24      	cmp	r2, #36	; 0x24
    e306:	d900      	bls.n	e30a <_realloc_r+0x1a2>
    e308:	e096      	b.n	e438 <_realloc_r+0x2d0>
    e30a:	2a13      	cmp	r2, #19
    e30c:	d972      	bls.n	e3f4 <_realloc_r+0x28c>
    e30e:	4653      	mov	r3, sl
    e310:	6831      	ldr	r1, [r6, #0]
    e312:	6099      	str	r1, [r3, #8]
    e314:	6871      	ldr	r1, [r6, #4]
    e316:	60d9      	str	r1, [r3, #12]
    e318:	2a1b      	cmp	r2, #27
    e31a:	d900      	bls.n	e31e <_realloc_r+0x1b6>
    e31c:	e0a4      	b.n	e468 <_realloc_r+0x300>
    e31e:	0032      	movs	r2, r6
    e320:	3310      	adds	r3, #16
    e322:	3208      	adds	r2, #8
    e324:	e068      	b.n	e3f8 <_realloc_r+0x290>
    e326:	683a      	ldr	r2, [r7, #0]
    e328:	1aba      	subs	r2, r7, r2
    e32a:	4692      	mov	sl, r2
    e32c:	4651      	mov	r1, sl
    e32e:	2203      	movs	r2, #3
    e330:	6849      	ldr	r1, [r1, #4]
    e332:	4391      	bics	r1, r2
    e334:	000a      	movs	r2, r1
    e336:	4693      	mov	fp, r2
    e338:	44a3      	add	fp, r4
    e33a:	459b      	cmp	fp, r3
    e33c:	da00      	bge.n	e340 <_realloc_r+0x1d8>
    e33e:	e74f      	b.n	e1e0 <_realloc_r+0x78>
    e340:	e7d7      	b.n	e2f2 <_realloc_r+0x18a>
    e342:	2003      	movs	r0, #3
    e344:	9902      	ldr	r1, [sp, #8]
    e346:	4684      	mov	ip, r0
    e348:	6849      	ldr	r1, [r1, #4]
    e34a:	4381      	bics	r1, r0
    e34c:	4640      	mov	r0, r8
    e34e:	1909      	adds	r1, r1, r4
    e350:	3010      	adds	r0, #16
    e352:	9002      	str	r0, [sp, #8]
    e354:	4281      	cmp	r1, r0
    e356:	da58      	bge.n	e40a <_realloc_r+0x2a2>
    e358:	07d2      	lsls	r2, r2, #31
    e35a:	d500      	bpl.n	e35e <_realloc_r+0x1f6>
    e35c:	e740      	b.n	e1e0 <_realloc_r+0x78>
    e35e:	4660      	mov	r0, ip
    e360:	683a      	ldr	r2, [r7, #0]
    e362:	1aba      	subs	r2, r7, r2
    e364:	4692      	mov	sl, r2
    e366:	6852      	ldr	r2, [r2, #4]
    e368:	4382      	bics	r2, r0
    e36a:	9802      	ldr	r0, [sp, #8]
    e36c:	1851      	adds	r1, r2, r1
    e36e:	9103      	str	r1, [sp, #12]
    e370:	4288      	cmp	r0, r1
    e372:	dce0      	bgt.n	e336 <_realloc_r+0x1ce>
    e374:	4653      	mov	r3, sl
    e376:	4652      	mov	r2, sl
    e378:	4655      	mov	r5, sl
    e37a:	6892      	ldr	r2, [r2, #8]
    e37c:	68db      	ldr	r3, [r3, #12]
    e37e:	3508      	adds	r5, #8
    e380:	60d3      	str	r3, [r2, #12]
    e382:	609a      	str	r2, [r3, #8]
    e384:	1f22      	subs	r2, r4, #4
    e386:	2a24      	cmp	r2, #36	; 0x24
    e388:	d900      	bls.n	e38c <_realloc_r+0x224>
    e38a:	e08e      	b.n	e4aa <_realloc_r+0x342>
    e38c:	2a13      	cmp	r2, #19
    e38e:	d800      	bhi.n	e392 <_realloc_r+0x22a>
    e390:	e088      	b.n	e4a4 <_realloc_r+0x33c>
    e392:	4653      	mov	r3, sl
    e394:	6831      	ldr	r1, [r6, #0]
    e396:	6099      	str	r1, [r3, #8]
    e398:	6871      	ldr	r1, [r6, #4]
    e39a:	60d9      	str	r1, [r3, #12]
    e39c:	2a1b      	cmp	r2, #27
    e39e:	d900      	bls.n	e3a2 <_realloc_r+0x23a>
    e3a0:	e088      	b.n	e4b4 <_realloc_r+0x34c>
    e3a2:	0032      	movs	r2, r6
    e3a4:	3310      	adds	r3, #16
    e3a6:	3208      	adds	r2, #8
    e3a8:	6811      	ldr	r1, [r2, #0]
    e3aa:	6019      	str	r1, [r3, #0]
    e3ac:	6851      	ldr	r1, [r2, #4]
    e3ae:	6059      	str	r1, [r3, #4]
    e3b0:	6892      	ldr	r2, [r2, #8]
    e3b2:	609a      	str	r2, [r3, #8]
    e3b4:	4651      	mov	r1, sl
    e3b6:	465b      	mov	r3, fp
    e3b8:	4642      	mov	r2, r8
    e3ba:	4441      	add	r1, r8
    e3bc:	6099      	str	r1, [r3, #8]
    e3be:	9b03      	ldr	r3, [sp, #12]
    e3c0:	9801      	ldr	r0, [sp, #4]
    e3c2:	1a9a      	subs	r2, r3, r2
    e3c4:	2301      	movs	r3, #1
    e3c6:	431a      	orrs	r2, r3
    e3c8:	604a      	str	r2, [r1, #4]
    e3ca:	4652      	mov	r2, sl
    e3cc:	6852      	ldr	r2, [r2, #4]
    e3ce:	4013      	ands	r3, r2
    e3d0:	4642      	mov	r2, r8
    e3d2:	4313      	orrs	r3, r2
    e3d4:	4652      	mov	r2, sl
    e3d6:	6053      	str	r3, [r2, #4]
    e3d8:	f7ff f9fc 	bl	d7d4 <__malloc_unlock>
    e3dc:	e743      	b.n	e266 <_realloc_r+0xfe>
    e3de:	6833      	ldr	r3, [r6, #0]
    e3e0:	6003      	str	r3, [r0, #0]
    e3e2:	6873      	ldr	r3, [r6, #4]
    e3e4:	6043      	str	r3, [r0, #4]
    e3e6:	2a1b      	cmp	r2, #27
    e3e8:	d82d      	bhi.n	e446 <_realloc_r+0x2de>
    e3ea:	0003      	movs	r3, r0
    e3ec:	0032      	movs	r2, r6
    e3ee:	3308      	adds	r3, #8
    e3f0:	3208      	adds	r2, #8
    e3f2:	e70d      	b.n	e210 <_realloc_r+0xa8>
    e3f4:	002b      	movs	r3, r5
    e3f6:	0032      	movs	r2, r6
    e3f8:	6811      	ldr	r1, [r2, #0]
    e3fa:	465c      	mov	r4, fp
    e3fc:	6019      	str	r1, [r3, #0]
    e3fe:	6851      	ldr	r1, [r2, #4]
    e400:	46d1      	mov	r9, sl
    e402:	6059      	str	r1, [r3, #4]
    e404:	6892      	ldr	r2, [r2, #8]
    e406:	609a      	str	r2, [r3, #8]
    e408:	e71b      	b.n	e242 <_realloc_r+0xda>
    e40a:	4643      	mov	r3, r8
    e40c:	18fa      	adds	r2, r7, r3
    e40e:	465b      	mov	r3, fp
    e410:	609a      	str	r2, [r3, #8]
    e412:	4643      	mov	r3, r8
    e414:	1ac9      	subs	r1, r1, r3
    e416:	2301      	movs	r3, #1
    e418:	4319      	orrs	r1, r3
    e41a:	6051      	str	r1, [r2, #4]
    e41c:	687a      	ldr	r2, [r7, #4]
    e41e:	9801      	ldr	r0, [sp, #4]
    e420:	4013      	ands	r3, r2
    e422:	4642      	mov	r2, r8
    e424:	4313      	orrs	r3, r2
    e426:	607b      	str	r3, [r7, #4]
    e428:	f7ff f9d4 	bl	d7d4 <__malloc_unlock>
    e42c:	0035      	movs	r5, r6
    e42e:	e71a      	b.n	e266 <_realloc_r+0xfe>
    e430:	0031      	movs	r1, r6
    e432:	f7ff f977 	bl	d724 <memmove>
    e436:	e6f1      	b.n	e21c <_realloc_r+0xb4>
    e438:	0031      	movs	r1, r6
    e43a:	0028      	movs	r0, r5
    e43c:	f7ff f972 	bl	d724 <memmove>
    e440:	465c      	mov	r4, fp
    e442:	46d1      	mov	r9, sl
    e444:	e6fd      	b.n	e242 <_realloc_r+0xda>
    e446:	68b3      	ldr	r3, [r6, #8]
    e448:	6083      	str	r3, [r0, #8]
    e44a:	68f3      	ldr	r3, [r6, #12]
    e44c:	60c3      	str	r3, [r0, #12]
    e44e:	2a24      	cmp	r2, #36	; 0x24
    e450:	d015      	beq.n	e47e <_realloc_r+0x316>
    e452:	0003      	movs	r3, r0
    e454:	0032      	movs	r2, r6
    e456:	3310      	adds	r3, #16
    e458:	3210      	adds	r2, #16
    e45a:	e6d9      	b.n	e210 <_realloc_r+0xa8>
    e45c:	6853      	ldr	r3, [r2, #4]
    e45e:	2203      	movs	r2, #3
    e460:	4393      	bics	r3, r2
    e462:	18e4      	adds	r4, r4, r3
    e464:	0035      	movs	r5, r6
    e466:	e6ec      	b.n	e242 <_realloc_r+0xda>
    e468:	4653      	mov	r3, sl
    e46a:	68b1      	ldr	r1, [r6, #8]
    e46c:	6119      	str	r1, [r3, #16]
    e46e:	68f1      	ldr	r1, [r6, #12]
    e470:	6159      	str	r1, [r3, #20]
    e472:	2a24      	cmp	r2, #36	; 0x24
    e474:	d00c      	beq.n	e490 <_realloc_r+0x328>
    e476:	0032      	movs	r2, r6
    e478:	3318      	adds	r3, #24
    e47a:	3210      	adds	r2, #16
    e47c:	e7bc      	b.n	e3f8 <_realloc_r+0x290>
    e47e:	6933      	ldr	r3, [r6, #16]
    e480:	0032      	movs	r2, r6
    e482:	6103      	str	r3, [r0, #16]
    e484:	0003      	movs	r3, r0
    e486:	6971      	ldr	r1, [r6, #20]
    e488:	3318      	adds	r3, #24
    e48a:	3218      	adds	r2, #24
    e48c:	6141      	str	r1, [r0, #20]
    e48e:	e6bf      	b.n	e210 <_realloc_r+0xa8>
    e490:	4653      	mov	r3, sl
    e492:	6932      	ldr	r2, [r6, #16]
    e494:	4651      	mov	r1, sl
    e496:	619a      	str	r2, [r3, #24]
    e498:	0032      	movs	r2, r6
    e49a:	6970      	ldr	r0, [r6, #20]
    e49c:	3320      	adds	r3, #32
    e49e:	3218      	adds	r2, #24
    e4a0:	61c8      	str	r0, [r1, #28]
    e4a2:	e7a9      	b.n	e3f8 <_realloc_r+0x290>
    e4a4:	002b      	movs	r3, r5
    e4a6:	0032      	movs	r2, r6
    e4a8:	e77e      	b.n	e3a8 <_realloc_r+0x240>
    e4aa:	0031      	movs	r1, r6
    e4ac:	0028      	movs	r0, r5
    e4ae:	f7ff f939 	bl	d724 <memmove>
    e4b2:	e77f      	b.n	e3b4 <_realloc_r+0x24c>
    e4b4:	4653      	mov	r3, sl
    e4b6:	68b1      	ldr	r1, [r6, #8]
    e4b8:	6119      	str	r1, [r3, #16]
    e4ba:	68f1      	ldr	r1, [r6, #12]
    e4bc:	6159      	str	r1, [r3, #20]
    e4be:	2a24      	cmp	r2, #36	; 0x24
    e4c0:	d003      	beq.n	e4ca <_realloc_r+0x362>
    e4c2:	0032      	movs	r2, r6
    e4c4:	3318      	adds	r3, #24
    e4c6:	3210      	adds	r2, #16
    e4c8:	e76e      	b.n	e3a8 <_realloc_r+0x240>
    e4ca:	4653      	mov	r3, sl
    e4cc:	6932      	ldr	r2, [r6, #16]
    e4ce:	4651      	mov	r1, sl
    e4d0:	619a      	str	r2, [r3, #24]
    e4d2:	0032      	movs	r2, r6
    e4d4:	6970      	ldr	r0, [r6, #20]
    e4d6:	3320      	adds	r3, #32
    e4d8:	3218      	adds	r2, #24
    e4da:	61c8      	str	r0, [r1, #28]
    e4dc:	e764      	b.n	e3a8 <_realloc_r+0x240>
    e4de:	46c0      	nop			; (mov r8, r8)
    e4e0:	20000608 	.word	0x20000608

0000e4e4 <_sbrk_r>:
    e4e4:	2300      	movs	r3, #0
    e4e6:	b570      	push	{r4, r5, r6, lr}
    e4e8:	4c06      	ldr	r4, [pc, #24]	; (e504 <_sbrk_r+0x20>)
    e4ea:	0005      	movs	r5, r0
    e4ec:	0008      	movs	r0, r1
    e4ee:	6023      	str	r3, [r4, #0]
    e4f0:	f7f2 fb84 	bl	bfc <_sbrk>
    e4f4:	1c43      	adds	r3, r0, #1
    e4f6:	d000      	beq.n	e4fa <_sbrk_r+0x16>
    e4f8:	bd70      	pop	{r4, r5, r6, pc}
    e4fa:	6823      	ldr	r3, [r4, #0]
    e4fc:	2b00      	cmp	r3, #0
    e4fe:	d0fb      	beq.n	e4f8 <_sbrk_r+0x14>
    e500:	602b      	str	r3, [r5, #0]
    e502:	e7f9      	b.n	e4f8 <_sbrk_r+0x14>
    e504:	20001678 	.word	0x20001678

0000e508 <__sccl>:
    e508:	b570      	push	{r4, r5, r6, lr}
    e50a:	780c      	ldrb	r4, [r1, #0]
    e50c:	2c5e      	cmp	r4, #94	; 0x5e
    e50e:	d028      	beq.n	e562 <__sccl+0x5a>
    e510:	1c4e      	adds	r6, r1, #1
    e512:	2500      	movs	r5, #0
    e514:	2100      	movs	r1, #0
    e516:	0003      	movs	r3, r0
    e518:	1c42      	adds	r2, r0, #1
    e51a:	32ff      	adds	r2, #255	; 0xff
    e51c:	7019      	strb	r1, [r3, #0]
    e51e:	3301      	adds	r3, #1
    e520:	429a      	cmp	r2, r3
    e522:	d1fb      	bne.n	e51c <__sccl+0x14>
    e524:	1e71      	subs	r1, r6, #1
    e526:	2c00      	cmp	r4, #0
    e528:	d00e      	beq.n	e548 <__sccl+0x40>
    e52a:	2301      	movs	r3, #1
    e52c:	406b      	eors	r3, r5
    e52e:	5503      	strb	r3, [r0, r4]
    e530:	7832      	ldrb	r2, [r6, #0]
    e532:	1c71      	adds	r1, r6, #1
    e534:	2a2d      	cmp	r2, #45	; 0x2d
    e536:	d009      	beq.n	e54c <__sccl+0x44>
    e538:	2a5d      	cmp	r2, #93	; 0x5d
    e53a:	d005      	beq.n	e548 <__sccl+0x40>
    e53c:	2a00      	cmp	r2, #0
    e53e:	d002      	beq.n	e546 <__sccl+0x3e>
    e540:	0014      	movs	r4, r2
    e542:	000e      	movs	r6, r1
    e544:	e7f3      	b.n	e52e <__sccl+0x26>
    e546:	0031      	movs	r1, r6
    e548:	0008      	movs	r0, r1
    e54a:	bd70      	pop	{r4, r5, r6, pc}
    e54c:	7872      	ldrb	r2, [r6, #1]
    e54e:	2a5d      	cmp	r2, #93	; 0x5d
    e550:	d00c      	beq.n	e56c <__sccl+0x64>
    e552:	4294      	cmp	r4, r2
    e554:	dc0a      	bgt.n	e56c <__sccl+0x64>
    e556:	3602      	adds	r6, #2
    e558:	3401      	adds	r4, #1
    e55a:	5503      	strb	r3, [r0, r4]
    e55c:	42a2      	cmp	r2, r4
    e55e:	dcfb      	bgt.n	e558 <__sccl+0x50>
    e560:	e7e6      	b.n	e530 <__sccl+0x28>
    e562:	1c8e      	adds	r6, r1, #2
    e564:	784c      	ldrb	r4, [r1, #1]
    e566:	2501      	movs	r5, #1
    e568:	2101      	movs	r1, #1
    e56a:	e7d4      	b.n	e516 <__sccl+0xe>
    e56c:	242d      	movs	r4, #45	; 0x2d
    e56e:	000e      	movs	r6, r1
    e570:	e7dd      	b.n	e52e <__sccl+0x26>
    e572:	46c0      	nop			; (mov r8, r8)

0000e574 <nanf>:
    e574:	4800      	ldr	r0, [pc, #0]	; (e578 <nanf+0x4>)
    e576:	4770      	bx	lr
    e578:	7fc00000 	.word	0x7fc00000

0000e57c <sulp>:
    e57c:	b570      	push	{r4, r5, r6, lr}
    e57e:	0016      	movs	r6, r2
    e580:	000d      	movs	r5, r1
    e582:	f7ff fc63 	bl	de4c <__ulp>
    e586:	2e00      	cmp	r6, #0
    e588:	d00d      	beq.n	e5a6 <sulp+0x2a>
    e58a:	236b      	movs	r3, #107	; 0x6b
    e58c:	006a      	lsls	r2, r5, #1
    e58e:	0d52      	lsrs	r2, r2, #21
    e590:	1a9b      	subs	r3, r3, r2
    e592:	2b00      	cmp	r3, #0
    e594:	dd07      	ble.n	e5a6 <sulp+0x2a>
    e596:	2400      	movs	r4, #0
    e598:	4a03      	ldr	r2, [pc, #12]	; (e5a8 <sulp+0x2c>)
    e59a:	051b      	lsls	r3, r3, #20
    e59c:	189d      	adds	r5, r3, r2
    e59e:	002b      	movs	r3, r5
    e5a0:	0022      	movs	r2, r4
    e5a2:	f7f7 fa8f 	bl	5ac4 <__aeabi_dmul>
    e5a6:	bd70      	pop	{r4, r5, r6, pc}
    e5a8:	3ff00000 	.word	0x3ff00000

0000e5ac <_strtod_l>:
    e5ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    e5ae:	46de      	mov	lr, fp
    e5b0:	4657      	mov	r7, sl
    e5b2:	464e      	mov	r6, r9
    e5b4:	4645      	mov	r5, r8
    e5b6:	b5e0      	push	{r5, r6, r7, lr}
    e5b8:	001d      	movs	r5, r3
    e5ba:	2300      	movs	r3, #0
    e5bc:	b0a3      	sub	sp, #140	; 0x8c
    e5be:	9009      	str	r0, [sp, #36]	; 0x24
    e5c0:	0028      	movs	r0, r5
    e5c2:	000e      	movs	r6, r1
    e5c4:	931e      	str	r3, [sp, #120]	; 0x78
    e5c6:	4693      	mov	fp, r2
    e5c8:	f7fe fccc 	bl	cf64 <__localeconv_l>
    e5cc:	0007      	movs	r7, r0
    e5ce:	6800      	ldr	r0, [r0, #0]
    e5d0:	f7f8 fe1a 	bl	7208 <strlen>
    e5d4:	2400      	movs	r4, #0
    e5d6:	2300      	movs	r3, #0
    e5d8:	9304      	str	r3, [sp, #16]
    e5da:	9405      	str	r4, [sp, #20]
    e5dc:	0033      	movs	r3, r6
    e5de:	961d      	str	r6, [sp, #116]	; 0x74
    e5e0:	781c      	ldrb	r4, [r3, #0]
    e5e2:	9008      	str	r0, [sp, #32]
    e5e4:	49c4      	ldr	r1, [pc, #784]	; (e8f8 <_strtod_l+0x34c>)
    e5e6:	2c2d      	cmp	r4, #45	; 0x2d
    e5e8:	d900      	bls.n	e5ec <_strtod_l+0x40>
    e5ea:	e070      	b.n	e6ce <_strtod_l+0x122>
    e5ec:	00a2      	lsls	r2, r4, #2
    e5ee:	588a      	ldr	r2, [r1, r2]
    e5f0:	4697      	mov	pc, r2
    e5f2:	4689      	mov	r9, r1
    e5f4:	0014      	movs	r4, r2
    e5f6:	6839      	ldr	r1, [r7, #0]
    e5f8:	9a08      	ldr	r2, [sp, #32]
    e5fa:	4698      	mov	r8, r3
    e5fc:	f002 f924 	bl	10848 <strncmp>
    e600:	2800      	cmp	r0, #0
    e602:	d100      	bne.n	e606 <_strtod_l+0x5a>
    e604:	e084      	b.n	e710 <_strtod_l+0x164>
    e606:	2200      	movs	r2, #0
    e608:	2300      	movs	r3, #0
    e60a:	2000      	movs	r0, #0
    e60c:	950a      	str	r5, [sp, #40]	; 0x28
    e60e:	9208      	str	r2, [sp, #32]
    e610:	2220      	movs	r2, #32
    e612:	0021      	movs	r1, r4
    e614:	4391      	bics	r1, r2
    e616:	2200      	movs	r2, #0
    e618:	2945      	cmp	r1, #69	; 0x45
    e61a:	d100      	bne.n	e61e <_strtod_l+0x72>
    e61c:	e0a6      	b.n	e76c <_strtod_l+0x1c0>
    e61e:	2d00      	cmp	r5, #0
    e620:	d000      	beq.n	e624 <_strtod_l+0x78>
    e622:	e104      	b.n	e82e <_strtod_l+0x282>
    e624:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    e626:	4313      	orrs	r3, r2
    e628:	d000      	beq.n	e62c <_strtod_l+0x80>
    e62a:	e0f8      	b.n	e81e <_strtod_l+0x272>
    e62c:	9b08      	ldr	r3, [sp, #32]
    e62e:	2b00      	cmp	r3, #0
    e630:	d100      	bne.n	e634 <_strtod_l+0x88>
    e632:	e13d      	b.n	e8b0 <_strtod_l+0x304>
    e634:	465b      	mov	r3, fp
    e636:	2400      	movs	r4, #0
    e638:	2500      	movs	r5, #0
    e63a:	2b00      	cmp	r3, #0
    e63c:	d006      	beq.n	e64c <_strtod_l+0xa0>
    e63e:	2300      	movs	r3, #0
    e640:	9307      	str	r3, [sp, #28]
    e642:	465b      	mov	r3, fp
    e644:	601e      	str	r6, [r3, #0]
    e646:	9b07      	ldr	r3, [sp, #28]
    e648:	2b00      	cmp	r3, #0
    e64a:	d108      	bne.n	e65e <_strtod_l+0xb2>
    e64c:	0020      	movs	r0, r4
    e64e:	0029      	movs	r1, r5
    e650:	b023      	add	sp, #140	; 0x8c
    e652:	bc3c      	pop	{r2, r3, r4, r5}
    e654:	4690      	mov	r8, r2
    e656:	4699      	mov	r9, r3
    e658:	46a2      	mov	sl, r4
    e65a:	46ab      	mov	fp, r5
    e65c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e65e:	2180      	movs	r1, #128	; 0x80
    e660:	0609      	lsls	r1, r1, #24
    e662:	186b      	adds	r3, r5, r1
    e664:	001d      	movs	r5, r3
    e666:	e7f1      	b.n	e64c <_strtod_l+0xa0>
    e668:	2200      	movs	r2, #0
    e66a:	9207      	str	r2, [sp, #28]
    e66c:	1c5a      	adds	r2, r3, #1
    e66e:	921d      	str	r2, [sp, #116]	; 0x74
    e670:	785c      	ldrb	r4, [r3, #1]
    e672:	4692      	mov	sl, r2
    e674:	2c00      	cmp	r4, #0
    e676:	d0dd      	beq.n	e634 <_strtod_l+0x88>
    e678:	2300      	movs	r3, #0
    e67a:	930c      	str	r3, [sp, #48]	; 0x30
    e67c:	2c30      	cmp	r4, #48	; 0x30
    e67e:	d02d      	beq.n	e6dc <_strtod_l+0x130>
    e680:	0023      	movs	r3, r4
    e682:	3b30      	subs	r3, #48	; 0x30
    e684:	2b09      	cmp	r3, #9
    e686:	d900      	bls.n	e68a <_strtod_l+0xde>
    e688:	e38c      	b.n	eda4 <_strtod_l+0x7f8>
    e68a:	2300      	movs	r3, #0
    e68c:	4650      	mov	r0, sl
    e68e:	2500      	movs	r5, #0
    e690:	0019      	movs	r1, r3
    e692:	0022      	movs	r2, r4
    e694:	e00c      	b.n	e6b0 <_strtod_l+0x104>
    e696:	009c      	lsls	r4, r3, #2
    e698:	18e3      	adds	r3, r4, r3
    e69a:	005b      	lsls	r3, r3, #1
    e69c:	189b      	adds	r3, r3, r2
    e69e:	3b30      	subs	r3, #48	; 0x30
    e6a0:	3001      	adds	r0, #1
    e6a2:	901d      	str	r0, [sp, #116]	; 0x74
    e6a4:	7802      	ldrb	r2, [r0, #0]
    e6a6:	3501      	adds	r5, #1
    e6a8:	0014      	movs	r4, r2
    e6aa:	3c30      	subs	r4, #48	; 0x30
    e6ac:	2c09      	cmp	r4, #9
    e6ae:	d8a0      	bhi.n	e5f2 <_strtod_l+0x46>
    e6b0:	2d08      	cmp	r5, #8
    e6b2:	ddf0      	ble.n	e696 <_strtod_l+0xea>
    e6b4:	008c      	lsls	r4, r1, #2
    e6b6:	1864      	adds	r4, r4, r1
    e6b8:	0064      	lsls	r4, r4, #1
    e6ba:	18a4      	adds	r4, r4, r2
    e6bc:	0021      	movs	r1, r4
    e6be:	3930      	subs	r1, #48	; 0x30
    e6c0:	e7ee      	b.n	e6a0 <_strtod_l+0xf4>
    e6c2:	3301      	adds	r3, #1
    e6c4:	931d      	str	r3, [sp, #116]	; 0x74
    e6c6:	781c      	ldrb	r4, [r3, #0]
    e6c8:	2c2d      	cmp	r4, #45	; 0x2d
    e6ca:	d800      	bhi.n	e6ce <_strtod_l+0x122>
    e6cc:	e78e      	b.n	e5ec <_strtod_l+0x40>
    e6ce:	469a      	mov	sl, r3
    e6d0:	2300      	movs	r3, #0
    e6d2:	9307      	str	r3, [sp, #28]
    e6d4:	2300      	movs	r3, #0
    e6d6:	930c      	str	r3, [sp, #48]	; 0x30
    e6d8:	2c30      	cmp	r4, #48	; 0x30
    e6da:	d1d1      	bne.n	e680 <_strtod_l+0xd4>
    e6dc:	4653      	mov	r3, sl
    e6de:	785b      	ldrb	r3, [r3, #1]
    e6e0:	2b58      	cmp	r3, #88	; 0x58
    e6e2:	d100      	bne.n	e6e6 <_strtod_l+0x13a>
    e6e4:	e334      	b.n	ed50 <_strtod_l+0x7a4>
    e6e6:	2b78      	cmp	r3, #120	; 0x78
    e6e8:	d100      	bne.n	e6ec <_strtod_l+0x140>
    e6ea:	e331      	b.n	ed50 <_strtod_l+0x7a4>
    e6ec:	4653      	mov	r3, sl
    e6ee:	3301      	adds	r3, #1
    e6f0:	001a      	movs	r2, r3
    e6f2:	931d      	str	r3, [sp, #116]	; 0x74
    e6f4:	7814      	ldrb	r4, [r2, #0]
    e6f6:	3301      	adds	r3, #1
    e6f8:	2c30      	cmp	r4, #48	; 0x30
    e6fa:	d0f9      	beq.n	e6f0 <_strtod_l+0x144>
    e6fc:	4692      	mov	sl, r2
    e6fe:	2c00      	cmp	r4, #0
    e700:	d100      	bne.n	e704 <_strtod_l+0x158>
    e702:	e08c      	b.n	e81e <_strtod_l+0x272>
    e704:	2301      	movs	r3, #1
    e706:	930c      	str	r3, [sp, #48]	; 0x30
    e708:	e7ba      	b.n	e680 <_strtod_l+0xd4>
    e70a:	2201      	movs	r2, #1
    e70c:	9207      	str	r2, [sp, #28]
    e70e:	e7ad      	b.n	e66c <_strtod_l+0xc0>
    e710:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    e712:	9b08      	ldr	r3, [sp, #32]
    e714:	4694      	mov	ip, r2
    e716:	4463      	add	r3, ip
    e718:	931d      	str	r3, [sp, #116]	; 0x74
    e71a:	781c      	ldrb	r4, [r3, #0]
    e71c:	2300      	movs	r3, #0
    e71e:	950a      	str	r5, [sp, #40]	; 0x28
    e720:	0022      	movs	r2, r4
    e722:	3a30      	subs	r2, #48	; 0x30
    e724:	2a09      	cmp	r2, #9
    e726:	d900      	bls.n	e72a <_strtod_l+0x17e>
    e728:	e0e2      	b.n	e8f0 <_strtod_l+0x344>
    e72a:	1c5c      	adds	r4, r3, #1
    e72c:	4694      	mov	ip, r2
    e72e:	2a00      	cmp	r2, #0
    e730:	d101      	bne.n	e736 <_strtod_l+0x18a>
    e732:	f000 fe76 	bl	f422 <_strtod_l+0xe76>
    e736:	1900      	adds	r0, r0, r4
    e738:	195b      	adds	r3, r3, r5
    e73a:	2c01      	cmp	r4, #1
    e73c:	d101      	bne.n	e742 <_strtod_l+0x196>
    e73e:	f000 fe6c 	bl	f41a <_strtod_l+0xe6e>
    e742:	4644      	mov	r4, r8
    e744:	e007      	b.n	e756 <_strtod_l+0x1aa>
    e746:	00a1      	lsls	r1, r4, #2
    e748:	190c      	adds	r4, r1, r4
    e74a:	0064      	lsls	r4, r4, #1
    e74c:	429f      	cmp	r7, r3
    e74e:	d101      	bne.n	e754 <_strtod_l+0x1a8>
    e750:	f000 fbef 	bl	ef32 <_strtod_l+0x986>
    e754:	003d      	movs	r5, r7
    e756:	1c6f      	adds	r7, r5, #1
    e758:	2d08      	cmp	r5, #8
    e75a:	ddf4      	ble.n	e746 <_strtod_l+0x19a>
    e75c:	2f10      	cmp	r7, #16
    e75e:	dcf5      	bgt.n	e74c <_strtod_l+0x1a0>
    e760:	4649      	mov	r1, r9
    e762:	0089      	lsls	r1, r1, #2
    e764:	4449      	add	r1, r9
    e766:	0049      	lsls	r1, r1, #1
    e768:	4689      	mov	r9, r1
    e76a:	e7ef      	b.n	e74c <_strtod_l+0x1a0>
    e76c:	002a      	movs	r2, r5
    e76e:	990c      	ldr	r1, [sp, #48]	; 0x30
    e770:	431a      	orrs	r2, r3
    e772:	430a      	orrs	r2, r1
    e774:	d100      	bne.n	e778 <_strtod_l+0x1cc>
    e776:	e75d      	b.n	e634 <_strtod_l+0x88>
    e778:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    e77a:	1c72      	adds	r2, r6, #1
    e77c:	921d      	str	r2, [sp, #116]	; 0x74
    e77e:	7874      	ldrb	r4, [r6, #1]
    e780:	2c2b      	cmp	r4, #43	; 0x2b
    e782:	d100      	bne.n	e786 <_strtod_l+0x1da>
    e784:	e39a      	b.n	eebc <_strtod_l+0x910>
    e786:	2c2d      	cmp	r4, #45	; 0x2d
    e788:	d100      	bne.n	e78c <_strtod_l+0x1e0>
    e78a:	e230      	b.n	ebee <_strtod_l+0x642>
    e78c:	2200      	movs	r2, #0
    e78e:	920d      	str	r2, [sp, #52]	; 0x34
    e790:	0022      	movs	r2, r4
    e792:	3a30      	subs	r2, #48	; 0x30
    e794:	2a09      	cmp	r2, #9
    e796:	d900      	bls.n	e79a <_strtod_l+0x1ee>
    e798:	e2f5      	b.n	ed86 <_strtod_l+0x7da>
    e79a:	2c30      	cmp	r4, #48	; 0x30
    e79c:	d106      	bne.n	e7ac <_strtod_l+0x200>
    e79e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    e7a0:	3201      	adds	r2, #1
    e7a2:	921d      	str	r2, [sp, #116]	; 0x74
    e7a4:	7814      	ldrb	r4, [r2, #0]
    e7a6:	3201      	adds	r2, #1
    e7a8:	2c30      	cmp	r4, #48	; 0x30
    e7aa:	d0fa      	beq.n	e7a2 <_strtod_l+0x1f6>
    e7ac:	0021      	movs	r1, r4
    e7ae:	3931      	subs	r1, #49	; 0x31
    e7b0:	2200      	movs	r2, #0
    e7b2:	2908      	cmp	r1, #8
    e7b4:	d900      	bls.n	e7b8 <_strtod_l+0x20c>
    e7b6:	e732      	b.n	e61e <_strtod_l+0x72>
    e7b8:	991d      	ldr	r1, [sp, #116]	; 0x74
    e7ba:	0022      	movs	r2, r4
    e7bc:	1c4c      	adds	r4, r1, #1
    e7be:	941d      	str	r4, [sp, #116]	; 0x74
    e7c0:	46a4      	mov	ip, r4
    e7c2:	784c      	ldrb	r4, [r1, #1]
    e7c4:	000f      	movs	r7, r1
    e7c6:	910e      	str	r1, [sp, #56]	; 0x38
    e7c8:	0021      	movs	r1, r4
    e7ca:	3930      	subs	r1, #48	; 0x30
    e7cc:	3a30      	subs	r2, #48	; 0x30
    e7ce:	2909      	cmp	r1, #9
    e7d0:	d815      	bhi.n	e7fe <_strtod_l+0x252>
    e7d2:	0039      	movs	r1, r7
    e7d4:	469c      	mov	ip, r3
    e7d6:	0027      	movs	r7, r4
    e7d8:	3102      	adds	r1, #2
    e7da:	0094      	lsls	r4, r2, #2
    e7dc:	18a4      	adds	r4, r4, r2
    e7de:	911d      	str	r1, [sp, #116]	; 0x74
    e7e0:	0064      	lsls	r4, r4, #1
    e7e2:	19e4      	adds	r4, r4, r7
    e7e4:	780f      	ldrb	r7, [r1, #0]
    e7e6:	0022      	movs	r2, r4
    e7e8:	003c      	movs	r4, r7
    e7ea:	3c30      	subs	r4, #48	; 0x30
    e7ec:	000b      	movs	r3, r1
    e7ee:	3a30      	subs	r2, #48	; 0x30
    e7f0:	3101      	adds	r1, #1
    e7f2:	2c09      	cmp	r4, #9
    e7f4:	d9f1      	bls.n	e7da <_strtod_l+0x22e>
    e7f6:	0019      	movs	r1, r3
    e7f8:	003c      	movs	r4, r7
    e7fa:	4663      	mov	r3, ip
    e7fc:	468c      	mov	ip, r1
    e7fe:	4661      	mov	r1, ip
    e800:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    e802:	1bc9      	subs	r1, r1, r7
    e804:	2908      	cmp	r1, #8
    e806:	dd00      	ble.n	e80a <_strtod_l+0x25e>
    e808:	e256      	b.n	ecb8 <_strtod_l+0x70c>
    e80a:	493c      	ldr	r1, [pc, #240]	; (e8fc <_strtod_l+0x350>)
    e80c:	428a      	cmp	r2, r1
    e80e:	dd00      	ble.n	e812 <_strtod_l+0x266>
    e810:	e252      	b.n	ecb8 <_strtod_l+0x70c>
    e812:	990d      	ldr	r1, [sp, #52]	; 0x34
    e814:	2900      	cmp	r1, #0
    e816:	d100      	bne.n	e81a <_strtod_l+0x26e>
    e818:	e701      	b.n	e61e <_strtod_l+0x72>
    e81a:	4252      	negs	r2, r2
    e81c:	e6ff      	b.n	e61e <_strtod_l+0x72>
    e81e:	2400      	movs	r4, #0
    e820:	2500      	movs	r5, #0
    e822:	465b      	mov	r3, fp
    e824:	2b00      	cmp	r3, #0
    e826:	d100      	bne.n	e82a <_strtod_l+0x27e>
    e828:	e70d      	b.n	e646 <_strtod_l+0x9a>
    e82a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    e82c:	e709      	b.n	e642 <_strtod_l+0x96>
    e82e:	1a13      	subs	r3, r2, r0
    e830:	9308      	str	r3, [sp, #32]
    e832:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    e834:	2b00      	cmp	r3, #0
    e836:	d100      	bne.n	e83a <_strtod_l+0x28e>
    e838:	950a      	str	r5, [sp, #40]	; 0x28
    e83a:	002c      	movs	r4, r5
    e83c:	2d10      	cmp	r5, #16
    e83e:	dd00      	ble.n	e842 <_strtod_l+0x296>
    e840:	2410      	movs	r4, #16
    e842:	4640      	mov	r0, r8
    e844:	f7f7 ff4a 	bl	66dc <__aeabi_ui2d>
    e848:	9004      	str	r0, [sp, #16]
    e84a:	9105      	str	r1, [sp, #20]
    e84c:	2c09      	cmp	r4, #9
    e84e:	dd15      	ble.n	e87c <_strtod_l+0x2d0>
    e850:	0022      	movs	r2, r4
    e852:	4b2b      	ldr	r3, [pc, #172]	; (e900 <_strtod_l+0x354>)
    e854:	3a09      	subs	r2, #9
    e856:	00d2      	lsls	r2, r2, #3
    e858:	189b      	adds	r3, r3, r2
    e85a:	681a      	ldr	r2, [r3, #0]
    e85c:	685b      	ldr	r3, [r3, #4]
    e85e:	f7f7 f931 	bl	5ac4 <__aeabi_dmul>
    e862:	0006      	movs	r6, r0
    e864:	4648      	mov	r0, r9
    e866:	000f      	movs	r7, r1
    e868:	f7f7 ff38 	bl	66dc <__aeabi_ui2d>
    e86c:	0002      	movs	r2, r0
    e86e:	000b      	movs	r3, r1
    e870:	0030      	movs	r0, r6
    e872:	0039      	movs	r1, r7
    e874:	f002 f85c 	bl	10930 <__aeabi_dadd>
    e878:	9004      	str	r0, [sp, #16]
    e87a:	9105      	str	r1, [sp, #20]
    e87c:	2d0f      	cmp	r5, #15
    e87e:	dc45      	bgt.n	e90c <_strtod_l+0x360>
    e880:	9b08      	ldr	r3, [sp, #32]
    e882:	2b00      	cmp	r3, #0
    e884:	d031      	beq.n	e8ea <_strtod_l+0x33e>
    e886:	9b08      	ldr	r3, [sp, #32]
    e888:	2b00      	cmp	r3, #0
    e88a:	dc01      	bgt.n	e890 <_strtod_l+0x2e4>
    e88c:	f000 fc69 	bl	f162 <_strtod_l+0xbb6>
    e890:	2b16      	cmp	r3, #22
    e892:	dd01      	ble.n	e898 <_strtod_l+0x2ec>
    e894:	f000 fc15 	bl	f0c2 <_strtod_l+0xb16>
    e898:	4919      	ldr	r1, [pc, #100]	; (e900 <_strtod_l+0x354>)
    e89a:	00da      	lsls	r2, r3, #3
    e89c:	1889      	adds	r1, r1, r2
    e89e:	6808      	ldr	r0, [r1, #0]
    e8a0:	6849      	ldr	r1, [r1, #4]
    e8a2:	9a04      	ldr	r2, [sp, #16]
    e8a4:	9b05      	ldr	r3, [sp, #20]
    e8a6:	f7f7 f90d 	bl	5ac4 <__aeabi_dmul>
    e8aa:	0004      	movs	r4, r0
    e8ac:	000d      	movs	r5, r1
    e8ae:	e7b8      	b.n	e822 <_strtod_l+0x276>
    e8b0:	2c4e      	cmp	r4, #78	; 0x4e
    e8b2:	d009      	beq.n	e8c8 <_strtod_l+0x31c>
    e8b4:	dc01      	bgt.n	e8ba <_strtod_l+0x30e>
    e8b6:	f000 fc2b 	bl	f110 <_strtod_l+0xb64>
    e8ba:	2c69      	cmp	r4, #105	; 0x69
    e8bc:	d101      	bne.n	e8c2 <_strtod_l+0x316>
    e8be:	f000 fc2b 	bl	f118 <_strtod_l+0xb6c>
    e8c2:	2c6e      	cmp	r4, #110	; 0x6e
    e8c4:	d000      	beq.n	e8c8 <_strtod_l+0x31c>
    e8c6:	e6b5      	b.n	e634 <_strtod_l+0x88>
    e8c8:	490e      	ldr	r1, [pc, #56]	; (e904 <_strtod_l+0x358>)
    e8ca:	a81d      	add	r0, sp, #116	; 0x74
    e8cc:	f001 fec0 	bl	10650 <__match>
    e8d0:	2800      	cmp	r0, #0
    e8d2:	d100      	bne.n	e8d6 <_strtod_l+0x32a>
    e8d4:	e6ae      	b.n	e634 <_strtod_l+0x88>
    e8d6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    e8d8:	781b      	ldrb	r3, [r3, #0]
    e8da:	2b28      	cmp	r3, #40	; 0x28
    e8dc:	d101      	bne.n	e8e2 <_strtod_l+0x336>
    e8de:	f000 fd0d 	bl	f2fc <_strtod_l+0xd50>
    e8e2:	4b09      	ldr	r3, [pc, #36]	; (e908 <_strtod_l+0x35c>)
    e8e4:	9305      	str	r3, [sp, #20]
    e8e6:	2300      	movs	r3, #0
    e8e8:	9304      	str	r3, [sp, #16]
    e8ea:	9c04      	ldr	r4, [sp, #16]
    e8ec:	9d05      	ldr	r5, [sp, #20]
    e8ee:	e798      	b.n	e822 <_strtod_l+0x276>
    e8f0:	2201      	movs	r2, #1
    e8f2:	9208      	str	r2, [sp, #32]
    e8f4:	e68c      	b.n	e610 <_strtod_l+0x64>
    e8f6:	46c0      	nop			; (mov r8, r8)
    e8f8:	0001413c 	.word	0x0001413c
    e8fc:	00004e1f 	.word	0x00004e1f
    e900:	00014068 	.word	0x00014068
    e904:	00014218 	.word	0x00014218
    e908:	fff80000 	.word	0xfff80000
    e90c:	9b08      	ldr	r3, [sp, #32]
    e90e:	1b2c      	subs	r4, r5, r4
    e910:	469c      	mov	ip, r3
    e912:	4464      	add	r4, ip
    e914:	2c00      	cmp	r4, #0
    e916:	dc00      	bgt.n	e91a <_strtod_l+0x36e>
    e918:	e31f      	b.n	ef5a <_strtod_l+0x9ae>
    e91a:	230f      	movs	r3, #15
    e91c:	4023      	ands	r3, r4
    e91e:	d00a      	beq.n	e936 <_strtod_l+0x38a>
    e920:	49d9      	ldr	r1, [pc, #868]	; (ec88 <_strtod_l+0x6dc>)
    e922:	00db      	lsls	r3, r3, #3
    e924:	18c9      	adds	r1, r1, r3
    e926:	6808      	ldr	r0, [r1, #0]
    e928:	6849      	ldr	r1, [r1, #4]
    e92a:	9a04      	ldr	r2, [sp, #16]
    e92c:	9b05      	ldr	r3, [sp, #20]
    e92e:	f7f7 f8c9 	bl	5ac4 <__aeabi_dmul>
    e932:	9004      	str	r0, [sp, #16]
    e934:	9105      	str	r1, [sp, #20]
    e936:	230f      	movs	r3, #15
    e938:	439c      	bics	r4, r3
    e93a:	d000      	beq.n	e93e <_strtod_l+0x392>
    e93c:	e15d      	b.n	ebfa <_strtod_l+0x64e>
    e93e:	2300      	movs	r3, #0
    e940:	930c      	str	r3, [sp, #48]	; 0x30
    e942:	4643      	mov	r3, r8
    e944:	9300      	str	r3, [sp, #0]
    e946:	002b      	movs	r3, r5
    e948:	9d09      	ldr	r5, [sp, #36]	; 0x24
    e94a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    e94c:	4651      	mov	r1, sl
    e94e:	0028      	movs	r0, r5
    e950:	f7fe ffc0 	bl	d8d4 <__s2b>
    e954:	2800      	cmp	r0, #0
    e956:	d100      	bne.n	e95a <_strtod_l+0x3ae>
    e958:	e255      	b.n	ee06 <_strtod_l+0x85a>
    e95a:	9908      	ldr	r1, [sp, #32]
    e95c:	424b      	negs	r3, r1
    e95e:	17ca      	asrs	r2, r1, #31
    e960:	401a      	ands	r2, r3
    e962:	920e      	str	r2, [sp, #56]	; 0x38
    e964:	43ca      	mvns	r2, r1
    e966:	000b      	movs	r3, r1
    e968:	17d2      	asrs	r2, r2, #31
    e96a:	4013      	ands	r3, r2
    e96c:	930d      	str	r3, [sp, #52]	; 0x34
    e96e:	2300      	movs	r3, #0
    e970:	4699      	mov	r9, r3
    e972:	4698      	mov	r8, r3
    e974:	465b      	mov	r3, fp
    e976:	4683      	mov	fp, r0
    e978:	9315      	str	r3, [sp, #84]	; 0x54
    e97a:	e0f4      	b.n	eb66 <_strtod_l+0x5ba>
    e97c:	1ac9      	subs	r1, r1, r3
    e97e:	1a52      	subs	r2, r2, r1
    e980:	291f      	cmp	r1, #31
    e982:	dd00      	ble.n	e986 <_strtod_l+0x3da>
    e984:	e1b5      	b.n	ecf2 <_strtod_l+0x746>
    e986:	2301      	movs	r3, #1
    e988:	408b      	lsls	r3, r1
    e98a:	9310      	str	r3, [sp, #64]	; 0x40
    e98c:	2300      	movs	r3, #0
    e98e:	9311      	str	r3, [sp, #68]	; 0x44
    e990:	18bb      	adds	r3, r7, r2
    e992:	469a      	mov	sl, r3
    e994:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    e996:	18b6      	adds	r6, r6, r2
    e998:	469c      	mov	ip, r3
    e99a:	003b      	movs	r3, r7
    e99c:	4466      	add	r6, ip
    e99e:	4557      	cmp	r7, sl
    e9a0:	dd00      	ble.n	e9a4 <_strtod_l+0x3f8>
    e9a2:	4653      	mov	r3, sl
    e9a4:	42b3      	cmp	r3, r6
    e9a6:	dd00      	ble.n	e9aa <_strtod_l+0x3fe>
    e9a8:	0033      	movs	r3, r6
    e9aa:	2b00      	cmp	r3, #0
    e9ac:	dd04      	ble.n	e9b8 <_strtod_l+0x40c>
    e9ae:	4652      	mov	r2, sl
    e9b0:	1ad2      	subs	r2, r2, r3
    e9b2:	4692      	mov	sl, r2
    e9b4:	1af6      	subs	r6, r6, r3
    e9b6:	1aff      	subs	r7, r7, r3
    e9b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    e9ba:	2b00      	cmp	r3, #0
    e9bc:	d015      	beq.n	e9ea <_strtod_l+0x43e>
    e9be:	4641      	mov	r1, r8
    e9c0:	001a      	movs	r2, r3
    e9c2:	0028      	movs	r0, r5
    e9c4:	f7ff f8cc 	bl	db60 <__pow5mult>
    e9c8:	4680      	mov	r8, r0
    e9ca:	2800      	cmp	r0, #0
    e9cc:	d100      	bne.n	e9d0 <_strtod_l+0x424>
    e9ce:	e252      	b.n	ee76 <_strtod_l+0x8ca>
    e9d0:	0001      	movs	r1, r0
    e9d2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    e9d4:	0028      	movs	r0, r5
    e9d6:	f7ff f819 	bl	da0c <__multiply>
    e9da:	1e04      	subs	r4, r0, #0
    e9dc:	d100      	bne.n	e9e0 <_strtod_l+0x434>
    e9de:	e24a      	b.n	ee76 <_strtod_l+0x8ca>
    e9e0:	991e      	ldr	r1, [sp, #120]	; 0x78
    e9e2:	0028      	movs	r0, r5
    e9e4:	f7fe ff26 	bl	d834 <_Bfree>
    e9e8:	941e      	str	r4, [sp, #120]	; 0x78
    e9ea:	4653      	mov	r3, sl
    e9ec:	2b00      	cmp	r3, #0
    e9ee:	dd08      	ble.n	ea02 <_strtod_l+0x456>
    e9f0:	4652      	mov	r2, sl
    e9f2:	991e      	ldr	r1, [sp, #120]	; 0x78
    e9f4:	0028      	movs	r0, r5
    e9f6:	f7ff f913 	bl	dc20 <__lshift>
    e9fa:	901e      	str	r0, [sp, #120]	; 0x78
    e9fc:	2800      	cmp	r0, #0
    e9fe:	d100      	bne.n	ea02 <_strtod_l+0x456>
    ea00:	e3c2      	b.n	f188 <_strtod_l+0xbdc>
    ea02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ea04:	2b00      	cmp	r3, #0
    ea06:	d008      	beq.n	ea1a <_strtod_l+0x46e>
    ea08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    ea0a:	9908      	ldr	r1, [sp, #32]
    ea0c:	0028      	movs	r0, r5
    ea0e:	f7ff f8a7 	bl	db60 <__pow5mult>
    ea12:	9008      	str	r0, [sp, #32]
    ea14:	2800      	cmp	r0, #0
    ea16:	d100      	bne.n	ea1a <_strtod_l+0x46e>
    ea18:	e22d      	b.n	ee76 <_strtod_l+0x8ca>
    ea1a:	2e00      	cmp	r6, #0
    ea1c:	dd08      	ble.n	ea30 <_strtod_l+0x484>
    ea1e:	0032      	movs	r2, r6
    ea20:	9908      	ldr	r1, [sp, #32]
    ea22:	0028      	movs	r0, r5
    ea24:	f7ff f8fc 	bl	dc20 <__lshift>
    ea28:	9008      	str	r0, [sp, #32]
    ea2a:	2800      	cmp	r0, #0
    ea2c:	d100      	bne.n	ea30 <_strtod_l+0x484>
    ea2e:	e222      	b.n	ee76 <_strtod_l+0x8ca>
    ea30:	2f00      	cmp	r7, #0
    ea32:	dd08      	ble.n	ea46 <_strtod_l+0x49a>
    ea34:	4641      	mov	r1, r8
    ea36:	003a      	movs	r2, r7
    ea38:	0028      	movs	r0, r5
    ea3a:	f7ff f8f1 	bl	dc20 <__lshift>
    ea3e:	4680      	mov	r8, r0
    ea40:	2800      	cmp	r0, #0
    ea42:	d100      	bne.n	ea46 <_strtod_l+0x49a>
    ea44:	e217      	b.n	ee76 <_strtod_l+0x8ca>
    ea46:	9a08      	ldr	r2, [sp, #32]
    ea48:	991e      	ldr	r1, [sp, #120]	; 0x78
    ea4a:	0028      	movs	r0, r5
    ea4c:	f7ff f962 	bl	dd14 <__mdiff>
    ea50:	4681      	mov	r9, r0
    ea52:	2800      	cmp	r0, #0
    ea54:	d100      	bne.n	ea58 <_strtod_l+0x4ac>
    ea56:	e20e      	b.n	ee76 <_strtod_l+0x8ca>
    ea58:	68c3      	ldr	r3, [r0, #12]
    ea5a:	4641      	mov	r1, r8
    ea5c:	930f      	str	r3, [sp, #60]	; 0x3c
    ea5e:	2300      	movs	r3, #0
    ea60:	60c3      	str	r3, [r0, #12]
    ea62:	f7ff f93d 	bl	dce0 <__mcmp>
    ea66:	2800      	cmp	r0, #0
    ea68:	da01      	bge.n	ea6e <_strtod_l+0x4c2>
    ea6a:	f000 fbd8 	bl	f21e <_strtod_l+0xc72>
    ea6e:	d100      	bne.n	ea72 <_strtod_l+0x4c6>
    ea70:	e38e      	b.n	f190 <_strtod_l+0xbe4>
    ea72:	4641      	mov	r1, r8
    ea74:	4648      	mov	r0, r9
    ea76:	f7ff fad9 	bl	e02c <__ratio>
    ea7a:	2380      	movs	r3, #128	; 0x80
    ea7c:	2200      	movs	r2, #0
    ea7e:	05db      	lsls	r3, r3, #23
    ea80:	0006      	movs	r6, r0
    ea82:	000f      	movs	r7, r1
    ea84:	f7f7 ff5e 	bl	6944 <__aeabi_dcmple>
    ea88:	2800      	cmp	r0, #0
    ea8a:	d100      	bne.n	ea8e <_strtod_l+0x4e2>
    ea8c:	e116      	b.n	ecbc <_strtod_l+0x710>
    ea8e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ea90:	2b00      	cmp	r3, #0
    ea92:	d100      	bne.n	ea96 <_strtod_l+0x4ea>
    ea94:	e135      	b.n	ed02 <_strtod_l+0x756>
    ea96:	9b05      	ldr	r3, [sp, #20]
    ea98:	2600      	movs	r6, #0
    ea9a:	9310      	str	r3, [sp, #64]	; 0x40
    ea9c:	2300      	movs	r3, #0
    ea9e:	9311      	str	r3, [sp, #68]	; 0x44
    eaa0:	4b7a      	ldr	r3, [pc, #488]	; (ec8c <_strtod_l+0x6e0>)
    eaa2:	4f7a      	ldr	r7, [pc, #488]	; (ec8c <_strtod_l+0x6e0>)
    eaa4:	9314      	str	r3, [sp, #80]	; 0x50
    eaa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    eaa8:	4a79      	ldr	r2, [pc, #484]	; (ec90 <_strtod_l+0x6e4>)
    eaaa:	4013      	ands	r3, r2
    eaac:	469a      	mov	sl, r3
    eaae:	4b79      	ldr	r3, [pc, #484]	; (ec94 <_strtod_l+0x6e8>)
    eab0:	459a      	cmp	sl, r3
    eab2:	d100      	bne.n	eab6 <_strtod_l+0x50a>
    eab4:	e1af      	b.n	ee16 <_strtod_l+0x86a>
    eab6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    eab8:	2b00      	cmp	r3, #0
    eaba:	d02a      	beq.n	eb12 <_strtod_l+0x566>
    eabc:	23d4      	movs	r3, #212	; 0xd4
    eabe:	04db      	lsls	r3, r3, #19
    eac0:	459a      	cmp	sl, r3
    eac2:	d826      	bhi.n	eb12 <_strtod_l+0x566>
    eac4:	9c14      	ldr	r4, [sp, #80]	; 0x50
    eac6:	4a74      	ldr	r2, [pc, #464]	; (ec98 <_strtod_l+0x6ec>)
    eac8:	4b74      	ldr	r3, [pc, #464]	; (ec9c <_strtod_l+0x6f0>)
    eaca:	9811      	ldr	r0, [sp, #68]	; 0x44
    eacc:	0021      	movs	r1, r4
    eace:	f7f7 ff39 	bl	6944 <__aeabi_dcmple>
    ead2:	2800      	cmp	r0, #0
    ead4:	d018      	beq.n	eb08 <_strtod_l+0x55c>
    ead6:	9811      	ldr	r0, [sp, #68]	; 0x44
    ead8:	0021      	movs	r1, r4
    eada:	f7f6 f80d 	bl	4af8 <__aeabi_d2uiz>
    eade:	2800      	cmp	r0, #0
    eae0:	d100      	bne.n	eae4 <_strtod_l+0x538>
    eae2:	e310      	b.n	f106 <_strtod_l+0xb5a>
    eae4:	f7f7 fdfa 	bl	66dc <__aeabi_ui2d>
    eae8:	9011      	str	r0, [sp, #68]	; 0x44
    eaea:	9114      	str	r1, [sp, #80]	; 0x50
    eaec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    eaee:	2b00      	cmp	r3, #0
    eaf0:	d000      	beq.n	eaf4 <_strtod_l+0x548>
    eaf2:	e303      	b.n	f0fc <_strtod_l+0xb50>
    eaf4:	2280      	movs	r2, #128	; 0x80
    eaf6:	0612      	lsls	r2, r2, #24
    eaf8:	4694      	mov	ip, r2
    eafa:	9b11      	ldr	r3, [sp, #68]	; 0x44
    eafc:	9318      	str	r3, [sp, #96]	; 0x60
    eafe:	9b14      	ldr	r3, [sp, #80]	; 0x50
    eb00:	4463      	add	r3, ip
    eb02:	9319      	str	r3, [sp, #100]	; 0x64
    eb04:	9e18      	ldr	r6, [sp, #96]	; 0x60
    eb06:	9f19      	ldr	r7, [sp, #100]	; 0x64
    eb08:	23d6      	movs	r3, #214	; 0xd6
    eb0a:	4652      	mov	r2, sl
    eb0c:	04db      	lsls	r3, r3, #19
    eb0e:	18fb      	adds	r3, r7, r3
    eb10:	1a9f      	subs	r7, r3, r2
    eb12:	980a      	ldr	r0, [sp, #40]	; 0x28
    eb14:	990b      	ldr	r1, [sp, #44]	; 0x2c
    eb16:	f7ff f999 	bl	de4c <__ulp>
    eb1a:	0002      	movs	r2, r0
    eb1c:	000b      	movs	r3, r1
    eb1e:	0030      	movs	r0, r6
    eb20:	0039      	movs	r1, r7
    eb22:	f7f6 ffcf 	bl	5ac4 <__aeabi_dmul>
    eb26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    eb28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    eb2a:	f001 ff01 	bl	10930 <__aeabi_dadd>
    eb2e:	0003      	movs	r3, r0
    eb30:	000c      	movs	r4, r1
    eb32:	9304      	str	r3, [sp, #16]
    eb34:	9405      	str	r4, [sp, #20]
    eb36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    eb38:	2b00      	cmp	r3, #0
    eb3a:	d104      	bne.n	eb46 <_strtod_l+0x59a>
    eb3c:	4b54      	ldr	r3, [pc, #336]	; (ec90 <_strtod_l+0x6e4>)
    eb3e:	4023      	ands	r3, r4
    eb40:	459a      	cmp	sl, r3
    eb42:	d100      	bne.n	eb46 <_strtod_l+0x59a>
    eb44:	e1bd      	b.n	eec2 <_strtod_l+0x916>
    eb46:	991e      	ldr	r1, [sp, #120]	; 0x78
    eb48:	0028      	movs	r0, r5
    eb4a:	f7fe fe73 	bl	d834 <_Bfree>
    eb4e:	9908      	ldr	r1, [sp, #32]
    eb50:	0028      	movs	r0, r5
    eb52:	f7fe fe6f 	bl	d834 <_Bfree>
    eb56:	4641      	mov	r1, r8
    eb58:	0028      	movs	r0, r5
    eb5a:	f7fe fe6b 	bl	d834 <_Bfree>
    eb5e:	4649      	mov	r1, r9
    eb60:	0028      	movs	r0, r5
    eb62:	f7fe fe67 	bl	d834 <_Bfree>
    eb66:	465b      	mov	r3, fp
    eb68:	0028      	movs	r0, r5
    eb6a:	6859      	ldr	r1, [r3, #4]
    eb6c:	f7fe fe3a 	bl	d7e4 <_Balloc>
    eb70:	9008      	str	r0, [sp, #32]
    eb72:	2800      	cmp	r0, #0
    eb74:	d100      	bne.n	eb78 <_strtod_l+0x5cc>
    eb76:	e17e      	b.n	ee76 <_strtod_l+0x8ca>
    eb78:	465a      	mov	r2, fp
    eb7a:	4659      	mov	r1, fp
    eb7c:	6912      	ldr	r2, [r2, #16]
    eb7e:	310c      	adds	r1, #12
    eb80:	3202      	adds	r2, #2
    eb82:	0092      	lsls	r2, r2, #2
    eb84:	300c      	adds	r0, #12
    eb86:	f7f8 f88f 	bl	6ca8 <memcpy>
    eb8a:	9b04      	ldr	r3, [sp, #16]
    eb8c:	9c05      	ldr	r4, [sp, #20]
    eb8e:	0019      	movs	r1, r3
    eb90:	0022      	movs	r2, r4
    eb92:	ab20      	add	r3, sp, #128	; 0x80
    eb94:	9301      	str	r3, [sp, #4]
    eb96:	ab1f      	add	r3, sp, #124	; 0x7c
    eb98:	910a      	str	r1, [sp, #40]	; 0x28
    eb9a:	920b      	str	r2, [sp, #44]	; 0x2c
    eb9c:	9300      	str	r3, [sp, #0]
    eb9e:	000a      	movs	r2, r1
    eba0:	0023      	movs	r3, r4
    eba2:	0028      	movs	r0, r5
    eba4:	f7ff f9e4 	bl	df70 <__d2b>
    eba8:	901e      	str	r0, [sp, #120]	; 0x78
    ebaa:	2800      	cmp	r0, #0
    ebac:	d100      	bne.n	ebb0 <_strtod_l+0x604>
    ebae:	e2eb      	b.n	f188 <_strtod_l+0xbdc>
    ebb0:	2101      	movs	r1, #1
    ebb2:	0028      	movs	r0, r5
    ebb4:	f7fe ff20 	bl	d9f8 <__i2b>
    ebb8:	4680      	mov	r8, r0
    ebba:	2800      	cmp	r0, #0
    ebbc:	d100      	bne.n	ebc0 <_strtod_l+0x614>
    ebbe:	e15a      	b.n	ee76 <_strtod_l+0x8ca>
    ebc0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    ebc2:	2b00      	cmp	r3, #0
    ebc4:	da00      	bge.n	ebc8 <_strtod_l+0x61c>
    ebc6:	e090      	b.n	ecea <_strtod_l+0x73e>
    ebc8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    ebca:	9e0d      	ldr	r6, [sp, #52]	; 0x34
    ebcc:	18d7      	adds	r7, r2, r3
    ebce:	990c      	ldr	r1, [sp, #48]	; 0x30
    ebd0:	9a20      	ldr	r2, [sp, #128]	; 0x80
    ebd2:	1a5b      	subs	r3, r3, r1
    ebd4:	2136      	movs	r1, #54	; 0x36
    ebd6:	189b      	adds	r3, r3, r2
    ebd8:	1a8a      	subs	r2, r1, r2
    ebda:	4931      	ldr	r1, [pc, #196]	; (eca0 <_strtod_l+0x6f4>)
    ebdc:	3b01      	subs	r3, #1
    ebde:	428b      	cmp	r3, r1
    ebe0:	da00      	bge.n	ebe4 <_strtod_l+0x638>
    ebe2:	e6cb      	b.n	e97c <_strtod_l+0x3d0>
    ebe4:	2300      	movs	r3, #0
    ebe6:	9311      	str	r3, [sp, #68]	; 0x44
    ebe8:	3301      	adds	r3, #1
    ebea:	9310      	str	r3, [sp, #64]	; 0x40
    ebec:	e6d0      	b.n	e990 <_strtod_l+0x3e4>
    ebee:	2201      	movs	r2, #1
    ebf0:	920d      	str	r2, [sp, #52]	; 0x34
    ebf2:	1cb2      	adds	r2, r6, #2
    ebf4:	921d      	str	r2, [sp, #116]	; 0x74
    ebf6:	78b4      	ldrb	r4, [r6, #2]
    ebf8:	e5ca      	b.n	e790 <_strtod_l+0x1e4>
    ebfa:	239a      	movs	r3, #154	; 0x9a
    ebfc:	005b      	lsls	r3, r3, #1
    ebfe:	429c      	cmp	r4, r3
    ec00:	dd00      	ble.n	ec04 <_strtod_l+0x658>
    ec02:	e100      	b.n	ee06 <_strtod_l+0x85a>
    ec04:	1124      	asrs	r4, r4, #4
    ec06:	2c01      	cmp	r4, #1
    ec08:	dc00      	bgt.n	ec0c <_strtod_l+0x660>
    ec0a:	e361      	b.n	f2d0 <_strtod_l+0xd24>
    ec0c:	9804      	ldr	r0, [sp, #16]
    ec0e:	9905      	ldr	r1, [sp, #20]
    ec10:	2201      	movs	r2, #1
    ec12:	4b24      	ldr	r3, [pc, #144]	; (eca4 <_strtod_l+0x6f8>)
    ec14:	2700      	movs	r7, #0
    ec16:	930c      	str	r3, [sp, #48]	; 0x30
    ec18:	001e      	movs	r6, r3
    ec1a:	4691      	mov	r9, r2
    ec1c:	2300      	movs	r3, #0
    ec1e:	464a      	mov	r2, r9
    ec20:	4222      	tst	r2, r4
    ec22:	d004      	beq.n	ec2e <_strtod_l+0x682>
    ec24:	6832      	ldr	r2, [r6, #0]
    ec26:	6873      	ldr	r3, [r6, #4]
    ec28:	f7f6 ff4c 	bl	5ac4 <__aeabi_dmul>
    ec2c:	2301      	movs	r3, #1
    ec2e:	3701      	adds	r7, #1
    ec30:	1064      	asrs	r4, r4, #1
    ec32:	3608      	adds	r6, #8
    ec34:	2c01      	cmp	r4, #1
    ec36:	d1f2      	bne.n	ec1e <_strtod_l+0x672>
    ec38:	2b00      	cmp	r3, #0
    ec3a:	d001      	beq.n	ec40 <_strtod_l+0x694>
    ec3c:	f000 fbf4 	bl	f428 <_strtod_l+0xe7c>
    ec40:	4a19      	ldr	r2, [pc, #100]	; (eca8 <_strtod_l+0x6fc>)
    ec42:	9b05      	ldr	r3, [sp, #20]
    ec44:	4694      	mov	ip, r2
    ec46:	4463      	add	r3, ip
    ec48:	9305      	str	r3, [sp, #20]
    ec4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ec4c:	00ff      	lsls	r7, r7, #3
    ec4e:	469c      	mov	ip, r3
    ec50:	9a04      	ldr	r2, [sp, #16]
    ec52:	9b05      	ldr	r3, [sp, #20]
    ec54:	4467      	add	r7, ip
    ec56:	6838      	ldr	r0, [r7, #0]
    ec58:	6879      	ldr	r1, [r7, #4]
    ec5a:	f7f6 ff33 	bl	5ac4 <__aeabi_dmul>
    ec5e:	000a      	movs	r2, r1
    ec60:	0003      	movs	r3, r0
    ec62:	0014      	movs	r4, r2
    ec64:	9304      	str	r3, [sp, #16]
    ec66:	9405      	str	r4, [sp, #20]
    ec68:	4b09      	ldr	r3, [pc, #36]	; (ec90 <_strtod_l+0x6e4>)
    ec6a:	4013      	ands	r3, r2
    ec6c:	4a0f      	ldr	r2, [pc, #60]	; (ecac <_strtod_l+0x700>)
    ec6e:	4293      	cmp	r3, r2
    ec70:	d900      	bls.n	ec74 <_strtod_l+0x6c8>
    ec72:	e0c8      	b.n	ee06 <_strtod_l+0x85a>
    ec74:	4a0e      	ldr	r2, [pc, #56]	; (ecb0 <_strtod_l+0x704>)
    ec76:	4293      	cmp	r3, r2
    ec78:	d800      	bhi.n	ec7c <_strtod_l+0x6d0>
    ec7a:	e308      	b.n	f28e <_strtod_l+0xce2>
    ec7c:	4b0d      	ldr	r3, [pc, #52]	; (ecb4 <_strtod_l+0x708>)
    ec7e:	9305      	str	r3, [sp, #20]
    ec80:	2301      	movs	r3, #1
    ec82:	425b      	negs	r3, r3
    ec84:	9304      	str	r3, [sp, #16]
    ec86:	e65a      	b.n	e93e <_strtod_l+0x392>
    ec88:	00014068 	.word	0x00014068
    ec8c:	3ff00000 	.word	0x3ff00000
    ec90:	7ff00000 	.word	0x7ff00000
    ec94:	7fe00000 	.word	0x7fe00000
    ec98:	ffc00000 	.word	0xffc00000
    ec9c:	41dfffff 	.word	0x41dfffff
    eca0:	fffffc02 	.word	0xfffffc02
    eca4:	00014040 	.word	0x00014040
    eca8:	fcb00000 	.word	0xfcb00000
    ecac:	7ca00000 	.word	0x7ca00000
    ecb0:	7c900000 	.word	0x7c900000
    ecb4:	7fefffff 	.word	0x7fefffff
    ecb8:	4ace      	ldr	r2, [pc, #824]	; (eff4 <_strtod_l+0xa48>)
    ecba:	e5aa      	b.n	e812 <_strtod_l+0x266>
    ecbc:	4bce      	ldr	r3, [pc, #824]	; (eff8 <_strtod_l+0xa4c>)
    ecbe:	2200      	movs	r2, #0
    ecc0:	0030      	movs	r0, r6
    ecc2:	0039      	movs	r1, r7
    ecc4:	f7f6 fefe 	bl	5ac4 <__aeabi_dmul>
    ecc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ecca:	9011      	str	r0, [sp, #68]	; 0x44
    eccc:	9114      	str	r1, [sp, #80]	; 0x50
    ecce:	2b00      	cmp	r3, #0
    ecd0:	d139      	bne.n	ed46 <_strtod_l+0x79a>
    ecd2:	2280      	movs	r2, #128	; 0x80
    ecd4:	0612      	lsls	r2, r2, #24
    ecd6:	000b      	movs	r3, r1
    ecd8:	4694      	mov	ip, r2
    ecda:	4463      	add	r3, ip
    ecdc:	9012      	str	r0, [sp, #72]	; 0x48
    ecde:	9313      	str	r3, [sp, #76]	; 0x4c
    ece0:	9b05      	ldr	r3, [sp, #20]
    ece2:	9e12      	ldr	r6, [sp, #72]	; 0x48
    ece4:	9f13      	ldr	r7, [sp, #76]	; 0x4c
    ece6:	9310      	str	r3, [sp, #64]	; 0x40
    ece8:	e6dd      	b.n	eaa6 <_strtod_l+0x4fa>
    ecea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    ecec:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    ecee:	1ad6      	subs	r6, r2, r3
    ecf0:	e76d      	b.n	ebce <_strtod_l+0x622>
    ecf2:	49c2      	ldr	r1, [pc, #776]	; (effc <_strtod_l+0xa50>)
    ecf4:	1acb      	subs	r3, r1, r3
    ecf6:	2101      	movs	r1, #1
    ecf8:	4099      	lsls	r1, r3
    ecfa:	2301      	movs	r3, #1
    ecfc:	9111      	str	r1, [sp, #68]	; 0x44
    ecfe:	9310      	str	r3, [sp, #64]	; 0x40
    ed00:	e646      	b.n	e990 <_strtod_l+0x3e4>
    ed02:	9904      	ldr	r1, [sp, #16]
    ed04:	9a05      	ldr	r2, [sp, #20]
    ed06:	2900      	cmp	r1, #0
    ed08:	d140      	bne.n	ed8c <_strtod_l+0x7e0>
    ed0a:	9210      	str	r2, [sp, #64]	; 0x40
    ed0c:	0313      	lsls	r3, r2, #12
    ed0e:	d142      	bne.n	ed96 <_strtod_l+0x7ea>
    ed10:	2200      	movs	r2, #0
    ed12:	4bbb      	ldr	r3, [pc, #748]	; (f000 <_strtod_l+0xa54>)
    ed14:	0030      	movs	r0, r6
    ed16:	0039      	movs	r1, r7
    ed18:	f7f7 fe0a 	bl	6930 <__aeabi_dcmplt>
    ed1c:	2800      	cmp	r0, #0
    ed1e:	d000      	beq.n	ed22 <_strtod_l+0x776>
    ed20:	e2bf      	b.n	f2a2 <_strtod_l+0xcf6>
    ed22:	2200      	movs	r2, #0
    ed24:	4bb4      	ldr	r3, [pc, #720]	; (eff8 <_strtod_l+0xa4c>)
    ed26:	0030      	movs	r0, r6
    ed28:	0039      	movs	r1, r7
    ed2a:	f7f6 fecb 	bl	5ac4 <__aeabi_dmul>
    ed2e:	2280      	movs	r2, #128	; 0x80
    ed30:	0612      	lsls	r2, r2, #24
    ed32:	000b      	movs	r3, r1
    ed34:	4694      	mov	ip, r2
    ed36:	4463      	add	r3, ip
    ed38:	9011      	str	r0, [sp, #68]	; 0x44
    ed3a:	9114      	str	r1, [sp, #80]	; 0x50
    ed3c:	901a      	str	r0, [sp, #104]	; 0x68
    ed3e:	931b      	str	r3, [sp, #108]	; 0x6c
    ed40:	9e1a      	ldr	r6, [sp, #104]	; 0x68
    ed42:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
    ed44:	e6af      	b.n	eaa6 <_strtod_l+0x4fa>
    ed46:	9a11      	ldr	r2, [sp, #68]	; 0x44
    ed48:	9b14      	ldr	r3, [sp, #80]	; 0x50
    ed4a:	9212      	str	r2, [sp, #72]	; 0x48
    ed4c:	9313      	str	r3, [sp, #76]	; 0x4c
    ed4e:	e7c7      	b.n	ece0 <_strtod_l+0x734>
    ed50:	9b07      	ldr	r3, [sp, #28]
    ed52:	9502      	str	r5, [sp, #8]
    ed54:	9301      	str	r3, [sp, #4]
    ed56:	ab1e      	add	r3, sp, #120	; 0x78
    ed58:	9300      	str	r3, [sp, #0]
    ed5a:	4aaa      	ldr	r2, [pc, #680]	; (f004 <_strtod_l+0xa58>)
    ed5c:	ab1f      	add	r3, sp, #124	; 0x7c
    ed5e:	a91d      	add	r1, sp, #116	; 0x74
    ed60:	9809      	ldr	r0, [sp, #36]	; 0x24
    ed62:	f001 f9e1 	bl	10128 <__gethex>
    ed66:	2407      	movs	r4, #7
    ed68:	0005      	movs	r5, r0
    ed6a:	4004      	ands	r4, r0
    ed6c:	d100      	bne.n	ed70 <_strtod_l+0x7c4>
    ed6e:	e556      	b.n	e81e <_strtod_l+0x272>
    ed70:	2c06      	cmp	r4, #6
    ed72:	d000      	beq.n	ed76 <_strtod_l+0x7ca>
    ed74:	e15e      	b.n	f034 <_strtod_l+0xa88>
    ed76:	4653      	mov	r3, sl
    ed78:	3301      	adds	r3, #1
    ed7a:	931d      	str	r3, [sp, #116]	; 0x74
    ed7c:	2300      	movs	r3, #0
    ed7e:	2400      	movs	r4, #0
    ed80:	2500      	movs	r5, #0
    ed82:	9307      	str	r3, [sp, #28]
    ed84:	e54d      	b.n	e822 <_strtod_l+0x276>
    ed86:	961d      	str	r6, [sp, #116]	; 0x74
    ed88:	2200      	movs	r2, #0
    ed8a:	e448      	b.n	e61e <_strtod_l+0x72>
    ed8c:	2901      	cmp	r1, #1
    ed8e:	d100      	bne.n	ed92 <_strtod_l+0x7e6>
    ed90:	e1d8      	b.n	f144 <_strtod_l+0xb98>
    ed92:	9b05      	ldr	r3, [sp, #20]
    ed94:	9310      	str	r3, [sp, #64]	; 0x40
    ed96:	2300      	movs	r3, #0
    ed98:	9311      	str	r3, [sp, #68]	; 0x44
    ed9a:	4b99      	ldr	r3, [pc, #612]	; (f000 <_strtod_l+0xa54>)
    ed9c:	2600      	movs	r6, #0
    ed9e:	4f9a      	ldr	r7, [pc, #616]	; (f008 <_strtod_l+0xa5c>)
    eda0:	9314      	str	r3, [sp, #80]	; 0x50
    eda2:	e680      	b.n	eaa6 <_strtod_l+0x4fa>
    eda4:	6839      	ldr	r1, [r7, #0]
    eda6:	9a08      	ldr	r2, [sp, #32]
    eda8:	4650      	mov	r0, sl
    edaa:	f001 fd4d 	bl	10848 <strncmp>
    edae:	900a      	str	r0, [sp, #40]	; 0x28
    edb0:	2800      	cmp	r0, #0
    edb2:	d009      	beq.n	edc8 <_strtod_l+0x81c>
    edb4:	2300      	movs	r3, #0
    edb6:	2200      	movs	r2, #0
    edb8:	930a      	str	r3, [sp, #40]	; 0x28
    edba:	4699      	mov	r9, r3
    edbc:	4698      	mov	r8, r3
    edbe:	2000      	movs	r0, #0
    edc0:	2500      	movs	r5, #0
    edc2:	9208      	str	r2, [sp, #32]
    edc4:	f7ff fc24 	bl	e610 <_strtod_l+0x64>
    edc8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    edca:	9b08      	ldr	r3, [sp, #32]
    edcc:	4694      	mov	ip, r2
    edce:	4463      	add	r3, ip
    edd0:	931d      	str	r3, [sp, #116]	; 0x74
    edd2:	781c      	ldrb	r4, [r3, #0]
    edd4:	0019      	movs	r1, r3
    edd6:	1c5a      	adds	r2, r3, #1
    edd8:	2300      	movs	r3, #0
    edda:	2c30      	cmp	r4, #48	; 0x30
    eddc:	d105      	bne.n	edea <_strtod_l+0x83e>
    edde:	921d      	str	r2, [sp, #116]	; 0x74
    ede0:	7814      	ldrb	r4, [r2, #0]
    ede2:	1a53      	subs	r3, r2, r1
    ede4:	3201      	adds	r2, #1
    ede6:	2c30      	cmp	r4, #48	; 0x30
    ede8:	d0f9      	beq.n	edde <_strtod_l+0x832>
    edea:	0022      	movs	r2, r4
    edec:	3a31      	subs	r2, #49	; 0x31
    edee:	2a08      	cmp	r2, #8
    edf0:	d800      	bhi.n	edf4 <_strtod_l+0x848>
    edf2:	e153      	b.n	f09c <_strtod_l+0xaf0>
    edf4:	2200      	movs	r2, #0
    edf6:	4691      	mov	r9, r2
    edf8:	4690      	mov	r8, r2
    edfa:	3201      	adds	r2, #1
    edfc:	2000      	movs	r0, #0
    edfe:	2500      	movs	r5, #0
    ee00:	9208      	str	r2, [sp, #32]
    ee02:	f7ff fc05 	bl	e610 <_strtod_l+0x64>
    ee06:	2322      	movs	r3, #34	; 0x22
    ee08:	9a09      	ldr	r2, [sp, #36]	; 0x24
    ee0a:	6013      	str	r3, [r2, #0]
    ee0c:	4b7f      	ldr	r3, [pc, #508]	; (f00c <_strtod_l+0xa60>)
    ee0e:	9305      	str	r3, [sp, #20]
    ee10:	2300      	movs	r3, #0
    ee12:	9304      	str	r3, [sp, #16]
    ee14:	e569      	b.n	e8ea <_strtod_l+0x33e>
    ee16:	497e      	ldr	r1, [pc, #504]	; (f010 <_strtod_l+0xa64>)
    ee18:	9a10      	ldr	r2, [sp, #64]	; 0x40
    ee1a:	468c      	mov	ip, r1
    ee1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    ee1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    ee20:	4462      	add	r2, ip
    ee22:	9205      	str	r2, [sp, #20]
    ee24:	960a      	str	r6, [sp, #40]	; 0x28
    ee26:	970b      	str	r7, [sp, #44]	; 0x2c
    ee28:	9e04      	ldr	r6, [sp, #16]
    ee2a:	9f05      	ldr	r7, [sp, #20]
    ee2c:	0030      	movs	r0, r6
    ee2e:	0039      	movs	r1, r7
    ee30:	9316      	str	r3, [sp, #88]	; 0x58
    ee32:	9417      	str	r4, [sp, #92]	; 0x5c
    ee34:	f7ff f80a 	bl	de4c <__ulp>
    ee38:	0002      	movs	r2, r0
    ee3a:	000b      	movs	r3, r1
    ee3c:	980a      	ldr	r0, [sp, #40]	; 0x28
    ee3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ee40:	f7f6 fe40 	bl	5ac4 <__aeabi_dmul>
    ee44:	0032      	movs	r2, r6
    ee46:	003b      	movs	r3, r7
    ee48:	f001 fd72 	bl	10930 <__aeabi_dadd>
    ee4c:	4b6f      	ldr	r3, [pc, #444]	; (f00c <_strtod_l+0xa60>)
    ee4e:	4a71      	ldr	r2, [pc, #452]	; (f014 <_strtod_l+0xa68>)
    ee50:	9004      	str	r0, [sp, #16]
    ee52:	9105      	str	r1, [sp, #20]
    ee54:	400b      	ands	r3, r1
    ee56:	4293      	cmp	r3, r2
    ee58:	d800      	bhi.n	ee5c <_strtod_l+0x8b0>
    ee5a:	e0c6      	b.n	efea <_strtod_l+0xa3e>
    ee5c:	4b6e      	ldr	r3, [pc, #440]	; (f018 <_strtod_l+0xa6c>)
    ee5e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    ee60:	429a      	cmp	r2, r3
    ee62:	d005      	beq.n	ee70 <_strtod_l+0x8c4>
    ee64:	4b6c      	ldr	r3, [pc, #432]	; (f018 <_strtod_l+0xa6c>)
    ee66:	9305      	str	r3, [sp, #20]
    ee68:	2301      	movs	r3, #1
    ee6a:	425b      	negs	r3, r3
    ee6c:	9304      	str	r3, [sp, #16]
    ee6e:	e66a      	b.n	eb46 <_strtod_l+0x59a>
    ee70:	9b16      	ldr	r3, [sp, #88]	; 0x58
    ee72:	3301      	adds	r3, #1
    ee74:	d1f6      	bne.n	ee64 <_strtod_l+0x8b8>
    ee76:	9b15      	ldr	r3, [sp, #84]	; 0x54
    ee78:	46da      	mov	sl, fp
    ee7a:	469b      	mov	fp, r3
    ee7c:	981e      	ldr	r0, [sp, #120]	; 0x78
    ee7e:	2322      	movs	r3, #34	; 0x22
    ee80:	9a09      	ldr	r2, [sp, #36]	; 0x24
    ee82:	6013      	str	r3, [r2, #0]
    ee84:	4b61      	ldr	r3, [pc, #388]	; (f00c <_strtod_l+0xa60>)
    ee86:	9305      	str	r3, [sp, #20]
    ee88:	2300      	movs	r3, #0
    ee8a:	9304      	str	r3, [sp, #16]
    ee8c:	9c04      	ldr	r4, [sp, #16]
    ee8e:	9d05      	ldr	r5, [sp, #20]
    ee90:	9e09      	ldr	r6, [sp, #36]	; 0x24
    ee92:	0001      	movs	r1, r0
    ee94:	0030      	movs	r0, r6
    ee96:	f7fe fccd 	bl	d834 <_Bfree>
    ee9a:	9908      	ldr	r1, [sp, #32]
    ee9c:	0030      	movs	r0, r6
    ee9e:	f7fe fcc9 	bl	d834 <_Bfree>
    eea2:	4641      	mov	r1, r8
    eea4:	0030      	movs	r0, r6
    eea6:	f7fe fcc5 	bl	d834 <_Bfree>
    eeaa:	4651      	mov	r1, sl
    eeac:	0030      	movs	r0, r6
    eeae:	f7fe fcc1 	bl	d834 <_Bfree>
    eeb2:	4649      	mov	r1, r9
    eeb4:	0030      	movs	r0, r6
    eeb6:	f7fe fcbd 	bl	d834 <_Bfree>
    eeba:	e4b2      	b.n	e822 <_strtod_l+0x276>
    eebc:	2200      	movs	r2, #0
    eebe:	920d      	str	r2, [sp, #52]	; 0x34
    eec0:	e697      	b.n	ebf2 <_strtod_l+0x646>
    eec2:	9f11      	ldr	r7, [sp, #68]	; 0x44
    eec4:	9e14      	ldr	r6, [sp, #80]	; 0x50
    eec6:	0038      	movs	r0, r7
    eec8:	0031      	movs	r1, r6
    eeca:	f7f7 fb91 	bl	65f0 <__aeabi_d2iz>
    eece:	f7f7 fbc3 	bl	6658 <__aeabi_i2d>
    eed2:	000b      	movs	r3, r1
    eed4:	0002      	movs	r2, r0
    eed6:	0031      	movs	r1, r6
    eed8:	0038      	movs	r0, r7
    eeda:	f7f7 f873 	bl	5fc4 <__aeabi_dsub>
    eede:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    eee0:	0006      	movs	r6, r0
    eee2:	000f      	movs	r7, r1
    eee4:	2b00      	cmp	r3, #0
    eee6:	d112      	bne.n	ef0e <_strtod_l+0x962>
    eee8:	9b04      	ldr	r3, [sp, #16]
    eeea:	2b00      	cmp	r3, #0
    eeec:	d10f      	bne.n	ef0e <_strtod_l+0x962>
    eeee:	0324      	lsls	r4, r4, #12
    eef0:	d10d      	bne.n	ef0e <_strtod_l+0x962>
    eef2:	4a4a      	ldr	r2, [pc, #296]	; (f01c <_strtod_l+0xa70>)
    eef4:	4b4a      	ldr	r3, [pc, #296]	; (f020 <_strtod_l+0xa74>)
    eef6:	f7f7 fd1b 	bl	6930 <__aeabi_dcmplt>
    eefa:	2800      	cmp	r0, #0
    eefc:	d100      	bne.n	ef00 <_strtod_l+0x954>
    eefe:	e622      	b.n	eb46 <_strtod_l+0x59a>
    ef00:	9b15      	ldr	r3, [sp, #84]	; 0x54
    ef02:	46da      	mov	sl, fp
    ef04:	9c04      	ldr	r4, [sp, #16]
    ef06:	9d05      	ldr	r5, [sp, #20]
    ef08:	469b      	mov	fp, r3
    ef0a:	981e      	ldr	r0, [sp, #120]	; 0x78
    ef0c:	e7c0      	b.n	ee90 <_strtod_l+0x8e4>
    ef0e:	4a43      	ldr	r2, [pc, #268]	; (f01c <_strtod_l+0xa70>)
    ef10:	4b44      	ldr	r3, [pc, #272]	; (f024 <_strtod_l+0xa78>)
    ef12:	0030      	movs	r0, r6
    ef14:	0039      	movs	r1, r7
    ef16:	f7f7 fd0b 	bl	6930 <__aeabi_dcmplt>
    ef1a:	2800      	cmp	r0, #0
    ef1c:	d1f0      	bne.n	ef00 <_strtod_l+0x954>
    ef1e:	4a42      	ldr	r2, [pc, #264]	; (f028 <_strtod_l+0xa7c>)
    ef20:	4b35      	ldr	r3, [pc, #212]	; (eff8 <_strtod_l+0xa4c>)
    ef22:	0030      	movs	r0, r6
    ef24:	0039      	movs	r1, r7
    ef26:	f7f7 fd17 	bl	6958 <__aeabi_dcmpgt>
    ef2a:	2800      	cmp	r0, #0
    ef2c:	d100      	bne.n	ef30 <_strtod_l+0x984>
    ef2e:	e60a      	b.n	eb46 <_strtod_l+0x59a>
    ef30:	e7e6      	b.n	ef00 <_strtod_l+0x954>
    ef32:	46a0      	mov	r8, r4
    ef34:	991d      	ldr	r1, [sp, #116]	; 0x74
    ef36:	3502      	adds	r5, #2
    ef38:	2f08      	cmp	r7, #8
    ef3a:	dc00      	bgt.n	ef3e <_strtod_l+0x992>
    ef3c:	e0b9      	b.n	f0b2 <_strtod_l+0xb06>
    ef3e:	2300      	movs	r3, #0
    ef40:	2d10      	cmp	r5, #16
    ef42:	dc05      	bgt.n	ef50 <_strtod_l+0x9a4>
    ef44:	464c      	mov	r4, r9
    ef46:	00a4      	lsls	r4, r4, #2
    ef48:	444c      	add	r4, r9
    ef4a:	4691      	mov	r9, r2
    ef4c:	0064      	lsls	r4, r4, #1
    ef4e:	44a1      	add	r9, r4
    ef50:	1c4a      	adds	r2, r1, #1
    ef52:	921d      	str	r2, [sp, #116]	; 0x74
    ef54:	784c      	ldrb	r4, [r1, #1]
    ef56:	f7ff fbe3 	bl	e720 <_strtod_l+0x174>
    ef5a:	2c00      	cmp	r4, #0
    ef5c:	d100      	bne.n	ef60 <_strtod_l+0x9b4>
    ef5e:	e4ee      	b.n	e93e <_strtod_l+0x392>
    ef60:	230f      	movs	r3, #15
    ef62:	4264      	negs	r4, r4
    ef64:	4023      	ands	r3, r4
    ef66:	d00a      	beq.n	ef7e <_strtod_l+0x9d2>
    ef68:	9804      	ldr	r0, [sp, #16]
    ef6a:	9905      	ldr	r1, [sp, #20]
    ef6c:	4a2f      	ldr	r2, [pc, #188]	; (f02c <_strtod_l+0xa80>)
    ef6e:	00db      	lsls	r3, r3, #3
    ef70:	18d3      	adds	r3, r2, r3
    ef72:	681a      	ldr	r2, [r3, #0]
    ef74:	685b      	ldr	r3, [r3, #4]
    ef76:	f7f6 fa71 	bl	545c <__aeabi_ddiv>
    ef7a:	9004      	str	r0, [sp, #16]
    ef7c:	9105      	str	r1, [sp, #20]
    ef7e:	1124      	asrs	r4, r4, #4
    ef80:	d100      	bne.n	ef84 <_strtod_l+0x9d8>
    ef82:	e4dc      	b.n	e93e <_strtod_l+0x392>
    ef84:	2c1f      	cmp	r4, #31
    ef86:	dc29      	bgt.n	efdc <_strtod_l+0xa30>
    ef88:	2310      	movs	r3, #16
    ef8a:	4023      	ands	r3, r4
    ef8c:	930c      	str	r3, [sp, #48]	; 0x30
    ef8e:	d100      	bne.n	ef92 <_strtod_l+0x9e6>
    ef90:	e1c5      	b.n	f31e <_strtod_l+0xd72>
    ef92:	236a      	movs	r3, #106	; 0x6a
    ef94:	930c      	str	r3, [sp, #48]	; 0x30
    ef96:	2c00      	cmp	r4, #0
    ef98:	dc00      	bgt.n	ef9c <_strtod_l+0x9f0>
    ef9a:	e1c4      	b.n	f326 <_strtod_l+0xd7a>
    ef9c:	9804      	ldr	r0, [sp, #16]
    ef9e:	9905      	ldr	r1, [sp, #20]
    efa0:	2300      	movs	r3, #0
    efa2:	2701      	movs	r7, #1
    efa4:	4e22      	ldr	r6, [pc, #136]	; (f030 <_strtod_l+0xa84>)
    efa6:	4227      	tst	r7, r4
    efa8:	d004      	beq.n	efb4 <_strtod_l+0xa08>
    efaa:	6832      	ldr	r2, [r6, #0]
    efac:	6873      	ldr	r3, [r6, #4]
    efae:	f7f6 fd89 	bl	5ac4 <__aeabi_dmul>
    efb2:	2301      	movs	r3, #1
    efb4:	1064      	asrs	r4, r4, #1
    efb6:	3608      	adds	r6, #8
    efb8:	2c00      	cmp	r4, #0
    efba:	d1f4      	bne.n	efa6 <_strtod_l+0x9fa>
    efbc:	2b00      	cmp	r3, #0
    efbe:	d000      	beq.n	efc2 <_strtod_l+0xa16>
    efc0:	e221      	b.n	f406 <_strtod_l+0xe5a>
    efc2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    efc4:	2b00      	cmp	r3, #0
    efc6:	d000      	beq.n	efca <_strtod_l+0xa1e>
    efc8:	e1ad      	b.n	f326 <_strtod_l+0xd7a>
    efca:	9804      	ldr	r0, [sp, #16]
    efcc:	9905      	ldr	r1, [sp, #20]
    efce:	2200      	movs	r2, #0
    efd0:	2300      	movs	r3, #0
    efd2:	f7f7 fca7 	bl	6924 <__aeabi_dcmpeq>
    efd6:	2800      	cmp	r0, #0
    efd8:	d100      	bne.n	efdc <_strtod_l+0xa30>
    efda:	e4b2      	b.n	e942 <_strtod_l+0x396>
    efdc:	2322      	movs	r3, #34	; 0x22
    efde:	9a09      	ldr	r2, [sp, #36]	; 0x24
    efe0:	2400      	movs	r4, #0
    efe2:	6013      	str	r3, [r2, #0]
    efe4:	2500      	movs	r5, #0
    efe6:	f7ff fc1c 	bl	e822 <_strtod_l+0x276>
    efea:	23d4      	movs	r3, #212	; 0xd4
    efec:	049b      	lsls	r3, r3, #18
    efee:	18cc      	adds	r4, r1, r3
    eff0:	9405      	str	r4, [sp, #20]
    eff2:	e5a0      	b.n	eb36 <_strtod_l+0x58a>
    eff4:	00004e1f 	.word	0x00004e1f
    eff8:	3fe00000 	.word	0x3fe00000
    effc:	fffffbe2 	.word	0xfffffbe2
    f000:	3ff00000 	.word	0x3ff00000
    f004:	0001421c 	.word	0x0001421c
    f008:	bff00000 	.word	0xbff00000
    f00c:	7ff00000 	.word	0x7ff00000
    f010:	fcb00000 	.word	0xfcb00000
    f014:	7c9fffff 	.word	0x7c9fffff
    f018:	7fefffff 	.word	0x7fefffff
    f01c:	94a03595 	.word	0x94a03595
    f020:	3fcfffff 	.word	0x3fcfffff
    f024:	3fdfffff 	.word	0x3fdfffff
    f028:	35afe535 	.word	0x35afe535
    f02c:	00014068 	.word	0x00014068
    f030:	00014248 	.word	0x00014248
    f034:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    f036:	2a00      	cmp	r2, #0
    f038:	d007      	beq.n	f04a <_strtod_l+0xa9e>
    f03a:	2135      	movs	r1, #53	; 0x35
    f03c:	a820      	add	r0, sp, #128	; 0x80
    f03e:	f7ff f82f 	bl	e0a0 <__copybits>
    f042:	991e      	ldr	r1, [sp, #120]	; 0x78
    f044:	9809      	ldr	r0, [sp, #36]	; 0x24
    f046:	f7fe fbf5 	bl	d834 <_Bfree>
    f04a:	2c05      	cmp	r4, #5
    f04c:	d808      	bhi.n	f060 <_strtod_l+0xab4>
    f04e:	4bd1      	ldr	r3, [pc, #836]	; (f394 <_strtod_l+0xde8>)
    f050:	00a4      	lsls	r4, r4, #2
    f052:	591b      	ldr	r3, [r3, r4]
    f054:	469f      	mov	pc, r3
    f056:	4bd0      	ldr	r3, [pc, #832]	; (f398 <_strtod_l+0xdec>)
    f058:	9305      	str	r3, [sp, #20]
    f05a:	2301      	movs	r3, #1
    f05c:	425b      	negs	r3, r3
    f05e:	9304      	str	r3, [sp, #16]
    f060:	072b      	lsls	r3, r5, #28
    f062:	d400      	bmi.n	f066 <_strtod_l+0xaba>
    f064:	e441      	b.n	e8ea <_strtod_l+0x33e>
    f066:	2380      	movs	r3, #128	; 0x80
    f068:	9a05      	ldr	r2, [sp, #20]
    f06a:	061b      	lsls	r3, r3, #24
    f06c:	431a      	orrs	r2, r3
    f06e:	9205      	str	r2, [sp, #20]
    f070:	e43b      	b.n	e8ea <_strtod_l+0x33e>
    f072:	4bca      	ldr	r3, [pc, #808]	; (f39c <_strtod_l+0xdf0>)
    f074:	9305      	str	r3, [sp, #20]
    f076:	e7f3      	b.n	f060 <_strtod_l+0xab4>
    f078:	9b20      	ldr	r3, [sp, #128]	; 0x80
    f07a:	9304      	str	r3, [sp, #16]
    f07c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    f07e:	9305      	str	r3, [sp, #20]
    f080:	e7ee      	b.n	f060 <_strtod_l+0xab4>
    f082:	49c7      	ldr	r1, [pc, #796]	; (f3a0 <_strtod_l+0xdf4>)
    f084:	9b20      	ldr	r3, [sp, #128]	; 0x80
    f086:	468c      	mov	ip, r1
    f088:	9304      	str	r3, [sp, #16]
    f08a:	4ac6      	ldr	r2, [pc, #792]	; (f3a4 <_strtod_l+0xdf8>)
    f08c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    f08e:	401a      	ands	r2, r3
    f090:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    f092:	4463      	add	r3, ip
    f094:	051b      	lsls	r3, r3, #20
    f096:	431a      	orrs	r2, r3
    f098:	9205      	str	r2, [sp, #20]
    f09a:	e7e1      	b.n	f060 <_strtod_l+0xab4>
    f09c:	2230      	movs	r2, #48	; 0x30
    f09e:	1c58      	adds	r0, r3, #1
    f0a0:	2300      	movs	r3, #0
    f0a2:	991d      	ldr	r1, [sp, #116]	; 0x74
    f0a4:	4252      	negs	r2, r2
    f0a6:	4694      	mov	ip, r2
    f0a8:	468a      	mov	sl, r1
    f0aa:	4698      	mov	r8, r3
    f0ac:	2501      	movs	r5, #1
    f0ae:	4699      	mov	r9, r3
    f0b0:	44a4      	add	ip, r4
    f0b2:	4643      	mov	r3, r8
    f0b4:	009c      	lsls	r4, r3, #2
    f0b6:	4444      	add	r4, r8
    f0b8:	0064      	lsls	r4, r4, #1
    f0ba:	4464      	add	r4, ip
    f0bc:	46a0      	mov	r8, r4
    f0be:	2300      	movs	r3, #0
    f0c0:	e746      	b.n	ef50 <_strtod_l+0x9a4>
    f0c2:	2325      	movs	r3, #37	; 0x25
    f0c4:	9e08      	ldr	r6, [sp, #32]
    f0c6:	1b5b      	subs	r3, r3, r5
    f0c8:	429e      	cmp	r6, r3
    f0ca:	dd01      	ble.n	f0d0 <_strtod_l+0xb24>
    f0cc:	f7ff fc1e 	bl	e90c <_strtod_l+0x360>
    f0d0:	230f      	movs	r3, #15
    f0d2:	4cb5      	ldr	r4, [pc, #724]	; (f3a8 <_strtod_l+0xdfc>)
    f0d4:	1b5d      	subs	r5, r3, r5
    f0d6:	00e9      	lsls	r1, r5, #3
    f0d8:	1b75      	subs	r5, r6, r5
    f0da:	1861      	adds	r1, r4, r1
    f0dc:	00ed      	lsls	r5, r5, #3
    f0de:	1964      	adds	r4, r4, r5
    f0e0:	9a04      	ldr	r2, [sp, #16]
    f0e2:	9b05      	ldr	r3, [sp, #20]
    f0e4:	6808      	ldr	r0, [r1, #0]
    f0e6:	6849      	ldr	r1, [r1, #4]
    f0e8:	f7f6 fcec 	bl	5ac4 <__aeabi_dmul>
    f0ec:	6822      	ldr	r2, [r4, #0]
    f0ee:	6863      	ldr	r3, [r4, #4]
    f0f0:	f7f6 fce8 	bl	5ac4 <__aeabi_dmul>
    f0f4:	0004      	movs	r4, r0
    f0f6:	000d      	movs	r5, r1
    f0f8:	f7ff fb93 	bl	e822 <_strtod_l+0x276>
    f0fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
    f0fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
    f100:	9218      	str	r2, [sp, #96]	; 0x60
    f102:	9319      	str	r3, [sp, #100]	; 0x64
    f104:	e4fe      	b.n	eb04 <_strtod_l+0x558>
    f106:	2300      	movs	r3, #0
    f108:	9311      	str	r3, [sp, #68]	; 0x44
    f10a:	4ba8      	ldr	r3, [pc, #672]	; (f3ac <_strtod_l+0xe00>)
    f10c:	9314      	str	r3, [sp, #80]	; 0x50
    f10e:	e4ed      	b.n	eaec <_strtod_l+0x540>
    f110:	2c49      	cmp	r4, #73	; 0x49
    f112:	d001      	beq.n	f118 <_strtod_l+0xb6c>
    f114:	f7ff fa8e 	bl	e634 <_strtod_l+0x88>
    f118:	49a5      	ldr	r1, [pc, #660]	; (f3b0 <_strtod_l+0xe04>)
    f11a:	a81d      	add	r0, sp, #116	; 0x74
    f11c:	f001 fa98 	bl	10650 <__match>
    f120:	2800      	cmp	r0, #0
    f122:	d101      	bne.n	f128 <_strtod_l+0xb7c>
    f124:	f7ff fa86 	bl	e634 <_strtod_l+0x88>
    f128:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    f12a:	49a2      	ldr	r1, [pc, #648]	; (f3b4 <_strtod_l+0xe08>)
    f12c:	3b01      	subs	r3, #1
    f12e:	a81d      	add	r0, sp, #116	; 0x74
    f130:	931d      	str	r3, [sp, #116]	; 0x74
    f132:	f001 fa8d 	bl	10650 <__match>
    f136:	2800      	cmp	r0, #0
    f138:	d000      	beq.n	f13c <_strtod_l+0xb90>
    f13a:	e667      	b.n	ee0c <_strtod_l+0x860>
    f13c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    f13e:	3301      	adds	r3, #1
    f140:	931d      	str	r3, [sp, #116]	; 0x74
    f142:	e663      	b.n	ee0c <_strtod_l+0x860>
    f144:	9b05      	ldr	r3, [sp, #20]
    f146:	9310      	str	r3, [sp, #64]	; 0x40
    f148:	2b00      	cmp	r3, #0
    f14a:	d000      	beq.n	f14e <_strtod_l+0xba2>
    f14c:	e623      	b.n	ed96 <_strtod_l+0x7ea>
    f14e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    f150:	46da      	mov	sl, fp
    f152:	469b      	mov	fp, r3
    f154:	2322      	movs	r3, #34	; 0x22
    f156:	9a09      	ldr	r2, [sp, #36]	; 0x24
    f158:	981e      	ldr	r0, [sp, #120]	; 0x78
    f15a:	6013      	str	r3, [r2, #0]
    f15c:	2400      	movs	r4, #0
    f15e:	2500      	movs	r5, #0
    f160:	e696      	b.n	ee90 <_strtod_l+0x8e4>
    f162:	9a08      	ldr	r2, [sp, #32]
    f164:	0013      	movs	r3, r2
    f166:	3316      	adds	r3, #22
    f168:	da01      	bge.n	f16e <_strtod_l+0xbc2>
    f16a:	f7ff fbcf 	bl	e90c <_strtod_l+0x360>
    f16e:	00d0      	lsls	r0, r2, #3
    f170:	4a8d      	ldr	r2, [pc, #564]	; (f3a8 <_strtod_l+0xdfc>)
    f172:	1a12      	subs	r2, r2, r0
    f174:	6853      	ldr	r3, [r2, #4]
    f176:	6812      	ldr	r2, [r2, #0]
    f178:	9804      	ldr	r0, [sp, #16]
    f17a:	9905      	ldr	r1, [sp, #20]
    f17c:	f7f6 f96e 	bl	545c <__aeabi_ddiv>
    f180:	0004      	movs	r4, r0
    f182:	000d      	movs	r5, r1
    f184:	f7ff fb4d 	bl	e822 <_strtod_l+0x276>
    f188:	9b15      	ldr	r3, [sp, #84]	; 0x54
    f18a:	46da      	mov	sl, fp
    f18c:	469b      	mov	fp, r3
    f18e:	e676      	b.n	ee7e <_strtod_l+0x8d2>
    f190:	9b15      	ldr	r3, [sp, #84]	; 0x54
    f192:	46da      	mov	sl, fp
    f194:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    f196:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    f198:	469b      	mov	fp, r3
    f19a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    f19c:	2b00      	cmp	r3, #0
    f19e:	d100      	bne.n	f1a2 <_strtod_l+0xbf6>
    f1a0:	e08d      	b.n	f2be <_strtod_l+0xd12>
    f1a2:	9804      	ldr	r0, [sp, #16]
    f1a4:	9905      	ldr	r1, [sp, #20]
    f1a6:	030b      	lsls	r3, r1, #12
    f1a8:	000a      	movs	r2, r1
    f1aa:	4983      	ldr	r1, [pc, #524]	; (f3b8 <_strtod_l+0xe0c>)
    f1ac:	0b1b      	lsrs	r3, r3, #12
    f1ae:	428b      	cmp	r3, r1
    f1b0:	d100      	bne.n	f1b4 <_strtod_l+0xc08>
    f1b2:	e0cc      	b.n	f34e <_strtod_l+0xda2>
    f1b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    f1b6:	2b00      	cmp	r3, #0
    f1b8:	d100      	bne.n	f1bc <_strtod_l+0xc10>
    f1ba:	e07b      	b.n	f2b4 <_strtod_l+0xd08>
    f1bc:	9a05      	ldr	r2, [sp, #20]
    f1be:	4213      	tst	r3, r2
    f1c0:	d010      	beq.n	f1e4 <_strtod_l+0xc38>
    f1c2:	9804      	ldr	r0, [sp, #16]
    f1c4:	9905      	ldr	r1, [sp, #20]
    f1c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    f1c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    f1ca:	2b00      	cmp	r3, #0
    f1cc:	d100      	bne.n	f1d0 <_strtod_l+0xc24>
    f1ce:	e083      	b.n	f2d8 <_strtod_l+0xd2c>
    f1d0:	f7ff f9d4 	bl	e57c <sulp>
    f1d4:	0002      	movs	r2, r0
    f1d6:	000b      	movs	r3, r1
    f1d8:	0020      	movs	r0, r4
    f1da:	0029      	movs	r1, r5
    f1dc:	f001 fba8 	bl	10930 <__aeabi_dadd>
    f1e0:	0004      	movs	r4, r0
    f1e2:	000d      	movs	r5, r1
    f1e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    f1e6:	2b00      	cmp	r3, #0
    f1e8:	d017      	beq.n	f21a <_strtod_l+0xc6e>
    f1ea:	4b74      	ldr	r3, [pc, #464]	; (f3bc <_strtod_l+0xe10>)
    f1ec:	0020      	movs	r0, r4
    f1ee:	9317      	str	r3, [sp, #92]	; 0x5c
    f1f0:	2300      	movs	r3, #0
    f1f2:	9316      	str	r3, [sp, #88]	; 0x58
    f1f4:	9a16      	ldr	r2, [sp, #88]	; 0x58
    f1f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    f1f8:	0029      	movs	r1, r5
    f1fa:	f7f6 fc63 	bl	5ac4 <__aeabi_dmul>
    f1fe:	0002      	movs	r2, r0
    f200:	000b      	movs	r3, r1
    f202:	0004      	movs	r4, r0
    f204:	000d      	movs	r5, r1
    f206:	9204      	str	r2, [sp, #16]
    f208:	9305      	str	r3, [sp, #20]
    f20a:	2900      	cmp	r1, #0
    f20c:	d105      	bne.n	f21a <_strtod_l+0xc6e>
    f20e:	9b04      	ldr	r3, [sp, #16]
    f210:	2b00      	cmp	r3, #0
    f212:	d102      	bne.n	f21a <_strtod_l+0xc6e>
    f214:	2322      	movs	r3, #34	; 0x22
    f216:	9a09      	ldr	r2, [sp, #36]	; 0x24
    f218:	6013      	str	r3, [r2, #0]
    f21a:	981e      	ldr	r0, [sp, #120]	; 0x78
    f21c:	e638      	b.n	ee90 <_strtod_l+0x8e4>
    f21e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    f220:	46da      	mov	sl, fp
    f222:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    f224:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    f226:	469b      	mov	fp, r3
    f228:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    f22a:	2b00      	cmp	r3, #0
    f22c:	d1da      	bne.n	f1e4 <_strtod_l+0xc38>
    f22e:	9904      	ldr	r1, [sp, #16]
    f230:	9a05      	ldr	r2, [sp, #20]
    f232:	2900      	cmp	r1, #0
    f234:	d1d6      	bne.n	f1e4 <_strtod_l+0xc38>
    f236:	0313      	lsls	r3, r2, #12
    f238:	d1d4      	bne.n	f1e4 <_strtod_l+0xc38>
    f23a:	4b58      	ldr	r3, [pc, #352]	; (f39c <_strtod_l+0xdf0>)
    f23c:	4013      	ands	r3, r2
    f23e:	22d6      	movs	r2, #214	; 0xd6
    f240:	04d2      	lsls	r2, r2, #19
    f242:	4293      	cmp	r3, r2
    f244:	d9ce      	bls.n	f1e4 <_strtod_l+0xc38>
    f246:	464b      	mov	r3, r9
    f248:	695b      	ldr	r3, [r3, #20]
    f24a:	2b00      	cmp	r3, #0
    f24c:	d103      	bne.n	f256 <_strtod_l+0xcaa>
    f24e:	464b      	mov	r3, r9
    f250:	691b      	ldr	r3, [r3, #16]
    f252:	2b01      	cmp	r3, #1
    f254:	ddc6      	ble.n	f1e4 <_strtod_l+0xc38>
    f256:	4649      	mov	r1, r9
    f258:	2201      	movs	r2, #1
    f25a:	9809      	ldr	r0, [sp, #36]	; 0x24
    f25c:	f7fe fce0 	bl	dc20 <__lshift>
    f260:	4641      	mov	r1, r8
    f262:	4681      	mov	r9, r0
    f264:	f7fe fd3c 	bl	dce0 <__mcmp>
    f268:	2800      	cmp	r0, #0
    f26a:	ddbb      	ble.n	f1e4 <_strtod_l+0xc38>
    f26c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    f26e:	2b00      	cmp	r3, #0
    f270:	d100      	bne.n	f274 <_strtod_l+0xcc8>
    f272:	e0b2      	b.n	f3da <_strtod_l+0xe2e>
    f274:	9a05      	ldr	r2, [sp, #20]
    f276:	4b49      	ldr	r3, [pc, #292]	; (f39c <_strtod_l+0xdf0>)
    f278:	4013      	ands	r3, r2
    f27a:	22d6      	movs	r2, #214	; 0xd6
    f27c:	04d2      	lsls	r2, r2, #19
    f27e:	4293      	cmp	r3, r2
    f280:	dd00      	ble.n	f284 <_strtod_l+0xcd8>
    f282:	e0aa      	b.n	f3da <_strtod_l+0xe2e>
    f284:	22dc      	movs	r2, #220	; 0xdc
    f286:	0492      	lsls	r2, r2, #18
    f288:	4293      	cmp	r3, r2
    f28a:	dcae      	bgt.n	f1ea <_strtod_l+0xc3e>
    f28c:	e762      	b.n	f154 <_strtod_l+0xba8>
    f28e:	22d4      	movs	r2, #212	; 0xd4
    f290:	0492      	lsls	r2, r2, #18
    f292:	0023      	movs	r3, r4
    f294:	4694      	mov	ip, r2
    f296:	4463      	add	r3, ip
    f298:	9305      	str	r3, [sp, #20]
    f29a:	2300      	movs	r3, #0
    f29c:	930c      	str	r3, [sp, #48]	; 0x30
    f29e:	f7ff fb50 	bl	e942 <_strtod_l+0x396>
    f2a2:	2300      	movs	r3, #0
    f2a4:	4c46      	ldr	r4, [pc, #280]	; (f3c0 <_strtod_l+0xe14>)
    f2a6:	931a      	str	r3, [sp, #104]	; 0x68
    f2a8:	941b      	str	r4, [sp, #108]	; 0x6c
    f2aa:	2300      	movs	r3, #0
    f2ac:	9311      	str	r3, [sp, #68]	; 0x44
    f2ae:	4b45      	ldr	r3, [pc, #276]	; (f3c4 <_strtod_l+0xe18>)
    f2b0:	9314      	str	r3, [sp, #80]	; 0x50
    f2b2:	e545      	b.n	ed40 <_strtod_l+0x794>
    f2b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    f2b6:	9a04      	ldr	r2, [sp, #16]
    f2b8:	4213      	tst	r3, r2
    f2ba:	d093      	beq.n	f1e4 <_strtod_l+0xc38>
    f2bc:	e781      	b.n	f1c2 <_strtod_l+0xc16>
    f2be:	9904      	ldr	r1, [sp, #16]
    f2c0:	9a05      	ldr	r2, [sp, #20]
    f2c2:	0313      	lsls	r3, r2, #12
    f2c4:	d000      	beq.n	f2c8 <_strtod_l+0xd1c>
    f2c6:	e775      	b.n	f1b4 <_strtod_l+0xc08>
    f2c8:	2900      	cmp	r1, #0
    f2ca:	d000      	beq.n	f2ce <_strtod_l+0xd22>
    f2cc:	e772      	b.n	f1b4 <_strtod_l+0xc08>
    f2ce:	e7cd      	b.n	f26c <_strtod_l+0xcc0>
    f2d0:	4b3d      	ldr	r3, [pc, #244]	; (f3c8 <_strtod_l+0xe1c>)
    f2d2:	2700      	movs	r7, #0
    f2d4:	930c      	str	r3, [sp, #48]	; 0x30
    f2d6:	e4b3      	b.n	ec40 <_strtod_l+0x694>
    f2d8:	f7ff f950 	bl	e57c <sulp>
    f2dc:	0002      	movs	r2, r0
    f2de:	000b      	movs	r3, r1
    f2e0:	0020      	movs	r0, r4
    f2e2:	0029      	movs	r1, r5
    f2e4:	f7f6 fe6e 	bl	5fc4 <__aeabi_dsub>
    f2e8:	2200      	movs	r2, #0
    f2ea:	2300      	movs	r3, #0
    f2ec:	0004      	movs	r4, r0
    f2ee:	000d      	movs	r5, r1
    f2f0:	f7f7 fb18 	bl	6924 <__aeabi_dcmpeq>
    f2f4:	2800      	cmp	r0, #0
    f2f6:	d000      	beq.n	f2fa <_strtod_l+0xd4e>
    f2f8:	e72c      	b.n	f154 <_strtod_l+0xba8>
    f2fa:	e773      	b.n	f1e4 <_strtod_l+0xc38>
    f2fc:	aa20      	add	r2, sp, #128	; 0x80
    f2fe:	4933      	ldr	r1, [pc, #204]	; (f3cc <_strtod_l+0xe20>)
    f300:	a81d      	add	r0, sp, #116	; 0x74
    f302:	f001 f9bb 	bl	1067c <__hexnan>
    f306:	2805      	cmp	r0, #5
    f308:	d001      	beq.n	f30e <_strtod_l+0xd62>
    f30a:	f7ff faea 	bl	e8e2 <_strtod_l+0x336>
    f30e:	9b21      	ldr	r3, [sp, #132]	; 0x84
    f310:	4a22      	ldr	r2, [pc, #136]	; (f39c <_strtod_l+0xdf0>)
    f312:	431a      	orrs	r2, r3
    f314:	9b20      	ldr	r3, [sp, #128]	; 0x80
    f316:	9205      	str	r2, [sp, #20]
    f318:	9304      	str	r3, [sp, #16]
    f31a:	f7ff fae6 	bl	e8ea <_strtod_l+0x33e>
    f31e:	2c00      	cmp	r4, #0
    f320:	dd00      	ble.n	f324 <_strtod_l+0xd78>
    f322:	e63b      	b.n	ef9c <_strtod_l+0x9f0>
    f324:	e651      	b.n	efca <_strtod_l+0xa1e>
    f326:	9b04      	ldr	r3, [sp, #16]
    f328:	9c05      	ldr	r4, [sp, #20]
    f32a:	236b      	movs	r3, #107	; 0x6b
    f32c:	0061      	lsls	r1, r4, #1
    f32e:	0d49      	lsrs	r1, r1, #21
    f330:	0022      	movs	r2, r4
    f332:	1a5b      	subs	r3, r3, r1
    f334:	2b00      	cmp	r3, #0
    f336:	dc00      	bgt.n	f33a <_strtod_l+0xd8e>
    f338:	e647      	b.n	efca <_strtod_l+0xa1e>
    f33a:	2b1f      	cmp	r3, #31
    f33c:	dd5c      	ble.n	f3f8 <_strtod_l+0xe4c>
    f33e:	2100      	movs	r1, #0
    f340:	9104      	str	r1, [sp, #16]
    f342:	2b34      	cmp	r3, #52	; 0x34
    f344:	dd62      	ble.n	f40c <_strtod_l+0xe60>
    f346:	23dc      	movs	r3, #220	; 0xdc
    f348:	049b      	lsls	r3, r3, #18
    f34a:	9305      	str	r3, [sp, #20]
    f34c:	e63d      	b.n	efca <_strtod_l+0xa1e>
    f34e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    f350:	9904      	ldr	r1, [sp, #16]
    f352:	2b00      	cmp	r3, #0
    f354:	d03e      	beq.n	f3d4 <_strtod_l+0xe28>
    f356:	20d4      	movs	r0, #212	; 0xd4
    f358:	4b10      	ldr	r3, [pc, #64]	; (f39c <_strtod_l+0xdf0>)
    f35a:	04c0      	lsls	r0, r0, #19
    f35c:	4013      	ands	r3, r2
    f35e:	4283      	cmp	r3, r0
    f360:	d838      	bhi.n	f3d4 <_strtod_l+0xe28>
    f362:	206b      	movs	r0, #107	; 0x6b
    f364:	0d1b      	lsrs	r3, r3, #20
    f366:	1ac0      	subs	r0, r0, r3
    f368:	2301      	movs	r3, #1
    f36a:	425b      	negs	r3, r3
    f36c:	4083      	lsls	r3, r0
    f36e:	428b      	cmp	r3, r1
    f370:	d000      	beq.n	f374 <_strtod_l+0xdc8>
    f372:	e71f      	b.n	f1b4 <_strtod_l+0xc08>
    f374:	4916      	ldr	r1, [pc, #88]	; (f3d0 <_strtod_l+0xe24>)
    f376:	428a      	cmp	r2, r1
    f378:	d05a      	beq.n	f430 <_strtod_l+0xe84>
    f37a:	2180      	movs	r1, #128	; 0x80
    f37c:	4b07      	ldr	r3, [pc, #28]	; (f39c <_strtod_l+0xdf0>)
    f37e:	0349      	lsls	r1, r1, #13
    f380:	401a      	ands	r2, r3
    f382:	0013      	movs	r3, r2
    f384:	468c      	mov	ip, r1
    f386:	4463      	add	r3, ip
    f388:	9305      	str	r3, [sp, #20]
    f38a:	2300      	movs	r3, #0
    f38c:	9304      	str	r3, [sp, #16]
    f38e:	9c04      	ldr	r4, [sp, #16]
    f390:	9d05      	ldr	r5, [sp, #20]
    f392:	e727      	b.n	f1e4 <_strtod_l+0xc38>
    f394:	000141f4 	.word	0x000141f4
    f398:	7fffffff 	.word	0x7fffffff
    f39c:	7ff00000 	.word	0x7ff00000
    f3a0:	00000433 	.word	0x00000433
    f3a4:	ffefffff 	.word	0xffefffff
    f3a8:	00014068 	.word	0x00014068
    f3ac:	3ff00000 	.word	0x3ff00000
    f3b0:	0001420c 	.word	0x0001420c
    f3b4:	00014210 	.word	0x00014210
    f3b8:	000fffff 	.word	0x000fffff
    f3bc:	39500000 	.word	0x39500000
    f3c0:	bfe00000 	.word	0xbfe00000
    f3c4:	3fe00000 	.word	0x3fe00000
    f3c8:	00014040 	.word	0x00014040
    f3cc:	00014230 	.word	0x00014230
    f3d0:	7fefffff 	.word	0x7fefffff
    f3d4:	2301      	movs	r3, #1
    f3d6:	425b      	negs	r3, r3
    f3d8:	e7c9      	b.n	f36e <_strtod_l+0xdc2>
    f3da:	9a05      	ldr	r2, [sp, #20]
    f3dc:	4b16      	ldr	r3, [pc, #88]	; (f438 <_strtod_l+0xe8c>)
    f3de:	4013      	ands	r3, r2
    f3e0:	4a16      	ldr	r2, [pc, #88]	; (f43c <_strtod_l+0xe90>)
    f3e2:	4694      	mov	ip, r2
    f3e4:	4a16      	ldr	r2, [pc, #88]	; (f440 <_strtod_l+0xe94>)
    f3e6:	4463      	add	r3, ip
    f3e8:	431a      	orrs	r2, r3
    f3ea:	2301      	movs	r3, #1
    f3ec:	425b      	negs	r3, r3
    f3ee:	9205      	str	r2, [sp, #20]
    f3f0:	9304      	str	r3, [sp, #16]
    f3f2:	9c04      	ldr	r4, [sp, #16]
    f3f4:	9d05      	ldr	r5, [sp, #20]
    f3f6:	e6f5      	b.n	f1e4 <_strtod_l+0xc38>
    f3f8:	2201      	movs	r2, #1
    f3fa:	4252      	negs	r2, r2
    f3fc:	409a      	lsls	r2, r3
    f3fe:	9b04      	ldr	r3, [sp, #16]
    f400:	4013      	ands	r3, r2
    f402:	9304      	str	r3, [sp, #16]
    f404:	e5e1      	b.n	efca <_strtod_l+0xa1e>
    f406:	9004      	str	r0, [sp, #16]
    f408:	9105      	str	r1, [sp, #20]
    f40a:	e5da      	b.n	efc2 <_strtod_l+0xa16>
    f40c:	2101      	movs	r1, #1
    f40e:	3b20      	subs	r3, #32
    f410:	4249      	negs	r1, r1
    f412:	4099      	lsls	r1, r3
    f414:	400a      	ands	r2, r1
    f416:	9205      	str	r2, [sp, #20]
    f418:	e5d7      	b.n	efca <_strtod_l+0xa1e>
    f41a:	002f      	movs	r7, r5
    f41c:	991d      	ldr	r1, [sp, #116]	; 0x74
    f41e:	3501      	adds	r5, #1
    f420:	e58a      	b.n	ef38 <_strtod_l+0x98c>
    f422:	991d      	ldr	r1, [sp, #116]	; 0x74
    f424:	0023      	movs	r3, r4
    f426:	e593      	b.n	ef50 <_strtod_l+0x9a4>
    f428:	9004      	str	r0, [sp, #16]
    f42a:	9105      	str	r1, [sp, #20]
    f42c:	f7ff fc08 	bl	ec40 <_strtod_l+0x694>
    f430:	3301      	adds	r3, #1
    f432:	d1a2      	bne.n	f37a <_strtod_l+0xdce>
    f434:	e522      	b.n	ee7c <_strtod_l+0x8d0>
    f436:	46c0      	nop			; (mov r8, r8)
    f438:	7ff00000 	.word	0x7ff00000
    f43c:	fff00000 	.word	0xfff00000
    f440:	000fffff 	.word	0x000fffff

0000f444 <_strtod_r>:
    f444:	4b05      	ldr	r3, [pc, #20]	; (f45c <_strtod_r+0x18>)
    f446:	b510      	push	{r4, lr}
    f448:	681b      	ldr	r3, [r3, #0]
    f44a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    f44c:	2b00      	cmp	r3, #0
    f44e:	d002      	beq.n	f456 <_strtod_r+0x12>
    f450:	f7ff f8ac 	bl	e5ac <_strtod_l>
    f454:	bd10      	pop	{r4, pc}
    f456:	4b02      	ldr	r3, [pc, #8]	; (f460 <_strtod_r+0x1c>)
    f458:	e7fa      	b.n	f450 <_strtod_r+0xc>
    f45a:	46c0      	nop			; (mov r8, r8)
    f45c:	2000006c 	.word	0x2000006c
    f460:	2000049c 	.word	0x2000049c

0000f464 <_strtoll_l.isra.0>:
    f464:	b5f0      	push	{r4, r5, r6, r7, lr}
    f466:	46de      	mov	lr, fp
    f468:	4657      	mov	r7, sl
    f46a:	464e      	mov	r6, r9
    f46c:	4645      	mov	r5, r8
    f46e:	b5e0      	push	{r5, r6, r7, lr}
    f470:	001f      	movs	r7, r3
    f472:	2308      	movs	r3, #8
    f474:	b089      	sub	sp, #36	; 0x24
    f476:	9007      	str	r0, [sp, #28]
    f478:	9106      	str	r1, [sp, #24]
    f47a:	4693      	mov	fp, r2
    f47c:	000e      	movs	r6, r1
    f47e:	4698      	mov	r8, r3
    f480:	e000      	b.n	f484 <_strtoll_l.isra.0+0x20>
    f482:	002e      	movs	r6, r5
    f484:	9812      	ldr	r0, [sp, #72]	; 0x48
    f486:	7834      	ldrb	r4, [r6, #0]
    f488:	f7fd fd5a 	bl	cf40 <__locale_ctype_ptr_l>
    f48c:	4642      	mov	r2, r8
    f48e:	1900      	adds	r0, r0, r4
    f490:	7843      	ldrb	r3, [r0, #1]
    f492:	1c75      	adds	r5, r6, #1
    f494:	421a      	tst	r2, r3
    f496:	d1f4      	bne.n	f482 <_strtoll_l.isra.0+0x1e>
    f498:	2c2d      	cmp	r4, #45	; 0x2d
    f49a:	d100      	bne.n	f49e <_strtoll_l.isra.0+0x3a>
    f49c:	e087      	b.n	f5ae <_strtoll_l.isra.0+0x14a>
    f49e:	2300      	movs	r3, #0
    f4a0:	9303      	str	r3, [sp, #12]
    f4a2:	2c2b      	cmp	r4, #43	; 0x2b
    f4a4:	d100      	bne.n	f4a8 <_strtoll_l.isra.0+0x44>
    f4a6:	e094      	b.n	f5d2 <_strtoll_l.isra.0+0x16e>
    f4a8:	2f00      	cmp	r7, #0
    f4aa:	d00e      	beq.n	f4ca <_strtoll_l.isra.0+0x66>
    f4ac:	2f10      	cmp	r7, #16
    f4ae:	d100      	bne.n	f4b2 <_strtoll_l.isra.0+0x4e>
    f4b0:	e092      	b.n	f5d8 <_strtoll_l.isra.0+0x174>
    f4b2:	17fb      	asrs	r3, r7, #31
    f4b4:	4699      	mov	r9, r3
    f4b6:	9b03      	ldr	r3, [sp, #12]
    f4b8:	46ba      	mov	sl, r7
    f4ba:	2b00      	cmp	r3, #0
    f4bc:	d110      	bne.n	f4e0 <_strtoll_l.isra.0+0x7c>
    f4be:	2301      	movs	r3, #1
    f4c0:	425b      	negs	r3, r3
    f4c2:	9304      	str	r3, [sp, #16]
    f4c4:	4b55      	ldr	r3, [pc, #340]	; (f61c <_strtoll_l.isra.0+0x1b8>)
    f4c6:	9305      	str	r3, [sp, #20]
    f4c8:	e00f      	b.n	f4ea <_strtoll_l.isra.0+0x86>
    f4ca:	2c30      	cmp	r4, #48	; 0x30
    f4cc:	d100      	bne.n	f4d0 <_strtoll_l.isra.0+0x6c>
    f4ce:	e092      	b.n	f5f6 <_strtoll_l.isra.0+0x192>
    f4d0:	230a      	movs	r3, #10
    f4d2:	469a      	mov	sl, r3
    f4d4:	2300      	movs	r3, #0
    f4d6:	270a      	movs	r7, #10
    f4d8:	4699      	mov	r9, r3
    f4da:	9b03      	ldr	r3, [sp, #12]
    f4dc:	2b00      	cmp	r3, #0
    f4de:	d0ee      	beq.n	f4be <_strtoll_l.isra.0+0x5a>
    f4e0:	2300      	movs	r3, #0
    f4e2:	9304      	str	r3, [sp, #16]
    f4e4:	2380      	movs	r3, #128	; 0x80
    f4e6:	061b      	lsls	r3, r3, #24
    f4e8:	9305      	str	r3, [sp, #20]
    f4ea:	9904      	ldr	r1, [sp, #16]
    f4ec:	9e05      	ldr	r6, [sp, #20]
    f4ee:	4688      	mov	r8, r1
    f4f0:	0008      	movs	r0, r1
    f4f2:	4652      	mov	r2, sl
    f4f4:	0031      	movs	r1, r6
    f4f6:	464b      	mov	r3, r9
    f4f8:	f7f5 fa92 	bl	4a20 <__aeabi_uldivmod>
    f4fc:	4640      	mov	r0, r8
    f4fe:	9202      	str	r2, [sp, #8]
    f500:	0031      	movs	r1, r6
    f502:	4652      	mov	r2, sl
    f504:	464b      	mov	r3, r9
    f506:	f7f5 fa8b 	bl	4a20 <__aeabi_uldivmod>
    f50a:	2200      	movs	r2, #0
    f50c:	4680      	mov	r8, r0
    f50e:	000e      	movs	r6, r1
    f510:	2000      	movs	r0, #0
    f512:	2100      	movs	r1, #0
    f514:	e019      	b.n	f54a <_strtoll_l.isra.0+0xe6>
    f516:	001c      	movs	r4, r3
    f518:	42a7      	cmp	r7, r4
    f51a:	dd21      	ble.n	f560 <_strtoll_l.isra.0+0xfc>
    f51c:	1c53      	adds	r3, r2, #1
    f51e:	d012      	beq.n	f546 <_strtoll_l.isra.0+0xe2>
    f520:	42b1      	cmp	r1, r6
    f522:	d83b      	bhi.n	f59c <_strtoll_l.isra.0+0x138>
    f524:	d101      	bne.n	f52a <_strtoll_l.isra.0+0xc6>
    f526:	4540      	cmp	r0, r8
    f528:	d838      	bhi.n	f59c <_strtoll_l.isra.0+0x138>
    f52a:	4580      	cmp	r8, r0
    f52c:	d031      	beq.n	f592 <_strtoll_l.isra.0+0x12e>
    f52e:	4652      	mov	r2, sl
    f530:	464b      	mov	r3, r9
    f532:	f7f5 fa95 	bl	4a60 <__aeabi_lmul>
    f536:	17e3      	asrs	r3, r4, #31
    f538:	9400      	str	r4, [sp, #0]
    f53a:	9301      	str	r3, [sp, #4]
    f53c:	9b00      	ldr	r3, [sp, #0]
    f53e:	9c01      	ldr	r4, [sp, #4]
    f540:	2201      	movs	r2, #1
    f542:	18c0      	adds	r0, r0, r3
    f544:	4161      	adcs	r1, r4
    f546:	782c      	ldrb	r4, [r5, #0]
    f548:	3501      	adds	r5, #1
    f54a:	0023      	movs	r3, r4
    f54c:	3b30      	subs	r3, #48	; 0x30
    f54e:	2b09      	cmp	r3, #9
    f550:	d9e1      	bls.n	f516 <_strtoll_l.isra.0+0xb2>
    f552:	0023      	movs	r3, r4
    f554:	3b41      	subs	r3, #65	; 0x41
    f556:	2b19      	cmp	r3, #25
    f558:	d823      	bhi.n	f5a2 <_strtoll_l.isra.0+0x13e>
    f55a:	3c37      	subs	r4, #55	; 0x37
    f55c:	42a7      	cmp	r7, r4
    f55e:	dcdd      	bgt.n	f51c <_strtoll_l.isra.0+0xb8>
    f560:	1c53      	adds	r3, r2, #1
    f562:	d029      	beq.n	f5b8 <_strtoll_l.isra.0+0x154>
    f564:	9b03      	ldr	r3, [sp, #12]
    f566:	2b00      	cmp	r3, #0
    f568:	d004      	beq.n	f574 <_strtoll_l.isra.0+0x110>
    f56a:	0003      	movs	r3, r0
    f56c:	000c      	movs	r4, r1
    f56e:	2100      	movs	r1, #0
    f570:	4258      	negs	r0, r3
    f572:	41a1      	sbcs	r1, r4
    f574:	465b      	mov	r3, fp
    f576:	2b00      	cmp	r3, #0
    f578:	d004      	beq.n	f584 <_strtoll_l.isra.0+0x120>
    f57a:	9b06      	ldr	r3, [sp, #24]
    f57c:	2a00      	cmp	r2, #0
    f57e:	d125      	bne.n	f5cc <_strtoll_l.isra.0+0x168>
    f580:	465a      	mov	r2, fp
    f582:	6013      	str	r3, [r2, #0]
    f584:	b009      	add	sp, #36	; 0x24
    f586:	bc3c      	pop	{r2, r3, r4, r5}
    f588:	4690      	mov	r8, r2
    f58a:	4699      	mov	r9, r3
    f58c:	46a2      	mov	sl, r4
    f58e:	46ab      	mov	fp, r5
    f590:	bdf0      	pop	{r4, r5, r6, r7, pc}
    f592:	428e      	cmp	r6, r1
    f594:	d1cb      	bne.n	f52e <_strtoll_l.isra.0+0xca>
    f596:	9b02      	ldr	r3, [sp, #8]
    f598:	42a3      	cmp	r3, r4
    f59a:	dac8      	bge.n	f52e <_strtoll_l.isra.0+0xca>
    f59c:	2201      	movs	r2, #1
    f59e:	4252      	negs	r2, r2
    f5a0:	e7d1      	b.n	f546 <_strtoll_l.isra.0+0xe2>
    f5a2:	0023      	movs	r3, r4
    f5a4:	3b61      	subs	r3, #97	; 0x61
    f5a6:	2b19      	cmp	r3, #25
    f5a8:	d8da      	bhi.n	f560 <_strtoll_l.isra.0+0xfc>
    f5aa:	3c57      	subs	r4, #87	; 0x57
    f5ac:	e7b4      	b.n	f518 <_strtoll_l.isra.0+0xb4>
    f5ae:	2301      	movs	r3, #1
    f5b0:	782c      	ldrb	r4, [r5, #0]
    f5b2:	9303      	str	r3, [sp, #12]
    f5b4:	1cb5      	adds	r5, r6, #2
    f5b6:	e777      	b.n	f4a8 <_strtoll_l.isra.0+0x44>
    f5b8:	2322      	movs	r3, #34	; 0x22
    f5ba:	9a07      	ldr	r2, [sp, #28]
    f5bc:	6013      	str	r3, [r2, #0]
    f5be:	465b      	mov	r3, fp
    f5c0:	2b00      	cmp	r3, #0
    f5c2:	d028      	beq.n	f616 <_strtoll_l.isra.0+0x1b2>
    f5c4:	1e6b      	subs	r3, r5, #1
    f5c6:	9804      	ldr	r0, [sp, #16]
    f5c8:	9905      	ldr	r1, [sp, #20]
    f5ca:	e7d9      	b.n	f580 <_strtoll_l.isra.0+0x11c>
    f5cc:	9004      	str	r0, [sp, #16]
    f5ce:	9105      	str	r1, [sp, #20]
    f5d0:	e7f8      	b.n	f5c4 <_strtoll_l.isra.0+0x160>
    f5d2:	782c      	ldrb	r4, [r5, #0]
    f5d4:	1cb5      	adds	r5, r6, #2
    f5d6:	e767      	b.n	f4a8 <_strtoll_l.isra.0+0x44>
    f5d8:	2c30      	cmp	r4, #48	; 0x30
    f5da:	d117      	bne.n	f60c <_strtoll_l.isra.0+0x1a8>
    f5dc:	2220      	movs	r2, #32
    f5de:	782b      	ldrb	r3, [r5, #0]
    f5e0:	4393      	bics	r3, r2
    f5e2:	2b58      	cmp	r3, #88	; 0x58
    f5e4:	d112      	bne.n	f60c <_strtoll_l.isra.0+0x1a8>
    f5e6:	2310      	movs	r3, #16
    f5e8:	469a      	mov	sl, r3
    f5ea:	2300      	movs	r3, #0
    f5ec:	786c      	ldrb	r4, [r5, #1]
    f5ee:	4699      	mov	r9, r3
    f5f0:	3502      	adds	r5, #2
    f5f2:	2710      	movs	r7, #16
    f5f4:	e771      	b.n	f4da <_strtoll_l.isra.0+0x76>
    f5f6:	2220      	movs	r2, #32
    f5f8:	782b      	ldrb	r3, [r5, #0]
    f5fa:	4393      	bics	r3, r2
    f5fc:	2b58      	cmp	r3, #88	; 0x58
    f5fe:	d0f2      	beq.n	f5e6 <_strtoll_l.isra.0+0x182>
    f600:	2308      	movs	r3, #8
    f602:	469a      	mov	sl, r3
    f604:	2300      	movs	r3, #0
    f606:	2708      	movs	r7, #8
    f608:	4699      	mov	r9, r3
    f60a:	e766      	b.n	f4da <_strtoll_l.isra.0+0x76>
    f60c:	2310      	movs	r3, #16
    f60e:	469a      	mov	sl, r3
    f610:	2300      	movs	r3, #0
    f612:	4699      	mov	r9, r3
    f614:	e761      	b.n	f4da <_strtoll_l.isra.0+0x76>
    f616:	9804      	ldr	r0, [sp, #16]
    f618:	9905      	ldr	r1, [sp, #20]
    f61a:	e7b3      	b.n	f584 <_strtoll_l.isra.0+0x120>
    f61c:	7fffffff 	.word	0x7fffffff

0000f620 <_strtoll_r>:
    f620:	b510      	push	{r4, lr}
    f622:	4c06      	ldr	r4, [pc, #24]	; (f63c <_strtoll_r+0x1c>)
    f624:	b082      	sub	sp, #8
    f626:	6824      	ldr	r4, [r4, #0]
    f628:	6b64      	ldr	r4, [r4, #52]	; 0x34
    f62a:	2c00      	cmp	r4, #0
    f62c:	d004      	beq.n	f638 <_strtoll_r+0x18>
    f62e:	9400      	str	r4, [sp, #0]
    f630:	f7ff ff18 	bl	f464 <_strtoll_l.isra.0>
    f634:	b002      	add	sp, #8
    f636:	bd10      	pop	{r4, pc}
    f638:	4c01      	ldr	r4, [pc, #4]	; (f640 <_strtoll_r+0x20>)
    f63a:	e7f8      	b.n	f62e <_strtoll_r+0xe>
    f63c:	2000006c 	.word	0x2000006c
    f640:	2000049c 	.word	0x2000049c

0000f644 <_strtoul_l.isra.0>:
    f644:	b5f0      	push	{r4, r5, r6, r7, lr}
    f646:	4657      	mov	r7, sl
    f648:	464e      	mov	r6, r9
    f64a:	46de      	mov	lr, fp
    f64c:	4645      	mov	r5, r8
    f64e:	b5e0      	push	{r5, r6, r7, lr}
    f650:	001e      	movs	r6, r3
    f652:	2308      	movs	r3, #8
    f654:	b083      	sub	sp, #12
    f656:	4683      	mov	fp, r0
    f658:	4689      	mov	r9, r1
    f65a:	4692      	mov	sl, r2
    f65c:	000f      	movs	r7, r1
    f65e:	4698      	mov	r8, r3
    f660:	e000      	b.n	f664 <_strtoul_l.isra.0+0x20>
    f662:	002f      	movs	r7, r5
    f664:	980c      	ldr	r0, [sp, #48]	; 0x30
    f666:	783c      	ldrb	r4, [r7, #0]
    f668:	f7fd fc6a 	bl	cf40 <__locale_ctype_ptr_l>
    f66c:	4642      	mov	r2, r8
    f66e:	1900      	adds	r0, r0, r4
    f670:	7843      	ldrb	r3, [r0, #1]
    f672:	1c7d      	adds	r5, r7, #1
    f674:	421a      	tst	r2, r3
    f676:	d1f4      	bne.n	f662 <_strtoul_l.isra.0+0x1e>
    f678:	2c2d      	cmp	r4, #45	; 0x2d
    f67a:	d05b      	beq.n	f734 <_strtoul_l.isra.0+0xf0>
    f67c:	2300      	movs	r3, #0
    f67e:	9301      	str	r3, [sp, #4]
    f680:	2c2b      	cmp	r4, #43	; 0x2b
    f682:	d05c      	beq.n	f73e <_strtoul_l.isra.0+0xfa>
    f684:	2e00      	cmp	r6, #0
    f686:	d00e      	beq.n	f6a6 <_strtoul_l.isra.0+0x62>
    f688:	2e10      	cmp	r6, #16
    f68a:	d05b      	beq.n	f744 <_strtoul_l.isra.0+0x100>
    f68c:	2001      	movs	r0, #1
    f68e:	0031      	movs	r1, r6
    f690:	4240      	negs	r0, r0
    f692:	f7f5 f815 	bl	46c0 <__udivsi3>
    f696:	0007      	movs	r7, r0
    f698:	2001      	movs	r0, #1
    f69a:	0031      	movs	r1, r6
    f69c:	4240      	negs	r0, r0
    f69e:	46b0      	mov	r8, r6
    f6a0:	f7f5 f894 	bl	47cc <__aeabi_uidivmod>
    f6a4:	e006      	b.n	f6b4 <_strtoul_l.isra.0+0x70>
    f6a6:	2c30      	cmp	r4, #48	; 0x30
    f6a8:	d05b      	beq.n	f762 <_strtoul_l.isra.0+0x11e>
    f6aa:	230a      	movs	r3, #10
    f6ac:	2105      	movs	r1, #5
    f6ae:	4698      	mov	r8, r3
    f6b0:	260a      	movs	r6, #10
    f6b2:	4f34      	ldr	r7, [pc, #208]	; (f784 <_strtoul_l.isra.0+0x140>)
    f6b4:	2200      	movs	r2, #0
    f6b6:	2000      	movs	r0, #0
    f6b8:	0023      	movs	r3, r4
    f6ba:	3b30      	subs	r3, #48	; 0x30
    f6bc:	2b09      	cmp	r3, #9
    f6be:	d907      	bls.n	f6d0 <_strtoul_l.isra.0+0x8c>
    f6c0:	3b11      	subs	r3, #17
    f6c2:	2b19      	cmp	r3, #25
    f6c4:	d903      	bls.n	f6ce <_strtoul_l.isra.0+0x8a>
    f6c6:	0023      	movs	r3, r4
    f6c8:	3b61      	subs	r3, #97	; 0x61
    f6ca:	2b19      	cmp	r3, #25
    f6cc:	d80e      	bhi.n	f6ec <_strtoul_l.isra.0+0xa8>
    f6ce:	330a      	adds	r3, #10
    f6d0:	429e      	cmp	r6, r3
    f6d2:	dd0b      	ble.n	f6ec <_strtoul_l.isra.0+0xa8>
    f6d4:	2a00      	cmp	r2, #0
    f6d6:	db20      	blt.n	f71a <_strtoul_l.isra.0+0xd6>
    f6d8:	42b8      	cmp	r0, r7
    f6da:	d81e      	bhi.n	f71a <_strtoul_l.isra.0+0xd6>
    f6dc:	d01b      	beq.n	f716 <_strtoul_l.isra.0+0xd2>
    f6de:	4642      	mov	r2, r8
    f6e0:	4350      	muls	r0, r2
    f6e2:	2201      	movs	r2, #1
    f6e4:	1818      	adds	r0, r3, r0
    f6e6:	782c      	ldrb	r4, [r5, #0]
    f6e8:	3501      	adds	r5, #1
    f6ea:	e7e5      	b.n	f6b8 <_strtoul_l.isra.0+0x74>
    f6ec:	2a00      	cmp	r2, #0
    f6ee:	db17      	blt.n	f720 <_strtoul_l.isra.0+0xdc>
    f6f0:	9b01      	ldr	r3, [sp, #4]
    f6f2:	2b00      	cmp	r3, #0
    f6f4:	d000      	beq.n	f6f8 <_strtoul_l.isra.0+0xb4>
    f6f6:	4240      	negs	r0, r0
    f6f8:	4653      	mov	r3, sl
    f6fa:	2b00      	cmp	r3, #0
    f6fc:	d004      	beq.n	f708 <_strtoul_l.isra.0+0xc4>
    f6fe:	464b      	mov	r3, r9
    f700:	2a00      	cmp	r2, #0
    f702:	d115      	bne.n	f730 <_strtoul_l.isra.0+0xec>
    f704:	4652      	mov	r2, sl
    f706:	6013      	str	r3, [r2, #0]
    f708:	b003      	add	sp, #12
    f70a:	bc3c      	pop	{r2, r3, r4, r5}
    f70c:	4690      	mov	r8, r2
    f70e:	4699      	mov	r9, r3
    f710:	46a2      	mov	sl, r4
    f712:	46ab      	mov	fp, r5
    f714:	bdf0      	pop	{r4, r5, r6, r7, pc}
    f716:	428b      	cmp	r3, r1
    f718:	dde1      	ble.n	f6de <_strtoul_l.isra.0+0x9a>
    f71a:	2201      	movs	r2, #1
    f71c:	4252      	negs	r2, r2
    f71e:	e7e2      	b.n	f6e6 <_strtoul_l.isra.0+0xa2>
    f720:	2322      	movs	r3, #34	; 0x22
    f722:	465a      	mov	r2, fp
    f724:	2001      	movs	r0, #1
    f726:	6013      	str	r3, [r2, #0]
    f728:	4653      	mov	r3, sl
    f72a:	4240      	negs	r0, r0
    f72c:	2b00      	cmp	r3, #0
    f72e:	d0eb      	beq.n	f708 <_strtoul_l.isra.0+0xc4>
    f730:	1e6b      	subs	r3, r5, #1
    f732:	e7e7      	b.n	f704 <_strtoul_l.isra.0+0xc0>
    f734:	2301      	movs	r3, #1
    f736:	782c      	ldrb	r4, [r5, #0]
    f738:	9301      	str	r3, [sp, #4]
    f73a:	1cbd      	adds	r5, r7, #2
    f73c:	e7a2      	b.n	f684 <_strtoul_l.isra.0+0x40>
    f73e:	782c      	ldrb	r4, [r5, #0]
    f740:	1cbd      	adds	r5, r7, #2
    f742:	e79f      	b.n	f684 <_strtoul_l.isra.0+0x40>
    f744:	2c30      	cmp	r4, #48	; 0x30
    f746:	d117      	bne.n	f778 <_strtoul_l.isra.0+0x134>
    f748:	2220      	movs	r2, #32
    f74a:	782b      	ldrb	r3, [r5, #0]
    f74c:	4393      	bics	r3, r2
    f74e:	2b58      	cmp	r3, #88	; 0x58
    f750:	d112      	bne.n	f778 <_strtoul_l.isra.0+0x134>
    f752:	2310      	movs	r3, #16
    f754:	786c      	ldrb	r4, [r5, #1]
    f756:	210f      	movs	r1, #15
    f758:	3502      	adds	r5, #2
    f75a:	4f0b      	ldr	r7, [pc, #44]	; (f788 <_strtoul_l.isra.0+0x144>)
    f75c:	4698      	mov	r8, r3
    f75e:	2610      	movs	r6, #16
    f760:	e7a8      	b.n	f6b4 <_strtoul_l.isra.0+0x70>
    f762:	2220      	movs	r2, #32
    f764:	782b      	ldrb	r3, [r5, #0]
    f766:	4393      	bics	r3, r2
    f768:	2b58      	cmp	r3, #88	; 0x58
    f76a:	d0f2      	beq.n	f752 <_strtoul_l.isra.0+0x10e>
    f76c:	2308      	movs	r3, #8
    f76e:	2107      	movs	r1, #7
    f770:	4f06      	ldr	r7, [pc, #24]	; (f78c <_strtoul_l.isra.0+0x148>)
    f772:	4698      	mov	r8, r3
    f774:	2608      	movs	r6, #8
    f776:	e79d      	b.n	f6b4 <_strtoul_l.isra.0+0x70>
    f778:	2310      	movs	r3, #16
    f77a:	210f      	movs	r1, #15
    f77c:	4f02      	ldr	r7, [pc, #8]	; (f788 <_strtoul_l.isra.0+0x144>)
    f77e:	4698      	mov	r8, r3
    f780:	e798      	b.n	f6b4 <_strtoul_l.isra.0+0x70>
    f782:	46c0      	nop			; (mov r8, r8)
    f784:	19999999 	.word	0x19999999
    f788:	0fffffff 	.word	0x0fffffff
    f78c:	1fffffff 	.word	0x1fffffff

0000f790 <_strtoul_r>:
    f790:	b510      	push	{r4, lr}
    f792:	4c06      	ldr	r4, [pc, #24]	; (f7ac <_strtoul_r+0x1c>)
    f794:	b082      	sub	sp, #8
    f796:	6824      	ldr	r4, [r4, #0]
    f798:	6b64      	ldr	r4, [r4, #52]	; 0x34
    f79a:	2c00      	cmp	r4, #0
    f79c:	d004      	beq.n	f7a8 <_strtoul_r+0x18>
    f79e:	9400      	str	r4, [sp, #0]
    f7a0:	f7ff ff50 	bl	f644 <_strtoul_l.isra.0>
    f7a4:	b002      	add	sp, #8
    f7a6:	bd10      	pop	{r4, pc}
    f7a8:	4c01      	ldr	r4, [pc, #4]	; (f7b0 <_strtoul_r+0x20>)
    f7aa:	e7f8      	b.n	f79e <_strtoul_r+0xe>
    f7ac:	2000006c 	.word	0x2000006c
    f7b0:	2000049c 	.word	0x2000049c

0000f7b4 <_strtoull_l.isra.0>:
    f7b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    f7b6:	46de      	mov	lr, fp
    f7b8:	4657      	mov	r7, sl
    f7ba:	464e      	mov	r6, r9
    f7bc:	4645      	mov	r5, r8
    f7be:	b5e0      	push	{r5, r6, r7, lr}
    f7c0:	001e      	movs	r6, r3
    f7c2:	2308      	movs	r3, #8
    f7c4:	b087      	sub	sp, #28
    f7c6:	9005      	str	r0, [sp, #20]
    f7c8:	9104      	str	r1, [sp, #16]
    f7ca:	4693      	mov	fp, r2
    f7cc:	000f      	movs	r7, r1
    f7ce:	4698      	mov	r8, r3
    f7d0:	e000      	b.n	f7d4 <_strtoull_l.isra.0+0x20>
    f7d2:	002f      	movs	r7, r5
    f7d4:	9810      	ldr	r0, [sp, #64]	; 0x40
    f7d6:	783c      	ldrb	r4, [r7, #0]
    f7d8:	f7fd fbb2 	bl	cf40 <__locale_ctype_ptr_l>
    f7dc:	4642      	mov	r2, r8
    f7de:	1900      	adds	r0, r0, r4
    f7e0:	7843      	ldrb	r3, [r0, #1]
    f7e2:	1c7d      	adds	r5, r7, #1
    f7e4:	421a      	tst	r2, r3
    f7e6:	d1f4      	bne.n	f7d2 <_strtoull_l.isra.0+0x1e>
    f7e8:	2c2d      	cmp	r4, #45	; 0x2d
    f7ea:	d100      	bne.n	f7ee <_strtoull_l.isra.0+0x3a>
    f7ec:	e085      	b.n	f8fa <_strtoull_l.isra.0+0x146>
    f7ee:	2300      	movs	r3, #0
    f7f0:	9303      	str	r3, [sp, #12]
    f7f2:	2c2b      	cmp	r4, #43	; 0x2b
    f7f4:	d100      	bne.n	f7f8 <_strtoull_l.isra.0+0x44>
    f7f6:	e085      	b.n	f904 <_strtoull_l.isra.0+0x150>
    f7f8:	2e00      	cmp	r6, #0
    f7fa:	d016      	beq.n	f82a <_strtoull_l.isra.0+0x76>
    f7fc:	2e10      	cmp	r6, #16
    f7fe:	d100      	bne.n	f802 <_strtoull_l.isra.0+0x4e>
    f800:	e083      	b.n	f90a <_strtoull_l.isra.0+0x156>
    f802:	17f3      	asrs	r3, r6, #31
    f804:	0032      	movs	r2, r6
    f806:	2001      	movs	r0, #1
    f808:	4240      	negs	r0, r0
    f80a:	17c1      	asrs	r1, r0, #31
    f80c:	4699      	mov	r9, r3
    f80e:	f7f5 f907 	bl	4a20 <__aeabi_uldivmod>
    f812:	0032      	movs	r2, r6
    f814:	4680      	mov	r8, r0
    f816:	000f      	movs	r7, r1
    f818:	464b      	mov	r3, r9
    f81a:	2001      	movs	r0, #1
    f81c:	4240      	negs	r0, r0
    f81e:	17c1      	asrs	r1, r0, #31
    f820:	f7f5 f8fe 	bl	4a20 <__aeabi_uldivmod>
    f824:	46b2      	mov	sl, r6
    f826:	9202      	str	r2, [sp, #8]
    f828:	e00c      	b.n	f844 <_strtoull_l.isra.0+0x90>
    f82a:	2c30      	cmp	r4, #48	; 0x30
    f82c:	d100      	bne.n	f830 <_strtoull_l.isra.0+0x7c>
    f82e:	e080      	b.n	f932 <_strtoull_l.isra.0+0x17e>
    f830:	2305      	movs	r3, #5
    f832:	9302      	str	r3, [sp, #8]
    f834:	4b4c      	ldr	r3, [pc, #304]	; (f968 <_strtoull_l.isra.0+0x1b4>)
    f836:	260a      	movs	r6, #10
    f838:	4698      	mov	r8, r3
    f83a:	230a      	movs	r3, #10
    f83c:	469a      	mov	sl, r3
    f83e:	2300      	movs	r3, #0
    f840:	4699      	mov	r9, r3
    f842:	4f4a      	ldr	r7, [pc, #296]	; (f96c <_strtoull_l.isra.0+0x1b8>)
    f844:	2200      	movs	r2, #0
    f846:	2000      	movs	r0, #0
    f848:	2100      	movs	r1, #0
    f84a:	e019      	b.n	f880 <_strtoull_l.isra.0+0xcc>
    f84c:	001c      	movs	r4, r3
    f84e:	42a6      	cmp	r6, r4
    f850:	dd21      	ble.n	f896 <_strtoull_l.isra.0+0xe2>
    f852:	2a00      	cmp	r2, #0
    f854:	db3d      	blt.n	f8d2 <_strtoull_l.isra.0+0x11e>
    f856:	42b9      	cmp	r1, r7
    f858:	d83b      	bhi.n	f8d2 <_strtoull_l.isra.0+0x11e>
    f85a:	d101      	bne.n	f860 <_strtoull_l.isra.0+0xac>
    f85c:	4540      	cmp	r0, r8
    f85e:	d838      	bhi.n	f8d2 <_strtoull_l.isra.0+0x11e>
    f860:	4540      	cmp	r0, r8
    f862:	d031      	beq.n	f8c8 <_strtoull_l.isra.0+0x114>
    f864:	4652      	mov	r2, sl
    f866:	464b      	mov	r3, r9
    f868:	f7f5 f8fa 	bl	4a60 <__aeabi_lmul>
    f86c:	17e3      	asrs	r3, r4, #31
    f86e:	9400      	str	r4, [sp, #0]
    f870:	9301      	str	r3, [sp, #4]
    f872:	9b00      	ldr	r3, [sp, #0]
    f874:	9c01      	ldr	r4, [sp, #4]
    f876:	2201      	movs	r2, #1
    f878:	18c0      	adds	r0, r0, r3
    f87a:	4161      	adcs	r1, r4
    f87c:	782c      	ldrb	r4, [r5, #0]
    f87e:	3501      	adds	r5, #1
    f880:	0023      	movs	r3, r4
    f882:	3b30      	subs	r3, #48	; 0x30
    f884:	2b09      	cmp	r3, #9
    f886:	d9e1      	bls.n	f84c <_strtoull_l.isra.0+0x98>
    f888:	0023      	movs	r3, r4
    f88a:	3b41      	subs	r3, #65	; 0x41
    f88c:	2b19      	cmp	r3, #25
    f88e:	d823      	bhi.n	f8d8 <_strtoull_l.isra.0+0x124>
    f890:	3c37      	subs	r4, #55	; 0x37
    f892:	42a6      	cmp	r6, r4
    f894:	dcdd      	bgt.n	f852 <_strtoull_l.isra.0+0x9e>
    f896:	2a00      	cmp	r2, #0
    f898:	db24      	blt.n	f8e4 <_strtoull_l.isra.0+0x130>
    f89a:	9b03      	ldr	r3, [sp, #12]
    f89c:	2b00      	cmp	r3, #0
    f89e:	d004      	beq.n	f8aa <_strtoull_l.isra.0+0xf6>
    f8a0:	0003      	movs	r3, r0
    f8a2:	000c      	movs	r4, r1
    f8a4:	2100      	movs	r1, #0
    f8a6:	4258      	negs	r0, r3
    f8a8:	41a1      	sbcs	r1, r4
    f8aa:	465b      	mov	r3, fp
    f8ac:	2b00      	cmp	r3, #0
    f8ae:	d004      	beq.n	f8ba <_strtoull_l.isra.0+0x106>
    f8b0:	9b04      	ldr	r3, [sp, #16]
    f8b2:	2a00      	cmp	r2, #0
    f8b4:	d11f      	bne.n	f8f6 <_strtoull_l.isra.0+0x142>
    f8b6:	465a      	mov	r2, fp
    f8b8:	6013      	str	r3, [r2, #0]
    f8ba:	b007      	add	sp, #28
    f8bc:	bc3c      	pop	{r2, r3, r4, r5}
    f8be:	4690      	mov	r8, r2
    f8c0:	4699      	mov	r9, r3
    f8c2:	46a2      	mov	sl, r4
    f8c4:	46ab      	mov	fp, r5
    f8c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    f8c8:	42b9      	cmp	r1, r7
    f8ca:	d1cb      	bne.n	f864 <_strtoull_l.isra.0+0xb0>
    f8cc:	9b02      	ldr	r3, [sp, #8]
    f8ce:	429c      	cmp	r4, r3
    f8d0:	ddc8      	ble.n	f864 <_strtoull_l.isra.0+0xb0>
    f8d2:	2201      	movs	r2, #1
    f8d4:	4252      	negs	r2, r2
    f8d6:	e7d1      	b.n	f87c <_strtoull_l.isra.0+0xc8>
    f8d8:	0023      	movs	r3, r4
    f8da:	3b61      	subs	r3, #97	; 0x61
    f8dc:	2b19      	cmp	r3, #25
    f8de:	d8da      	bhi.n	f896 <_strtoull_l.isra.0+0xe2>
    f8e0:	3c57      	subs	r4, #87	; 0x57
    f8e2:	e7b4      	b.n	f84e <_strtoull_l.isra.0+0x9a>
    f8e4:	2322      	movs	r3, #34	; 0x22
    f8e6:	9a05      	ldr	r2, [sp, #20]
    f8e8:	2001      	movs	r0, #1
    f8ea:	4240      	negs	r0, r0
    f8ec:	17c1      	asrs	r1, r0, #31
    f8ee:	6013      	str	r3, [r2, #0]
    f8f0:	465b      	mov	r3, fp
    f8f2:	2b00      	cmp	r3, #0
    f8f4:	d0e1      	beq.n	f8ba <_strtoull_l.isra.0+0x106>
    f8f6:	1e6b      	subs	r3, r5, #1
    f8f8:	e7dd      	b.n	f8b6 <_strtoull_l.isra.0+0x102>
    f8fa:	2301      	movs	r3, #1
    f8fc:	782c      	ldrb	r4, [r5, #0]
    f8fe:	9303      	str	r3, [sp, #12]
    f900:	1cbd      	adds	r5, r7, #2
    f902:	e779      	b.n	f7f8 <_strtoull_l.isra.0+0x44>
    f904:	782c      	ldrb	r4, [r5, #0]
    f906:	1cbd      	adds	r5, r7, #2
    f908:	e776      	b.n	f7f8 <_strtoull_l.isra.0+0x44>
    f90a:	2c30      	cmp	r4, #48	; 0x30
    f90c:	d121      	bne.n	f952 <_strtoull_l.isra.0+0x19e>
    f90e:	2220      	movs	r2, #32
    f910:	782b      	ldrb	r3, [r5, #0]
    f912:	4393      	bics	r3, r2
    f914:	2b58      	cmp	r3, #88	; 0x58
    f916:	d11c      	bne.n	f952 <_strtoull_l.isra.0+0x19e>
    f918:	230f      	movs	r3, #15
    f91a:	9302      	str	r3, [sp, #8]
    f91c:	3b10      	subs	r3, #16
    f91e:	4698      	mov	r8, r3
    f920:	3311      	adds	r3, #17
    f922:	469a      	mov	sl, r3
    f924:	2300      	movs	r3, #0
    f926:	786c      	ldrb	r4, [r5, #1]
    f928:	4f11      	ldr	r7, [pc, #68]	; (f970 <_strtoull_l.isra.0+0x1bc>)
    f92a:	3502      	adds	r5, #2
    f92c:	4699      	mov	r9, r3
    f92e:	2610      	movs	r6, #16
    f930:	e788      	b.n	f844 <_strtoull_l.isra.0+0x90>
    f932:	2220      	movs	r2, #32
    f934:	782b      	ldrb	r3, [r5, #0]
    f936:	4393      	bics	r3, r2
    f938:	2b58      	cmp	r3, #88	; 0x58
    f93a:	d0ed      	beq.n	f918 <_strtoull_l.isra.0+0x164>
    f93c:	2307      	movs	r3, #7
    f93e:	9302      	str	r3, [sp, #8]
    f940:	3b08      	subs	r3, #8
    f942:	4698      	mov	r8, r3
    f944:	3309      	adds	r3, #9
    f946:	469a      	mov	sl, r3
    f948:	2300      	movs	r3, #0
    f94a:	4f0a      	ldr	r7, [pc, #40]	; (f974 <_strtoull_l.isra.0+0x1c0>)
    f94c:	4699      	mov	r9, r3
    f94e:	2608      	movs	r6, #8
    f950:	e778      	b.n	f844 <_strtoull_l.isra.0+0x90>
    f952:	230f      	movs	r3, #15
    f954:	9302      	str	r3, [sp, #8]
    f956:	3b10      	subs	r3, #16
    f958:	4698      	mov	r8, r3
    f95a:	3311      	adds	r3, #17
    f95c:	469a      	mov	sl, r3
    f95e:	2300      	movs	r3, #0
    f960:	4f03      	ldr	r7, [pc, #12]	; (f970 <_strtoull_l.isra.0+0x1bc>)
    f962:	4699      	mov	r9, r3
    f964:	e76e      	b.n	f844 <_strtoull_l.isra.0+0x90>
    f966:	46c0      	nop			; (mov r8, r8)
    f968:	99999999 	.word	0x99999999
    f96c:	19999999 	.word	0x19999999
    f970:	0fffffff 	.word	0x0fffffff
    f974:	1fffffff 	.word	0x1fffffff

0000f978 <_strtoull_r>:
    f978:	b510      	push	{r4, lr}
    f97a:	4c06      	ldr	r4, [pc, #24]	; (f994 <_strtoull_r+0x1c>)
    f97c:	b082      	sub	sp, #8
    f97e:	6824      	ldr	r4, [r4, #0]
    f980:	6b64      	ldr	r4, [r4, #52]	; 0x34
    f982:	2c00      	cmp	r4, #0
    f984:	d004      	beq.n	f990 <_strtoull_r+0x18>
    f986:	9400      	str	r4, [sp, #0]
    f988:	f7ff ff14 	bl	f7b4 <_strtoull_l.isra.0>
    f98c:	b002      	add	sp, #8
    f98e:	bd10      	pop	{r4, pc}
    f990:	4c01      	ldr	r4, [pc, #4]	; (f998 <_strtoull_r+0x20>)
    f992:	e7f8      	b.n	f986 <_strtoull_r+0xe>
    f994:	2000006c 	.word	0x2000006c
    f998:	2000049c 	.word	0x2000049c

0000f99c <__ssprint_r>:
    f99c:	b5f0      	push	{r4, r5, r6, r7, lr}
    f99e:	4657      	mov	r7, sl
    f9a0:	464e      	mov	r6, r9
    f9a2:	46de      	mov	lr, fp
    f9a4:	4645      	mov	r5, r8
    f9a6:	b5e0      	push	{r5, r6, r7, lr}
    f9a8:	6893      	ldr	r3, [r2, #8]
    f9aa:	b083      	sub	sp, #12
    f9ac:	9001      	str	r0, [sp, #4]
    f9ae:	000e      	movs	r6, r1
    f9b0:	4692      	mov	sl, r2
    f9b2:	2b00      	cmp	r3, #0
    f9b4:	d070      	beq.n	fa98 <__ssprint_r+0xfc>
    f9b6:	688d      	ldr	r5, [r1, #8]
    f9b8:	6813      	ldr	r3, [r2, #0]
    f9ba:	002c      	movs	r4, r5
    f9bc:	6808      	ldr	r0, [r1, #0]
    f9be:	001d      	movs	r5, r3
    f9c0:	e046      	b.n	fa50 <__ssprint_r+0xb4>
    f9c2:	2290      	movs	r2, #144	; 0x90
    f9c4:	89b3      	ldrh	r3, [r6, #12]
    f9c6:	00d2      	lsls	r2, r2, #3
    f9c8:	4213      	tst	r3, r2
    f9ca:	d030      	beq.n	fa2e <__ssprint_r+0x92>
    f9cc:	6931      	ldr	r1, [r6, #16]
    f9ce:	1a42      	subs	r2, r0, r1
    f9d0:	4693      	mov	fp, r2
    f9d2:	6970      	ldr	r0, [r6, #20]
    f9d4:	0042      	lsls	r2, r0, #1
    f9d6:	1812      	adds	r2, r2, r0
    f9d8:	0fd0      	lsrs	r0, r2, #31
    f9da:	1882      	adds	r2, r0, r2
    f9dc:	1052      	asrs	r2, r2, #1
    f9de:	4690      	mov	r8, r2
    f9e0:	465a      	mov	r2, fp
    f9e2:	1c50      	adds	r0, r2, #1
    f9e4:	19c0      	adds	r0, r0, r7
    f9e6:	4642      	mov	r2, r8
    f9e8:	4540      	cmp	r0, r8
    f9ea:	d901      	bls.n	f9f0 <__ssprint_r+0x54>
    f9ec:	4680      	mov	r8, r0
    f9ee:	0002      	movs	r2, r0
    f9f0:	2080      	movs	r0, #128	; 0x80
    f9f2:	00c0      	lsls	r0, r0, #3
    f9f4:	4203      	tst	r3, r0
    f9f6:	d038      	beq.n	fa6a <__ssprint_r+0xce>
    f9f8:	0011      	movs	r1, r2
    f9fa:	9801      	ldr	r0, [sp, #4]
    f9fc:	f7fd fb56 	bl	d0ac <_malloc_r>
    fa00:	1e04      	subs	r4, r0, #0
    fa02:	d054      	beq.n	faae <__ssprint_r+0x112>
    fa04:	465a      	mov	r2, fp
    fa06:	6931      	ldr	r1, [r6, #16]
    fa08:	f7f7 f94e 	bl	6ca8 <memcpy>
    fa0c:	89b3      	ldrh	r3, [r6, #12]
    fa0e:	4a2a      	ldr	r2, [pc, #168]	; (fab8 <__ssprint_r+0x11c>)
    fa10:	4013      	ands	r3, r2
    fa12:	2280      	movs	r2, #128	; 0x80
    fa14:	4313      	orrs	r3, r2
    fa16:	81b3      	strh	r3, [r6, #12]
    fa18:	4643      	mov	r3, r8
    fa1a:	0020      	movs	r0, r4
    fa1c:	465a      	mov	r2, fp
    fa1e:	6134      	str	r4, [r6, #16]
    fa20:	46b8      	mov	r8, r7
    fa22:	003c      	movs	r4, r7
    fa24:	4458      	add	r0, fp
    fa26:	6173      	str	r3, [r6, #20]
    fa28:	1a9b      	subs	r3, r3, r2
    fa2a:	6030      	str	r0, [r6, #0]
    fa2c:	60b3      	str	r3, [r6, #8]
    fa2e:	4642      	mov	r2, r8
    fa30:	4649      	mov	r1, r9
    fa32:	f7fd fe77 	bl	d724 <memmove>
    fa36:	68b3      	ldr	r3, [r6, #8]
    fa38:	1b1c      	subs	r4, r3, r4
    fa3a:	6833      	ldr	r3, [r6, #0]
    fa3c:	60b4      	str	r4, [r6, #8]
    fa3e:	4443      	add	r3, r8
    fa40:	6033      	str	r3, [r6, #0]
    fa42:	0018      	movs	r0, r3
    fa44:	4653      	mov	r3, sl
    fa46:	689b      	ldr	r3, [r3, #8]
    fa48:	1bdf      	subs	r7, r3, r7
    fa4a:	4653      	mov	r3, sl
    fa4c:	609f      	str	r7, [r3, #8]
    fa4e:	d023      	beq.n	fa98 <__ssprint_r+0xfc>
    fa50:	686f      	ldr	r7, [r5, #4]
    fa52:	002b      	movs	r3, r5
    fa54:	3508      	adds	r5, #8
    fa56:	2f00      	cmp	r7, #0
    fa58:	d0fa      	beq.n	fa50 <__ssprint_r+0xb4>
    fa5a:	681b      	ldr	r3, [r3, #0]
    fa5c:	46a0      	mov	r8, r4
    fa5e:	4699      	mov	r9, r3
    fa60:	42a7      	cmp	r7, r4
    fa62:	d2ae      	bcs.n	f9c2 <__ssprint_r+0x26>
    fa64:	003c      	movs	r4, r7
    fa66:	46b8      	mov	r8, r7
    fa68:	e7e1      	b.n	fa2e <__ssprint_r+0x92>
    fa6a:	9801      	ldr	r0, [sp, #4]
    fa6c:	f7fe fb7c 	bl	e168 <_realloc_r>
    fa70:	1e04      	subs	r4, r0, #0
    fa72:	d1d1      	bne.n	fa18 <__ssprint_r+0x7c>
    fa74:	9c01      	ldr	r4, [sp, #4]
    fa76:	6931      	ldr	r1, [r6, #16]
    fa78:	0020      	movs	r0, r4
    fa7a:	f7fc ffbf 	bl	c9fc <_free_r>
    fa7e:	230c      	movs	r3, #12
    fa80:	6023      	str	r3, [r4, #0]
    fa82:	2240      	movs	r2, #64	; 0x40
    fa84:	89b3      	ldrh	r3, [r6, #12]
    fa86:	2001      	movs	r0, #1
    fa88:	4313      	orrs	r3, r2
    fa8a:	81b3      	strh	r3, [r6, #12]
    fa8c:	4652      	mov	r2, sl
    fa8e:	2300      	movs	r3, #0
    fa90:	4240      	negs	r0, r0
    fa92:	6093      	str	r3, [r2, #8]
    fa94:	6053      	str	r3, [r2, #4]
    fa96:	e003      	b.n	faa0 <__ssprint_r+0x104>
    fa98:	2300      	movs	r3, #0
    fa9a:	4652      	mov	r2, sl
    fa9c:	2000      	movs	r0, #0
    fa9e:	6053      	str	r3, [r2, #4]
    faa0:	b003      	add	sp, #12
    faa2:	bc3c      	pop	{r2, r3, r4, r5}
    faa4:	4690      	mov	r8, r2
    faa6:	4699      	mov	r9, r3
    faa8:	46a2      	mov	sl, r4
    faaa:	46ab      	mov	fp, r5
    faac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    faae:	230c      	movs	r3, #12
    fab0:	9a01      	ldr	r2, [sp, #4]
    fab2:	6013      	str	r3, [r2, #0]
    fab4:	e7e5      	b.n	fa82 <__ssprint_r+0xe6>
    fab6:	46c0      	nop			; (mov r8, r8)
    fab8:	fffffb7f 	.word	0xfffffb7f

0000fabc <_sungetc_r>:
    fabc:	b570      	push	{r4, r5, r6, lr}
    fabe:	0014      	movs	r4, r2
    fac0:	1c4b      	adds	r3, r1, #1
    fac2:	d01b      	beq.n	fafc <_sungetc_r+0x40>
    fac4:	8993      	ldrh	r3, [r2, #12]
    fac6:	2220      	movs	r2, #32
    fac8:	25ff      	movs	r5, #255	; 0xff
    faca:	4393      	bics	r3, r2
    facc:	81a3      	strh	r3, [r4, #12]
    face:	6b23      	ldr	r3, [r4, #48]	; 0x30
    fad0:	b2ce      	uxtb	r6, r1
    fad2:	400d      	ands	r5, r1
    fad4:	2b00      	cmp	r3, #0
    fad6:	d014      	beq.n	fb02 <_sungetc_r+0x46>
    fad8:	6863      	ldr	r3, [r4, #4]
    fada:	6b62      	ldr	r2, [r4, #52]	; 0x34
    fadc:	4293      	cmp	r3, r2
    fade:	da08      	bge.n	faf2 <_sungetc_r+0x36>
    fae0:	6823      	ldr	r3, [r4, #0]
    fae2:	3b01      	subs	r3, #1
    fae4:	6023      	str	r3, [r4, #0]
    fae6:	701e      	strb	r6, [r3, #0]
    fae8:	6863      	ldr	r3, [r4, #4]
    faea:	3301      	adds	r3, #1
    faec:	6063      	str	r3, [r4, #4]
    faee:	0028      	movs	r0, r5
    faf0:	bd70      	pop	{r4, r5, r6, pc}
    faf2:	0021      	movs	r1, r4
    faf4:	f000 f88c 	bl	fc10 <__submore>
    faf8:	2800      	cmp	r0, #0
    fafa:	d0f1      	beq.n	fae0 <_sungetc_r+0x24>
    fafc:	2501      	movs	r5, #1
    fafe:	426d      	negs	r5, r5
    fb00:	e7f5      	b.n	faee <_sungetc_r+0x32>
    fb02:	6922      	ldr	r2, [r4, #16]
    fb04:	6823      	ldr	r3, [r4, #0]
    fb06:	2a00      	cmp	r2, #0
    fb08:	d005      	beq.n	fb16 <_sungetc_r+0x5a>
    fb0a:	429a      	cmp	r2, r3
    fb0c:	d203      	bcs.n	fb16 <_sungetc_r+0x5a>
    fb0e:	1e5a      	subs	r2, r3, #1
    fb10:	7811      	ldrb	r1, [r2, #0]
    fb12:	428d      	cmp	r5, r1
    fb14:	d00f      	beq.n	fb36 <_sungetc_r+0x7a>
    fb16:	63a3      	str	r3, [r4, #56]	; 0x38
    fb18:	0023      	movs	r3, r4
    fb1a:	3340      	adds	r3, #64	; 0x40
    fb1c:	6323      	str	r3, [r4, #48]	; 0x30
    fb1e:	2303      	movs	r3, #3
    fb20:	6862      	ldr	r2, [r4, #4]
    fb22:	6363      	str	r3, [r4, #52]	; 0x34
    fb24:	333f      	adds	r3, #63	; 0x3f
    fb26:	63e2      	str	r2, [r4, #60]	; 0x3c
    fb28:	54e6      	strb	r6, [r4, r3]
    fb2a:	0023      	movs	r3, r4
    fb2c:	3342      	adds	r3, #66	; 0x42
    fb2e:	6023      	str	r3, [r4, #0]
    fb30:	2301      	movs	r3, #1
    fb32:	6063      	str	r3, [r4, #4]
    fb34:	e7db      	b.n	faee <_sungetc_r+0x32>
    fb36:	6863      	ldr	r3, [r4, #4]
    fb38:	6022      	str	r2, [r4, #0]
    fb3a:	3301      	adds	r3, #1
    fb3c:	6063      	str	r3, [r4, #4]
    fb3e:	e7d6      	b.n	faee <_sungetc_r+0x32>

0000fb40 <__ssrefill_r>:
    fb40:	b510      	push	{r4, lr}
    fb42:	000c      	movs	r4, r1
    fb44:	6b09      	ldr	r1, [r1, #48]	; 0x30
    fb46:	2900      	cmp	r1, #0
    fb48:	d00f      	beq.n	fb6a <__ssrefill_r+0x2a>
    fb4a:	0023      	movs	r3, r4
    fb4c:	3340      	adds	r3, #64	; 0x40
    fb4e:	4299      	cmp	r1, r3
    fb50:	d001      	beq.n	fb56 <__ssrefill_r+0x16>
    fb52:	f7fc ff53 	bl	c9fc <_free_r>
    fb56:	2300      	movs	r3, #0
    fb58:	6323      	str	r3, [r4, #48]	; 0x30
    fb5a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    fb5c:	6063      	str	r3, [r4, #4]
    fb5e:	2b00      	cmp	r3, #0
    fb60:	d003      	beq.n	fb6a <__ssrefill_r+0x2a>
    fb62:	2000      	movs	r0, #0
    fb64:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    fb66:	6023      	str	r3, [r4, #0]
    fb68:	bd10      	pop	{r4, pc}
    fb6a:	6923      	ldr	r3, [r4, #16]
    fb6c:	2220      	movs	r2, #32
    fb6e:	6023      	str	r3, [r4, #0]
    fb70:	2300      	movs	r3, #0
    fb72:	2001      	movs	r0, #1
    fb74:	6063      	str	r3, [r4, #4]
    fb76:	89a3      	ldrh	r3, [r4, #12]
    fb78:	4240      	negs	r0, r0
    fb7a:	4313      	orrs	r3, r2
    fb7c:	81a3      	strh	r3, [r4, #12]
    fb7e:	e7f3      	b.n	fb68 <__ssrefill_r+0x28>

0000fb80 <_sfread_r>:
    fb80:	b5f0      	push	{r4, r5, r6, r7, lr}
    fb82:	46de      	mov	lr, fp
    fb84:	4657      	mov	r7, sl
    fb86:	4645      	mov	r5, r8
    fb88:	464e      	mov	r6, r9
    fb8a:	469b      	mov	fp, r3
    fb8c:	b5e0      	push	{r5, r6, r7, lr}
    fb8e:	b083      	sub	sp, #12
    fb90:	0013      	movs	r3, r2
    fb92:	9201      	str	r2, [sp, #4]
    fb94:	465a      	mov	r2, fp
    fb96:	4353      	muls	r3, r2
    fb98:	4680      	mov	r8, r0
    fb9a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    fb9c:	469a      	mov	sl, r3
    fb9e:	2b00      	cmp	r3, #0
    fba0:	d026      	beq.n	fbf0 <_sfread_r+0x70>
    fba2:	001f      	movs	r7, r3
    fba4:	2300      	movs	r3, #0
    fba6:	000e      	movs	r6, r1
    fba8:	4699      	mov	r9, r3
    fbaa:	e011      	b.n	fbd0 <_sfread_r+0x50>
    fbac:	6821      	ldr	r1, [r4, #0]
    fbae:	0030      	movs	r0, r6
    fbb0:	002a      	movs	r2, r5
    fbb2:	f7f7 f879 	bl	6ca8 <memcpy>
    fbb6:	6823      	ldr	r3, [r4, #0]
    fbb8:	0021      	movs	r1, r4
    fbba:	195b      	adds	r3, r3, r5
    fbbc:	6023      	str	r3, [r4, #0]
    fbbe:	464b      	mov	r3, r9
    fbc0:	4640      	mov	r0, r8
    fbc2:	6063      	str	r3, [r4, #4]
    fbc4:	1976      	adds	r6, r6, r5
    fbc6:	1b7f      	subs	r7, r7, r5
    fbc8:	f7ff ffba 	bl	fb40 <__ssrefill_r>
    fbcc:	2800      	cmp	r0, #0
    fbce:	d117      	bne.n	fc00 <_sfread_r+0x80>
    fbd0:	6865      	ldr	r5, [r4, #4]
    fbd2:	42af      	cmp	r7, r5
    fbd4:	d8ea      	bhi.n	fbac <_sfread_r+0x2c>
    fbd6:	003a      	movs	r2, r7
    fbd8:	6821      	ldr	r1, [r4, #0]
    fbda:	0030      	movs	r0, r6
    fbdc:	f7f7 f864 	bl	6ca8 <memcpy>
    fbe0:	6863      	ldr	r3, [r4, #4]
    fbe2:	46da      	mov	sl, fp
    fbe4:	1bdb      	subs	r3, r3, r7
    fbe6:	6063      	str	r3, [r4, #4]
    fbe8:	6823      	ldr	r3, [r4, #0]
    fbea:	469c      	mov	ip, r3
    fbec:	4467      	add	r7, ip
    fbee:	6027      	str	r7, [r4, #0]
    fbf0:	4650      	mov	r0, sl
    fbf2:	b003      	add	sp, #12
    fbf4:	bc3c      	pop	{r2, r3, r4, r5}
    fbf6:	4690      	mov	r8, r2
    fbf8:	4699      	mov	r9, r3
    fbfa:	46a2      	mov	sl, r4
    fbfc:	46ab      	mov	fp, r5
    fbfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    fc00:	4653      	mov	r3, sl
    fc02:	9901      	ldr	r1, [sp, #4]
    fc04:	1bd8      	subs	r0, r3, r7
    fc06:	f7f4 fd5b 	bl	46c0 <__udivsi3>
    fc0a:	4682      	mov	sl, r0
    fc0c:	e7f0      	b.n	fbf0 <_sfread_r+0x70>
    fc0e:	46c0      	nop			; (mov r8, r8)

0000fc10 <__submore>:
    fc10:	b5f0      	push	{r4, r5, r6, r7, lr}
    fc12:	000c      	movs	r4, r1
    fc14:	0023      	movs	r3, r4
    fc16:	46c6      	mov	lr, r8
    fc18:	6b09      	ldr	r1, [r1, #48]	; 0x30
    fc1a:	3340      	adds	r3, #64	; 0x40
    fc1c:	b500      	push	{lr}
    fc1e:	4299      	cmp	r1, r3
    fc20:	d015      	beq.n	fc4e <__submore+0x3e>
    fc22:	6b66      	ldr	r6, [r4, #52]	; 0x34
    fc24:	0077      	lsls	r7, r6, #1
    fc26:	003a      	movs	r2, r7
    fc28:	f7fe fa9e 	bl	e168 <_realloc_r>
    fc2c:	1e05      	subs	r5, r0, #0
    fc2e:	d028      	beq.n	fc82 <__submore+0x72>
    fc30:	1983      	adds	r3, r0, r6
    fc32:	4698      	mov	r8, r3
    fc34:	0001      	movs	r1, r0
    fc36:	0032      	movs	r2, r6
    fc38:	0018      	movs	r0, r3
    fc3a:	f7f7 f835 	bl	6ca8 <memcpy>
    fc3e:	4643      	mov	r3, r8
    fc40:	2000      	movs	r0, #0
    fc42:	6023      	str	r3, [r4, #0]
    fc44:	6325      	str	r5, [r4, #48]	; 0x30
    fc46:	6367      	str	r7, [r4, #52]	; 0x34
    fc48:	bc04      	pop	{r2}
    fc4a:	4690      	mov	r8, r2
    fc4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    fc4e:	2580      	movs	r5, #128	; 0x80
    fc50:	00ed      	lsls	r5, r5, #3
    fc52:	0029      	movs	r1, r5
    fc54:	f7fd fa2a 	bl	d0ac <_malloc_r>
    fc58:	2800      	cmp	r0, #0
    fc5a:	d012      	beq.n	fc82 <__submore+0x72>
    fc5c:	2342      	movs	r3, #66	; 0x42
    fc5e:	6320      	str	r0, [r4, #48]	; 0x30
    fc60:	6365      	str	r5, [r4, #52]	; 0x34
    fc62:	5ce2      	ldrb	r2, [r4, r3]
    fc64:	4b08      	ldr	r3, [pc, #32]	; (fc88 <__submore+0x78>)
    fc66:	54c2      	strb	r2, [r0, r3]
    fc68:	2341      	movs	r3, #65	; 0x41
    fc6a:	5ce2      	ldrb	r2, [r4, r3]
    fc6c:	4b07      	ldr	r3, [pc, #28]	; (fc8c <__submore+0x7c>)
    fc6e:	54c2      	strb	r2, [r0, r3]
    fc70:	2340      	movs	r3, #64	; 0x40
    fc72:	5ce2      	ldrb	r2, [r4, r3]
    fc74:	4b06      	ldr	r3, [pc, #24]	; (fc90 <__submore+0x80>)
    fc76:	469c      	mov	ip, r3
    fc78:	54c2      	strb	r2, [r0, r3]
    fc7a:	4460      	add	r0, ip
    fc7c:	6020      	str	r0, [r4, #0]
    fc7e:	2000      	movs	r0, #0
    fc80:	e7e2      	b.n	fc48 <__submore+0x38>
    fc82:	2001      	movs	r0, #1
    fc84:	4240      	negs	r0, r0
    fc86:	e7df      	b.n	fc48 <__submore+0x38>
    fc88:	000003ff 	.word	0x000003ff
    fc8c:	000003fe 	.word	0x000003fe
    fc90:	000003fd 	.word	0x000003fd

0000fc94 <__sprint_r.part.0>:
    fc94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    fc96:	464e      	mov	r6, r9
    fc98:	4645      	mov	r5, r8
    fc9a:	46de      	mov	lr, fp
    fc9c:	4657      	mov	r7, sl
    fc9e:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    fca0:	b5e0      	push	{r5, r6, r7, lr}
    fca2:	4680      	mov	r8, r0
    fca4:	000e      	movs	r6, r1
    fca6:	4691      	mov	r9, r2
    fca8:	049b      	lsls	r3, r3, #18
    fcaa:	d531      	bpl.n	fd10 <__sprint_r.part.0+0x7c>
    fcac:	6813      	ldr	r3, [r2, #0]
    fcae:	469a      	mov	sl, r3
    fcb0:	6893      	ldr	r3, [r2, #8]
    fcb2:	2b00      	cmp	r3, #0
    fcb4:	d02a      	beq.n	fd0c <__sprint_r.part.0+0x78>
    fcb6:	4652      	mov	r2, sl
    fcb8:	6852      	ldr	r2, [r2, #4]
    fcba:	2500      	movs	r5, #0
    fcbc:	4693      	mov	fp, r2
    fcbe:	0897      	lsrs	r7, r2, #2
    fcc0:	4652      	mov	r2, sl
    fcc2:	6814      	ldr	r4, [r2, #0]
    fcc4:	d104      	bne.n	fcd0 <__sprint_r.part.0+0x3c>
    fcc6:	e016      	b.n	fcf6 <__sprint_r.part.0+0x62>
    fcc8:	3501      	adds	r5, #1
    fcca:	3404      	adds	r4, #4
    fccc:	42af      	cmp	r7, r5
    fcce:	d010      	beq.n	fcf2 <__sprint_r.part.0+0x5e>
    fcd0:	0032      	movs	r2, r6
    fcd2:	6821      	ldr	r1, [r4, #0]
    fcd4:	4640      	mov	r0, r8
    fcd6:	f000 f98f 	bl	fff8 <_fputwc_r>
    fcda:	1c43      	adds	r3, r0, #1
    fcdc:	d1f4      	bne.n	fcc8 <__sprint_r.part.0+0x34>
    fcde:	464a      	mov	r2, r9
    fce0:	2300      	movs	r3, #0
    fce2:	6093      	str	r3, [r2, #8]
    fce4:	6053      	str	r3, [r2, #4]
    fce6:	bc3c      	pop	{r2, r3, r4, r5}
    fce8:	4690      	mov	r8, r2
    fcea:	4699      	mov	r9, r3
    fcec:	46a2      	mov	sl, r4
    fcee:	46ab      	mov	fp, r5
    fcf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    fcf2:	464b      	mov	r3, r9
    fcf4:	689b      	ldr	r3, [r3, #8]
    fcf6:	465a      	mov	r2, fp
    fcf8:	2103      	movs	r1, #3
    fcfa:	438a      	bics	r2, r1
    fcfc:	1a9b      	subs	r3, r3, r2
    fcfe:	464a      	mov	r2, r9
    fd00:	6093      	str	r3, [r2, #8]
    fd02:	2208      	movs	r2, #8
    fd04:	4694      	mov	ip, r2
    fd06:	44e2      	add	sl, ip
    fd08:	2b00      	cmp	r3, #0
    fd0a:	d1d4      	bne.n	fcb6 <__sprint_r.part.0+0x22>
    fd0c:	2000      	movs	r0, #0
    fd0e:	e7e6      	b.n	fcde <__sprint_r.part.0+0x4a>
    fd10:	f7fc ff52 	bl	cbb8 <__sfvwrite_r>
    fd14:	e7e3      	b.n	fcde <__sprint_r.part.0+0x4a>
    fd16:	46c0      	nop			; (mov r8, r8)

0000fd18 <__sprint_r>:
    fd18:	6893      	ldr	r3, [r2, #8]
    fd1a:	b510      	push	{r4, lr}
    fd1c:	2b00      	cmp	r3, #0
    fd1e:	d002      	beq.n	fd26 <__sprint_r+0xe>
    fd20:	f7ff ffb8 	bl	fc94 <__sprint_r.part.0>
    fd24:	bd10      	pop	{r4, pc}
    fd26:	6053      	str	r3, [r2, #4]
    fd28:	2000      	movs	r0, #0
    fd2a:	e7fb      	b.n	fd24 <__sprint_r+0xc>

0000fd2c <__ascii_wctomb>:
    fd2c:	2900      	cmp	r1, #0
    fd2e:	d004      	beq.n	fd3a <__ascii_wctomb+0xe>
    fd30:	2aff      	cmp	r2, #255	; 0xff
    fd32:	d804      	bhi.n	fd3e <__ascii_wctomb+0x12>
    fd34:	2001      	movs	r0, #1
    fd36:	700a      	strb	r2, [r1, #0]
    fd38:	4770      	bx	lr
    fd3a:	2000      	movs	r0, #0
    fd3c:	e7fc      	b.n	fd38 <__ascii_wctomb+0xc>
    fd3e:	238a      	movs	r3, #138	; 0x8a
    fd40:	6003      	str	r3, [r0, #0]
    fd42:	2001      	movs	r0, #1
    fd44:	4240      	negs	r0, r0
    fd46:	e7f7      	b.n	fd38 <__ascii_wctomb+0xc>

0000fd48 <__register_exitproc>:
    fd48:	b5f0      	push	{r4, r5, r6, r7, lr}
    fd4a:	464e      	mov	r6, r9
    fd4c:	4645      	mov	r5, r8
    fd4e:	46de      	mov	lr, fp
    fd50:	4657      	mov	r7, sl
    fd52:	b5e0      	push	{r5, r6, r7, lr}
    fd54:	4d36      	ldr	r5, [pc, #216]	; (fe30 <__register_exitproc+0xe8>)
    fd56:	b083      	sub	sp, #12
    fd58:	0006      	movs	r6, r0
    fd5a:	6828      	ldr	r0, [r5, #0]
    fd5c:	4698      	mov	r8, r3
    fd5e:	000f      	movs	r7, r1
    fd60:	4691      	mov	r9, r2
    fd62:	f7fd f913 	bl	cf8c <__retarget_lock_acquire_recursive>
    fd66:	4b33      	ldr	r3, [pc, #204]	; (fe34 <__register_exitproc+0xec>)
    fd68:	681c      	ldr	r4, [r3, #0]
    fd6a:	23a4      	movs	r3, #164	; 0xa4
    fd6c:	005b      	lsls	r3, r3, #1
    fd6e:	58e0      	ldr	r0, [r4, r3]
    fd70:	2800      	cmp	r0, #0
    fd72:	d052      	beq.n	fe1a <__register_exitproc+0xd2>
    fd74:	6843      	ldr	r3, [r0, #4]
    fd76:	2b1f      	cmp	r3, #31
    fd78:	dc13      	bgt.n	fda2 <__register_exitproc+0x5a>
    fd7a:	1c5a      	adds	r2, r3, #1
    fd7c:	9201      	str	r2, [sp, #4]
    fd7e:	2e00      	cmp	r6, #0
    fd80:	d128      	bne.n	fdd4 <__register_exitproc+0x8c>
    fd82:	9a01      	ldr	r2, [sp, #4]
    fd84:	3302      	adds	r3, #2
    fd86:	009b      	lsls	r3, r3, #2
    fd88:	6042      	str	r2, [r0, #4]
    fd8a:	501f      	str	r7, [r3, r0]
    fd8c:	6828      	ldr	r0, [r5, #0]
    fd8e:	f7fd f8ff 	bl	cf90 <__retarget_lock_release_recursive>
    fd92:	2000      	movs	r0, #0
    fd94:	b003      	add	sp, #12
    fd96:	bc3c      	pop	{r2, r3, r4, r5}
    fd98:	4690      	mov	r8, r2
    fd9a:	4699      	mov	r9, r3
    fd9c:	46a2      	mov	sl, r4
    fd9e:	46ab      	mov	fp, r5
    fda0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    fda2:	4b25      	ldr	r3, [pc, #148]	; (fe38 <__register_exitproc+0xf0>)
    fda4:	2b00      	cmp	r3, #0
    fda6:	d03d      	beq.n	fe24 <__register_exitproc+0xdc>
    fda8:	20c8      	movs	r0, #200	; 0xc8
    fdaa:	0040      	lsls	r0, r0, #1
    fdac:	e000      	b.n	fdb0 <__register_exitproc+0x68>
    fdae:	bf00      	nop
    fdb0:	2800      	cmp	r0, #0
    fdb2:	d037      	beq.n	fe24 <__register_exitproc+0xdc>
    fdb4:	22a4      	movs	r2, #164	; 0xa4
    fdb6:	2300      	movs	r3, #0
    fdb8:	0052      	lsls	r2, r2, #1
    fdba:	58a1      	ldr	r1, [r4, r2]
    fdbc:	6043      	str	r3, [r0, #4]
    fdbe:	6001      	str	r1, [r0, #0]
    fdc0:	50a0      	str	r0, [r4, r2]
    fdc2:	3240      	adds	r2, #64	; 0x40
    fdc4:	5083      	str	r3, [r0, r2]
    fdc6:	3204      	adds	r2, #4
    fdc8:	5083      	str	r3, [r0, r2]
    fdca:	3301      	adds	r3, #1
    fdcc:	9301      	str	r3, [sp, #4]
    fdce:	2300      	movs	r3, #0
    fdd0:	2e00      	cmp	r6, #0
    fdd2:	d0d6      	beq.n	fd82 <__register_exitproc+0x3a>
    fdd4:	009a      	lsls	r2, r3, #2
    fdd6:	4692      	mov	sl, r2
    fdd8:	4482      	add	sl, r0
    fdda:	464a      	mov	r2, r9
    fddc:	2188      	movs	r1, #136	; 0x88
    fdde:	4654      	mov	r4, sl
    fde0:	5062      	str	r2, [r4, r1]
    fde2:	22c4      	movs	r2, #196	; 0xc4
    fde4:	0052      	lsls	r2, r2, #1
    fde6:	4691      	mov	r9, r2
    fde8:	4481      	add	r9, r0
    fdea:	464a      	mov	r2, r9
    fdec:	3987      	subs	r1, #135	; 0x87
    fdee:	4099      	lsls	r1, r3
    fdf0:	6812      	ldr	r2, [r2, #0]
    fdf2:	468b      	mov	fp, r1
    fdf4:	430a      	orrs	r2, r1
    fdf6:	4694      	mov	ip, r2
    fdf8:	464a      	mov	r2, r9
    fdfa:	4661      	mov	r1, ip
    fdfc:	6011      	str	r1, [r2, #0]
    fdfe:	2284      	movs	r2, #132	; 0x84
    fe00:	4641      	mov	r1, r8
    fe02:	0052      	lsls	r2, r2, #1
    fe04:	50a1      	str	r1, [r4, r2]
    fe06:	2e02      	cmp	r6, #2
    fe08:	d1bb      	bne.n	fd82 <__register_exitproc+0x3a>
    fe0a:	0002      	movs	r2, r0
    fe0c:	465c      	mov	r4, fp
    fe0e:	328d      	adds	r2, #141	; 0x8d
    fe10:	32ff      	adds	r2, #255	; 0xff
    fe12:	6811      	ldr	r1, [r2, #0]
    fe14:	430c      	orrs	r4, r1
    fe16:	6014      	str	r4, [r2, #0]
    fe18:	e7b3      	b.n	fd82 <__register_exitproc+0x3a>
    fe1a:	0020      	movs	r0, r4
    fe1c:	304d      	adds	r0, #77	; 0x4d
    fe1e:	30ff      	adds	r0, #255	; 0xff
    fe20:	50e0      	str	r0, [r4, r3]
    fe22:	e7a7      	b.n	fd74 <__register_exitproc+0x2c>
    fe24:	6828      	ldr	r0, [r5, #0]
    fe26:	f7fd f8b3 	bl	cf90 <__retarget_lock_release_recursive>
    fe2a:	2001      	movs	r0, #1
    fe2c:	4240      	negs	r0, r0
    fe2e:	e7b1      	b.n	fd94 <__register_exitproc+0x4c>
    fe30:	20000498 	.word	0x20000498
    fe34:	00013848 	.word	0x00013848
    fe38:	00000000 	.word	0x00000000

0000fe3c <_calloc_r>:
    fe3c:	b510      	push	{r4, lr}
    fe3e:	4351      	muls	r1, r2
    fe40:	f7fd f934 	bl	d0ac <_malloc_r>
    fe44:	1e04      	subs	r4, r0, #0
    fe46:	d01c      	beq.n	fe82 <_calloc_r+0x46>
    fe48:	0003      	movs	r3, r0
    fe4a:	3b08      	subs	r3, #8
    fe4c:	685a      	ldr	r2, [r3, #4]
    fe4e:	2303      	movs	r3, #3
    fe50:	439a      	bics	r2, r3
    fe52:	3a04      	subs	r2, #4
    fe54:	2a24      	cmp	r2, #36	; 0x24
    fe56:	d816      	bhi.n	fe86 <_calloc_r+0x4a>
    fe58:	0003      	movs	r3, r0
    fe5a:	2a13      	cmp	r2, #19
    fe5c:	d90d      	bls.n	fe7a <_calloc_r+0x3e>
    fe5e:	2100      	movs	r1, #0
    fe60:	3308      	adds	r3, #8
    fe62:	6001      	str	r1, [r0, #0]
    fe64:	6041      	str	r1, [r0, #4]
    fe66:	2a1b      	cmp	r2, #27
    fe68:	d907      	bls.n	fe7a <_calloc_r+0x3e>
    fe6a:	6081      	str	r1, [r0, #8]
    fe6c:	60c1      	str	r1, [r0, #12]
    fe6e:	2a24      	cmp	r2, #36	; 0x24
    fe70:	d10d      	bne.n	fe8e <_calloc_r+0x52>
    fe72:	0003      	movs	r3, r0
    fe74:	6101      	str	r1, [r0, #16]
    fe76:	3318      	adds	r3, #24
    fe78:	6141      	str	r1, [r0, #20]
    fe7a:	2200      	movs	r2, #0
    fe7c:	601a      	str	r2, [r3, #0]
    fe7e:	605a      	str	r2, [r3, #4]
    fe80:	609a      	str	r2, [r3, #8]
    fe82:	0020      	movs	r0, r4
    fe84:	bd10      	pop	{r4, pc}
    fe86:	2100      	movs	r1, #0
    fe88:	f7f6 ff50 	bl	6d2c <memset>
    fe8c:	e7f9      	b.n	fe82 <_calloc_r+0x46>
    fe8e:	0003      	movs	r3, r0
    fe90:	3310      	adds	r3, #16
    fe92:	e7f2      	b.n	fe7a <_calloc_r+0x3e>

0000fe94 <_fclose_r>:
    fe94:	b570      	push	{r4, r5, r6, lr}
    fe96:	0005      	movs	r5, r0
    fe98:	1e0c      	subs	r4, r1, #0
    fe9a:	d040      	beq.n	ff1e <_fclose_r+0x8a>
    fe9c:	2800      	cmp	r0, #0
    fe9e:	d002      	beq.n	fea6 <_fclose_r+0x12>
    fea0:	6b83      	ldr	r3, [r0, #56]	; 0x38
    fea2:	2b00      	cmp	r3, #0
    fea4:	d03e      	beq.n	ff24 <_fclose_r+0x90>
    fea6:	2601      	movs	r6, #1
    fea8:	6e63      	ldr	r3, [r4, #100]	; 0x64
    feaa:	4233      	tst	r3, r6
    feac:	d133      	bne.n	ff16 <_fclose_r+0x82>
    feae:	89a3      	ldrh	r3, [r4, #12]
    feb0:	059b      	lsls	r3, r3, #22
    feb2:	d543      	bpl.n	ff3c <_fclose_r+0xa8>
    feb4:	0021      	movs	r1, r4
    feb6:	0028      	movs	r0, r5
    feb8:	f7fc fbf4 	bl	c6a4 <__sflush_r>
    febc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    febe:	0006      	movs	r6, r0
    fec0:	2b00      	cmp	r3, #0
    fec2:	d004      	beq.n	fece <_fclose_r+0x3a>
    fec4:	69e1      	ldr	r1, [r4, #28]
    fec6:	0028      	movs	r0, r5
    fec8:	4798      	blx	r3
    feca:	2800      	cmp	r0, #0
    fecc:	db44      	blt.n	ff58 <_fclose_r+0xc4>
    fece:	89a3      	ldrh	r3, [r4, #12]
    fed0:	061b      	lsls	r3, r3, #24
    fed2:	d42a      	bmi.n	ff2a <_fclose_r+0x96>
    fed4:	6b21      	ldr	r1, [r4, #48]	; 0x30
    fed6:	2900      	cmp	r1, #0
    fed8:	d008      	beq.n	feec <_fclose_r+0x58>
    feda:	0023      	movs	r3, r4
    fedc:	3340      	adds	r3, #64	; 0x40
    fede:	4299      	cmp	r1, r3
    fee0:	d002      	beq.n	fee8 <_fclose_r+0x54>
    fee2:	0028      	movs	r0, r5
    fee4:	f7fc fd8a 	bl	c9fc <_free_r>
    fee8:	2300      	movs	r3, #0
    feea:	6323      	str	r3, [r4, #48]	; 0x30
    feec:	6c61      	ldr	r1, [r4, #68]	; 0x44
    feee:	2900      	cmp	r1, #0
    fef0:	d004      	beq.n	fefc <_fclose_r+0x68>
    fef2:	0028      	movs	r0, r5
    fef4:	f7fc fd82 	bl	c9fc <_free_r>
    fef8:	2300      	movs	r3, #0
    fefa:	6463      	str	r3, [r4, #68]	; 0x44
    fefc:	f7fc fd04 	bl	c908 <__sfp_lock_acquire>
    ff00:	2300      	movs	r3, #0
    ff02:	81a3      	strh	r3, [r4, #12]
    ff04:	6e63      	ldr	r3, [r4, #100]	; 0x64
    ff06:	07db      	lsls	r3, r3, #31
    ff08:	d514      	bpl.n	ff34 <_fclose_r+0xa0>
    ff0a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    ff0c:	f7fd f83c 	bl	cf88 <__retarget_lock_close_recursive>
    ff10:	f7fc fd02 	bl	c918 <__sfp_lock_release>
    ff14:	e004      	b.n	ff20 <_fclose_r+0x8c>
    ff16:	220c      	movs	r2, #12
    ff18:	5ea3      	ldrsh	r3, [r4, r2]
    ff1a:	2b00      	cmp	r3, #0
    ff1c:	d1ca      	bne.n	feb4 <_fclose_r+0x20>
    ff1e:	2600      	movs	r6, #0
    ff20:	0030      	movs	r0, r6
    ff22:	bd70      	pop	{r4, r5, r6, pc}
    ff24:	f7fc fcc0 	bl	c8a8 <__sinit>
    ff28:	e7bd      	b.n	fea6 <_fclose_r+0x12>
    ff2a:	6921      	ldr	r1, [r4, #16]
    ff2c:	0028      	movs	r0, r5
    ff2e:	f7fc fd65 	bl	c9fc <_free_r>
    ff32:	e7cf      	b.n	fed4 <_fclose_r+0x40>
    ff34:	6da0      	ldr	r0, [r4, #88]	; 0x58
    ff36:	f7fd f82b 	bl	cf90 <__retarget_lock_release_recursive>
    ff3a:	e7e6      	b.n	ff0a <_fclose_r+0x76>
    ff3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    ff3e:	f7fd f825 	bl	cf8c <__retarget_lock_acquire_recursive>
    ff42:	220c      	movs	r2, #12
    ff44:	5ea3      	ldrsh	r3, [r4, r2]
    ff46:	2b00      	cmp	r3, #0
    ff48:	d1b4      	bne.n	feb4 <_fclose_r+0x20>
    ff4a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    ff4c:	401e      	ands	r6, r3
    ff4e:	d1e6      	bne.n	ff1e <_fclose_r+0x8a>
    ff50:	6da0      	ldr	r0, [r4, #88]	; 0x58
    ff52:	f7fd f81d 	bl	cf90 <__retarget_lock_release_recursive>
    ff56:	e7e3      	b.n	ff20 <_fclose_r+0x8c>
    ff58:	2601      	movs	r6, #1
    ff5a:	4276      	negs	r6, r6
    ff5c:	e7b7      	b.n	fece <_fclose_r+0x3a>
    ff5e:	46c0      	nop			; (mov r8, r8)

0000ff60 <__fputwc>:
    ff60:	b5f0      	push	{r4, r5, r6, r7, lr}
    ff62:	46ce      	mov	lr, r9
    ff64:	4647      	mov	r7, r8
    ff66:	b580      	push	{r7, lr}
    ff68:	b085      	sub	sp, #20
    ff6a:	4680      	mov	r8, r0
    ff6c:	4689      	mov	r9, r1
    ff6e:	0014      	movs	r4, r2
    ff70:	f7fc ffd6 	bl	cf20 <__locale_mb_cur_max>
    ff74:	2801      	cmp	r0, #1
    ff76:	d031      	beq.n	ffdc <__fputwc+0x7c>
    ff78:	0023      	movs	r3, r4
    ff7a:	af03      	add	r7, sp, #12
    ff7c:	335c      	adds	r3, #92	; 0x5c
    ff7e:	464a      	mov	r2, r9
    ff80:	0039      	movs	r1, r7
    ff82:	4640      	mov	r0, r8
    ff84:	f000 fcaa 	bl	108dc <_wcrtomb_r>
    ff88:	0006      	movs	r6, r0
    ff8a:	1c43      	adds	r3, r0, #1
    ff8c:	d021      	beq.n	ffd2 <__fputwc+0x72>
    ff8e:	2800      	cmp	r0, #0
    ff90:	d030      	beq.n	fff4 <__fputwc+0x94>
    ff92:	7839      	ldrb	r1, [r7, #0]
    ff94:	2500      	movs	r5, #0
    ff96:	e007      	b.n	ffa8 <__fputwc+0x48>
    ff98:	6823      	ldr	r3, [r4, #0]
    ff9a:	1c5a      	adds	r2, r3, #1
    ff9c:	6022      	str	r2, [r4, #0]
    ff9e:	7019      	strb	r1, [r3, #0]
    ffa0:	3501      	adds	r5, #1
    ffa2:	42b5      	cmp	r5, r6
    ffa4:	d226      	bcs.n	fff4 <__fputwc+0x94>
    ffa6:	5d79      	ldrb	r1, [r7, r5]
    ffa8:	68a3      	ldr	r3, [r4, #8]
    ffaa:	3b01      	subs	r3, #1
    ffac:	60a3      	str	r3, [r4, #8]
    ffae:	2b00      	cmp	r3, #0
    ffb0:	daf2      	bge.n	ff98 <__fputwc+0x38>
    ffb2:	69a2      	ldr	r2, [r4, #24]
    ffb4:	4293      	cmp	r3, r2
    ffb6:	db01      	blt.n	ffbc <__fputwc+0x5c>
    ffb8:	290a      	cmp	r1, #10
    ffba:	d1ed      	bne.n	ff98 <__fputwc+0x38>
    ffbc:	0022      	movs	r2, r4
    ffbe:	4640      	mov	r0, r8
    ffc0:	f7fb fa00 	bl	b3c4 <__swbuf_r>
    ffc4:	1c43      	adds	r3, r0, #1
    ffc6:	d1eb      	bne.n	ffa0 <__fputwc+0x40>
    ffc8:	b005      	add	sp, #20
    ffca:	bc0c      	pop	{r2, r3}
    ffcc:	4690      	mov	r8, r2
    ffce:	4699      	mov	r9, r3
    ffd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ffd2:	2240      	movs	r2, #64	; 0x40
    ffd4:	89a3      	ldrh	r3, [r4, #12]
    ffd6:	4313      	orrs	r3, r2
    ffd8:	81a3      	strh	r3, [r4, #12]
    ffda:	e7f5      	b.n	ffc8 <__fputwc+0x68>
    ffdc:	464b      	mov	r3, r9
    ffde:	3b01      	subs	r3, #1
    ffe0:	2bfe      	cmp	r3, #254	; 0xfe
    ffe2:	d8c9      	bhi.n	ff78 <__fputwc+0x18>
    ffe4:	466a      	mov	r2, sp
    ffe6:	464b      	mov	r3, r9
    ffe8:	71d3      	strb	r3, [r2, #7]
    ffea:	79d1      	ldrb	r1, [r2, #7]
    ffec:	af03      	add	r7, sp, #12
    ffee:	7039      	strb	r1, [r7, #0]
    fff0:	2601      	movs	r6, #1
    fff2:	e7cf      	b.n	ff94 <__fputwc+0x34>
    fff4:	4648      	mov	r0, r9
    fff6:	e7e7      	b.n	ffc8 <__fputwc+0x68>

0000fff8 <_fputwc_r>:
    fff8:	6e53      	ldr	r3, [r2, #100]	; 0x64
    fffa:	b570      	push	{r4, r5, r6, lr}
    fffc:	0005      	movs	r5, r0
    fffe:	000e      	movs	r6, r1
   10000:	0014      	movs	r4, r2
   10002:	07db      	lsls	r3, r3, #31
   10004:	d41e      	bmi.n	10044 <_fputwc_r+0x4c>
   10006:	230c      	movs	r3, #12
   10008:	5ed2      	ldrsh	r2, [r2, r3]
   1000a:	b291      	uxth	r1, r2
   1000c:	058b      	lsls	r3, r1, #22
   1000e:	d516      	bpl.n	1003e <_fputwc_r+0x46>
   10010:	2380      	movs	r3, #128	; 0x80
   10012:	019b      	lsls	r3, r3, #6
   10014:	4219      	tst	r1, r3
   10016:	d104      	bne.n	10022 <_fputwc_r+0x2a>
   10018:	431a      	orrs	r2, r3
   1001a:	81a2      	strh	r2, [r4, #12]
   1001c:	6e62      	ldr	r2, [r4, #100]	; 0x64
   1001e:	4313      	orrs	r3, r2
   10020:	6663      	str	r3, [r4, #100]	; 0x64
   10022:	0028      	movs	r0, r5
   10024:	0022      	movs	r2, r4
   10026:	0031      	movs	r1, r6
   10028:	f7ff ff9a 	bl	ff60 <__fputwc>
   1002c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   1002e:	0005      	movs	r5, r0
   10030:	07db      	lsls	r3, r3, #31
   10032:	d402      	bmi.n	1003a <_fputwc_r+0x42>
   10034:	89a3      	ldrh	r3, [r4, #12]
   10036:	059b      	lsls	r3, r3, #22
   10038:	d508      	bpl.n	1004c <_fputwc_r+0x54>
   1003a:	0028      	movs	r0, r5
   1003c:	bd70      	pop	{r4, r5, r6, pc}
   1003e:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10040:	f7fc ffa4 	bl	cf8c <__retarget_lock_acquire_recursive>
   10044:	230c      	movs	r3, #12
   10046:	5ee2      	ldrsh	r2, [r4, r3]
   10048:	b291      	uxth	r1, r2
   1004a:	e7e1      	b.n	10010 <_fputwc_r+0x18>
   1004c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   1004e:	f7fc ff9f 	bl	cf90 <__retarget_lock_release_recursive>
   10052:	e7f2      	b.n	1003a <_fputwc_r+0x42>

00010054 <_fstat_r>:
   10054:	2300      	movs	r3, #0
   10056:	b570      	push	{r4, r5, r6, lr}
   10058:	4c07      	ldr	r4, [pc, #28]	; (10078 <_fstat_r+0x24>)
   1005a:	0005      	movs	r5, r0
   1005c:	0008      	movs	r0, r1
   1005e:	0011      	movs	r1, r2
   10060:	6023      	str	r3, [r4, #0]
   10062:	f7f0 fde0 	bl	c26 <_fstat>
   10066:	1c43      	adds	r3, r0, #1
   10068:	d000      	beq.n	1006c <_fstat_r+0x18>
   1006a:	bd70      	pop	{r4, r5, r6, pc}
   1006c:	6823      	ldr	r3, [r4, #0]
   1006e:	2b00      	cmp	r3, #0
   10070:	d0fb      	beq.n	1006a <_fstat_r+0x16>
   10072:	602b      	str	r3, [r5, #0]
   10074:	e7f9      	b.n	1006a <_fstat_r+0x16>
   10076:	46c0      	nop			; (mov r8, r8)
   10078:	20001678 	.word	0x20001678

0001007c <rshift>:
   1007c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1007e:	46ce      	mov	lr, r9
   10080:	4647      	mov	r7, r8
   10082:	0005      	movs	r5, r0
   10084:	6902      	ldr	r2, [r0, #16]
   10086:	b580      	push	{r7, lr}
   10088:	3514      	adds	r5, #20
   1008a:	114c      	asrs	r4, r1, #5
   1008c:	4294      	cmp	r4, r2
   1008e:	da2c      	bge.n	100ea <rshift+0x6e>
   10090:	0092      	lsls	r2, r2, #2
   10092:	18af      	adds	r7, r5, r2
   10094:	231f      	movs	r3, #31
   10096:	00a2      	lsls	r2, r4, #2
   10098:	4691      	mov	r9, r2
   1009a:	400b      	ands	r3, r1
   1009c:	44a9      	add	r9, r5
   1009e:	469c      	mov	ip, r3
   100a0:	2b00      	cmp	r3, #0
   100a2:	d02a      	beq.n	100fa <rshift+0x7e>
   100a4:	4662      	mov	r2, ip
   100a6:	2320      	movs	r3, #32
   100a8:	1a9b      	subs	r3, r3, r2
   100aa:	4698      	mov	r8, r3
   100ac:	464b      	mov	r3, r9
   100ae:	681e      	ldr	r6, [r3, #0]
   100b0:	1d1c      	adds	r4, r3, #4
   100b2:	40d6      	lsrs	r6, r2
   100b4:	42a7      	cmp	r7, r4
   100b6:	d935      	bls.n	10124 <rshift+0xa8>
   100b8:	0029      	movs	r1, r5
   100ba:	4642      	mov	r2, r8
   100bc:	6823      	ldr	r3, [r4, #0]
   100be:	4093      	lsls	r3, r2
   100c0:	4333      	orrs	r3, r6
   100c2:	c108      	stmia	r1!, {r3}
   100c4:	4663      	mov	r3, ip
   100c6:	cc40      	ldmia	r4!, {r6}
   100c8:	40de      	lsrs	r6, r3
   100ca:	42a7      	cmp	r7, r4
   100cc:	d8f5      	bhi.n	100ba <rshift+0x3e>
   100ce:	464b      	mov	r3, r9
   100d0:	1afa      	subs	r2, r7, r3
   100d2:	2303      	movs	r3, #3
   100d4:	3a05      	subs	r2, #5
   100d6:	439a      	bics	r2, r3
   100d8:	3204      	adds	r2, #4
   100da:	18aa      	adds	r2, r5, r2
   100dc:	6016      	str	r6, [r2, #0]
   100de:	2e00      	cmp	r6, #0
   100e0:	d01d      	beq.n	1011e <rshift+0xa2>
   100e2:	1d13      	adds	r3, r2, #4
   100e4:	1b5b      	subs	r3, r3, r5
   100e6:	109b      	asrs	r3, r3, #2
   100e8:	e015      	b.n	10116 <rshift+0x9a>
   100ea:	2300      	movs	r3, #0
   100ec:	6103      	str	r3, [r0, #16]
   100ee:	2300      	movs	r3, #0
   100f0:	6143      	str	r3, [r0, #20]
   100f2:	bc0c      	pop	{r2, r3}
   100f4:	4690      	mov	r8, r2
   100f6:	4699      	mov	r9, r3
   100f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   100fa:	4649      	mov	r1, r9
   100fc:	454f      	cmp	r7, r9
   100fe:	d9f4      	bls.n	100ea <rshift+0x6e>
   10100:	c910      	ldmia	r1!, {r4}
   10102:	c510      	stmia	r5!, {r4}
   10104:	428f      	cmp	r7, r1
   10106:	d8fb      	bhi.n	10100 <rshift+0x84>
   10108:	464b      	mov	r3, r9
   1010a:	43db      	mvns	r3, r3
   1010c:	2203      	movs	r2, #3
   1010e:	19db      	adds	r3, r3, r7
   10110:	4393      	bics	r3, r2
   10112:	3304      	adds	r3, #4
   10114:	109b      	asrs	r3, r3, #2
   10116:	6103      	str	r3, [r0, #16]
   10118:	2b00      	cmp	r3, #0
   1011a:	d1ea      	bne.n	100f2 <rshift+0x76>
   1011c:	e7e7      	b.n	100ee <rshift+0x72>
   1011e:	1b53      	subs	r3, r2, r5
   10120:	109b      	asrs	r3, r3, #2
   10122:	e7f8      	b.n	10116 <rshift+0x9a>
   10124:	002a      	movs	r2, r5
   10126:	e7d9      	b.n	100dc <rshift+0x60>

00010128 <__gethex>:
   10128:	b5f0      	push	{r4, r5, r6, r7, lr}
   1012a:	46de      	mov	lr, fp
   1012c:	464e      	mov	r6, r9
   1012e:	4657      	mov	r7, sl
   10130:	4645      	mov	r5, r8
   10132:	b5e0      	push	{r5, r6, r7, lr}
   10134:	b08b      	sub	sp, #44	; 0x2c
   10136:	9006      	str	r0, [sp, #24]
   10138:	9816      	ldr	r0, [sp, #88]	; 0x58
   1013a:	4689      	mov	r9, r1
   1013c:	4693      	mov	fp, r2
   1013e:	9309      	str	r3, [sp, #36]	; 0x24
   10140:	f7fc ff10 	bl	cf64 <__localeconv_l>
   10144:	6803      	ldr	r3, [r0, #0]
   10146:	0018      	movs	r0, r3
   10148:	001c      	movs	r4, r3
   1014a:	9304      	str	r3, [sp, #16]
   1014c:	f7f7 f85c 	bl	7208 <strlen>
   10150:	46a4      	mov	ip, r4
   10152:	0002      	movs	r2, r0
   10154:	4462      	add	r2, ip
   10156:	0013      	movs	r3, r2
   10158:	3b01      	subs	r3, #1
   1015a:	781b      	ldrb	r3, [r3, #0]
   1015c:	9002      	str	r0, [sp, #8]
   1015e:	9301      	str	r3, [sp, #4]
   10160:	464b      	mov	r3, r9
   10162:	681c      	ldr	r4, [r3, #0]
   10164:	78a2      	ldrb	r2, [r4, #2]
   10166:	2a30      	cmp	r2, #48	; 0x30
   10168:	d000      	beq.n	1016c <__gethex+0x44>
   1016a:	e1c4      	b.n	104f6 <__gethex+0x3ce>
   1016c:	2102      	movs	r1, #2
   1016e:	4249      	negs	r1, r1
   10170:	1ce3      	adds	r3, r4, #3
   10172:	1b09      	subs	r1, r1, r4
   10174:	18c8      	adds	r0, r1, r3
   10176:	001c      	movs	r4, r3
   10178:	3301      	adds	r3, #1
   1017a:	1e5a      	subs	r2, r3, #1
   1017c:	7812      	ldrb	r2, [r2, #0]
   1017e:	2a30      	cmp	r2, #48	; 0x30
   10180:	d0f8      	beq.n	10174 <__gethex+0x4c>
   10182:	4680      	mov	r8, r0
   10184:	4fbf      	ldr	r7, [pc, #764]	; (10484 <__gethex+0x35c>)
   10186:	5cbb      	ldrb	r3, [r7, r2]
   10188:	2b00      	cmp	r3, #0
   1018a:	d100      	bne.n	1018e <__gethex+0x66>
   1018c:	e0b0      	b.n	102f0 <__gethex+0x1c8>
   1018e:	2200      	movs	r2, #0
   10190:	2600      	movs	r6, #0
   10192:	4692      	mov	sl, r2
   10194:	7823      	ldrb	r3, [r4, #0]
   10196:	5cfb      	ldrb	r3, [r7, r3]
   10198:	0025      	movs	r5, r4
   1019a:	2b00      	cmp	r3, #0
   1019c:	d004      	beq.n	101a8 <__gethex+0x80>
   1019e:	3501      	adds	r5, #1
   101a0:	782b      	ldrb	r3, [r5, #0]
   101a2:	5cfb      	ldrb	r3, [r7, r3]
   101a4:	2b00      	cmp	r3, #0
   101a6:	d1fa      	bne.n	1019e <__gethex+0x76>
   101a8:	9a02      	ldr	r2, [sp, #8]
   101aa:	9904      	ldr	r1, [sp, #16]
   101ac:	0028      	movs	r0, r5
   101ae:	f000 fb4b 	bl	10848 <strncmp>
   101b2:	2800      	cmp	r0, #0
   101b4:	d100      	bne.n	101b8 <__gethex+0x90>
   101b6:	e08b      	b.n	102d0 <__gethex+0x1a8>
   101b8:	782b      	ldrb	r3, [r5, #0]
   101ba:	2e00      	cmp	r6, #0
   101bc:	d100      	bne.n	101c0 <__gethex+0x98>
   101be:	e189      	b.n	104d4 <__gethex+0x3ac>
   101c0:	1b76      	subs	r6, r6, r5
   101c2:	00b2      	lsls	r2, r6, #2
   101c4:	9203      	str	r2, [sp, #12]
   101c6:	2b50      	cmp	r3, #80	; 0x50
   101c8:	d100      	bne.n	101cc <__gethex+0xa4>
   101ca:	e0b4      	b.n	10336 <__gethex+0x20e>
   101cc:	002e      	movs	r6, r5
   101ce:	2b70      	cmp	r3, #112	; 0x70
   101d0:	d100      	bne.n	101d4 <__gethex+0xac>
   101d2:	e0b0      	b.n	10336 <__gethex+0x20e>
   101d4:	464b      	mov	r3, r9
   101d6:	601d      	str	r5, [r3, #0]
   101d8:	4653      	mov	r3, sl
   101da:	2b00      	cmp	r3, #0
   101dc:	d000      	beq.n	101e0 <__gethex+0xb8>
   101de:	e098      	b.n	10312 <__gethex+0x1ea>
   101e0:	1b33      	subs	r3, r6, r4
   101e2:	3b01      	subs	r3, #1
   101e4:	2100      	movs	r1, #0
   101e6:	2b07      	cmp	r3, #7
   101e8:	dd03      	ble.n	101f2 <__gethex+0xca>
   101ea:	3101      	adds	r1, #1
   101ec:	105b      	asrs	r3, r3, #1
   101ee:	2b07      	cmp	r3, #7
   101f0:	dcfb      	bgt.n	101ea <__gethex+0xc2>
   101f2:	9806      	ldr	r0, [sp, #24]
   101f4:	f7fd faf6 	bl	d7e4 <_Balloc>
   101f8:	0003      	movs	r3, r0
   101fa:	3314      	adds	r3, #20
   101fc:	9005      	str	r0, [sp, #20]
   101fe:	9308      	str	r3, [sp, #32]
   10200:	42b4      	cmp	r4, r6
   10202:	d300      	bcc.n	10206 <__gethex+0xde>
   10204:	e1c3      	b.n	1058e <__gethex+0x466>
   10206:	469a      	mov	sl, r3
   10208:	2300      	movs	r3, #0
   1020a:	9a02      	ldr	r2, [sp, #8]
   1020c:	4698      	mov	r8, r3
   1020e:	4699      	mov	r9, r3
   10210:	3301      	adds	r3, #1
   10212:	1a9b      	subs	r3, r3, r2
   10214:	9307      	str	r3, [sp, #28]
   10216:	0023      	movs	r3, r4
   10218:	4644      	mov	r4, r8
   1021a:	4698      	mov	r8, r3
   1021c:	e00e      	b.n	1023c <__gethex+0x114>
   1021e:	2c20      	cmp	r4, #32
   10220:	d05b      	beq.n	102da <__gethex+0x1b2>
   10222:	0022      	movs	r2, r4
   10224:	3404      	adds	r4, #4
   10226:	210f      	movs	r1, #15
   10228:	782b      	ldrb	r3, [r5, #0]
   1022a:	002e      	movs	r6, r5
   1022c:	5cfb      	ldrb	r3, [r7, r3]
   1022e:	400b      	ands	r3, r1
   10230:	4093      	lsls	r3, r2
   10232:	464a      	mov	r2, r9
   10234:	431a      	orrs	r2, r3
   10236:	4691      	mov	r9, r2
   10238:	4546      	cmp	r6, r8
   1023a:	d911      	bls.n	10260 <__gethex+0x138>
   1023c:	1e75      	subs	r5, r6, #1
   1023e:	782b      	ldrb	r3, [r5, #0]
   10240:	9a01      	ldr	r2, [sp, #4]
   10242:	4293      	cmp	r3, r2
   10244:	d1eb      	bne.n	1021e <__gethex+0xf6>
   10246:	9b07      	ldr	r3, [sp, #28]
   10248:	18ee      	adds	r6, r5, r3
   1024a:	4546      	cmp	r6, r8
   1024c:	d3e7      	bcc.n	1021e <__gethex+0xf6>
   1024e:	9a02      	ldr	r2, [sp, #8]
   10250:	9904      	ldr	r1, [sp, #16]
   10252:	0030      	movs	r0, r6
   10254:	f000 faf8 	bl	10848 <strncmp>
   10258:	2800      	cmp	r0, #0
   1025a:	d1e0      	bne.n	1021e <__gethex+0xf6>
   1025c:	4546      	cmp	r6, r8
   1025e:	d8ed      	bhi.n	1023c <__gethex+0x114>
   10260:	4653      	mov	r3, sl
   10262:	464a      	mov	r2, r9
   10264:	c304      	stmia	r3!, {r2}
   10266:	9a08      	ldr	r2, [sp, #32]
   10268:	4648      	mov	r0, r9
   1026a:	1a9b      	subs	r3, r3, r2
   1026c:	9a05      	ldr	r2, [sp, #20]
   1026e:	109b      	asrs	r3, r3, #2
   10270:	6113      	str	r3, [r2, #16]
   10272:	015c      	lsls	r4, r3, #5
   10274:	f7fd fb78 	bl	d968 <__hi0bits>
   10278:	465b      	mov	r3, fp
   1027a:	681d      	ldr	r5, [r3, #0]
   1027c:	1a24      	subs	r4, r4, r0
   1027e:	42ac      	cmp	r4, r5
   10280:	dd00      	ble.n	10284 <__gethex+0x15c>
   10282:	e101      	b.n	10488 <__gethex+0x360>
   10284:	2600      	movs	r6, #0
   10286:	42ac      	cmp	r4, r5
   10288:	da00      	bge.n	1028c <__gethex+0x164>
   1028a:	e126      	b.n	104da <__gethex+0x3b2>
   1028c:	465b      	mov	r3, fp
   1028e:	9a03      	ldr	r2, [sp, #12]
   10290:	689b      	ldr	r3, [r3, #8]
   10292:	429a      	cmp	r2, r3
   10294:	dd00      	ble.n	10298 <__gethex+0x170>
   10296:	e0ba      	b.n	1040e <__gethex+0x2e6>
   10298:	465b      	mov	r3, fp
   1029a:	9903      	ldr	r1, [sp, #12]
   1029c:	685b      	ldr	r3, [r3, #4]
   1029e:	4299      	cmp	r1, r3
   102a0:	da00      	bge.n	102a4 <__gethex+0x17c>
   102a2:	e0d5      	b.n	10450 <__gethex+0x328>
   102a4:	2401      	movs	r4, #1
   102a6:	2e00      	cmp	r6, #0
   102a8:	d00b      	beq.n	102c2 <__gethex+0x19a>
   102aa:	465b      	mov	r3, fp
   102ac:	68db      	ldr	r3, [r3, #12]
   102ae:	2b02      	cmp	r3, #2
   102b0:	d100      	bne.n	102b4 <__gethex+0x18c>
   102b2:	e152      	b.n	1055a <__gethex+0x432>
   102b4:	2b03      	cmp	r3, #3
   102b6:	d100      	bne.n	102ba <__gethex+0x192>
   102b8:	e153      	b.n	10562 <__gethex+0x43a>
   102ba:	2b01      	cmp	r3, #1
   102bc:	d069      	beq.n	10392 <__gethex+0x26a>
   102be:	2310      	movs	r3, #16
   102c0:	431c      	orrs	r4, r3
   102c2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   102c4:	9a05      	ldr	r2, [sp, #20]
   102c6:	601a      	str	r2, [r3, #0]
   102c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   102ca:	9a03      	ldr	r2, [sp, #12]
   102cc:	601a      	str	r2, [r3, #0]
   102ce:	e026      	b.n	1031e <__gethex+0x1f6>
   102d0:	2e00      	cmp	r6, #0
   102d2:	d100      	bne.n	102d6 <__gethex+0x1ae>
   102d4:	e133      	b.n	1053e <__gethex+0x416>
   102d6:	782b      	ldrb	r3, [r5, #0]
   102d8:	e772      	b.n	101c0 <__gethex+0x98>
   102da:	4653      	mov	r3, sl
   102dc:	464a      	mov	r2, r9
   102de:	601a      	str	r2, [r3, #0]
   102e0:	2304      	movs	r3, #4
   102e2:	469c      	mov	ip, r3
   102e4:	2300      	movs	r3, #0
   102e6:	44e2      	add	sl, ip
   102e8:	2200      	movs	r2, #0
   102ea:	2404      	movs	r4, #4
   102ec:	4699      	mov	r9, r3
   102ee:	e79a      	b.n	10226 <__gethex+0xfe>
   102f0:	9d02      	ldr	r5, [sp, #8]
   102f2:	9904      	ldr	r1, [sp, #16]
   102f4:	002a      	movs	r2, r5
   102f6:	0020      	movs	r0, r4
   102f8:	f000 faa6 	bl	10848 <strncmp>
   102fc:	2800      	cmp	r0, #0
   102fe:	d100      	bne.n	10302 <__gethex+0x1da>
   10300:	e091      	b.n	10426 <__gethex+0x2fe>
   10302:	0025      	movs	r5, r4
   10304:	7822      	ldrb	r2, [r4, #0]
   10306:	2a50      	cmp	r2, #80	; 0x50
   10308:	d011      	beq.n	1032e <__gethex+0x206>
   1030a:	2a70      	cmp	r2, #112	; 0x70
   1030c:	d00f      	beq.n	1032e <__gethex+0x206>
   1030e:	464b      	mov	r3, r9
   10310:	601d      	str	r5, [r3, #0]
   10312:	4643      	mov	r3, r8
   10314:	425a      	negs	r2, r3
   10316:	4153      	adcs	r3, r2
   10318:	2406      	movs	r4, #6
   1031a:	425b      	negs	r3, r3
   1031c:	401c      	ands	r4, r3
   1031e:	0020      	movs	r0, r4
   10320:	b00b      	add	sp, #44	; 0x2c
   10322:	bc3c      	pop	{r2, r3, r4, r5}
   10324:	4690      	mov	r8, r2
   10326:	4699      	mov	r9, r3
   10328:	46a2      	mov	sl, r4
   1032a:	46ab      	mov	fp, r5
   1032c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   1032e:	2300      	movs	r3, #0
   10330:	9303      	str	r3, [sp, #12]
   10332:	3301      	adds	r3, #1
   10334:	469a      	mov	sl, r3
   10336:	786b      	ldrb	r3, [r5, #1]
   10338:	2b2b      	cmp	r3, #43	; 0x2b
   1033a:	d100      	bne.n	1033e <__gethex+0x216>
   1033c:	e09f      	b.n	1047e <__gethex+0x356>
   1033e:	2101      	movs	r1, #1
   10340:	2b2d      	cmp	r3, #45	; 0x2d
   10342:	d16d      	bne.n	10420 <__gethex+0x2f8>
   10344:	78ab      	ldrb	r3, [r5, #2]
   10346:	1ca8      	adds	r0, r5, #2
   10348:	5cfb      	ldrb	r3, [r7, r3]
   1034a:	002e      	movs	r6, r5
   1034c:	1e5a      	subs	r2, r3, #1
   1034e:	2a18      	cmp	r2, #24
   10350:	d900      	bls.n	10354 <__gethex+0x22c>
   10352:	e73f      	b.n	101d4 <__gethex+0xac>
   10354:	1c42      	adds	r2, r0, #1
   10356:	7840      	ldrb	r0, [r0, #1]
   10358:	3b10      	subs	r3, #16
   1035a:	5c38      	ldrb	r0, [r7, r0]
   1035c:	1e46      	subs	r6, r0, #1
   1035e:	2e18      	cmp	r6, #24
   10360:	d80c      	bhi.n	1037c <__gethex+0x254>
   10362:	0006      	movs	r6, r0
   10364:	0098      	lsls	r0, r3, #2
   10366:	18c0      	adds	r0, r0, r3
   10368:	0040      	lsls	r0, r0, #1
   1036a:	1980      	adds	r0, r0, r6
   1036c:	0003      	movs	r3, r0
   1036e:	3201      	adds	r2, #1
   10370:	7810      	ldrb	r0, [r2, #0]
   10372:	3b10      	subs	r3, #16
   10374:	5c3e      	ldrb	r6, [r7, r0]
   10376:	1e70      	subs	r0, r6, #1
   10378:	2818      	cmp	r0, #24
   1037a:	d9f3      	bls.n	10364 <__gethex+0x23c>
   1037c:	2900      	cmp	r1, #0
   1037e:	d000      	beq.n	10382 <__gethex+0x25a>
   10380:	425b      	negs	r3, r3
   10382:	9903      	ldr	r1, [sp, #12]
   10384:	002e      	movs	r6, r5
   10386:	468c      	mov	ip, r1
   10388:	449c      	add	ip, r3
   1038a:	4663      	mov	r3, ip
   1038c:	0015      	movs	r5, r2
   1038e:	9303      	str	r3, [sp, #12]
   10390:	e720      	b.n	101d4 <__gethex+0xac>
   10392:	07b2      	lsls	r2, r6, #30
   10394:	d593      	bpl.n	102be <__gethex+0x196>
   10396:	9a08      	ldr	r2, [sp, #32]
   10398:	6812      	ldr	r2, [r2, #0]
   1039a:	4316      	orrs	r6, r2
   1039c:	9201      	str	r2, [sp, #4]
   1039e:	4233      	tst	r3, r6
   103a0:	d100      	bne.n	103a4 <__gethex+0x27c>
   103a2:	e78c      	b.n	102be <__gethex+0x196>
   103a4:	9b05      	ldr	r3, [sp, #20]
   103a6:	691f      	ldr	r7, [r3, #16]
   103a8:	9b08      	ldr	r3, [sp, #32]
   103aa:	00b9      	lsls	r1, r7, #2
   103ac:	4688      	mov	r8, r1
   103ae:	001a      	movs	r2, r3
   103b0:	4442      	add	r2, r8
   103b2:	0016      	movs	r6, r2
   103b4:	2100      	movs	r1, #0
   103b6:	469c      	mov	ip, r3
   103b8:	e003      	b.n	103c2 <__gethex+0x29a>
   103ba:	c302      	stmia	r3!, {r1}
   103bc:	429e      	cmp	r6, r3
   103be:	d800      	bhi.n	103c2 <__gethex+0x29a>
   103c0:	e0ff      	b.n	105c2 <__gethex+0x49a>
   103c2:	681a      	ldr	r2, [r3, #0]
   103c4:	1c50      	adds	r0, r2, #1
   103c6:	d0f8      	beq.n	103ba <__gethex+0x292>
   103c8:	3201      	adds	r2, #1
   103ca:	4660      	mov	r0, ip
   103cc:	601a      	str	r2, [r3, #0]
   103ce:	2c02      	cmp	r4, #2
   103d0:	d100      	bne.n	103d4 <__gethex+0x2ac>
   103d2:	e10c      	b.n	105ee <__gethex+0x4c6>
   103d4:	231f      	movs	r3, #31
   103d6:	2421      	movs	r4, #33	; 0x21
   103d8:	401d      	ands	r5, r3
   103da:	d100      	bne.n	103de <__gethex+0x2b6>
   103dc:	e771      	b.n	102c2 <__gethex+0x19a>
   103de:	4440      	add	r0, r8
   103e0:	3804      	subs	r0, #4
   103e2:	6800      	ldr	r0, [r0, #0]
   103e4:	f7fd fac0 	bl	d968 <__hi0bits>
   103e8:	2320      	movs	r3, #32
   103ea:	1b5d      	subs	r5, r3, r5
   103ec:	42a8      	cmp	r0, r5
   103ee:	db00      	blt.n	103f2 <__gethex+0x2ca>
   103f0:	e767      	b.n	102c2 <__gethex+0x19a>
   103f2:	2101      	movs	r1, #1
   103f4:	9805      	ldr	r0, [sp, #20]
   103f6:	f7ff fe41 	bl	1007c <rshift>
   103fa:	9b03      	ldr	r3, [sp, #12]
   103fc:	2421      	movs	r4, #33	; 0x21
   103fe:	3301      	adds	r3, #1
   10400:	001a      	movs	r2, r3
   10402:	9303      	str	r3, [sp, #12]
   10404:	465b      	mov	r3, fp
   10406:	689b      	ldr	r3, [r3, #8]
   10408:	429a      	cmp	r2, r3
   1040a:	dc00      	bgt.n	1040e <__gethex+0x2e6>
   1040c:	e759      	b.n	102c2 <__gethex+0x19a>
   1040e:	9905      	ldr	r1, [sp, #20]
   10410:	9806      	ldr	r0, [sp, #24]
   10412:	f7fd fa0f 	bl	d834 <_Bfree>
   10416:	2300      	movs	r3, #0
   10418:	9a14      	ldr	r2, [sp, #80]	; 0x50
   1041a:	24a3      	movs	r4, #163	; 0xa3
   1041c:	6013      	str	r3, [r2, #0]
   1041e:	e77e      	b.n	1031e <__gethex+0x1f6>
   10420:	1c68      	adds	r0, r5, #1
   10422:	2100      	movs	r1, #0
   10424:	e790      	b.n	10348 <__gethex+0x220>
   10426:	1965      	adds	r5, r4, r5
   10428:	782a      	ldrb	r2, [r5, #0]
   1042a:	5cbb      	ldrb	r3, [r7, r2]
   1042c:	2b00      	cmp	r3, #0
   1042e:	d100      	bne.n	10432 <__gethex+0x30a>
   10430:	e769      	b.n	10306 <__gethex+0x1de>
   10432:	002c      	movs	r4, r5
   10434:	2a30      	cmp	r2, #48	; 0x30
   10436:	d104      	bne.n	10442 <__gethex+0x31a>
   10438:	3401      	adds	r4, #1
   1043a:	7823      	ldrb	r3, [r4, #0]
   1043c:	2b30      	cmp	r3, #48	; 0x30
   1043e:	d0fb      	beq.n	10438 <__gethex+0x310>
   10440:	5cfb      	ldrb	r3, [r7, r3]
   10442:	4259      	negs	r1, r3
   10444:	4159      	adcs	r1, r3
   10446:	2201      	movs	r2, #1
   10448:	468a      	mov	sl, r1
   1044a:	002e      	movs	r6, r5
   1044c:	4690      	mov	r8, r2
   1044e:	e6a3      	b.n	10198 <__gethex+0x70>
   10450:	1a5c      	subs	r4, r3, r1
   10452:	42a5      	cmp	r5, r4
   10454:	dc53      	bgt.n	104fe <__gethex+0x3d6>
   10456:	465a      	mov	r2, fp
   10458:	68d2      	ldr	r2, [r2, #12]
   1045a:	2a02      	cmp	r2, #2
   1045c:	d100      	bne.n	10460 <__gethex+0x338>
   1045e:	e0ac      	b.n	105ba <__gethex+0x492>
   10460:	2a03      	cmp	r2, #3
   10462:	d100      	bne.n	10466 <__gethex+0x33e>
   10464:	e084      	b.n	10570 <__gethex+0x448>
   10466:	2a01      	cmp	r2, #1
   10468:	d100      	bne.n	1046c <__gethex+0x344>
   1046a:	e097      	b.n	1059c <__gethex+0x474>
   1046c:	9905      	ldr	r1, [sp, #20]
   1046e:	9806      	ldr	r0, [sp, #24]
   10470:	f7fd f9e0 	bl	d834 <_Bfree>
   10474:	2300      	movs	r3, #0
   10476:	9a14      	ldr	r2, [sp, #80]	; 0x50
   10478:	2450      	movs	r4, #80	; 0x50
   1047a:	6013      	str	r3, [r2, #0]
   1047c:	e74f      	b.n	1031e <__gethex+0x1f6>
   1047e:	2100      	movs	r1, #0
   10480:	e760      	b.n	10344 <__gethex+0x21c>
   10482:	46c0      	nop			; (mov r8, r8)
   10484:	00014374 	.word	0x00014374
   10488:	1b64      	subs	r4, r4, r5
   1048a:	0021      	movs	r1, r4
   1048c:	9805      	ldr	r0, [sp, #20]
   1048e:	f7fd fe27 	bl	e0e0 <__any_on>
   10492:	1e06      	subs	r6, r0, #0
   10494:	d014      	beq.n	104c0 <__gethex+0x398>
   10496:	211f      	movs	r1, #31
   10498:	2301      	movs	r3, #1
   1049a:	1e60      	subs	r0, r4, #1
   1049c:	4001      	ands	r1, r0
   1049e:	408b      	lsls	r3, r1
   104a0:	1142      	asrs	r2, r0, #5
   104a2:	9908      	ldr	r1, [sp, #32]
   104a4:	0092      	lsls	r2, r2, #2
   104a6:	588a      	ldr	r2, [r1, r2]
   104a8:	2601      	movs	r6, #1
   104aa:	421a      	tst	r2, r3
   104ac:	d008      	beq.n	104c0 <__gethex+0x398>
   104ae:	2801      	cmp	r0, #1
   104b0:	dd72      	ble.n	10598 <__gethex+0x470>
   104b2:	1ea1      	subs	r1, r4, #2
   104b4:	9805      	ldr	r0, [sp, #20]
   104b6:	f7fd fe13 	bl	e0e0 <__any_on>
   104ba:	2800      	cmp	r0, #0
   104bc:	d06c      	beq.n	10598 <__gethex+0x470>
   104be:	2603      	movs	r6, #3
   104c0:	0021      	movs	r1, r4
   104c2:	9805      	ldr	r0, [sp, #20]
   104c4:	f7ff fdda 	bl	1007c <rshift>
   104c8:	9b03      	ldr	r3, [sp, #12]
   104ca:	469c      	mov	ip, r3
   104cc:	44a4      	add	ip, r4
   104ce:	4663      	mov	r3, ip
   104d0:	9303      	str	r3, [sp, #12]
   104d2:	e6db      	b.n	1028c <__gethex+0x164>
   104d4:	2200      	movs	r2, #0
   104d6:	9203      	str	r2, [sp, #12]
   104d8:	e675      	b.n	101c6 <__gethex+0x9e>
   104da:	1b2c      	subs	r4, r5, r4
   104dc:	0022      	movs	r2, r4
   104de:	9905      	ldr	r1, [sp, #20]
   104e0:	9806      	ldr	r0, [sp, #24]
   104e2:	f7fd fb9d 	bl	dc20 <__lshift>
   104e6:	0003      	movs	r3, r0
   104e8:	9a03      	ldr	r2, [sp, #12]
   104ea:	3314      	adds	r3, #20
   104ec:	1b12      	subs	r2, r2, r4
   104ee:	9005      	str	r0, [sp, #20]
   104f0:	9203      	str	r2, [sp, #12]
   104f2:	9308      	str	r3, [sp, #32]
   104f4:	e6ca      	b.n	1028c <__gethex+0x164>
   104f6:	2300      	movs	r3, #0
   104f8:	3402      	adds	r4, #2
   104fa:	4698      	mov	r8, r3
   104fc:	e642      	b.n	10184 <__gethex+0x5c>
   104fe:	1e67      	subs	r7, r4, #1
   10500:	2e00      	cmp	r6, #0
   10502:	d133      	bne.n	1056c <__gethex+0x444>
   10504:	2f00      	cmp	r7, #0
   10506:	d004      	beq.n	10512 <__gethex+0x3ea>
   10508:	0039      	movs	r1, r7
   1050a:	9805      	ldr	r0, [sp, #20]
   1050c:	f7fd fde8 	bl	e0e0 <__any_on>
   10510:	0006      	movs	r6, r0
   10512:	231f      	movs	r3, #31
   10514:	117a      	asrs	r2, r7, #5
   10516:	401f      	ands	r7, r3
   10518:	3b1e      	subs	r3, #30
   1051a:	40bb      	lsls	r3, r7
   1051c:	9908      	ldr	r1, [sp, #32]
   1051e:	0092      	lsls	r2, r2, #2
   10520:	588a      	ldr	r2, [r1, r2]
   10522:	421a      	tst	r2, r3
   10524:	d001      	beq.n	1052a <__gethex+0x402>
   10526:	2302      	movs	r3, #2
   10528:	431e      	orrs	r6, r3
   1052a:	0021      	movs	r1, r4
   1052c:	9805      	ldr	r0, [sp, #20]
   1052e:	f7ff fda5 	bl	1007c <rshift>
   10532:	465b      	mov	r3, fp
   10534:	685b      	ldr	r3, [r3, #4]
   10536:	1b2d      	subs	r5, r5, r4
   10538:	9303      	str	r3, [sp, #12]
   1053a:	2402      	movs	r4, #2
   1053c:	e6b3      	b.n	102a6 <__gethex+0x17e>
   1053e:	9b02      	ldr	r3, [sp, #8]
   10540:	18ee      	adds	r6, r5, r3
   10542:	7833      	ldrb	r3, [r6, #0]
   10544:	0035      	movs	r5, r6
   10546:	5cfa      	ldrb	r2, [r7, r3]
   10548:	2a00      	cmp	r2, #0
   1054a:	d100      	bne.n	1054e <__gethex+0x426>
   1054c:	e638      	b.n	101c0 <__gethex+0x98>
   1054e:	3501      	adds	r5, #1
   10550:	782b      	ldrb	r3, [r5, #0]
   10552:	5cfa      	ldrb	r2, [r7, r3]
   10554:	2a00      	cmp	r2, #0
   10556:	d1fa      	bne.n	1054e <__gethex+0x426>
   10558:	e632      	b.n	101c0 <__gethex+0x98>
   1055a:	2301      	movs	r3, #1
   1055c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   1055e:	1a9b      	subs	r3, r3, r2
   10560:	9315      	str	r3, [sp, #84]	; 0x54
   10562:	9b15      	ldr	r3, [sp, #84]	; 0x54
   10564:	2b00      	cmp	r3, #0
   10566:	d100      	bne.n	1056a <__gethex+0x442>
   10568:	e6a9      	b.n	102be <__gethex+0x196>
   1056a:	e71b      	b.n	103a4 <__gethex+0x27c>
   1056c:	2601      	movs	r6, #1
   1056e:	e7d0      	b.n	10512 <__gethex+0x3ea>
   10570:	9a15      	ldr	r2, [sp, #84]	; 0x54
   10572:	2a00      	cmp	r2, #0
   10574:	d100      	bne.n	10578 <__gethex+0x450>
   10576:	e779      	b.n	1046c <__gethex+0x344>
   10578:	9a09      	ldr	r2, [sp, #36]	; 0x24
   1057a:	9908      	ldr	r1, [sp, #32]
   1057c:	6013      	str	r3, [r2, #0]
   1057e:	2301      	movs	r3, #1
   10580:	9a05      	ldr	r2, [sp, #20]
   10582:	2462      	movs	r4, #98	; 0x62
   10584:	6113      	str	r3, [r2, #16]
   10586:	600b      	str	r3, [r1, #0]
   10588:	9b14      	ldr	r3, [sp, #80]	; 0x50
   1058a:	601a      	str	r2, [r3, #0]
   1058c:	e6c7      	b.n	1031e <__gethex+0x1f6>
   1058e:	9b08      	ldr	r3, [sp, #32]
   10590:	469a      	mov	sl, r3
   10592:	2300      	movs	r3, #0
   10594:	4699      	mov	r9, r3
   10596:	e663      	b.n	10260 <__gethex+0x138>
   10598:	2602      	movs	r6, #2
   1059a:	e791      	b.n	104c0 <__gethex+0x398>
   1059c:	42a5      	cmp	r5, r4
   1059e:	d000      	beq.n	105a2 <__gethex+0x47a>
   105a0:	e764      	b.n	1046c <__gethex+0x344>
   105a2:	2d01      	cmp	r5, #1
   105a4:	dde8      	ble.n	10578 <__gethex+0x450>
   105a6:	1e69      	subs	r1, r5, #1
   105a8:	9805      	ldr	r0, [sp, #20]
   105aa:	f7fd fd99 	bl	e0e0 <__any_on>
   105ae:	2800      	cmp	r0, #0
   105b0:	d100      	bne.n	105b4 <__gethex+0x48c>
   105b2:	e75b      	b.n	1046c <__gethex+0x344>
   105b4:	465b      	mov	r3, fp
   105b6:	685b      	ldr	r3, [r3, #4]
   105b8:	e7de      	b.n	10578 <__gethex+0x450>
   105ba:	9a15      	ldr	r2, [sp, #84]	; 0x54
   105bc:	2a00      	cmp	r2, #0
   105be:	d0db      	beq.n	10578 <__gethex+0x450>
   105c0:	e754      	b.n	1046c <__gethex+0x344>
   105c2:	9b05      	ldr	r3, [sp, #20]
   105c4:	689b      	ldr	r3, [r3, #8]
   105c6:	9301      	str	r3, [sp, #4]
   105c8:	429f      	cmp	r7, r3
   105ca:	da23      	bge.n	10614 <__gethex+0x4ec>
   105cc:	003b      	movs	r3, r7
   105ce:	9808      	ldr	r0, [sp, #32]
   105d0:	9905      	ldr	r1, [sp, #20]
   105d2:	1c5a      	adds	r2, r3, #1
   105d4:	468c      	mov	ip, r1
   105d6:	610a      	str	r2, [r1, #16]
   105d8:	2101      	movs	r1, #1
   105da:	3304      	adds	r3, #4
   105dc:	009b      	lsls	r3, r3, #2
   105de:	4463      	add	r3, ip
   105e0:	6059      	str	r1, [r3, #4]
   105e2:	2c02      	cmp	r4, #2
   105e4:	d003      	beq.n	105ee <__gethex+0x4c6>
   105e6:	4297      	cmp	r7, r2
   105e8:	da00      	bge.n	105ec <__gethex+0x4c4>
   105ea:	e702      	b.n	103f2 <__gethex+0x2ca>
   105ec:	e6f2      	b.n	103d4 <__gethex+0x2ac>
   105ee:	465b      	mov	r3, fp
   105f0:	681b      	ldr	r3, [r3, #0]
   105f2:	2422      	movs	r4, #34	; 0x22
   105f4:	3b01      	subs	r3, #1
   105f6:	429d      	cmp	r5, r3
   105f8:	d000      	beq.n	105fc <__gethex+0x4d4>
   105fa:	e662      	b.n	102c2 <__gethex+0x19a>
   105fc:	231f      	movs	r3, #31
   105fe:	116a      	asrs	r2, r5, #5
   10600:	401d      	ands	r5, r3
   10602:	3b1e      	subs	r3, #30
   10604:	40ab      	lsls	r3, r5
   10606:	0092      	lsls	r2, r2, #2
   10608:	5814      	ldr	r4, [r2, r0]
   1060a:	4023      	ands	r3, r4
   1060c:	425c      	negs	r4, r3
   1060e:	415c      	adcs	r4, r3
   10610:	3421      	adds	r4, #33	; 0x21
   10612:	e656      	b.n	102c2 <__gethex+0x19a>
   10614:	9b05      	ldr	r3, [sp, #20]
   10616:	685a      	ldr	r2, [r3, #4]
   10618:	9b06      	ldr	r3, [sp, #24]
   1061a:	1c51      	adds	r1, r2, #1
   1061c:	0018      	movs	r0, r3
   1061e:	4699      	mov	r9, r3
   10620:	9201      	str	r2, [sp, #4]
   10622:	f7fd f8df 	bl	d7e4 <_Balloc>
   10626:	0006      	movs	r6, r0
   10628:	9b05      	ldr	r3, [sp, #20]
   1062a:	300c      	adds	r0, #12
   1062c:	691a      	ldr	r2, [r3, #16]
   1062e:	330c      	adds	r3, #12
   10630:	9201      	str	r2, [sp, #4]
   10632:	3202      	adds	r2, #2
   10634:	0019      	movs	r1, r3
   10636:	0092      	lsls	r2, r2, #2
   10638:	f7f6 fb36 	bl	6ca8 <memcpy>
   1063c:	4648      	mov	r0, r9
   1063e:	9905      	ldr	r1, [sp, #20]
   10640:	f7fd f8f8 	bl	d834 <_Bfree>
   10644:	0030      	movs	r0, r6
   10646:	6933      	ldr	r3, [r6, #16]
   10648:	3014      	adds	r0, #20
   1064a:	9605      	str	r6, [sp, #20]
   1064c:	e7c0      	b.n	105d0 <__gethex+0x4a8>
   1064e:	46c0      	nop			; (mov r8, r8)

00010650 <__match>:
   10650:	b530      	push	{r4, r5, lr}
   10652:	6802      	ldr	r2, [r0, #0]
   10654:	e008      	b.n	10668 <__match+0x18>
   10656:	7813      	ldrb	r3, [r2, #0]
   10658:	001d      	movs	r5, r3
   1065a:	3d41      	subs	r5, #65	; 0x41
   1065c:	2d19      	cmp	r5, #25
   1065e:	d800      	bhi.n	10662 <__match+0x12>
   10660:	3320      	adds	r3, #32
   10662:	3101      	adds	r1, #1
   10664:	42a3      	cmp	r3, r4
   10666:	d106      	bne.n	10676 <__match+0x26>
   10668:	780c      	ldrb	r4, [r1, #0]
   1066a:	3201      	adds	r2, #1
   1066c:	2c00      	cmp	r4, #0
   1066e:	d1f2      	bne.n	10656 <__match+0x6>
   10670:	6002      	str	r2, [r0, #0]
   10672:	2001      	movs	r0, #1
   10674:	bd30      	pop	{r4, r5, pc}
   10676:	2000      	movs	r0, #0
   10678:	e7fc      	b.n	10674 <__match+0x24>
   1067a:	46c0      	nop			; (mov r8, r8)

0001067c <__hexnan>:
   1067c:	b5f0      	push	{r4, r5, r6, r7, lr}
   1067e:	4657      	mov	r7, sl
   10680:	46de      	mov	lr, fp
   10682:	464e      	mov	r6, r9
   10684:	4645      	mov	r5, r8
   10686:	4692      	mov	sl, r2
   10688:	680a      	ldr	r2, [r1, #0]
   1068a:	211f      	movs	r1, #31
   1068c:	b5e0      	push	{r5, r6, r7, lr}
   1068e:	1153      	asrs	r3, r2, #5
   10690:	b085      	sub	sp, #20
   10692:	009b      	lsls	r3, r3, #2
   10694:	4011      	ands	r1, r2
   10696:	9001      	str	r0, [sp, #4]
   10698:	4453      	add	r3, sl
   1069a:	9103      	str	r1, [sp, #12]
   1069c:	2900      	cmp	r1, #0
   1069e:	d000      	beq.n	106a2 <__hexnan+0x26>
   106a0:	3304      	adds	r3, #4
   106a2:	3b04      	subs	r3, #4
   106a4:	469b      	mov	fp, r3
   106a6:	2300      	movs	r3, #0
   106a8:	465a      	mov	r2, fp
   106aa:	6013      	str	r3, [r2, #0]
   106ac:	9b01      	ldr	r3, [sp, #4]
   106ae:	465c      	mov	r4, fp
   106b0:	6818      	ldr	r0, [r3, #0]
   106b2:	2300      	movs	r3, #0
   106b4:	7841      	ldrb	r1, [r0, #1]
   106b6:	9300      	str	r3, [sp, #0]
   106b8:	4b59      	ldr	r3, [pc, #356]	; (10820 <__hexnan+0x1a4>)
   106ba:	46d8      	mov	r8, fp
   106bc:	2500      	movs	r5, #0
   106be:	2200      	movs	r2, #0
   106c0:	4699      	mov	r9, r3
   106c2:	9402      	str	r4, [sp, #8]
   106c4:	1c46      	adds	r6, r0, #1
   106c6:	2900      	cmp	r1, #0
   106c8:	d036      	beq.n	10738 <__hexnan+0xbc>
   106ca:	464b      	mov	r3, r9
   106cc:	5c5b      	ldrb	r3, [r3, r1]
   106ce:	2b00      	cmp	r3, #0
   106d0:	d158      	bne.n	10784 <__hexnan+0x108>
   106d2:	2920      	cmp	r1, #32
   106d4:	d868      	bhi.n	107a8 <__hexnan+0x12c>
   106d6:	9b00      	ldr	r3, [sp, #0]
   106d8:	429a      	cmp	r2, r3
   106da:	dd28      	ble.n	1072e <__hexnan+0xb2>
   106dc:	4544      	cmp	r4, r8
   106de:	d21c      	bcs.n	1071a <__hexnan+0x9e>
   106e0:	2d07      	cmp	r5, #7
   106e2:	dc1a      	bgt.n	1071a <__hexnan+0x9e>
   106e4:	2308      	movs	r3, #8
   106e6:	1b5d      	subs	r5, r3, r5
   106e8:	00ad      	lsls	r5, r5, #2
   106ea:	3318      	adds	r3, #24
   106ec:	1b5b      	subs	r3, r3, r5
   106ee:	469c      	mov	ip, r3
   106f0:	4661      	mov	r1, ip
   106f2:	6823      	ldr	r3, [r4, #0]
   106f4:	0020      	movs	r0, r4
   106f6:	4647      	mov	r7, r8
   106f8:	4694      	mov	ip, r2
   106fa:	46a0      	mov	r8, r4
   106fc:	000a      	movs	r2, r1
   106fe:	001c      	movs	r4, r3
   10700:	6841      	ldr	r1, [r0, #4]
   10702:	000b      	movs	r3, r1
   10704:	4093      	lsls	r3, r2
   10706:	40e9      	lsrs	r1, r5
   10708:	4323      	orrs	r3, r4
   1070a:	c008      	stmia	r0!, {r3}
   1070c:	000c      	movs	r4, r1
   1070e:	6001      	str	r1, [r0, #0]
   10710:	4287      	cmp	r7, r0
   10712:	d8f5      	bhi.n	10700 <__hexnan+0x84>
   10714:	4644      	mov	r4, r8
   10716:	4662      	mov	r2, ip
   10718:	46b8      	mov	r8, r7
   1071a:	2508      	movs	r5, #8
   1071c:	4554      	cmp	r4, sl
   1071e:	d906      	bls.n	1072e <__hexnan+0xb2>
   10720:	1f23      	subs	r3, r4, #4
   10722:	2100      	movs	r1, #0
   10724:	4698      	mov	r8, r3
   10726:	001c      	movs	r4, r3
   10728:	2500      	movs	r5, #0
   1072a:	6019      	str	r1, [r3, #0]
   1072c:	9200      	str	r2, [sp, #0]
   1072e:	0030      	movs	r0, r6
   10730:	7841      	ldrb	r1, [r0, #1]
   10732:	1c46      	adds	r6, r0, #1
   10734:	2900      	cmp	r1, #0
   10736:	d1c8      	bne.n	106ca <__hexnan+0x4e>
   10738:	9b02      	ldr	r3, [sp, #8]
   1073a:	469c      	mov	ip, r3
   1073c:	2a00      	cmp	r2, #0
   1073e:	d037      	beq.n	107b0 <__hexnan+0x134>
   10740:	4544      	cmp	r4, r8
   10742:	d201      	bcs.n	10748 <__hexnan+0xcc>
   10744:	2d07      	cmp	r5, #7
   10746:	dd57      	ble.n	107f8 <__hexnan+0x17c>
   10748:	4554      	cmp	r4, sl
   1074a:	d939      	bls.n	107c0 <__hexnan+0x144>
   1074c:	4653      	mov	r3, sl
   1074e:	4659      	mov	r1, fp
   10750:	cc04      	ldmia	r4!, {r2}
   10752:	601a      	str	r2, [r3, #0]
   10754:	3304      	adds	r3, #4
   10756:	42a1      	cmp	r1, r4
   10758:	d2fa      	bcs.n	10750 <__hexnan+0xd4>
   1075a:	2200      	movs	r2, #0
   1075c:	c304      	stmia	r3!, {r2}
   1075e:	4299      	cmp	r1, r3
   10760:	d2fc      	bcs.n	1075c <__hexnan+0xe0>
   10762:	468b      	mov	fp, r1
   10764:	680b      	ldr	r3, [r1, #0]
   10766:	2b00      	cmp	r3, #0
   10768:	d10a      	bne.n	10780 <__hexnan+0x104>
   1076a:	4663      	mov	r3, ip
   1076c:	4652      	mov	r2, sl
   1076e:	45da      	cmp	sl, fp
   10770:	d102      	bne.n	10778 <__hexnan+0xfc>
   10772:	e035      	b.n	107e0 <__hexnan+0x164>
   10774:	429a      	cmp	r2, r3
   10776:	d032      	beq.n	107de <__hexnan+0x162>
   10778:	3b04      	subs	r3, #4
   1077a:	6819      	ldr	r1, [r3, #0]
   1077c:	2900      	cmp	r1, #0
   1077e:	d0f9      	beq.n	10774 <__hexnan+0xf8>
   10780:	2005      	movs	r0, #5
   10782:	e016      	b.n	107b2 <__hexnan+0x136>
   10784:	3501      	adds	r5, #1
   10786:	3201      	adds	r2, #1
   10788:	2d08      	cmp	r5, #8
   1078a:	dd05      	ble.n	10798 <__hexnan+0x11c>
   1078c:	4554      	cmp	r4, sl
   1078e:	d9ce      	bls.n	1072e <__hexnan+0xb2>
   10790:	2100      	movs	r1, #0
   10792:	2501      	movs	r5, #1
   10794:	3c04      	subs	r4, #4
   10796:	6021      	str	r1, [r4, #0]
   10798:	200f      	movs	r0, #15
   1079a:	6821      	ldr	r1, [r4, #0]
   1079c:	4003      	ands	r3, r0
   1079e:	0109      	lsls	r1, r1, #4
   107a0:	430b      	orrs	r3, r1
   107a2:	6023      	str	r3, [r4, #0]
   107a4:	0030      	movs	r0, r6
   107a6:	e7c3      	b.n	10730 <__hexnan+0xb4>
   107a8:	9b02      	ldr	r3, [sp, #8]
   107aa:	469c      	mov	ip, r3
   107ac:	2929      	cmp	r1, #41	; 0x29
   107ae:	d01f      	beq.n	107f0 <__hexnan+0x174>
   107b0:	2004      	movs	r0, #4
   107b2:	b005      	add	sp, #20
   107b4:	bc3c      	pop	{r2, r3, r4, r5}
   107b6:	4690      	mov	r8, r2
   107b8:	4699      	mov	r9, r3
   107ba:	46a2      	mov	sl, r4
   107bc:	46ab      	mov	fp, r5
   107be:	bdf0      	pop	{r4, r5, r6, r7, pc}
   107c0:	9b03      	ldr	r3, [sp, #12]
   107c2:	2b00      	cmp	r3, #0
   107c4:	d011      	beq.n	107ea <__hexnan+0x16e>
   107c6:	2220      	movs	r2, #32
   107c8:	9b03      	ldr	r3, [sp, #12]
   107ca:	1ad2      	subs	r2, r2, r3
   107cc:	2301      	movs	r3, #1
   107ce:	425b      	negs	r3, r3
   107d0:	40d3      	lsrs	r3, r2
   107d2:	465a      	mov	r2, fp
   107d4:	6812      	ldr	r2, [r2, #0]
   107d6:	4013      	ands	r3, r2
   107d8:	465a      	mov	r2, fp
   107da:	6013      	str	r3, [r2, #0]
   107dc:	e7c3      	b.n	10766 <__hexnan+0xea>
   107de:	4692      	mov	sl, r2
   107e0:	2301      	movs	r3, #1
   107e2:	4652      	mov	r2, sl
   107e4:	2005      	movs	r0, #5
   107e6:	6013      	str	r3, [r2, #0]
   107e8:	e7e3      	b.n	107b2 <__hexnan+0x136>
   107ea:	465b      	mov	r3, fp
   107ec:	681b      	ldr	r3, [r3, #0]
   107ee:	e7ba      	b.n	10766 <__hexnan+0xea>
   107f0:	9b01      	ldr	r3, [sp, #4]
   107f2:	3002      	adds	r0, #2
   107f4:	6018      	str	r0, [r3, #0]
   107f6:	e7a1      	b.n	1073c <__hexnan+0xc0>
   107f8:	2308      	movs	r3, #8
   107fa:	1b5d      	subs	r5, r3, r5
   107fc:	6823      	ldr	r3, [r4, #0]
   107fe:	2620      	movs	r6, #32
   10800:	0021      	movs	r1, r4
   10802:	4647      	mov	r7, r8
   10804:	001a      	movs	r2, r3
   10806:	00ad      	lsls	r5, r5, #2
   10808:	1b76      	subs	r6, r6, r5
   1080a:	6848      	ldr	r0, [r1, #4]
   1080c:	0003      	movs	r3, r0
   1080e:	40b3      	lsls	r3, r6
   10810:	4313      	orrs	r3, r2
   10812:	0002      	movs	r2, r0
   10814:	40ea      	lsrs	r2, r5
   10816:	c108      	stmia	r1!, {r3}
   10818:	600a      	str	r2, [r1, #0]
   1081a:	428f      	cmp	r7, r1
   1081c:	d8f5      	bhi.n	1080a <__hexnan+0x18e>
   1081e:	e793      	b.n	10748 <__hexnan+0xcc>
   10820:	00014374 	.word	0x00014374

00010824 <_isatty_r>:
   10824:	2300      	movs	r3, #0
   10826:	b570      	push	{r4, r5, r6, lr}
   10828:	4c06      	ldr	r4, [pc, #24]	; (10844 <_isatty_r+0x20>)
   1082a:	0005      	movs	r5, r0
   1082c:	0008      	movs	r0, r1
   1082e:	6023      	str	r3, [r4, #0]
   10830:	f7f0 f9fe 	bl	c30 <_isatty>
   10834:	1c43      	adds	r3, r0, #1
   10836:	d000      	beq.n	1083a <_isatty_r+0x16>
   10838:	bd70      	pop	{r4, r5, r6, pc}
   1083a:	6823      	ldr	r3, [r4, #0]
   1083c:	2b00      	cmp	r3, #0
   1083e:	d0fb      	beq.n	10838 <_isatty_r+0x14>
   10840:	602b      	str	r3, [r5, #0]
   10842:	e7f9      	b.n	10838 <_isatty_r+0x14>
   10844:	20001678 	.word	0x20001678

00010848 <strncmp>:
   10848:	b530      	push	{r4, r5, lr}
   1084a:	2400      	movs	r4, #0
   1084c:	2a00      	cmp	r2, #0
   1084e:	d039      	beq.n	108c4 <strncmp+0x7c>
   10850:	0003      	movs	r3, r0
   10852:	430b      	orrs	r3, r1
   10854:	079b      	lsls	r3, r3, #30
   10856:	d120      	bne.n	1089a <strncmp+0x52>
   10858:	2a03      	cmp	r2, #3
   1085a:	d91e      	bls.n	1089a <strncmp+0x52>
   1085c:	6803      	ldr	r3, [r0, #0]
   1085e:	680d      	ldr	r5, [r1, #0]
   10860:	42ab      	cmp	r3, r5
   10862:	d11a      	bne.n	1089a <strncmp+0x52>
   10864:	3a04      	subs	r2, #4
   10866:	2a00      	cmp	r2, #0
   10868:	d02c      	beq.n	108c4 <strncmp+0x7c>
   1086a:	4d1a      	ldr	r5, [pc, #104]	; (108d4 <strncmp+0x8c>)
   1086c:	195d      	adds	r5, r3, r5
   1086e:	439d      	bics	r5, r3
   10870:	002b      	movs	r3, r5
   10872:	4d19      	ldr	r5, [pc, #100]	; (108d8 <strncmp+0x90>)
   10874:	422b      	tst	r3, r5
   10876:	d00c      	beq.n	10892 <strncmp+0x4a>
   10878:	e024      	b.n	108c4 <strncmp+0x7c>
   1087a:	6803      	ldr	r3, [r0, #0]
   1087c:	680c      	ldr	r4, [r1, #0]
   1087e:	42a3      	cmp	r3, r4
   10880:	d10b      	bne.n	1089a <strncmp+0x52>
   10882:	3a04      	subs	r2, #4
   10884:	2a00      	cmp	r2, #0
   10886:	d01f      	beq.n	108c8 <strncmp+0x80>
   10888:	4c12      	ldr	r4, [pc, #72]	; (108d4 <strncmp+0x8c>)
   1088a:	191c      	adds	r4, r3, r4
   1088c:	439c      	bics	r4, r3
   1088e:	422c      	tst	r4, r5
   10890:	d11a      	bne.n	108c8 <strncmp+0x80>
   10892:	3004      	adds	r0, #4
   10894:	3104      	adds	r1, #4
   10896:	2a03      	cmp	r2, #3
   10898:	d8ef      	bhi.n	1087a <strncmp+0x32>
   1089a:	7803      	ldrb	r3, [r0, #0]
   1089c:	780d      	ldrb	r5, [r1, #0]
   1089e:	3a01      	subs	r2, #1
   108a0:	429d      	cmp	r5, r3
   108a2:	d113      	bne.n	108cc <strncmp+0x84>
   108a4:	2a00      	cmp	r2, #0
   108a6:	d00f      	beq.n	108c8 <strncmp+0x80>
   108a8:	2d00      	cmp	r5, #0
   108aa:	d00d      	beq.n	108c8 <strncmp+0x80>
   108ac:	2301      	movs	r3, #1
   108ae:	e004      	b.n	108ba <strncmp+0x72>
   108b0:	429a      	cmp	r2, r3
   108b2:	d009      	beq.n	108c8 <strncmp+0x80>
   108b4:	3301      	adds	r3, #1
   108b6:	2c00      	cmp	r4, #0
   108b8:	d006      	beq.n	108c8 <strncmp+0x80>
   108ba:	5cc4      	ldrb	r4, [r0, r3]
   108bc:	5ccd      	ldrb	r5, [r1, r3]
   108be:	42ac      	cmp	r4, r5
   108c0:	d0f6      	beq.n	108b0 <strncmp+0x68>
   108c2:	1b64      	subs	r4, r4, r5
   108c4:	0020      	movs	r0, r4
   108c6:	bd30      	pop	{r4, r5, pc}
   108c8:	2400      	movs	r4, #0
   108ca:	e7fb      	b.n	108c4 <strncmp+0x7c>
   108cc:	001c      	movs	r4, r3
   108ce:	1b64      	subs	r4, r4, r5
   108d0:	e7f8      	b.n	108c4 <strncmp+0x7c>
   108d2:	46c0      	nop			; (mov r8, r8)
   108d4:	fefefeff 	.word	0xfefefeff
   108d8:	80808080 	.word	0x80808080

000108dc <_wcrtomb_r>:
   108dc:	b570      	push	{r4, r5, r6, lr}
   108de:	001d      	movs	r5, r3
   108e0:	4b11      	ldr	r3, [pc, #68]	; (10928 <_wcrtomb_r+0x4c>)
   108e2:	b084      	sub	sp, #16
   108e4:	681b      	ldr	r3, [r3, #0]
   108e6:	0004      	movs	r4, r0
   108e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   108ea:	2900      	cmp	r1, #0
   108ec:	d00e      	beq.n	1090c <_wcrtomb_r+0x30>
   108ee:	2b00      	cmp	r3, #0
   108f0:	d016      	beq.n	10920 <_wcrtomb_r+0x44>
   108f2:	20e0      	movs	r0, #224	; 0xe0
   108f4:	581e      	ldr	r6, [r3, r0]
   108f6:	002b      	movs	r3, r5
   108f8:	0020      	movs	r0, r4
   108fa:	47b0      	blx	r6
   108fc:	1c43      	adds	r3, r0, #1
   108fe:	d103      	bne.n	10908 <_wcrtomb_r+0x2c>
   10900:	2300      	movs	r3, #0
   10902:	602b      	str	r3, [r5, #0]
   10904:	338a      	adds	r3, #138	; 0x8a
   10906:	6023      	str	r3, [r4, #0]
   10908:	b004      	add	sp, #16
   1090a:	bd70      	pop	{r4, r5, r6, pc}
   1090c:	2b00      	cmp	r3, #0
   1090e:	d009      	beq.n	10924 <_wcrtomb_r+0x48>
   10910:	22e0      	movs	r2, #224	; 0xe0
   10912:	a901      	add	r1, sp, #4
   10914:	589e      	ldr	r6, [r3, r2]
   10916:	0020      	movs	r0, r4
   10918:	002b      	movs	r3, r5
   1091a:	2200      	movs	r2, #0
   1091c:	47b0      	blx	r6
   1091e:	e7ed      	b.n	108fc <_wcrtomb_r+0x20>
   10920:	4b02      	ldr	r3, [pc, #8]	; (1092c <_wcrtomb_r+0x50>)
   10922:	e7e6      	b.n	108f2 <_wcrtomb_r+0x16>
   10924:	4b01      	ldr	r3, [pc, #4]	; (1092c <_wcrtomb_r+0x50>)
   10926:	e7f3      	b.n	10910 <_wcrtomb_r+0x34>
   10928:	2000006c 	.word	0x2000006c
   1092c:	2000049c 	.word	0x2000049c

00010930 <__aeabi_dadd>:
   10930:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10932:	4645      	mov	r5, r8
   10934:	46de      	mov	lr, fp
   10936:	4657      	mov	r7, sl
   10938:	464e      	mov	r6, r9
   1093a:	030c      	lsls	r4, r1, #12
   1093c:	b5e0      	push	{r5, r6, r7, lr}
   1093e:	004e      	lsls	r6, r1, #1
   10940:	0fc9      	lsrs	r1, r1, #31
   10942:	4688      	mov	r8, r1
   10944:	000d      	movs	r5, r1
   10946:	0a61      	lsrs	r1, r4, #9
   10948:	0f44      	lsrs	r4, r0, #29
   1094a:	430c      	orrs	r4, r1
   1094c:	00c7      	lsls	r7, r0, #3
   1094e:	0319      	lsls	r1, r3, #12
   10950:	0058      	lsls	r0, r3, #1
   10952:	0fdb      	lsrs	r3, r3, #31
   10954:	469b      	mov	fp, r3
   10956:	0a4b      	lsrs	r3, r1, #9
   10958:	0f51      	lsrs	r1, r2, #29
   1095a:	430b      	orrs	r3, r1
   1095c:	0d76      	lsrs	r6, r6, #21
   1095e:	0d40      	lsrs	r0, r0, #21
   10960:	0019      	movs	r1, r3
   10962:	00d2      	lsls	r2, r2, #3
   10964:	45d8      	cmp	r8, fp
   10966:	d100      	bne.n	1096a <__aeabi_dadd+0x3a>
   10968:	e0ae      	b.n	10ac8 <__aeabi_dadd+0x198>
   1096a:	1a35      	subs	r5, r6, r0
   1096c:	2d00      	cmp	r5, #0
   1096e:	dc00      	bgt.n	10972 <__aeabi_dadd+0x42>
   10970:	e0f6      	b.n	10b60 <__aeabi_dadd+0x230>
   10972:	2800      	cmp	r0, #0
   10974:	d10f      	bne.n	10996 <__aeabi_dadd+0x66>
   10976:	4313      	orrs	r3, r2
   10978:	d100      	bne.n	1097c <__aeabi_dadd+0x4c>
   1097a:	e0db      	b.n	10b34 <__aeabi_dadd+0x204>
   1097c:	1e6b      	subs	r3, r5, #1
   1097e:	2b00      	cmp	r3, #0
   10980:	d000      	beq.n	10984 <__aeabi_dadd+0x54>
   10982:	e137      	b.n	10bf4 <__aeabi_dadd+0x2c4>
   10984:	1aba      	subs	r2, r7, r2
   10986:	4297      	cmp	r7, r2
   10988:	41bf      	sbcs	r7, r7
   1098a:	1a64      	subs	r4, r4, r1
   1098c:	427f      	negs	r7, r7
   1098e:	1be4      	subs	r4, r4, r7
   10990:	2601      	movs	r6, #1
   10992:	0017      	movs	r7, r2
   10994:	e024      	b.n	109e0 <__aeabi_dadd+0xb0>
   10996:	4bc6      	ldr	r3, [pc, #792]	; (10cb0 <__aeabi_dadd+0x380>)
   10998:	429e      	cmp	r6, r3
   1099a:	d04d      	beq.n	10a38 <__aeabi_dadd+0x108>
   1099c:	2380      	movs	r3, #128	; 0x80
   1099e:	041b      	lsls	r3, r3, #16
   109a0:	4319      	orrs	r1, r3
   109a2:	2d38      	cmp	r5, #56	; 0x38
   109a4:	dd00      	ble.n	109a8 <__aeabi_dadd+0x78>
   109a6:	e107      	b.n	10bb8 <__aeabi_dadd+0x288>
   109a8:	2d1f      	cmp	r5, #31
   109aa:	dd00      	ble.n	109ae <__aeabi_dadd+0x7e>
   109ac:	e138      	b.n	10c20 <__aeabi_dadd+0x2f0>
   109ae:	2020      	movs	r0, #32
   109b0:	1b43      	subs	r3, r0, r5
   109b2:	469a      	mov	sl, r3
   109b4:	000b      	movs	r3, r1
   109b6:	4650      	mov	r0, sl
   109b8:	4083      	lsls	r3, r0
   109ba:	4699      	mov	r9, r3
   109bc:	0013      	movs	r3, r2
   109be:	4648      	mov	r0, r9
   109c0:	40eb      	lsrs	r3, r5
   109c2:	4318      	orrs	r0, r3
   109c4:	0003      	movs	r3, r0
   109c6:	4650      	mov	r0, sl
   109c8:	4082      	lsls	r2, r0
   109ca:	1e50      	subs	r0, r2, #1
   109cc:	4182      	sbcs	r2, r0
   109ce:	40e9      	lsrs	r1, r5
   109d0:	431a      	orrs	r2, r3
   109d2:	1aba      	subs	r2, r7, r2
   109d4:	1a61      	subs	r1, r4, r1
   109d6:	4297      	cmp	r7, r2
   109d8:	41a4      	sbcs	r4, r4
   109da:	0017      	movs	r7, r2
   109dc:	4264      	negs	r4, r4
   109de:	1b0c      	subs	r4, r1, r4
   109e0:	0223      	lsls	r3, r4, #8
   109e2:	d562      	bpl.n	10aaa <__aeabi_dadd+0x17a>
   109e4:	0264      	lsls	r4, r4, #9
   109e6:	0a65      	lsrs	r5, r4, #9
   109e8:	2d00      	cmp	r5, #0
   109ea:	d100      	bne.n	109ee <__aeabi_dadd+0xbe>
   109ec:	e0df      	b.n	10bae <__aeabi_dadd+0x27e>
   109ee:	0028      	movs	r0, r5
   109f0:	f7f5 ffc6 	bl	6980 <__clzsi2>
   109f4:	0003      	movs	r3, r0
   109f6:	3b08      	subs	r3, #8
   109f8:	2b1f      	cmp	r3, #31
   109fa:	dd00      	ble.n	109fe <__aeabi_dadd+0xce>
   109fc:	e0d2      	b.n	10ba4 <__aeabi_dadd+0x274>
   109fe:	2220      	movs	r2, #32
   10a00:	003c      	movs	r4, r7
   10a02:	1ad2      	subs	r2, r2, r3
   10a04:	409d      	lsls	r5, r3
   10a06:	40d4      	lsrs	r4, r2
   10a08:	409f      	lsls	r7, r3
   10a0a:	4325      	orrs	r5, r4
   10a0c:	429e      	cmp	r6, r3
   10a0e:	dd00      	ble.n	10a12 <__aeabi_dadd+0xe2>
   10a10:	e0c4      	b.n	10b9c <__aeabi_dadd+0x26c>
   10a12:	1b9e      	subs	r6, r3, r6
   10a14:	1c73      	adds	r3, r6, #1
   10a16:	2b1f      	cmp	r3, #31
   10a18:	dd00      	ble.n	10a1c <__aeabi_dadd+0xec>
   10a1a:	e0f1      	b.n	10c00 <__aeabi_dadd+0x2d0>
   10a1c:	2220      	movs	r2, #32
   10a1e:	0038      	movs	r0, r7
   10a20:	0029      	movs	r1, r5
   10a22:	1ad2      	subs	r2, r2, r3
   10a24:	40d8      	lsrs	r0, r3
   10a26:	4091      	lsls	r1, r2
   10a28:	4097      	lsls	r7, r2
   10a2a:	002c      	movs	r4, r5
   10a2c:	4301      	orrs	r1, r0
   10a2e:	1e78      	subs	r0, r7, #1
   10a30:	4187      	sbcs	r7, r0
   10a32:	40dc      	lsrs	r4, r3
   10a34:	2600      	movs	r6, #0
   10a36:	430f      	orrs	r7, r1
   10a38:	077b      	lsls	r3, r7, #29
   10a3a:	d009      	beq.n	10a50 <__aeabi_dadd+0x120>
   10a3c:	230f      	movs	r3, #15
   10a3e:	403b      	ands	r3, r7
   10a40:	2b04      	cmp	r3, #4
   10a42:	d005      	beq.n	10a50 <__aeabi_dadd+0x120>
   10a44:	1d3b      	adds	r3, r7, #4
   10a46:	42bb      	cmp	r3, r7
   10a48:	41bf      	sbcs	r7, r7
   10a4a:	427f      	negs	r7, r7
   10a4c:	19e4      	adds	r4, r4, r7
   10a4e:	001f      	movs	r7, r3
   10a50:	0223      	lsls	r3, r4, #8
   10a52:	d52c      	bpl.n	10aae <__aeabi_dadd+0x17e>
   10a54:	4b96      	ldr	r3, [pc, #600]	; (10cb0 <__aeabi_dadd+0x380>)
   10a56:	3601      	adds	r6, #1
   10a58:	429e      	cmp	r6, r3
   10a5a:	d100      	bne.n	10a5e <__aeabi_dadd+0x12e>
   10a5c:	e09a      	b.n	10b94 <__aeabi_dadd+0x264>
   10a5e:	4645      	mov	r5, r8
   10a60:	4b94      	ldr	r3, [pc, #592]	; (10cb4 <__aeabi_dadd+0x384>)
   10a62:	08ff      	lsrs	r7, r7, #3
   10a64:	401c      	ands	r4, r3
   10a66:	0760      	lsls	r0, r4, #29
   10a68:	0576      	lsls	r6, r6, #21
   10a6a:	0264      	lsls	r4, r4, #9
   10a6c:	4307      	orrs	r7, r0
   10a6e:	0b24      	lsrs	r4, r4, #12
   10a70:	0d76      	lsrs	r6, r6, #21
   10a72:	2100      	movs	r1, #0
   10a74:	0324      	lsls	r4, r4, #12
   10a76:	0b23      	lsrs	r3, r4, #12
   10a78:	0d0c      	lsrs	r4, r1, #20
   10a7a:	4a8f      	ldr	r2, [pc, #572]	; (10cb8 <__aeabi_dadd+0x388>)
   10a7c:	0524      	lsls	r4, r4, #20
   10a7e:	431c      	orrs	r4, r3
   10a80:	4014      	ands	r4, r2
   10a82:	0533      	lsls	r3, r6, #20
   10a84:	4323      	orrs	r3, r4
   10a86:	005b      	lsls	r3, r3, #1
   10a88:	07ed      	lsls	r5, r5, #31
   10a8a:	085b      	lsrs	r3, r3, #1
   10a8c:	432b      	orrs	r3, r5
   10a8e:	0038      	movs	r0, r7
   10a90:	0019      	movs	r1, r3
   10a92:	bc3c      	pop	{r2, r3, r4, r5}
   10a94:	4690      	mov	r8, r2
   10a96:	4699      	mov	r9, r3
   10a98:	46a2      	mov	sl, r4
   10a9a:	46ab      	mov	fp, r5
   10a9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   10a9e:	4664      	mov	r4, ip
   10aa0:	4304      	orrs	r4, r0
   10aa2:	d100      	bne.n	10aa6 <__aeabi_dadd+0x176>
   10aa4:	e211      	b.n	10eca <__aeabi_dadd+0x59a>
   10aa6:	0004      	movs	r4, r0
   10aa8:	4667      	mov	r7, ip
   10aaa:	077b      	lsls	r3, r7, #29
   10aac:	d1c6      	bne.n	10a3c <__aeabi_dadd+0x10c>
   10aae:	4645      	mov	r5, r8
   10ab0:	0760      	lsls	r0, r4, #29
   10ab2:	08ff      	lsrs	r7, r7, #3
   10ab4:	4307      	orrs	r7, r0
   10ab6:	08e4      	lsrs	r4, r4, #3
   10ab8:	4b7d      	ldr	r3, [pc, #500]	; (10cb0 <__aeabi_dadd+0x380>)
   10aba:	429e      	cmp	r6, r3
   10abc:	d030      	beq.n	10b20 <__aeabi_dadd+0x1f0>
   10abe:	0324      	lsls	r4, r4, #12
   10ac0:	0576      	lsls	r6, r6, #21
   10ac2:	0b24      	lsrs	r4, r4, #12
   10ac4:	0d76      	lsrs	r6, r6, #21
   10ac6:	e7d4      	b.n	10a72 <__aeabi_dadd+0x142>
   10ac8:	1a33      	subs	r3, r6, r0
   10aca:	469a      	mov	sl, r3
   10acc:	2b00      	cmp	r3, #0
   10ace:	dd78      	ble.n	10bc2 <__aeabi_dadd+0x292>
   10ad0:	2800      	cmp	r0, #0
   10ad2:	d031      	beq.n	10b38 <__aeabi_dadd+0x208>
   10ad4:	4876      	ldr	r0, [pc, #472]	; (10cb0 <__aeabi_dadd+0x380>)
   10ad6:	4286      	cmp	r6, r0
   10ad8:	d0ae      	beq.n	10a38 <__aeabi_dadd+0x108>
   10ada:	2080      	movs	r0, #128	; 0x80
   10adc:	0400      	lsls	r0, r0, #16
   10ade:	4301      	orrs	r1, r0
   10ae0:	4653      	mov	r3, sl
   10ae2:	2b38      	cmp	r3, #56	; 0x38
   10ae4:	dc00      	bgt.n	10ae8 <__aeabi_dadd+0x1b8>
   10ae6:	e0e9      	b.n	10cbc <__aeabi_dadd+0x38c>
   10ae8:	430a      	orrs	r2, r1
   10aea:	1e51      	subs	r1, r2, #1
   10aec:	418a      	sbcs	r2, r1
   10aee:	2100      	movs	r1, #0
   10af0:	19d2      	adds	r2, r2, r7
   10af2:	42ba      	cmp	r2, r7
   10af4:	41bf      	sbcs	r7, r7
   10af6:	1909      	adds	r1, r1, r4
   10af8:	427c      	negs	r4, r7
   10afa:	0017      	movs	r7, r2
   10afc:	190c      	adds	r4, r1, r4
   10afe:	0223      	lsls	r3, r4, #8
   10b00:	d5d3      	bpl.n	10aaa <__aeabi_dadd+0x17a>
   10b02:	4b6b      	ldr	r3, [pc, #428]	; (10cb0 <__aeabi_dadd+0x380>)
   10b04:	3601      	adds	r6, #1
   10b06:	429e      	cmp	r6, r3
   10b08:	d100      	bne.n	10b0c <__aeabi_dadd+0x1dc>
   10b0a:	e13a      	b.n	10d82 <__aeabi_dadd+0x452>
   10b0c:	2001      	movs	r0, #1
   10b0e:	4b69      	ldr	r3, [pc, #420]	; (10cb4 <__aeabi_dadd+0x384>)
   10b10:	401c      	ands	r4, r3
   10b12:	087b      	lsrs	r3, r7, #1
   10b14:	4007      	ands	r7, r0
   10b16:	431f      	orrs	r7, r3
   10b18:	07e0      	lsls	r0, r4, #31
   10b1a:	4307      	orrs	r7, r0
   10b1c:	0864      	lsrs	r4, r4, #1
   10b1e:	e78b      	b.n	10a38 <__aeabi_dadd+0x108>
   10b20:	0023      	movs	r3, r4
   10b22:	433b      	orrs	r3, r7
   10b24:	d100      	bne.n	10b28 <__aeabi_dadd+0x1f8>
   10b26:	e1cb      	b.n	10ec0 <__aeabi_dadd+0x590>
   10b28:	2280      	movs	r2, #128	; 0x80
   10b2a:	0312      	lsls	r2, r2, #12
   10b2c:	4314      	orrs	r4, r2
   10b2e:	0324      	lsls	r4, r4, #12
   10b30:	0b24      	lsrs	r4, r4, #12
   10b32:	e79e      	b.n	10a72 <__aeabi_dadd+0x142>
   10b34:	002e      	movs	r6, r5
   10b36:	e77f      	b.n	10a38 <__aeabi_dadd+0x108>
   10b38:	0008      	movs	r0, r1
   10b3a:	4310      	orrs	r0, r2
   10b3c:	d100      	bne.n	10b40 <__aeabi_dadd+0x210>
   10b3e:	e0b4      	b.n	10caa <__aeabi_dadd+0x37a>
   10b40:	1e58      	subs	r0, r3, #1
   10b42:	2800      	cmp	r0, #0
   10b44:	d000      	beq.n	10b48 <__aeabi_dadd+0x218>
   10b46:	e0de      	b.n	10d06 <__aeabi_dadd+0x3d6>
   10b48:	18ba      	adds	r2, r7, r2
   10b4a:	42ba      	cmp	r2, r7
   10b4c:	419b      	sbcs	r3, r3
   10b4e:	1864      	adds	r4, r4, r1
   10b50:	425b      	negs	r3, r3
   10b52:	18e4      	adds	r4, r4, r3
   10b54:	0017      	movs	r7, r2
   10b56:	2601      	movs	r6, #1
   10b58:	0223      	lsls	r3, r4, #8
   10b5a:	d5a6      	bpl.n	10aaa <__aeabi_dadd+0x17a>
   10b5c:	2602      	movs	r6, #2
   10b5e:	e7d5      	b.n	10b0c <__aeabi_dadd+0x1dc>
   10b60:	2d00      	cmp	r5, #0
   10b62:	d16e      	bne.n	10c42 <__aeabi_dadd+0x312>
   10b64:	1c70      	adds	r0, r6, #1
   10b66:	0540      	lsls	r0, r0, #21
   10b68:	0d40      	lsrs	r0, r0, #21
   10b6a:	2801      	cmp	r0, #1
   10b6c:	dc00      	bgt.n	10b70 <__aeabi_dadd+0x240>
   10b6e:	e0f9      	b.n	10d64 <__aeabi_dadd+0x434>
   10b70:	1ab8      	subs	r0, r7, r2
   10b72:	4684      	mov	ip, r0
   10b74:	4287      	cmp	r7, r0
   10b76:	4180      	sbcs	r0, r0
   10b78:	1ae5      	subs	r5, r4, r3
   10b7a:	4240      	negs	r0, r0
   10b7c:	1a2d      	subs	r5, r5, r0
   10b7e:	0228      	lsls	r0, r5, #8
   10b80:	d400      	bmi.n	10b84 <__aeabi_dadd+0x254>
   10b82:	e089      	b.n	10c98 <__aeabi_dadd+0x368>
   10b84:	1bd7      	subs	r7, r2, r7
   10b86:	42ba      	cmp	r2, r7
   10b88:	4192      	sbcs	r2, r2
   10b8a:	1b1c      	subs	r4, r3, r4
   10b8c:	4252      	negs	r2, r2
   10b8e:	1aa5      	subs	r5, r4, r2
   10b90:	46d8      	mov	r8, fp
   10b92:	e729      	b.n	109e8 <__aeabi_dadd+0xb8>
   10b94:	4645      	mov	r5, r8
   10b96:	2400      	movs	r4, #0
   10b98:	2700      	movs	r7, #0
   10b9a:	e76a      	b.n	10a72 <__aeabi_dadd+0x142>
   10b9c:	4c45      	ldr	r4, [pc, #276]	; (10cb4 <__aeabi_dadd+0x384>)
   10b9e:	1af6      	subs	r6, r6, r3
   10ba0:	402c      	ands	r4, r5
   10ba2:	e749      	b.n	10a38 <__aeabi_dadd+0x108>
   10ba4:	003d      	movs	r5, r7
   10ba6:	3828      	subs	r0, #40	; 0x28
   10ba8:	4085      	lsls	r5, r0
   10baa:	2700      	movs	r7, #0
   10bac:	e72e      	b.n	10a0c <__aeabi_dadd+0xdc>
   10bae:	0038      	movs	r0, r7
   10bb0:	f7f5 fee6 	bl	6980 <__clzsi2>
   10bb4:	3020      	adds	r0, #32
   10bb6:	e71d      	b.n	109f4 <__aeabi_dadd+0xc4>
   10bb8:	430a      	orrs	r2, r1
   10bba:	1e51      	subs	r1, r2, #1
   10bbc:	418a      	sbcs	r2, r1
   10bbe:	2100      	movs	r1, #0
   10bc0:	e707      	b.n	109d2 <__aeabi_dadd+0xa2>
   10bc2:	2b00      	cmp	r3, #0
   10bc4:	d000      	beq.n	10bc8 <__aeabi_dadd+0x298>
   10bc6:	e0f3      	b.n	10db0 <__aeabi_dadd+0x480>
   10bc8:	1c70      	adds	r0, r6, #1
   10bca:	0543      	lsls	r3, r0, #21
   10bcc:	0d5b      	lsrs	r3, r3, #21
   10bce:	2b01      	cmp	r3, #1
   10bd0:	dc00      	bgt.n	10bd4 <__aeabi_dadd+0x2a4>
   10bd2:	e0ad      	b.n	10d30 <__aeabi_dadd+0x400>
   10bd4:	4b36      	ldr	r3, [pc, #216]	; (10cb0 <__aeabi_dadd+0x380>)
   10bd6:	4298      	cmp	r0, r3
   10bd8:	d100      	bne.n	10bdc <__aeabi_dadd+0x2ac>
   10bda:	e0d1      	b.n	10d80 <__aeabi_dadd+0x450>
   10bdc:	18ba      	adds	r2, r7, r2
   10bde:	42ba      	cmp	r2, r7
   10be0:	41bf      	sbcs	r7, r7
   10be2:	1864      	adds	r4, r4, r1
   10be4:	427f      	negs	r7, r7
   10be6:	19e4      	adds	r4, r4, r7
   10be8:	07e7      	lsls	r7, r4, #31
   10bea:	0852      	lsrs	r2, r2, #1
   10bec:	4317      	orrs	r7, r2
   10bee:	0864      	lsrs	r4, r4, #1
   10bf0:	0006      	movs	r6, r0
   10bf2:	e721      	b.n	10a38 <__aeabi_dadd+0x108>
   10bf4:	482e      	ldr	r0, [pc, #184]	; (10cb0 <__aeabi_dadd+0x380>)
   10bf6:	4285      	cmp	r5, r0
   10bf8:	d100      	bne.n	10bfc <__aeabi_dadd+0x2cc>
   10bfa:	e093      	b.n	10d24 <__aeabi_dadd+0x3f4>
   10bfc:	001d      	movs	r5, r3
   10bfe:	e6d0      	b.n	109a2 <__aeabi_dadd+0x72>
   10c00:	0029      	movs	r1, r5
   10c02:	3e1f      	subs	r6, #31
   10c04:	40f1      	lsrs	r1, r6
   10c06:	2b20      	cmp	r3, #32
   10c08:	d100      	bne.n	10c0c <__aeabi_dadd+0x2dc>
   10c0a:	e08d      	b.n	10d28 <__aeabi_dadd+0x3f8>
   10c0c:	2240      	movs	r2, #64	; 0x40
   10c0e:	1ad3      	subs	r3, r2, r3
   10c10:	409d      	lsls	r5, r3
   10c12:	432f      	orrs	r7, r5
   10c14:	1e7d      	subs	r5, r7, #1
   10c16:	41af      	sbcs	r7, r5
   10c18:	2400      	movs	r4, #0
   10c1a:	430f      	orrs	r7, r1
   10c1c:	2600      	movs	r6, #0
   10c1e:	e744      	b.n	10aaa <__aeabi_dadd+0x17a>
   10c20:	002b      	movs	r3, r5
   10c22:	0008      	movs	r0, r1
   10c24:	3b20      	subs	r3, #32
   10c26:	40d8      	lsrs	r0, r3
   10c28:	0003      	movs	r3, r0
   10c2a:	2d20      	cmp	r5, #32
   10c2c:	d100      	bne.n	10c30 <__aeabi_dadd+0x300>
   10c2e:	e07d      	b.n	10d2c <__aeabi_dadd+0x3fc>
   10c30:	2040      	movs	r0, #64	; 0x40
   10c32:	1b45      	subs	r5, r0, r5
   10c34:	40a9      	lsls	r1, r5
   10c36:	430a      	orrs	r2, r1
   10c38:	1e51      	subs	r1, r2, #1
   10c3a:	418a      	sbcs	r2, r1
   10c3c:	2100      	movs	r1, #0
   10c3e:	431a      	orrs	r2, r3
   10c40:	e6c7      	b.n	109d2 <__aeabi_dadd+0xa2>
   10c42:	2e00      	cmp	r6, #0
   10c44:	d050      	beq.n	10ce8 <__aeabi_dadd+0x3b8>
   10c46:	4e1a      	ldr	r6, [pc, #104]	; (10cb0 <__aeabi_dadd+0x380>)
   10c48:	42b0      	cmp	r0, r6
   10c4a:	d057      	beq.n	10cfc <__aeabi_dadd+0x3cc>
   10c4c:	2680      	movs	r6, #128	; 0x80
   10c4e:	426b      	negs	r3, r5
   10c50:	4699      	mov	r9, r3
   10c52:	0436      	lsls	r6, r6, #16
   10c54:	4334      	orrs	r4, r6
   10c56:	464b      	mov	r3, r9
   10c58:	2b38      	cmp	r3, #56	; 0x38
   10c5a:	dd00      	ble.n	10c5e <__aeabi_dadd+0x32e>
   10c5c:	e0d6      	b.n	10e0c <__aeabi_dadd+0x4dc>
   10c5e:	2b1f      	cmp	r3, #31
   10c60:	dd00      	ble.n	10c64 <__aeabi_dadd+0x334>
   10c62:	e135      	b.n	10ed0 <__aeabi_dadd+0x5a0>
   10c64:	2620      	movs	r6, #32
   10c66:	1af5      	subs	r5, r6, r3
   10c68:	0026      	movs	r6, r4
   10c6a:	40ae      	lsls	r6, r5
   10c6c:	46b2      	mov	sl, r6
   10c6e:	003e      	movs	r6, r7
   10c70:	40de      	lsrs	r6, r3
   10c72:	46ac      	mov	ip, r5
   10c74:	0035      	movs	r5, r6
   10c76:	4656      	mov	r6, sl
   10c78:	432e      	orrs	r6, r5
   10c7a:	4665      	mov	r5, ip
   10c7c:	40af      	lsls	r7, r5
   10c7e:	1e7d      	subs	r5, r7, #1
   10c80:	41af      	sbcs	r7, r5
   10c82:	40dc      	lsrs	r4, r3
   10c84:	4337      	orrs	r7, r6
   10c86:	1bd7      	subs	r7, r2, r7
   10c88:	42ba      	cmp	r2, r7
   10c8a:	4192      	sbcs	r2, r2
   10c8c:	1b0c      	subs	r4, r1, r4
   10c8e:	4252      	negs	r2, r2
   10c90:	1aa4      	subs	r4, r4, r2
   10c92:	0006      	movs	r6, r0
   10c94:	46d8      	mov	r8, fp
   10c96:	e6a3      	b.n	109e0 <__aeabi_dadd+0xb0>
   10c98:	4664      	mov	r4, ip
   10c9a:	4667      	mov	r7, ip
   10c9c:	432c      	orrs	r4, r5
   10c9e:	d000      	beq.n	10ca2 <__aeabi_dadd+0x372>
   10ca0:	e6a2      	b.n	109e8 <__aeabi_dadd+0xb8>
   10ca2:	2500      	movs	r5, #0
   10ca4:	2600      	movs	r6, #0
   10ca6:	2700      	movs	r7, #0
   10ca8:	e706      	b.n	10ab8 <__aeabi_dadd+0x188>
   10caa:	001e      	movs	r6, r3
   10cac:	e6c4      	b.n	10a38 <__aeabi_dadd+0x108>
   10cae:	46c0      	nop			; (mov r8, r8)
   10cb0:	000007ff 	.word	0x000007ff
   10cb4:	ff7fffff 	.word	0xff7fffff
   10cb8:	800fffff 	.word	0x800fffff
   10cbc:	2b1f      	cmp	r3, #31
   10cbe:	dc63      	bgt.n	10d88 <__aeabi_dadd+0x458>
   10cc0:	2020      	movs	r0, #32
   10cc2:	1ac3      	subs	r3, r0, r3
   10cc4:	0008      	movs	r0, r1
   10cc6:	4098      	lsls	r0, r3
   10cc8:	469c      	mov	ip, r3
   10cca:	4683      	mov	fp, r0
   10ccc:	4653      	mov	r3, sl
   10cce:	0010      	movs	r0, r2
   10cd0:	40d8      	lsrs	r0, r3
   10cd2:	0003      	movs	r3, r0
   10cd4:	4658      	mov	r0, fp
   10cd6:	4318      	orrs	r0, r3
   10cd8:	4663      	mov	r3, ip
   10cda:	409a      	lsls	r2, r3
   10cdc:	1e53      	subs	r3, r2, #1
   10cde:	419a      	sbcs	r2, r3
   10ce0:	4653      	mov	r3, sl
   10ce2:	4302      	orrs	r2, r0
   10ce4:	40d9      	lsrs	r1, r3
   10ce6:	e703      	b.n	10af0 <__aeabi_dadd+0x1c0>
   10ce8:	0026      	movs	r6, r4
   10cea:	433e      	orrs	r6, r7
   10cec:	d006      	beq.n	10cfc <__aeabi_dadd+0x3cc>
   10cee:	43eb      	mvns	r3, r5
   10cf0:	4699      	mov	r9, r3
   10cf2:	2b00      	cmp	r3, #0
   10cf4:	d0c7      	beq.n	10c86 <__aeabi_dadd+0x356>
   10cf6:	4e94      	ldr	r6, [pc, #592]	; (10f48 <__aeabi_dadd+0x618>)
   10cf8:	42b0      	cmp	r0, r6
   10cfa:	d1ac      	bne.n	10c56 <__aeabi_dadd+0x326>
   10cfc:	000c      	movs	r4, r1
   10cfe:	0017      	movs	r7, r2
   10d00:	0006      	movs	r6, r0
   10d02:	46d8      	mov	r8, fp
   10d04:	e698      	b.n	10a38 <__aeabi_dadd+0x108>
   10d06:	4b90      	ldr	r3, [pc, #576]	; (10f48 <__aeabi_dadd+0x618>)
   10d08:	459a      	cmp	sl, r3
   10d0a:	d00b      	beq.n	10d24 <__aeabi_dadd+0x3f4>
   10d0c:	4682      	mov	sl, r0
   10d0e:	e6e7      	b.n	10ae0 <__aeabi_dadd+0x1b0>
   10d10:	2800      	cmp	r0, #0
   10d12:	d000      	beq.n	10d16 <__aeabi_dadd+0x3e6>
   10d14:	e09e      	b.n	10e54 <__aeabi_dadd+0x524>
   10d16:	0018      	movs	r0, r3
   10d18:	4310      	orrs	r0, r2
   10d1a:	d100      	bne.n	10d1e <__aeabi_dadd+0x3ee>
   10d1c:	e0e9      	b.n	10ef2 <__aeabi_dadd+0x5c2>
   10d1e:	001c      	movs	r4, r3
   10d20:	0017      	movs	r7, r2
   10d22:	46d8      	mov	r8, fp
   10d24:	4e88      	ldr	r6, [pc, #544]	; (10f48 <__aeabi_dadd+0x618>)
   10d26:	e687      	b.n	10a38 <__aeabi_dadd+0x108>
   10d28:	2500      	movs	r5, #0
   10d2a:	e772      	b.n	10c12 <__aeabi_dadd+0x2e2>
   10d2c:	2100      	movs	r1, #0
   10d2e:	e782      	b.n	10c36 <__aeabi_dadd+0x306>
   10d30:	0023      	movs	r3, r4
   10d32:	433b      	orrs	r3, r7
   10d34:	2e00      	cmp	r6, #0
   10d36:	d000      	beq.n	10d3a <__aeabi_dadd+0x40a>
   10d38:	e0ab      	b.n	10e92 <__aeabi_dadd+0x562>
   10d3a:	2b00      	cmp	r3, #0
   10d3c:	d100      	bne.n	10d40 <__aeabi_dadd+0x410>
   10d3e:	e0e7      	b.n	10f10 <__aeabi_dadd+0x5e0>
   10d40:	000b      	movs	r3, r1
   10d42:	4313      	orrs	r3, r2
   10d44:	d100      	bne.n	10d48 <__aeabi_dadd+0x418>
   10d46:	e677      	b.n	10a38 <__aeabi_dadd+0x108>
   10d48:	18ba      	adds	r2, r7, r2
   10d4a:	42ba      	cmp	r2, r7
   10d4c:	41bf      	sbcs	r7, r7
   10d4e:	1864      	adds	r4, r4, r1
   10d50:	427f      	negs	r7, r7
   10d52:	19e4      	adds	r4, r4, r7
   10d54:	0223      	lsls	r3, r4, #8
   10d56:	d400      	bmi.n	10d5a <__aeabi_dadd+0x42a>
   10d58:	e0f2      	b.n	10f40 <__aeabi_dadd+0x610>
   10d5a:	4b7c      	ldr	r3, [pc, #496]	; (10f4c <__aeabi_dadd+0x61c>)
   10d5c:	0017      	movs	r7, r2
   10d5e:	401c      	ands	r4, r3
   10d60:	0006      	movs	r6, r0
   10d62:	e669      	b.n	10a38 <__aeabi_dadd+0x108>
   10d64:	0020      	movs	r0, r4
   10d66:	4338      	orrs	r0, r7
   10d68:	2e00      	cmp	r6, #0
   10d6a:	d1d1      	bne.n	10d10 <__aeabi_dadd+0x3e0>
   10d6c:	2800      	cmp	r0, #0
   10d6e:	d15b      	bne.n	10e28 <__aeabi_dadd+0x4f8>
   10d70:	001c      	movs	r4, r3
   10d72:	4314      	orrs	r4, r2
   10d74:	d100      	bne.n	10d78 <__aeabi_dadd+0x448>
   10d76:	e0a8      	b.n	10eca <__aeabi_dadd+0x59a>
   10d78:	001c      	movs	r4, r3
   10d7a:	0017      	movs	r7, r2
   10d7c:	46d8      	mov	r8, fp
   10d7e:	e65b      	b.n	10a38 <__aeabi_dadd+0x108>
   10d80:	0006      	movs	r6, r0
   10d82:	2400      	movs	r4, #0
   10d84:	2700      	movs	r7, #0
   10d86:	e697      	b.n	10ab8 <__aeabi_dadd+0x188>
   10d88:	4650      	mov	r0, sl
   10d8a:	000b      	movs	r3, r1
   10d8c:	3820      	subs	r0, #32
   10d8e:	40c3      	lsrs	r3, r0
   10d90:	4699      	mov	r9, r3
   10d92:	4653      	mov	r3, sl
   10d94:	2b20      	cmp	r3, #32
   10d96:	d100      	bne.n	10d9a <__aeabi_dadd+0x46a>
   10d98:	e095      	b.n	10ec6 <__aeabi_dadd+0x596>
   10d9a:	2340      	movs	r3, #64	; 0x40
   10d9c:	4650      	mov	r0, sl
   10d9e:	1a1b      	subs	r3, r3, r0
   10da0:	4099      	lsls	r1, r3
   10da2:	430a      	orrs	r2, r1
   10da4:	1e51      	subs	r1, r2, #1
   10da6:	418a      	sbcs	r2, r1
   10da8:	464b      	mov	r3, r9
   10daa:	2100      	movs	r1, #0
   10dac:	431a      	orrs	r2, r3
   10dae:	e69f      	b.n	10af0 <__aeabi_dadd+0x1c0>
   10db0:	2e00      	cmp	r6, #0
   10db2:	d130      	bne.n	10e16 <__aeabi_dadd+0x4e6>
   10db4:	0026      	movs	r6, r4
   10db6:	433e      	orrs	r6, r7
   10db8:	d067      	beq.n	10e8a <__aeabi_dadd+0x55a>
   10dba:	43db      	mvns	r3, r3
   10dbc:	469a      	mov	sl, r3
   10dbe:	2b00      	cmp	r3, #0
   10dc0:	d01c      	beq.n	10dfc <__aeabi_dadd+0x4cc>
   10dc2:	4e61      	ldr	r6, [pc, #388]	; (10f48 <__aeabi_dadd+0x618>)
   10dc4:	42b0      	cmp	r0, r6
   10dc6:	d060      	beq.n	10e8a <__aeabi_dadd+0x55a>
   10dc8:	4653      	mov	r3, sl
   10dca:	2b38      	cmp	r3, #56	; 0x38
   10dcc:	dd00      	ble.n	10dd0 <__aeabi_dadd+0x4a0>
   10dce:	e096      	b.n	10efe <__aeabi_dadd+0x5ce>
   10dd0:	2b1f      	cmp	r3, #31
   10dd2:	dd00      	ble.n	10dd6 <__aeabi_dadd+0x4a6>
   10dd4:	e09f      	b.n	10f16 <__aeabi_dadd+0x5e6>
   10dd6:	2620      	movs	r6, #32
   10dd8:	1af3      	subs	r3, r6, r3
   10dda:	0026      	movs	r6, r4
   10ddc:	409e      	lsls	r6, r3
   10dde:	469c      	mov	ip, r3
   10de0:	46b3      	mov	fp, r6
   10de2:	4653      	mov	r3, sl
   10de4:	003e      	movs	r6, r7
   10de6:	40de      	lsrs	r6, r3
   10de8:	0033      	movs	r3, r6
   10dea:	465e      	mov	r6, fp
   10dec:	431e      	orrs	r6, r3
   10dee:	4663      	mov	r3, ip
   10df0:	409f      	lsls	r7, r3
   10df2:	1e7b      	subs	r3, r7, #1
   10df4:	419f      	sbcs	r7, r3
   10df6:	4653      	mov	r3, sl
   10df8:	40dc      	lsrs	r4, r3
   10dfa:	4337      	orrs	r7, r6
   10dfc:	18bf      	adds	r7, r7, r2
   10dfe:	4297      	cmp	r7, r2
   10e00:	4192      	sbcs	r2, r2
   10e02:	1864      	adds	r4, r4, r1
   10e04:	4252      	negs	r2, r2
   10e06:	18a4      	adds	r4, r4, r2
   10e08:	0006      	movs	r6, r0
   10e0a:	e678      	b.n	10afe <__aeabi_dadd+0x1ce>
   10e0c:	4327      	orrs	r7, r4
   10e0e:	1e7c      	subs	r4, r7, #1
   10e10:	41a7      	sbcs	r7, r4
   10e12:	2400      	movs	r4, #0
   10e14:	e737      	b.n	10c86 <__aeabi_dadd+0x356>
   10e16:	4e4c      	ldr	r6, [pc, #304]	; (10f48 <__aeabi_dadd+0x618>)
   10e18:	42b0      	cmp	r0, r6
   10e1a:	d036      	beq.n	10e8a <__aeabi_dadd+0x55a>
   10e1c:	2680      	movs	r6, #128	; 0x80
   10e1e:	425b      	negs	r3, r3
   10e20:	0436      	lsls	r6, r6, #16
   10e22:	469a      	mov	sl, r3
   10e24:	4334      	orrs	r4, r6
   10e26:	e7cf      	b.n	10dc8 <__aeabi_dadd+0x498>
   10e28:	0018      	movs	r0, r3
   10e2a:	4310      	orrs	r0, r2
   10e2c:	d100      	bne.n	10e30 <__aeabi_dadd+0x500>
   10e2e:	e603      	b.n	10a38 <__aeabi_dadd+0x108>
   10e30:	1ab8      	subs	r0, r7, r2
   10e32:	4684      	mov	ip, r0
   10e34:	4567      	cmp	r7, ip
   10e36:	41ad      	sbcs	r5, r5
   10e38:	1ae0      	subs	r0, r4, r3
   10e3a:	426d      	negs	r5, r5
   10e3c:	1b40      	subs	r0, r0, r5
   10e3e:	0205      	lsls	r5, r0, #8
   10e40:	d400      	bmi.n	10e44 <__aeabi_dadd+0x514>
   10e42:	e62c      	b.n	10a9e <__aeabi_dadd+0x16e>
   10e44:	1bd7      	subs	r7, r2, r7
   10e46:	42ba      	cmp	r2, r7
   10e48:	4192      	sbcs	r2, r2
   10e4a:	1b1c      	subs	r4, r3, r4
   10e4c:	4252      	negs	r2, r2
   10e4e:	1aa4      	subs	r4, r4, r2
   10e50:	46d8      	mov	r8, fp
   10e52:	e5f1      	b.n	10a38 <__aeabi_dadd+0x108>
   10e54:	0018      	movs	r0, r3
   10e56:	4310      	orrs	r0, r2
   10e58:	d100      	bne.n	10e5c <__aeabi_dadd+0x52c>
   10e5a:	e763      	b.n	10d24 <__aeabi_dadd+0x3f4>
   10e5c:	08f8      	lsrs	r0, r7, #3
   10e5e:	0767      	lsls	r7, r4, #29
   10e60:	4307      	orrs	r7, r0
   10e62:	2080      	movs	r0, #128	; 0x80
   10e64:	08e4      	lsrs	r4, r4, #3
   10e66:	0300      	lsls	r0, r0, #12
   10e68:	4204      	tst	r4, r0
   10e6a:	d008      	beq.n	10e7e <__aeabi_dadd+0x54e>
   10e6c:	08dd      	lsrs	r5, r3, #3
   10e6e:	4205      	tst	r5, r0
   10e70:	d105      	bne.n	10e7e <__aeabi_dadd+0x54e>
   10e72:	08d2      	lsrs	r2, r2, #3
   10e74:	0759      	lsls	r1, r3, #29
   10e76:	4311      	orrs	r1, r2
   10e78:	000f      	movs	r7, r1
   10e7a:	002c      	movs	r4, r5
   10e7c:	46d8      	mov	r8, fp
   10e7e:	0f7b      	lsrs	r3, r7, #29
   10e80:	00e4      	lsls	r4, r4, #3
   10e82:	431c      	orrs	r4, r3
   10e84:	00ff      	lsls	r7, r7, #3
   10e86:	4e30      	ldr	r6, [pc, #192]	; (10f48 <__aeabi_dadd+0x618>)
   10e88:	e5d6      	b.n	10a38 <__aeabi_dadd+0x108>
   10e8a:	000c      	movs	r4, r1
   10e8c:	0017      	movs	r7, r2
   10e8e:	0006      	movs	r6, r0
   10e90:	e5d2      	b.n	10a38 <__aeabi_dadd+0x108>
   10e92:	2b00      	cmp	r3, #0
   10e94:	d038      	beq.n	10f08 <__aeabi_dadd+0x5d8>
   10e96:	000b      	movs	r3, r1
   10e98:	4313      	orrs	r3, r2
   10e9a:	d100      	bne.n	10e9e <__aeabi_dadd+0x56e>
   10e9c:	e742      	b.n	10d24 <__aeabi_dadd+0x3f4>
   10e9e:	08f8      	lsrs	r0, r7, #3
   10ea0:	0767      	lsls	r7, r4, #29
   10ea2:	4307      	orrs	r7, r0
   10ea4:	2080      	movs	r0, #128	; 0x80
   10ea6:	08e4      	lsrs	r4, r4, #3
   10ea8:	0300      	lsls	r0, r0, #12
   10eaa:	4204      	tst	r4, r0
   10eac:	d0e7      	beq.n	10e7e <__aeabi_dadd+0x54e>
   10eae:	08cb      	lsrs	r3, r1, #3
   10eb0:	4203      	tst	r3, r0
   10eb2:	d1e4      	bne.n	10e7e <__aeabi_dadd+0x54e>
   10eb4:	08d2      	lsrs	r2, r2, #3
   10eb6:	0749      	lsls	r1, r1, #29
   10eb8:	4311      	orrs	r1, r2
   10eba:	000f      	movs	r7, r1
   10ebc:	001c      	movs	r4, r3
   10ebe:	e7de      	b.n	10e7e <__aeabi_dadd+0x54e>
   10ec0:	2700      	movs	r7, #0
   10ec2:	2400      	movs	r4, #0
   10ec4:	e5d5      	b.n	10a72 <__aeabi_dadd+0x142>
   10ec6:	2100      	movs	r1, #0
   10ec8:	e76b      	b.n	10da2 <__aeabi_dadd+0x472>
   10eca:	2500      	movs	r5, #0
   10ecc:	2700      	movs	r7, #0
   10ece:	e5f3      	b.n	10ab8 <__aeabi_dadd+0x188>
   10ed0:	464e      	mov	r6, r9
   10ed2:	0025      	movs	r5, r4
   10ed4:	3e20      	subs	r6, #32
   10ed6:	40f5      	lsrs	r5, r6
   10ed8:	464b      	mov	r3, r9
   10eda:	002e      	movs	r6, r5
   10edc:	2b20      	cmp	r3, #32
   10ede:	d02d      	beq.n	10f3c <__aeabi_dadd+0x60c>
   10ee0:	2540      	movs	r5, #64	; 0x40
   10ee2:	1aed      	subs	r5, r5, r3
   10ee4:	40ac      	lsls	r4, r5
   10ee6:	4327      	orrs	r7, r4
   10ee8:	1e7c      	subs	r4, r7, #1
   10eea:	41a7      	sbcs	r7, r4
   10eec:	2400      	movs	r4, #0
   10eee:	4337      	orrs	r7, r6
   10ef0:	e6c9      	b.n	10c86 <__aeabi_dadd+0x356>
   10ef2:	2480      	movs	r4, #128	; 0x80
   10ef4:	2500      	movs	r5, #0
   10ef6:	0324      	lsls	r4, r4, #12
   10ef8:	4e13      	ldr	r6, [pc, #76]	; (10f48 <__aeabi_dadd+0x618>)
   10efa:	2700      	movs	r7, #0
   10efc:	e5dc      	b.n	10ab8 <__aeabi_dadd+0x188>
   10efe:	4327      	orrs	r7, r4
   10f00:	1e7c      	subs	r4, r7, #1
   10f02:	41a7      	sbcs	r7, r4
   10f04:	2400      	movs	r4, #0
   10f06:	e779      	b.n	10dfc <__aeabi_dadd+0x4cc>
   10f08:	000c      	movs	r4, r1
   10f0a:	0017      	movs	r7, r2
   10f0c:	4e0e      	ldr	r6, [pc, #56]	; (10f48 <__aeabi_dadd+0x618>)
   10f0e:	e593      	b.n	10a38 <__aeabi_dadd+0x108>
   10f10:	000c      	movs	r4, r1
   10f12:	0017      	movs	r7, r2
   10f14:	e590      	b.n	10a38 <__aeabi_dadd+0x108>
   10f16:	4656      	mov	r6, sl
   10f18:	0023      	movs	r3, r4
   10f1a:	3e20      	subs	r6, #32
   10f1c:	40f3      	lsrs	r3, r6
   10f1e:	4699      	mov	r9, r3
   10f20:	4653      	mov	r3, sl
   10f22:	2b20      	cmp	r3, #32
   10f24:	d00e      	beq.n	10f44 <__aeabi_dadd+0x614>
   10f26:	2340      	movs	r3, #64	; 0x40
   10f28:	4656      	mov	r6, sl
   10f2a:	1b9b      	subs	r3, r3, r6
   10f2c:	409c      	lsls	r4, r3
   10f2e:	4327      	orrs	r7, r4
   10f30:	1e7c      	subs	r4, r7, #1
   10f32:	41a7      	sbcs	r7, r4
   10f34:	464b      	mov	r3, r9
   10f36:	2400      	movs	r4, #0
   10f38:	431f      	orrs	r7, r3
   10f3a:	e75f      	b.n	10dfc <__aeabi_dadd+0x4cc>
   10f3c:	2400      	movs	r4, #0
   10f3e:	e7d2      	b.n	10ee6 <__aeabi_dadd+0x5b6>
   10f40:	0017      	movs	r7, r2
   10f42:	e5b2      	b.n	10aaa <__aeabi_dadd+0x17a>
   10f44:	2400      	movs	r4, #0
   10f46:	e7f2      	b.n	10f2e <__aeabi_dadd+0x5fe>
   10f48:	000007ff 	.word	0x000007ff
   10f4c:	ff7fffff 	.word	0xff7fffff

00010f50 <__aeabi_dcmpun>:
   10f50:	b570      	push	{r4, r5, r6, lr}
   10f52:	4e0e      	ldr	r6, [pc, #56]	; (10f8c <__aeabi_dcmpun+0x3c>)
   10f54:	030d      	lsls	r5, r1, #12
   10f56:	031c      	lsls	r4, r3, #12
   10f58:	0049      	lsls	r1, r1, #1
   10f5a:	005b      	lsls	r3, r3, #1
   10f5c:	0b2d      	lsrs	r5, r5, #12
   10f5e:	0d49      	lsrs	r1, r1, #21
   10f60:	0b24      	lsrs	r4, r4, #12
   10f62:	0d5b      	lsrs	r3, r3, #21
   10f64:	42b1      	cmp	r1, r6
   10f66:	d004      	beq.n	10f72 <__aeabi_dcmpun+0x22>
   10f68:	4908      	ldr	r1, [pc, #32]	; (10f8c <__aeabi_dcmpun+0x3c>)
   10f6a:	2000      	movs	r0, #0
   10f6c:	428b      	cmp	r3, r1
   10f6e:	d008      	beq.n	10f82 <__aeabi_dcmpun+0x32>
   10f70:	bd70      	pop	{r4, r5, r6, pc}
   10f72:	4305      	orrs	r5, r0
   10f74:	2001      	movs	r0, #1
   10f76:	2d00      	cmp	r5, #0
   10f78:	d1fa      	bne.n	10f70 <__aeabi_dcmpun+0x20>
   10f7a:	4904      	ldr	r1, [pc, #16]	; (10f8c <__aeabi_dcmpun+0x3c>)
   10f7c:	2000      	movs	r0, #0
   10f7e:	428b      	cmp	r3, r1
   10f80:	d1f6      	bne.n	10f70 <__aeabi_dcmpun+0x20>
   10f82:	4314      	orrs	r4, r2
   10f84:	0020      	movs	r0, r4
   10f86:	1e44      	subs	r4, r0, #1
   10f88:	41a0      	sbcs	r0, r4
   10f8a:	e7f1      	b.n	10f70 <__aeabi_dcmpun+0x20>
   10f8c:	000007ff 	.word	0x000007ff
   10f90:	682f2e2e 	.word	0x682f2e2e
   10f94:	732f6c61 	.word	0x732f6c61
   10f98:	682f6372 	.word	0x682f6372
   10f9c:	695f6c61 	.word	0x695f6c61
   10fa0:	6d5f6332 	.word	0x6d5f6332
   10fa4:	6e79735f 	.word	0x6e79735f
   10fa8:	00632e63 	.word	0x00632e63
   10fac:	682f2e2e 	.word	0x682f2e2e
   10fb0:	732f6c61 	.word	0x732f6c61
   10fb4:	682f6372 	.word	0x682f6372
   10fb8:	695f6c61 	.word	0x695f6c61
   10fbc:	00632e6f 	.word	0x00632e6f
   10fc0:	682f2e2e 	.word	0x682f2e2e
   10fc4:	732f6c61 	.word	0x732f6c61
   10fc8:	682f6372 	.word	0x682f6372
   10fcc:	735f6c61 	.word	0x735f6c61
   10fd0:	6d5f6970 	.word	0x6d5f6970
   10fd4:	6e79735f 	.word	0x6e79735f
   10fd8:	00632e63 	.word	0x00632e63
   10fdc:	682f2e2e 	.word	0x682f2e2e
   10fe0:	732f6c61 	.word	0x732f6c61
   10fe4:	682f6372 	.word	0x682f6372
   10fe8:	745f6c61 	.word	0x745f6c61
   10fec:	72656d69 	.word	0x72656d69
   10ff0:	0000632e 	.word	0x0000632e
   10ff4:	682f2e2e 	.word	0x682f2e2e
   10ff8:	732f6c61 	.word	0x732f6c61
   10ffc:	682f6372 	.word	0x682f6372
   11000:	755f6c61 	.word	0x755f6c61
   11004:	74726173 	.word	0x74726173
   11008:	7973615f 	.word	0x7973615f
   1100c:	632e636e 	.word	0x632e636e
   11010:	00000000 	.word	0x00000000
   11014:	682f2e2e 	.word	0x682f2e2e
   11018:	752f6c61 	.word	0x752f6c61
   1101c:	736c6974 	.word	0x736c6974
   11020:	6372732f 	.word	0x6372732f
   11024:	6974752f 	.word	0x6974752f
   11028:	6c5f736c 	.word	0x6c5f736c
   1102c:	2e747369 	.word	0x2e747369
   11030:	00000063 	.word	0x00000063
   11034:	682f2e2e 	.word	0x682f2e2e
   11038:	752f6c61 	.word	0x752f6c61
   1103c:	736c6974 	.word	0x736c6974
   11040:	6372732f 	.word	0x6372732f
   11044:	6974752f 	.word	0x6974752f
   11048:	725f736c 	.word	0x725f736c
   1104c:	62676e69 	.word	0x62676e69
   11050:	65666675 	.word	0x65666675
   11054:	00632e72 	.word	0x00632e72
   11058:	682f2e2e 	.word	0x682f2e2e
   1105c:	652f6c70 	.word	0x652f6c70
   11060:	682f6369 	.word	0x682f6369
   11064:	655f6c70 	.word	0x655f6c70
   11068:	632e6369 	.word	0x632e6369
   1106c:	00000000 	.word	0x00000000

00011070 <_map>:
   11070:	00000008 00000028 682f2e2e 722f6c70     ....(...../hpl/r
   11080:	682f6374 725f6c70 632e6374 00000000     tc/hpl_rtc.c....
   11090:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
   110a0:	65735f6c 6d6f6372 0000632e              l_sercom.c..

000110ac <_i2cms>:
   110ac:	00000002 00200014 00000100 00003736     ...... .....67..
   110bc:	000000d7 02dc6c00                       .....l..

000110c4 <_usarts>:
   110c4:	00000004 40010004 00030000 0000fe5c     .......@....\...

000110d4 <sercomspi_regs>:
   110d4:	0020000c 00020000 00000000 00000008     .. .............
   110e4:	0020000c 00020000 00000000 0300000b     .. .............

000110f4 <favicon_ico>:
   110f4:	474e5089 0a1a0a0d 0d000000 52444849     .PNG........IHDR
   11104:	20000000 20000000 00000608 7a7a7300     ... ... .....szz
   11114:	000000f4 49427304 08080854 64087c08     .....sBIT....|.d
   11124:	00000088 59487009 00000073 000000ec     .....pHYs.......
   11134:	287901ec 0000bd71 45741900 6f537458     ..y(q.....tEXtSo
   11144:	61777466 77006572 692e7777 63736b6e     ftware.www.inksc
   11154:	2e657061 9b67726f 001a3cee 49ff0400     ape.org..<.....I
   11164:	58544144 7997c585 1c57144c ec333fc7     DATX...yL.W..?3.
   11174:	2ebb5cb2 8882a2b0 45141647 d62ecf1a     .\......G..E....
   11184:	61ed5ab6 d5624a2b 1de34da6 dad46aaf     .Z.a+Jb..M...j..
   11194:	6351b5a4 5a969b1b c6a26adb a53136da     ..Qc...Z.j...61.
   111a4:	21a2d135 278d623d ada236b6 8820ae88     5..!=b.'.6.... .
   111b4:	22c8825c ccc7b2c8 40ff4cce a8239017     \..".....L.@..#.
   111c4:	4cffbf68 7efdef7e 3379fbef 819bdef3     h..L~..~..y3....
   111d4:	ddc259ff fc10106b 80ddbd84 24860047     .Y..k.......G..$
   111e4:	16fe2626 3da31313 f2f2f749 b76ed172     &&.....=I...r.n.
   111f4:	8480eaa7 b8d4d4d4 e2c763b1 aca8b972     .........c..r...
   11204:	9336ecac 2458d8d8 74e9c249 08d8d8d2     ..6...X$I..t....
   11214:	7d3e9f40 64ad5ab0 b7626666 5ae807db     @.>}.Z.dffb....Z
   11224:	b6deec16 dd6d578e 7dac2377 3e5c384d     .....Wm.w#.}M8\>
   11234:	9c246a2a 8f26beb5 76db02fd 228a2167     *j$...&....vg!."
   11244:	2200ad00 a70b0a4d 001b7405 37b03034     ..."M....t..40.7
   11254:	10004e8c 72a659d0 56c1d2e6 eb76ba19     .N...Y.r...V..v.
   11264:	dbadd13a 782fa70a a8922bc8 d0d155ae     :...../x.+...U..
   11274:	30053088 13206074 33d10546 0809e3bc     .0.0t` .F..3....
   11284:	6d36c601 b1c8065d 50f6f97b 9110c603     ..6m]...{..P....
   11294:	b10647e7 88899a60 0aaa221e 8a3ed565     .G..`...."..e.>.
   112a4:	efd664ca 69248dba 62619e2c 4ba1a274     .d....$i,.abt..K
   112b4:	b00a76e3 7a1ddf7d 2c5c8846 88310894     .v..}..zF.\,..1.
   112c4:	8222b67c dfd110b0 034f75bf 1be6ab00     |."......uO.....
   112d4:	79eac6b1 a7042539 77f3654b ec3bec75     ...y9%..Ke.wu.;.
   112e4:	11a5e3e4 1d0a0504 d8800f0d a99ce759     ............Y...
   112f4:	dfdcec61 1922a5c0 2b4370db 9972a2f3     a....."..pC+..r.
   11304:	fc7da733 fb34dd95 110b0a7b 822cbcd9     3.}...4.{.....,.
   11314:	31852fd9 ea2dc367 01c3ea9d 778d3ec8     ./.1g.-......>.w
   11324:	c765acbf fa7e16fb b17b0a24 b74dfccc     ..e...~.$.{...M.
   11334:	352abdc8 3290cbf5 67b8c75e db4ac875     ..*5...2^..gu.J.
   11344:	621a8e59 6605c3e0 835a7d96 b2bc7724     Y..b...f.}Z.$w..
   11354:	a8a805da ba4ef1f6 d1a48f03 830eb7af     ......N.........
   11364:	ebe9605e 89aeb626 4689d0e4 083ba456     ^`..&......FV.;.
   11374:	6f18120e 2dbc640b dbfdc190 46e1927f     ...o.d.-.......F
   11384:	95805111 3cb81c5b a9b443ed 2361e80c     .Q..[..<.C....a#
   11394:	37c150d6 f36b0f9f 9b0246d6 371b803e     .P.7..k..F..>..7
   113a4:	22b1981b 02d5eb8b e64dcf89 6c55cb99     ..."......M...Ul
   113b4:	9b54fc5c c147fbc1 639b3b8f 39d65bd5     \.T...G..;.c.[.9
   113c4:	00742e80 73fdd773 2eda3a37 8ac93df1     ..t.s..s7:...=..
   113d4:	0f747448 642baae4 b8a4ac5d fcd3a4b0     Htt...+d].......
   113e4:	021d1e96 557b7ecc 4ee90697 9e0aba75     .....~{U...Nu...
   113f4:	27781e84 79fd507c ff4a77f8 fb9ff6ce     ..x'|P.y.wJ.....
   11404:	8d9c29b2 0fb476db 2e42ee70 8d3b1ebf     .)...v..p.B...;.
   11414:	3b98144e 8d010d2b 46befb83 4dc62553     N..;+......FS%.M
   11424:	f2524998 21451418 af1d3d3d 8a4a4bd7     .IR...E!==...KJ.
   11434:	70d54d0d 7bfc5dbb 48c5b721 a7a7d31a     .M.p.].{!..H....
   11444:	cc9c9c91 c967f395 80011a1c 6f34f490     ......g.......4o
   11454:	2ce4edec cd9a3ac8 c5ed1f0b 8c8778db     ...,.:.......x..
   11464:	a66356af 1a6b5d92 cc8a8531 52419f5a     .Vc..]k.1...Z.AR
   11474:	0e1c18f2 21a16107 626938bc 6270ca8b     .....a.!.8ib..pb
   11484:	a3f8c6fb 2e7afaba 9c92e6e6 aaa28c9c     ......z.........
   11494:	ee7a735c 94e085ba f79696e4 434d023d     \sz.........=.MC
   114a4:	49141555 02451442 6b2bc008 f346aa28     U..IB.E...+k(.F.
   114b4:	251753c7 14dfe534 d5095e65 c37f1003     .S.%4...e^......
   114c4:	636f79ce a73300c7 d373224c 1d7a0c3c     .yoc..3.L"s.<.z.
   114d4:	01a66773 76c77ab0 899b927c c004de53     sg...z.v|...S...
   114e4:	f6e0b162 fc763878 b2de8764 5a5a47cf     b...x8v.d....GZZ
   114f4:	1816bd53 d79af040 85111be8 f82664c5     S...@........d&.
   11504:	dcab6e6c 83890056 9c1c4813 fe612ad0     ln..V....H...*a.
   11514:	62ad0d92 bb591451 e6cebdf6 10e64ade     ...bQ.Y......J..
   11524:	3fbf9713 207d6dce 7c10a6aa e018ea47     ...?.m} ...|G...
   11534:	82c96871 e7e7e495 7d35f3e3 f95ff511     qh........5}.._.
   11544:	f3805b56 70e1cee7 238dfc38 edc08c47     V[.....p8..#G...
   11554:	b8ad7376 d3c78f18 151540ad 16151415     vs.......@......
   11564:	d3939392 0a69a00c 8844d29a afd72500     ......i...D..%..
   11574:	b20a28a1 ef6e69e4 47474546 0335a023     .(...in.FEGG#.5.
   11584:	19c39b84 5e106834 633087af d51401f3     ....4h.^..0c....
   11594:	9bb757ab 0d252403 49d4fb23 01aa803f     .W...$%.#..I?...
   115a4:	94f1f1f1 b5609694 d3163fc6 75adaa96     ......`..?.....u
   115b4:	0064fb20 f1cc0055 1ea3d6f1 259fa7b7      .d.U..........%
   115c4:	d3a8d232 9589fdeb 933e5555 b0f158d1     2.......UU>..X..
   115d4:	c78f6e46 f6043060 df358636 43871ad5     Fn..`0..6.5....C
   115e4:	15f5ebd3 17d6a69a e89d5c14 e2e25ddf     .........\...]..
   115f4:	5f2cf6e2 c59e6cbe 6f27f162 6145f2d9     ..,_.l..b.'o..Ea
   11604:	f59e5e5e c9800161 fc2d168b f9b366c5     ^^..a.....-..f..
   11614:	43f19567 471fcd46 2a070c8e 7432c5a1     g..CF..G...*..2t
   11624:	0ea75cb9 8a79f81c 57f66cd9 95d5d5d7     .\....y..l.W....
   11634:	4039823e 271389e1 cb4b4aab 05f900fc     >.9@...'.JK.....
   11644:	dd400d05 fdfef8bd b7d00c35 4780eb88     ..@.....5......G
   11654:	ffba55fd c809d7c7 793ee41d 971e07fd     .U........>y....
   11664:	2862fbd7 0000d764 45490000 42ae444e     ..b(d.....IEND.B
   11674:	00008260 5054554f 4154533a 33252054     `...OUTP:STAT %3
   11684:	00000073 0046464f 7074754f 69207475     s...OFF.Output i
   11694:	464f2073 00000d46 00006b6f 00004e4f     s OFF...ok..ON..
   116a4:	7074754f 69207475 4e4f2073 0000000d     Output is ON....
   116b4:	5341454d 5e5b253a 00005d3f 544c4f56     MEAS:%[^?]..VOLT
   116c4:	00000000 7361654d 20657275 746c6f56     ....Measure Volt
   116d4:	20656761 6d6d6f63 0d646e61 00000000     age command.....
   116e4:	302e3834 00003133 52525543 00000000     48.031..CURR....
   116f4:	7361654d 20657275 72727543 20746e65     Measure Current 
   11704:	6d6d6f63 0d646e61 00000000 32312e30     command.....0.12
   11714:	00000031 5453522a 00000000 20544547     1...*RST....GET 
   11724:	0000202f 65646e69 74682e78 73206c6d     / ..index.html s
   11734:	0d646e65 00000000 20544547 7661662f     end.....GET /fav
   11744:	6e6f6369 6f63692e 00000000 69766166     icon.ico....favi
   11754:	2e6e6f63 206f6369 646e6573 0000000d     con.ico send....
   11764:	50545448 312e312f 30303220 0d4b4f20     HTTP/1.1 200 OK.
   11774:	6e6f430a 746e6574 7079542d 69203a65     .Content-Type: i
   11784:	6567616d 692d782f 0d6e6f63 000a0a0d     mage/x-icon.....
   11794:	20544547 7465672f 6c61765f 00000073     GET /get_vals...
   117a4:	50545448 312e312f 30303220 0d4b4f20     HTTP/1.1 200 OK.
   117b4:	6e6f430a 746e6574 7079542d 61203a65     .Content-Type: a
   117c4:	696c7070 69746163 6a2f6e6f 0d6e6f73     pplication/json.
   117d4:	7b0a0a0d 706d6122 2e253a22 222c6633     ...{"amp":%.3f,"
   117e4:	746c6f76 2e253a22 222c6633 74746177     volt":%.3f,"watt
   117f4:	2e253a22 222c6633 44706d61 3a224d4d     ":%.3f,"ampDMM":
   11804:	66332e25 6f76222c 4d44746c 253a224d     %.3f,"voltDMM":%
   11814:	2c66332e 74756f22 74617453 253a2265     .3f,"outState":%
   11824:	72222c64 3a226d65 222c6425 22727265     d,"rem":%d,"err"
   11834:	2c64253a 306e6922 64253a22 6e69222c     :%d,"in0":%d,"in
   11844:	253a2231 69222c64 3a22326e 007d6425     1":%d,"in2":%d}.
   11854:	20544547 7465732f 6c61765f 00000073     GET /set_vals...
   11864:	3d706d61 76266625 3d746c6f 00006625     amp=%f&volt=%f..
   11874:	203b6625 0a0d6625 00000000 50545448     %f; %f......HTTP
   11884:	312e312f 30303220 0d4b4f20 6e6f430a     /1.1 200 OK..Con
   11894:	746e6574 7079542d 61203a65 696c7070     tent-Type: appli
   118a4:	69746163 6a2f6e6f 0d6e6f73 7b0a0a0d     cation/json....{
   118b4:	63757322 73736563 72743a22 007d6575     "success":true}.
   118c4:	20544547 6e6f632f 6c6f7274 00000000     GET /control....
   118d4:	69766564 253d6563 5d265e5b 74636126     device=%[^&]&act
   118e4:	3d6e6f69 00007325 203b7325 0a0d7325     ion=%s..%s; %s..
   118f4:	00000000 006e6166 00006e6f 006d6572     ....fan.on..rem.
   11904:	00757370                                psu.

00011908 <psu_page>:
   11908:	50545448 312e312f 30303220 0d4b4f20     HTTP/1.1 200 OK.
   11918:	6e6f430a 746e6574 7079542d 74203a65     .Content-Type: t
   11928:	2f747865 6c6d7468 0a0a0d0d 4f44213c     ext/html....<!DO
   11938:	50595443 74682045 0a3e6c6d 6d74683c     CTYPE html>.<htm
   11948:	616c206c 223d676e 3e226e65 65683c0a     l lang="en">.<he
   11958:	0a3e6461 74656d3c 68632061 65737261     ad>.<meta charse
   11968:	55223d74 382d4654 3c0a3e22 6c746974     t="UTF-8">.<titl
   11978:	6f503e65 20726577 70707553 4320796c     e>Power Supply C
   11988:	72746e6f 2f3c6c6f 6c746974 3c0a3e65     ontrol</title>.<
   11998:	6c797473 620a3e65 2079646f 6f660a7b     style>.body {.fo
   119a8:	662d746e 6c696d61 41203a79 6c616972     nt-family: Arial
   119b8:	6173202c 732d736e 66697265 69640a3b     , sans-serif;.di
   119c8:	616c7073 66203a79 3b78656c 656c660a     splay: flex;.fle
   119d8:	69642d78 74636572 3a6e6f69 6c6f6320     x-direction: col
   119e8:	3b6e6d75 696c610a 692d6e67 736d6574     umn;.align-items
   119f8:	6563203a 7265746e 61700a3b 6e696464     : center;.paddin
   11a08:	32203a67 3b787030 6361620a 6f72676b     g: 20px;.backgro
   11a18:	3a646e75 30662320 30663066 0a7d0a3b     und: #f0f0f0;.}.
   11a28:	6e6f632e 6e696174 7b207265 78616d0a     .container {.max
   11a38:	6469772d 203a6874 70303034 770a3b78     -width: 400px;.w
   11a48:	68746469 3031203a 0a3b2530 6b636162     idth: 100%;.back
   11a58:	756f7267 203a646e 74696877 700a3b65     ground: white;.p
   11a68:	69646461 203a676e 78703032 6f620a3b     adding: 20px;.bo
   11a78:	72656472 6461722d 3a737569 70303120     rder-radius: 10p
   11a88:	620a3b78 732d786f 6f646168 30203a77     x;.box-shadow: 0
   11a98:	31203020 20787030 61626772 202c3028      0 10px rgba(0, 
   11aa8:	30202c30 2e30202c 0a3b2931 742e0a7d     0, 0, 0.1);.}..t
   11ab8:	656c7469 740a7b20 2d747865 67696c61     itle {.text-alig
   11ac8:	63203a6e 65746e65 6d0a3b72 69677261     n: center;.margi
   11ad8:	6f622d6e 6d6f7474 3032203a 0a3b7870     n-bottom: 20px;.
   11ae8:	722e0a7d 202c776f 706e692e 722d7475     }..row, .input-r
   11af8:	202c776f 6572702e 2d746573 20776f72     ow, .preset-row 
   11b08:	69640a7b 616c7073 66203a79 3b78656c     {.display: flex;
   11b18:	73756a0a 79666974 6e6f632d 746e6574     .justify-content
   11b28:	7073203a 2d656361 77746562 3b6e6565     : space-between;
   11b38:	696c610a 692d6e67 736d6574 6563203a     .align-items: ce
   11b48:	7265746e 616d0a3b 6e696772 746f622d     nter;.margin-bot
   11b58:	3a6d6f74 70303120 7d0a3b78 6f722e0a     tom: 10px;.}..ro
   11b68:	616c2077 2c6c6562 6e692e20 2d747570     w label, .input-
   11b78:	20776f72 6562616c 2e202c6c 73657270     row label, .pres
   11b88:	722d7465 6c20776f 6c656261 660a7b20     et-row label {.f
   11b98:	3a78656c 0a3b3120 722e0a7d 6920776f     lex: 1;.}..row i
   11ba8:	7475706e 692e202c 7475706e 776f722d     nput, .input-row
   11bb8:	706e6920 202c7475 6572702e 2d746573      input, .preset-
   11bc8:	20776f72 75706e69 0a7b2074 74646977     row input {.widt
   11bd8:	31203a68 78703030 65740a3b 612d7478     h: 100px;.text-a
   11be8:	6e67696c 6563203a 7265746e 0a7d0a3b     lign: center;.}.
   11bf8:	7475622e 2d6e6f74 20776f72 69640a7b     .button-row {.di
   11c08:	616c7073 66203a79 3b78656c 73756a0a     splay: flex;.jus
   11c18:	79666974 6e6f632d 746e6574 7073203a     tify-content: sp
   11c28:	2d656361 77746562 3b6e6565 72616d0a     ace-between;.mar
   11c38:	2d6e6967 3a706f74 70303220 7d0a3b78     gin-top: 20px;.}
   11c48:	75622e0a 6e6f7474 770a7b20 68746469     ..button {.width
   11c58:	3834203a 700a3b25 69646461 203a676e     : 48%;.padding: 
   11c68:	78703031 61620a3b 72676b63 646e756f     10px;.background
   11c78:	3023203a 66623730 630a3b66 726f6c6f     : #007bff;.color
   11c88:	6877203a 3b657469 726f620a 3a726564     : white;.border:
   11c98:	6e6f6e20 620a3b65 6564726f 61722d72      none;.border-ra
   11ca8:	73756964 7035203a 630a3b78 6f737275     dius: 5px;.curso
   11cb8:	70203a72 746e696f 0a3b7265 622e0a7d     r: pointer;.}..b
   11cc8:	6f747475 6f683a6e 20726576 61620a7b     utton:hover {.ba
   11cd8:	72676b63 646e756f 3023203a 62363530     ckground: #0056b
   11ce8:	7d0a3b33 72702e0a 74657365 776f722d     3;.}..preset-row
   11cf8:	640a7b20 6c707369 203a7961 78656c66      {.display: flex
   11d08:	756a0a3b 66697473 6f632d79 6e65746e     ;.justify-conten
   11d18:	73203a74 65636170 7465622d 6e656577     t: space-between
   11d28:	616d0a3b 6e696772 706f742d 3032203a     ;.margin-top: 20
   11d38:	0a3b7870 702e0a7d 65736572 75622d74     px;.}..preset-bu
   11d48:	6e6f7474 770a7b20 68746469 3233203a     tton {.width: 32
   11d58:	700a3b25 69646461 203a676e 78703031     %;.padding: 10px
   11d68:	61620a3b 72676b63 646e756f 3223203a     ;.background: #2
   11d78:	34376138 630a3b35 726f6c6f 6877203a     8a745;.color: wh
   11d88:	3b657469 726f620a 3a726564 6e6f6e20     ite;.border: non
   11d98:	620a3b65 6564726f 61722d72 73756964     e;.border-radius
   11da8:	7035203a 630a3b78 6f737275 70203a72     : 5px;.cursor: p
   11db8:	746e696f 0a3b7265 702e0a7d 65736572     ointer;.}..prese
   11dc8:	75622d74 6e6f7474 766f683a 7b207265     t-button:hover {
   11dd8:	6361620a 6f72676b 3a646e75 31322320     .background: #21
   11de8:	38333838 0a7d0a3b 7065732e 74617261     8838;.}..separat
   11df8:	7b20726f 6469770a 203a6874 25303031     or {.width: 100%
   11e08:	65680a3b 74686769 7031203a 620a3b78     ;.height: 1px;.b
   11e18:	676b6361 6e756f72 23203a64 3b646464     ackground: #ddd;
   11e28:	72616d0a 3a6e6967 70303220 3b302078     .margin: 20px 0;
   11e38:	2e0a7d0a 20776f72 6170732e 2d646563     .}..row .spaced-
   11e48:	75706e69 0a7b2074 6772616d 6c2d6e69     input {.margin-l
   11e58:	3a746665 70303120 7d0a3b78 74732e0a     eft: 10px;.}..st
   11e68:	73757461 646e692d 74616369 7b20726f     atus-indicator {
   11e78:	6469770a 203a6874 78703032 65680a3b     .width: 20px;.he
   11e88:	74686769 3032203a 0a3b7870 64726f62     ight: 20px;.bord
   11e98:	722d7265 75696461 35203a73 0a3b2530     er-radius: 50%;.
   11ea8:	6b636162 756f7267 203a646e 63636323     background: #ccc
   11eb8:	2a2f203b 66654420 746c7561 206f7420     ; /* Default to 
   11ec8:	79617267 0a2f2a20 692e0a7d 6369646e     gray */.}..indic
   11ed8:	726f7461 6e6f632d 6e696174 7b207265     ator-container {
   11ee8:	7369640a 79616c70 6c66203a 0a3b7865     .display: flex;.
   11ef8:	78656c66 7269642d 69746365 203a6e6f     flex-direction: 
   11f08:	756c6f63 0a3b6e6d 67696c61 74692d6e     column;.align-it
   11f18:	3a736d65 6e656320 3b726574 2e0a7d0a     ems: center;.}..
   11f28:	69646e69 6f746163 616c2d72 206c6562     indicator-label 
   11f38:	616d0a7b 6e696772 706f742d 7035203a     {.margin-top: 5p
   11f48:	740a3b78 2d747865 67696c61 63203a6e     x;.text-align: c
   11f58:	65746e65 7d0a3b72 68632e0a 626b6365     enter;.}..checkb
   11f68:	632d786f 61746e6f 72656e69 640a7b20     ox-container {.d
   11f78:	6c707369 203a7961 78656c66 6c610a3b     isplay: flex;.al
   11f88:	2d6e6769 6d657469 63203a73 65746e65     ign-items: cente
   11f98:	6d0a3b72 69677261 656c2d6e 203a7466     r;.margin-left: 
   11fa8:	78703031 0a7d0a3b 6568632e 6f626b63     10px;.}..checkbo
   11fb8:	6f632d78 6961746e 2072656e 6562616c     x-container labe
   11fc8:	0a7b206c 6772616d 6c2d6e69 3a746665     l {.margin-left:
   11fd8:	78703520 0a7d0a3b 74732f3c 3e656c79      5px;.}.</style>
   11fe8:	682f3c0a 3e646165 6f623c0a 0a3e7964     .</head>.<body>.
   11ff8:	7669643c 616c6320 223d7373 746e6f63     <div class="cont
   12008:	656e6961 0a3e2272 2031683c 73616c63     ainer">.<h1 clas
   12018:	74223d73 656c7469 6f503e22 20726577     s="title">Power 
   12028:	70707553 4320796c 72746e6f 2f3c6c6f     Supply Control</
   12038:	0a3e3168 7669643c 616c6320 223d7373     h1>.<div class="
   12048:	22776f72 6c3c0a3e 6c656261 6572503e     row">.<label>Pre
   12058:	20746573 20706d41 4d44202f 2f3c3a4d     set Amp / DMM:</
   12068:	6562616c 3c0a3e6c 75706e69 79742074     label>.<input ty
   12078:	223d6570 74786574 64692022 6d61223d     pe="text" id="am
   12088:	65732d70 72202274 6f646165 20796c6e     p-set" readonly 
   12098:	73616c63 73223d73 65636170 6e692d64     class="spaced-in
   120a8:	22747570 693c0a3e 7475706e 70797420     put">.<input typ
   120b8:	74223d65 22747865 3d646920 706d6122     e="text" id="amp
   120c8:	6d6d642d 65722022 6e6f6461 6320796c     -dmm" readonly c
   120d8:	7373616c 7073223d 64656361 706e692d     lass="spaced-inp
   120e8:	3e227475 642f3c0a 0a3e7669 7669643c     ut">.</div>.<div
   120f8:	616c6320 223d7373 22776f72 6c3c0a3e      class="row">.<l
   12108:	6c656261 6572503e 20746573 746c6f56     abel>Preset Volt
   12118:	44202f20 3c3a4d4d 62616c2f 0a3e6c65      / DMM:</label>.
   12128:	706e693c 74207475 3d657079 78657422     <input type="tex
   12138:	69202274 76223d64 2d746c6f 22746573     t" id="volt-set"
   12148:	61657220 6c6e6f64 6c632079 3d737361      readonly class=
   12158:	61707322 2d646563 75706e69 0a3e2274     "spaced-input">.
   12168:	706e693c 74207475 3d657079 78657422     <input type="tex
   12178:	69202274 76223d64 2d746c6f 226d6d64     t" id="volt-dmm"
   12188:	61657220 6c6e6f64 6c632079 3d737361      readonly class=
   12198:	61707322 2d646563 75706e69 0a3e2274     "spaced-input">.
   121a8:	69642f3c 3c0a3e76 20766964 73616c63     </div>.<div clas
   121b8:	72223d73 3e22776f 616c3c0a 3e6c6562     s="row">.<label>
   121c8:	74746157 57202d20 20747461 3a4d4d44     Watt - Watt DMM:
   121d8:	616c2f3c 3e6c6562 6e693c0a 20747570     </label>.<input 
   121e8:	65707974 6574223d 20227478 223d6469     type="text" id="
   121f8:	74746177 7369642d 79616c70 65722022     watt-display" re
   12208:	6e6f6461 0a3e796c 69642f3c 3c0a3e76     adonly>.</div>.<
   12218:	20766964 73616c63 69223d73 7475706e     div class="input
   12228:	776f722d 3c0a3e22 6562616c 6f66206c     -row">.<label fo
   12238:	61223d72 692d706d 7475706e 65533e22     r="amp-input">Se
   12248:	654e2074 6d412077 2f3c3a70 6562616c     t New Amp:</labe
   12258:	3c0a3e6c 75706e69 79742074 223d6570     l>.<input type="
   12268:	74786574 64692022 6d61223d 6e692d70     text" id="amp-in
   12278:	22747570 2f3c0a3e 3e766964 69643c0a     put">.</div>.<di
   12288:	6c632076 3d737361 706e6922 722d7475     v class="input-r
   12298:	3e22776f 616c3c0a 206c6562 3d726f66     ow">.<label for=
   122a8:	6c6f7622 6e692d74 22747570 7465533e     "volt-input">Set
   122b8:	77654e20 6c6f5620 2f3c3a74 6562616c      New Volt:</labe
   122c8:	3c0a3e6c 75706e69 79742074 223d6570     l>.<input type="
   122d8:	74786574 64692022 6f76223d 692d746c     text" id="volt-i
   122e8:	7475706e 3c0a3e22 7669642f 643c0a3e     nput">.</div>.<d
   122f8:	63207669 7373616c 7562223d 6e6f7474     iv class="button
   12308:	776f722d 3c0a3e22 20766964 73616c63     -row">.<div clas
   12318:	69223d73 6369646e 726f7461 6e6f632d     s="indicator-con
   12328:	6e696174 3e227265 69643c0a 6c632076     tainer">.<div cl
   12338:	3d737361 61747322 2d737574 69646e69     ass="status-indi
   12348:	6f746163 69202272 73223d64 75746174     cator" id="statu
   12358:	6e692d73 61636964 22726f74 642f3c3e     s-indicator"></d
   12368:	0a3e7669 7669643c 616c6320 223d7373     iv>.<div class="
   12378:	69646e69 6f746163 616c2d72 226c6562     indicator-label"
   12388:	74754f3e 69642f3c 3c0a3e76 7669642f     >Out</div>.</div
   12398:	643c0a3e 63207669 7373616c 6e69223d     >.<div class="in
   123a8:	61636964 2d726f74 746e6f63 656e6961     dicator-containe
   123b8:	0a3e2272 7669643c 616c6320 223d7373     r">.<div class="
   123c8:	74617473 692d7375 6369646e 726f7461     status-indicator
   123d8:	64692022 7265223d 6e692d72 61636964     " id="err-indica
   123e8:	22726f74 642f3c3e 0a3e7669 7669643c     tor"></div>.<div
   123f8:	616c6320 223d7373 69646e69 6f746163      class="indicato
   12408:	616c2d72 226c6562 7272453e 69642f3c     r-label">Err</di
   12418:	3c0a3e76 7669642f 643c0a3e 63207669     v>.</div>.<div c
   12428:	7373616c 6e69223d 61636964 2d726f74     lass="indicator-
   12438:	746e6f63 656e6961 0a3e2272 7669643c     container">.<div
   12448:	616c6320 223d7373 74617473 692d7375      class="status-i
   12458:	6369646e 726f7461 64692022 6e69223d     ndicator" id="in
   12468:	6e692d30 61636964 22726f74 642f3c3e     0-indicator"></d
   12478:	0a3e7669 7669643c 616c6320 223d7373     iv>.<div class="
   12488:	69646e69 6f746163 616c2d72 226c6562     indicator-label"
   12498:	304e493e 69642f3c 3c0a3e76 7669642f     >IN0</div>.</div
   124a8:	643c0a3e 63207669 7373616c 6e69223d     >.<div class="in
   124b8:	61636964 2d726f74 746e6f63 656e6961     dicator-containe
   124c8:	0a3e2272 7669643c 616c6320 223d7373     r">.<div class="
   124d8:	74617473 692d7375 6369646e 726f7461     status-indicator
   124e8:	64692022 6e69223d 6e692d31 61636964     " id="in1-indica
   124f8:	22726f74 642f3c3e 0a3e7669 7669643c     tor"></div>.<div
   12508:	616c6320 223d7373 69646e69 6f746163      class="indicato
   12518:	616c2d72 226c6562 314e493e 69642f3c     r-label">IN1</di
   12528:	3c0a3e76 7669642f 643c0a3e 63207669     v>.</div>.<div c
   12538:	7373616c 6e69223d 61636964 2d726f74     lass="indicator-
   12548:	746e6f63 656e6961 0a3e2272 7669643c     container">.<div
   12558:	616c6320 223d7373 74617473 692d7375      class="status-i
   12568:	6369646e 726f7461 64692022 6e69223d     ndicator" id="in
   12578:	6e692d32 61636964 22726f74 642f3c3e     2-indicator"></d
   12588:	0a3e7669 7669643c 616c6320 223d7373     iv>.<div class="
   12598:	69646e69 6f746163 616c2d72 226c6562     indicator-label"
   125a8:	324e493e 69642f3c 3c0a3e76 7669642f     >IN2</div>.</div
   125b8:	3c0a0a3e 20766964 73616c63 63223d73     >..<div class="c
   125c8:	6b636568 2d786f62 746e6f63 656e6961     heckbox-containe
   125d8:	0a3e2272 706e693c 74207475 3d657079     r">.<input type=
   125e8:	65686322 6f626b63 69202278 72223d64     "checkbox" id="r
   125f8:	746f6d65 6f632d65 6f72746e 68632d6c     emote-control-ch
   12608:	626b6365 3e22786f 616c3c0a 206c6562     eckbox">.<label 
   12618:	3d726f66 6d657222 2d65746f 746e6f63     for="remote-cont
   12628:	2d6c6f72 63656863 786f626b 65523e22     rol-checkbox">Re
   12638:	65746f6d 6e6f4320 6c6f7274 616c2f3c     mote Control</la
   12648:	3e6c6562 642f3c0a 0a3e7669 69642f3c     bel>.</div>.</di
   12658:	0a0a3e76 7669643c 616c6320 223d7373     v>..<div class="
   12668:	74747562 722d6e6f 3e22776f 75623c0a     button-row">.<bu
   12678:	6e6f7474 616c6320 223d7373 74747562     tton class="butt
   12688:	20226e6f 6c797473 6d223d65 69677261     on" style="margi
   12698:	656c2d6e 203a7466 6f747561 6f20223b     n-left: auto;" o
   126a8:	696c636e 223d6b63 56746573 65756c61     nclick="setValue
   126b8:	22292873 7465533e 6c615620 3c736575     s()">Set Values<
   126c8:	7475622f 3e6e6f74 642f3c0a 0a3e7669     /button>.</div>.
   126d8:	7669643c 616c6320 223d7373 74747562     <div class="butt
   126e8:	722d6e6f 3e22776f 75623c0a 6e6f7474     on-row">.<button
   126f8:	616c6320 223d7373 74747562 20226e6f      class="button" 
   12708:	6c636e6f 3d6b6369 6e6f6322 6c6f7274     onclick="control
   12718:	69766544 27286563 27757370 6e6f272c     Device('psu','on
   12728:	3e222927 6e727554 55535020 3c6e4f20     ')">Turn PSU On<
   12738:	7475622f 3e6e6f74 75623c0a 6e6f7474     /button>.<button
   12748:	616c6320 223d7373 74747562 20226e6f      class="button" 
   12758:	6c636e6f 3d6b6369 6e6f6322 6c6f7274     onclick="control
   12768:	69766544 27286563 27757370 666f272c     Device('psu','of
   12778:	22292766 7275543e 5350206e 664f2055     f')">Turn PSU Of
   12788:	622f3c66 6f747475 3c0a3e6e 7669642f     f</button>.</div
   12798:	643c0a3e 63207669 7373616c 6573223d     >.<div class="se
   127a8:	61726170 22726f74 642f3c3e 0a3e7669     parator"></div>.
   127b8:	7669643c 616c6320 223d7373 74747562     <div class="butt
   127c8:	722d6e6f 3e22776f 75623c0a 6e6f7474     on-row">.<button
   127d8:	616c6320 223d7373 74747562 20226e6f      class="button" 
   127e8:	6c636e6f 3d6b6369 6e6f6322 6c6f7274     onclick="control
   127f8:	69766544 27286563 276e6166 6e6f272c     Device('fan','on
   12808:	3e222927 6e727554 6e614620 3c6e4f20     ')">Turn Fan On<
   12818:	7475622f 3e6e6f74 75623c0a 6e6f7474     /button>.<button
   12828:	616c6320 223d7373 74747562 20226e6f      class="button" 
   12838:	6c636e6f 3d6b6369 6e6f6322 6c6f7274     onclick="control
   12848:	69766544 27286563 276e6166 666f272c     Device('fan','of
   12858:	22292766 7275543e 6146206e 664f206e     f')">Turn Fan Of
   12868:	622f3c66 6f747475 3c0a3e6e 7669642f     f</button>.</div
   12878:	643c0a3e 63207669 7373616c 6573223d     >.<div class="se
   12888:	61726170 22726f74 642f3c3e 0a3e7669     parator"></div>.
   12898:	7669643c 616c6320 223d7373 73657270     <div class="pres
   128a8:	722d7465 3e22776f 75623c0a 6e6f7474     et-row">.<button
   128b8:	616c6320 223d7373 73657270 622d7465      class="preset-b
   128c8:	6f747475 6f20226e 696c636e 223d6b63     utton" onclick="
   128d8:	50746573 65736572 29312874 56353e22     setPreset(1)">5V
   128e8:	3c413120 7475622f 3e6e6f74 75623c0a      1A</button>.<bu
   128f8:	6e6f7474 616c6320 223d7373 73657270     tton class="pres
   12908:	622d7465 6f747475 6f20226e 696c636e     et-button" oncli
   12918:	223d6b63 50746573 65736572 29322874     ck="setPreset(2)
   12928:	32313e22 41322056 75622f3c 6e6f7474     ">12V 2A</button
   12938:	623c0a3e 6f747475 6c63206e 3d737361     >.<button class=
   12948:	65727022 2d746573 74747562 20226e6f     "preset-button" 
   12958:	6c636e6f 3d6b6369 74657322 73657250     onclick="setPres
   12968:	33287465 323e2229 32205634 622f3c41     et(3)">24V 2A</b
   12978:	6f747475 3c0a3e6e 7669642f 2f3c0a3e     utton>.</div>.</
   12988:	3e766964 63733c0a 74706972 75660a3e     div>.<script>.fu
   12998:	6974636e 66206e6f 68637465 756c6156     nction fetchValu
   129a8:	29287365 660a7b20 68637465 672f2728     es() {.fetch('/g
   129b8:	765f7465 27736c61 742e0a29 286e6568     et_vals')..then(
   129c8:	70736572 65736e6f 203e3d20 70736572     response => resp
   129d8:	65736e6f 6f736a2e 2929286e 68742e0a     onse.json())..th
   129e8:	64286e65 20617461 7b203e3d 636f640a     en(data => {.doc
   129f8:	6e656d75 65672e74 656c4574 746e656d     ument.getElement
   12a08:	64497942 6d612728 65732d70 2e292774     ById('amp-set').
   12a18:	756c6176 203d2065 61746164 706d612e     value = data.amp
   12a28:	466f742e 64657869 3b293228 636f640a     .toFixed(2);.doc
   12a38:	6e656d75 65672e74 656c4574 746e656d     ument.getElement
   12a48:	64497942 6f762728 732d746c 29277465     ById('volt-set')
   12a58:	6c61762e 3d206575 74616420 6f762e61     .value = data.vo
   12a68:	742e746c 7869466f 32286465 640a3b29     lt.toFixed(2);.d
   12a78:	6d75636f 2e746e65 45746567 656d656c     ocument.getEleme
   12a88:	7942746e 27286449 74746177 7369642d     ntById('watt-dis
   12a98:	79616c70 762e2927 65756c61 64203d20     play').value = d
   12aa8:	2e617461 74746177 466f742e 64657869     ata.watt.toFixed
   12ab8:	3b293228 636f640a 6e656d75 65672e74     (2);.document.ge
   12ac8:	656c4574 746e656d 64497942 6d612728     tElementById('am
   12ad8:	6d642d70 2e29276d 756c6176 203d2065     p-dmm').value = 
   12ae8:	61746164 706d612e 2e4d4d44 69466f74     data.ampDMM.toFi
   12af8:	28646578 0a3b2932 75636f64 746e656d     xed(2);.document
   12b08:	7465672e 6d656c45 42746e65 28644979     .getElementById(
   12b18:	6c6f7627 6d642d74 2e29276d 756c6176     'volt-dmm').valu
   12b28:	203d2065 61746164 6c6f762e 4d4d4474     e = data.voltDMM
   12b38:	466f742e 64657869 3b293228 2f2f0a0a     .toFixed(2);..//
   12b48:	64705520 20657461 20656874 74617473      Update the stat
   12b58:	69207375 6369646e 726f7461 6c6f6320     us indicator col
   12b68:	6220726f 64657361 206e6f20 5374756f     or based on outS
   12b78:	65746174 6e6f630a 73207473 75746174     tate.const statu
   12b88:	646e4973 74616369 3d20726f 636f6420     sIndicator = doc
   12b98:	6e656d75 65672e74 656c4574 746e656d     ument.getElement
   12ba8:	64497942 74732728 73757461 646e692d     ById('status-ind
   12bb8:	74616369 2927726f 66690a3b 61642820     icator');.if (da
   12bc8:	6f2e6174 74537475 20657461 203d3d3d     ta.outState === 
   12bd8:	7b202930 6174730a 49737574 6369646e     0) {.statusIndic
   12be8:	726f7461 7974732e 622e656c 676b6361     ator.style.backg
   12bf8:	6e756f72 203d2064 63632327 203b2763     round = '#ccc'; 
   12c08:	67202f2f 0a796172 6c65207d 69206573     // gray.} else i
   12c18:	64282066 2e617461 5374756f 65746174     f (data.outState
   12c28:	3d3d3d20 20293120 74730a7b 73757461      === 1) {.status
   12c38:	69646e49 6f746163 74732e72 2e656c79     Indicator.style.
   12c48:	6b636162 756f7267 3d20646e 32232720     background = '#2
   12c58:	34376138 203b2735 67202f2f 6e656572     8a745'; // green
   12c68:	65207d0a 2065736c 28206669 61746164     .} else if (data
   12c78:	74756f2e 74617453 3d3d2065 2932203d     .outState === 2)
   12c88:	730a7b20 75746174 646e4973 74616369      {.statusIndicat
   12c98:	732e726f 656c7974 6361622e 6f72676b     or.style.backgro
   12ca8:	20646e75 2327203d 35336364 3b273534     und = '#dc3545';
   12cb8:	202f2f20 0a646572 2f0a0a7d 7055202f      // red.}..// Up
   12cc8:	65746164 65687420 72726520 6920726f     date the error i
   12cd8:	6369646e 726f7461 6c6f6320 6220726f     ndicator color b
   12ce8:	64657361 206e6f20 0a727265 736e6f63     ased on err.cons
   12cf8:	72652074 646e4972 74616369 3d20726f     t errIndicator =
   12d08:	636f6420 6e656d75 65672e74 656c4574      document.getEle
   12d18:	746e656d 64497942 72652728 6e692d72     mentById('err-in
   12d28:	61636964 27726f74 650a3b29 6e497272     dicator');.errIn
   12d38:	61636964 2e726f74 6c797473 61622e65     dicator.style.ba
   12d48:	72676b63 646e756f 64203d20 2e617461     ckground = data.
   12d58:	20727265 203d3d3d 203f2031 63642327     err === 1 ? '#dc
   12d68:	35343533 203a2027 63632327 203b2763     3545' : '#ccc'; 
   12d78:	72202f2f 69206465 72652066 2c726f72     // red if error,
   12d88:	61726720 746f2079 77726568 0a657369      gray otherwise.
   12d98:	202f2f0a 61647055 74206574 49206568     .// Update the I
   12da8:	202c304e 2c314e49 324e4920 646e6920     N0, IN1, IN2 ind
   12db8:	74616369 2073726f 65736162 6e6f2064     icators based on
   12dc8:	306e6920 6e69202c 69202c31 630a326e      in0, in1, in2.c
   12dd8:	74736e6f 306e6920 69646e49 6f746163     onst in0Indicato
   12de8:	203d2072 75636f64 746e656d 7465672e     r = document.get
   12df8:	6d656c45 42746e65 28644979 306e6927     ElementById('in0
   12e08:	646e692d 74616369 2927726f 6f630a3b     -indicator');.co
   12e18:	2074736e 49316e69 6369646e 726f7461     nst in1Indicator
   12e28:	64203d20 6d75636f 2e746e65 45746567      = document.getE
   12e38:	656d656c 7942746e 27286449 2d316e69     lementById('in1-
   12e48:	69646e69 6f746163 3b292772 6e6f630a     indicator');.con
   12e58:	69207473 6e49326e 61636964 20726f74     st in2Indicator 
   12e68:	6f64203d 656d7563 672e746e 6c457465     = document.getEl
   12e78:	6e656d65 49794274 69272864 692d326e     ementById('in2-i
   12e88:	6369646e 726f7461 0a3b2927 306e690a     ndicator');..in0
   12e98:	69646e49 6f746163 74732e72 2e656c79     Indicator.style.
   12ea8:	6b636162 756f7267 3d20646e 74616420     background = dat
   12eb8:	6e692e61 3d3d2030 2031203d 2327203f     a.in0 === 1 ? '#
   12ec8:	37613832 20273534 2327203a 27636363     28a745' : '#ccc'
   12ed8:	2f2f203b 65726720 69206e65 63612066     ; // green if ac
   12ee8:	65766974 7267202c 6f207961 72656874     tive, gray other
   12ef8:	65736977 316e690a 69646e49 6f746163     wise.in1Indicato
   12f08:	74732e72 2e656c79 6b636162 756f7267     r.style.backgrou
   12f18:	3d20646e 74616420 6e692e61 3d3d2031     nd = data.in1 ==
   12f28:	2031203d 2327203f 37613832 20273534     = 1 ? '#28a745' 
   12f38:	2327203a 27636363 2f2f203b 65726720     : '#ccc'; // gre
   12f48:	69206e65 63612066 65766974 7267202c     en if active, gr
   12f58:	6f207961 72656874 65736977 326e690a     ay otherwise.in2
   12f68:	69646e49 6f746163 74732e72 2e656c79     Indicator.style.
   12f78:	6b636162 756f7267 3d20646e 74616420     background = dat
   12f88:	6e692e61 3d3d2032 2031203d 2327203f     a.in2 === 1 ? '#
   12f98:	37613832 20273534 2327203a 27636363     28a745' : '#ccc'
   12fa8:	2f2f203b 65726720 69206e65 63612066     ; // green if ac
   12fb8:	65766974 7267202c 6f207961 72656874     tive, gray other
   12fc8:	65736977 2f2f0a0a 64705520 20657461     wise..// Update 
   12fd8:	20656874 63656863 786f626b 61747320     the checkbox sta
   12fe8:	62206574 64657361 206e6f20 6f6d6572     te based on remo
   12ff8:	74436574 640a6c72 6d75636f 2e746e65     teCtrl.document.
   13008:	45746567 656d656c 7942746e 27286449     getElementById('
   13018:	6f6d6572 632d6574 72746e6f 632d6c6f     remote-control-c
   13028:	6b636568 27786f62 68632e29 656b6365     heckbox').checke
   13038:	203d2064 61746164 6d65722e 3d3d3d20     d = data.rem ===
   13048:	0a3b3120 2e0a297d 63746163 72652868      1;.})..catch(er
   13058:	20726f72 63203e3d 6f736e6f 652e656c     ror => console.e
   13068:	726f7272 72452728 20726f72 63746566     rror('Error fetc
   13078:	676e6968 6c617620 3a736575 65202c27     hing values:', e
   13088:	726f7272 0a3b2929 660a0a7d 74636e75     rror));.}..funct
   13098:	206e6f69 56746573 65756c61 20292873     ion setValues() 
   130a8:	6f630a7b 2074736e 20706d61 6170203d     {.const amp = pa
   130b8:	46657372 74616f6c 636f6428 6e656d75     rseFloat(documen
   130c8:	65672e74 656c4574 746e656d 64497942     t.getElementById
   130d8:	6d612728 6e692d70 27747570 61762e29     ('amp-input').va
   130e8:	2965756c 6f630a3b 2074736e 746c6f76     lue);.const volt
   130f8:	70203d20 65737261 616f6c46 6f642874      = parseFloat(do
   13108:	656d7563 672e746e 6c457465 6e656d65     cument.getElemen
   13118:	49794274 76272864 2d746c6f 75706e69     tById('volt-inpu
   13128:	2e292774 756c6176 0a3b2965 63746566     t').value);.fetc
   13138:	2f602868 5f746573 736c6176 706d613f     h(`/set_vals?amp
   13148:	617b243d 267d706d 746c6f76 767b243d     =${amp}&volt=${v
   13158:	7d746c6f 2e0a2960 6e656874 73657228     olt}`)..then(res
   13168:	736e6f70 3e3d2065 73657220 736e6f70     ponse => respons
   13178:	736a2e65 29286e6f 742e0a29 286e6568     e.json())..then(
   13188:	61746164 203e3d20 66690a7b 61642820     data => {.if (da
   13198:	732e6174 65636375 20297373 65660a7b     ta.success) {.fe
   131a8:	56686374 65756c61 3b292873 65207d0a     tchValues();.} e
   131b8:	2065736c 6c610a7b 28747265 72724527     lse {.alert('Err
   131c8:	7320726f 69747465 7620676e 65756c61     or setting value
   131d8:	3b292773 7d0a7d0a 632e0a29 68637461     s');.}.})..catch
   131e8:	72726528 3d20726f 6f63203e 6c6f736e     (error => consol
   131f8:	72652e65 28726f72 72724527 7320726f     e.error('Error s
   13208:	69747465 7620676e 65756c61 2c273a73     etting values:',
   13218:	72726520 2929726f 0a7d0a3b 6e75660a      error));.}..fun
   13228:	6f697463 6f63206e 6f72746e 7665446c     ction controlDev
   13238:	28656369 69766564 202c6563 69746361     ice(device, acti
   13248:	20296e6f 65660a7b 28686374 6f632f60     on) {.fetch(`/co
   13258:	6f72746e 65643f6c 65636976 647b243d     ntrol?device=${d
   13268:	63697665 61267d65 6f697463 7b243d6e     evice}&action=${
   13278:	69746361 607d6e6f 742e0a29 286e6568     action}`)..then(
   13288:	70736572 65736e6f 203e3d20 70736572     response => resp
   13298:	65736e6f 6f736a2e 2929286e 68742e0a     onse.json())..th
   132a8:	64286e65 20617461 7b203e3d 2066690a     en(data => {.if 
   132b8:	74616428 75732e61 73656363 7b202973     (data.success) {
   132c8:	656c610a 60287472 65647b24 65636976     .alert(`${device
   132d8:	556f742e 72657070 65736143 207d2928     .toUpperCase()} 
   132e8:	63617b24 6e6f6974 556f742e 72657070     ${action.toUpper
   132f8:	65736143 207d2928 63637553 66737365     Case()} Successf
   13308:	29606c75 207d0a3b 65736c65 610a7b20     ul`);.} else {.a
   13318:	7472656c 72456028 20726f72 63617b24     lert(`Error ${ac
   13328:	6e6f6974 676e697d 647b2420 63697665     tion}ing ${devic
   13338:	29607d65 0a7d0a3b 2e0a297d 63746163     e}`);.}.})..catc
   13348:	72652868 20726f72 63203e3d 6f736e6f     h(error => conso
   13358:	652e656c 726f7272 72456028 20726f72     le.error(`Error 
   13368:	63617b24 6e6f6974 676e697d 647b2420     ${action}ing ${d
   13378:	63697665 603a7d65 7265202c 29726f72     evice}:`, error)
   13388:	7d0a3b29 75660a0a 6974636e 73206e6f     );.}..function s
   13398:	72507465 74657365 65727028 29746573     etPreset(preset)
   133a8:	6c0a7b20 61207465 202c706d 746c6f76      {.let amp, volt
   133b8:	66690a3b 72702820 74657365 203d3d20     ;.if (preset == 
   133c8:	7b202931 706d610a 31203d20 3b35322e     1) {.amp = 1.25;
   133d8:	6c6f760a 203d2074 3b332e35 65207d0a     .volt = 5.3;.} e
   133e8:	2065736c 28206669 73657270 3d207465     lse if (preset =
   133f8:	2932203d 610a7b20 3d20706d 302e3220     = 2) {.amp = 2.0
   13408:	6f760a3b 3d20746c 2e323120 7d0a3b30     ;.volt = 12.0;.}
   13418:	736c6520 66692065 72702820 74657365      else if (preset
   13428:	203d3d20 7b202933 706d610a 32203d20      == 3) {.amp = 2
   13438:	0a3b302e 746c6f76 32203d20 3b302e34     .0;.volt = 24.0;
   13448:	640a7d0a 6d75636f 2e746e65 45746567     .}.document.getE
   13458:	656d656c 7942746e 27286449 2d706d61     lementById('amp-
   13468:	75706e69 2e292774 756c6176 203d2065     input').value = 
   13478:	3b706d61 636f640a 6e656d75 65672e74     amp;.document.ge
   13488:	656c4574 746e656d 64497942 6f762728     tElementById('vo
   13498:	692d746c 7475706e 762e2927 65756c61     lt-input').value
   134a8:	76203d20 3b746c6f 7465730a 756c6156      = volt;.setValu
   134b8:	29287365 0a7d0a3b 636f640a 6e656d75     es();.}..documen
   134c8:	65672e74 656c4574 746e656d 64497942     t.getElementById
   134d8:	65722728 65746f6d 6e6f632d 6c6f7274     ('remote-control
   134e8:	6568632d 6f626b63 2e292778 45646461     -checkbox').addE
   134f8:	746e6576 7473694c 72656e65 68632728     ventListener('ch
   13508:	65676e61 66202c27 74636e75 286e6f69     ange', function(
   13518:	0a7b2029 736e6f63 63612074 6e6f6974     ) {.const action
   13528:	74203d20 2e736968 63656863 2064656b      = this.checked 
   13538:	6f27203f 3a20276e 666f2720 0a3b2766     ? 'on' : 'off';.
   13548:	63746566 2f602868 746e6f63 3f6c6f72     fetch(`/control?
   13558:	69766564 723d6563 61266d65 6f697463     device=rem&actio
   13568:	7b243d6e 69746361 607d6e6f 742e0a29     n=${action}`)..t
   13578:	286e6568 70736572 65736e6f 203e3d20     hen(response => 
   13588:	70736572 65736e6f 6f736a2e 2929286e     response.json())
   13598:	68742e0a 64286e65 20617461 7b203e3d     ..then(data => {
   135a8:	2066690a 74616428 75732e61 73656363     .if (data.succes
   135b8:	7b202973 6e6f630a 656c6f73 676f6c2e     s) {.console.log
   135c8:	65526028 65746f6d 6e6f6320 6c6f7274     (`Remote control
   135d8:	617b2420 6f697463 73207d6e 65636375      ${action} succe
   135e8:	75667373 3b29606c 65207d0a 2065736c     ssful`);.} else 
   135f8:	6c610a7b 28747265 72724560 2420726f     {.alert(`Error $
   13608:	7463617b 7d6e6f69 20676e69 6f6d6572     {action}ing remo
   13618:	63206574 72746e6f 29606c6f 0a7d0a3b     te control`);.}.
   13628:	2e0a297d 63746163 72652868 20726f72     })..catch(error 
   13638:	63203e3d 6f736e6f 652e656c 726f7272     => console.error
   13648:	72456028 20726f72 63617b24 6e6f6974     (`Error ${action
   13658:	676e697d 6d657220 2065746f 746e6f63     }ing remote cont
   13668:	3a6c6f72 65202c60 726f7272 0a3b2929     rol:`, error));.
   13678:	0a3b297d 7465730a 65746e49 6c617672     });..setInterval
   13688:	74656628 61566863 7365756c 3031202c     (fetchValues, 10
   13698:	3b293030 732f3c0a 70697263 3c0a3e74     00);.</script>.<
   136a8:	646f622f 3c0a3e79 6d74682f 000a3e6c     /body>.</html>..
   136b8:	00003a22 00003a36 00003a4e 00003a66     ":..6:..N:..f:..
   136c8:	00003a8e 00003aa8 00003b64 00003ad0     .:...:..d;...:..
   136d8:	00003af4 00003afe 00003b08 00003b20     .:...:...;.. ;..
   136e8:	00003b46 000042b0 000042ba 000042c4     F;...B...B...B..
   136f8:	000042cc 000042d6 000042e0 00000c1f     .B...B...B......
   13708:	00000000 20202020 20202020 20202020     ....            
   13718:	20202020 20202020 00000000 50492020             ....  IP
   13728:	3239313a 3836312e 252e312e 20202064     :192.168.1.%d   
   13738:	00000000 20434420 63656c45 6e6f7274     .... DC Electron
   13748:	4c206369 2064616f 00000000 66667542     ic Load ....Buff
   13758:	4f207265 66726576 00776f6c 66322e25     er Overflow.%.2f
   13768:	2e252056 20416632 00576425 2020203c     V %.2fA %dW.<   
   13778:	66332e25 2e25203b 20206633 00003e20     %.3f; %.3f   >..
   13788:	00004f30 00004e80 00004e80 00004e7e     0O...N...N..~N..
   13798:	00004f22 00004f22 00004f18 00004e7e     "O.."O...O..~N..
   137a8:	00004f22 00004f18 00004f22 00004e7e     "O...O.."O..~N..
   137b8:	00004f28 00004f28 00004f28 00004fb8     (O..(O..(O...O..
   137c8:	00005654 00005636 000055f0 0000550e     TV..6V...U...U..
   137d8:	000055f0 00005628 000055f0 0000550e     .U..(V...U...U..
   137e8:	00005636 00005636 00005628 0000550e     6V..6V..(V...U..
   137f8:	00005506 00005506 00005506 0000586c     .U...U...U..lX..
   13808:	00005cb4 00005b74 00005b74 00005b70     .\..t[..t[..p[..
   13818:	00005c8c 00005c8c 00005c7e 00005b70     .\...\..~\..p[..
   13828:	00005c8c 00005c7e 00005c8c 00005b70     .\..~\...\..p[..
   13838:	00005c94 00005c94 00005c94 00005e98     .\...\...\...^..

00013848 <_global_impure_ptr>:
   13848:	20000070 0000000a 00007ee8 00007f5c     p.. .....~..\...
   13858:	00007f5c 00007ecc 00007f5c 00007f5c     \....~..\...\...
   13868:	00007f5c 00007f5c 00007f5c 00007f5c     \...\...\...\...
   13878:	00007ed4 000079b6 00007f5c 00007970     .~...y..\...py..
   13888:	000079c0 00007f5c 00007a0c 00007bf6     .y..\....z...{..
   13898:	00007bf6 00007bf6 00007bf6 00007bf6     .{...{...{...{..
   138a8:	00007bf6 00007bf6 00007bf6 00007bf6     .{...{...{...{..
   138b8:	00007f5c 00007f5c 00007f5c 00007f5c     \...\...\...\...
   138c8:	00007f5c 00007f5c 00007f5c 00007f5c     \...\...\...\...
   138d8:	00007f5c 00007f5c 00007a14 00007b5c     \...\....z..\{..
   138e8:	00007f5c 00007b5c 00007f5c 00007f5c     \...\{..\...\...
   138f8:	00007f5c 00007f5c 00007c26 00007f5c     \...\...&|..\...
   13908:	00007f5c 00007c2e 00007f5c 00007f5c     \....|..\...\...
   13918:	00007f5c 00007f5c 00007f5c 00007cd0     \...\...\....|..
   13928:	00007f5c 00007f5c 00007d02 00007f5c     \...\....}..\...
   13938:	00007f5c 00007f5c 00007f5c 00007f5c     \...\...\...\...
   13948:	00007f5c 00007f5c 00007f5c 00007f5c     \...\...\...\...
   13958:	00007f5c 00007dfc 00007e30 00007b5c     \....}..0~..\{..
   13968:	00007b5c 00007b5c 00007e42 00007e30     \{..\{..B~..0~..
   13978:	00007f5c 00007f5c 00007e4a 00007f5c     \...\...J~..\...
   13988:	00007d64 00007f2a 00007ea0 00007d9a     d}..*....~...}..
   13998:	00007f5c 00007da2 00007f5c 00007ef8     \....}..\....~..
   139a8:	00007f5c 00007f5c 00007e5a 00464e49     \...\...Z~..INF.
   139b8:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
   139c8:	37363534 42413938 46454443 00000000     456789ABCDEF....
   139d8:	33323130 37363534 62613938 66656463     0123456789abcdef
   139e8:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

000139f8 <blanks.7223>:
   139f8:	20202020 20202020 20202020 20202020                     

00013a08 <zeroes.7224>:
   13a08:	30303030 30303030 30303030 30303030     0000000000000000
   13a18:	00008fd4 00009114 00009114 00009114     ................
   13a28:	00009114 00009114 00009114 00009114     ................
   13a38:	00009114 00009114 00009114 00009114     ................
   13a48:	00009114 00009114 00009114 00009114     ................
   13a58:	00009114 00009114 00009114 00009114     ................
   13a68:	00009114 00009114 00009114 00009114     ................
   13a78:	00009114 00009114 00009114 00009114     ................
   13a88:	00009114 00009114 00009114 00009114     ................
   13a98:	00009114 00009114 00009114 00009114     ................
   13aa8:	00009114 00008f70 00009114 00009114     ....p...........
   13ab8:	00009114 00009114 0000921e 00009114     ................
   13ac8:	00009114 00009114 00009114 00009114     ................
   13ad8:	00009202 00009202 00009202 00009202     ................
   13ae8:	00009202 00009202 00009202 00009202     ................
   13af8:	00009202 00009202 00009114 00009114     ................
   13b08:	00009114 00009114 00009114 00009114     ................
   13b18:	00009114 00009114 00009114 00009114     ................
   13b28:	000091f4 000091d2 00009114 000091d2     ................
   13b38:	00009114 00009114 00009114 00009114     ................
   13b48:	000091cc 00009114 00009114 000091c0     ................
   13b58:	00009114 00009114 00009114 00009114     ................
   13b68:	00009114 00009114 00009114 00009114     ................
   13b78:	000091ba 00009114 00009114 0000919e     ................
   13b88:	00009114 00009114 00009114 00009114     ................
   13b98:	00009114 00009114 00009114 0000918e     ................
   13ba8:	00009188 000091d2 000091d2 000091d2     ................
   13bb8:	00009178 00008fdc 00009114 00009114     x...............
   13bc8:	000090f0 00009114 0000913e 0000912e     ........>.......
   13bd8:	000090d6 00009114 00009114 000090ce     ................
   13be8:	00009114 0000902c 00009114 00009114     ....,...........
   13bf8:	000091ba 0000929e 00009474 0000929e     ........t.......
   13c08:	00009474 00009474 00009262 00009226     t...t...b...&...
   13c18:	00009226 00009226 00009226 00009226     &...&...&...&...
   13c28:	00009226 00009226 00009226 00009226     &...&...&...&...
   13c38:	00009474 00009474 00009474 00009474     t...t...t...t...
   13c48:	00009474 00009474 00009474 00009458     t...t...t...X...
   13c58:	00009474 00009474 00009474 0000940e     t...t...t.......
   13c68:	00009400 00009474 00009474 000092e8     ....t...t.......
   13c78:	00009474 00009474 00009474 00009474     t...t...t...t...
   13c88:	000092b8 00009474 00009474 00009474     ....t...t...t...
   13c98:	00009474 00009474 000092ac 00009474     t...t.......t...
   13ca8:	00009474 00009474 00009474 00009466     t...t...t...f...
   13cb8:	00009474 00009474 00009474 00009474     t...t...t...t...
   13cc8:	00009474 00009474 00009474 00009458     t...t...t...X...
   13cd8:	00009474 00009474 00009474 0000940e     t...t...t.......
   13ce8:	00009400 00009474 00009474 000092e8     ....t...t.......
   13cf8:	00009474 00009474 00009474 00009474     t...t...t...t...
   13d08:	000092b8 00009474 00009474 00009474     ....t...t...t...
   13d18:	00009474 00009474 000092ac 00009474     t...t.......t...
   13d28:	00009474 00009474 00009474 00009466     t...t...t...f...
   13d38:	0000969e 000095f6 0000969e 000095f6     ................
   13d48:	000095f6 00009642 00009632 00009632     ....B...2...2...
   13d58:	00009632 00009632 00009632 00009632     2...2...2...2...
   13d68:	00009632 0000968e 0000968e 000095f6     2...............
   13d78:	000095f6 000095f6 000095f6 000095f6     ................
   13d88:	000095f6 000095f6 00009626 00009626     ........&...&...
   13d98:	00009626 00009626 00009626 00009626     &...&...&...&...
   13da8:	000095f6 000095f6 000095f6 000095f6     ................
   13db8:	000095f6 000095f6 000095f6 000095f6     ................
   13dc8:	000095f6 000095f6 000095f6 000095f6     ................
   13dd8:	000095f6 000095f6 000095f6 000095f6     ................
   13de8:	000095f6 000095c2 000095f6 000095f6     ................
   13df8:	000095f6 000095f6 000095f6 000095f6     ................
   13e08:	000095f6 000095f6 00009626 00009626     ........&...&...
   13e18:	00009626 00009626 00009626 00009626     &...&...&...&...
   13e28:	000095f6 000095f6 000095f6 000095f6     ................
   13e38:	000095f6 000095f6 000095f6 000095f6     ................
   13e48:	000095f6 000095f6 000095f6 000095f6     ................
   13e58:	000095f6 000095f6 000095f6 000095f6     ................
   13e68:	000095f6 000095c2 646c2565 00000000     ........e%ld....

00013e78 <basefix.7294>:
   13e78:	0001000a 00030002 00050004 00070006     ................
   13e88:	00090008 000b000a 000d000c 000f000e     ................
   13e98:	00000010 0000a282 0000a356 0000a356     ........V...V...
   13ea8:	0000a26e 0000a356 0000a356 0000a356     n...V...V...V...
   13eb8:	0000a356 0000a356 0000a356 0000a328     V...V...V...(...
   13ec8:	00009e3a 0000a356 00009e30 00009e44     :...V...0...D...
   13ed8:	0000a356 0000a278 0000a004 0000a004     V...x...........
   13ee8:	0000a004 0000a004 0000a004 0000a004     ................
   13ef8:	0000a004 0000a004 0000a004 0000a356     ............V...
   13f08:	0000a356 0000a356 0000a356 0000a356     V...V...V...V...
   13f18:	0000a356 0000a356 0000a356 0000a356     V...V...V...V...
   13f28:	0000a356 0000a33e 0000a292 0000a356     V...>.......V...
   13f38:	0000a292 0000a356 0000a356 0000a356     ....V...V...V...
   13f48:	0000a356 0000a1f8 0000a356 0000a356     V.......V...V...
   13f58:	0000a202 0000a356 0000a356 0000a356     ....V...V...V...
   13f68:	0000a356 0000a356 0000a230 0000a356     V...V...0...V...
   13f78:	0000a356 0000a25e 0000a356 0000a356     V...^...V...V...
   13f88:	0000a356 0000a356 0000a356 0000a356     V...V...V...V...
   13f98:	0000a356 0000a356 0000a356 0000a356     V...V...V...V...
   13fa8:	0000a044 0000a07a 0000a292 0000a292     D...z...........
   13fb8:	0000a292 0000a122 0000a07a 0000a356     ...."...z...V...
   13fc8:	0000a356 0000a12c 0000a356 0000a13e     V...,...V...>...
   13fd8:	0000a352 0000a16c 0000a196 0000a356     R...l.......V...
   13fe8:	0000a1a0 0000a356 0000a34e 0000a356     ....V...N...V...
   13ff8:	0000a356 00009e92                       V.......

00014000 <blanks.7238>:
   14000:	20202020 20202020 20202020 20202020                     

00014010 <zeroes.7239>:
   14010:	30303030 30303030 30303030 30303030     0000000000000000
   14020:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   14030:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00014040 <__mprec_bigtens>:
   14040:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   14050:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   14060:	7f73bf3c 75154fdd                       <.s..O.u

00014068 <__mprec_tens>:
   14068:	00000000 3ff00000 00000000 40240000     .......?......$@
   14078:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   14088:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   14098:	00000000 412e8480 00000000 416312d0     .......A......cA
   140a8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   140b8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   140c8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   140d8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   140e8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   140f8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   14108:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   14118:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   14128:	79d99db4 44ea7843                       ...yCx.D

00014130 <p05.6055>:
   14130:	00000005 00000019 0000007d 0000e634     ........}...4...
   14140:	0000e6ce 0000e6ce 0000e6ce 0000e6ce     ................
   14150:	0000e6ce 0000e6ce 0000e6ce 0000e6ce     ................
   14160:	0000e6c2 0000e6c2 0000e6c2 0000e6c2     ................
   14170:	0000e6c2 0000e6ce 0000e6ce 0000e6ce     ................
   14180:	0000e6ce 0000e6ce 0000e6ce 0000e6ce     ................
   14190:	0000e6ce 0000e6ce 0000e6ce 0000e6ce     ................
   141a0:	0000e6ce 0000e6ce 0000e6ce 0000e6ce     ................
   141b0:	0000e6ce 0000e6ce 0000e6ce 0000e6c2     ................
   141c0:	0000e6ce 0000e6ce 0000e6ce 0000e6ce     ................
   141d0:	0000e6ce 0000e6ce 0000e6ce 0000e6ce     ................
   141e0:	0000e6ce 0000e6ce 0000e668 0000e6ce     ........h.......
   141f0:	0000e70a 0000f060 0000f082 0000f078     ....`.......x...
   14200:	0000f072 0000f056 0000f082 0000666e     r...V.......nf..
   14210:	74696e69 00000079 00006e61              inity...an..

0001421c <fpi.6141>:
   1421c:	00000035 fffffbce 000003cb 00000001     5...............
   1422c:	00000000                                ....

00014230 <fpinan.6177>:
   14230:	00000034 fffffbce 000003cb 00000001     4...............
	...

00014248 <tinytens>:
   14248:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   14258:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   14268:	64ac6f43 11680628                       Co.d(.h.

00014270 <_ctype_>:
   14270:	20202000 20202020 28282020 20282828     .         ((((( 
   14280:	20202020 20202020 20202020 20202020                     
   14290:	10108820 10101010 10101010 10101010      ...............
   142a0:	04040410 04040404 10040404 10101010     ................
   142b0:	41411010 41414141 01010101 01010101     ..AAAAAA........
   142c0:	01010101 01010101 01010101 10101010     ................
   142d0:	42421010 42424242 02020202 02020202     ..BBBBBB........
   142e0:	02020202 02020202 02020202 10101010     ................
   142f0:	00000020 00000000 00000000 00000000      ...............
	...

00014374 <__hexdig>:
	...
   143a4:	13121110 17161514 00001918 00000000     ................
   143b4:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
   143d4:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

00014474 <_init>:
   14474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14476:	46c0      	nop			; (mov r8, r8)
   14478:	bcf8      	pop	{r3, r4, r5, r6, r7}
   1447a:	bc08      	pop	{r3}
   1447c:	469e      	mov	lr, r3
   1447e:	4770      	bx	lr

00014480 <__init_array_start>:
   14480:	0000b57d 	.word	0x0000b57d

00014484 <__frame_dummy_init_array_entry>:
   14484:	000000cd                                ....

00014488 <_fini>:
   14488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1448a:	46c0      	nop			; (mov r8, r8)
   1448c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   1448e:	bc08      	pop	{r3}
   14490:	469e      	mov	lr, r3
   14492:	4770      	bx	lr

00014494 <__fini_array_start>:
   14494:	000000a5 	.word	0x000000a5
