
PSU_ETH_Controller_s21.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000f020  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000f020  0000f020  0001f020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a40  20000000  0000f028  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000a18  20000a40  0000fa68  00020a40  2**2
                  ALLOC
  4 .stack        00002000  20001458  00010480  00020a40  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020a40  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020a6a  2**0
                  CONTENTS, READONLY
  7 .debug_info   0003433e  00000000  00000000  00020ac3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000046ff  00000000  00000000  00054e01  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000149d9  00000000  00000000  00059500  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000fd8  00000000  00000000  0006ded9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001060  00000000  00000000  0006eeb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000088c6  00000000  00000000  0006ff11  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000126a9  00000000  00000000  000787d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005de44  00000000  00000000  0008ae80  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003e20  00000000  00000000  000e8cc4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
	PWM_1_PORT_init();
	pwm_init(&PWM_1, TC7, _tc_get_pwm());
}

void system_init(void)
{
       0:	58 34 00 20 09 01 00 00 05 01 00 00 05 01 00 00     X4. ............
	...
                                                    bool value)
{
	uint8_t tmp;
	PORT_CRITICAL_SECTION_ENTER();
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
	tmp &= ~PORT_PINCFG_PMUXEN;
      2c:	05 01 00 00 00 00 00 00 00 00 00 00 05 01 00 00     ................

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      3c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      4c:	ad 0c 00 00 a1 0a 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      5c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      6c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
      7c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
      8c:	99 18 00 00 a9 18 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
      9c:	05 01 00 00 05 01 00 00                             ........

000000a4 <__do_global_dtors_aux>:
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      a4:	b510      	push	{r4, lr}
      a6:	4c06      	ldr	r4, [pc, #24]	; (c0 <__do_global_dtors_aux+0x1c>)
      a8:	7823      	ldrb	r3, [r4, #0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      aa:	2b00      	cmp	r3, #0
      ac:	d107      	bne.n	be <__do_global_dtors_aux+0x1a>
      ae:	4b05      	ldr	r3, [pc, #20]	; (c4 <__do_global_dtors_aux+0x20>)
	tmp &= ~PORT_PINCFG_PMUXEN;
      b0:	2b00      	cmp	r3, #0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      b2:	d002      	beq.n	ba <__do_global_dtors_aux+0x16>
      b4:	4804      	ldr	r0, [pc, #16]	; (c8 <__do_global_dtors_aux+0x24>)
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
      b6:	e000      	b.n	ba <__do_global_dtors_aux+0x16>
      b8:	bf00      	nop
      ba:	2301      	movs	r3, #1
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      bc:	7023      	strb	r3, [r4, #0]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      be:	bd10      	pop	{r4, pc}
      c0:	20000a40 	.word	0x20000a40
      c4:	00000000 	.word	0x00000000
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      c8:	0000f028 	.word	0x0000f028

000000cc <frame_dummy>:
      cc:	4b08      	ldr	r3, [pc, #32]	; (f0 <frame_dummy+0x24>)
	tmp &= ~PORT_PINCFG_PMUXEN;
      ce:	b510      	push	{r4, lr}
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      d0:	2b00      	cmp	r3, #0
      d2:	d003      	beq.n	dc <frame_dummy+0x10>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
      d4:	4907      	ldr	r1, [pc, #28]	; (f4 <frame_dummy+0x28>)
      d6:	4808      	ldr	r0, [pc, #32]	; (f8 <frame_dummy+0x2c>)
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      d8:	e000      	b.n	dc <frame_dummy+0x10>
      da:	bf00      	nop
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      dc:	4807      	ldr	r0, [pc, #28]	; (fc <frame_dummy+0x30>)
      de:	6803      	ldr	r3, [r0, #0]
      e0:	2b00      	cmp	r3, #0
      e2:	d100      	bne.n	e6 <frame_dummy+0x1a>
      e4:	bd10      	pop	{r4, pc}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      e6:	4b06      	ldr	r3, [pc, #24]	; (100 <frame_dummy+0x34>)
      e8:	2b00      	cmp	r3, #0
	tmp &= ~PORT_PINCFG_PMUXEN;
      ea:	d0fb      	beq.n	e4 <frame_dummy+0x18>
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      ec:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
      ee:	e7f9      	b.n	e4 <frame_dummy+0x18>
      f0:	00000000 	.word	0x00000000
      f4:	20000a44 	.word	0x20000a44
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      f8:	0000f028 	.word	0x0000f028
      fc:	0000f028 	.word	0x0000f028
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     100:	00000000 	.word	0x00000000

00000104 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     104:	e7fe      	b.n	104 <Dummy_Handler>
	...

00000108 <Reset_Handler>:
{
     108:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     10a:	4a12      	ldr	r2, [pc, #72]	; (154 <Reset_Handler+0x4c>)
     10c:	4b12      	ldr	r3, [pc, #72]	; (158 <Reset_Handler+0x50>)
     10e:	429a      	cmp	r2, r3
     110:	d009      	beq.n	126 <Reset_Handler+0x1e>
     112:	4b11      	ldr	r3, [pc, #68]	; (158 <Reset_Handler+0x50>)
     114:	4a0f      	ldr	r2, [pc, #60]	; (154 <Reset_Handler+0x4c>)
     116:	e003      	b.n	120 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     118:	6811      	ldr	r1, [r2, #0]
     11a:	6019      	str	r1, [r3, #0]
     11c:	3304      	adds	r3, #4
     11e:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     120:	490e      	ldr	r1, [pc, #56]	; (15c <Reset_Handler+0x54>)
     122:	428b      	cmp	r3, r1
     124:	d3f8      	bcc.n	118 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     126:	4b0e      	ldr	r3, [pc, #56]	; (160 <Reset_Handler+0x58>)
     128:	e002      	b.n	130 <Reset_Handler+0x28>
                *pDest++ = 0;
     12a:	2200      	movs	r2, #0
     12c:	601a      	str	r2, [r3, #0]
     12e:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     130:	4a0c      	ldr	r2, [pc, #48]	; (164 <Reset_Handler+0x5c>)
     132:	4293      	cmp	r3, r2
     134:	d3f9      	bcc.n	12a <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     136:	4a0c      	ldr	r2, [pc, #48]	; (168 <Reset_Handler+0x60>)
     138:	21ff      	movs	r1, #255	; 0xff
     13a:	4b0c      	ldr	r3, [pc, #48]	; (16c <Reset_Handler+0x64>)
     13c:	438b      	bics	r3, r1
     13e:	6093      	str	r3, [r2, #8]
        NVMCTRL->CTRLB.bit.MANW = 1;
     140:	4a0b      	ldr	r2, [pc, #44]	; (170 <Reset_Handler+0x68>)
     142:	6851      	ldr	r1, [r2, #4]
     144:	2380      	movs	r3, #128	; 0x80
     146:	430b      	orrs	r3, r1
     148:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     14a:	f005 f987 	bl	545c <__libc_init_array>
        main();
     14e:	f003 f87d 	bl	324c <main>
     152:	e7fe      	b.n	152 <Reset_Handler+0x4a>
     154:	0000f028 	.word	0x0000f028
     158:	20000000 	.word	0x20000000
     15c:	20000a40 	.word	0x20000a40
     160:	20000a40 	.word	0x20000a40
     164:	20001458 	.word	0x20001458
     168:	e000ed00 	.word	0xe000ed00
     16c:	00000000 	.word	0x00000000
     170:	41004000 	.word	0x41004000

00000174 <atomic_enter_critical>:
	TIMER_0_init();

	PWM_0_init();

	PWM_1_init();
}
     174:	f3ef 8310 	mrs	r3, PRIMASK
     178:	6003      	str	r3, [r0, #0]
     17a:	b672      	cpsid	i
     17c:	f3bf 8f5f 	dmb	sy
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
	__disable_irq();
	__DMB();
}
     180:	4770      	bx	lr

00000182 <atomic_leave_critical>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     182:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     186:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     188:	f383 8810 	msr	PRIMASK, r3
}
     18c:	4770      	bx	lr
	...

00000190 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     190:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     192:	4b04      	ldr	r3, [pc, #16]	; (1a4 <delay_ms+0x14>)
     194:	681c      	ldr	r4, [r3, #0]
     196:	f000 fbf1 	bl	97c <_get_cycles_for_ms>
     19a:	0001      	movs	r1, r0
     19c:	0020      	movs	r0, r4
     19e:	f000 fbf8 	bl	992 <_delay_cycles>
}
     1a2:	bd10      	pop	{r4, pc}
     1a4:	20000a5c 	.word	0x20000a5c

000001a8 <process_ext_irq>:
 * \brief Interrupt processing routine
 *
 * \param[in] pin The pin which triggered the interrupt
 */
static void process_ext_irq(const uint32_t pin)
{
     1a8:	b570      	push	{r4, r5, r6, lr}
	uint8_t lower = 0, middle, upper = EXT_IRQ_AMOUNT;
     1aa:	2501      	movs	r5, #1
     1ac:	2400      	movs	r4, #0

	while (upper >= lower) {
     1ae:	e007      	b.n	1c0 <process_ext_irq+0x18>
		if (middle >= EXT_IRQ_AMOUNT) {
			return;
		}

		if (ext_irqs[middle].pin == pin) {
			if (ext_irqs[middle].cb) {
     1b0:	4a0d      	ldr	r2, [pc, #52]	; (1e8 <process_ext_irq+0x40>)
     1b2:	58b3      	ldr	r3, [r6, r2]
     1b4:	2b00      	cmp	r3, #0
     1b6:	d000      	beq.n	1ba <process_ext_irq+0x12>
				ext_irqs[middle].cb();
     1b8:	4798      	blx	r3
			lower = middle + 1;
		} else {
			upper = middle - 1;
		}
	}
}
     1ba:	bd70      	pop	{r4, r5, r6, pc}
			upper = middle - 1;
     1bc:	3a01      	subs	r2, #1
     1be:	b2d5      	uxtb	r5, r2
	while (upper >= lower) {
     1c0:	42ac      	cmp	r4, r5
     1c2:	d8fa      	bhi.n	1ba <process_ext_irq+0x12>
		middle = (upper + lower) >> 1;
     1c4:	192b      	adds	r3, r5, r4
     1c6:	105b      	asrs	r3, r3, #1
     1c8:	b2da      	uxtb	r2, r3
		if (middle >= EXT_IRQ_AMOUNT) {
     1ca:	2a00      	cmp	r2, #0
     1cc:	d1f5      	bne.n	1ba <process_ext_irq+0x12>
     1ce:	21ff      	movs	r1, #255	; 0xff
     1d0:	400b      	ands	r3, r1
		if (ext_irqs[middle].pin == pin) {
     1d2:	00de      	lsls	r6, r3, #3
     1d4:	4904      	ldr	r1, [pc, #16]	; (1e8 <process_ext_irq+0x40>)
     1d6:	1989      	adds	r1, r1, r6
     1d8:	6849      	ldr	r1, [r1, #4]
     1da:	4281      	cmp	r1, r0
     1dc:	d0e8      	beq.n	1b0 <process_ext_irq+0x8>
		if (ext_irqs[middle].pin < pin) {
     1de:	d2ed      	bcs.n	1bc <process_ext_irq+0x14>
			lower = middle + 1;
     1e0:	3201      	adds	r2, #1
     1e2:	b2d4      	uxtb	r4, r2
     1e4:	e7ec      	b.n	1c0 <process_ext_irq+0x18>
     1e6:	46c0      	nop			; (mov r8, r8)
     1e8:	20000a60 	.word	0x20000a60

000001ec <ext_irq_init>:
{
     1ec:	b510      	push	{r4, lr}
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     1ee:	2300      	movs	r3, #0
     1f0:	2b00      	cmp	r3, #0
     1f2:	d003      	beq.n	1fc <ext_irq_init+0x10>
	return _ext_irq_init(process_ext_irq);
     1f4:	4807      	ldr	r0, [pc, #28]	; (214 <ext_irq_init+0x28>)
     1f6:	f000 fbe5 	bl	9c4 <_ext_irq_init>
}
     1fa:	bd10      	pop	{r4, pc}
		ext_irqs[i].pin = 0xFFFFFFFF;
     1fc:	4a06      	ldr	r2, [pc, #24]	; (218 <ext_irq_init+0x2c>)
     1fe:	00d9      	lsls	r1, r3, #3
     200:	1850      	adds	r0, r2, r1
     202:	2401      	movs	r4, #1
     204:	4264      	negs	r4, r4
     206:	6044      	str	r4, [r0, #4]
		ext_irqs[i].cb  = NULL;
     208:	2000      	movs	r0, #0
     20a:	5088      	str	r0, [r1, r2]
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     20c:	3301      	adds	r3, #1
     20e:	b29b      	uxth	r3, r3
     210:	e7ee      	b.n	1f0 <ext_irq_init+0x4>
     212:	46c0      	nop			; (mov r8, r8)
     214:	000001a9 	.word	0x000001a9
     218:	20000a60 	.word	0x20000a60

0000021c <ext_irq_register>:
{
     21c:	b5f0      	push	{r4, r5, r6, r7, lr}
     21e:	46c6      	mov	lr, r8
     220:	b500      	push	{lr}
     222:	b084      	sub	sp, #16
     224:	9001      	str	r0, [sp, #4]
	uint8_t i = 0, j = 0;
     226:	2300      	movs	r3, #0
	for (; i < EXT_IRQ_AMOUNT; i++) {
     228:	2b00      	cmp	r3, #0
     22a:	d010      	beq.n	24e <ext_irq_register+0x32>
	bool    found = false;
     22c:	2300      	movs	r3, #0
     22e:	4698      	mov	r8, r3
	if (NULL == cb) {
     230:	2900      	cmp	r1, #0
     232:	d01b      	beq.n	26c <ext_irq_register+0x50>
	if (!found) {
     234:	4643      	mov	r3, r8
     236:	2b00      	cmp	r3, #0
     238:	d146      	bne.n	2c8 <ext_irq_register+0xac>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     23a:	2b00      	cmp	r3, #0
     23c:	d124      	bne.n	288 <ext_irq_register+0x6c>
			if (NULL == ext_irqs[i].cb) {
     23e:	00da      	lsls	r2, r3, #3
     240:	4c2a      	ldr	r4, [pc, #168]	; (2ec <ext_irq_register+0xd0>)
     242:	5912      	ldr	r2, [r2, r4]
     244:	2a00      	cmp	r2, #0
     246:	d018      	beq.n	27a <ext_irq_register+0x5e>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     248:	3301      	adds	r3, #1
     24a:	b2db      	uxtb	r3, r3
     24c:	e7f5      	b.n	23a <ext_irq_register+0x1e>
		if (ext_irqs[i].pin == pin) {
     24e:	00dc      	lsls	r4, r3, #3
     250:	4a26      	ldr	r2, [pc, #152]	; (2ec <ext_irq_register+0xd0>)
     252:	1912      	adds	r2, r2, r4
     254:	6852      	ldr	r2, [r2, #4]
     256:	9801      	ldr	r0, [sp, #4]
     258:	4282      	cmp	r2, r0
     25a:	d002      	beq.n	262 <ext_irq_register+0x46>
	for (; i < EXT_IRQ_AMOUNT; i++) {
     25c:	3301      	adds	r3, #1
     25e:	b2db      	uxtb	r3, r3
     260:	e7e2      	b.n	228 <ext_irq_register+0xc>
			ext_irqs[i].cb = cb;
     262:	4b22      	ldr	r3, [pc, #136]	; (2ec <ext_irq_register+0xd0>)
     264:	50e1      	str	r1, [r4, r3]
			found          = true;
     266:	2301      	movs	r3, #1
     268:	4698      	mov	r8, r3
			break;
     26a:	e7e1      	b.n	230 <ext_irq_register+0x14>
		if (!found) {
     26c:	4643      	mov	r3, r8
     26e:	2b00      	cmp	r3, #0
     270:	d035      	beq.n	2de <ext_irq_register+0xc2>
		return _ext_irq_enable(pin, false);
     272:	9801      	ldr	r0, [sp, #4]
     274:	f000 fbee 	bl	a54 <_ext_irq_enable>
     278:	e02d      	b.n	2d6 <ext_irq_register+0xba>
				ext_irqs[i].cb  = cb;
     27a:	00dd      	lsls	r5, r3, #3
     27c:	5129      	str	r1, [r5, r4]
				ext_irqs[i].pin = pin;
     27e:	1965      	adds	r5, r4, r5
     280:	9a01      	ldr	r2, [sp, #4]
     282:	606a      	str	r2, [r5, #4]
				found           = true;
     284:	2201      	movs	r2, #1
     286:	4690      	mov	r8, r2
     288:	2200      	movs	r2, #0
     28a:	e001      	b.n	290 <ext_irq_register+0x74>
		for (; (j < EXT_IRQ_AMOUNT) && (i < EXT_IRQ_AMOUNT); j++) {
     28c:	3201      	adds	r2, #1
     28e:	b2d2      	uxtb	r2, r2
     290:	0019      	movs	r1, r3
     292:	4311      	orrs	r1, r2
     294:	d118      	bne.n	2c8 <ext_irq_register+0xac>
			if ((ext_irqs[i].pin < ext_irqs[j].pin) && (ext_irqs[j].pin != 0xFFFFFFFF)) {
     296:	4915      	ldr	r1, [pc, #84]	; (2ec <ext_irq_register+0xd0>)
     298:	00dc      	lsls	r4, r3, #3
     29a:	190c      	adds	r4, r1, r4
     29c:	6867      	ldr	r7, [r4, #4]
     29e:	00d4      	lsls	r4, r2, #3
     2a0:	1909      	adds	r1, r1, r4
     2a2:	6849      	ldr	r1, [r1, #4]
     2a4:	428f      	cmp	r7, r1
     2a6:	d2f1      	bcs.n	28c <ext_irq_register+0x70>
     2a8:	1c4c      	adds	r4, r1, #1
     2aa:	d0ef      	beq.n	28c <ext_irq_register+0x70>
				struct ext_irq tmp = ext_irqs[j];
     2ac:	a902      	add	r1, sp, #8
     2ae:	468c      	mov	ip, r1
     2b0:	4f0e      	ldr	r7, [pc, #56]	; (2ec <ext_irq_register+0xd0>)
     2b2:	00d1      	lsls	r1, r2, #3
     2b4:	1879      	adds	r1, r7, r1
     2b6:	4664      	mov	r4, ip
     2b8:	c941      	ldmia	r1!, {r0, r6}
     2ba:	c441      	stmia	r4!, {r0, r6}
				ext_irqs[i] = tmp;
     2bc:	00dd      	lsls	r5, r3, #3
     2be:	197d      	adds	r5, r7, r5
     2c0:	4661      	mov	r1, ip
     2c2:	c911      	ldmia	r1!, {r0, r4}
     2c4:	c511      	stmia	r5!, {r0, r4}
     2c6:	e7e1      	b.n	28c <ext_irq_register+0x70>
	if (!found) {
     2c8:	4643      	mov	r3, r8
     2ca:	2b00      	cmp	r3, #0
     2cc:	d00a      	beq.n	2e4 <ext_irq_register+0xc8>
	return _ext_irq_enable(pin, true);
     2ce:	2101      	movs	r1, #1
     2d0:	9801      	ldr	r0, [sp, #4]
     2d2:	f000 fbbf 	bl	a54 <_ext_irq_enable>
}
     2d6:	b004      	add	sp, #16
     2d8:	bc04      	pop	{r2}
     2da:	4690      	mov	r8, r2
     2dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return ERR_INVALID_ARG;
     2de:	200d      	movs	r0, #13
     2e0:	4240      	negs	r0, r0
     2e2:	e7f8      	b.n	2d6 <ext_irq_register+0xba>
		return ERR_INVALID_ARG;
     2e4:	200d      	movs	r0, #13
     2e6:	4240      	negs	r0, r0
     2e8:	e7f5      	b.n	2d6 <ext_irq_register+0xba>
     2ea:	46c0      	nop			; (mov r8, r8)
     2ec:	20000a60 	.word	0x20000a60

000002f0 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     2f0:	b510      	push	{r4, lr}
     2f2:	b084      	sub	sp, #16
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     2f4:	3814      	subs	r0, #20
     2f6:	8b84      	ldrh	r4, [r0, #28]
     2f8:	ab01      	add	r3, sp, #4
     2fa:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     2fc:	0014      	movs	r4, r2
     2fe:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP;
     300:	4a06      	ldr	r2, [pc, #24]	; (31c <i2c_m_sync_write+0x2c>)
     302:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     304:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     306:	0019      	movs	r1, r3
     308:	f000 feec 	bl	10e4 <_i2c_m_sync_transfer>

	if (ret) {
     30c:	2800      	cmp	r0, #0
     30e:	d102      	bne.n	316 <i2c_m_sync_write+0x26>
		return ret;
	}

	return n;
}
     310:	0020      	movs	r0, r4
     312:	b004      	add	sp, #16
     314:	bd10      	pop	{r4, pc}
		return ret;
     316:	0004      	movs	r4, r0
     318:	e7fa      	b.n	310 <i2c_m_sync_write+0x20>
     31a:	46c0      	nop			; (mov r8, r8)
     31c:	ffff8000 	.word	0xffff8000

00000320 <i2c_m_sync_read>:
{
     320:	b510      	push	{r4, lr}
     322:	b084      	sub	sp, #16
	msg.addr   = i2c->slave_addr;
     324:	3814      	subs	r0, #20
     326:	8b84      	ldrh	r4, [r0, #28]
     328:	ab01      	add	r3, sp, #4
     32a:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     32c:	0014      	movs	r4, r2
     32e:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     330:	4a06      	ldr	r2, [pc, #24]	; (34c <i2c_m_sync_read+0x2c>)
     332:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     334:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     336:	0019      	movs	r1, r3
     338:	f000 fed4 	bl	10e4 <_i2c_m_sync_transfer>
	if (ret) {
     33c:	2800      	cmp	r0, #0
     33e:	d102      	bne.n	346 <i2c_m_sync_read+0x26>
}
     340:	0020      	movs	r0, r4
     342:	b004      	add	sp, #16
     344:	bd10      	pop	{r4, pc}
		return ret;
     346:	0004      	movs	r4, r0
     348:	e7fa      	b.n	340 <i2c_m_sync_read+0x20>
     34a:	46c0      	nop			; (mov r8, r8)
     34c:	ffff8001 	.word	0xffff8001

00000350 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     350:	b570      	push	{r4, r5, r6, lr}
     352:	0004      	movs	r4, r0
     354:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     356:	1e43      	subs	r3, r0, #1
     358:	4198      	sbcs	r0, r3
     35a:	b2c0      	uxtb	r0, r0
     35c:	225e      	movs	r2, #94	; 0x5e
     35e:	4907      	ldr	r1, [pc, #28]	; (37c <i2c_m_sync_init+0x2c>)
     360:	f000 faca 	bl	8f8 <assert>

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     364:	0029      	movs	r1, r5
     366:	0020      	movs	r0, r4
     368:	f000 fe30 	bl	fcc <_i2c_m_sync_init>
	if (init_status) {
     36c:	2800      	cmp	r0, #0
     36e:	d103      	bne.n	378 <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     370:	4b03      	ldr	r3, [pc, #12]	; (380 <i2c_m_sync_init+0x30>)
     372:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     374:	4b03      	ldr	r3, [pc, #12]	; (384 <i2c_m_sync_init+0x34>)
     376:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     378:	bd70      	pop	{r4, r5, r6, pc}
     37a:	46c0      	nop			; (mov r8, r8)
     37c:	0000d3d4 	.word	0x0000d3d4
     380:	00000321 	.word	0x00000321
     384:	000002f1 	.word	0x000002f1

00000388 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     388:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     38a:	f000 fe71 	bl	1070 <_i2c_m_sync_enable>
}
     38e:	bd10      	pop	{r4, pc}

00000390 <i2c_m_sync_get_io_descriptor>:
/**
 * \brief Retrieve I/O descriptor
 */
int32_t i2c_m_sync_get_io_descriptor(struct i2c_m_sync_desc *const i2c, struct io_descriptor **io)
{
	*io = &i2c->io;
     390:	3014      	adds	r0, #20
     392:	6008      	str	r0, [r1, #0]
	return ERR_NONE;
}
     394:	2000      	movs	r0, #0
     396:	4770      	bx	lr

00000398 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     398:	b570      	push	{r4, r5, r6, lr}
     39a:	0004      	movs	r4, r0
     39c:	000d      	movs	r5, r1
     39e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     3a0:	2800      	cmp	r0, #0
     3a2:	d00e      	beq.n	3c2 <io_write+0x2a>
     3a4:	2900      	cmp	r1, #0
     3a6:	d00a      	beq.n	3be <io_write+0x26>
     3a8:	2001      	movs	r0, #1
     3aa:	2234      	movs	r2, #52	; 0x34
     3ac:	4906      	ldr	r1, [pc, #24]	; (3c8 <io_write+0x30>)
     3ae:	f000 faa3 	bl	8f8 <assert>
	return io_descr->write(io_descr, buf, length);
     3b2:	6823      	ldr	r3, [r4, #0]
     3b4:	0032      	movs	r2, r6
     3b6:	0029      	movs	r1, r5
     3b8:	0020      	movs	r0, r4
     3ba:	4798      	blx	r3
}
     3bc:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     3be:	2000      	movs	r0, #0
     3c0:	e7f3      	b.n	3aa <io_write+0x12>
     3c2:	2000      	movs	r0, #0
     3c4:	e7f1      	b.n	3aa <io_write+0x12>
     3c6:	46c0      	nop			; (mov r8, r8)
     3c8:	0000d3f0 	.word	0x0000d3f0

000003cc <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     3cc:	b570      	push	{r4, r5, r6, lr}
     3ce:	0004      	movs	r4, r0
     3d0:	000d      	movs	r5, r1
     3d2:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     3d4:	2800      	cmp	r0, #0
     3d6:	d00e      	beq.n	3f6 <io_read+0x2a>
     3d8:	2900      	cmp	r1, #0
     3da:	d00a      	beq.n	3f2 <io_read+0x26>
     3dc:	2001      	movs	r0, #1
     3de:	223d      	movs	r2, #61	; 0x3d
     3e0:	4906      	ldr	r1, [pc, #24]	; (3fc <io_read+0x30>)
     3e2:	f000 fa89 	bl	8f8 <assert>
	return io_descr->read(io_descr, buf, length);
     3e6:	6863      	ldr	r3, [r4, #4]
     3e8:	0032      	movs	r2, r6
     3ea:	0029      	movs	r1, r5
     3ec:	0020      	movs	r0, r4
     3ee:	4798      	blx	r3
}
     3f0:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     3f2:	2000      	movs	r0, #0
     3f4:	e7f3      	b.n	3de <io_read+0x12>
     3f6:	2000      	movs	r0, #0
     3f8:	e7f1      	b.n	3de <io_read+0x12>
     3fa:	46c0      	nop			; (mov r8, r8)
     3fc:	0000d3f0 	.word	0x0000d3f0

00000400 <pwm_period_expired>:

/**
 * \internal Process interrupts caused by period experied
 */
static void pwm_period_expired(struct _pwm_device *device)
{
     400:	b510      	push	{r4, lr}
	struct pwm_descriptor *const descr = CONTAINER_OF(device, struct pwm_descriptor, device);

	if (descr->pwm_cb.period) {
     402:	6943      	ldr	r3, [r0, #20]
     404:	2b00      	cmp	r3, #0
     406:	d000      	beq.n	40a <pwm_period_expired+0xa>
		descr->pwm_cb.period(descr);
     408:	4798      	blx	r3
	}
}
     40a:	bd10      	pop	{r4, pc}

0000040c <pwm_detect_fault>:

/**
 * \internal Process interrupts caused by pwm fault
 */
static void pwm_detect_fault(struct _pwm_device *device)
{
     40c:	b510      	push	{r4, lr}
	struct pwm_descriptor *const descr = CONTAINER_OF(device, struct pwm_descriptor, device);

	if (descr->pwm_cb.error) {
     40e:	6983      	ldr	r3, [r0, #24]
     410:	2b00      	cmp	r3, #0
     412:	d000      	beq.n	416 <pwm_detect_fault+0xa>
		descr->pwm_cb.error(descr);
     414:	4798      	blx	r3
	}
}
     416:	bd10      	pop	{r4, pc}

00000418 <pwm_init>:
{
     418:	b570      	push	{r4, r5, r6, lr}
     41a:	0004      	movs	r4, r0
     41c:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     41e:	2800      	cmp	r0, #0
     420:	d012      	beq.n	448 <pwm_init+0x30>
     422:	2900      	cmp	r1, #0
     424:	d00e      	beq.n	444 <pwm_init+0x2c>
     426:	2001      	movs	r0, #1
     428:	2233      	movs	r2, #51	; 0x33
     42a:	4908      	ldr	r1, [pc, #32]	; (44c <pwm_init+0x34>)
     42c:	f000 fa64 	bl	8f8 <assert>
	_pwm_init(&descr->device, hw);
     430:	0029      	movs	r1, r5
     432:	0020      	movs	r0, r4
     434:	f001 f982 	bl	173c <_pwm_init>
	descr->device.callback.pwm_period_cb = pwm_period_expired;
     438:	4b05      	ldr	r3, [pc, #20]	; (450 <pwm_init+0x38>)
     43a:	6023      	str	r3, [r4, #0]
	descr->device.callback.pwm_error_cb  = pwm_detect_fault;
     43c:	4b05      	ldr	r3, [pc, #20]	; (454 <pwm_init+0x3c>)
     43e:	6063      	str	r3, [r4, #4]
}
     440:	2000      	movs	r0, #0
     442:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     444:	2000      	movs	r0, #0
     446:	e7ef      	b.n	428 <pwm_init+0x10>
     448:	2000      	movs	r0, #0
     44a:	e7ed      	b.n	428 <pwm_init+0x10>
     44c:	0000d404 	.word	0x0000d404
     450:	00000401 	.word	0x00000401
     454:	0000040d 	.word	0x0000040d

00000458 <pwm_enable>:
{
     458:	b510      	push	{r4, lr}
     45a:	0004      	movs	r4, r0
	ASSERT(descr);
     45c:	1e43      	subs	r3, r0, #1
     45e:	4198      	sbcs	r0, r3
     460:	b2c0      	uxtb	r0, r0
     462:	224a      	movs	r2, #74	; 0x4a
     464:	4907      	ldr	r1, [pc, #28]	; (484 <pwm_enable+0x2c>)
     466:	f000 fa47 	bl	8f8 <assert>
	if (_pwm_is_enabled(&descr->device)) {
     46a:	0020      	movs	r0, r4
     46c:	f001 fa0c 	bl	1888 <_pwm_is_enabled>
     470:	2800      	cmp	r0, #0
     472:	d104      	bne.n	47e <pwm_enable+0x26>
	_pwm_enable(&descr->device);
     474:	0020      	movs	r0, r4
     476:	f001 f9d5 	bl	1824 <_pwm_enable>
	return ERR_NONE;
     47a:	2000      	movs	r0, #0
}
     47c:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     47e:	2011      	movs	r0, #17
     480:	4240      	negs	r0, r0
     482:	e7fb      	b.n	47c <pwm_enable+0x24>
     484:	0000d404 	.word	0x0000d404

00000488 <pwm_set_parameters>:
{
     488:	b570      	push	{r4, r5, r6, lr}
     48a:	0004      	movs	r4, r0
     48c:	000d      	movs	r5, r1
     48e:	0016      	movs	r6, r2
	ASSERT(descr);
     490:	1e43      	subs	r3, r0, #1
     492:	4198      	sbcs	r0, r3
     494:	b2c0      	uxtb	r0, r0
     496:	227c      	movs	r2, #124	; 0x7c
     498:	4904      	ldr	r1, [pc, #16]	; (4ac <pwm_set_parameters+0x24>)
     49a:	f000 fa2d 	bl	8f8 <assert>
	_pwm_set_param(&descr->device, period, duty_cycle);
     49e:	0032      	movs	r2, r6
     4a0:	0029      	movs	r1, r5
     4a2:	0020      	movs	r0, r4
     4a4:	f001 f9c6 	bl	1834 <_pwm_set_param>
}
     4a8:	2000      	movs	r0, #0
     4aa:	bd70      	pop	{r4, r5, r6, pc}
     4ac:	0000d404 	.word	0x0000d404

000004b0 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
     4b0:	b570      	push	{r4, r5, r6, lr}
     4b2:	0004      	movs	r4, r0
     4b4:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
     4b6:	2800      	cmp	r0, #0
     4b8:	d017      	beq.n	4ea <spi_m_sync_init+0x3a>
     4ba:	2900      	cmp	r1, #0
     4bc:	d013      	beq.n	4e6 <spi_m_sync_init+0x36>
     4be:	2001      	movs	r0, #1
     4c0:	2240      	movs	r2, #64	; 0x40
     4c2:	490b      	ldr	r1, [pc, #44]	; (4f0 <spi_m_sync_init+0x40>)
     4c4:	f000 fa18 	bl	8f8 <assert>
	spi->dev.prvt = (void *)hw;
     4c8:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
     4ca:	1d20      	adds	r0, r4, #4
     4cc:	0029      	movs	r1, r5
     4ce:	f000 ff15 	bl	12fc <_spi_m_sync_init>

	if (rc < 0) {
     4d2:	2800      	cmp	r0, #0
     4d4:	db06      	blt.n	4e4 <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
     4d6:	4b07      	ldr	r3, [pc, #28]	; (4f4 <spi_m_sync_init+0x44>)
     4d8:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
     4da:	4b07      	ldr	r3, [pc, #28]	; (4f8 <spi_m_sync_init+0x48>)
     4dc:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
     4de:	4b07      	ldr	r3, [pc, #28]	; (4fc <spi_m_sync_init+0x4c>)
     4e0:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
     4e2:	2000      	movs	r0, #0
}
     4e4:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
     4e6:	2000      	movs	r0, #0
     4e8:	e7ea      	b.n	4c0 <spi_m_sync_init+0x10>
     4ea:	2000      	movs	r0, #0
     4ec:	e7e8      	b.n	4c0 <spi_m_sync_init+0x10>
     4ee:	46c0      	nop			; (mov r8, r8)
     4f0:	0000d41c 	.word	0x0000d41c
     4f4:	ffff8000 	.word	0xffff8000
     4f8:	00000595 	.word	0x00000595
     4fc:	00000561 	.word	0x00000561

00000500 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
     500:	b510      	push	{r4, lr}
     502:	0004      	movs	r4, r0
	ASSERT(spi);
     504:	1e43      	subs	r3, r0, #1
     506:	4198      	sbcs	r0, r3
     508:	b2c0      	uxtb	r0, r0
     50a:	2257      	movs	r2, #87	; 0x57
     50c:	4903      	ldr	r1, [pc, #12]	; (51c <spi_m_sync_enable+0x1c>)
     50e:	f000 f9f3 	bl	8f8 <assert>
	_spi_m_sync_enable(&spi->dev);
     512:	1d20      	adds	r0, r4, #4
     514:	f000 ffcc 	bl	14b0 <_spi_m_sync_enable>
}
     518:	bd10      	pop	{r4, pc}
     51a:	46c0      	nop			; (mov r8, r8)
     51c:	0000d41c 	.word	0x0000d41c

00000520 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
     520:	b530      	push	{r4, r5, lr}
     522:	b087      	sub	sp, #28
     524:	0004      	movs	r4, r0
     526:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
     528:	2800      	cmp	r0, #0
     52a:	d015      	beq.n	558 <spi_m_sync_transfer+0x38>
     52c:	2900      	cmp	r1, #0
     52e:	d011      	beq.n	554 <spi_m_sync_transfer+0x34>
     530:	2001      	movs	r0, #1
     532:	22b3      	movs	r2, #179	; 0xb3
     534:	4909      	ldr	r1, [pc, #36]	; (55c <spi_m_sync_transfer+0x3c>)
     536:	f000 f9df 	bl	8f8 <assert>

	msg.txbuf = p_xfer->txbuf;
     53a:	682b      	ldr	r3, [r5, #0]
     53c:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
     53e:	686b      	ldr	r3, [r5, #4]
     540:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
     542:	68ab      	ldr	r3, [r5, #8]
     544:	9301      	str	r3, [sp, #4]
     546:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
     548:	1d20      	adds	r0, r4, #4
     54a:	a903      	add	r1, sp, #12
     54c:	f000 ffc8 	bl	14e0 <_spi_m_sync_trans>
}
     550:	b007      	add	sp, #28
     552:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
     554:	2000      	movs	r0, #0
     556:	e7ec      	b.n	532 <spi_m_sync_transfer+0x12>
     558:	2000      	movs	r0, #0
     55a:	e7ea      	b.n	532 <spi_m_sync_transfer+0x12>
     55c:	0000d41c 	.word	0x0000d41c

00000560 <_spi_m_sync_io_write>:
{
     560:	b570      	push	{r4, r5, r6, lr}
     562:	b084      	sub	sp, #16
     564:	0004      	movs	r4, r0
     566:	000e      	movs	r6, r1
     568:	0015      	movs	r5, r2
	ASSERT(io);
     56a:	1e43      	subs	r3, r0, #1
     56c:	4198      	sbcs	r0, r3
     56e:	b2c0      	uxtb	r0, r0
     570:	22a3      	movs	r2, #163	; 0xa3
     572:	4907      	ldr	r1, [pc, #28]	; (590 <_spi_m_sync_io_write+0x30>)
     574:	f000 f9c0 	bl	8f8 <assert>
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     578:	0020      	movs	r0, r4
     57a:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
     57c:	2300      	movs	r3, #0
     57e:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
     580:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
     582:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     584:	a901      	add	r1, sp, #4
     586:	f7ff ffcb 	bl	520 <spi_m_sync_transfer>
}
     58a:	b004      	add	sp, #16
     58c:	bd70      	pop	{r4, r5, r6, pc}
     58e:	46c0      	nop			; (mov r8, r8)
     590:	0000d41c 	.word	0x0000d41c

00000594 <_spi_m_sync_io_read>:
{
     594:	b570      	push	{r4, r5, r6, lr}
     596:	b084      	sub	sp, #16
     598:	0004      	movs	r4, r0
     59a:	000e      	movs	r6, r1
     59c:	0015      	movs	r5, r2
	ASSERT(io);
     59e:	1e43      	subs	r3, r0, #1
     5a0:	4198      	sbcs	r0, r3
     5a2:	b2c0      	uxtb	r0, r0
     5a4:	2287      	movs	r2, #135	; 0x87
     5a6:	4907      	ldr	r1, [pc, #28]	; (5c4 <_spi_m_sync_io_read+0x30>)
     5a8:	f000 f9a6 	bl	8f8 <assert>
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     5ac:	0020      	movs	r0, r4
     5ae:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
     5b0:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
     5b2:	2300      	movs	r3, #0
     5b4:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
     5b6:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     5b8:	a901      	add	r1, sp, #4
     5ba:	f7ff ffb1 	bl	520 <spi_m_sync_transfer>
}
     5be:	b004      	add	sp, #16
     5c0:	bd70      	pop	{r4, r5, r6, pc}
     5c2:	46c0      	nop			; (mov r8, r8)
     5c4:	0000d41c 	.word	0x0000d41c

000005c8 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
     5c8:	b570      	push	{r4, r5, r6, lr}
     5ca:	0004      	movs	r4, r0
     5cc:	000d      	movs	r5, r1
	ASSERT(spi && io);
     5ce:	2800      	cmp	r0, #0
     5d0:	d00c      	beq.n	5ec <spi_m_sync_get_io_descriptor+0x24>
     5d2:	2900      	cmp	r1, #0
     5d4:	d008      	beq.n	5e8 <spi_m_sync_get_io_descriptor+0x20>
     5d6:	2001      	movs	r0, #1
     5d8:	22bd      	movs	r2, #189	; 0xbd
     5da:	4905      	ldr	r1, [pc, #20]	; (5f0 <spi_m_sync_get_io_descriptor+0x28>)
     5dc:	f000 f98c 	bl	8f8 <assert>
	*io = &spi->io;
     5e0:	340c      	adds	r4, #12
     5e2:	602c      	str	r4, [r5, #0]
	return 0;
}
     5e4:	2000      	movs	r0, #0
     5e6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
     5e8:	2000      	movs	r0, #0
     5ea:	e7f5      	b.n	5d8 <spi_m_sync_get_io_descriptor+0x10>
     5ec:	2000      	movs	r0, #0
     5ee:	e7f3      	b.n	5d8 <spi_m_sync_get_io_descriptor+0x10>
     5f0:	0000d41c 	.word	0x0000d41c

000005f4 <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     5f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     5f6:	6806      	ldr	r6, [r0, #0]
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     5f8:	2e00      	cmp	r6, #0
     5fa:	d002      	beq.n	602 <timer_add_timer_task+0xe>
     5fc:	0033      	movs	r3, r6
     5fe:	2500      	movs	r5, #0
     600:	e00c      	b.n	61c <timer_add_timer_task+0x28>
		list_insert_as_head(list, new_task);
     602:	f000 f989 	bl	918 <list_insert_as_head>
		return;
     606:	e018      	b.n	63a <timer_add_timer_task+0x46>
		uint32_t time_left;

		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     608:	689f      	ldr	r7, [r3, #8]
     60a:	46bc      	mov	ip, r7
     60c:	4464      	add	r4, ip
     60e:	1aa4      	subs	r4, r4, r2
     610:	3401      	adds	r4, #1
		}
		if (time_left >= new_task->interval)
     612:	688f      	ldr	r7, [r1, #8]
     614:	42bc      	cmp	r4, r7
     616:	d20b      	bcs.n	630 <timer_add_timer_task+0x3c>
			break;
		prev = it;
     618:	001d      	movs	r5, r3
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     61a:	681b      	ldr	r3, [r3, #0]
     61c:	2b00      	cmp	r3, #0
     61e:	d007      	beq.n	630 <timer_add_timer_task+0x3c>
		if (it->time_label <= time) {
     620:	685c      	ldr	r4, [r3, #4]
     622:	4294      	cmp	r4, r2
     624:	d8f0      	bhi.n	608 <timer_add_timer_task+0x14>
			time_left = it->interval - (time - it->time_label);
     626:	1aa4      	subs	r4, r4, r2
     628:	689f      	ldr	r7, [r3, #8]
     62a:	46bc      	mov	ip, r7
     62c:	4464      	add	r4, ip
     62e:	e7f0      	b.n	612 <timer_add_timer_task+0x1e>
	}

	if (it == head) {
     630:	42b3      	cmp	r3, r6
     632:	d003      	beq.n	63c <timer_add_timer_task+0x48>
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     634:	0028      	movs	r0, r5
     636:	f000 f981 	bl	93c <list_insert_after>
	}
}
     63a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     63c:	f000 f96c 	bl	918 <list_insert_as_head>
     640:	e7fb      	b.n	63a <timer_add_timer_task+0x46>

00000642 <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     642:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     644:	0005      	movs	r5, r0
     646:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     648:	6903      	ldr	r3, [r0, #16]
     64a:	1c5e      	adds	r6, r3, #1
     64c:	6106      	str	r6, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     64e:	7e03      	ldrb	r3, [r0, #24]
     650:	07db      	lsls	r3, r3, #31
     652:	d402      	bmi.n	65a <timer_process_counted+0x18>
     654:	7e03      	ldrb	r3, [r0, #24]
     656:	079b      	lsls	r3, r3, #30
     658:	d50a      	bpl.n	670 <timer_process_counted+0x2e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     65a:	7e2b      	ldrb	r3, [r5, #24]
     65c:	2202      	movs	r2, #2
     65e:	4313      	orrs	r3, r2
     660:	b2db      	uxtb	r3, r3
     662:	762b      	strb	r3, [r5, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     666:	696f      	ldr	r7, [r5, #20]
		tmp->cb(tmp);
     668:	68e3      	ldr	r3, [r4, #12]
     66a:	0020      	movs	r0, r4
     66c:	4798      	blx	r3
		it = (struct timer_task *)list_get_head(&timer->tasks);
     66e:	003c      	movs	r4, r7
	while (it && ((time - it->time_label) >= it->interval)) {
     670:	2c00      	cmp	r4, #0
     672:	d0f7      	beq.n	664 <timer_process_counted+0x22>
     674:	6863      	ldr	r3, [r4, #4]
     676:	1af3      	subs	r3, r6, r3
     678:	68a2      	ldr	r2, [r4, #8]
     67a:	4293      	cmp	r3, r2
     67c:	d3f2      	bcc.n	664 <timer_process_counted+0x22>
		list_remove_head(&timer->tasks);
     67e:	002f      	movs	r7, r5
     680:	3714      	adds	r7, #20
     682:	0038      	movs	r0, r7
     684:	f000 f95e 	bl	944 <list_remove_head>
		if (TIMER_TASK_REPEAT == tmp->mode) {
     688:	7c23      	ldrb	r3, [r4, #16]
     68a:	2b01      	cmp	r3, #1
     68c:	d1eb      	bne.n	666 <timer_process_counted+0x24>
			tmp->time_label = time;
     68e:	6066      	str	r6, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     690:	0032      	movs	r2, r6
     692:	0021      	movs	r1, r4
     694:	0038      	movs	r0, r7
     696:	f7ff ffad 	bl	5f4 <timer_add_timer_task>
     69a:	e7e4      	b.n	666 <timer_process_counted+0x24>

0000069c <timer_init>:
{
     69c:	b570      	push	{r4, r5, r6, lr}
     69e:	0004      	movs	r4, r0
     6a0:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     6a2:	2800      	cmp	r0, #0
     6a4:	d012      	beq.n	6cc <timer_init+0x30>
     6a6:	2900      	cmp	r1, #0
     6a8:	d00e      	beq.n	6c8 <timer_init+0x2c>
     6aa:	2001      	movs	r0, #1
     6ac:	223b      	movs	r2, #59	; 0x3b
     6ae:	4908      	ldr	r1, [pc, #32]	; (6d0 <timer_init+0x34>)
     6b0:	f000 f922 	bl	8f8 <assert>
	_timer_init(&descr->device, hw);
     6b4:	0029      	movs	r1, r5
     6b6:	0020      	movs	r0, r4
     6b8:	f000 fa96 	bl	be8 <_timer_init>
	descr->time                           = 0;
     6bc:	2300      	movs	r3, #0
     6be:	6123      	str	r3, [r4, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     6c0:	4b04      	ldr	r3, [pc, #16]	; (6d4 <timer_init+0x38>)
     6c2:	6023      	str	r3, [r4, #0]
}
     6c4:	2000      	movs	r0, #0
     6c6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     6c8:	2000      	movs	r0, #0
     6ca:	e7ef      	b.n	6ac <timer_init+0x10>
     6cc:	2000      	movs	r0, #0
     6ce:	e7ed      	b.n	6ac <timer_init+0x10>
     6d0:	0000d438 	.word	0x0000d438
     6d4:	00000643 	.word	0x00000643

000006d8 <timer_start>:
{
     6d8:	b510      	push	{r4, lr}
     6da:	0004      	movs	r4, r0
	ASSERT(descr);
     6dc:	1e43      	subs	r3, r0, #1
     6de:	4198      	sbcs	r0, r3
     6e0:	b2c0      	uxtb	r0, r0
     6e2:	2253      	movs	r2, #83	; 0x53
     6e4:	4907      	ldr	r1, [pc, #28]	; (704 <timer_start+0x2c>)
     6e6:	f000 f907 	bl	8f8 <assert>
	if (_timer_is_started(&descr->device)) {
     6ea:	0020      	movs	r0, r4
     6ec:	f000 fad2 	bl	c94 <_timer_is_started>
     6f0:	2800      	cmp	r0, #0
     6f2:	d104      	bne.n	6fe <timer_start+0x26>
	_timer_start(&descr->device);
     6f4:	0020      	movs	r0, r4
     6f6:	f000 faa3 	bl	c40 <_timer_start>
	return ERR_NONE;
     6fa:	2000      	movs	r0, #0
}
     6fc:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     6fe:	2011      	movs	r0, #17
     700:	4240      	negs	r0, r0
     702:	e7fb      	b.n	6fc <timer_start+0x24>
     704:	0000d438 	.word	0x0000d438

00000708 <timer_add_task>:
{
     708:	b570      	push	{r4, r5, r6, lr}
     70a:	b082      	sub	sp, #8
     70c:	0004      	movs	r4, r0
     70e:	000d      	movs	r5, r1
	ASSERT(descr && task);
     710:	2800      	cmp	r0, #0
     712:	d026      	beq.n	762 <timer_add_task+0x5a>
     714:	2900      	cmp	r1, #0
     716:	d022      	beq.n	75e <timer_add_task+0x56>
     718:	2001      	movs	r0, #1
     71a:	227a      	movs	r2, #122	; 0x7a
     71c:	491f      	ldr	r1, [pc, #124]	; (79c <timer_add_task+0x94>)
     71e:	f000 f8eb 	bl	8f8 <assert>
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     722:	7e23      	ldrb	r3, [r4, #24]
     724:	2201      	movs	r2, #1
     726:	4313      	orrs	r3, r2
     728:	b2db      	uxtb	r3, r3
     72a:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     72c:	0026      	movs	r6, r4
     72e:	3614      	adds	r6, #20
     730:	0029      	movs	r1, r5
     732:	0030      	movs	r0, r6
     734:	f000 f8e4 	bl	900 <is_list_element>
     738:	2800      	cmp	r0, #0
     73a:	d114      	bne.n	766 <timer_add_task+0x5e>
	task->time_label = descr->time;
     73c:	6923      	ldr	r3, [r4, #16]
     73e:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     740:	6922      	ldr	r2, [r4, #16]
     742:	0029      	movs	r1, r5
     744:	0030      	movs	r0, r6
     746:	f7ff ff55 	bl	5f4 <timer_add_timer_task>
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     74a:	7e23      	ldrb	r3, [r4, #24]
     74c:	2201      	movs	r2, #1
     74e:	4393      	bics	r3, r2
     750:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     752:	7e23      	ldrb	r3, [r4, #24]
     754:	079b      	lsls	r3, r3, #30
     756:	d412      	bmi.n	77e <timer_add_task+0x76>
	return ERR_NONE;
     758:	2000      	movs	r0, #0
}
     75a:	b002      	add	sp, #8
     75c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && task);
     75e:	2000      	movs	r0, #0
     760:	e7db      	b.n	71a <timer_add_task+0x12>
     762:	2000      	movs	r0, #0
     764:	e7d9      	b.n	71a <timer_add_task+0x12>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     766:	7e23      	ldrb	r3, [r4, #24]
     768:	2201      	movs	r2, #1
     76a:	4393      	bics	r3, r2
     76c:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     76e:	327e      	adds	r2, #126	; 0x7e
     770:	490a      	ldr	r1, [pc, #40]	; (79c <timer_add_task+0x94>)
     772:	2000      	movs	r0, #0
     774:	f000 f8c0 	bl	8f8 <assert>
		return ERR_ALREADY_INITIALIZED;
     778:	2012      	movs	r0, #18
     77a:	4240      	negs	r0, r0
     77c:	e7ed      	b.n	75a <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     77e:	a801      	add	r0, sp, #4
     780:	f7ff fcf8 	bl	174 <atomic_enter_critical>
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     784:	7e23      	ldrb	r3, [r4, #24]
     786:	2202      	movs	r2, #2
     788:	4393      	bics	r3, r2
     78a:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     78c:	0020      	movs	r0, r4
     78e:	f000 fa8a 	bl	ca6 <_timer_set_irq>
		CRITICAL_SECTION_LEAVE()
     792:	a801      	add	r0, sp, #4
     794:	f7ff fcf5 	bl	182 <atomic_leave_critical>
	return ERR_NONE;
     798:	2000      	movs	r0, #0
     79a:	e7de      	b.n	75a <timer_add_task+0x52>
     79c:	0000d438 	.word	0x0000d438

000007a0 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     7a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     7a2:	0005      	movs	r5, r0
     7a4:	000e      	movs	r6, r1
     7a6:	0017      	movs	r7, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     7a8:	2800      	cmp	r0, #0
     7aa:	d023      	beq.n	7f4 <usart_sync_write+0x54>
     7ac:	2900      	cmp	r1, #0
     7ae:	d023      	beq.n	7f8 <usart_sync_write+0x58>
     7b0:	2a00      	cmp	r2, #0
     7b2:	d123      	bne.n	7fc <usart_sync_write+0x5c>
     7b4:	2000      	movs	r0, #0
     7b6:	22f1      	movs	r2, #241	; 0xf1
     7b8:	4911      	ldr	r1, [pc, #68]	; (800 <usart_sync_write+0x60>)
     7ba:	f000 f89d 	bl	8f8 <assert>
	while (!_usart_sync_is_ready_to_send(&descr->device))
     7be:	002c      	movs	r4, r5
     7c0:	3408      	adds	r4, #8
     7c2:	0020      	movs	r0, r4
     7c4:	f000 fbf1 	bl	faa <_usart_sync_is_ready_to_send>
     7c8:	2800      	cmp	r0, #0
     7ca:	d0f8      	beq.n	7be <usart_sync_write+0x1e>
     7cc:	2500      	movs	r5, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     7ce:	5d71      	ldrb	r1, [r6, r5]
     7d0:	0020      	movs	r0, r4
     7d2:	f000 fbe2 	bl	f9a <_usart_sync_write_byte>
		while (!_usart_sync_is_ready_to_send(&descr->device))
     7d6:	0020      	movs	r0, r4
     7d8:	f000 fbe7 	bl	faa <_usart_sync_is_ready_to_send>
     7dc:	2800      	cmp	r0, #0
     7de:	d0fa      	beq.n	7d6 <usart_sync_write+0x36>
			;
	} while (++offset < length);
     7e0:	3501      	adds	r5, #1
     7e2:	42bd      	cmp	r5, r7
     7e4:	d3f3      	bcc.n	7ce <usart_sync_write+0x2e>
	while (!_usart_sync_is_transmit_done(&descr->device))
     7e6:	0020      	movs	r0, r4
     7e8:	f000 fbe4 	bl	fb4 <_usart_sync_is_transmit_done>
     7ec:	2800      	cmp	r0, #0
     7ee:	d0fa      	beq.n	7e6 <usart_sync_write+0x46>
		;
	return (int32_t)offset;
}
     7f0:	0028      	movs	r0, r5
     7f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     7f4:	2000      	movs	r0, #0
     7f6:	e7de      	b.n	7b6 <usart_sync_write+0x16>
     7f8:	2000      	movs	r0, #0
     7fa:	e7dc      	b.n	7b6 <usart_sync_write+0x16>
     7fc:	2001      	movs	r0, #1
     7fe:	e7da      	b.n	7b6 <usart_sync_write+0x16>
     800:	0000d450 	.word	0x0000d450

00000804 <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     806:	46ce      	mov	lr, r9
     808:	4647      	mov	r7, r8
     80a:	b580      	push	{r7, lr}
     80c:	1e05      	subs	r5, r0, #0
     80e:	4688      	mov	r8, r1
     810:	4691      	mov	r9, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     812:	d01f      	beq.n	854 <usart_sync_read+0x50>
     814:	2900      	cmp	r1, #0
     816:	d01f      	beq.n	858 <usart_sync_read+0x54>
     818:	2a00      	cmp	r2, #0
     81a:	d11f      	bne.n	85c <usart_sync_read+0x58>
     81c:	2000      	movs	r0, #0
     81e:	2286      	movs	r2, #134	; 0x86
     820:	0052      	lsls	r2, r2, #1
     822:	490f      	ldr	r1, [pc, #60]	; (860 <usart_sync_read+0x5c>)
     824:	f000 f868 	bl	8f8 <assert>
	uint32_t                      offset = 0;
     828:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     82a:	002c      	movs	r4, r5
     82c:	3408      	adds	r4, #8
     82e:	0020      	movs	r0, r4
     830:	f000 fbc6 	bl	fc0 <_usart_sync_is_byte_received>
     834:	2800      	cmp	r0, #0
     836:	d0f8      	beq.n	82a <usart_sync_read+0x26>
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     838:	4643      	mov	r3, r8
     83a:	199f      	adds	r7, r3, r6
     83c:	0020      	movs	r0, r4
     83e:	f000 fbb0 	bl	fa2 <_usart_sync_read_byte>
     842:	7038      	strb	r0, [r7, #0]
	} while (++offset < length);
     844:	3601      	adds	r6, #1
     846:	454e      	cmp	r6, r9
     848:	d3ef      	bcc.n	82a <usart_sync_read+0x26>

	return (int32_t)offset;
}
     84a:	0030      	movs	r0, r6
     84c:	bc0c      	pop	{r2, r3}
     84e:	4690      	mov	r8, r2
     850:	4699      	mov	r9, r3
     852:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     854:	2000      	movs	r0, #0
     856:	e7e2      	b.n	81e <usart_sync_read+0x1a>
     858:	2000      	movs	r0, #0
     85a:	e7e0      	b.n	81e <usart_sync_read+0x1a>
     85c:	2001      	movs	r0, #1
     85e:	e7de      	b.n	81e <usart_sync_read+0x1a>
     860:	0000d450 	.word	0x0000d450

00000864 <usart_sync_init>:
{
     864:	b570      	push	{r4, r5, r6, lr}
     866:	0004      	movs	r4, r0
     868:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     86a:	2800      	cmp	r0, #0
     86c:	d014      	beq.n	898 <usart_sync_init+0x34>
     86e:	2900      	cmp	r1, #0
     870:	d010      	beq.n	894 <usart_sync_init+0x30>
     872:	2001      	movs	r0, #1
     874:	2234      	movs	r2, #52	; 0x34
     876:	4909      	ldr	r1, [pc, #36]	; (89c <usart_sync_init+0x38>)
     878:	f000 f83e 	bl	8f8 <assert>
	init_status = _usart_sync_init(&descr->device, hw);
     87c:	0020      	movs	r0, r4
     87e:	3008      	adds	r0, #8
     880:	0029      	movs	r1, r5
     882:	f000 fb6f 	bl	f64 <_usart_sync_init>
	if (init_status) {
     886:	2800      	cmp	r0, #0
     888:	d103      	bne.n	892 <usart_sync_init+0x2e>
	descr->io.read  = usart_sync_read;
     88a:	4b05      	ldr	r3, [pc, #20]	; (8a0 <usart_sync_init+0x3c>)
     88c:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_sync_write;
     88e:	4b05      	ldr	r3, [pc, #20]	; (8a4 <usart_sync_init+0x40>)
     890:	6023      	str	r3, [r4, #0]
}
     892:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     894:	2000      	movs	r0, #0
     896:	e7ed      	b.n	874 <usart_sync_init+0x10>
     898:	2000      	movs	r0, #0
     89a:	e7eb      	b.n	874 <usart_sync_init+0x10>
     89c:	0000d450 	.word	0x0000d450
     8a0:	00000805 	.word	0x00000805
     8a4:	000007a1 	.word	0x000007a1

000008a8 <usart_sync_enable>:
{
     8a8:	b510      	push	{r4, lr}
     8aa:	0004      	movs	r4, r0
	ASSERT(descr);
     8ac:	1e43      	subs	r3, r0, #1
     8ae:	4198      	sbcs	r0, r3
     8b0:	b2c0      	uxtb	r0, r0
     8b2:	2253      	movs	r2, #83	; 0x53
     8b4:	4904      	ldr	r1, [pc, #16]	; (8c8 <usart_sync_enable+0x20>)
     8b6:	f000 f81f 	bl	8f8 <assert>
	_usart_sync_enable(&descr->device);
     8ba:	0020      	movs	r0, r4
     8bc:	3008      	adds	r0, #8
     8be:	f000 fb63 	bl	f88 <_usart_sync_enable>
}
     8c2:	2000      	movs	r0, #0
     8c4:	bd10      	pop	{r4, pc}
     8c6:	46c0      	nop			; (mov r8, r8)
     8c8:	0000d450 	.word	0x0000d450

000008cc <usart_sync_get_io_descriptor>:
{
     8cc:	b570      	push	{r4, r5, r6, lr}
     8ce:	0004      	movs	r4, r0
     8d0:	000d      	movs	r5, r1
	ASSERT(descr && io);
     8d2:	2800      	cmp	r0, #0
     8d4:	d00b      	beq.n	8ee <usart_sync_get_io_descriptor+0x22>
     8d6:	2900      	cmp	r1, #0
     8d8:	d007      	beq.n	8ea <usart_sync_get_io_descriptor+0x1e>
     8da:	2001      	movs	r0, #1
     8dc:	2269      	movs	r2, #105	; 0x69
     8de:	4905      	ldr	r1, [pc, #20]	; (8f4 <usart_sync_get_io_descriptor+0x28>)
     8e0:	f000 f80a 	bl	8f8 <assert>
	*io = &descr->io;
     8e4:	602c      	str	r4, [r5, #0]
}
     8e6:	2000      	movs	r0, #0
     8e8:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && io);
     8ea:	2000      	movs	r0, #0
     8ec:	e7f6      	b.n	8dc <usart_sync_get_io_descriptor+0x10>
     8ee:	2000      	movs	r0, #0
     8f0:	e7f4      	b.n	8dc <usart_sync_get_io_descriptor+0x10>
     8f2:	46c0      	nop			; (mov r8, r8)
     8f4:	0000d450 	.word	0x0000d450

000008f8 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     8f8:	2800      	cmp	r0, #0
     8fa:	d100      	bne.n	8fe <assert+0x6>
		__asm("BKPT #0");
     8fc:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     8fe:	4770      	bx	lr

00000900 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
     900:	6803      	ldr	r3, [r0, #0]
     902:	2b00      	cmp	r3, #0
     904:	d003      	beq.n	90e <is_list_element+0xe>
		if (it == element) {
     906:	428b      	cmp	r3, r1
     908:	d003      	beq.n	912 <is_list_element+0x12>
	for (it = list->head; it; it = it->next) {
     90a:	681b      	ldr	r3, [r3, #0]
     90c:	e7f9      	b.n	902 <is_list_element+0x2>
			return true;
		}
	}

	return false;
     90e:	2000      	movs	r0, #0
}
     910:	4770      	bx	lr
			return true;
     912:	2001      	movs	r0, #1
     914:	e7fc      	b.n	910 <is_list_element+0x10>
	...

00000918 <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
     918:	b570      	push	{r4, r5, r6, lr}
     91a:	0004      	movs	r4, r0
     91c:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
     91e:	f7ff ffef 	bl	900 <is_list_element>
     922:	2301      	movs	r3, #1
     924:	4058      	eors	r0, r3
     926:	b2c0      	uxtb	r0, r0
     928:	2239      	movs	r2, #57	; 0x39
     92a:	4903      	ldr	r1, [pc, #12]	; (938 <list_insert_as_head+0x20>)
     92c:	f7ff ffe4 	bl	8f8 <assert>

	((struct list_element *)element)->next = list->head;
     930:	6823      	ldr	r3, [r4, #0]
     932:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
     934:	6025      	str	r5, [r4, #0]
}
     936:	bd70      	pop	{r4, r5, r6, pc}
     938:	0000d46c 	.word	0x0000d46c

0000093c <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
     93c:	6803      	ldr	r3, [r0, #0]
     93e:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
     940:	6001      	str	r1, [r0, #0]
}
     942:	4770      	bx	lr

00000944 <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
     944:	6803      	ldr	r3, [r0, #0]
     946:	2b00      	cmp	r3, #0
     948:	d003      	beq.n	952 <list_remove_head+0xe>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
     94a:	681a      	ldr	r2, [r3, #0]
     94c:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
     94e:	0018      	movs	r0, r3
	}

	return NULL;
}
     950:	4770      	bx	lr
	return NULL;
     952:	2000      	movs	r0, #0
     954:	e7fc      	b.n	950 <list_remove_head+0xc>
	...

00000958 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     958:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     95a:	4a06      	ldr	r2, [pc, #24]	; (974 <_sbrk+0x1c>)
     95c:	6812      	ldr	r2, [r2, #0]
     95e:	2a00      	cmp	r2, #0
     960:	d004      	beq.n	96c <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     962:	4a04      	ldr	r2, [pc, #16]	; (974 <_sbrk+0x1c>)
     964:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     966:	18c3      	adds	r3, r0, r3
     968:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     96a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     96c:	4902      	ldr	r1, [pc, #8]	; (978 <_sbrk+0x20>)
     96e:	4a01      	ldr	r2, [pc, #4]	; (974 <_sbrk+0x1c>)
     970:	6011      	str	r1, [r2, #0]
     972:	e7f6      	b.n	962 <_sbrk+0xa>
     974:	20000a68 	.word	0x20000a68
     978:	20003458 	.word	0x20003458

0000097c <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
     97c:	b510      	push	{r4, lr}
		return (ms * (freq / 100000) + 2) / 3 * 100;
     97e:	0103      	lsls	r3, r0, #4
     980:	1a1b      	subs	r3, r3, r0
     982:	0158      	lsls	r0, r3, #5
     984:	3002      	adds	r0, #2
     986:	2103      	movs	r1, #3
     988:	f002 fe4e 	bl	3628 <__udivsi3>
     98c:	2364      	movs	r3, #100	; 0x64
     98e:	4358      	muls	r0, r3
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     990:	bd10      	pop	{r4, pc}

00000992 <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
     992:	3901      	subs	r1, #1
     994:	d8fd      	bhi.n	992 <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
     996:	4770      	bx	lr

00000998 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     998:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     99a:	4a09      	ldr	r2, [pc, #36]	; (9c0 <_init_chip+0x28>)
     99c:	6853      	ldr	r3, [r2, #4]
     99e:	2106      	movs	r1, #6
     9a0:	430b      	orrs	r3, r1
     9a2:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
     9a4:	f000 f902 	bl	bac <_pm_init>
	_sysctrl_init_sources();
     9a8:	f000 fe0c 	bl	15c4 <_sysctrl_init_sources>
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
     9ac:	2008      	movs	r0, #8
     9ae:	f000 f8cf 	bl	b50 <_gclk_init_generators_by_fref>
#endif
	_sysctrl_init_referenced_generators();
     9b2:	f000 fe2d 	bl	1610 <_sysctrl_init_referenced_generators>
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     9b6:	20f7      	movs	r0, #247	; 0xf7
     9b8:	f000 f8ca 	bl	b50 <_gclk_init_generators_by_fref>
}
     9bc:	bd10      	pop	{r4, pc}
     9be:	46c0      	nop			; (mov r8, r8)
     9c0:	41004000 	.word	0x41004000

000009c4 <_ext_irq_init>:
typedef uint8_t  hri_eic_nmiflag_reg_t;
typedef uint8_t  hri_eic_status_reg_t;

static inline void hri_eic_wait_for_sync(const void *const hw)
{
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     9c4:	4b20      	ldr	r3, [pc, #128]	; (a48 <_ext_irq_init+0x84>)
     9c6:	785b      	ldrb	r3, [r3, #1]
     9c8:	09db      	lsrs	r3, r3, #7
     9ca:	d1fb      	bne.n	9c4 <_ext_irq_init>
     9cc:	4b1e      	ldr	r3, [pc, #120]	; (a48 <_ext_irq_init+0x84>)
     9ce:	785b      	ldrb	r3, [r3, #1]
     9d0:	09db      	lsrs	r3, r3, #7
     9d2:	d1fb      	bne.n	9cc <_ext_irq_init+0x8>

static inline hri_eic_ctrl_reg_t hri_eic_get_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t mask)
{
	uint8_t tmp;
	hri_eic_wait_for_sync(hw);
	tmp = ((Eic *)hw)->CTRL.reg;
     9d4:	4b1c      	ldr	r3, [pc, #112]	; (a48 <_ext_irq_init+0x84>)
     9d6:	781b      	ldrb	r3, [r3, #0]
 * \brief Initialize external interrupt module
 */
int32_t _ext_irq_init(void (*cb)(const uint32_t pin))
{
	hri_eic_wait_for_sync(EIC);
	if (hri_eic_get_CTRL_reg(EIC, EIC_CTRL_ENABLE)) {
     9d8:	079b      	lsls	r3, r3, #30
     9da:	d50a      	bpl.n	9f2 <_ext_irq_init+0x2e>
}

static inline void hri_eic_write_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CTRL.reg = data;
     9dc:	2200      	movs	r2, #0
     9de:	4b1a      	ldr	r3, [pc, #104]	; (a48 <_ext_irq_init+0x84>)
     9e0:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     9e2:	4b19      	ldr	r3, [pc, #100]	; (a48 <_ext_irq_init+0x84>)
     9e4:	785b      	ldrb	r3, [r3, #1]
     9e6:	09db      	lsrs	r3, r3, #7
     9e8:	d1fb      	bne.n	9e2 <_ext_irq_init+0x1e>
     9ea:	4b17      	ldr	r3, [pc, #92]	; (a48 <_ext_irq_init+0x84>)
     9ec:	785b      	ldrb	r3, [r3, #1]
     9ee:	09db      	lsrs	r3, r3, #7
     9f0:	d1fb      	bne.n	9ea <_ext_irq_init+0x26>
	((Eic *)hw)->CTRL.reg = data;
     9f2:	2201      	movs	r2, #1
     9f4:	4b14      	ldr	r3, [pc, #80]	; (a48 <_ext_irq_init+0x84>)
     9f6:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     9f8:	4b13      	ldr	r3, [pc, #76]	; (a48 <_ext_irq_init+0x84>)
     9fa:	785b      	ldrb	r3, [r3, #1]
     9fc:	09db      	lsrs	r3, r3, #7
     9fe:	d1fb      	bne.n	9f8 <_ext_irq_init+0x34>
     a00:	4b11      	ldr	r3, [pc, #68]	; (a48 <_ext_irq_init+0x84>)
     a02:	785b      	ldrb	r3, [r3, #1]
     a04:	09db      	lsrs	r3, r3, #7
     a06:	d1fb      	bne.n	a00 <_ext_irq_init+0x3c>
}

static inline void hri_eic_write_NMICTRL_reg(const void *const hw, hri_eic_nmictrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->NMICTRL.reg = data;
     a08:	4b0f      	ldr	r3, [pc, #60]	; (a48 <_ext_irq_init+0x84>)
     a0a:	2200      	movs	r2, #0
     a0c:	709a      	strb	r2, [r3, #2]
}

static inline void hri_eic_write_EVCTRL_reg(const void *const hw, hri_eic_evctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->EVCTRL.reg = data;
     a0e:	605a      	str	r2, [r3, #4]
}

static inline void hri_eic_write_WAKEUP_reg(const void *const hw, hri_eic_wakeup_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->WAKEUP.reg = data;
     a10:	615a      	str	r2, [r3, #20]
}

static inline void hri_eic_write_CONFIG_reg(const void *const hw, uint8_t index, hri_eic_config_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CONFIG[index].reg = data;
     a12:	619a      	str	r2, [r3, #24]
     a14:	61da      	str	r2, [r3, #28]
	((Eic *)hw)->CTRL.reg |= EIC_CTRL_ENABLE;
     a16:	781a      	ldrb	r2, [r3, #0]
     a18:	2102      	movs	r1, #2
     a1a:	430a      	orrs	r2, r1
     a1c:	b2d2      	uxtb	r2, r2
     a1e:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     a20:	4b09      	ldr	r3, [pc, #36]	; (a48 <_ext_irq_init+0x84>)
     a22:	785b      	ldrb	r3, [r3, #1]
     a24:	09db      	lsrs	r3, r3, #7
     a26:	d1fb      	bne.n	a20 <_ext_irq_init+0x5c>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     a28:	4b08      	ldr	r3, [pc, #32]	; (a4c <_ext_irq_init+0x88>)
     a2a:	2210      	movs	r2, #16
     a2c:	2180      	movs	r1, #128	; 0x80
     a2e:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
     a30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
     a34:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     a38:	3101      	adds	r1, #1
     a3a:	31ff      	adds	r1, #255	; 0xff
     a3c:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     a3e:	601a      	str	r2, [r3, #0]

	NVIC_DisableIRQ(EIC_IRQn);
	NVIC_ClearPendingIRQ(EIC_IRQn);
	NVIC_EnableIRQ(EIC_IRQn);

	callback = cb;
     a40:	4b03      	ldr	r3, [pc, #12]	; (a50 <_ext_irq_init+0x8c>)
     a42:	6018      	str	r0, [r3, #0]

	return ERR_NONE;
}
     a44:	2000      	movs	r0, #0
     a46:	4770      	bx	lr
     a48:	40001800 	.word	0x40001800
     a4c:	e000e100 	.word	0xe000e100
     a50:	20000a6c 	.word	0x20000a6c

00000a54 <_ext_irq_enable>:
 * \brief Enable / disable external irq
 */
int32_t _ext_irq_enable(const uint32_t pin, const bool enable)
{
	uint8_t extint = INVALID_EXTINT_NUMBER;
	uint8_t i      = 0;
     a54:	2300      	movs	r3, #0

	for (; i < ARRAY_SIZE(_map); i++) {
     a56:	2b00      	cmp	r3, #0
     a58:	d00b      	beq.n	a72 <_ext_irq_enable+0x1e>
	uint8_t extint = INVALID_EXTINT_NUMBER;
     a5a:	22ff      	movs	r2, #255	; 0xff
		if (_map[i].pin == pin) {
			extint = _map[i].extint;
			break;
		}
	}
	if (INVALID_EXTINT_NUMBER == extint) {
     a5c:	2aff      	cmp	r2, #255	; 0xff
     a5e:	d017      	beq.n	a90 <_ext_irq_enable+0x3c>
		return ERR_INVALID_ARG;
	}

	if (enable) {
     a60:	2900      	cmp	r1, #0
     a62:	d10f      	bne.n	a84 <_ext_irq_enable+0x30>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
	} else {
		hri_eic_clear_INTEN_reg(EIC, 1ul << extint);
     a64:	2301      	movs	r3, #1
     a66:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENCLR.reg = mask;
     a68:	4a0b      	ldr	r2, [pc, #44]	; (a98 <_ext_irq_enable+0x44>)
     a6a:	6093      	str	r3, [r2, #8]
	((Eic *)hw)->INTFLAG.reg = mask;
     a6c:	6113      	str	r3, [r2, #16]
		hri_eic_clear_INTFLAG_reg(EIC, 1ul << extint);
	}

	return ERR_NONE;
     a6e:	2000      	movs	r0, #0
}
     a70:	4770      	bx	lr
		if (_map[i].pin == pin) {
     a72:	2828      	cmp	r0, #40	; 0x28
     a74:	d002      	beq.n	a7c <_ext_irq_enable+0x28>
	for (; i < ARRAY_SIZE(_map); i++) {
     a76:	3301      	adds	r3, #1
     a78:	b2db      	uxtb	r3, r3
     a7a:	e7ec      	b.n	a56 <_ext_irq_enable+0x2>
			extint = _map[i].extint;
     a7c:	00da      	lsls	r2, r3, #3
     a7e:	4b07      	ldr	r3, [pc, #28]	; (a9c <_ext_irq_enable+0x48>)
     a80:	5cd2      	ldrb	r2, [r2, r3]
			break;
     a82:	e7eb      	b.n	a5c <_ext_irq_enable+0x8>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
     a84:	2301      	movs	r3, #1
     a86:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENSET.reg = mask;
     a88:	4a03      	ldr	r2, [pc, #12]	; (a98 <_ext_irq_enable+0x44>)
     a8a:	60d3      	str	r3, [r2, #12]
	return ERR_NONE;
     a8c:	2000      	movs	r0, #0
     a8e:	e7ef      	b.n	a70 <_ext_irq_enable+0x1c>
		return ERR_INVALID_ARG;
     a90:	200d      	movs	r0, #13
     a92:	4240      	negs	r0, r0
     a94:	e7ec      	b.n	a70 <_ext_irq_enable+0x1c>
     a96:	46c0      	nop			; (mov r8, r8)
     a98:	40001800 	.word	0x40001800
     a9c:	0000d4a4 	.word	0x0000d4a4

00000aa0 <EIC_Handler>:

/**
 * \brief EIC interrupt handler
 */
void EIC_Handler(void)
{
     aa0:	b570      	push	{r4, r5, r6, lr}
     aa2:	b082      	sub	sp, #8
	return ((Eic *)hw)->INTFLAG.reg;
     aa4:	4b26      	ldr	r3, [pc, #152]	; (b40 <EIC_Handler+0xa0>)
     aa6:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     aa8:	68d9      	ldr	r1, [r3, #12]
	volatile uint32_t flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     aaa:	400a      	ands	r2, r1
     aac:	9201      	str	r2, [sp, #4]
	int8_t            pos;
	uint32_t          pin = INVALID_PIN_NUMBER;

	hri_eic_clear_INTFLAG_reg(EIC, flags);
     aae:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     ab0:	611a      	str	r2, [r3, #16]

	ASSERT(callback);
     ab2:	4b24      	ldr	r3, [pc, #144]	; (b44 <EIC_Handler+0xa4>)
     ab4:	6818      	ldr	r0, [r3, #0]
     ab6:	1e43      	subs	r3, r0, #1
     ab8:	4198      	sbcs	r0, r3
     aba:	b2c0      	uxtb	r0, r0
     abc:	22d2      	movs	r2, #210	; 0xd2
     abe:	4922      	ldr	r1, [pc, #136]	; (b48 <EIC_Handler+0xa8>)
     ac0:	f7ff ff1a 	bl	8f8 <assert>
	uint32_t          pin = INVALID_PIN_NUMBER;
     ac4:	2501      	movs	r5, #1
     ac6:	426d      	negs	r5, r5

	while (flags) {
     ac8:	e02e      	b.n	b28 <EIC_Handler+0x88>
					break;
				}
				if (_map[middle].extint < pos) {
					lower = middle + 1;
				} else {
					upper = middle - 1;
     aca:	3901      	subs	r1, #1
     acc:	b2ce      	uxtb	r6, r1
			while (upper >= lower) {
     ace:	42b0      	cmp	r0, r6
     ad0:	d80e      	bhi.n	af0 <EIC_Handler+0x50>
				middle = (upper + lower) >> 1;
     ad2:	1832      	adds	r2, r6, r0
     ad4:	1052      	asrs	r2, r2, #1
     ad6:	b2d1      	uxtb	r1, r2
				if (_map[middle].extint == pos) {
     ad8:	23ff      	movs	r3, #255	; 0xff
     ada:	4013      	ands	r3, r2
     adc:	00db      	lsls	r3, r3, #3
     ade:	4a1b      	ldr	r2, [pc, #108]	; (b4c <EIC_Handler+0xac>)
     ae0:	5c9b      	ldrb	r3, [r3, r2]
     ae2:	42a3      	cmp	r3, r4
     ae4:	d003      	beq.n	aee <EIC_Handler+0x4e>
				if (_map[middle].extint < pos) {
     ae6:	daf0      	bge.n	aca <EIC_Handler+0x2a>
					lower = middle + 1;
     ae8:	3101      	adds	r1, #1
     aea:	b2c8      	uxtb	r0, r1
     aec:	e7ef      	b.n	ace <EIC_Handler+0x2e>
					pin = _map[middle].pin;
     aee:	2528      	movs	r5, #40	; 0x28
				}
			}

			if (INVALID_PIN_NUMBER != pin) {
     af0:	1c6b      	adds	r3, r5, #1
     af2:	d003      	beq.n	afc <EIC_Handler+0x5c>
				callback(pin);
     af4:	4b13      	ldr	r3, [pc, #76]	; (b44 <EIC_Handler+0xa4>)
     af6:	681b      	ldr	r3, [r3, #0]
     af8:	0028      	movs	r0, r5
     afa:	4798      	blx	r3
			}
			flags &= ~(1ul << pos);
     afc:	2201      	movs	r2, #1
     afe:	40a2      	lsls	r2, r4
     b00:	9b01      	ldr	r3, [sp, #4]
     b02:	4393      	bics	r3, r2
     b04:	9301      	str	r3, [sp, #4]
			pos = ffs(flags) - 1;
     b06:	9801      	ldr	r0, [sp, #4]
     b08:	f002 ff4e 	bl	39a8 <__ffssi2>
     b0c:	3801      	subs	r0, #1
     b0e:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     b10:	1c63      	adds	r3, r4, #1
     b12:	d002      	beq.n	b1a <EIC_Handler+0x7a>
     b14:	2601      	movs	r6, #1
     b16:	2000      	movs	r0, #0
     b18:	e7d9      	b.n	ace <EIC_Handler+0x2e>
	return ((Eic *)hw)->INTFLAG.reg;
     b1a:	4b09      	ldr	r3, [pc, #36]	; (b40 <EIC_Handler+0xa0>)
     b1c:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     b1e:	68d9      	ldr	r1, [r3, #12]
		}
		flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     b20:	400a      	ands	r2, r1
     b22:	9201      	str	r2, [sp, #4]
		hri_eic_clear_INTFLAG_reg(EIC, flags);
     b24:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     b26:	611a      	str	r2, [r3, #16]
	while (flags) {
     b28:	9b01      	ldr	r3, [sp, #4]
     b2a:	2b00      	cmp	r3, #0
     b2c:	d005      	beq.n	b3a <EIC_Handler+0x9a>
		pos = ffs(flags) - 1;
     b2e:	9801      	ldr	r0, [sp, #4]
     b30:	f002 ff3a 	bl	39a8 <__ffssi2>
     b34:	3801      	subs	r0, #1
     b36:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     b38:	e7ea      	b.n	b10 <EIC_Handler+0x70>
	}
}
     b3a:	b002      	add	sp, #8
     b3c:	bd70      	pop	{r4, r5, r6, pc}
     b3e:	46c0      	nop			; (mov r8, r8)
     b40:	40001800 	.word	0x40001800
     b44:	20000a6c 	.word	0x20000a6c
     b48:	0000d48c 	.word	0x0000d48c
     b4c:	0000d4a4 	.word	0x0000d4a4

00000b50 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     b50:	07c3      	lsls	r3, r0, #31
     b52:	d509      	bpl.n	b68 <_gclk_init_generators_by_fref+0x18>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
     b54:	4b11      	ldr	r3, [pc, #68]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b56:	2280      	movs	r2, #128	; 0x80
     b58:	0052      	lsls	r2, r2, #1
     b5a:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     b5c:	4a10      	ldr	r2, [pc, #64]	; (ba0 <_gclk_init_generators_by_fref+0x50>)
     b5e:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     b60:	4b0e      	ldr	r3, [pc, #56]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b62:	785b      	ldrb	r3, [r3, #1]
     b64:	09db      	lsrs	r3, r3, #7
     b66:	d1fb      	bne.n	b60 <_gclk_init_generators_by_fref+0x10>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SRC | GCLK_GENCTRL_ID(0));
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
     b68:	0783      	lsls	r3, r0, #30
     b6a:	d509      	bpl.n	b80 <_gclk_init_generators_by_fref+0x30>
	((Gclk *)hw)->GENDIV.reg = data;
     b6c:	4b0b      	ldr	r3, [pc, #44]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b6e:	2202      	movs	r2, #2
     b70:	32ff      	adds	r2, #255	; 0xff
     b72:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     b74:	4a0b      	ldr	r2, [pc, #44]	; (ba4 <_gclk_init_generators_by_fref+0x54>)
     b76:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     b78:	4b08      	ldr	r3, [pc, #32]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b7a:	785b      	ldrb	r3, [r3, #1]
     b7c:	09db      	lsrs	r3, r3, #7
     b7e:	d1fb      	bne.n	b78 <_gclk_init_generators_by_fref+0x28>
		        | (CONF_GCLK_GENERATOR_2_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_2_SRC | GCLK_GENCTRL_ID(2));
	}
#endif

#if CONF_GCLK_GENERATOR_3_CONFIG == 1
	if (bm & (1ul << 3)) {
     b80:	0703      	lsls	r3, r0, #28
     b82:	d509      	bpl.n	b98 <_gclk_init_generators_by_fref+0x48>
	((Gclk *)hw)->GENDIV.reg = data;
     b84:	4b05      	ldr	r3, [pc, #20]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b86:	2204      	movs	r2, #4
     b88:	32ff      	adds	r2, #255	; 0xff
     b8a:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     b8c:	4a06      	ldr	r2, [pc, #24]	; (ba8 <_gclk_init_generators_by_fref+0x58>)
     b8e:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     b90:	4b02      	ldr	r3, [pc, #8]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b92:	785b      	ldrb	r3, [r3, #1]
     b94:	09db      	lsrs	r3, r3, #7
     b96:	d1fb      	bne.n	b90 <_gclk_init_generators_by_fref+0x40>
		        | (CONF_GCLK_GEN_7_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_7_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_7_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_7_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_7_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_7_SRC | GCLK_GENCTRL_ID(7));
	}
#endif
}
     b98:	4770      	bx	lr
     b9a:	46c0      	nop			; (mov r8, r8)
     b9c:	40000c00 	.word	0x40000c00
     ba0:	00010700 	.word	0x00010700
     ba4:	00010601 	.word	0x00010601
     ba8:	00010303 	.word	0x00010303

00000bac <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
     bac:	4b06      	ldr	r3, [pc, #24]	; (bc8 <_pm_init+0x1c>)
     bae:	7a1a      	ldrb	r2, [r3, #8]
     bb0:	b2d2      	uxtb	r2, r2
     bb2:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
     bb4:	7a5a      	ldrb	r2, [r3, #9]
     bb6:	b2d2      	uxtb	r2, r2
     bb8:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
     bba:	7a9a      	ldrb	r2, [r3, #10]
     bbc:	b2d2      	uxtb	r2, r2
     bbe:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
     bc0:	7ada      	ldrb	r2, [r3, #11]
     bc2:	b2d2      	uxtb	r2, r2
     bc4:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
     bc6:	4770      	bx	lr
     bc8:	40000400 	.word	0x40000400

00000bcc <_rtc_timer_interrupt_handler>:
 * \brief RTC Timer interrupt handler
 *
 * \param[in] p The pointer to calendar device struct
 */
static void _rtc_timer_interrupt_handler(struct _timer_device *dev)
{
     bcc:	b510      	push	{r4, lr}
     bce:	0004      	movs	r4, r0
	return tmp;
}

static inline hri_rtcmode0_intflag_reg_t hri_rtcmode0_read_INTFLAG_reg(const void *const hw)
{
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
     bd0:	68c3      	ldr	r3, [r0, #12]
     bd2:	7a1b      	ldrb	r3, [r3, #8]
	/* Read and mask interrupt flag register */
	uint16_t flag = hri_rtcmode0_read_INTFLAG_reg(dev->hw);

	if (flag & RTC_MODE0_INTFLAG_CMP0) {
     bd4:	07db      	lsls	r3, r3, #31
     bd6:	d506      	bpl.n	be6 <_rtc_timer_interrupt_handler+0x1a>
		if (dev->timer_cb.period_expired) {
     bd8:	6803      	ldr	r3, [r0, #0]
     bda:	2b00      	cmp	r3, #0
     bdc:	d000      	beq.n	be0 <_rtc_timer_interrupt_handler+0x14>
			dev->timer_cb.period_expired(dev);
     bde:	4798      	blx	r3
		}

		/* Clear interrupt flag */
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
     be0:	68e3      	ldr	r3, [r4, #12]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
     be2:	2201      	movs	r2, #1
     be4:	721a      	strb	r2, [r3, #8]
	}
}
     be6:	bd10      	pop	{r4, pc}

00000be8 <_timer_init>:
{
     be8:	b570      	push	{r4, r5, r6, lr}
     bea:	0004      	movs	r4, r0
     bec:	000d      	movs	r5, r1
	ASSERT(dev);
     bee:	1e43      	subs	r3, r0, #1
     bf0:	4198      	sbcs	r0, r3
     bf2:	b2c0      	uxtb	r0, r0
     bf4:	2230      	movs	r2, #48	; 0x30
     bf6:	4910      	ldr	r1, [pc, #64]	; (c38 <_timer_init+0x50>)
     bf8:	f7ff fe7e 	bl	8f8 <assert>
	dev->hw = hw;
     bfc:	60e5      	str	r5, [r4, #12]
}

static inline void hri_rtcmode0_write_CTRL_reg(const void *const hw, hri_rtcmode0_ctrl_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     bfe:	2301      	movs	r3, #1
     c00:	802b      	strh	r3, [r5, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c02:	7aab      	ldrb	r3, [r5, #10]
     c04:	09db      	lsrs	r3, r3, #7
     c06:	d1fc      	bne.n	c02 <_timer_init+0x1a>
	hri_rtcmode0_wait_for_sync(dev->hw);
     c08:	68e2      	ldr	r2, [r4, #12]
     c0a:	7a93      	ldrb	r3, [r2, #10]
     c0c:	09db      	lsrs	r3, r3, #7
     c0e:	d1fc      	bne.n	c0a <_timer_init+0x22>
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     c10:	3380      	adds	r3, #128	; 0x80
     c12:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c14:	7a93      	ldrb	r3, [r2, #10]
     c16:	09db      	lsrs	r3, r3, #7
     c18:	d1fc      	bne.n	c14 <_timer_init+0x2c>
	hri_rtcmode0_write_COMP_COMP_bf(dev->hw, 0, CONF_RTC_COMP_VAL);
     c1a:	68e2      	ldr	r2, [r4, #12]

static inline void hri_rtcmode0_write_COMP_COMP_bf(const void *const hw, uint8_t index, hri_rtcmode0_comp_reg_t data)
{
	uint32_t tmp;
	RTC_CRITICAL_SECTION_ENTER();
	tmp = ((Rtc *)hw)->MODE0.COMP[index].reg;
     c1c:	6993      	ldr	r3, [r2, #24]
	tmp &= ~RTC_MODE0_COMP_COMP_Msk;
	tmp |= RTC_MODE0_COMP_COMP(data);
	((Rtc *)hw)->MODE0.COMP[index].reg = tmp;
     c1e:	2301      	movs	r3, #1
     c20:	6193      	str	r3, [r2, #24]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c22:	7a93      	ldrb	r3, [r2, #10]
     c24:	09db      	lsrs	r3, r3, #7
     c26:	d1fc      	bne.n	c22 <_timer_init+0x3a>
	((Rtc *)hw)->MODE0.INTENSET.reg = RTC_MODE0_INTENSET_CMP0;
     c28:	3301      	adds	r3, #1
     c2a:	68e2      	ldr	r2, [r4, #12]
     c2c:	71d3      	strb	r3, [r2, #7]
	_rtc_dev = dev;
     c2e:	4b03      	ldr	r3, [pc, #12]	; (c3c <_timer_init+0x54>)
     c30:	601c      	str	r4, [r3, #0]
}
     c32:	2000      	movs	r0, #0
     c34:	bd70      	pop	{r4, r5, r6, pc}
     c36:	46c0      	nop			; (mov r8, r8)
     c38:	0000d4ac 	.word	0x0000d4ac
     c3c:	20000a70 	.word	0x20000a70

00000c40 <_timer_start>:
{
     c40:	b510      	push	{r4, lr}
     c42:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->hw);
     c44:	d020      	beq.n	c88 <_timer_start+0x48>
     c46:	68c3      	ldr	r3, [r0, #12]
     c48:	2b00      	cmp	r3, #0
     c4a:	d01b      	beq.n	c84 <_timer_start+0x44>
     c4c:	2001      	movs	r0, #1
     c4e:	2267      	movs	r2, #103	; 0x67
     c50:	490e      	ldr	r1, [pc, #56]	; (c8c <_timer_start+0x4c>)
     c52:	f7ff fe51 	bl	8f8 <assert>
     c56:	2208      	movs	r2, #8
     c58:	4b0d      	ldr	r3, [pc, #52]	; (c90 <_timer_start+0x50>)
     c5a:	601a      	str	r2, [r3, #0]
	hri_rtcmode0_write_COUNT_COUNT_bf(dev->hw, 0);
     c5c:	68e2      	ldr	r2, [r4, #12]
	tmp = ((Rtc *)hw)->MODE0.COUNT.reg;
     c5e:	6913      	ldr	r3, [r2, #16]
	((Rtc *)hw)->MODE0.COUNT.reg = tmp;
     c60:	2300      	movs	r3, #0
     c62:	6113      	str	r3, [r2, #16]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c64:	7a93      	ldrb	r3, [r2, #10]
     c66:	09db      	lsrs	r3, r3, #7
     c68:	d1fc      	bne.n	c64 <_timer_start+0x24>
	hri_rtcmode0_wait_for_sync(dev->hw);
     c6a:	68e2      	ldr	r2, [r4, #12]
     c6c:	7a93      	ldrb	r3, [r2, #10]
     c6e:	09db      	lsrs	r3, r3, #7
     c70:	d1fc      	bne.n	c6c <_timer_start+0x2c>
	((Rtc *)hw)->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
     c72:	8813      	ldrh	r3, [r2, #0]
     c74:	2102      	movs	r1, #2
     c76:	430b      	orrs	r3, r1
     c78:	b29b      	uxth	r3, r3
     c7a:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c7c:	7a93      	ldrb	r3, [r2, #10]
     c7e:	09db      	lsrs	r3, r3, #7
     c80:	d1fc      	bne.n	c7c <_timer_start+0x3c>
}
     c82:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->hw);
     c84:	2000      	movs	r0, #0
     c86:	e7e2      	b.n	c4e <_timer_start+0xe>
     c88:	2000      	movs	r0, #0
     c8a:	e7e0      	b.n	c4e <_timer_start+0xe>
     c8c:	0000d4ac 	.word	0x0000d4ac
     c90:	e000e100 	.word	0xe000e100

00000c94 <_timer_is_started>:
	return hri_rtcmode0_get_CTRL_ENABLE_bit(dev->hw);
     c94:	68c2      	ldr	r2, [r0, #12]
     c96:	7a93      	ldrb	r3, [r2, #10]
     c98:	09db      	lsrs	r3, r3, #7
     c9a:	d1fc      	bne.n	c96 <_timer_is_started+0x2>
	tmp = ((Rtc *)hw)->MODE0.CTRL.reg;
     c9c:	8813      	ldrh	r3, [r2, #0]
	tmp = (tmp & RTC_MODE0_CTRL_ENABLE) >> RTC_MODE0_CTRL_ENABLE_Pos;
     c9e:	085b      	lsrs	r3, r3, #1
	return (bool)tmp;
     ca0:	2001      	movs	r0, #1
     ca2:	4018      	ands	r0, r3
}
     ca4:	4770      	bx	lr

00000ca6 <_timer_set_irq>:
}
     ca6:	4770      	bx	lr

00000ca8 <_rtc_get_timer>:
 * \brief Retrieve timer helper functions
 */
struct _timer_hpl_interface *_rtc_get_timer(void)
{
	return NULL;
}
     ca8:	2000      	movs	r0, #0
     caa:	4770      	bx	lr

00000cac <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
     cac:	b510      	push	{r4, lr}
	_rtc_timer_interrupt_handler(_rtc_dev);
     cae:	4b02      	ldr	r3, [pc, #8]	; (cb8 <RTC_Handler+0xc>)
     cb0:	6818      	ldr	r0, [r3, #0]
     cb2:	f7ff ff8b 	bl	bcc <_rtc_timer_interrupt_handler>
}
     cb6:	bd10      	pop	{r4, pc}
     cb8:	20000a70 	.word	0x20000a70

00000cbc <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
     cbc:	4b02      	ldr	r3, [pc, #8]	; (cc8 <_sercom_get_hardware_index+0xc>)
     cbe:	469c      	mov	ip, r3
     cc0:	4460      	add	r0, ip
     cc2:	0a80      	lsrs	r0, r0, #10
     cc4:	b2c0      	uxtb	r0, r0
}
     cc6:	4770      	bx	lr
     cc8:	bdfff800 	.word	0xbdfff800

00000ccc <_spi_sync_enable>:
		;
}

static inline bool hri_sercomspi_is_syncing(const void *const hw)
{
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
     ccc:	8a03      	ldrh	r3, [r0, #16]
     cce:	0bdb      	lsrs	r3, r3, #15
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw)) {
     cd0:	d108      	bne.n	ce4 <_spi_sync_enable+0x18>
}

static inline void hri_sercomspi_set_CTRLA_ENABLE_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
     cd2:	6803      	ldr	r3, [r0, #0]
     cd4:	2202      	movs	r2, #2
     cd6:	4313      	orrs	r3, r2
     cd8:	6003      	str	r3, [r0, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     cda:	8a03      	ldrh	r3, [r0, #16]
     cdc:	0bdb      	lsrs	r3, r3, #15
     cde:	d1fc      	bne.n	cda <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
     ce0:	2000      	movs	r0, #0
}
     ce2:	4770      	bx	lr
		return ERR_BUSY;
     ce4:	2004      	movs	r0, #4
     ce6:	4240      	negs	r0, r0
     ce8:	e7fb      	b.n	ce2 <_spi_sync_enable+0x16>
	...

00000cec <_get_sercom_index>:
{
     cec:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     cee:	f7ff ffe5 	bl	cbc <_sercom_get_hardware_index>
     cf2:	0003      	movs	r3, r0
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     cf4:	2000      	movs	r0, #0
     cf6:	2800      	cmp	r0, #0
     cf8:	d006      	beq.n	d08 <_get_sercom_index+0x1c>
	ASSERT(false);
     cfa:	4a07      	ldr	r2, [pc, #28]	; (d18 <_get_sercom_index+0x2c>)
     cfc:	4907      	ldr	r1, [pc, #28]	; (d1c <_get_sercom_index+0x30>)
     cfe:	2000      	movs	r0, #0
     d00:	f7ff fdfa 	bl	8f8 <assert>
	return 0;
     d04:	2000      	movs	r0, #0
}
     d06:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
     d08:	0102      	lsls	r2, r0, #4
     d0a:	4905      	ldr	r1, [pc, #20]	; (d20 <_get_sercom_index+0x34>)
     d0c:	5c52      	ldrb	r2, [r2, r1]
     d0e:	4293      	cmp	r3, r2
     d10:	d0f9      	beq.n	d06 <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     d12:	3001      	adds	r0, #1
     d14:	b2c0      	uxtb	r0, r0
     d16:	e7ee      	b.n	cf6 <_get_sercom_index+0xa>
     d18:	0000022a 	.word	0x0000022a
     d1c:	0000d4c4 	.word	0x0000d4c4
     d20:	0000d4f8 	.word	0x0000d4f8

00000d24 <_usart_init>:
{
     d24:	b510      	push	{r4, lr}
     d26:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
     d28:	f7ff ffe0 	bl	cec <_get_sercom_index>
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d2c:	8a23      	ldrh	r3, [r4, #16]
     d2e:	0bdb      	lsrs	r3, r3, #15
     d30:	d1fc      	bne.n	d2c <_usart_init+0x8>
     d32:	8a23      	ldrh	r3, [r4, #16]
     d34:	0bdb      	lsrs	r3, r3, #15
     d36:	d1fc      	bne.n	d32 <_usart_init+0xe>
static inline hri_sercomusart_ctrla_reg_t hri_sercomusart_get_CTRLA_reg(const void *const           hw,
                                                                        hri_sercomusart_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomusart_wait_for_sync(hw);
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
     d38:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
     d3a:	079b      	lsls	r3, r3, #30
     d3c:	d507      	bpl.n	d4e <_usart_init+0x2a>
}

static inline void hri_sercomusart_write_CTRLA_reg(const void *const hw, hri_sercomusart_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLA.reg = data;
     d3e:	2300      	movs	r3, #0
     d40:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d42:	8a23      	ldrh	r3, [r4, #16]
     d44:	0bdb      	lsrs	r3, r3, #15
     d46:	d1fc      	bne.n	d42 <_usart_init+0x1e>
     d48:	8a23      	ldrh	r3, [r4, #16]
     d4a:	0bdb      	lsrs	r3, r3, #15
     d4c:	d1fc      	bne.n	d48 <_usart_init+0x24>
	((Sercom *)hw)->USART.CTRLA.reg = data;
     d4e:	2301      	movs	r3, #1
     d50:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d52:	8a23      	ldrh	r3, [r4, #16]
     d54:	0bdb      	lsrs	r3, r3, #15
     d56:	d1fc      	bne.n	d52 <_usart_init+0x2e>
     d58:	8a23      	ldrh	r3, [r4, #16]
     d5a:	0bdb      	lsrs	r3, r3, #15
     d5c:	d1fc      	bne.n	d58 <_usart_init+0x34>
	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
     d5e:	0102      	lsls	r2, r0, #4
     d60:	4b0b      	ldr	r3, [pc, #44]	; (d90 <_usart_init+0x6c>)
     d62:	189b      	adds	r3, r3, r2
     d64:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
     d66:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d68:	8a23      	ldrh	r3, [r4, #16]
     d6a:	0bdb      	lsrs	r3, r3, #15
     d6c:	d1fc      	bne.n	d68 <_usart_init+0x44>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
     d6e:	0102      	lsls	r2, r0, #4
     d70:	4b07      	ldr	r3, [pc, #28]	; (d90 <_usart_init+0x6c>)
     d72:	189b      	adds	r3, r3, r2
     d74:	689b      	ldr	r3, [r3, #8]
}

static inline void hri_sercomusart_write_CTRLB_reg(const void *const hw, hri_sercomusart_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLB.reg = data;
     d76:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d78:	8a23      	ldrh	r3, [r4, #16]
     d7a:	0bdb      	lsrs	r3, r3, #15
     d7c:	d1fc      	bne.n	d78 <_usart_init+0x54>
	hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
     d7e:	0100      	lsls	r0, r0, #4
     d80:	4b03      	ldr	r3, [pc, #12]	; (d90 <_usart_init+0x6c>)
     d82:	1818      	adds	r0, r3, r0
     d84:	8983      	ldrh	r3, [r0, #12]
}

static inline void hri_sercomusart_write_BAUD_reg(const void *const hw, hri_sercomusart_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.BAUD.reg = data;
     d86:	8163      	strh	r3, [r4, #10]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
     d88:	7b83      	ldrb	r3, [r0, #14]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
     d8a:	7223      	strb	r3, [r4, #8]
}
     d8c:	2000      	movs	r0, #0
     d8e:	bd10      	pop	{r4, pc}
     d90:	0000d4f8 	.word	0x0000d4f8

00000d94 <_get_i2cm_index>:
{
     d94:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     d96:	f7ff ff91 	bl	cbc <_sercom_get_hardware_index>
     d9a:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     d9c:	2000      	movs	r0, #0
     d9e:	2800      	cmp	r0, #0
     da0:	d006      	beq.n	db0 <_get_i2cm_index+0x1c>
	ASSERT(false);
     da2:	4a08      	ldr	r2, [pc, #32]	; (dc4 <_get_i2cm_index+0x30>)
     da4:	4908      	ldr	r1, [pc, #32]	; (dc8 <_get_i2cm_index+0x34>)
     da6:	2000      	movs	r0, #0
     da8:	f7ff fda6 	bl	8f8 <assert>
	return 0;
     dac:	2000      	movs	r0, #0
}
     dae:	bd10      	pop	{r4, pc}
		if (_i2cms[i].number == sercom_offset) {
     db0:	0043      	lsls	r3, r0, #1
     db2:	181b      	adds	r3, r3, r0
     db4:	00d9      	lsls	r1, r3, #3
     db6:	4b05      	ldr	r3, [pc, #20]	; (dcc <_get_i2cm_index+0x38>)
     db8:	5ccb      	ldrb	r3, [r1, r3]
     dba:	429a      	cmp	r2, r3
     dbc:	d0f7      	beq.n	dae <_get_i2cm_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     dbe:	3001      	adds	r0, #1
     dc0:	b2c0      	uxtb	r0, r0
     dc2:	e7ec      	b.n	d9e <_get_i2cm_index+0xa>
     dc4:	00000366 	.word	0x00000366
     dc8:	0000d4c4 	.word	0x0000d4c4
     dcc:	0000d4e0 	.word	0x0000d4e0

00000dd0 <_sercom_i2c_sync_send_address>:
{
     dd0:	b570      	push	{r4, r5, r6, lr}
     dd2:	0005      	movs	r5, r0
	void *             hw  = i2c_dev->hw;
     dd4:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
     dd6:	1e43      	subs	r3, r0, #1
     dd8:	4198      	sbcs	r0, r3
     dda:	b2c0      	uxtb	r0, r0
     ddc:	4a5c      	ldr	r2, [pc, #368]	; (f50 <_sercom_i2c_sync_send_address+0x180>)
     dde:	495d      	ldr	r1, [pc, #372]	; (f54 <_sercom_i2c_sync_send_address+0x184>)
     de0:	f7ff fd8a 	bl	8f8 <assert>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     de4:	6863      	ldr	r3, [r4, #4]
     de6:	4a5c      	ldr	r2, [pc, #368]	; (f58 <_sercom_i2c_sync_send_address+0x188>)
     de8:	4013      	ands	r3, r2
     dea:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     dec:	8a23      	ldrh	r3, [r4, #16]
     dee:	0bdb      	lsrs	r3, r3, #15
     df0:	d1fc      	bne.n	dec <_sercom_i2c_sync_send_address+0x1c>
	hri_sercomi2cm_write_ADDR_reg(hw, ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0));
     df2:	882a      	ldrh	r2, [r5, #0]
     df4:	0052      	lsls	r2, r2, #1
     df6:	886b      	ldrh	r3, [r5, #2]
     df8:	2101      	movs	r1, #1
     dfa:	400b      	ands	r3, r1
     dfc:	4313      	orrs	r3, r2
     dfe:	b2db      	uxtb	r3, r3
}

static inline void hri_sercomi2cm_write_ADDR_reg(const void *const hw, hri_sercomi2cm_addr_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.ADDR.reg = data;
     e00:	7523      	strb	r3, [r4, #20]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e02:	8a23      	ldrh	r3, [r4, #16]
     e04:	0bdb      	lsrs	r3, r3, #15
     e06:	d1fc      	bne.n	e02 <_sercom_i2c_sync_send_address+0x32>
	void *   hw      = i2c_dev->hw;
     e08:	692e      	ldr	r6, [r5, #16]
	uint32_t timeout = 65535;
     e0a:	4a54      	ldr	r2, [pc, #336]	; (f5c <_sercom_i2c_sync_send_address+0x18c>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
     e0c:	7bb3      	ldrb	r3, [r6, #14]
     e0e:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
     e10:	0018      	movs	r0, r3
		if (timeout-- == 0) {
     e12:	1e51      	subs	r1, r2, #1
     e14:	2a00      	cmp	r2, #0
     e16:	d002      	beq.n	e1e <_sercom_i2c_sync_send_address+0x4e>
     e18:	000a      	movs	r2, r1
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
     e1a:	079b      	lsls	r3, r3, #30
     e1c:	d0f6      	beq.n	e0c <_sercom_i2c_sync_send_address+0x3c>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e1e:	8a23      	ldrh	r3, [r4, #16]
     e20:	0bdb      	lsrs	r3, r3, #15
     e22:	d1fc      	bne.n	e1e <_sercom_i2c_sync_send_address+0x4e>
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_reg(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw);
	return ((Sercom *)hw)->I2CM.STATUS.reg;
     e24:	8a23      	ldrh	r3, [r4, #16]
     e26:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
     e28:	07c2      	lsls	r2, r0, #31
     e2a:	d550      	bpl.n	ece <_sercom_i2c_sync_send_address+0xfe>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
     e2c:	079a      	lsls	r2, r3, #30
     e2e:	d510      	bpl.n	e52 <_sercom_i2c_sync_send_address+0x82>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
     e30:	2201      	movs	r2, #1
     e32:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
     e34:	886a      	ldrh	r2, [r5, #2]
     e36:	2180      	movs	r1, #128	; 0x80
     e38:	0149      	lsls	r1, r1, #5
     e3a:	430a      	orrs	r2, r1
     e3c:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
     e3e:	886a      	ldrh	r2, [r5, #2]
     e40:	4947      	ldr	r1, [pc, #284]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     e42:	400a      	ands	r2, r1
     e44:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
     e46:	07db      	lsls	r3, r3, #31
     e48:	d400      	bmi.n	e4c <_sercom_i2c_sync_send_address+0x7c>
     e4a:	e07c      	b.n	f46 <_sercom_i2c_sync_send_address+0x176>
				return I2C_ERR_BUS;
     e4c:	2005      	movs	r0, #5
     e4e:	4240      	negs	r0, r0
     e50:	e063      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
     e52:	075b      	lsls	r3, r3, #29
     e54:	d40b      	bmi.n	e6e <_sercom_i2c_sync_send_address+0x9e>
			if (msg->len == 0) {
     e56:	6868      	ldr	r0, [r5, #4]
     e58:	2800      	cmp	r0, #0
     e5a:	d12d      	bne.n	eb8 <_sercom_i2c_sync_send_address+0xe8>
				if (msg->flags & I2C_M_STOP) {
     e5c:	886b      	ldrh	r3, [r5, #2]
     e5e:	b21b      	sxth	r3, r3
     e60:	2b00      	cmp	r3, #0
     e62:	db20      	blt.n	ea6 <_sercom_i2c_sync_send_address+0xd6>
				msg->flags &= ~I2C_M_BUSY;
     e64:	886b      	ldrh	r3, [r5, #2]
     e66:	4a3e      	ldr	r2, [pc, #248]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     e68:	4013      	ands	r3, r2
     e6a:	806b      	strh	r3, [r5, #2]
     e6c:	e055      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
				if (msg->len > 0) {
     e6e:	686b      	ldr	r3, [r5, #4]
     e70:	2b00      	cmp	r3, #0
     e72:	dd04      	ble.n	e7e <_sercom_i2c_sync_send_address+0xae>
					msg->flags |= I2C_M_FAIL;
     e74:	886b      	ldrh	r3, [r5, #2]
     e76:	2280      	movs	r2, #128	; 0x80
     e78:	0152      	lsls	r2, r2, #5
     e7a:	4313      	orrs	r3, r2
     e7c:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
     e7e:	886b      	ldrh	r3, [r5, #2]
     e80:	b21b      	sxth	r3, r3
     e82:	2b00      	cmp	r3, #0
     e84:	db06      	blt.n	e94 <_sercom_i2c_sync_send_address+0xc4>
				msg->flags &= ~I2C_M_BUSY;
     e86:	886b      	ldrh	r3, [r5, #2]
     e88:	4a35      	ldr	r2, [pc, #212]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     e8a:	4013      	ands	r3, r2
     e8c:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
     e8e:	2002      	movs	r0, #2
     e90:	4240      	negs	r0, r0
     e92:	e042      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     e94:	6862      	ldr	r2, [r4, #4]
     e96:	23c0      	movs	r3, #192	; 0xc0
     e98:	029b      	lsls	r3, r3, #10
     e9a:	4313      	orrs	r3, r2
     e9c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e9e:	8a23      	ldrh	r3, [r4, #16]
     ea0:	0bdb      	lsrs	r3, r3, #15
     ea2:	d1fc      	bne.n	e9e <_sercom_i2c_sync_send_address+0xce>
     ea4:	e7ef      	b.n	e86 <_sercom_i2c_sync_send_address+0xb6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     ea6:	6862      	ldr	r2, [r4, #4]
     ea8:	23c0      	movs	r3, #192	; 0xc0
     eaa:	029b      	lsls	r3, r3, #10
     eac:	4313      	orrs	r3, r2
     eae:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     eb0:	8a23      	ldrh	r3, [r4, #16]
     eb2:	0bdb      	lsrs	r3, r3, #15
     eb4:	d1fc      	bne.n	eb0 <_sercom_i2c_sync_send_address+0xe0>
     eb6:	e7d5      	b.n	e64 <_sercom_i2c_sync_send_address+0x94>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
     eb8:	68ab      	ldr	r3, [r5, #8]
     eba:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
     ebc:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
     ebe:	68ab      	ldr	r3, [r5, #8]
     ec0:	3301      	adds	r3, #1
     ec2:	60ab      	str	r3, [r5, #8]
				msg->len--;
     ec4:	686b      	ldr	r3, [r5, #4]
     ec6:	3b01      	subs	r3, #1
     ec8:	606b      	str	r3, [r5, #4]
			return I2C_OK;
     eca:	2000      	movs	r0, #0
     ecc:	e025      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
	} else if (flags & SB_FLAG) {
     ece:	0782      	lsls	r2, r0, #30
     ed0:	d53c      	bpl.n	f4c <_sercom_i2c_sync_send_address+0x17c>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
     ed2:	686a      	ldr	r2, [r5, #4]
     ed4:	2a00      	cmp	r2, #0
     ed6:	d031      	beq.n	f3c <_sercom_i2c_sync_send_address+0x16c>
     ed8:	075b      	lsls	r3, r3, #29
     eda:	d42f      	bmi.n	f3c <_sercom_i2c_sync_send_address+0x16c>
			msg->len--;
     edc:	3a01      	subs	r2, #1
     ede:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
     ee0:	2a00      	cmp	r2, #0
     ee2:	d107      	bne.n	ef4 <_sercom_i2c_sync_send_address+0x124>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     ee4:	6862      	ldr	r2, [r4, #4]
     ee6:	2380      	movs	r3, #128	; 0x80
     ee8:	02db      	lsls	r3, r3, #11
     eea:	4313      	orrs	r3, r2
     eec:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     eee:	8a23      	ldrh	r3, [r4, #16]
     ef0:	0bdb      	lsrs	r3, r3, #15
     ef2:	d1fc      	bne.n	eee <_sercom_i2c_sync_send_address+0x11e>
			if (msg->len == 0) {
     ef4:	686b      	ldr	r3, [r5, #4]
     ef6:	2b00      	cmp	r3, #0
     ef8:	d107      	bne.n	f0a <_sercom_i2c_sync_send_address+0x13a>
				if (msg->flags & I2C_M_STOP) {
     efa:	886b      	ldrh	r3, [r5, #2]
     efc:	b21b      	sxth	r3, r3
     efe:	2b00      	cmp	r3, #0
     f00:	db0c      	blt.n	f1c <_sercom_i2c_sync_send_address+0x14c>
				msg->flags &= ~I2C_M_BUSY;
     f02:	886b      	ldrh	r3, [r5, #2]
     f04:	4a16      	ldr	r2, [pc, #88]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     f06:	4013      	ands	r3, r2
     f08:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
     f0a:	68ab      	ldr	r3, [r5, #8]
     f0c:	1c5a      	adds	r2, r3, #1
     f0e:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
     f10:	7e22      	ldrb	r2, [r4, #24]
     f12:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     f14:	2302      	movs	r3, #2
     f16:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
     f18:	2000      	movs	r0, #0
}
     f1a:	bd70      	pop	{r4, r5, r6, pc}
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
     f1c:	6863      	ldr	r3, [r4, #4]
     f1e:	4a10      	ldr	r2, [pc, #64]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     f20:	4013      	ands	r3, r2
     f22:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     f24:	8a23      	ldrh	r3, [r4, #16]
     f26:	0bdb      	lsrs	r3, r3, #15
     f28:	d1fc      	bne.n	f24 <_sercom_i2c_sync_send_address+0x154>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     f2a:	6862      	ldr	r2, [r4, #4]
     f2c:	23c0      	movs	r3, #192	; 0xc0
     f2e:	029b      	lsls	r3, r3, #10
     f30:	4313      	orrs	r3, r2
     f32:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     f34:	8a23      	ldrh	r3, [r4, #16]
     f36:	0bdb      	lsrs	r3, r3, #15
     f38:	d1fc      	bne.n	f34 <_sercom_i2c_sync_send_address+0x164>
     f3a:	e7e2      	b.n	f02 <_sercom_i2c_sync_send_address+0x132>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     f3c:	2302      	movs	r3, #2
     f3e:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
     f40:	2002      	movs	r0, #2
     f42:	4240      	negs	r0, r0
     f44:	e7e9      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
			return I2C_ERR_BAD_ADDRESS;
     f46:	2004      	movs	r0, #4
     f48:	4240      	negs	r0, r0
     f4a:	e7e6      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
	return I2C_OK;
     f4c:	2000      	movs	r0, #0
	return _sercom_i2c_sync_analyse_flags(hw, flags, msg);
     f4e:	e7e4      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
     f50:	00000581 	.word	0x00000581
     f54:	0000d4c4 	.word	0x0000d4c4
     f58:	fffbffff 	.word	0xfffbffff
     f5c:	0000ffff 	.word	0x0000ffff
     f60:	fffffeff 	.word	0xfffffeff

00000f64 <_usart_sync_init>:
{
     f64:	b570      	push	{r4, r5, r6, lr}
     f66:	0005      	movs	r5, r0
     f68:	000c      	movs	r4, r1
	ASSERT(device);
     f6a:	1e43      	subs	r3, r0, #1
     f6c:	4198      	sbcs	r0, r3
     f6e:	b2c0      	uxtb	r0, r0
     f70:	22a1      	movs	r2, #161	; 0xa1
     f72:	4904      	ldr	r1, [pc, #16]	; (f84 <_usart_sync_init+0x20>)
     f74:	f7ff fcc0 	bl	8f8 <assert>
	device->hw = hw;
     f78:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
     f7a:	0020      	movs	r0, r4
     f7c:	f7ff fed2 	bl	d24 <_usart_init>
}
     f80:	bd70      	pop	{r4, r5, r6, pc}
     f82:	46c0      	nop			; (mov r8, r8)
     f84:	0000d4c4 	.word	0x0000d4c4

00000f88 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
     f88:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
     f8a:	6813      	ldr	r3, [r2, #0]
     f8c:	2102      	movs	r1, #2
     f8e:	430b      	orrs	r3, r1
     f90:	6013      	str	r3, [r2, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     f92:	8a13      	ldrh	r3, [r2, #16]
     f94:	0bdb      	lsrs	r3, r3, #15
     f96:	d1fc      	bne.n	f92 <_usart_sync_enable+0xa>
}
     f98:	4770      	bx	lr

00000f9a <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
     f9a:	6803      	ldr	r3, [r0, #0]
     f9c:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
     f9e:	8319      	strh	r1, [r3, #24]
}
     fa0:	4770      	bx	lr

00000fa2 <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
     fa2:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
     fa4:	8b18      	ldrh	r0, [r3, #24]
     fa6:	b2c0      	uxtb	r0, r0
}
     fa8:	4770      	bx	lr

00000faa <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
     faa:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
     fac:	7b98      	ldrb	r0, [r3, #14]
     fae:	2301      	movs	r3, #1
     fb0:	4018      	ands	r0, r3
}
     fb2:	4770      	bx	lr

00000fb4 <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
     fb4:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
     fb6:	7b9b      	ldrb	r3, [r3, #14]
     fb8:	085b      	lsrs	r3, r3, #1
     fba:	2001      	movs	r0, #1
     fbc:	4018      	ands	r0, r3
}
     fbe:	4770      	bx	lr

00000fc0 <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
     fc0:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
     fc2:	7b9b      	ldrb	r3, [r3, #14]
     fc4:	089b      	lsrs	r3, r3, #2
     fc6:	2001      	movs	r0, #1
     fc8:	4018      	ands	r0, r3
}
     fca:	4770      	bx	lr

00000fcc <_i2c_m_sync_init>:
{
     fcc:	b570      	push	{r4, r5, r6, lr}
     fce:	0006      	movs	r6, r0
     fd0:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
     fd2:	0008      	movs	r0, r1
     fd4:	f7ff fede 	bl	d94 <_get_i2cm_index>
     fd8:	0005      	movs	r5, r0
	ASSERT(i2c_dev);
     fda:	0030      	movs	r0, r6
     fdc:	1e43      	subs	r3, r0, #1
     fde:	4198      	sbcs	r0, r3
     fe0:	b2c0      	uxtb	r0, r0
     fe2:	4a20      	ldr	r2, [pc, #128]	; (1064 <_i2c_m_sync_init+0x98>)
     fe4:	4920      	ldr	r1, [pc, #128]	; (1068 <_i2c_m_sync_init+0x9c>)
     fe6:	f7ff fc87 	bl	8f8 <assert>
	i2c_dev->hw = hw;
     fea:	6134      	str	r4, [r6, #16]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     fec:	8a23      	ldrh	r3, [r4, #16]
     fee:	0bdb      	lsrs	r3, r3, #15
     ff0:	d1fc      	bne.n	fec <_i2c_m_sync_init+0x20>
     ff2:	8a23      	ldrh	r3, [r4, #16]
     ff4:	0bdb      	lsrs	r3, r3, #15
     ff6:	d1fc      	bne.n	ff2 <_i2c_m_sync_init+0x26>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
     ff8:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
     ffa:	079b      	lsls	r3, r3, #30
     ffc:	d507      	bpl.n	100e <_i2c_m_sync_init+0x42>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
     ffe:	2300      	movs	r3, #0
    1000:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1002:	8a23      	ldrh	r3, [r4, #16]
    1004:	0bdb      	lsrs	r3, r3, #15
    1006:	d1fc      	bne.n	1002 <_i2c_m_sync_init+0x36>
    1008:	8a23      	ldrh	r3, [r4, #16]
    100a:	0bdb      	lsrs	r3, r3, #15
    100c:	d1fc      	bne.n	1008 <_i2c_m_sync_init+0x3c>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    100e:	2301      	movs	r3, #1
    1010:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1012:	8a23      	ldrh	r3, [r4, #16]
    1014:	0bdb      	lsrs	r3, r3, #15
    1016:	d1fc      	bne.n	1012 <_i2c_m_sync_init+0x46>
    1018:	8a23      	ldrh	r3, [r4, #16]
    101a:	0bdb      	lsrs	r3, r3, #15
    101c:	d1fc      	bne.n	1018 <_i2c_m_sync_init+0x4c>
	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a & ~SERCOM_I2CM_CTRLA_ENABLE);
    101e:	006b      	lsls	r3, r5, #1
    1020:	195b      	adds	r3, r3, r5
    1022:	00da      	lsls	r2, r3, #3
    1024:	4b11      	ldr	r3, [pc, #68]	; (106c <_i2c_m_sync_init+0xa0>)
    1026:	189b      	adds	r3, r3, r2
    1028:	685b      	ldr	r3, [r3, #4]
    102a:	2202      	movs	r2, #2
    102c:	4393      	bics	r3, r2
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    102e:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1030:	8a23      	ldrh	r3, [r4, #16]
    1032:	0bdb      	lsrs	r3, r3, #15
    1034:	d1fc      	bne.n	1030 <_i2c_m_sync_init+0x64>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
    1036:	006b      	lsls	r3, r5, #1
    1038:	195b      	adds	r3, r3, r5
    103a:	00da      	lsls	r2, r3, #3
    103c:	4b0b      	ldr	r3, [pc, #44]	; (106c <_i2c_m_sync_init+0xa0>)
    103e:	189b      	adds	r3, r3, r2
    1040:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
    1042:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1044:	8a23      	ldrh	r3, [r4, #16]
    1046:	0bdb      	lsrs	r3, r3, #15
    1048:	d1fc      	bne.n	1044 <_i2c_m_sync_init+0x78>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
    104a:	4a08      	ldr	r2, [pc, #32]	; (106c <_i2c_m_sync_init+0xa0>)
    104c:	006b      	lsls	r3, r5, #1
    104e:	1958      	adds	r0, r3, r5
    1050:	00c1      	lsls	r1, r0, #3
    1052:	0008      	movs	r0, r1
    1054:	1851      	adds	r1, r2, r1
    1056:	8989      	ldrh	r1, [r1, #12]
	((Sercom *)hw)->I2CM.BAUD.reg = data;
    1058:	8161      	strh	r1, [r4, #10]
	i2c_dev->service.trise = _i2cms[i].trise;
    105a:	1812      	adds	r2, r2, r0
    105c:	8a13      	ldrh	r3, [r2, #16]
    105e:	81f3      	strh	r3, [r6, #14]
}
    1060:	2000      	movs	r0, #0
    1062:	bd70      	pop	{r4, r5, r6, pc}
    1064:	000004d7 	.word	0x000004d7
    1068:	0000d4c4 	.word	0x0000d4c4
    106c:	0000d4e0 	.word	0x0000d4e0

00001070 <_i2c_m_sync_enable>:
{
    1070:	b570      	push	{r4, r5, r6, lr}
    1072:	0006      	movs	r6, r0
	void *hw              = i2c_dev->hw;
    1074:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    1076:	4d18      	ldr	r5, [pc, #96]	; (10d8 <_i2c_m_sync_enable+0x68>)
    1078:	1e43      	subs	r3, r0, #1
    107a:	4198      	sbcs	r0, r3
    107c:	b2c0      	uxtb	r0, r0
    107e:	22a1      	movs	r2, #161	; 0xa1
    1080:	00d2      	lsls	r2, r2, #3
    1082:	0029      	movs	r1, r5
    1084:	f7ff fc38 	bl	8f8 <assert>
	ASSERT(i2c_dev->hw);
    1088:	6930      	ldr	r0, [r6, #16]
    108a:	1e43      	subs	r3, r0, #1
    108c:	4198      	sbcs	r0, r3
    108e:	b2c0      	uxtb	r0, r0
    1090:	4a12      	ldr	r2, [pc, #72]	; (10dc <_i2c_m_sync_enable+0x6c>)
    1092:	0029      	movs	r1, r5
    1094:	f7ff fc30 	bl	8f8 <assert>
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    1098:	6823      	ldr	r3, [r4, #0]
    109a:	2202      	movs	r2, #2
    109c:	4313      	orrs	r3, r2
    109e:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    10a0:	8a23      	ldrh	r3, [r4, #16]
    10a2:	0bdb      	lsrs	r3, r3, #15
    10a4:	d1fc      	bne.n	10a0 <_i2c_m_sync_enable+0x30>
    10a6:	2004      	movs	r0, #4
    10a8:	490d      	ldr	r1, [pc, #52]	; (10e0 <_i2c_m_sync_enable+0x70>)
    10aa:	8a23      	ldrh	r3, [r4, #16]
    10ac:	0bdb      	lsrs	r3, r3, #15
    10ae:	d1fc      	bne.n	10aa <_i2c_m_sync_enable+0x3a>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    10b0:	8a22      	ldrh	r2, [r4, #16]
    10b2:	0912      	lsrs	r2, r2, #4
    10b4:	3303      	adds	r3, #3
    10b6:	4013      	ands	r3, r2
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
    10b8:	2b01      	cmp	r3, #1
    10ba:	d008      	beq.n	10ce <_i2c_m_sync_enable+0x5e>
		timeout--;
    10bc:	3901      	subs	r1, #1
		if (timeout <= 0) {
    10be:	2900      	cmp	r1, #0
    10c0:	dcf3      	bgt.n	10aa <_i2c_m_sync_enable+0x3a>
			if (--timeout_attempt)
    10c2:	3801      	subs	r0, #1
    10c4:	2800      	cmp	r0, #0
    10c6:	d004      	beq.n	10d2 <_i2c_m_sync_enable+0x62>
			((Sercom *)hw)->I2CM.STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(I2C_IDLE);
    10c8:	2310      	movs	r3, #16
    10ca:	8223      	strh	r3, [r4, #16]
    10cc:	e7ec      	b.n	10a8 <_i2c_m_sync_enable+0x38>
	return ERR_NONE;
    10ce:	2000      	movs	r0, #0
}
    10d0:	bd70      	pop	{r4, r5, r6, pc}
				return I2C_ERR_BUSY;
    10d2:	2006      	movs	r0, #6
    10d4:	4240      	negs	r0, r0
    10d6:	e7fb      	b.n	10d0 <_i2c_m_sync_enable+0x60>
    10d8:	0000d4c4 	.word	0x0000d4c4
    10dc:	00000509 	.word	0x00000509
    10e0:	0000ffff 	.word	0x0000ffff

000010e4 <_i2c_m_sync_transfer>:
{
    10e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    10e6:	0005      	movs	r5, r0
    10e8:	000e      	movs	r6, r1
	void *   hw = i2c_dev->hw;
    10ea:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    10ec:	4f7d      	ldr	r7, [pc, #500]	; (12e4 <_i2c_m_sync_transfer+0x200>)
    10ee:	1e43      	subs	r3, r0, #1
    10f0:	4198      	sbcs	r0, r3
    10f2:	b2c0      	uxtb	r0, r0
    10f4:	4a7c      	ldr	r2, [pc, #496]	; (12e8 <_i2c_m_sync_transfer+0x204>)
    10f6:	0039      	movs	r1, r7
    10f8:	f7ff fbfe 	bl	8f8 <assert>
	ASSERT(i2c_dev->hw);
    10fc:	6928      	ldr	r0, [r5, #16]
    10fe:	1e43      	subs	r3, r0, #1
    1100:	4198      	sbcs	r0, r3
    1102:	b2c0      	uxtb	r0, r0
    1104:	4a79      	ldr	r2, [pc, #484]	; (12ec <_i2c_m_sync_transfer+0x208>)
    1106:	0039      	movs	r1, r7
    1108:	f7ff fbf6 	bl	8f8 <assert>
	ASSERT(msg);
    110c:	0030      	movs	r0, r6
    110e:	1e43      	subs	r3, r0, #1
    1110:	4198      	sbcs	r0, r3
    1112:	b2c0      	uxtb	r0, r0
    1114:	4a76      	ldr	r2, [pc, #472]	; (12f0 <_i2c_m_sync_transfer+0x20c>)
    1116:	0039      	movs	r1, r7
    1118:	f7ff fbee 	bl	8f8 <assert>
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    111c:	886b      	ldrh	r3, [r5, #2]
    111e:	05db      	lsls	r3, r3, #23
    1120:	d500      	bpl.n	1124 <_i2c_m_sync_transfer+0x40>
    1122:	e0dc      	b.n	12de <_i2c_m_sync_transfer+0x1fa>
	msg->flags |= I2C_M_BUSY;
    1124:	8872      	ldrh	r2, [r6, #2]
    1126:	2380      	movs	r3, #128	; 0x80
    1128:	005b      	lsls	r3, r3, #1
    112a:	469c      	mov	ip, r3
    112c:	431a      	orrs	r2, r3
    112e:	8072      	strh	r2, [r6, #2]
	i2c_dev->service.msg = *msg;
    1130:	002a      	movs	r2, r5
    1132:	0031      	movs	r1, r6
    1134:	c989      	ldmia	r1!, {r0, r3, r7}
    1136:	c289      	stmia	r2!, {r0, r3, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    1138:	6862      	ldr	r2, [r4, #4]
    113a:	4663      	mov	r3, ip
    113c:	4313      	orrs	r3, r2
    113e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1140:	8a23      	ldrh	r3, [r4, #16]
    1142:	0bdb      	lsrs	r3, r3, #15
    1144:	d1fc      	bne.n	1140 <_i2c_m_sync_transfer+0x5c>
	ret = _sercom_i2c_sync_send_address(i2c_dev);
    1146:	0028      	movs	r0, r5
    1148:	f7ff fe42 	bl	dd0 <_sercom_i2c_sync_send_address>
	if (ret) {
    114c:	2800      	cmp	r0, #0
    114e:	d100      	bne.n	1152 <_i2c_m_sync_transfer+0x6e>
    1150:	e07d      	b.n	124e <_i2c_m_sync_transfer+0x16a>
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    1152:	886b      	ldrh	r3, [r5, #2]
    1154:	4a67      	ldr	r2, [pc, #412]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    1156:	4013      	ands	r3, r2
    1158:	806b      	strh	r3, [r5, #2]
}
    115a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return I2C_ERR_BUS;
    115c:	2005      	movs	r0, #5
    115e:	4240      	negs	r0, r0
    1160:	e086      	b.n	1270 <_i2c_m_sync_transfer+0x18c>
			if (msg->flags & I2C_M_STOP) {
    1162:	8873      	ldrh	r3, [r6, #2]
    1164:	b21b      	sxth	r3, r3
    1166:	2b00      	cmp	r3, #0
    1168:	db04      	blt.n	1174 <_i2c_m_sync_transfer+0x90>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    116a:	886b      	ldrh	r3, [r5, #2]
    116c:	4a61      	ldr	r2, [pc, #388]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    116e:	4013      	ands	r3, r2
    1170:	806b      	strh	r3, [r5, #2]
			return ret;
    1172:	e7f2      	b.n	115a <_i2c_m_sync_transfer+0x76>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1174:	6862      	ldr	r2, [r4, #4]
    1176:	23c0      	movs	r3, #192	; 0xc0
    1178:	029b      	lsls	r3, r3, #10
    117a:	4313      	orrs	r3, r2
    117c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    117e:	8a23      	ldrh	r3, [r4, #16]
    1180:	0bdb      	lsrs	r3, r3, #15
    1182:	d1fc      	bne.n	117e <_i2c_m_sync_transfer+0x9a>
    1184:	e7f1      	b.n	116a <_i2c_m_sync_transfer+0x86>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    1186:	075b      	lsls	r3, r3, #29
    1188:	d40b      	bmi.n	11a2 <_i2c_m_sync_transfer+0xbe>
			if (msg->len == 0) {
    118a:	6868      	ldr	r0, [r5, #4]
    118c:	2800      	cmp	r0, #0
    118e:	d12d      	bne.n	11ec <_i2c_m_sync_transfer+0x108>
				if (msg->flags & I2C_M_STOP) {
    1190:	886b      	ldrh	r3, [r5, #2]
    1192:	b21b      	sxth	r3, r3
    1194:	2b00      	cmp	r3, #0
    1196:	db20      	blt.n	11da <_i2c_m_sync_transfer+0xf6>
				msg->flags &= ~I2C_M_BUSY;
    1198:	886b      	ldrh	r3, [r5, #2]
    119a:	4a56      	ldr	r2, [pc, #344]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    119c:	4013      	ands	r3, r2
    119e:	806b      	strh	r3, [r5, #2]
    11a0:	e055      	b.n	124e <_i2c_m_sync_transfer+0x16a>
				if (msg->len > 0) {
    11a2:	686b      	ldr	r3, [r5, #4]
    11a4:	2b00      	cmp	r3, #0
    11a6:	dd04      	ble.n	11b2 <_i2c_m_sync_transfer+0xce>
					msg->flags |= I2C_M_FAIL;
    11a8:	886b      	ldrh	r3, [r5, #2]
    11aa:	2280      	movs	r2, #128	; 0x80
    11ac:	0152      	lsls	r2, r2, #5
    11ae:	4313      	orrs	r3, r2
    11b0:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    11b2:	886b      	ldrh	r3, [r5, #2]
    11b4:	b21b      	sxth	r3, r3
    11b6:	2b00      	cmp	r3, #0
    11b8:	db06      	blt.n	11c8 <_i2c_m_sync_transfer+0xe4>
				msg->flags &= ~I2C_M_BUSY;
    11ba:	886b      	ldrh	r3, [r5, #2]
    11bc:	4a4d      	ldr	r2, [pc, #308]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    11be:	4013      	ands	r3, r2
    11c0:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    11c2:	2002      	movs	r0, #2
    11c4:	4240      	negs	r0, r0
    11c6:	e042      	b.n	124e <_i2c_m_sync_transfer+0x16a>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    11c8:	6862      	ldr	r2, [r4, #4]
    11ca:	23c0      	movs	r3, #192	; 0xc0
    11cc:	029b      	lsls	r3, r3, #10
    11ce:	4313      	orrs	r3, r2
    11d0:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    11d2:	8a23      	ldrh	r3, [r4, #16]
    11d4:	0bdb      	lsrs	r3, r3, #15
    11d6:	d1fc      	bne.n	11d2 <_i2c_m_sync_transfer+0xee>
    11d8:	e7ef      	b.n	11ba <_i2c_m_sync_transfer+0xd6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    11da:	6862      	ldr	r2, [r4, #4]
    11dc:	23c0      	movs	r3, #192	; 0xc0
    11de:	029b      	lsls	r3, r3, #10
    11e0:	4313      	orrs	r3, r2
    11e2:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    11e4:	8a23      	ldrh	r3, [r4, #16]
    11e6:	0bdb      	lsrs	r3, r3, #15
    11e8:	d1fc      	bne.n	11e4 <_i2c_m_sync_transfer+0x100>
    11ea:	e7d5      	b.n	1198 <_i2c_m_sync_transfer+0xb4>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    11ec:	68ab      	ldr	r3, [r5, #8]
    11ee:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    11f0:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
    11f2:	68ab      	ldr	r3, [r5, #8]
    11f4:	3301      	adds	r3, #1
    11f6:	60ab      	str	r3, [r5, #8]
				msg->len--;
    11f8:	686b      	ldr	r3, [r5, #4]
    11fa:	3b01      	subs	r3, #1
    11fc:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    11fe:	2000      	movs	r0, #0
    1200:	e025      	b.n	124e <_i2c_m_sync_transfer+0x16a>
	} else if (flags & SB_FLAG) {
    1202:	078a      	lsls	r2, r1, #30
    1204:	d569      	bpl.n	12da <_i2c_m_sync_transfer+0x1f6>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    1206:	686a      	ldr	r2, [r5, #4]
    1208:	2a00      	cmp	r2, #0
    120a:	d05e      	beq.n	12ca <_i2c_m_sync_transfer+0x1e6>
    120c:	075b      	lsls	r3, r3, #29
    120e:	d45c      	bmi.n	12ca <_i2c_m_sync_transfer+0x1e6>
			msg->len--;
    1210:	3a01      	subs	r2, #1
    1212:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
    1214:	2a00      	cmp	r2, #0
    1216:	d107      	bne.n	1228 <_i2c_m_sync_transfer+0x144>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1218:	6862      	ldr	r2, [r4, #4]
    121a:	2380      	movs	r3, #128	; 0x80
    121c:	02db      	lsls	r3, r3, #11
    121e:	4313      	orrs	r3, r2
    1220:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1222:	8a23      	ldrh	r3, [r4, #16]
    1224:	0bdb      	lsrs	r3, r3, #15
    1226:	d1fc      	bne.n	1222 <_i2c_m_sync_transfer+0x13e>
			if (msg->len == 0) {
    1228:	686b      	ldr	r3, [r5, #4]
    122a:	2b00      	cmp	r3, #0
    122c:	d107      	bne.n	123e <_i2c_m_sync_transfer+0x15a>
				if (msg->flags & I2C_M_STOP) {
    122e:	886b      	ldrh	r3, [r5, #2]
    1230:	b21b      	sxth	r3, r3
    1232:	2b00      	cmp	r3, #0
    1234:	db39      	blt.n	12aa <_i2c_m_sync_transfer+0x1c6>
				msg->flags &= ~I2C_M_BUSY;
    1236:	886b      	ldrh	r3, [r5, #2]
    1238:	4a2e      	ldr	r2, [pc, #184]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    123a:	4013      	ands	r3, r2
    123c:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    123e:	68ab      	ldr	r3, [r5, #8]
    1240:	1c5a      	adds	r2, r3, #1
    1242:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
    1244:	7e22      	ldrb	r2, [r4, #24]
    1246:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1248:	2302      	movs	r3, #2
    124a:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
    124c:	2000      	movs	r0, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    124e:	886b      	ldrh	r3, [r5, #2]
    1250:	05db      	lsls	r3, r3, #23
    1252:	d400      	bmi.n	1256 <_i2c_m_sync_transfer+0x172>
    1254:	e781      	b.n	115a <_i2c_m_sync_transfer+0x76>
	void *   hw      = i2c_dev->hw;
    1256:	692f      	ldr	r7, [r5, #16]
	uint32_t timeout = 65535;
    1258:	4a27      	ldr	r2, [pc, #156]	; (12f8 <_i2c_m_sync_transfer+0x214>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    125a:	7bbb      	ldrb	r3, [r7, #14]
    125c:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
    125e:	0019      	movs	r1, r3
		if (timeout-- == 0) {
    1260:	1e50      	subs	r0, r2, #1
    1262:	2a00      	cmp	r2, #0
    1264:	d100      	bne.n	1268 <_i2c_m_sync_transfer+0x184>
    1266:	e779      	b.n	115c <_i2c_m_sync_transfer+0x78>
    1268:	0002      	movs	r2, r0
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    126a:	079b      	lsls	r3, r3, #30
    126c:	d0f5      	beq.n	125a <_i2c_m_sync_transfer+0x176>
	return I2C_OK;
    126e:	2000      	movs	r0, #0
		if (ret) {
    1270:	2800      	cmp	r0, #0
    1272:	d000      	beq.n	1276 <_i2c_m_sync_transfer+0x192>
    1274:	e775      	b.n	1162 <_i2c_m_sync_transfer+0x7e>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1276:	8a23      	ldrh	r3, [r4, #16]
    1278:	0bdb      	lsrs	r3, r3, #15
    127a:	d1fc      	bne.n	1276 <_i2c_m_sync_transfer+0x192>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    127c:	8a23      	ldrh	r3, [r4, #16]
    127e:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
    1280:	07ca      	lsls	r2, r1, #31
    1282:	d5be      	bpl.n	1202 <_i2c_m_sync_transfer+0x11e>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    1284:	079a      	lsls	r2, r3, #30
    1286:	d400      	bmi.n	128a <_i2c_m_sync_transfer+0x1a6>
    1288:	e77d      	b.n	1186 <_i2c_m_sync_transfer+0xa2>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    128a:	2201      	movs	r2, #1
    128c:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
    128e:	886a      	ldrh	r2, [r5, #2]
    1290:	2180      	movs	r1, #128	; 0x80
    1292:	0149      	lsls	r1, r1, #5
    1294:	430a      	orrs	r2, r1
    1296:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1298:	886a      	ldrh	r2, [r5, #2]
    129a:	4916      	ldr	r1, [pc, #88]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    129c:	400a      	ands	r2, r1
    129e:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    12a0:	07db      	lsls	r3, r3, #31
    12a2:	d517      	bpl.n	12d4 <_i2c_m_sync_transfer+0x1f0>
				return I2C_ERR_BUS;
    12a4:	2005      	movs	r0, #5
    12a6:	4240      	negs	r0, r0
    12a8:	e7d1      	b.n	124e <_i2c_m_sync_transfer+0x16a>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    12aa:	6863      	ldr	r3, [r4, #4]
    12ac:	4a11      	ldr	r2, [pc, #68]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    12ae:	4013      	ands	r3, r2
    12b0:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    12b2:	8a23      	ldrh	r3, [r4, #16]
    12b4:	0bdb      	lsrs	r3, r3, #15
    12b6:	d1fc      	bne.n	12b2 <_i2c_m_sync_transfer+0x1ce>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    12b8:	6862      	ldr	r2, [r4, #4]
    12ba:	23c0      	movs	r3, #192	; 0xc0
    12bc:	029b      	lsls	r3, r3, #10
    12be:	4313      	orrs	r3, r2
    12c0:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    12c2:	8a23      	ldrh	r3, [r4, #16]
    12c4:	0bdb      	lsrs	r3, r3, #15
    12c6:	d1fc      	bne.n	12c2 <_i2c_m_sync_transfer+0x1de>
    12c8:	e7b5      	b.n	1236 <_i2c_m_sync_transfer+0x152>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    12ca:	2302      	movs	r3, #2
    12cc:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
    12ce:	2002      	movs	r0, #2
    12d0:	4240      	negs	r0, r0
    12d2:	e7bc      	b.n	124e <_i2c_m_sync_transfer+0x16a>
			return I2C_ERR_BAD_ADDRESS;
    12d4:	2004      	movs	r0, #4
    12d6:	4240      	negs	r0, r0
    12d8:	e7b9      	b.n	124e <_i2c_m_sync_transfer+0x16a>
	return I2C_OK;
    12da:	2000      	movs	r0, #0
    12dc:	e7b7      	b.n	124e <_i2c_m_sync_transfer+0x16a>
		return I2C_ERR_BUSY;
    12de:	2006      	movs	r0, #6
    12e0:	4240      	negs	r0, r0
    12e2:	e73a      	b.n	115a <_i2c_m_sync_transfer+0x76>
    12e4:	0000d4c4 	.word	0x0000d4c4
    12e8:	0000059b 	.word	0x0000059b
    12ec:	0000059c 	.word	0x0000059c
    12f0:	0000059d 	.word	0x0000059d
    12f4:	fffffeff 	.word	0xfffffeff
    12f8:	0000ffff 	.word	0x0000ffff

000012fc <_spi_m_sync_init>:

	return NULL;
}

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    12fc:	b570      	push	{r4, r5, r6, lr}
    12fe:	0006      	movs	r6, r0
    1300:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
    1302:	0008      	movs	r0, r1
    1304:	f7ff fcda 	bl	cbc <_sercom_get_hardware_index>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    1308:	2300      	movs	r3, #0
    130a:	2b01      	cmp	r3, #1
    130c:	d80b      	bhi.n	1326 <_spi_m_sync_init+0x2a>
		if (sercomspi_regs[i].n == n) {
    130e:	0119      	lsls	r1, r3, #4
    1310:	4a5f      	ldr	r2, [pc, #380]	; (1490 <_spi_m_sync_init+0x194>)
    1312:	1852      	adds	r2, r2, r1
    1314:	7bd2      	ldrb	r2, [r2, #15]
    1316:	4290      	cmp	r0, r2
    1318:	d002      	beq.n	1320 <_spi_m_sync_init+0x24>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    131a:	3301      	adds	r3, #1
    131c:	b2db      	uxtb	r3, r3
    131e:	e7f4      	b.n	130a <_spi_m_sync_init+0xe>
			return &sercomspi_regs[i];
    1320:	4b5b      	ldr	r3, [pc, #364]	; (1490 <_spi_m_sync_init+0x194>)
    1322:	185d      	adds	r5, r3, r1
    1324:	e000      	b.n	1328 <_spi_m_sync_init+0x2c>
	return NULL;
    1326:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    1328:	2e00      	cmp	r6, #0
    132a:	d100      	bne.n	132e <_spi_m_sync_init+0x32>
    132c:	e06a      	b.n	1404 <_spi_m_sync_init+0x108>
    132e:	2c00      	cmp	r4, #0
    1330:	d100      	bne.n	1334 <_spi_m_sync_init+0x38>
    1332:	e065      	b.n	1400 <_spi_m_sync_init+0x104>
    1334:	2001      	movs	r0, #1
    1336:	4a57      	ldr	r2, [pc, #348]	; (1494 <_spi_m_sync_init+0x198>)
    1338:	4957      	ldr	r1, [pc, #348]	; (1498 <_spi_m_sync_init+0x19c>)
    133a:	f7ff fadd 	bl	8f8 <assert>

	if (regs == NULL) {
    133e:	2d00      	cmp	r5, #0
    1340:	d100      	bne.n	1344 <_spi_m_sync_init+0x48>
    1342:	e0a2      	b.n	148a <_spi_m_sync_init+0x18e>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1344:	8a23      	ldrh	r3, [r4, #16]
    1346:	0bdb      	lsrs	r3, r3, #15
    1348:	d1fc      	bne.n	1344 <_spi_m_sync_init+0x48>
    134a:	8a23      	ldrh	r3, [r4, #16]
    134c:	0bdb      	lsrs	r3, r3, #15
    134e:	d1fc      	bne.n	134a <_spi_m_sync_init+0x4e>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    1350:	6823      	ldr	r3, [r4, #0]
		return ERR_INVALID_ARG;
	}

	hri_sercomspi_wait_for_sync(hw);
	if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    1352:	079b      	lsls	r3, r3, #30
    1354:	d507      	bpl.n	1366 <_spi_m_sync_init+0x6a>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1356:	2300      	movs	r3, #0
    1358:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    135a:	8a23      	ldrh	r3, [r4, #16]
    135c:	0bdb      	lsrs	r3, r3, #15
    135e:	d1fc      	bne.n	135a <_spi_m_sync_init+0x5e>
    1360:	8a23      	ldrh	r3, [r4, #16]
    1362:	0bdb      	lsrs	r3, r3, #15
    1364:	d1fc      	bne.n	1360 <_spi_m_sync_init+0x64>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1366:	2301      	movs	r3, #1
    1368:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    136a:	8a23      	ldrh	r3, [r4, #16]
    136c:	0bdb      	lsrs	r3, r3, #15
    136e:	d1fc      	bne.n	136a <_spi_m_sync_init+0x6e>
    1370:	8a23      	ldrh	r3, [r4, #16]
    1372:	0bdb      	lsrs	r3, r3, #15
    1374:	d1fc      	bne.n	1370 <_spi_m_sync_init+0x74>
		hri_sercomspi_wait_for_sync(hw);
	}
	hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST);
	hri_sercomspi_wait_for_sync(hw);

	dev->prvt = hw;
    1376:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
    1378:	782b      	ldrb	r3, [r5, #0]
    137a:	786a      	ldrb	r2, [r5, #1]
    137c:	0212      	lsls	r2, r2, #8
    137e:	431a      	orrs	r2, r3
    1380:	78ab      	ldrb	r3, [r5, #2]
    1382:	041b      	lsls	r3, r3, #16
    1384:	431a      	orrs	r2, r3
    1386:	78eb      	ldrb	r3, [r5, #3]
    1388:	061b      	lsls	r3, r3, #24
    138a:	4313      	orrs	r3, r2
    138c:	221c      	movs	r2, #28
    138e:	4013      	ands	r3, r2
    1390:	2b08      	cmp	r3, #8
    1392:	d039      	beq.n	1408 <_spi_m_sync_init+0x10c>
	ASSERT(hw && regs);
    1394:	2c00      	cmp	r4, #0
    1396:	d100      	bne.n	139a <_spi_m_sync_init+0x9e>
    1398:	e073      	b.n	1482 <_spi_m_sync_init+0x186>
    139a:	2d00      	cmp	r5, #0
    139c:	d100      	bne.n	13a0 <_spi_m_sync_init+0xa4>
    139e:	e06e      	b.n	147e <_spi_m_sync_init+0x182>
    13a0:	2001      	movs	r0, #1
    13a2:	4a3e      	ldr	r2, [pc, #248]	; (149c <_spi_m_sync_init+0x1a0>)
    13a4:	493c      	ldr	r1, [pc, #240]	; (1498 <_spi_m_sync_init+0x19c>)
    13a6:	f7ff faa7 	bl	8f8 <assert>
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    13aa:	782b      	ldrb	r3, [r5, #0]
    13ac:	786a      	ldrb	r2, [r5, #1]
    13ae:	0212      	lsls	r2, r2, #8
    13b0:	431a      	orrs	r2, r3
    13b2:	78ab      	ldrb	r3, [r5, #2]
    13b4:	041b      	lsls	r3, r3, #16
    13b6:	431a      	orrs	r2, r3
    13b8:	78eb      	ldrb	r3, [r5, #3]
    13ba:	061b      	lsls	r3, r3, #24
    13bc:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    13be:	4a38      	ldr	r2, [pc, #224]	; (14a0 <_spi_m_sync_init+0x1a4>)
    13c0:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    13c2:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    13c4:	8a23      	ldrh	r3, [r4, #16]
    13c6:	0bdb      	lsrs	r3, r3, #15
    13c8:	d1fc      	bne.n	13c4 <_spi_m_sync_init+0xc8>
	    hw, (regs->ctrlb & ~(SERCOM_SPI_CTRLB_AMODE_Msk | SERCOM_SPI_CTRLB_PLOADEN)) | (SERCOM_SPI_CTRLB_RXEN));
    13ca:	792b      	ldrb	r3, [r5, #4]
    13cc:	796a      	ldrb	r2, [r5, #5]
    13ce:	0212      	lsls	r2, r2, #8
    13d0:	431a      	orrs	r2, r3
    13d2:	79ab      	ldrb	r3, [r5, #6]
    13d4:	041b      	lsls	r3, r3, #16
    13d6:	431a      	orrs	r2, r3
    13d8:	79eb      	ldrb	r3, [r5, #7]
    13da:	061b      	lsls	r3, r3, #24
    13dc:	4313      	orrs	r3, r2
    13de:	4a31      	ldr	r2, [pc, #196]	; (14a4 <_spi_m_sync_init+0x1a8>)
    13e0:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
    13e2:	2280      	movs	r2, #128	; 0x80
    13e4:	0292      	lsls	r2, r2, #10
    13e6:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    13e8:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
    13ea:	7b2b      	ldrb	r3, [r5, #12]
	((Sercom *)hw)->SPI.BAUD.reg = data;
    13ec:	72a3      	strb	r3, [r4, #10]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    13ee:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    13f0:	7223      	strb	r3, [r4, #8]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    13f2:	792b      	ldrb	r3, [r5, #4]
    13f4:	075b      	lsls	r3, r3, #29
    13f6:	d146      	bne.n	1486 <_spi_m_sync_init+0x18a>
    13f8:	2301      	movs	r3, #1
    13fa:	7133      	strb	r3, [r6, #4]

	return ERR_NONE;
    13fc:	2000      	movs	r0, #0
}
    13fe:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(dev && hw);
    1400:	2000      	movs	r0, #0
    1402:	e798      	b.n	1336 <_spi_m_sync_init+0x3a>
    1404:	2000      	movs	r0, #0
    1406:	e796      	b.n	1336 <_spi_m_sync_init+0x3a>
	ASSERT(hw && regs);
    1408:	2c00      	cmp	r4, #0
    140a:	d036      	beq.n	147a <_spi_m_sync_init+0x17e>
    140c:	2d00      	cmp	r5, #0
    140e:	d032      	beq.n	1476 <_spi_m_sync_init+0x17a>
    1410:	2001      	movs	r0, #1
    1412:	4a25      	ldr	r2, [pc, #148]	; (14a8 <_spi_m_sync_init+0x1ac>)
    1414:	4920      	ldr	r1, [pc, #128]	; (1498 <_spi_m_sync_init+0x19c>)
    1416:	f7ff fa6f 	bl	8f8 <assert>
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    141a:	782b      	ldrb	r3, [r5, #0]
    141c:	786a      	ldrb	r2, [r5, #1]
    141e:	0212      	lsls	r2, r2, #8
    1420:	431a      	orrs	r2, r3
    1422:	78ab      	ldrb	r3, [r5, #2]
    1424:	041b      	lsls	r3, r3, #16
    1426:	431a      	orrs	r2, r3
    1428:	78eb      	ldrb	r3, [r5, #3]
    142a:	061b      	lsls	r3, r3, #24
    142c:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    142e:	4a1c      	ldr	r2, [pc, #112]	; (14a0 <_spi_m_sync_init+0x1a4>)
    1430:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1432:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1434:	8a23      	ldrh	r3, [r4, #16]
    1436:	0bdb      	lsrs	r3, r3, #15
    1438:	d1fc      	bne.n	1434 <_spi_m_sync_init+0x138>
	hri_sercomspi_write_CTRLB_reg(hw, regs->ctrlb | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_PLOADEN));
    143a:	792b      	ldrb	r3, [r5, #4]
    143c:	796a      	ldrb	r2, [r5, #5]
    143e:	0212      	lsls	r2, r2, #8
    1440:	431a      	orrs	r2, r3
    1442:	79ab      	ldrb	r3, [r5, #6]
    1444:	041b      	lsls	r3, r3, #16
    1446:	431a      	orrs	r2, r3
    1448:	79eb      	ldrb	r3, [r5, #7]
    144a:	061b      	lsls	r3, r3, #24
    144c:	4313      	orrs	r3, r2
    144e:	4a17      	ldr	r2, [pc, #92]	; (14ac <_spi_m_sync_init+0x1b0>)
    1450:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    1452:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
    1454:	7a2b      	ldrb	r3, [r5, #8]
    1456:	7a6a      	ldrb	r2, [r5, #9]
    1458:	0212      	lsls	r2, r2, #8
    145a:	431a      	orrs	r2, r3
    145c:	7aab      	ldrb	r3, [r5, #10]
    145e:	041b      	lsls	r3, r3, #16
    1460:	431a      	orrs	r2, r3
    1462:	7aeb      	ldrb	r3, [r5, #11]
    1464:	061b      	lsls	r3, r3, #24
    1466:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
    1468:	6163      	str	r3, [r4, #20]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    146a:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    146c:	7223      	strb	r3, [r4, #8]
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
    146e:	8a23      	ldrh	r3, [r4, #16]
    1470:	0bdb      	lsrs	r3, r3, #15
	while (hri_sercomspi_is_syncing(hw))
    1472:	d1fc      	bne.n	146e <_spi_m_sync_init+0x172>
    1474:	e7bd      	b.n	13f2 <_spi_m_sync_init+0xf6>
	ASSERT(hw && regs);
    1476:	2000      	movs	r0, #0
    1478:	e7cb      	b.n	1412 <_spi_m_sync_init+0x116>
    147a:	2000      	movs	r0, #0
    147c:	e7c9      	b.n	1412 <_spi_m_sync_init+0x116>
	ASSERT(hw && regs);
    147e:	2000      	movs	r0, #0
    1480:	e78f      	b.n	13a2 <_spi_m_sync_init+0xa6>
    1482:	2000      	movs	r0, #0
    1484:	e78d      	b.n	13a2 <_spi_m_sync_init+0xa6>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    1486:	2302      	movs	r3, #2
    1488:	e7b7      	b.n	13fa <_spi_m_sync_init+0xfe>
		return ERR_INVALID_ARG;
    148a:	200d      	movs	r0, #13
    148c:	4240      	negs	r0, r0
    148e:	e7b6      	b.n	13fe <_spi_m_sync_init+0x102>
    1490:	0000d508 	.word	0x0000d508
    1494:	000008a3 	.word	0x000008a3
    1498:	0000d4c4 	.word	0x0000d4c4
    149c:	00000872 	.word	0x00000872
    14a0:	fffffefc 	.word	0xfffffefc
    14a4:	fffd3fbf 	.word	0xfffd3fbf
    14a8:	00000883 	.word	0x00000883
    14ac:	00020040 	.word	0x00020040

000014b0 <_spi_m_sync_enable>:

	return _spi_deinit(hw);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    14b0:	b510      	push	{r4, lr}
    14b2:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    14b4:	d00d      	beq.n	14d2 <_spi_m_sync_enable+0x22>
    14b6:	6803      	ldr	r3, [r0, #0]
    14b8:	2b00      	cmp	r3, #0
    14ba:	d008      	beq.n	14ce <_spi_m_sync_enable+0x1e>
    14bc:	2001      	movs	r0, #1
    14be:	4a06      	ldr	r2, [pc, #24]	; (14d8 <_spi_m_sync_enable+0x28>)
    14c0:	4906      	ldr	r1, [pc, #24]	; (14dc <_spi_m_sync_enable+0x2c>)
    14c2:	f7ff fa19 	bl	8f8 <assert>

	return _spi_sync_enable(dev->prvt);
    14c6:	6820      	ldr	r0, [r4, #0]
    14c8:	f7ff fc00 	bl	ccc <_spi_sync_enable>
}
    14cc:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    14ce:	2000      	movs	r0, #0
    14d0:	e7f5      	b.n	14be <_spi_m_sync_enable+0xe>
    14d2:	2000      	movs	r0, #0
    14d4:	e7f3      	b.n	14be <_spi_m_sync_enable+0xe>
    14d6:	46c0      	nop			; (mov r8, r8)
    14d8:	0000090a 	.word	0x0000090a
    14dc:	0000d4c4 	.word	0x0000d4c4

000014e0 <_spi_m_sync_trans>:
	ctrl->txcnt++;
	hri_sercomspi_write_DATA_reg(hw, data);
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    14e0:	b570      	push	{r4, r5, r6, lr}
    14e2:	b088      	sub	sp, #32
    14e4:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    14e6:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    14e8:	680b      	ldr	r3, [r1, #0]
    14ea:	9303      	str	r3, [sp, #12]
    14ec:	684b      	ldr	r3, [r1, #4]
    14ee:	9304      	str	r3, [sp, #16]
    14f0:	2300      	movs	r3, #0
    14f2:	9305      	str	r3, [sp, #20]
    14f4:	9306      	str	r3, [sp, #24]
    14f6:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    14f8:	2800      	cmp	r0, #0
    14fa:	d014      	beq.n	1526 <_spi_m_sync_trans+0x46>
    14fc:	2c00      	cmp	r4, #0
    14fe:	d010      	beq.n	1522 <_spi_m_sync_trans+0x42>
    1500:	2001      	movs	r0, #1
    1502:	4a2d      	ldr	r2, [pc, #180]	; (15b8 <_spi_m_sync_trans+0xd8>)
    1504:	492d      	ldr	r1, [pc, #180]	; (15bc <_spi_m_sync_trans+0xdc>)
    1506:	f7ff f9f7 	bl	8f8 <assert>
    150a:	8a23      	ldrh	r3, [r4, #16]
    150c:	0bdb      	lsrs	r3, r3, #15

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(hw)) {
    150e:	d14f      	bne.n	15b0 <_spi_m_sync_trans+0xd0>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1510:	8a23      	ldrh	r3, [r4, #16]
    1512:	0bdb      	lsrs	r3, r3, #15
    1514:	d1fc      	bne.n	1510 <_spi_m_sync_trans+0x30>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    1516:	6823      	ldr	r3, [r4, #0]
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    1518:	079b      	lsls	r3, r3, #30
    151a:	d418      	bmi.n	154e <_spi_m_sync_trans+0x6e>
		return ERR_NOT_INITIALIZED;
    151c:	2014      	movs	r0, #20
    151e:	4240      	negs	r0, r0
    1520:	e044      	b.n	15ac <_spi_m_sync_trans+0xcc>
	ASSERT(dev && hw);
    1522:	2000      	movs	r0, #0
    1524:	e7ed      	b.n	1502 <_spi_m_sync_trans+0x22>
    1526:	2000      	movs	r0, #0
    1528:	e7eb      	b.n	1502 <_spi_m_sync_trans+0x22>
		return false;
    152a:	2200      	movs	r2, #0
    152c:	e026      	b.n	157c <_spi_m_sync_trans+0x9c>
			data |= (*ctrl->txbuf) << 8;
    152e:	7858      	ldrb	r0, [r3, #1]
    1530:	0200      	lsls	r0, r0, #8
    1532:	4301      	orrs	r1, r0
			ctrl->txbuf++;
    1534:	3302      	adds	r3, #2
    1536:	9303      	str	r3, [sp, #12]
	ctrl->txcnt++;
    1538:	3201      	adds	r2, #1
    153a:	9205      	str	r2, [sp, #20]
	hri_sercomspi_write_DATA_reg(hw, data);
    153c:	b289      	uxth	r1, r1
	((Sercom *)hw)->SPI.DATA.reg = data;
    153e:	8321      	strh	r1, [r4, #24]
			if (ctrl.rxcnt >= ctrl.txcnt) {
				_spi_tx_check(hw, iflag, &ctrl);
			}
		}

		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    1540:	9805      	ldr	r0, [sp, #20]
    1542:	68ab      	ldr	r3, [r5, #8]
    1544:	4298      	cmp	r0, r3
    1546:	d302      	bcc.n	154e <_spi_m_sync_trans+0x6e>
    1548:	9a06      	ldr	r2, [sp, #24]
    154a:	4293      	cmp	r3, r2
    154c:	d929      	bls.n	15a2 <_spi_m_sync_trans+0xc2>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    154e:	7ba3      	ldrb	r3, [r4, #14]
    1550:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    1552:	075a      	lsls	r2, r3, #29
    1554:	d5e9      	bpl.n	152a <_spi_m_sync_trans+0x4a>
	return ((Sercom *)hw)->SPI.DATA.reg;
    1556:	8b22      	ldrh	r2, [r4, #24]
    1558:	b292      	uxth	r2, r2
	if (ctrl->rxbuf) {
    155a:	9904      	ldr	r1, [sp, #16]
    155c:	2900      	cmp	r1, #0
    155e:	d008      	beq.n	1572 <_spi_m_sync_trans+0x92>
		*ctrl->rxbuf++ = (uint8_t)data;
    1560:	1c48      	adds	r0, r1, #1
    1562:	9004      	str	r0, [sp, #16]
    1564:	700a      	strb	r2, [r1, #0]
		if (ctrl->char_size > 1) {
    1566:	2e01      	cmp	r6, #1
    1568:	d903      	bls.n	1572 <_spi_m_sync_trans+0x92>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    156a:	1c88      	adds	r0, r1, #2
    156c:	9004      	str	r0, [sp, #16]
    156e:	0a12      	lsrs	r2, r2, #8
    1570:	704a      	strb	r2, [r1, #1]
	ctrl->rxcnt++;
    1572:	9a06      	ldr	r2, [sp, #24]
    1574:	9201      	str	r2, [sp, #4]
    1576:	3201      	adds	r2, #1
    1578:	9206      	str	r2, [sp, #24]
	return true;
    157a:	2201      	movs	r2, #1
		if (!_spi_rx_check(hw, iflag, &ctrl)) {
    157c:	2a00      	cmp	r2, #0
    157e:	d1df      	bne.n	1540 <_spi_m_sync_trans+0x60>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    1580:	9906      	ldr	r1, [sp, #24]
    1582:	9a05      	ldr	r2, [sp, #20]
    1584:	4291      	cmp	r1, r2
    1586:	d3db      	bcc.n	1540 <_spi_m_sync_trans+0x60>
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    1588:	07db      	lsls	r3, r3, #31
    158a:	d5d9      	bpl.n	1540 <_spi_m_sync_trans+0x60>
	if (ctrl->txbuf) {
    158c:	9b03      	ldr	r3, [sp, #12]
    158e:	2b00      	cmp	r3, #0
    1590:	d005      	beq.n	159e <_spi_m_sync_trans+0xbe>
		data = *ctrl->txbuf++;
    1592:	1c59      	adds	r1, r3, #1
    1594:	9103      	str	r1, [sp, #12]
    1596:	7819      	ldrb	r1, [r3, #0]
		if (ctrl->char_size > 1) {
    1598:	2e01      	cmp	r6, #1
    159a:	d8c8      	bhi.n	152e <_spi_m_sync_trans+0x4e>
    159c:	e7cc      	b.n	1538 <_spi_m_sync_trans+0x58>
		data = SPI_DUMMY_CHAR;
    159e:	4908      	ldr	r1, [pc, #32]	; (15c0 <_spi_m_sync_trans+0xe0>)
    15a0:	e7ca      	b.n	1538 <_spi_m_sync_trans+0x58>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    15a2:	7ba3      	ldrb	r3, [r4, #14]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    15a4:	079b      	lsls	r3, r3, #30
    15a6:	d0fc      	beq.n	15a2 <_spi_m_sync_trans+0xc2>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    15a8:	2303      	movs	r3, #3
    15aa:	73a3      	strb	r3, [r4, #14]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    15ac:	b008      	add	sp, #32
    15ae:	bd70      	pop	{r4, r5, r6, pc}
		return ERR_BUSY;
    15b0:	2004      	movs	r0, #4
    15b2:	4240      	negs	r0, r0
    15b4:	e7fa      	b.n	15ac <_spi_m_sync_trans+0xcc>
    15b6:	46c0      	nop			; (mov r8, r8)
    15b8:	00000a01 	.word	0x00000a01
    15bc:	0000d4c4 	.word	0x0000d4c4
    15c0:	000001ff 	.word	0x000001ff

000015c4 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    15c4:	4b0f      	ldr	r3, [pc, #60]	; (1604 <_sysctrl_init_sources+0x40>)
    15c6:	6a19      	ldr	r1, [r3, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    15c8:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    15ca:	6a1a      	ldr	r2, [r3, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    15cc:	0f92      	lsrs	r2, r2, #30
    15ce:	0792      	lsls	r2, r2, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    15d0:	0409      	lsls	r1, r1, #16
    15d2:	480d      	ldr	r0, [pc, #52]	; (1608 <_sysctrl_init_sources+0x44>)
    15d4:	4001      	ands	r1, r0
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    15d6:	430a      	orrs	r2, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    15d8:	490c      	ldr	r1, [pc, #48]	; (160c <_sysctrl_init_sources+0x48>)
    15da:	430a      	orrs	r2, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    15dc:	621a      	str	r2, [r3, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    15de:	699a      	ldr	r2, [r3, #24]
    15e0:	2102      	movs	r1, #2
    15e2:	430a      	orrs	r2, r1
    15e4:	619a      	str	r2, [r3, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    15e6:	7f1a      	ldrb	r2, [r3, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    15e8:	311d      	adds	r1, #29
    15ea:	400a      	ands	r2, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    15ec:	771a      	strb	r2, [r3, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    15ee:	4b05      	ldr	r3, [pc, #20]	; (1604 <_sysctrl_init_sources+0x40>)
    15f0:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    15f2:	071b      	lsls	r3, r3, #28
    15f4:	d5fb      	bpl.n	15ee <_sysctrl_init_sources+0x2a>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    15f6:	4a03      	ldr	r2, [pc, #12]	; (1604 <_sysctrl_init_sources+0x40>)
    15f8:	6a13      	ldr	r3, [r2, #32]
    15fa:	2180      	movs	r1, #128	; 0x80
    15fc:	430b      	orrs	r3, r1
    15fe:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    1600:	4770      	bx	lr
    1602:	46c0      	nop			; (mov r8, r8)
    1604:	40000800 	.word	0x40000800
    1608:	0fff0000 	.word	0x0fff0000
    160c:	00000302 	.word	0x00000302

00001610 <_sysctrl_init_referenced_generators>:
}

static inline void hri_sysctrl_write_DFLLCTRL_reg(const void *const hw, hri_sysctrl_dfllctrl_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    1610:	2202      	movs	r2, #2
    1612:	4b1b      	ldr	r3, [pc, #108]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1614:	849a      	strh	r2, [r3, #36]	; 0x24
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    1616:	4b1a      	ldr	r3, [pc, #104]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1618:	68db      	ldr	r3, [r3, #12]
	hri_gclk_write_CLKCTRL_reg(GCLK,
	                           GCLK_CLKCTRL_ID(0) | GCLK_CLKCTRL_GEN(CONF_DFLL_GCLK) | (1 << GCLK_CLKCTRL_CLKEN_Pos));
#endif

	hri_sysctrl_write_DFLLCTRL_reg(hw, SYSCTRL_DFLLCTRL_ENABLE);
	while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    161a:	06db      	lsls	r3, r3, #27
    161c:	d5fb      	bpl.n	1616 <_sysctrl_init_referenced_generators+0x6>
}

static inline void hri_sysctrl_write_DFLLMUL_reg(const void *const hw, hri_sysctrl_dfllmul_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLMUL.reg = data;
    161e:	4a19      	ldr	r2, [pc, #100]	; (1684 <_sysctrl_init_referenced_generators+0x74>)
    1620:	4b17      	ldr	r3, [pc, #92]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1622:	62da      	str	r2, [r3, #44]	; 0x2c
		;

	hri_sysctrl_write_DFLLMUL_reg(hw,
	                              SYSCTRL_DFLLMUL_CSTEP(CONF_DFLL_CSTEP) | SYSCTRL_DFLLMUL_FSTEP(CONF_DFLL_FSTEP)
	                                  | SYSCTRL_DFLLMUL_MUL(CONF_DFLL_MUL));
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    1624:	4b18      	ldr	r3, [pc, #96]	; (1688 <_sysctrl_init_referenced_generators+0x78>)
    1626:	681b      	ldr	r3, [r3, #0]
    1628:	0e9b      	lsrs	r3, r3, #26
    162a:	2b3f      	cmp	r3, #63	; 0x3f
    162c:	d020      	beq.n	1670 <_sysctrl_init_referenced_generators+0x60>
    162e:	029b      	lsls	r3, r3, #10
    1630:	2280      	movs	r2, #128	; 0x80
    1632:	0092      	lsls	r2, r2, #2
    1634:	4313      	orrs	r3, r2
	((Sysctrl *)hw)->DFLLVAL.reg = data;
    1636:	4a12      	ldr	r2, [pc, #72]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1638:	6293      	str	r3, [r2, #40]	; 0x28
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    163a:	2302      	movs	r3, #2
    163c:	8493      	strh	r3, [r2, #36]	; 0x24
	tmp = ((Sysctrl *)hw)->DFLLCTRL.reg;
    163e:	8c93      	ldrh	r3, [r2, #36]	; 0x24
	hri_sysctrl_write_DFLLCTRL_reg(hw, tmp);
#endif

#if CONF_DFLL_CONFIG == 1
#if CONF_DFLL_ENABLE == 1
	if (hri_sysctrl_get_DFLLCTRL_MODE_bit(hw)) {
    1640:	075b      	lsls	r3, r3, #29
    1642:	d518      	bpl.n	1676 <_sysctrl_init_referenced_generators+0x66>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    1644:	4b0e      	ldr	r3, [pc, #56]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1646:	68da      	ldr	r2, [r3, #12]
	tmp &= mask;
    1648:	23d0      	movs	r3, #208	; 0xd0
    164a:	4013      	ands	r3, r2
		hri_sysctrl_pclksr_reg_t status_mask
		    = SYSCTRL_PCLKSR_DFLLRDY | SYSCTRL_PCLKSR_DFLLLCKF | SYSCTRL_PCLKSR_DFLLLCKC;

		while (hri_sysctrl_get_PCLKSR_reg(hw, status_mask) != status_mask)
    164c:	2bd0      	cmp	r3, #208	; 0xd0
    164e:	d1f9      	bne.n	1644 <_sysctrl_init_referenced_generators+0x34>
	((Sysctrl *)hw)->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ONDEMAND;
    1650:	4a0b      	ldr	r2, [pc, #44]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1652:	8c93      	ldrh	r3, [r2, #36]	; 0x24
    1654:	2180      	movs	r1, #128	; 0x80
    1656:	430b      	orrs	r3, r1
    1658:	b29b      	uxth	r3, r3
    165a:	8493      	strh	r3, [r2, #36]	; 0x24
	return (((Gclk *)hw)->STATUS.reg & GCLK_STATUS_SYNCBUSY) >> GCLK_STATUS_SYNCBUSY_Pos;
    165c:	4b0b      	ldr	r3, [pc, #44]	; (168c <_sysctrl_init_referenced_generators+0x7c>)
    165e:	785b      	ldrb	r3, [r3, #1]
	hri_sysctrl_set_DFLLCTRL_ONDEMAND_bit(hw);
#endif
#endif

#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_get_STATUS_SYNCBUSY_bit(GCLK))
    1660:	09db      	lsrs	r3, r3, #7
    1662:	d1fb      	bne.n	165c <_sysctrl_init_referenced_generators+0x4c>
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    1664:	4a06      	ldr	r2, [pc, #24]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1666:	6993      	ldr	r3, [r2, #24]
    1668:	2102      	movs	r1, #2
    166a:	438b      	bics	r3, r1
    166c:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    166e:	4770      	bx	lr
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    1670:	23fc      	movs	r3, #252	; 0xfc
    1672:	01db      	lsls	r3, r3, #7
    1674:	e7df      	b.n	1636 <_sysctrl_init_referenced_generators+0x26>
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    1676:	4b02      	ldr	r3, [pc, #8]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1678:	68db      	ldr	r3, [r3, #12]
		while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    167a:	06db      	lsls	r3, r3, #27
    167c:	d5fb      	bpl.n	1676 <_sysctrl_init_referenced_generators+0x66>
    167e:	e7e7      	b.n	1650 <_sysctrl_init_referenced_generators+0x40>
    1680:	40000800 	.word	0x40000800
    1684:	04010000 	.word	0x04010000
    1688:	00806024 	.word	0x00806024
    168c:	40000c00 	.word	0x40000c00

00001690 <tc_pwm_interrupt_handler>:
 * \internal TC interrupt handler for PWM
 *
 * \param[in] instance TC instance number
 */
static void tc_pwm_interrupt_handler(struct _pwm_device *device)
{
    1690:	b570      	push	{r4, r5, r6, lr}
    1692:	0005      	movs	r5, r0
	void *const hw = device->hw;
    1694:	6904      	ldr	r4, [r0, #16]
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_MC1;
}

static inline bool hri_tc_get_interrupt_OVF_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTFLAG.reg & TC_INTFLAG_OVF) >> TC_INTFLAG_OVF_Pos;
    1696:	7ba3      	ldrb	r3, [r4, #14]

	if (hri_tc_get_interrupt_OVF_bit(hw)) {
    1698:	07db      	lsls	r3, r3, #31
    169a:	d505      	bpl.n	16a8 <tc_pwm_interrupt_handler+0x18>
}

static inline void hri_tc_clear_interrupt_OVF_bit(const void *const hw)
{
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_OVF;
    169c:	2301      	movs	r3, #1
    169e:	73a3      	strb	r3, [r4, #14]
		hri_tc_clear_interrupt_OVF_bit(hw);
		if (NULL != device->callback.pwm_period_cb) {
    16a0:	6803      	ldr	r3, [r0, #0]
    16a2:	2b00      	cmp	r3, #0
    16a4:	d000      	beq.n	16a8 <tc_pwm_interrupt_handler+0x18>
			device->callback.pwm_period_cb(device);
    16a6:	4798      	blx	r3
	((Tc *)hw)->COUNT16.INTENSET.reg = TC_INTENSET_ERR;
}

static inline bool hri_tc_get_INTEN_ERR_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTENSET.reg & TC_INTENSET_ERR) >> TC_INTENSET_ERR_Pos;
    16a8:	7b63      	ldrb	r3, [r4, #13]
		}
	}
	if (hri_tc_get_INTEN_ERR_bit(hw)) {
    16aa:	079b      	lsls	r3, r3, #30
    16ac:	d506      	bpl.n	16bc <tc_pwm_interrupt_handler+0x2c>
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_ERR;
    16ae:	2302      	movs	r3, #2
    16b0:	73a3      	strb	r3, [r4, #14]
		hri_tc_clear_interrupt_ERR_bit(hw);
		if (NULL != device->callback.pwm_error_cb) {
    16b2:	686b      	ldr	r3, [r5, #4]
    16b4:	2b00      	cmp	r3, #0
    16b6:	d001      	beq.n	16bc <tc_pwm_interrupt_handler+0x2c>
			device->callback.pwm_error_cb(device);
    16b8:	0028      	movs	r0, r5
    16ba:	4798      	blx	r3
		}
	}
}
    16bc:	bd70      	pop	{r4, r5, r6, pc}
	...

000016c0 <tc_get_hardware_index>:
 * \param[in] hw The pointer to hardware instance
 */
static uint8_t tc_get_hardware_index(const void *const hw)
{
#ifndef _UNIT_TEST_
	return ((uint32_t)hw - TC_HW_BASE_ADDR) >> 10;
    16c0:	4b02      	ldr	r3, [pc, #8]	; (16cc <tc_get_hardware_index+0xc>)
    16c2:	469c      	mov	ip, r3
    16c4:	4460      	add	r0, ip
    16c6:	0a80      	lsrs	r0, r0, #10
    16c8:	b2c0      	uxtb	r0, r0
#else
	return ((uint32_t)hw - TC_HW_BASE_ADDR) / sizeof(Tc);
#endif
}
    16ca:	4770      	bx	lr
    16cc:	bdffe000 	.word	0xbdffe000

000016d0 <_tc_init_irq_param>:
/**
 * \brief Init irq param with the given tc hardware instance
 */
static void _tc_init_irq_param(const void *const hw, void *dev)
{
	if (hw == TC6) {
    16d0:	4b06      	ldr	r3, [pc, #24]	; (16ec <_tc_init_irq_param+0x1c>)
    16d2:	4298      	cmp	r0, r3
    16d4:	d003      	beq.n	16de <_tc_init_irq_param+0xe>
		_tc6_dev = (struct _pwm_device *)dev;
	}
	if (hw == TC7) {
    16d6:	4b06      	ldr	r3, [pc, #24]	; (16f0 <_tc_init_irq_param+0x20>)
    16d8:	4298      	cmp	r0, r3
    16da:	d003      	beq.n	16e4 <_tc_init_irq_param+0x14>
		_tc7_dev = (struct _pwm_device *)dev;
	}
}
    16dc:	4770      	bx	lr
		_tc6_dev = (struct _pwm_device *)dev;
    16de:	4b05      	ldr	r3, [pc, #20]	; (16f4 <_tc_init_irq_param+0x24>)
    16e0:	6019      	str	r1, [r3, #0]
    16e2:	e7f8      	b.n	16d6 <_tc_init_irq_param+0x6>
		_tc7_dev = (struct _pwm_device *)dev;
    16e4:	4b04      	ldr	r3, [pc, #16]	; (16f8 <_tc_init_irq_param+0x28>)
    16e6:	6019      	str	r1, [r3, #0]
}
    16e8:	e7f8      	b.n	16dc <_tc_init_irq_param+0xc>
    16ea:	46c0      	nop			; (mov r8, r8)
    16ec:	42003800 	.word	0x42003800
    16f0:	42003c00 	.word	0x42003c00
    16f4:	20000a74 	.word	0x20000a74
    16f8:	20000a78 	.word	0x20000a78

000016fc <get_tc_index>:
{
    16fc:	b510      	push	{r4, lr}
	uint8_t tc_offset = tc_get_hardware_index(hw) + TC_NUMBER_OFFSET;
    16fe:	f7ff ffdf 	bl	16c0 <tc_get_hardware_index>
	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
    1702:	2300      	movs	r3, #0
    1704:	2b01      	cmp	r3, #1
    1706:	d80b      	bhi.n	1720 <get_tc_index+0x24>
		if (_tcs[i].number == tc_offset) {
    1708:	009a      	lsls	r2, r3, #2
    170a:	18d2      	adds	r2, r2, r3
    170c:	0091      	lsls	r1, r2, #2
    170e:	4a09      	ldr	r2, [pc, #36]	; (1734 <get_tc_index+0x38>)
    1710:	5c8a      	ldrb	r2, [r1, r2]
    1712:	4290      	cmp	r0, r2
    1714:	d002      	beq.n	171c <get_tc_index+0x20>
	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
    1716:	3301      	adds	r3, #1
    1718:	b2db      	uxtb	r3, r3
    171a:	e7f3      	b.n	1704 <get_tc_index+0x8>
			return i;
    171c:	b258      	sxtb	r0, r3
    171e:	e007      	b.n	1730 <get_tc_index+0x34>
	ASSERT(false);
    1720:	2276      	movs	r2, #118	; 0x76
    1722:	32ff      	adds	r2, #255	; 0xff
    1724:	4904      	ldr	r1, [pc, #16]	; (1738 <get_tc_index+0x3c>)
    1726:	2000      	movs	r0, #0
    1728:	f7ff f8e6 	bl	8f8 <assert>
	return -1;
    172c:	2001      	movs	r0, #1
    172e:	4240      	negs	r0, r0
}
    1730:	bd10      	pop	{r4, pc}
    1732:	46c0      	nop			; (mov r8, r8)
    1734:	20000000 	.word	0x20000000
    1738:	0000d528 	.word	0x0000d528

0000173c <_pwm_init>:
{
    173c:	b570      	push	{r4, r5, r6, lr}
    173e:	0005      	movs	r5, r0
    1740:	000c      	movs	r4, r1
	int8_t i   = get_tc_index(hw);
    1742:	0008      	movs	r0, r1
    1744:	f7ff ffda 	bl	16fc <get_tc_index>
	device->hw = hw;
    1748:	612c      	str	r4, [r5, #16]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    174a:	7be3      	ldrb	r3, [r4, #15]
    174c:	09db      	lsrs	r3, r3, #7
    174e:	d1fc      	bne.n	174a <_pwm_init+0xe>
}

static inline hri_tc_ctrla_reg_t hri_tc_get_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t mask)
{
	uint16_t tmp;
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    1750:	8823      	ldrh	r3, [r4, #0]
	if (hri_tc_get_CTRLA_reg(hw, TC_CTRLA_ENABLE)) {
    1752:	079b      	lsls	r3, r3, #30
    1754:	d504      	bpl.n	1760 <_pwm_init+0x24>
}

static inline void hri_tc_write_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1756:	2300      	movs	r3, #0
    1758:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    175a:	7be3      	ldrb	r3, [r4, #15]
    175c:	09db      	lsrs	r3, r3, #7
    175e:	d1fc      	bne.n	175a <_pwm_init+0x1e>
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1760:	2301      	movs	r3, #1
    1762:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    1764:	7be3      	ldrb	r3, [r4, #15]
    1766:	09db      	lsrs	r3, r3, #7
    1768:	d1fc      	bne.n	1764 <_pwm_init+0x28>
	hri_tc_write_CTRLA_reg(hw, _tcs[i].ctrl_a);
    176a:	0082      	lsls	r2, r0, #2
    176c:	1812      	adds	r2, r2, r0
    176e:	0091      	lsls	r1, r2, #2
    1770:	4b2a      	ldr	r3, [pc, #168]	; (181c <_pwm_init+0xe0>)
    1772:	185b      	adds	r3, r3, r1
    1774:	885a      	ldrh	r2, [r3, #2]
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1776:	8022      	strh	r2, [r4, #0]
	hri_tc_write_DBGCTRL_reg(hw, _tcs[i].dbg_ctrl);
    1778:	7919      	ldrb	r1, [r3, #4]
}

static inline void hri_tc_write_DBGCTRL_reg(const void *const hw, hri_tc_dbgctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.DBGCTRL.reg = data;
    177a:	7221      	strb	r1, [r4, #8]
	hri_tc_write_EVCTRL_reg(hw, _tcs[i].event_ctrl);
    177c:	88db      	ldrh	r3, [r3, #6]
}

static inline void hri_tc_write_EVCTRL_reg(const void *const hw, hri_tc_evctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.EVCTRL.reg = data;
    177e:	8163      	strh	r3, [r4, #10]
    1780:	230c      	movs	r3, #12
    1782:	4013      	ands	r3, r2
	if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT32) {
    1784:	2b08      	cmp	r3, #8
    1786:	d037      	beq.n	17f8 <_pwm_init+0xbc>
	} else if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT16) {
    1788:	2b00      	cmp	r3, #0
    178a:	d141      	bne.n	1810 <_pwm_init+0xd4>
		hri_tccount16_write_CC_reg(hw, 0, (hri_tccount16_cc_reg_t)_tcs[i].cc0);
    178c:	4a23      	ldr	r2, [pc, #140]	; (181c <_pwm_init+0xe0>)
    178e:	0083      	lsls	r3, r0, #2
    1790:	181e      	adds	r6, r3, r0
    1792:	00b1      	lsls	r1, r6, #2
    1794:	000e      	movs	r6, r1
    1796:	1851      	adds	r1, r2, r1
    1798:	8989      	ldrh	r1, [r1, #12]
}

static inline void hri_tccount16_write_CC_reg(const void *const hw, uint8_t index, hri_tccount16_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CC[index].reg = data;
    179a:	8321      	strh	r1, [r4, #24]
		hri_tccount16_write_CC_reg(hw, 1, (hri_tccount16_cc_reg_t)_tcs[i].cc1);
    179c:	1992      	adds	r2, r2, r6
    179e:	8a13      	ldrh	r3, [r2, #16]
    17a0:	8363      	strh	r3, [r4, #26]
	_tc_init_irq_param(hw, (void *)device);
    17a2:	0029      	movs	r1, r5
    17a4:	0020      	movs	r0, r4
    17a6:	f7ff ff93 	bl	16d0 <_tc_init_irq_param>
	NVIC_DisableIRQ((IRQn_Type)((uint8_t)TC_IRQ_BASE_INDEX + tc_get_hardware_index(hw)));
    17aa:	0020      	movs	r0, r4
    17ac:	f7ff ff88 	bl	16c0 <tc_get_hardware_index>
    17b0:	300d      	adds	r0, #13
    17b2:	b2c0      	uxtb	r0, r0
    17b4:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    17b6:	2b00      	cmp	r3, #0
    17b8:	db0a      	blt.n	17d0 <_pwm_init+0x94>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    17ba:	211f      	movs	r1, #31
    17bc:	4001      	ands	r1, r0
    17be:	2201      	movs	r2, #1
    17c0:	408a      	lsls	r2, r1
    17c2:	2180      	movs	r1, #128	; 0x80
    17c4:	4c16      	ldr	r4, [pc, #88]	; (1820 <_pwm_init+0xe4>)
    17c6:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    17c8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    17cc:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    17d0:	2b00      	cmp	r3, #0
    17d2:	db07      	blt.n	17e4 <_pwm_init+0xa8>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    17d4:	211f      	movs	r1, #31
    17d6:	4001      	ands	r1, r0
    17d8:	2201      	movs	r2, #1
    17da:	408a      	lsls	r2, r1
    17dc:	21c0      	movs	r1, #192	; 0xc0
    17de:	0049      	lsls	r1, r1, #1
    17e0:	4c0f      	ldr	r4, [pc, #60]	; (1820 <_pwm_init+0xe4>)
    17e2:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    17e4:	2b00      	cmp	r3, #0
    17e6:	db16      	blt.n	1816 <_pwm_init+0xda>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    17e8:	231f      	movs	r3, #31
    17ea:	4018      	ands	r0, r3
    17ec:	3b1e      	subs	r3, #30
    17ee:	4083      	lsls	r3, r0
    17f0:	4a0b      	ldr	r2, [pc, #44]	; (1820 <_pwm_init+0xe4>)
    17f2:	6013      	str	r3, [r2, #0]
	return ERR_NONE;
    17f4:	2000      	movs	r0, #0
}
    17f6:	bd70      	pop	{r4, r5, r6, pc}
		hri_tccount32_write_CC_reg(hw, 0, _tcs[i].cc0);
    17f8:	4a08      	ldr	r2, [pc, #32]	; (181c <_pwm_init+0xe0>)
    17fa:	0083      	lsls	r3, r0, #2
    17fc:	181e      	adds	r6, r3, r0
    17fe:	00b1      	lsls	r1, r6, #2
    1800:	000e      	movs	r6, r1
    1802:	1851      	adds	r1, r2, r1
    1804:	68c9      	ldr	r1, [r1, #12]
}

static inline void hri_tccount32_write_CC_reg(const void *const hw, uint8_t index, hri_tccount32_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT32.CC[index].reg = data;
    1806:	61a1      	str	r1, [r4, #24]
		hri_tccount32_write_CC_reg(hw, 1, _tcs[i].cc1);
    1808:	1992      	adds	r2, r2, r6
    180a:	6913      	ldr	r3, [r2, #16]
    180c:	61e3      	str	r3, [r4, #28]
    180e:	e7c8      	b.n	17a2 <_pwm_init+0x66>
		return ERR_INVALID_DATA;
    1810:	2001      	movs	r0, #1
    1812:	4240      	negs	r0, r0
    1814:	e7ef      	b.n	17f6 <_pwm_init+0xba>
	return ERR_NONE;
    1816:	2000      	movs	r0, #0
    1818:	e7ed      	b.n	17f6 <_pwm_init+0xba>
    181a:	46c0      	nop			; (mov r8, r8)
    181c:	20000000 	.word	0x20000000
    1820:	e000e100 	.word	0xe000e100

00001824 <_pwm_enable>:
	hri_tc_set_CTRLA_ENABLE_bit(device->hw);
    1824:	6902      	ldr	r2, [r0, #16]
	((Tc *)hw)->COUNT16.CTRLA.reg |= TC_CTRLA_ENABLE;
    1826:	8813      	ldrh	r3, [r2, #0]
    1828:	2102      	movs	r1, #2
    182a:	430b      	orrs	r3, r1
    182c:	b29b      	uxth	r3, r3
    182e:	8013      	strh	r3, [r2, #0]
}
    1830:	4770      	bx	lr
	...

00001834 <_pwm_set_param>:
{
    1834:	b570      	push	{r4, r5, r6, lr}
    1836:	0004      	movs	r4, r0
    1838:	000e      	movs	r6, r1
    183a:	0015      	movs	r5, r2
	int8_t      i  = get_tc_index(device->hw);
    183c:	6900      	ldr	r0, [r0, #16]
    183e:	f7ff ff5d 	bl	16fc <get_tc_index>
	void *const hw = device->hw;
    1842:	6924      	ldr	r4, [r4, #16]
	_tcs[i].cc0    = period;
    1844:	0082      	lsls	r2, r0, #2
    1846:	1812      	adds	r2, r2, r0
    1848:	0091      	lsls	r1, r2, #2
    184a:	4b0e      	ldr	r3, [pc, #56]	; (1884 <_pwm_set_param+0x50>)
    184c:	185b      	adds	r3, r3, r1
    184e:	60de      	str	r6, [r3, #12]
	_tcs[i].cc1    = duty_cycle;
    1850:	611d      	str	r5, [r3, #16]
	if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT32) {
    1852:	885a      	ldrh	r2, [r3, #2]
    1854:	230c      	movs	r3, #12
    1856:	4013      	ands	r3, r2
    1858:	2b08      	cmp	r3, #8
    185a:	d00b      	beq.n	1874 <_pwm_set_param+0x40>
		hri_tccount16_write_CC_reg(hw, 0, _tcs[i].cc0);
    185c:	4a09      	ldr	r2, [pc, #36]	; (1884 <_pwm_set_param+0x50>)
    185e:	0083      	lsls	r3, r0, #2
    1860:	181d      	adds	r5, r3, r0
    1862:	00a9      	lsls	r1, r5, #2
    1864:	000d      	movs	r5, r1
    1866:	1851      	adds	r1, r2, r1
    1868:	8989      	ldrh	r1, [r1, #12]
	((Tc *)hw)->COUNT16.CC[index].reg = data;
    186a:	8321      	strh	r1, [r4, #24]
		hri_tccount16_write_CC_reg(hw, 1, _tcs[i].cc1);
    186c:	1952      	adds	r2, r2, r5
    186e:	8a13      	ldrh	r3, [r2, #16]
    1870:	8363      	strh	r3, [r4, #26]
}
    1872:	bd70      	pop	{r4, r5, r6, pc}
		hri_tccount32_write_CC_reg(hw, 0, _tcs[i].cc0);
    1874:	4a03      	ldr	r2, [pc, #12]	; (1884 <_pwm_set_param+0x50>)
    1876:	000d      	movs	r5, r1
	((Tc *)hw)->COUNT32.CC[index].reg = data;
    1878:	61a6      	str	r6, [r4, #24]
		hri_tccount32_write_CC_reg(hw, 1, _tcs[i].cc1);
    187a:	1952      	adds	r2, r2, r5
    187c:	6913      	ldr	r3, [r2, #16]
    187e:	61e3      	str	r3, [r4, #28]
    1880:	e7f7      	b.n	1872 <_pwm_set_param+0x3e>
    1882:	46c0      	nop			; (mov r8, r8)
    1884:	20000000 	.word	0x20000000

00001888 <_pwm_is_enabled>:
	return hri_tc_get_CTRLA_ENABLE_bit(device->hw);
    1888:	6903      	ldr	r3, [r0, #16]
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    188a:	881b      	ldrh	r3, [r3, #0]
	tmp = (tmp & TC_CTRLA_ENABLE) >> TC_CTRLA_ENABLE_Pos;
    188c:	085b      	lsrs	r3, r3, #1
	return (bool)tmp;
    188e:	2001      	movs	r0, #1
    1890:	4018      	ands	r0, r3
}
    1892:	4770      	bx	lr

00001894 <_tc_get_pwm>:
}
    1894:	2000      	movs	r0, #0
    1896:	4770      	bx	lr

00001898 <TC6_Handler>:
{
    1898:	b510      	push	{r4, lr}
	tc_pwm_interrupt_handler(_tc6_dev);
    189a:	4b02      	ldr	r3, [pc, #8]	; (18a4 <TC6_Handler+0xc>)
    189c:	6818      	ldr	r0, [r3, #0]
    189e:	f7ff fef7 	bl	1690 <tc_pwm_interrupt_handler>
}
    18a2:	bd10      	pop	{r4, pc}
    18a4:	20000a74 	.word	0x20000a74

000018a8 <TC7_Handler>:
{
    18a8:	b510      	push	{r4, lr}
	tc_pwm_interrupt_handler(_tc7_dev);
    18aa:	4b02      	ldr	r3, [pc, #8]	; (18b4 <TC7_Handler+0xc>)
    18ac:	6818      	ldr	r0, [r3, #0]
    18ae:	f7ff feef 	bl	1690 <tc_pwm_interrupt_handler>
}
    18b2:	bd10      	pop	{r4, pc}
    18b4:	20000a78 	.word	0x20000a78

000018b8 <ETH_Handler>:
	EXT_IRG_init();
}

static void ETH_Handler(void){

}
    18b8:	4770      	bx	lr

000018ba <TIMER_0_task2_cb>:
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    18ba:	2280      	movs	r2, #128	; 0x80
    18bc:	0412      	lsls	r2, r2, #16
    18be:	23c0      	movs	r3, #192	; 0xc0
    18c0:	05db      	lsls	r3, r3, #23
    18c2:	61da      	str	r2, [r3, #28]
}

static void TIMER_0_task2_cb(const struct timer_task *const timer_task)
{
	gpio_toggle_pin_level(GLD);
}
    18c4:	4770      	bx	lr
	...

000018c8 <TIMER_IRQ_init>:



static void TIMER_IRQ_init(void)
{
    18c8:	b510      	push	{r4, lr}
			peripheral = (uint32_t)_pm_get_ahb_index(module);
			PM->AHBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBA:
		PM->APBAMASK.reg |= 1 << peripheral;
    18ca:	4a0f      	ldr	r2, [pc, #60]	; (1908 <TIMER_IRQ_init+0x40>)
    18cc:	6993      	ldr	r3, [r2, #24]
    18ce:	2120      	movs	r1, #32
    18d0:	430b      	orrs	r3, r1
    18d2:	6193      	str	r3, [r2, #24]
	((Gclk *)hw)->CLKCTRL.reg = data;
    18d4:	4a0d      	ldr	r2, [pc, #52]	; (190c <TIMER_IRQ_init+0x44>)
    18d6:	4b0e      	ldr	r3, [pc, #56]	; (1910 <TIMER_IRQ_init+0x48>)
    18d8:	805a      	strh	r2, [r3, #2]
	_pm_enable_bus_clock(PM_BUS_APBA, RTC);
	_gclk_enable_channel(RTC_GCLK_ID, CONF_GCLK_RTC_SRC);
	timer_init(&TIMER_IRQ, RTC, _rtc_get_timer());
    18da:	f7ff f9e5 	bl	ca8 <_rtc_get_timer>
    18de:	0002      	movs	r2, r0
    18e0:	4c0c      	ldr	r4, [pc, #48]	; (1914 <TIMER_IRQ_init+0x4c>)
    18e2:	490d      	ldr	r1, [pc, #52]	; (1918 <TIMER_IRQ_init+0x50>)
    18e4:	0020      	movs	r0, r4
    18e6:	f7fe fed9 	bl	69c <timer_init>
	
	//TIMER_task1.interval = 100;
	//TIMER_task1.cb       = TIMER_0_task1_cb;
	//TIMER_task1.mode     = TIMER_TASK_REPEAT;
	
	TIMER_task2.interval = 32768/2;
    18ea:	490c      	ldr	r1, [pc, #48]	; (191c <TIMER_IRQ_init+0x54>)
    18ec:	2380      	movs	r3, #128	; 0x80
    18ee:	01db      	lsls	r3, r3, #7
    18f0:	608b      	str	r3, [r1, #8]
	TIMER_task2.cb       = TIMER_0_task2_cb;
    18f2:	4b0b      	ldr	r3, [pc, #44]	; (1920 <TIMER_IRQ_init+0x58>)
    18f4:	60cb      	str	r3, [r1, #12]
	TIMER_task2.mode     = TIMER_TASK_REPEAT;
    18f6:	2301      	movs	r3, #1
    18f8:	740b      	strb	r3, [r1, #16]

	//timer_add_task(&TIMER_IRQ, &TIMER_task1);
	timer_add_task(&TIMER_IRQ, &TIMER_task2);
    18fa:	0020      	movs	r0, r4
    18fc:	f7fe ff04 	bl	708 <timer_add_task>
	timer_start(&TIMER_IRQ);
    1900:	0020      	movs	r0, r4
    1902:	f7fe fee9 	bl	6d8 <timer_start>
    1906:	bd10      	pop	{r4, pc}
    1908:	40000400 	.word	0x40000400
    190c:	00004302 	.word	0x00004302
    1910:	40000c00 	.word	0x40000c00
    1914:	20000bf4 	.word	0x20000bf4
    1918:	40001400 	.word	0x40001400
    191c:	20000a7c 	.word	0x20000a7c
    1920:	000018bb 	.word	0x000018bb

00001924 <gpio_init>:
void gpio_init(void){
    1924:	b5f0      	push	{r4, r5, r6, r7, lr}
    1926:	46de      	mov	lr, fp
    1928:	4657      	mov	r7, sl
    192a:	464e      	mov	r6, r9
    192c:	4645      	mov	r5, r8
    192e:	b5e0      	push	{r5, r6, r7, lr}
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1930:	22c0      	movs	r2, #192	; 0xc0
    1932:	05d2      	lsls	r2, r2, #23
    1934:	2380      	movs	r3, #128	; 0x80
    1936:	469c      	mov	ip, r3
    1938:	6193      	str	r3, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    193a:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    193c:	4b7d      	ldr	r3, [pc, #500]	; (1b34 <gpio_init+0x210>)
    193e:	497e      	ldr	r1, [pc, #504]	; (1b38 <gpio_init+0x214>)
    1940:	6299      	str	r1, [r3, #40]	; 0x28
    1942:	25c0      	movs	r5, #192	; 0xc0
    1944:	062d      	lsls	r5, r5, #24
    1946:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1948:	2447      	movs	r4, #71	; 0x47
    194a:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    194c:	2101      	movs	r1, #1
    194e:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1950:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1952:	2080      	movs	r0, #128	; 0x80
    1954:	0040      	lsls	r0, r0, #1
    1956:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1958:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    195a:	4878      	ldr	r0, [pc, #480]	; (1b3c <gpio_init+0x218>)
    195c:	6298      	str	r0, [r3, #40]	; 0x28
    195e:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1960:	3401      	adds	r4, #1
    1962:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1964:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1966:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1968:	2780      	movs	r7, #128	; 0x80
    196a:	00bf      	lsls	r7, r7, #2
    196c:	6157      	str	r7, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    196e:	6097      	str	r7, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1970:	4873      	ldr	r0, [pc, #460]	; (1b40 <gpio_init+0x21c>)
    1972:	4682      	mov	sl, r0
    1974:	6298      	str	r0, [r3, #40]	; 0x28
    1976:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1978:	3401      	adds	r4, #1
    197a:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    197c:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    197e:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1980:	2080      	movs	r0, #128	; 0x80
    1982:	00c0      	lsls	r0, r0, #3
    1984:	4680      	mov	r8, r0
    1986:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1988:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    198a:	486e      	ldr	r0, [pc, #440]	; (1b44 <gpio_init+0x220>)
    198c:	6298      	str	r0, [r3, #40]	; 0x28
    198e:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1990:	3401      	adds	r4, #1
    1992:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1994:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1996:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1998:	2080      	movs	r0, #128	; 0x80
    199a:	0100      	lsls	r0, r0, #4
    199c:	6050      	str	r0, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    199e:	486a      	ldr	r0, [pc, #424]	; (1b48 <gpio_init+0x224>)
    19a0:	6298      	str	r0, [r3, #40]	; 0x28
    19a2:	486a      	ldr	r0, [pc, #424]	; (1b4c <gpio_init+0x228>)
    19a4:	6298      	str	r0, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    19a6:	264b      	movs	r6, #75	; 0x4b
    19a8:	5d98      	ldrb	r0, [r3, r6]
    19aa:	4681      	mov	r9, r0
    19ac:	2004      	movs	r0, #4
    19ae:	464c      	mov	r4, r9
    19b0:	4384      	bics	r4, r0
    19b2:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    19b4:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    19b6:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    19b8:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    19ba:	2680      	movs	r6, #128	; 0x80
    19bc:	0236      	lsls	r6, r6, #8
    19be:	6196      	str	r6, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    19c0:	6096      	str	r6, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    19c2:	4e63      	ldr	r6, [pc, #396]	; (1b50 <gpio_init+0x22c>)
    19c4:	629e      	str	r6, [r3, #40]	; 0x28
    19c6:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    19c8:	244f      	movs	r4, #79	; 0x4f
    19ca:	5d1e      	ldrb	r6, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    19cc:	438e      	bics	r6, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    19ce:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    19d0:	2680      	movs	r6, #128	; 0x80
    19d2:	0436      	lsls	r6, r6, #16
    19d4:	6156      	str	r6, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    19d6:	6096      	str	r6, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    19d8:	2480      	movs	r4, #128	; 0x80
    19da:	05e4      	lsls	r4, r4, #23
    19dc:	629c      	str	r4, [r3, #40]	; 0x28
    19de:	4c5d      	ldr	r4, [pc, #372]	; (1b54 <gpio_init+0x230>)
    19e0:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    19e2:	2457      	movs	r4, #87	; 0x57
    19e4:	46a3      	mov	fp, r4
    19e6:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    19e8:	438c      	bics	r4, r1
    19ea:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    19ec:	465c      	mov	r4, fp
    19ee:	464e      	mov	r6, r9
    19f0:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    19f2:	3441      	adds	r4, #65	; 0x41
    19f4:	5117      	str	r7, [r2, r4]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    19f6:	3c10      	subs	r4, #16
    19f8:	5117      	str	r7, [r2, r4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    19fa:	3f59      	subs	r7, #89	; 0x59
    19fc:	3fff      	subs	r7, #255	; 0xff
    19fe:	4654      	mov	r4, sl
    1a00:	51dc      	str	r4, [r3, r7]
    1a02:	51dd      	str	r5, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a04:	24c9      	movs	r4, #201	; 0xc9
    1a06:	5d1d      	ldrb	r5, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a08:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a0a:	551d      	strb	r5, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1a0c:	2584      	movs	r5, #132	; 0x84
    1a0e:	4644      	mov	r4, r8
    1a10:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a12:	4c51      	ldr	r4, [pc, #324]	; (1b58 <gpio_init+0x234>)
    1a14:	51dc      	str	r4, [r3, r7]
    1a16:	4c4d      	ldr	r4, [pc, #308]	; (1b4c <gpio_init+0x228>)
    1a18:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1a1a:	24ca      	movs	r4, #202	; 0xca
    1a1c:	46a0      	mov	r8, r4
    1a1e:	5d1c      	ldrb	r4, [r3, r4]
    1a20:	4384      	bics	r4, r0
    1a22:	46a1      	mov	r9, r4
    1a24:	4644      	mov	r4, r8
    1a26:	464e      	mov	r6, r9
    1a28:	551e      	strb	r6, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a2a:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a2c:	438c      	bics	r4, r1
    1a2e:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a30:	4644      	mov	r4, r8
    1a32:	464e      	mov	r6, r9
    1a34:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1a36:	2480      	movs	r4, #128	; 0x80
    1a38:	0124      	lsls	r4, r4, #4
    1a3a:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a3c:	4c42      	ldr	r4, [pc, #264]	; (1b48 <gpio_init+0x224>)
    1a3e:	51dc      	str	r4, [r3, r7]
    1a40:	4c42      	ldr	r4, [pc, #264]	; (1b4c <gpio_init+0x228>)
    1a42:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1a44:	24cb      	movs	r4, #203	; 0xcb
    1a46:	46a0      	mov	r8, r4
    1a48:	5d1c      	ldrb	r4, [r3, r4]
    1a4a:	4384      	bics	r4, r0
    1a4c:	46a1      	mov	r9, r4
    1a4e:	4644      	mov	r4, r8
    1a50:	464e      	mov	r6, r9
    1a52:	551e      	strb	r6, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a54:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a56:	438c      	bics	r4, r1
    1a58:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a5a:	4644      	mov	r4, r8
    1a5c:	464e      	mov	r6, r9
    1a5e:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1a60:	2480      	movs	r4, #128	; 0x80
    1a62:	03e4      	lsls	r4, r4, #15
    1a64:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1a66:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a68:	2480      	movs	r4, #128	; 0x80
    1a6a:	05e4      	lsls	r4, r4, #23
    1a6c:	629c      	str	r4, [r3, #40]	; 0x28
    1a6e:	4c3b      	ldr	r4, [pc, #236]	; (1b5c <gpio_init+0x238>)
    1a70:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a72:	2456      	movs	r4, #86	; 0x56
    1a74:	46a1      	mov	r9, r4
    1a76:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a78:	438c      	bics	r4, r1
    1a7a:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a7c:	464c      	mov	r4, r9
    1a7e:	4646      	mov	r6, r8
    1a80:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1a82:	2480      	movs	r4, #128	; 0x80
    1a84:	0464      	lsls	r4, r4, #17
    1a86:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1a88:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a8a:	2480      	movs	r4, #128	; 0x80
    1a8c:	05e4      	lsls	r4, r4, #23
    1a8e:	629c      	str	r4, [r3, #40]	; 0x28
    1a90:	4c33      	ldr	r4, [pc, #204]	; (1b60 <gpio_init+0x23c>)
    1a92:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a94:	2458      	movs	r4, #88	; 0x58
    1a96:	46a1      	mov	r9, r4
    1a98:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a9a:	438c      	bics	r4, r1
    1a9c:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a9e:	464c      	mov	r4, r9
    1aa0:	4646      	mov	r6, r8
    1aa2:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1aa4:	2480      	movs	r4, #128	; 0x80
    1aa6:	04a4      	lsls	r4, r4, #18
    1aa8:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1aaa:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1aac:	2480      	movs	r4, #128	; 0x80
    1aae:	05e4      	lsls	r4, r4, #23
    1ab0:	629c      	str	r4, [r3, #40]	; 0x28
    1ab2:	4e2c      	ldr	r6, [pc, #176]	; (1b64 <gpio_init+0x240>)
    1ab4:	629e      	str	r6, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ab6:	2459      	movs	r4, #89	; 0x59
    1ab8:	5d1e      	ldrb	r6, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1aba:	438e      	bics	r6, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1abc:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1abe:	2640      	movs	r6, #64	; 0x40
    1ac0:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1ac2:	4e29      	ldr	r6, [pc, #164]	; (1b68 <gpio_init+0x244>)
    1ac4:	51de      	str	r6, [r3, r7]
    1ac6:	4c21      	ldr	r4, [pc, #132]	; (1b4c <gpio_init+0x228>)
    1ac8:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1aca:	26c6      	movs	r6, #198	; 0xc6
    1acc:	5d9c      	ldrb	r4, [r3, r6]
    1ace:	4384      	bics	r4, r0
    1ad0:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ad2:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ad4:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1ad6:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1ad8:	3ea6      	subs	r6, #166	; 0xa6
    1ada:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1adc:	4e23      	ldr	r6, [pc, #140]	; (1b6c <gpio_init+0x248>)
    1ade:	51de      	str	r6, [r3, r7]
    1ae0:	4c1a      	ldr	r4, [pc, #104]	; (1b4c <gpio_init+0x228>)
    1ae2:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1ae4:	26c5      	movs	r6, #197	; 0xc5
    1ae6:	5d9c      	ldrb	r4, [r3, r6]
    1ae8:	4384      	bics	r4, r0
    1aea:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1aec:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1aee:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1af0:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1af2:	3eb5      	subs	r6, #181	; 0xb5
    1af4:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1af6:	4e1e      	ldr	r6, [pc, #120]	; (1b70 <gpio_init+0x24c>)
    1af8:	51de      	str	r6, [r3, r7]
    1afa:	4c14      	ldr	r4, [pc, #80]	; (1b4c <gpio_init+0x228>)
    1afc:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1afe:	26c4      	movs	r6, #196	; 0xc4
    1b00:	5d9c      	ldrb	r4, [r3, r6]
    1b02:	4384      	bics	r4, r0
    1b04:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1b06:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1b08:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1b0a:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1b0c:	4664      	mov	r4, ip
    1b0e:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1b10:	4a18      	ldr	r2, [pc, #96]	; (1b74 <gpio_init+0x250>)
    1b12:	51da      	str	r2, [r3, r7]
    1b14:	4a0d      	ldr	r2, [pc, #52]	; (1b4c <gpio_init+0x228>)
    1b16:	51da      	str	r2, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1b18:	22c7      	movs	r2, #199	; 0xc7
    1b1a:	5c9c      	ldrb	r4, [r3, r2]
    1b1c:	4384      	bics	r4, r0
    1b1e:	549c      	strb	r4, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1b20:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1b22:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1b24:	5498      	strb	r0, [r3, r2]
}
    1b26:	bc3c      	pop	{r2, r3, r4, r5}
    1b28:	4690      	mov	r8, r2
    1b2a:	4699      	mov	r9, r3
    1b2c:	46a2      	mov	sl, r4
    1b2e:	46ab      	mov	fp, r5
    1b30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1b32:	46c0      	nop			; (mov r8, r8)
    1b34:	41004400 	.word	0x41004400
    1b38:	40000080 	.word	0x40000080
    1b3c:	40000100 	.word	0x40000100
    1b40:	40000200 	.word	0x40000200
    1b44:	40000400 	.word	0x40000400
    1b48:	40020800 	.word	0x40020800
    1b4c:	c0020000 	.word	0xc0020000
    1b50:	40008000 	.word	0x40008000
    1b54:	c0000080 	.word	0xc0000080
    1b58:	40020400 	.word	0x40020400
    1b5c:	c0000040 	.word	0xc0000040
    1b60:	c0000100 	.word	0xc0000100
    1b64:	c0000200 	.word	0xc0000200
    1b68:	40020040 	.word	0x40020040
    1b6c:	40020020 	.word	0x40020020
    1b70:	40020010 	.word	0x40020010
    1b74:	40020080 	.word	0x40020080

00001b78 <EXT_IRG_init>:
void EXT_IRG_init(void){
    1b78:	b510      	push	{r4, lr}
    1b7a:	4a11      	ldr	r2, [pc, #68]	; (1bc0 <EXT_IRG_init+0x48>)
    1b7c:	4b11      	ldr	r3, [pc, #68]	; (1bc4 <EXT_IRG_init+0x4c>)
    1b7e:	805a      	strh	r2, [r3, #2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1b80:	2180      	movs	r1, #128	; 0x80
    1b82:	0049      	lsls	r1, r1, #1
    1b84:	2384      	movs	r3, #132	; 0x84
    1b86:	22c0      	movs	r2, #192	; 0xc0
    1b88:	05d2      	lsls	r2, r2, #23
    1b8a:	50d1      	str	r1, [r2, r3]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1b8c:	4b0e      	ldr	r3, [pc, #56]	; (1bc8 <EXT_IRG_init+0x50>)
    1b8e:	22a8      	movs	r2, #168	; 0xa8
    1b90:	490e      	ldr	r1, [pc, #56]	; (1bcc <EXT_IRG_init+0x54>)
    1b92:	5099      	str	r1, [r3, r2]
    1b94:	490e      	ldr	r1, [pc, #56]	; (1bd0 <EXT_IRG_init+0x58>)
    1b96:	5099      	str	r1, [r3, r2]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1b98:	21c8      	movs	r1, #200	; 0xc8
    1b9a:	5c5a      	ldrb	r2, [r3, r1]
    1b9c:	2004      	movs	r0, #4
    1b9e:	4382      	bics	r2, r0
    1ba0:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ba2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ba4:	3803      	subs	r0, #3
    1ba6:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1ba8:	4302      	orrs	r2, r0
    1baa:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1bac:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1bae:	3914      	subs	r1, #20
    1bb0:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1bb2:	200f      	movs	r0, #15
    1bb4:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1bb6:	545a      	strb	r2, [r3, r1]
	ext_irq_init();
    1bb8:	f7fe fb18 	bl	1ec <ext_irq_init>
}
    1bbc:	bd10      	pop	{r4, pc}
    1bbe:	46c0      	nop			; (mov r8, r8)
    1bc0:	00004103 	.word	0x00004103
    1bc4:	40000c00 	.word	0x40000c00
    1bc8:	41004400 	.word	0x41004400
    1bcc:	40020100 	.word	0x40020100
    1bd0:	c0020000 	.word	0xc0020000

00001bd4 <ETH_SPI_init>:
void ETH_SPI_init(void){
    1bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1bd6:	46d6      	mov	lr, sl
    1bd8:	4647      	mov	r7, r8
    1bda:	b580      	push	{r7, lr}
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
    1bdc:	4a34      	ldr	r2, [pc, #208]	; (1cb0 <ETH_SPI_init+0xdc>)
    1bde:	6a13      	ldr	r3, [r2, #32]
    1be0:	2104      	movs	r1, #4
    1be2:	4688      	mov	r8, r1
    1be4:	430b      	orrs	r3, r1
    1be6:	6213      	str	r3, [r2, #32]
    1be8:	4a32      	ldr	r2, [pc, #200]	; (1cb4 <ETH_SPI_init+0xe0>)
    1bea:	4b33      	ldr	r3, [pc, #204]	; (1cb8 <ETH_SPI_init+0xe4>)
    1bec:	805a      	strh	r2, [r3, #2]
	spi_m_sync_init(&ETH_SPI, SERCOM0);
    1bee:	4933      	ldr	r1, [pc, #204]	; (1cbc <ETH_SPI_init+0xe8>)
    1bf0:	4833      	ldr	r0, [pc, #204]	; (1cc0 <ETH_SPI_init+0xec>)
    1bf2:	f7fe fc5d 	bl	4b0 <spi_m_sync_init>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1bf6:	22c0      	movs	r2, #192	; 0xc0
    1bf8:	05d2      	lsls	r2, r2, #23
    1bfa:	2310      	movs	r3, #16
    1bfc:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1bfe:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c00:	4b30      	ldr	r3, [pc, #192]	; (1cc4 <ETH_SPI_init+0xf0>)
    1c02:	4931      	ldr	r1, [pc, #196]	; (1cc8 <ETH_SPI_init+0xf4>)
    1c04:	6299      	str	r1, [r3, #40]	; 0x28
    1c06:	21c0      	movs	r1, #192	; 0xc0
    1c08:	0609      	lsls	r1, r1, #24
    1c0a:	468a      	mov	sl, r1
    1c0c:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c0e:	2044      	movs	r0, #68	; 0x44
    1c10:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c12:	2401      	movs	r4, #1
    1c14:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1c16:	2501      	movs	r5, #1
    1c18:	4329      	orrs	r1, r5
    1c1a:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c1c:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1c1e:	2132      	movs	r1, #50	; 0x32
    1c20:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1c22:	270f      	movs	r7, #15
    1c24:	43b8      	bics	r0, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1c26:	2603      	movs	r6, #3
    1c28:	46b4      	mov	ip, r6
    1c2a:	4666      	mov	r6, ip
    1c2c:	4330      	orrs	r0, r6
    1c2e:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1c30:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1c32:	2020      	movs	r0, #32
    1c34:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1c36:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c38:	4824      	ldr	r0, [pc, #144]	; (1ccc <ETH_SPI_init+0xf8>)
    1c3a:	6298      	str	r0, [r3, #40]	; 0x28
    1c3c:	4650      	mov	r0, sl
    1c3e:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c40:	2045      	movs	r0, #69	; 0x45
    1c42:	4682      	mov	sl, r0
    1c44:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c46:	43a0      	bics	r0, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1c48:	4328      	orrs	r0, r5
    1c4a:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c4c:	4656      	mov	r6, sl
    1c4e:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1c50:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1c52:	3e36      	subs	r6, #54	; 0x36
    1c54:	4030      	ands	r0, r6
	tmp |= PORT_PMUX_PMUXO(data);
    1c56:	2630      	movs	r6, #48	; 0x30
    1c58:	46b2      	mov	sl, r6
    1c5a:	4656      	mov	r6, sl
    1c5c:	4330      	orrs	r0, r6
    1c5e:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1c60:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1c62:	310e      	adds	r1, #14
    1c64:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c66:	4a1a      	ldr	r2, [pc, #104]	; (1cd0 <ETH_SPI_init+0xfc>)
    1c68:	629a      	str	r2, [r3, #40]	; 0x28
    1c6a:	4a1a      	ldr	r2, [pc, #104]	; (1cd4 <ETH_SPI_init+0x100>)
    1c6c:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1c6e:	2246      	movs	r2, #70	; 0x46
    1c70:	5c99      	ldrb	r1, [r3, r2]
    1c72:	4640      	mov	r0, r8
    1c74:	4381      	bics	r1, r0
    1c76:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c78:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c7a:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1c7c:	4329      	orrs	r1, r5
    1c7e:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c80:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1c82:	2133      	movs	r1, #51	; 0x33
    1c84:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1c86:	43ba      	bics	r2, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1c88:	4660      	mov	r0, ip
    1c8a:	4302      	orrs	r2, r0
    1c8c:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1c8e:	545a      	strb	r2, [r3, r1]
	spi_m_sync_init(&ETH_SPI, SERCOM0);
    1c90:	490a      	ldr	r1, [pc, #40]	; (1cbc <ETH_SPI_init+0xe8>)
    1c92:	480b      	ldr	r0, [pc, #44]	; (1cc0 <ETH_SPI_init+0xec>)
    1c94:	f7fe fc0c 	bl	4b0 <spi_m_sync_init>
	spi_m_sync_get_io_descriptor(&ETH_SPI, &eth_spi);
    1c98:	490f      	ldr	r1, [pc, #60]	; (1cd8 <ETH_SPI_init+0x104>)
    1c9a:	4809      	ldr	r0, [pc, #36]	; (1cc0 <ETH_SPI_init+0xec>)
    1c9c:	f7fe fc94 	bl	5c8 <spi_m_sync_get_io_descriptor>
	spi_m_sync_enable(&ETH_SPI);
    1ca0:	4807      	ldr	r0, [pc, #28]	; (1cc0 <ETH_SPI_init+0xec>)
    1ca2:	f7fe fc2d 	bl	500 <spi_m_sync_enable>
}
    1ca6:	bc0c      	pop	{r2, r3}
    1ca8:	4690      	mov	r8, r2
    1caa:	469a      	mov	sl, r3
    1cac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1cae:	46c0      	nop			; (mov r8, r8)
    1cb0:	40000400 	.word	0x40000400
    1cb4:	0000400d 	.word	0x0000400d
    1cb8:	40000c00 	.word	0x40000c00
    1cbc:	42000800 	.word	0x42000800
    1cc0:	20000bc8 	.word	0x20000bc8
    1cc4:	41004400 	.word	0x41004400
    1cc8:	40000010 	.word	0x40000010
    1ccc:	40000020 	.word	0x40000020
    1cd0:	40020040 	.word	0x40020040
    1cd4:	c0020000 	.word	0xc0020000
    1cd8:	20000ba8 	.word	0x20000ba8

00001cdc <ETH_SPI_Select>:
/**
 * \brief Set output level on port with mask
 */
static inline void _gpio_set_level(const enum gpio_port port, const uint32_t mask, const bool level)
{
	if (level) {
    1cdc:	2800      	cmp	r0, #0
    1cde:	d104      	bne.n	1cea <ETH_SPI_Select+0xe>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1ce0:	2280      	movs	r2, #128	; 0x80
    1ce2:	23c0      	movs	r3, #192	; 0xc0
    1ce4:	05db      	lsls	r3, r3, #23
    1ce6:	615a      	str	r2, [r3, #20]
}
    1ce8:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1cea:	2280      	movs	r2, #128	; 0x80
    1cec:	23c0      	movs	r3, #192	; 0xc0
    1cee:	05db      	lsls	r3, r3, #23
    1cf0:	619a      	str	r2, [r3, #24]
    1cf2:	e7f9      	b.n	1ce8 <ETH_SPI_Select+0xc>

00001cf4 <W5500_Select>:
void W5500_Select(void){
    1cf4:	b510      	push	{r4, lr}
	ETH_SPI_Select(false);
    1cf6:	2000      	movs	r0, #0
    1cf8:	f7ff fff0 	bl	1cdc <ETH_SPI_Select>
}
    1cfc:	bd10      	pop	{r4, pc}

00001cfe <W5500_Unselect>:
void W5500_Unselect(void){
    1cfe:	b510      	push	{r4, lr}
	ETH_SPI_Select(true);
    1d00:	2001      	movs	r0, #1
    1d02:	f7ff ffeb 	bl	1cdc <ETH_SPI_Select>
}
    1d06:	bd10      	pop	{r4, pc}

00001d08 <W5500_ReadBuff>:
void W5500_ReadBuff(uint8_t* buff, uint16_t len){
    1d08:	b510      	push	{r4, lr}
    1d0a:	0003      	movs	r3, r0
    1d0c:	000a      	movs	r2, r1
	io_read(eth_spi,buff,len);
    1d0e:	4903      	ldr	r1, [pc, #12]	; (1d1c <W5500_ReadBuff+0x14>)
    1d10:	6808      	ldr	r0, [r1, #0]
    1d12:	0019      	movs	r1, r3
    1d14:	f7fe fb5a 	bl	3cc <io_read>
}
    1d18:	bd10      	pop	{r4, pc}
    1d1a:	46c0      	nop			; (mov r8, r8)
    1d1c:	20000ba8 	.word	0x20000ba8

00001d20 <W5500_WriteBuff>:
void W5500_WriteBuff(uint8_t* buff, uint16_t len){
    1d20:	b510      	push	{r4, lr}
    1d22:	0003      	movs	r3, r0
    1d24:	000a      	movs	r2, r1
	io_write(eth_spi,buff,len);
    1d26:	4903      	ldr	r1, [pc, #12]	; (1d34 <W5500_WriteBuff+0x14>)
    1d28:	6808      	ldr	r0, [r1, #0]
    1d2a:	0019      	movs	r1, r3
    1d2c:	f7fe fb34 	bl	398 <io_write>
}
    1d30:	bd10      	pop	{r4, pc}
    1d32:	46c0      	nop			; (mov r8, r8)
    1d34:	20000ba8 	.word	0x20000ba8

00001d38 <W5500_ReadByte>:
uint8_t W5500_ReadByte(void){
    1d38:	b510      	push	{r4, lr}
    1d3a:	b082      	sub	sp, #8
	uint8_t data_byte = 0;
    1d3c:	466b      	mov	r3, sp
    1d3e:	1ddc      	adds	r4, r3, #7
    1d40:	2300      	movs	r3, #0
    1d42:	7023      	strb	r3, [r4, #0]
	io_read(eth_spi,&data_byte,1);
    1d44:	4b04      	ldr	r3, [pc, #16]	; (1d58 <W5500_ReadByte+0x20>)
    1d46:	6818      	ldr	r0, [r3, #0]
    1d48:	2201      	movs	r2, #1
    1d4a:	0021      	movs	r1, r4
    1d4c:	f7fe fb3e 	bl	3cc <io_read>
	return data_byte;
    1d50:	7820      	ldrb	r0, [r4, #0]
}
    1d52:	b002      	add	sp, #8
    1d54:	bd10      	pop	{r4, pc}
    1d56:	46c0      	nop			; (mov r8, r8)
    1d58:	20000ba8 	.word	0x20000ba8

00001d5c <W5500_Write_byte>:
void W5500_Write_byte(uint8_t byte){
    1d5c:	b500      	push	{lr}
    1d5e:	b083      	sub	sp, #12
    1d60:	466b      	mov	r3, sp
    1d62:	1dd9      	adds	r1, r3, #7
    1d64:	7008      	strb	r0, [r1, #0]
	io_write(eth_spi, &byte, 1);
    1d66:	4b03      	ldr	r3, [pc, #12]	; (1d74 <W5500_Write_byte+0x18>)
    1d68:	6818      	ldr	r0, [r3, #0]
    1d6a:	2201      	movs	r2, #1
    1d6c:	f7fe fb14 	bl	398 <io_write>
}
    1d70:	b003      	add	sp, #12
    1d72:	bd00      	pop	{pc}
    1d74:	20000ba8 	.word	0x20000ba8

00001d78 <EXT_SPI_init>:
void EXT_SPI_init(void){
    1d78:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d7a:	46ce      	mov	lr, r9
    1d7c:	b500      	push	{lr}
    1d7e:	4a35      	ldr	r2, [pc, #212]	; (1e54 <EXT_SPI_init+0xdc>)
    1d80:	6a13      	ldr	r3, [r2, #32]
    1d82:	2120      	movs	r1, #32
    1d84:	430b      	orrs	r3, r1
    1d86:	6213      	str	r3, [r2, #32]
    1d88:	4a33      	ldr	r2, [pc, #204]	; (1e58 <EXT_SPI_init+0xe0>)
    1d8a:	4b34      	ldr	r3, [pc, #208]	; (1e5c <EXT_SPI_init+0xe4>)
    1d8c:	805a      	strh	r2, [r3, #2]
	spi_m_sync_init(&EXT_SPI, SERCOM3);
    1d8e:	4934      	ldr	r1, [pc, #208]	; (1e60 <EXT_SPI_init+0xe8>)
    1d90:	4834      	ldr	r0, [pc, #208]	; (1e64 <EXT_SPI_init+0xec>)
    1d92:	f7fe fb8d 	bl	4b0 <spi_m_sync_init>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1d96:	22c0      	movs	r2, #192	; 0xc0
    1d98:	05d2      	lsls	r2, r2, #23
    1d9a:	2380      	movs	r3, #128	; 0x80
    1d9c:	025b      	lsls	r3, r3, #9
    1d9e:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1da0:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1da2:	4b31      	ldr	r3, [pc, #196]	; (1e68 <EXT_SPI_init+0xf0>)
    1da4:	2180      	movs	r1, #128	; 0x80
    1da6:	05c9      	lsls	r1, r1, #23
    1da8:	4689      	mov	r9, r1
    1daa:	6299      	str	r1, [r3, #40]	; 0x28
    1dac:	492f      	ldr	r1, [pc, #188]	; (1e6c <EXT_SPI_init+0xf4>)
    1dae:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1db0:	2050      	movs	r0, #80	; 0x50
    1db2:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1db4:	2401      	movs	r4, #1
    1db6:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1db8:	2501      	movs	r5, #1
    1dba:	4329      	orrs	r1, r5
    1dbc:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1dbe:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1dc0:	2138      	movs	r1, #56	; 0x38
    1dc2:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1dc4:	270f      	movs	r7, #15
    1dc6:	43b8      	bics	r0, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1dc8:	2603      	movs	r6, #3
    1dca:	46b4      	mov	ip, r6
    1dcc:	4666      	mov	r6, ip
    1dce:	4330      	orrs	r0, r6
    1dd0:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1dd2:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1dd4:	2080      	movs	r0, #128	; 0x80
    1dd6:	0280      	lsls	r0, r0, #10
    1dd8:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1dda:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1ddc:	4648      	mov	r0, r9
    1dde:	6298      	str	r0, [r3, #40]	; 0x28
    1de0:	4823      	ldr	r0, [pc, #140]	; (1e70 <EXT_SPI_init+0xf8>)
    1de2:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1de4:	2051      	movs	r0, #81	; 0x51
    1de6:	4681      	mov	r9, r0
    1de8:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1dea:	43a0      	bics	r0, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1dec:	4328      	orrs	r0, r5
    1dee:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1df0:	464e      	mov	r6, r9
    1df2:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1df4:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1df6:	3e42      	subs	r6, #66	; 0x42
    1df8:	4030      	ands	r0, r6
	tmp |= PORT_PMUX_PMUXO(data);
    1dfa:	2630      	movs	r6, #48	; 0x30
    1dfc:	46b1      	mov	r9, r6
    1dfe:	464e      	mov	r6, r9
    1e00:	4330      	orrs	r0, r6
    1e02:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1e04:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1e06:	2180      	movs	r1, #128	; 0x80
    1e08:	02c9      	lsls	r1, r1, #11
    1e0a:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1e0c:	4a19      	ldr	r2, [pc, #100]	; (1e74 <EXT_SPI_init+0xfc>)
    1e0e:	629a      	str	r2, [r3, #40]	; 0x28
    1e10:	4a19      	ldr	r2, [pc, #100]	; (1e78 <EXT_SPI_init+0x100>)
    1e12:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1e14:	2252      	movs	r2, #82	; 0x52
    1e16:	5c99      	ldrb	r1, [r3, r2]
    1e18:	2004      	movs	r0, #4
    1e1a:	4381      	bics	r1, r0
    1e1c:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1e1e:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1e20:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1e22:	4329      	orrs	r1, r5
    1e24:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1e26:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1e28:	2139      	movs	r1, #57	; 0x39
    1e2a:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1e2c:	43ba      	bics	r2, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1e2e:	4660      	mov	r0, ip
    1e30:	4302      	orrs	r2, r0
    1e32:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1e34:	545a      	strb	r2, [r3, r1]
	spi_m_sync_init(&EXT_SPI, SERCOM3);
    1e36:	490a      	ldr	r1, [pc, #40]	; (1e60 <EXT_SPI_init+0xe8>)
    1e38:	480a      	ldr	r0, [pc, #40]	; (1e64 <EXT_SPI_init+0xec>)
    1e3a:	f7fe fb39 	bl	4b0 <spi_m_sync_init>
	spi_m_sync_get_io_descriptor(&EXT_SPI, &ext_spi);
    1e3e:	490f      	ldr	r1, [pc, #60]	; (1e7c <EXT_SPI_init+0x104>)
    1e40:	4808      	ldr	r0, [pc, #32]	; (1e64 <EXT_SPI_init+0xec>)
    1e42:	f7fe fbc1 	bl	5c8 <spi_m_sync_get_io_descriptor>
	spi_m_sync_enable(&EXT_SPI);
    1e46:	4807      	ldr	r0, [pc, #28]	; (1e64 <EXT_SPI_init+0xec>)
    1e48:	f7fe fb5a 	bl	500 <spi_m_sync_enable>
}
    1e4c:	bc04      	pop	{r2}
    1e4e:	4691      	mov	r9, r2
    1e50:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1e52:	46c0      	nop			; (mov r8, r8)
    1e54:	40000400 	.word	0x40000400
    1e58:	00004010 	.word	0x00004010
    1e5c:	40000c00 	.word	0x40000c00
    1e60:	42001400 	.word	0x42001400
    1e64:	20000bb0 	.word	0x20000bb0
    1e68:	41004400 	.word	0x41004400
    1e6c:	c0000001 	.word	0xc0000001
    1e70:	c0000002 	.word	0xc0000002
    1e74:	40020000 	.word	0x40020000
    1e78:	c0020004 	.word	0xc0020004
    1e7c:	20000bac 	.word	0x20000bac

00001e80 <EXT_I2C_init>:
void EXT_I2C_init(void){
    1e80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e82:	4a1e      	ldr	r2, [pc, #120]	; (1efc <EXT_I2C_init+0x7c>)
    1e84:	6a13      	ldr	r3, [r2, #32]
    1e86:	2110      	movs	r1, #16
    1e88:	430b      	orrs	r3, r1
    1e8a:	6213      	str	r3, [r2, #32]
    1e8c:	4b1c      	ldr	r3, [pc, #112]	; (1f00 <EXT_I2C_init+0x80>)
    1e8e:	4a1d      	ldr	r2, [pc, #116]	; (1f04 <EXT_I2C_init+0x84>)
    1e90:	805a      	strh	r2, [r3, #2]
    1e92:	4a1d      	ldr	r2, [pc, #116]	; (1f08 <EXT_I2C_init+0x88>)
    1e94:	805a      	strh	r2, [r3, #2]
	i2c_m_sync_init(&EXT_I2C, SERCOM2);
    1e96:	4c1d      	ldr	r4, [pc, #116]	; (1f0c <EXT_I2C_init+0x8c>)
    1e98:	491d      	ldr	r1, [pc, #116]	; (1f10 <EXT_I2C_init+0x90>)
    1e9a:	0020      	movs	r0, r4
    1e9c:	f7fe fa58 	bl	350 <i2c_m_sync_init>
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1ea0:	4b1c      	ldr	r3, [pc, #112]	; (1f14 <EXT_I2C_init+0x94>)
    1ea2:	204c      	movs	r0, #76	; 0x4c
    1ea4:	5c19      	ldrb	r1, [r3, r0]
    1ea6:	2204      	movs	r2, #4
    1ea8:	4391      	bics	r1, r2
    1eaa:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1eac:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1eae:	2601      	movs	r6, #1
    1eb0:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1eb2:	2501      	movs	r5, #1
    1eb4:	4329      	orrs	r1, r5
    1eb6:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1eb8:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1eba:	3816      	subs	r0, #22
    1ebc:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1ebe:	270f      	movs	r7, #15
    1ec0:	43b9      	bics	r1, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1ec2:	2702      	movs	r7, #2
    1ec4:	4339      	orrs	r1, r7
    1ec6:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1ec8:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1eca:	214d      	movs	r1, #77	; 0x4d
    1ecc:	5c5f      	ldrb	r7, [r3, r1]
    1ece:	4397      	bics	r7, r2
    1ed0:	545f      	strb	r7, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ed2:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ed4:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1ed6:	432a      	orrs	r2, r5
    1ed8:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1eda:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1edc:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1ede:	393e      	subs	r1, #62	; 0x3e
    1ee0:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
    1ee2:	2120      	movs	r1, #32
    1ee4:	430a      	orrs	r2, r1
    1ee6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1ee8:	541a      	strb	r2, [r3, r0]
	i2c_m_sync_get_io_descriptor(&EXT_I2C, &ext_i2c);
    1eea:	490b      	ldr	r1, [pc, #44]	; (1f18 <EXT_I2C_init+0x98>)
    1eec:	0020      	movs	r0, r4
    1eee:	f7fe fa4f 	bl	390 <i2c_m_sync_get_io_descriptor>
	i2c_m_sync_enable(&EXT_I2C);
    1ef2:	0020      	movs	r0, r4
    1ef4:	f7fe fa48 	bl	388 <i2c_m_sync_enable>
}
    1ef8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1efa:	46c0      	nop			; (mov r8, r8)
    1efc:	40000400 	.word	0x40000400
    1f00:	40000c00 	.word	0x40000c00
    1f04:	0000400f 	.word	0x0000400f
    1f08:	0000430c 	.word	0x0000430c
    1f0c:	20000c10 	.word	0x20000c10
    1f10:	42001000 	.word	0x42001000
    1f14:	41004400 	.word	0x41004400
    1f18:	20000be4 	.word	0x20000be4

00001f1c <PWM_init>:
void PWM_init(void){
    1f1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1f1e:	46de      	mov	lr, fp
    1f20:	4657      	mov	r7, sl
    1f22:	464e      	mov	r6, r9
    1f24:	4645      	mov	r5, r8
    1f26:	b5e0      	push	{r5, r6, r7, lr}
    1f28:	4d2d      	ldr	r5, [pc, #180]	; (1fe0 <PWM_init+0xc4>)
    1f2a:	6a2a      	ldr	r2, [r5, #32]
    1f2c:	2380      	movs	r3, #128	; 0x80
    1f2e:	01db      	lsls	r3, r3, #7
    1f30:	4313      	orrs	r3, r2
    1f32:	622b      	str	r3, [r5, #32]
    1f34:	4b2b      	ldr	r3, [pc, #172]	; (1fe4 <PWM_init+0xc8>)
    1f36:	469a      	mov	sl, r3
    1f38:	4b2b      	ldr	r3, [pc, #172]	; (1fe8 <PWM_init+0xcc>)
    1f3a:	469b      	mov	fp, r3
    1f3c:	4653      	mov	r3, sl
    1f3e:	465a      	mov	r2, fp
    1f40:	805a      	strh	r2, [r3, #2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f42:	4c2a      	ldr	r4, [pc, #168]	; (1fec <PWM_init+0xd0>)
    1f44:	22d1      	movs	r2, #209	; 0xd1
    1f46:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f48:	2101      	movs	r1, #1
    1f4a:	4689      	mov	r9, r1
    1f4c:	438b      	bics	r3, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1f4e:	4688      	mov	r8, r1
    1f50:	4641      	mov	r1, r8
    1f52:	430b      	orrs	r3, r1
    1f54:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1f56:	54a3      	strb	r3, [r4, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1f58:	3a19      	subs	r2, #25
    1f5a:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1f5c:	270f      	movs	r7, #15
    1f5e:	403b      	ands	r3, r7
	tmp |= PORT_PMUX_PMUXO(data);
    1f60:	2640      	movs	r6, #64	; 0x40
    1f62:	4333      	orrs	r3, r6
    1f64:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1f66:	54a3      	strb	r3, [r4, r2]
	pwm_init(&PWM_0, TC6, _tc_get_pwm());
    1f68:	f7ff fc94 	bl	1894 <_tc_get_pwm>
    1f6c:	0002      	movs	r2, r0
    1f6e:	4920      	ldr	r1, [pc, #128]	; (1ff0 <PWM_init+0xd4>)
    1f70:	4820      	ldr	r0, [pc, #128]	; (1ff4 <PWM_init+0xd8>)
    1f72:	f7fe fa51 	bl	418 <pwm_init>
    1f76:	6a2a      	ldr	r2, [r5, #32]
    1f78:	2380      	movs	r3, #128	; 0x80
    1f7a:	021b      	lsls	r3, r3, #8
    1f7c:	4313      	orrs	r3, r2
    1f7e:	622b      	str	r3, [r5, #32]
    1f80:	4653      	mov	r3, sl
    1f82:	465a      	mov	r2, fp
    1f84:	805a      	strh	r2, [r3, #2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f86:	2255      	movs	r2, #85	; 0x55
    1f88:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f8a:	4649      	mov	r1, r9
    1f8c:	438b      	bics	r3, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1f8e:	4641      	mov	r1, r8
    1f90:	430b      	orrs	r3, r1
    1f92:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1f94:	54a3      	strb	r3, [r4, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1f96:	3a1b      	subs	r2, #27
    1f98:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1f9a:	401f      	ands	r7, r3
	tmp |= PORT_PMUX_PMUXO(data);
    1f9c:	433e      	orrs	r6, r7
    1f9e:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1fa0:	54a6      	strb	r6, [r4, r2]
	pwm_init(&PWM_1, TC7, _tc_get_pwm());
    1fa2:	f7ff fc77 	bl	1894 <_tc_get_pwm>
    1fa6:	0002      	movs	r2, r0
    1fa8:	4c13      	ldr	r4, [pc, #76]	; (1ff8 <PWM_init+0xdc>)
    1faa:	4914      	ldr	r1, [pc, #80]	; (1ffc <PWM_init+0xe0>)
    1fac:	0020      	movs	r0, r4
    1fae:	f7fe fa33 	bl	418 <pwm_init>
	pwm_set_parameters(&PWM_0, 5000, 0);
    1fb2:	4d13      	ldr	r5, [pc, #76]	; (2000 <STACK_SIZE>)
    1fb4:	2200      	movs	r2, #0
    1fb6:	0029      	movs	r1, r5
    1fb8:	480e      	ldr	r0, [pc, #56]	; (1ff4 <PWM_init+0xd8>)
    1fba:	f7fe fa65 	bl	488 <pwm_set_parameters>
	pwm_set_parameters(&PWM_1, 5000, 0);
    1fbe:	2200      	movs	r2, #0
    1fc0:	0029      	movs	r1, r5
    1fc2:	0020      	movs	r0, r4
    1fc4:	f7fe fa60 	bl	488 <pwm_set_parameters>
	pwm_enable(&PWM_0);
    1fc8:	480a      	ldr	r0, [pc, #40]	; (1ff4 <PWM_init+0xd8>)
    1fca:	f7fe fa45 	bl	458 <pwm_enable>
	pwm_enable(&PWM_1);
    1fce:	0020      	movs	r0, r4
    1fd0:	f7fe fa42 	bl	458 <pwm_enable>
}
    1fd4:	bc3c      	pop	{r2, r3, r4, r5}
    1fd6:	4690      	mov	r8, r2
    1fd8:	4699      	mov	r9, r3
    1fda:	46a2      	mov	sl, r4
    1fdc:	46ab      	mov	fp, r5
    1fde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fe0:	40000400 	.word	0x40000400
    1fe4:	40000c00 	.word	0x40000c00
    1fe8:	00004016 	.word	0x00004016
    1fec:	41004400 	.word	0x41004400
    1ff0:	42003800 	.word	0x42003800
    1ff4:	20000af4 	.word	0x20000af4
    1ff8:	20000b50 	.word	0x20000b50
    1ffc:	42003c00 	.word	0x42003c00
    2000:	00001388 	.word	0x00001388

00002004 <DEBUG_Serial_init>:
void DEBUG_Serial_init(void){
    2004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2006:	4a19      	ldr	r2, [pc, #100]	; (206c <DEBUG_Serial_init+0x68>)
    2008:	6a13      	ldr	r3, [r2, #32]
    200a:	2140      	movs	r1, #64	; 0x40
    200c:	430b      	orrs	r3, r1
    200e:	6213      	str	r3, [r2, #32]
    2010:	4a17      	ldr	r2, [pc, #92]	; (2070 <DEBUG_Serial_init+0x6c>)
    2012:	4b18      	ldr	r3, [pc, #96]	; (2074 <DEBUG_Serial_init+0x70>)
    2014:	805a      	strh	r2, [r3, #2]
	usart_sync_init(&DEBUG_SERIAL, SERCOM4, (void *)NULL);
    2016:	2200      	movs	r2, #0
    2018:	4917      	ldr	r1, [pc, #92]	; (2078 <DEBUG_Serial_init+0x74>)
    201a:	4818      	ldr	r0, [pc, #96]	; (207c <DEBUG_Serial_init+0x78>)
    201c:	f7fe fc22 	bl	864 <usart_sync_init>
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2020:	4b17      	ldr	r3, [pc, #92]	; (2080 <DEBUG_Serial_init+0x7c>)
    2022:	21cc      	movs	r1, #204	; 0xcc
    2024:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2026:	2401      	movs	r4, #1
    2028:	43a2      	bics	r2, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    202a:	2701      	movs	r7, #1
    202c:	433a      	orrs	r2, r7
    202e:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2030:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2032:	22b6      	movs	r2, #182	; 0xb6
    2034:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    2036:	260f      	movs	r6, #15
    2038:	43b0      	bics	r0, r6
	tmp |= PORT_PMUX_PMUXE(data);
    203a:	2502      	movs	r5, #2
    203c:	4328      	orrs	r0, r5
    203e:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2040:	5498      	strb	r0, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2042:	3218      	adds	r2, #24
    2044:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2046:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2048:	4339      	orrs	r1, r7
    204a:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    204c:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    204e:	21b7      	movs	r1, #183	; 0xb7
    2050:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    2052:	43b2      	bics	r2, r6
	tmp |= PORT_PMUX_PMUXE(data);
    2054:	432a      	orrs	r2, r5
    2056:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2058:	545a      	strb	r2, [r3, r1]
	usart_sync_get_io_descriptor(&DEBUG_SERIAL, &debug_serial);
    205a:	490a      	ldr	r1, [pc, #40]	; (2084 <DEBUG_Serial_init+0x80>)
    205c:	4807      	ldr	r0, [pc, #28]	; (207c <DEBUG_Serial_init+0x78>)
    205e:	f7fe fc35 	bl	8cc <usart_sync_get_io_descriptor>
	usart_sync_enable(&DEBUG_SERIAL);
    2062:	4806      	ldr	r0, [pc, #24]	; (207c <DEBUG_Serial_init+0x78>)
    2064:	f7fe fc20 	bl	8a8 <usart_sync_enable>
}
    2068:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    206a:	46c0      	nop			; (mov r8, r8)
    206c:	40000400 	.word	0x40000400
    2070:	00004011 	.word	0x00004011
    2074:	40000c00 	.word	0x40000c00
    2078:	42001800 	.word	0x42001800
    207c:	20000be8 	.word	0x20000be8
    2080:	41004400 	.word	0x41004400
    2084:	20000be0 	.word	0x20000be0

00002088 <mcu_init>:
{
    2088:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
    208a:	f7fe fc85 	bl	998 <_init_chip>
	gpio_init();
    208e:	f7ff fc49 	bl	1924 <gpio_init>
	ETH_SPI_init();
    2092:	f7ff fd9f 	bl	1bd4 <ETH_SPI_init>
	EXT_SPI_init();
    2096:	f7ff fe6f 	bl	1d78 <EXT_SPI_init>
	EXT_I2C_init();
    209a:	f7ff fef1 	bl	1e80 <EXT_I2C_init>
	PWM_init();
    209e:	f7ff ff3d 	bl	1f1c <PWM_init>
	DEBUG_Serial_init();
    20a2:	f7ff ffaf 	bl	2004 <DEBUG_Serial_init>
	ext_irq_register(ETH_INT, ETH_Handler);
    20a6:	4904      	ldr	r1, [pc, #16]	; (20b8 <mcu_init+0x30>)
    20a8:	2028      	movs	r0, #40	; 0x28
    20aa:	f7fe f8b7 	bl	21c <ext_irq_register>
	TIMER_IRQ_init();
    20ae:	f7ff fc0b 	bl	18c8 <TIMER_IRQ_init>
	EXT_IRG_init();
    20b2:	f7ff fd61 	bl	1b78 <EXT_IRG_init>
}
    20b6:	bd10      	pop	{r4, pc}
    20b8:	000018b9 	.word	0x000018b9

000020bc <close>:
   while(getSn_SR(sn) == SOCK_CLOSED);
   return (int8_t)sn;
}	   

int8_t close(uint8_t sn)
{
    20bc:	b570      	push	{r4, r5, r6, lr}
    20be:	0006      	movs	r6, r0
	CHECK_SOCKNUM();
    20c0:	2808      	cmp	r0, #8
    20c2:	d82f      	bhi.n	2124 <close+0x68>
      while(getSn_CR(sn) != 0);
      while(getSn_SR(sn) != SOCK_UDP);
      sendto(sn,destip,1,destip,0x3000); // send the dummy data to an unknown destination(0.0.0.1).
   };   
#endif 
	setSn_CR(sn,Sn_CR_CLOSE);
    20c4:	0084      	lsls	r4, r0, #2
    20c6:	3401      	adds	r4, #1
    20c8:	00e4      	lsls	r4, r4, #3
    20ca:	1c65      	adds	r5, r4, #1
    20cc:	35ff      	adds	r5, #255	; 0xff
    20ce:	2110      	movs	r1, #16
    20d0:	0028      	movs	r0, r5
    20d2:	f000 fd6b 	bl	2bac <WIZCHIP_WRITE>
   /* wait to process the command... */
	while( getSn_CR(sn) );
    20d6:	0028      	movs	r0, r5
    20d8:	f000 fd36 	bl	2b48 <WIZCHIP_READ>
    20dc:	2800      	cmp	r0, #0
    20de:	d1fa      	bne.n	20d6 <close+0x1a>
	/* clear all interrupt of the socket. */
	setSn_IR(sn, 0xFF);
    20e0:	2380      	movs	r3, #128	; 0x80
    20e2:	009b      	lsls	r3, r3, #2
    20e4:	18e0      	adds	r0, r4, r3
    20e6:	211f      	movs	r1, #31
    20e8:	f000 fd60 	bl	2bac <WIZCHIP_WRITE>
	//A20150401 : Release the sock_io_mode of socket n.
	sock_io_mode &= ~(1<<sn);
    20ec:	2301      	movs	r3, #1
    20ee:	40b3      	lsls	r3, r6
    20f0:	43db      	mvns	r3, r3
    20f2:	b21b      	sxth	r3, r3
    20f4:	490d      	ldr	r1, [pc, #52]	; (212c <close+0x70>)
    20f6:	880a      	ldrh	r2, [r1, #0]
    20f8:	401a      	ands	r2, r3
    20fa:	800a      	strh	r2, [r1, #0]
	//
	sock_is_sending &= ~(1<<sn);
    20fc:	490c      	ldr	r1, [pc, #48]	; (2130 <close+0x74>)
    20fe:	880a      	ldrh	r2, [r1, #0]
    2100:	4013      	ands	r3, r2
    2102:	800b      	strh	r3, [r1, #0]
	sock_remained_size[sn] = 0;
    2104:	0072      	lsls	r2, r6, #1
    2106:	2100      	movs	r1, #0
    2108:	4b0a      	ldr	r3, [pc, #40]	; (2134 <close+0x78>)
    210a:	52d1      	strh	r1, [r2, r3]
	sock_pack_info[sn] = 0;
    210c:	4b0a      	ldr	r3, [pc, #40]	; (2138 <close+0x7c>)
    210e:	2200      	movs	r2, #0
    2110:	559a      	strb	r2, [r3, r6]
	while(getSn_SR(sn) != SOCK_CLOSED);
    2112:	23c0      	movs	r3, #192	; 0xc0
    2114:	009b      	lsls	r3, r3, #2
    2116:	18e0      	adds	r0, r4, r3
    2118:	f000 fd16 	bl	2b48 <WIZCHIP_READ>
    211c:	2800      	cmp	r0, #0
    211e:	d1f8      	bne.n	2112 <close+0x56>
	return SOCK_OK;
    2120:	3001      	adds	r0, #1
}
    2122:	bd70      	pop	{r4, r5, r6, pc}
	CHECK_SOCKNUM();
    2124:	2001      	movs	r0, #1
    2126:	4240      	negs	r0, r0
    2128:	e7fb      	b.n	2122 <close+0x66>
    212a:	46c0      	nop			; (mov r8, r8)
    212c:	20000a90 	.word	0x20000a90
    2130:	20000a92 	.word	0x20000a92
    2134:	20000a9c 	.word	0x20000a9c
    2138:	20000a94 	.word	0x20000a94

0000213c <socket>:
{
    213c:	b5f0      	push	{r4, r5, r6, r7, lr}
    213e:	46c6      	mov	lr, r8
    2140:	b500      	push	{lr}
    2142:	b084      	sub	sp, #16
    2144:	0005      	movs	r5, r0
    2146:	000e      	movs	r6, r1
    2148:	4690      	mov	r8, r2
    214a:	001f      	movs	r7, r3
	CHECK_SOCKNUM();
    214c:	2808      	cmp	r0, #8
    214e:	d900      	bls.n	2152 <socket+0x16>
    2150:	e092      	b.n	2278 <socket+0x13c>
	switch(protocol)
    2152:	2901      	cmp	r1, #1
    2154:	d069      	beq.n	222a <socket+0xee>
    2156:	2900      	cmp	r1, #0
    2158:	d100      	bne.n	215c <socket+0x20>
    215a:	e090      	b.n	227e <socket+0x142>
    215c:	2904      	cmp	r1, #4
    215e:	d900      	bls.n	2162 <socket+0x26>
    2160:	e08d      	b.n	227e <socket+0x142>
	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
    2162:	077b      	lsls	r3, r7, #29
    2164:	d500      	bpl.n	2168 <socket+0x2c>
    2166:	e08d      	b.n	2284 <socket+0x148>
	if(flag != 0)
    2168:	2f00      	cmp	r7, #0
    216a:	d004      	beq.n	2176 <socket+0x3a>
   	switch(protocol)
    216c:	2e01      	cmp	r6, #1
    216e:	d069      	beq.n	2244 <socket+0x108>
    2170:	2e02      	cmp	r6, #2
    2172:	d100      	bne.n	2176 <socket+0x3a>
    2174:	e06d      	b.n	2252 <socket+0x116>
	close(sn);
    2176:	0028      	movs	r0, r5
    2178:	f7ff ffa0 	bl	20bc <close>
	   setSn_MR(sn, (protocol | (flag & 0xF0)));
    217c:	00ac      	lsls	r4, r5, #2
    217e:	3401      	adds	r4, #1
    2180:	00e4      	lsls	r4, r4, #3
    2182:	230f      	movs	r3, #15
    2184:	0039      	movs	r1, r7
    2186:	4399      	bics	r1, r3
    2188:	b249      	sxtb	r1, r1
    218a:	4331      	orrs	r1, r6
    218c:	b2c9      	uxtb	r1, r1
    218e:	0020      	movs	r0, r4
    2190:	f000 fd0c 	bl	2bac <WIZCHIP_WRITE>
	if(!port)
    2194:	4643      	mov	r3, r8
    2196:	2b00      	cmp	r3, #0
    2198:	d108      	bne.n	21ac <socket+0x70>
	   port = sock_any_port++;
    219a:	4a3d      	ldr	r2, [pc, #244]	; (2290 <socket+0x154>)
    219c:	8813      	ldrh	r3, [r2, #0]
    219e:	4698      	mov	r8, r3
    21a0:	3301      	adds	r3, #1
    21a2:	b29b      	uxth	r3, r3
    21a4:	8013      	strh	r3, [r2, #0]
	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
    21a6:	4a3b      	ldr	r2, [pc, #236]	; (2294 <socket+0x158>)
    21a8:	4293      	cmp	r3, r2
    21aa:	d061      	beq.n	2270 <socket+0x134>
   setSn_PORT(sn,port);	
    21ac:	2380      	movs	r3, #128	; 0x80
    21ae:	00db      	lsls	r3, r3, #3
    21b0:	18e0      	adds	r0, r4, r3
    21b2:	4643      	mov	r3, r8
    21b4:	0a19      	lsrs	r1, r3, #8
    21b6:	f000 fcf9 	bl	2bac <WIZCHIP_WRITE>
    21ba:	4643      	mov	r3, r8
    21bc:	466a      	mov	r2, sp
    21be:	71d3      	strb	r3, [r2, #7]
    21c0:	79d1      	ldrb	r1, [r2, #7]
    21c2:	23a0      	movs	r3, #160	; 0xa0
    21c4:	00db      	lsls	r3, r3, #3
    21c6:	18e0      	adds	r0, r4, r3
    21c8:	f000 fcf0 	bl	2bac <WIZCHIP_WRITE>
   setSn_CR(sn,Sn_CR_OPEN);
    21cc:	1c66      	adds	r6, r4, #1
    21ce:	36ff      	adds	r6, #255	; 0xff
    21d0:	2101      	movs	r1, #1
    21d2:	0030      	movs	r0, r6
    21d4:	f000 fcea 	bl	2bac <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    21d8:	0030      	movs	r0, r6
    21da:	f000 fcb5 	bl	2b48 <WIZCHIP_READ>
    21de:	2800      	cmp	r0, #0
    21e0:	d1fa      	bne.n	21d8 <socket+0x9c>
   sock_io_mode &= ~(1 <<sn);
    21e2:	2201      	movs	r2, #1
    21e4:	40aa      	lsls	r2, r5
    21e6:	43d2      	mvns	r2, r2
    21e8:	b212      	sxth	r2, r2
    21ea:	482b      	ldr	r0, [pc, #172]	; (2298 <socket+0x15c>)
    21ec:	8803      	ldrh	r3, [r0, #0]
    21ee:	4013      	ands	r3, r2
    21f0:	b21b      	sxth	r3, r3
	sock_io_mode |= ((flag & SF_IO_NONBLOCK) << sn);   
    21f2:	2101      	movs	r1, #1
    21f4:	400f      	ands	r7, r1
    21f6:	40af      	lsls	r7, r5
    21f8:	433b      	orrs	r3, r7
    21fa:	8003      	strh	r3, [r0, #0]
   sock_is_sending &= ~(1<<sn);
    21fc:	4927      	ldr	r1, [pc, #156]	; (229c <socket+0x160>)
    21fe:	880b      	ldrh	r3, [r1, #0]
    2200:	401a      	ands	r2, r3
    2202:	800a      	strh	r2, [r1, #0]
   sock_remained_size[sn] = 0;
    2204:	006b      	lsls	r3, r5, #1
    2206:	2100      	movs	r1, #0
    2208:	4a25      	ldr	r2, [pc, #148]	; (22a0 <socket+0x164>)
    220a:	5299      	strh	r1, [r3, r2]
   sock_pack_info[sn] = PACK_COMPLETED;
    220c:	4b25      	ldr	r3, [pc, #148]	; (22a4 <socket+0x168>)
    220e:	2200      	movs	r2, #0
    2210:	555a      	strb	r2, [r3, r5]
   while(getSn_SR(sn) == SOCK_CLOSED);
    2212:	23c0      	movs	r3, #192	; 0xc0
    2214:	009b      	lsls	r3, r3, #2
    2216:	18e0      	adds	r0, r4, r3
    2218:	f000 fc96 	bl	2b48 <WIZCHIP_READ>
    221c:	2800      	cmp	r0, #0
    221e:	d0f8      	beq.n	2212 <socket+0xd6>
   return (int8_t)sn;
    2220:	b268      	sxtb	r0, r5
}	   
    2222:	b004      	add	sp, #16
    2224:	bc04      	pop	{r2}
    2226:	4690      	mov	r8, r2
    2228:	bdf0      	pop	{r4, r5, r6, r7, pc}
            getSIPR((uint8_t*)&taddr);
    222a:	2204      	movs	r2, #4
    222c:	a903      	add	r1, sp, #12
    222e:	20f0      	movs	r0, #240	; 0xf0
    2230:	0100      	lsls	r0, r0, #4
    2232:	f000 fceb 	bl	2c0c <WIZCHIP_READ_BUF>
            if(taddr == 0) return SOCKERR_SOCKINIT;
    2236:	9b03      	ldr	r3, [sp, #12]
    2238:	2b00      	cmp	r3, #0
    223a:	d000      	beq.n	223e <socket+0x102>
    223c:	e791      	b.n	2162 <socket+0x26>
    223e:	2003      	movs	r0, #3
    2240:	4240      	negs	r0, r0
    2242:	e7ee      	b.n	2222 <socket+0xe6>
   		     if((flag & (SF_TCP_NODELAY|SF_IO_NONBLOCK))==0) return SOCKERR_SOCKFLAG;
    2244:	2321      	movs	r3, #33	; 0x21
    2246:	423b      	tst	r3, r7
    2248:	d000      	beq.n	224c <socket+0x110>
    224a:	e794      	b.n	2176 <socket+0x3a>
    224c:	2006      	movs	r0, #6
    224e:	4240      	negs	r0, r0
    2250:	e7e7      	b.n	2222 <socket+0xe6>
   	      if(flag & SF_IGMP_VER2)
    2252:	06bb      	lsls	r3, r7, #26
    2254:	d502      	bpl.n	225c <socket+0x120>
   	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
    2256:	b27b      	sxtb	r3, r7
    2258:	2b00      	cmp	r3, #0
    225a:	da16      	bge.n	228a <socket+0x14e>
      	      if(flag & SF_UNI_BLOCK)
    225c:	06fb      	lsls	r3, r7, #27
    225e:	d400      	bmi.n	2262 <socket+0x126>
    2260:	e789      	b.n	2176 <socket+0x3a>
      	         if((flag & SF_MULTI_ENABLE) == 0) return SOCKERR_SOCKFLAG;
    2262:	b27b      	sxtb	r3, r7
    2264:	2b00      	cmp	r3, #0
    2266:	da00      	bge.n	226a <socket+0x12e>
    2268:	e785      	b.n	2176 <socket+0x3a>
    226a:	2006      	movs	r0, #6
    226c:	4240      	negs	r0, r0
    226e:	e7d8      	b.n	2222 <socket+0xe6>
	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
    2270:	4a0d      	ldr	r2, [pc, #52]	; (22a8 <socket+0x16c>)
    2272:	4b07      	ldr	r3, [pc, #28]	; (2290 <socket+0x154>)
    2274:	801a      	strh	r2, [r3, #0]
    2276:	e799      	b.n	21ac <socket+0x70>
	CHECK_SOCKNUM();
    2278:	2001      	movs	r0, #1
    227a:	4240      	negs	r0, r0
    227c:	e7d1      	b.n	2222 <socket+0xe6>
         return SOCKERR_SOCKMODE;
    227e:	2005      	movs	r0, #5
    2280:	4240      	negs	r0, r0
    2282:	e7ce      	b.n	2222 <socket+0xe6>
	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
    2284:	2006      	movs	r0, #6
    2286:	4240      	negs	r0, r0
    2288:	e7cb      	b.n	2222 <socket+0xe6>
   	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
    228a:	2006      	movs	r0, #6
    228c:	4240      	negs	r0, r0
    228e:	e7c8      	b.n	2222 <socket+0xe6>
    2290:	20000028 	.word	0x20000028
    2294:	0000fff0 	.word	0x0000fff0
    2298:	20000a90 	.word	0x20000a90
    229c:	20000a92 	.word	0x20000a92
    22a0:	20000a9c 	.word	0x20000a9c
    22a4:	20000a94 	.word	0x20000a94
    22a8:	ffffc000 	.word	0xffffc000

000022ac <listen>:

int8_t listen(uint8_t sn)
{
    22ac:	b570      	push	{r4, r5, r6, lr}
    22ae:	0006      	movs	r6, r0
	CHECK_SOCKNUM();
    22b0:	2808      	cmp	r0, #8
    22b2:	d829      	bhi.n	2308 <listen+0x5c>
   CHECK_SOCKMODE(Sn_MR_TCP);
    22b4:	0084      	lsls	r4, r0, #2
    22b6:	3401      	adds	r4, #1
    22b8:	00e4      	lsls	r4, r4, #3
    22ba:	0020      	movs	r0, r4
    22bc:	f000 fc44 	bl	2b48 <WIZCHIP_READ>
    22c0:	230f      	movs	r3, #15
    22c2:	4018      	ands	r0, r3
    22c4:	2801      	cmp	r0, #1
    22c6:	d122      	bne.n	230e <listen+0x62>
	CHECK_SOCKINIT();
    22c8:	23c0      	movs	r3, #192	; 0xc0
    22ca:	009b      	lsls	r3, r3, #2
    22cc:	18e5      	adds	r5, r4, r3
    22ce:	0028      	movs	r0, r5
    22d0:	f000 fc3a 	bl	2b48 <WIZCHIP_READ>
    22d4:	2813      	cmp	r0, #19
    22d6:	d11d      	bne.n	2314 <listen+0x68>
	setSn_CR(sn,Sn_CR_LISTEN);
    22d8:	3401      	adds	r4, #1
    22da:	34ff      	adds	r4, #255	; 0xff
    22dc:	2102      	movs	r1, #2
    22de:	0020      	movs	r0, r4
    22e0:	f000 fc64 	bl	2bac <WIZCHIP_WRITE>
	while(getSn_CR(sn));
    22e4:	0020      	movs	r0, r4
    22e6:	f000 fc2f 	bl	2b48 <WIZCHIP_READ>
    22ea:	2800      	cmp	r0, #0
    22ec:	d1fa      	bne.n	22e4 <listen+0x38>
   while(getSn_SR(sn) != SOCK_LISTEN)
    22ee:	0028      	movs	r0, r5
    22f0:	f000 fc2a 	bl	2b48 <WIZCHIP_READ>
    22f4:	2814      	cmp	r0, #20
    22f6:	d101      	bne.n	22fc <listen+0x50>
   {
         close(sn);
         return SOCKERR_SOCKCLOSED;
   }
   return SOCK_OK;
    22f8:	3813      	subs	r0, #19
}
    22fa:	bd70      	pop	{r4, r5, r6, pc}
         close(sn);
    22fc:	0030      	movs	r0, r6
    22fe:	f7ff fedd 	bl	20bc <close>
         return SOCKERR_SOCKCLOSED;
    2302:	2004      	movs	r0, #4
    2304:	4240      	negs	r0, r0
    2306:	e7f8      	b.n	22fa <listen+0x4e>
	CHECK_SOCKNUM();
    2308:	2001      	movs	r0, #1
    230a:	4240      	negs	r0, r0
    230c:	e7f5      	b.n	22fa <listen+0x4e>
   CHECK_SOCKMODE(Sn_MR_TCP);
    230e:	2005      	movs	r0, #5
    2310:	4240      	negs	r0, r0
    2312:	e7f2      	b.n	22fa <listen+0x4e>
	CHECK_SOCKINIT();
    2314:	2003      	movs	r0, #3
    2316:	4240      	negs	r0, r0
    2318:	e7ef      	b.n	22fa <listen+0x4e>
	...

0000231c <disconnect>:
   
   return SOCK_OK;
}

int8_t disconnect(uint8_t sn)
{
    231c:	b570      	push	{r4, r5, r6, lr}
    231e:	0006      	movs	r6, r0
   CHECK_SOCKNUM();
    2320:	2808      	cmp	r0, #8
    2322:	d836      	bhi.n	2392 <disconnect+0x76>
   CHECK_SOCKMODE(Sn_MR_TCP);
    2324:	0084      	lsls	r4, r0, #2
    2326:	3401      	adds	r4, #1
    2328:	00e4      	lsls	r4, r4, #3
    232a:	0020      	movs	r0, r4
    232c:	f000 fc0c 	bl	2b48 <WIZCHIP_READ>
    2330:	230f      	movs	r3, #15
    2332:	4018      	ands	r0, r3
    2334:	2801      	cmp	r0, #1
    2336:	d12f      	bne.n	2398 <disconnect+0x7c>
	setSn_CR(sn,Sn_CR_DISCON);
    2338:	1c65      	adds	r5, r4, #1
    233a:	35ff      	adds	r5, #255	; 0xff
    233c:	2108      	movs	r1, #8
    233e:	0028      	movs	r0, r5
    2340:	f000 fc34 	bl	2bac <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn));
    2344:	0028      	movs	r0, r5
    2346:	f000 fbff 	bl	2b48 <WIZCHIP_READ>
    234a:	2800      	cmp	r0, #0
    234c:	d1fa      	bne.n	2344 <disconnect+0x28>
	sock_is_sending &= ~(1<<sn);
    234e:	2201      	movs	r2, #1
    2350:	0010      	movs	r0, r2
    2352:	40b0      	lsls	r0, r6
    2354:	4913      	ldr	r1, [pc, #76]	; (23a4 <disconnect+0x88>)
    2356:	880b      	ldrh	r3, [r1, #0]
    2358:	4383      	bics	r3, r0
    235a:	800b      	strh	r3, [r1, #0]
   if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
    235c:	4b12      	ldr	r3, [pc, #72]	; (23a8 <disconnect+0x8c>)
    235e:	881b      	ldrh	r3, [r3, #0]
    2360:	4133      	asrs	r3, r6
    2362:	421a      	tst	r2, r3
    2364:	d11b      	bne.n	239e <disconnect+0x82>
	while(getSn_SR(sn) != SOCK_CLOSED)
    2366:	23c0      	movs	r3, #192	; 0xc0
    2368:	009b      	lsls	r3, r3, #2
    236a:	18e0      	adds	r0, r4, r3
    236c:	f000 fbec 	bl	2b48 <WIZCHIP_READ>
    2370:	2800      	cmp	r0, #0
    2372:	d00c      	beq.n	238e <disconnect+0x72>
	{
	   if(getSn_IR(sn) & Sn_IR_TIMEOUT)
    2374:	2380      	movs	r3, #128	; 0x80
    2376:	009b      	lsls	r3, r3, #2
    2378:	18e0      	adds	r0, r4, r3
    237a:	f000 fbe5 	bl	2b48 <WIZCHIP_READ>
    237e:	0703      	lsls	r3, r0, #28
    2380:	d5f1      	bpl.n	2366 <disconnect+0x4a>
	   {
	      close(sn);
    2382:	0030      	movs	r0, r6
    2384:	f7ff fe9a 	bl	20bc <close>
	      return SOCKERR_TIMEOUT;
    2388:	200d      	movs	r0, #13
    238a:	4240      	negs	r0, r0
    238c:	e008      	b.n	23a0 <disconnect+0x84>
	   }
	}
	return SOCK_OK;
    238e:	3001      	adds	r0, #1
    2390:	e006      	b.n	23a0 <disconnect+0x84>
   CHECK_SOCKNUM();
    2392:	2001      	movs	r0, #1
    2394:	4240      	negs	r0, r0
    2396:	e003      	b.n	23a0 <disconnect+0x84>
   CHECK_SOCKMODE(Sn_MR_TCP);
    2398:	2005      	movs	r0, #5
    239a:	4240      	negs	r0, r0
    239c:	e000      	b.n	23a0 <disconnect+0x84>
   if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
    239e:	2000      	movs	r0, #0
}
    23a0:	bd70      	pop	{r4, r5, r6, pc}
    23a2:	46c0      	nop			; (mov r8, r8)
    23a4:	20000a92 	.word	0x20000a92
    23a8:	20000a90 	.word	0x20000a90

000023ac <send>:

int32_t send(uint8_t sn, uint8_t * buf, uint16_t len)
{
    23ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    23ae:	46c6      	mov	lr, r8
    23b0:	b500      	push	{lr}
    23b2:	b082      	sub	sp, #8
    23b4:	0004      	movs	r4, r0
    23b6:	9101      	str	r1, [sp, #4]
    23b8:	0017      	movs	r7, r2
   uint8_t tmp=0;
   uint16_t freesize=0;
   
   CHECK_SOCKNUM();
    23ba:	2808      	cmp	r0, #8
    23bc:	d900      	bls.n	23c0 <send+0x14>
    23be:	e080      	b.n	24c2 <send+0x116>
   CHECK_SOCKMODE(Sn_MR_TCP);
    23c0:	0005      	movs	r5, r0
    23c2:	0083      	lsls	r3, r0, #2
    23c4:	3301      	adds	r3, #1
    23c6:	00db      	lsls	r3, r3, #3
    23c8:	4698      	mov	r8, r3
    23ca:	0018      	movs	r0, r3
    23cc:	f000 fbbc 	bl	2b48 <WIZCHIP_READ>
    23d0:	230f      	movs	r3, #15
    23d2:	4018      	ands	r0, r3
    23d4:	2801      	cmp	r0, #1
    23d6:	d000      	beq.n	23da <send+0x2e>
    23d8:	e076      	b.n	24c8 <send+0x11c>
   CHECK_SOCKDATA();
    23da:	2f00      	cmp	r7, #0
    23dc:	d100      	bne.n	23e0 <send+0x34>
    23de:	e076      	b.n	24ce <send+0x122>
   tmp = getSn_SR(sn);
    23e0:	23c0      	movs	r3, #192	; 0xc0
    23e2:	009b      	lsls	r3, r3, #2
    23e4:	4443      	add	r3, r8
    23e6:	9300      	str	r3, [sp, #0]
    23e8:	0018      	movs	r0, r3
    23ea:	f000 fbad 	bl	2b48 <WIZCHIP_READ>
   if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
    23ee:	2817      	cmp	r0, #23
    23f0:	d002      	beq.n	23f8 <send+0x4c>
    23f2:	281c      	cmp	r0, #28
    23f4:	d000      	beq.n	23f8 <send+0x4c>
    23f6:	e06d      	b.n	24d4 <send+0x128>
   if( sock_is_sending & (1<<sn) )
    23f8:	4b38      	ldr	r3, [pc, #224]	; (24dc <send+0x130>)
    23fa:	881b      	ldrh	r3, [r3, #0]
    23fc:	4123      	asrs	r3, r4
    23fe:	07db      	lsls	r3, r3, #31
    2400:	d518      	bpl.n	2434 <send+0x88>
   {
      tmp = getSn_IR(sn);
    2402:	2680      	movs	r6, #128	; 0x80
    2404:	00b6      	lsls	r6, r6, #2
    2406:	4446      	add	r6, r8
    2408:	0030      	movs	r0, r6
    240a:	f000 fb9d 	bl	2b48 <WIZCHIP_READ>
      if(tmp & Sn_IR_SENDOK)
    240e:	06c3      	lsls	r3, r0, #27
    2410:	d406      	bmi.n	2420 <send+0x74>
               return SOCK_BUSY;
            }
         #endif
         sock_is_sending &= ~(1<<sn);         
      }
      else if(tmp & Sn_IR_TIMEOUT)
    2412:	0703      	lsls	r3, r0, #28
    2414:	d41a      	bmi.n	244c <send+0xa0>
      {
         close(sn);
         return SOCKERR_TIMEOUT;
      }
      else return SOCK_BUSY;
    2416:	2000      	movs	r0, #0
   while(getSn_CR(sn));
   sock_is_sending |= (1 << sn);
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
}
    2418:	b002      	add	sp, #8
    241a:	bc04      	pop	{r2}
    241c:	4690      	mov	r8, r2
    241e:	bdf0      	pop	{r4, r5, r6, r7, pc}
         setSn_IR(sn, Sn_IR_SENDOK);
    2420:	2110      	movs	r1, #16
    2422:	0030      	movs	r0, r6
    2424:	f000 fbc2 	bl	2bac <WIZCHIP_WRITE>
         sock_is_sending &= ~(1<<sn);         
    2428:	2201      	movs	r2, #1
    242a:	40a2      	lsls	r2, r4
    242c:	492b      	ldr	r1, [pc, #172]	; (24dc <send+0x130>)
    242e:	880b      	ldrh	r3, [r1, #0]
    2430:	4393      	bics	r3, r2
    2432:	800b      	strh	r3, [r1, #0]
   freesize = getSn_TxMAX(sn);
    2434:	20f8      	movs	r0, #248	; 0xf8
    2436:	0140      	lsls	r0, r0, #5
    2438:	4440      	add	r0, r8
    243a:	f000 fb85 	bl	2b48 <WIZCHIP_READ>
    243e:	b280      	uxth	r0, r0
    2440:	0280      	lsls	r0, r0, #10
    2442:	b286      	uxth	r6, r0
   if (len > freesize) len = freesize; // check size not to exceed MAX size.
    2444:	42b7      	cmp	r7, r6
    2446:	d80f      	bhi.n	2468 <send+0xbc>
    2448:	003e      	movs	r6, r7
    244a:	e00d      	b.n	2468 <send+0xbc>
         close(sn);
    244c:	0020      	movs	r0, r4
    244e:	f7ff fe35 	bl	20bc <close>
         return SOCKERR_TIMEOUT;
    2452:	200d      	movs	r0, #13
    2454:	4240      	negs	r0, r0
    2456:	e7df      	b.n	2418 <send+0x6c>
         close(sn);
    2458:	0020      	movs	r0, r4
    245a:	f7ff fe2f 	bl	20bc <close>
         return SOCKERR_SOCKSTATUS;
    245e:	2007      	movs	r0, #7
    2460:	4240      	negs	r0, r0
    2462:	e7d9      	b.n	2418 <send+0x6c>
      if(len <= freesize) break;
    2464:	42be      	cmp	r6, r7
    2466:	d913      	bls.n	2490 <send+0xe4>
      freesize = getSn_TX_FSR(sn);
    2468:	0020      	movs	r0, r4
    246a:	f000 fc4b 	bl	2d04 <getSn_TX_FSR>
    246e:	0007      	movs	r7, r0
      tmp = getSn_SR(sn);
    2470:	9800      	ldr	r0, [sp, #0]
    2472:	f000 fb69 	bl	2b48 <WIZCHIP_READ>
      if ((tmp != SOCK_ESTABLISHED) && (tmp != SOCK_CLOSE_WAIT))
    2476:	2817      	cmp	r0, #23
    2478:	d001      	beq.n	247e <send+0xd2>
    247a:	281c      	cmp	r0, #28
    247c:	d1ec      	bne.n	2458 <send+0xac>
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
    247e:	4b18      	ldr	r3, [pc, #96]	; (24e0 <send+0x134>)
    2480:	881b      	ldrh	r3, [r3, #0]
    2482:	412b      	asrs	r3, r5
    2484:	07db      	lsls	r3, r3, #31
    2486:	d5ed      	bpl.n	2464 <send+0xb8>
    2488:	42be      	cmp	r6, r7
    248a:	d9eb      	bls.n	2464 <send+0xb8>
    248c:	2000      	movs	r0, #0
    248e:	e7c3      	b.n	2418 <send+0x6c>
   wiz_send_data(sn, buf, len);
    2490:	0032      	movs	r2, r6
    2492:	9901      	ldr	r1, [sp, #4]
    2494:	0020      	movs	r0, r4
    2496:	f000 fc99 	bl	2dcc <wiz_send_data>
   setSn_CR(sn,Sn_CR_SEND);
    249a:	4645      	mov	r5, r8
    249c:	3501      	adds	r5, #1
    249e:	35ff      	adds	r5, #255	; 0xff
    24a0:	2120      	movs	r1, #32
    24a2:	0028      	movs	r0, r5
    24a4:	f000 fb82 	bl	2bac <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    24a8:	0028      	movs	r0, r5
    24aa:	f000 fb4d 	bl	2b48 <WIZCHIP_READ>
    24ae:	2800      	cmp	r0, #0
    24b0:	d1fa      	bne.n	24a8 <send+0xfc>
   sock_is_sending |= (1 << sn);
    24b2:	2201      	movs	r2, #1
    24b4:	40a2      	lsls	r2, r4
    24b6:	4909      	ldr	r1, [pc, #36]	; (24dc <send+0x130>)
    24b8:	880b      	ldrh	r3, [r1, #0]
    24ba:	4313      	orrs	r3, r2
    24bc:	800b      	strh	r3, [r1, #0]
   return (int32_t)len;
    24be:	0030      	movs	r0, r6
    24c0:	e7aa      	b.n	2418 <send+0x6c>
   CHECK_SOCKNUM();
    24c2:	2001      	movs	r0, #1
    24c4:	4240      	negs	r0, r0
    24c6:	e7a7      	b.n	2418 <send+0x6c>
   CHECK_SOCKMODE(Sn_MR_TCP);
    24c8:	2005      	movs	r0, #5
    24ca:	4240      	negs	r0, r0
    24cc:	e7a4      	b.n	2418 <send+0x6c>
   CHECK_SOCKDATA();
    24ce:	200e      	movs	r0, #14
    24d0:	4240      	negs	r0, r0
    24d2:	e7a1      	b.n	2418 <send+0x6c>
   if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
    24d4:	2007      	movs	r0, #7
    24d6:	4240      	negs	r0, r0
    24d8:	e79e      	b.n	2418 <send+0x6c>
    24da:	46c0      	nop			; (mov r8, r8)
    24dc:	20000a92 	.word	0x20000a92
    24e0:	20000a90 	.word	0x20000a90

000024e4 <recv>:


int32_t recv(uint8_t sn, uint8_t * buf, uint16_t len)
{
    24e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    24e6:	46c6      	mov	lr, r8
    24e8:	b500      	push	{lr}
    24ea:	b082      	sub	sp, #8
    24ec:	9000      	str	r0, [sp, #0]
    24ee:	9101      	str	r1, [sp, #4]
    24f0:	0014      	movs	r4, r2
#if   _WIZCHIP_ == 5300
   uint8_t head[2];
   uint16_t mr;
#endif
//
   CHECK_SOCKNUM();
    24f2:	2808      	cmp	r0, #8
    24f4:	d864      	bhi.n	25c0 <recv+0xdc>
   CHECK_SOCKMODE(Sn_MR_TCP);
    24f6:	0006      	movs	r6, r0
    24f8:	0087      	lsls	r7, r0, #2
    24fa:	3701      	adds	r7, #1
    24fc:	00ff      	lsls	r7, r7, #3
    24fe:	0038      	movs	r0, r7
    2500:	f000 fb22 	bl	2b48 <WIZCHIP_READ>
    2504:	230f      	movs	r3, #15
    2506:	4018      	ands	r0, r3
    2508:	2801      	cmp	r0, #1
    250a:	d15c      	bne.n	25c6 <recv+0xe2>
   CHECK_SOCKDATA();
    250c:	2c00      	cmp	r4, #0
    250e:	d05d      	beq.n	25cc <recv+0xe8>
   
   recvsize = getSn_RxMAX(sn);
    2510:	23f0      	movs	r3, #240	; 0xf0
    2512:	015b      	lsls	r3, r3, #5
    2514:	18f8      	adds	r0, r7, r3
    2516:	f000 fb17 	bl	2b48 <WIZCHIP_READ>
    251a:	b280      	uxth	r0, r0
    251c:	0280      	lsls	r0, r0, #10
    251e:	b283      	uxth	r3, r0
    2520:	4698      	mov	r8, r3
   if(recvsize < len) len = recvsize;
    2522:	429c      	cmp	r4, r3
    2524:	d80f      	bhi.n	2546 <recv+0x62>
    2526:	46a0      	mov	r8, r4
    2528:	e00d      	b.n	2546 <recv+0x62>
            if(tmp == SOCK_CLOSE_WAIT)
            {
               if(recvsize != 0) break;
               else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
               {
                  close(sn);
    252a:	9800      	ldr	r0, [sp, #0]
    252c:	f7ff fdc6 	bl	20bc <close>
                  return SOCKERR_SOCKSTATUS;
    2530:	2007      	movs	r0, #7
    2532:	4240      	negs	r0, r0
    2534:	e040      	b.n	25b8 <recv+0xd4>
               }
            }
            else
            {
               close(sn);
    2536:	9800      	ldr	r0, [sp, #0]
    2538:	f7ff fdc0 	bl	20bc <close>
               return SOCKERR_SOCKSTATUS;
    253c:	2007      	movs	r0, #7
    253e:	4240      	negs	r0, r0
    2540:	e03a      	b.n	25b8 <recv+0xd4>
            }
         }
         if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
         if(recvsize != 0) break;
    2542:	2c00      	cmp	r4, #0
    2544:	d124      	bne.n	2590 <recv+0xac>
         recvsize = getSn_RX_RSR(sn);
    2546:	9d00      	ldr	r5, [sp, #0]
    2548:	0028      	movs	r0, r5
    254a:	f000 fc0d 	bl	2d68 <getSn_RX_RSR>
    254e:	0004      	movs	r4, r0
         tmp = getSn_SR(sn);
    2550:	23c0      	movs	r3, #192	; 0xc0
    2552:	009b      	lsls	r3, r3, #2
    2554:	18f8      	adds	r0, r7, r3
    2556:	f000 faf7 	bl	2b48 <WIZCHIP_READ>
         if (tmp != SOCK_ESTABLISHED)
    255a:	2817      	cmp	r0, #23
    255c:	d00f      	beq.n	257e <recv+0x9a>
            if(tmp == SOCK_CLOSE_WAIT)
    255e:	281c      	cmp	r0, #28
    2560:	d1e9      	bne.n	2536 <recv+0x52>
               if(recvsize != 0) break;
    2562:	2c00      	cmp	r4, #0
    2564:	d114      	bne.n	2590 <recv+0xac>
               else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
    2566:	0028      	movs	r0, r5
    2568:	f000 fbcc 	bl	2d04 <getSn_TX_FSR>
    256c:	0005      	movs	r5, r0
    256e:	23f8      	movs	r3, #248	; 0xf8
    2570:	015b      	lsls	r3, r3, #5
    2572:	18f8      	adds	r0, r7, r3
    2574:	f000 fae8 	bl	2b48 <WIZCHIP_READ>
    2578:	0280      	lsls	r0, r0, #10
    257a:	4285      	cmp	r5, r0
    257c:	d0d5      	beq.n	252a <recv+0x46>
         if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
    257e:	4b15      	ldr	r3, [pc, #84]	; (25d4 <recv+0xf0>)
    2580:	881b      	ldrh	r3, [r3, #0]
    2582:	4133      	asrs	r3, r6
    2584:	07db      	lsls	r3, r3, #31
    2586:	d5dc      	bpl.n	2542 <recv+0x5e>
    2588:	2c00      	cmp	r4, #0
    258a:	d1da      	bne.n	2542 <recv+0x5e>
    258c:	2000      	movs	r0, #0
    258e:	e013      	b.n	25b8 <recv+0xd4>
   }
   else sock_pack_info[sn] = PACK_COMPLETED;
   if(getSn_MR(sn) & Sn_MR_ALIGN) sock_remained_size[sn] = 0;
   //len = recvsize;
#else   
   if(recvsize < len) len = recvsize;   
    2590:	45a0      	cmp	r8, r4
    2592:	d800      	bhi.n	2596 <recv+0xb2>
    2594:	4644      	mov	r4, r8
   wiz_recv_data(sn, buf, len);
    2596:	0022      	movs	r2, r4
    2598:	9901      	ldr	r1, [sp, #4]
    259a:	9800      	ldr	r0, [sp, #0]
    259c:	f000 fc49 	bl	2e32 <wiz_recv_data>
   setSn_CR(sn,Sn_CR_RECV);
    25a0:	3701      	adds	r7, #1
    25a2:	37ff      	adds	r7, #255	; 0xff
    25a4:	2140      	movs	r1, #64	; 0x40
    25a6:	0038      	movs	r0, r7
    25a8:	f000 fb00 	bl	2bac <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    25ac:	0038      	movs	r0, r7
    25ae:	f000 facb 	bl	2b48 <WIZCHIP_READ>
    25b2:	2800      	cmp	r0, #0
    25b4:	d1fa      	bne.n	25ac <recv+0xc8>
#endif
     
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
    25b6:	0020      	movs	r0, r4
}
    25b8:	b002      	add	sp, #8
    25ba:	bc04      	pop	{r2}
    25bc:	4690      	mov	r8, r2
    25be:	bdf0      	pop	{r4, r5, r6, r7, pc}
   CHECK_SOCKNUM();
    25c0:	2001      	movs	r0, #1
    25c2:	4240      	negs	r0, r0
    25c4:	e7f8      	b.n	25b8 <recv+0xd4>
   CHECK_SOCKMODE(Sn_MR_TCP);
    25c6:	2005      	movs	r0, #5
    25c8:	4240      	negs	r0, r0
    25ca:	e7f5      	b.n	25b8 <recv+0xd4>
   CHECK_SOCKDATA();
    25cc:	200e      	movs	r0, #14
    25ce:	4240      	negs	r0, r0
    25d0:	e7f2      	b.n	25b8 <recv+0xd4>
    25d2:	46c0      	nop			; (mov r8, r8)
    25d4:	20000a90 	.word	0x20000a90

000025d8 <sendto>:

int32_t sendto(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t port)
{
    25d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    25da:	46de      	mov	lr, fp
    25dc:	b500      	push	{lr}
    25de:	b084      	sub	sp, #16
    25e0:	9001      	str	r0, [sp, #4]
    25e2:	9103      	str	r1, [sp, #12]
    25e4:	4693      	mov	fp, r2
    25e6:	001c      	movs	r4, r3
    25e8:	ab0a      	add	r3, sp, #40	; 0x28
    25ea:	881f      	ldrh	r7, [r3, #0]
   uint8_t tmp = 0;
   uint16_t freesize = 0;
   uint32_t taddr;

   CHECK_SOCKNUM();
    25ec:	2808      	cmp	r0, #8
    25ee:	d900      	bls.n	25f2 <sendto+0x1a>
    25f0:	e095      	b.n	271e <sendto+0x146>
   switch(getSn_MR(sn) & 0x0F)
    25f2:	0005      	movs	r5, r0
    25f4:	0083      	lsls	r3, r0, #2
    25f6:	3301      	adds	r3, #1
    25f8:	00de      	lsls	r6, r3, #3
    25fa:	0030      	movs	r0, r6
    25fc:	f000 faa4 	bl	2b48 <WIZCHIP_READ>
    2600:	230f      	movs	r3, #15
    2602:	4003      	ands	r3, r0
    2604:	3b02      	subs	r3, #2
    2606:	b2db      	uxtb	r3, r3
    2608:	2b02      	cmp	r3, #2
    260a:	d900      	bls.n	260e <sendto+0x36>
    260c:	e08a      	b.n	2724 <sendto+0x14c>
         break;
//   #endif
      default:
         return SOCKERR_SOCKMODE;
   }
   CHECK_SOCKDATA();
    260e:	465b      	mov	r3, fp
    2610:	2b00      	cmp	r3, #0
    2612:	d100      	bne.n	2616 <sendto+0x3e>
    2614:	e089      	b.n	272a <sendto+0x152>
   //M20140501 : For avoiding fatal error on memory align mismatched
   //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
   //{
      //uint32_t taddr;
      taddr = ((uint32_t)addr[0]) & 0x000000FF;
    2616:	7823      	ldrb	r3, [r4, #0]
      taddr = (taddr << 8) + ((uint32_t)addr[1] & 0x000000FF);
    2618:	021b      	lsls	r3, r3, #8
    261a:	7862      	ldrb	r2, [r4, #1]
    261c:	189b      	adds	r3, r3, r2
      taddr = (taddr << 8) + ((uint32_t)addr[2] & 0x000000FF);
    261e:	021b      	lsls	r3, r3, #8
    2620:	78a2      	ldrb	r2, [r4, #2]
    2622:	189b      	adds	r3, r3, r2
      taddr = (taddr << 8) + ((uint32_t)addr[3] & 0x000000FF);
    2624:	021b      	lsls	r3, r3, #8
    2626:	78e2      	ldrb	r2, [r4, #3]
    2628:	189b      	adds	r3, r3, r2
   //}
   //
   //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
   if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
    262a:	2b00      	cmp	r3, #0
    262c:	d034      	beq.n	2698 <sendto+0xc0>
   if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
    262e:	2f00      	cmp	r7, #0
    2630:	d104      	bne.n	263c <sendto+0x64>
    2632:	0030      	movs	r0, r6
    2634:	f000 fa88 	bl	2b48 <WIZCHIP_READ>
    2638:	0743      	lsls	r3, r0, #29
    263a:	d579      	bpl.n	2730 <sendto+0x158>
   tmp = getSn_SR(sn);
    263c:	23c0      	movs	r3, #192	; 0xc0
    263e:	009b      	lsls	r3, r3, #2
    2640:	469c      	mov	ip, r3
    2642:	44b4      	add	ip, r6
    2644:	4663      	mov	r3, ip
    2646:	9302      	str	r3, [sp, #8]
    2648:	4660      	mov	r0, ip
    264a:	f000 fa7d 	bl	2b48 <WIZCHIP_READ>
//#if ( _WIZCHIP_ < 5200 )
   if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
    264e:	2842      	cmp	r0, #66	; 0x42
    2650:	d003      	beq.n	265a <sendto+0x82>
    2652:	2822      	cmp	r0, #34	; 0x22
    2654:	d001      	beq.n	265a <sendto+0x82>
    2656:	2832      	cmp	r0, #50	; 0x32
    2658:	d16d      	bne.n	2736 <sendto+0x15e>
//#else
//   if(tmp != SOCK_MACRAW && tmp != SOCK_UDP) return SOCKERR_SOCKSTATUS;
//#endif
      
   setSn_DIPR(sn,addr);
    265a:	2204      	movs	r2, #4
    265c:	0021      	movs	r1, r4
    265e:	23c0      	movs	r3, #192	; 0xc0
    2660:	011b      	lsls	r3, r3, #4
    2662:	18f0      	adds	r0, r6, r3
    2664:	f000 fb12 	bl	2c8c <WIZCHIP_WRITE_BUF>
   setSn_DPORT(sn,port);      
    2668:	0a39      	lsrs	r1, r7, #8
    266a:	2380      	movs	r3, #128	; 0x80
    266c:	015b      	lsls	r3, r3, #5
    266e:	18f0      	adds	r0, r6, r3
    2670:	f000 fa9c 	bl	2bac <WIZCHIP_WRITE>
    2674:	b2f9      	uxtb	r1, r7
    2676:	2388      	movs	r3, #136	; 0x88
    2678:	015b      	lsls	r3, r3, #5
    267a:	18f0      	adds	r0, r6, r3
    267c:	f000 fa96 	bl	2bac <WIZCHIP_WRITE>
   freesize = getSn_TxMAX(sn);
    2680:	23f8      	movs	r3, #248	; 0xf8
    2682:	015b      	lsls	r3, r3, #5
    2684:	18f0      	adds	r0, r6, r3
    2686:	f000 fa5f 	bl	2b48 <WIZCHIP_READ>
    268a:	b280      	uxth	r0, r0
    268c:	0280      	lsls	r0, r0, #10
    268e:	b287      	uxth	r7, r0
   if (len > freesize) len = freesize; // check size not to exceed MAX size.
    2690:	45bb      	cmp	fp, r7
    2692:	d80b      	bhi.n	26ac <sendto+0xd4>
    2694:	465f      	mov	r7, fp
    2696:	e009      	b.n	26ac <sendto+0xd4>
   if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
    2698:	0030      	movs	r0, r6
    269a:	f000 fa55 	bl	2b48 <WIZCHIP_READ>
    269e:	0743      	lsls	r3, r0, #29
    26a0:	d4c5      	bmi.n	262e <sendto+0x56>
    26a2:	200c      	movs	r0, #12
    26a4:	4240      	negs	r0, r0
    26a6:	e04b      	b.n	2740 <sendto+0x168>
   while(1)
   {
      freesize = getSn_TX_FSR(sn);
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
      if(len <= freesize) break;
    26a8:	42a7      	cmp	r7, r4
    26aa:	d911      	bls.n	26d0 <sendto+0xf8>
      freesize = getSn_TX_FSR(sn);
    26ac:	9801      	ldr	r0, [sp, #4]
    26ae:	f000 fb29 	bl	2d04 <getSn_TX_FSR>
    26b2:	0004      	movs	r4, r0
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    26b4:	9802      	ldr	r0, [sp, #8]
    26b6:	f000 fa47 	bl	2b48 <WIZCHIP_READ>
    26ba:	2800      	cmp	r0, #0
    26bc:	d03e      	beq.n	273c <sendto+0x164>
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
    26be:	4b22      	ldr	r3, [pc, #136]	; (2748 <sendto+0x170>)
    26c0:	881b      	ldrh	r3, [r3, #0]
    26c2:	412b      	asrs	r3, r5
    26c4:	07db      	lsls	r3, r3, #31
    26c6:	d5ef      	bpl.n	26a8 <sendto+0xd0>
    26c8:	42a7      	cmp	r7, r4
    26ca:	d9ed      	bls.n	26a8 <sendto+0xd0>
    26cc:	2000      	movs	r0, #0
    26ce:	e037      	b.n	2740 <sendto+0x168>
   };
	wiz_send_data(sn, buf, len);
    26d0:	003a      	movs	r2, r7
    26d2:	9903      	ldr	r1, [sp, #12]
    26d4:	9801      	ldr	r0, [sp, #4]
    26d6:	f000 fb79 	bl	2dcc <wiz_send_data>
//A20150601 : For W5300
#if _WIZCHIP_ == 5300
   setSn_TX_WRSR(sn, len);
#endif
//   
	setSn_CR(sn,Sn_CR_SEND);
    26da:	1c74      	adds	r4, r6, #1
    26dc:	34ff      	adds	r4, #255	; 0xff
    26de:	2120      	movs	r1, #32
    26e0:	0020      	movs	r0, r4
    26e2:	f000 fa63 	bl	2bac <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn));
    26e6:	0020      	movs	r0, r4
    26e8:	f000 fa2e 	bl	2b48 <WIZCHIP_READ>
    26ec:	2800      	cmp	r0, #0
    26ee:	d1fa      	bne.n	26e6 <sendto+0x10e>
   while(1)
   {
      tmp = getSn_IR(sn);
    26f0:	2380      	movs	r3, #128	; 0x80
    26f2:	009b      	lsls	r3, r3, #2
    26f4:	18f4      	adds	r4, r6, r3
    26f6:	0020      	movs	r0, r4
    26f8:	f000 fa26 	bl	2b48 <WIZCHIP_READ>
      if(tmp & Sn_IR_SENDOK)
    26fc:	06c3      	lsls	r3, r0, #27
    26fe:	d408      	bmi.n	2712 <sendto+0x13a>
         setSn_IR(sn, Sn_IR_SENDOK);
         break;
      }
      //M:20131104
      //else if(tmp & Sn_IR_TIMEOUT) return SOCKERR_TIMEOUT;
      else if(tmp & Sn_IR_TIMEOUT)
    2700:	0703      	lsls	r3, r0, #28
    2702:	d5f5      	bpl.n	26f0 <sendto+0x118>
      {
         setSn_IR(sn, Sn_IR_TIMEOUT);
    2704:	2108      	movs	r1, #8
    2706:	0020      	movs	r0, r4
    2708:	f000 fa50 	bl	2bac <WIZCHIP_WRITE>
         //len = (uint16_t)SOCKERR_TIMEOUT;
         //break;
         #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
            if(taddr) setSUBR((uint8_t*)&taddr);
         #endif
         return SOCKERR_TIMEOUT;
    270c:	200d      	movs	r0, #13
    270e:	4240      	negs	r0, r0
    2710:	e016      	b.n	2740 <sendto+0x168>
         setSn_IR(sn, Sn_IR_SENDOK);
    2712:	2110      	movs	r1, #16
    2714:	0020      	movs	r0, r4
    2716:	f000 fa49 	bl	2bac <WIZCHIP_WRITE>
   #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
      if(taddr) setSUBR((uint8_t*)&taddr);
   #endif
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
    271a:	0038      	movs	r0, r7
    271c:	e010      	b.n	2740 <sendto+0x168>
   CHECK_SOCKNUM();
    271e:	2001      	movs	r0, #1
    2720:	4240      	negs	r0, r0
    2722:	e00d      	b.n	2740 <sendto+0x168>
         return SOCKERR_SOCKMODE;
    2724:	2005      	movs	r0, #5
    2726:	4240      	negs	r0, r0
    2728:	e00a      	b.n	2740 <sendto+0x168>
   CHECK_SOCKDATA();
    272a:	200e      	movs	r0, #14
    272c:	4240      	negs	r0, r0
    272e:	e007      	b.n	2740 <sendto+0x168>
   if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
    2730:	200b      	movs	r0, #11
    2732:	4240      	negs	r0, r0
    2734:	e004      	b.n	2740 <sendto+0x168>
   if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
    2736:	2007      	movs	r0, #7
    2738:	4240      	negs	r0, r0
    273a:	e001      	b.n	2740 <sendto+0x168>
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    273c:	2004      	movs	r0, #4
    273e:	4240      	negs	r0, r0
}
    2740:	b004      	add	sp, #16
    2742:	bc04      	pop	{r2}
    2744:	4693      	mov	fp, r2
    2746:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2748:	20000a90 	.word	0x20000a90

0000274c <recvfrom>:



int32_t recvfrom(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t *port)
{
    274c:	b5f0      	push	{r4, r5, r6, r7, lr}
    274e:	46de      	mov	lr, fp
    2750:	4647      	mov	r7, r8
    2752:	b580      	push	{r7, lr}
    2754:	b085      	sub	sp, #20
    2756:	0005      	movs	r5, r0
    2758:	9100      	str	r1, [sp, #0]
    275a:	4690      	mov	r8, r2
    275c:	9301      	str	r3, [sp, #4]
#endif
//   
   uint8_t  head[8];
	uint16_t pack_len=0;

   CHECK_SOCKNUM();
    275e:	2808      	cmp	r0, #8
    2760:	d900      	bls.n	2764 <recvfrom+0x18>
    2762:	e11b      	b.n	299c <recvfrom+0x250>
//A20150601
#if _WIZCHIP_ == 5300
   mr1 = getMR();
#endif   

   switch((mr=getSn_MR(sn)) & 0x0F)
    2764:	0007      	movs	r7, r0
    2766:	0083      	lsls	r3, r0, #2
    2768:	3301      	adds	r3, #1
    276a:	00de      	lsls	r6, r3, #3
    276c:	0030      	movs	r0, r6
    276e:	f000 f9eb 	bl	2b48 <WIZCHIP_READ>
    2772:	4683      	mov	fp, r0
    2774:	230f      	movs	r3, #15
    2776:	4003      	ands	r3, r0
    2778:	3b02      	subs	r3, #2
    277a:	b2db      	uxtb	r3, r3
    277c:	2b02      	cmp	r3, #2
    277e:	d900      	bls.n	2782 <recvfrom+0x36>
    2780:	e10f      	b.n	29a2 <recvfrom+0x256>
         break;
   #endif
      default:
         return SOCKERR_SOCKMODE;
   }
   CHECK_SOCKDATA();
    2782:	4643      	mov	r3, r8
    2784:	2b00      	cmp	r3, #0
    2786:	d100      	bne.n	278a <recvfrom+0x3e>
    2788:	e10e      	b.n	29a8 <recvfrom+0x25c>
   if(sock_remained_size[sn] == 0)
    278a:	006b      	lsls	r3, r5, #1
    278c:	4a89      	ldr	r2, [pc, #548]	; (29b4 <recvfrom+0x268>)
    278e:	5a9b      	ldrh	r3, [r3, r2]
    2790:	2b00      	cmp	r3, #0
    2792:	d015      	beq.n	27c0 <recvfrom+0x74>
	uint16_t pack_len=0;
    2794:	2400      	movs	r4, #0
         if(pack_len != 0) break;
      };
   }
//D20150601 : Move it to bottom
// sock_pack_info[sn] = PACK_COMPLETED;
	switch (mr & 0x07)
    2796:	2307      	movs	r3, #7
    2798:	465a      	mov	r2, fp
    279a:	4013      	ands	r3, r2
    279c:	2b03      	cmp	r3, #3
    279e:	d100      	bne.n	27a2 <recvfrom+0x56>
    27a0:	e0bd      	b.n	291e <recvfrom+0x1d2>
    27a2:	2b04      	cmp	r3, #4
    27a4:	d100      	bne.n	27a8 <recvfrom+0x5c>
    27a6:	e081      	b.n	28ac <recvfrom+0x160>
    27a8:	2b02      	cmp	r3, #2
    27aa:	d01e      	beq.n	27ea <recvfrom+0x9e>
			else pack_len = sock_remained_size[sn];
   		wiz_recv_data(sn, buf, pack_len); // data copy.
			break;
   //#endif
      default:
         wiz_recv_ignore(sn, pack_len); // data copy.
    27ac:	0021      	movs	r1, r4
    27ae:	0028      	movs	r0, r5
    27b0:	f000 fb72 	bl	2e98 <wiz_recv_ignore>
         sock_remained_size[sn] = pack_len;
    27b4:	006b      	lsls	r3, r5, #1
    27b6:	4a7f      	ldr	r2, [pc, #508]	; (29b4 <recvfrom+0x268>)
    27b8:	529c      	strh	r4, [r3, r2]
         break;
    27ba:	e026      	b.n	280a <recvfrom+0xbe>
         if(pack_len != 0) break;
    27bc:	2c00      	cmp	r4, #0
    27be:	d1ea      	bne.n	2796 <recvfrom+0x4a>
         pack_len = getSn_RX_RSR(sn);
    27c0:	0028      	movs	r0, r5
    27c2:	f000 fad1 	bl	2d68 <getSn_RX_RSR>
    27c6:	0004      	movs	r4, r0
         if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    27c8:	23c0      	movs	r3, #192	; 0xc0
    27ca:	009b      	lsls	r3, r3, #2
    27cc:	18f0      	adds	r0, r6, r3
    27ce:	f000 f9bb 	bl	2b48 <WIZCHIP_READ>
    27d2:	2800      	cmp	r0, #0
    27d4:	d100      	bne.n	27d8 <recvfrom+0x8c>
    27d6:	e0ea      	b.n	29ae <recvfrom+0x262>
         if( (sock_io_mode & (1<<sn)) && (pack_len == 0) ) return SOCK_BUSY;
    27d8:	4b77      	ldr	r3, [pc, #476]	; (29b8 <recvfrom+0x26c>)
    27da:	881b      	ldrh	r3, [r3, #0]
    27dc:	413b      	asrs	r3, r7
    27de:	07db      	lsls	r3, r3, #31
    27e0:	d5ec      	bpl.n	27bc <recvfrom+0x70>
    27e2:	2c00      	cmp	r4, #0
    27e4:	d1ea      	bne.n	27bc <recvfrom+0x70>
    27e6:	2000      	movs	r0, #0
    27e8:	e029      	b.n	283e <recvfrom+0xf2>
	      if(sock_remained_size[sn] == 0)
    27ea:	006b      	lsls	r3, r5, #1
    27ec:	4a71      	ldr	r2, [pc, #452]	; (29b4 <recvfrom+0x268>)
    27ee:	5a9b      	ldrh	r3, [r3, r2]
    27f0:	2b00      	cmp	r3, #0
    27f2:	d029      	beq.n	2848 <recvfrom+0xfc>
			if(len < sock_remained_size[sn]) pack_len = len;
    27f4:	006b      	lsls	r3, r5, #1
    27f6:	4a6f      	ldr	r2, [pc, #444]	; (29b4 <recvfrom+0x268>)
    27f8:	5a9c      	ldrh	r4, [r3, r2]
    27fa:	45a0      	cmp	r8, r4
    27fc:	d200      	bcs.n	2800 <recvfrom+0xb4>
    27fe:	4644      	mov	r4, r8
   		wiz_recv_data(sn, buf, pack_len); // data copy.
    2800:	0022      	movs	r2, r4
    2802:	9900      	ldr	r1, [sp, #0]
    2804:	0028      	movs	r0, r5
    2806:	f000 fb14 	bl	2e32 <wiz_recv_data>
   }
	setSn_CR(sn,Sn_CR_RECV);
    280a:	3601      	adds	r6, #1
    280c:	36ff      	adds	r6, #255	; 0xff
    280e:	2140      	movs	r1, #64	; 0x40
    2810:	0030      	movs	r0, r6
    2812:	f000 f9cb 	bl	2bac <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn)) ;
    2816:	0030      	movs	r0, r6
    2818:	f000 f996 	bl	2b48 <WIZCHIP_READ>
    281c:	2800      	cmp	r0, #0
    281e:	d1fa      	bne.n	2816 <recvfrom+0xca>
	sock_remained_size[sn] -= pack_len;
    2820:	4a64      	ldr	r2, [pc, #400]	; (29b4 <recvfrom+0x268>)
    2822:	0069      	lsls	r1, r5, #1
    2824:	5a8b      	ldrh	r3, [r1, r2]
    2826:	1b1b      	subs	r3, r3, r4
    2828:	b29b      	uxth	r3, r3
    282a:	528b      	strh	r3, [r1, r2]
	//M20150601 : 
	//if(sock_remained_size[sn] != 0) sock_pack_info[sn] |= 0x01;
	if(sock_remained_size[sn] != 0)
    282c:	2b00      	cmp	r3, #0
    282e:	d100      	bne.n	2832 <recvfrom+0xe6>
    2830:	e0b0      	b.n	2994 <recvfrom+0x248>
	{
	   sock_pack_info[sn] |= PACK_REMAINED;
    2832:	4a62      	ldr	r2, [pc, #392]	; (29bc <recvfrom+0x270>)
    2834:	5d53      	ldrb	r3, [r2, r5]
    2836:	2101      	movs	r1, #1
    2838:	430b      	orrs	r3, r1
    283a:	5553      	strb	r3, [r2, r5]
   pack_len = len;
#endif
   //
   //M20150409 : Explicit Type Casting
   //return pack_len;
   return (int32_t)pack_len;
    283c:	0020      	movs	r0, r4
}
    283e:	b005      	add	sp, #20
    2840:	bc0c      	pop	{r2, r3}
    2842:	4690      	mov	r8, r2
    2844:	469b      	mov	fp, r3
    2846:	bdf0      	pop	{r4, r5, r6, r7, pc}
   			wiz_recv_data(sn, head, 8);
    2848:	2208      	movs	r2, #8
    284a:	a902      	add	r1, sp, #8
    284c:	0028      	movs	r0, r5
    284e:	f000 faf0 	bl	2e32 <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    2852:	1c74      	adds	r4, r6, #1
    2854:	34ff      	adds	r4, #255	; 0xff
    2856:	2140      	movs	r1, #64	; 0x40
    2858:	0020      	movs	r0, r4
    285a:	f000 f9a7 	bl	2bac <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    285e:	0020      	movs	r0, r4
    2860:	f000 f972 	bl	2b48 <WIZCHIP_READ>
    2864:	2800      	cmp	r0, #0
    2866:	d1fa      	bne.n	285e <recvfrom+0x112>
               addr[0] = head[0];
    2868:	ab02      	add	r3, sp, #8
    286a:	781b      	ldrb	r3, [r3, #0]
    286c:	9a01      	ldr	r2, [sp, #4]
    286e:	7013      	strb	r3, [r2, #0]
      			addr[1] = head[1];
    2870:	ab02      	add	r3, sp, #8
    2872:	785b      	ldrb	r3, [r3, #1]
    2874:	7053      	strb	r3, [r2, #1]
      			addr[2] = head[2];
    2876:	ab02      	add	r3, sp, #8
    2878:	789b      	ldrb	r3, [r3, #2]
    287a:	7093      	strb	r3, [r2, #2]
      			addr[3] = head[3];
    287c:	ab02      	add	r3, sp, #8
    287e:	78db      	ldrb	r3, [r3, #3]
    2880:	70d3      	strb	r3, [r2, #3]
      			*port = head[4];
    2882:	ab02      	add	r3, sp, #8
    2884:	791b      	ldrb	r3, [r3, #4]
      			*port = (*port << 8) + head[5];
    2886:	021b      	lsls	r3, r3, #8
    2888:	aa02      	add	r2, sp, #8
    288a:	7952      	ldrb	r2, [r2, #5]
    288c:	189b      	adds	r3, r3, r2
    288e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2890:	8013      	strh	r3, [r2, #0]
      			sock_remained_size[sn] = head[6];
    2892:	ab02      	add	r3, sp, #8
    2894:	799b      	ldrb	r3, [r3, #6]
      			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[7];
    2896:	021b      	lsls	r3, r3, #8
    2898:	aa02      	add	r2, sp, #8
    289a:	79d2      	ldrb	r2, [r2, #7]
    289c:	189b      	adds	r3, r3, r2
    289e:	006a      	lsls	r2, r5, #1
    28a0:	4944      	ldr	r1, [pc, #272]	; (29b4 <recvfrom+0x268>)
    28a2:	528b      	strh	r3, [r1, r2]
   			sock_pack_info[sn] = PACK_FIRST;
    28a4:	2280      	movs	r2, #128	; 0x80
    28a6:	4b45      	ldr	r3, [pc, #276]	; (29bc <recvfrom+0x270>)
    28a8:	555a      	strb	r2, [r3, r5]
    28aa:	e7a3      	b.n	27f4 <recvfrom+0xa8>
	      if(sock_remained_size[sn] == 0)
    28ac:	006b      	lsls	r3, r5, #1
    28ae:	4a41      	ldr	r2, [pc, #260]	; (29b4 <recvfrom+0x268>)
    28b0:	5a9b      	ldrh	r3, [r3, r2]
    28b2:	2b00      	cmp	r3, #0
    28b4:	d00b      	beq.n	28ce <recvfrom+0x182>
			if(len < sock_remained_size[sn]) pack_len = len;
    28b6:	006b      	lsls	r3, r5, #1
    28b8:	4a3e      	ldr	r2, [pc, #248]	; (29b4 <recvfrom+0x268>)
    28ba:	5a9c      	ldrh	r4, [r3, r2]
    28bc:	45a0      	cmp	r8, r4
    28be:	d200      	bcs.n	28c2 <recvfrom+0x176>
    28c0:	4644      	mov	r4, r8
			wiz_recv_data(sn,buf,pack_len);
    28c2:	0022      	movs	r2, r4
    28c4:	9900      	ldr	r1, [sp, #0]
    28c6:	0028      	movs	r0, r5
    28c8:	f000 fab3 	bl	2e32 <wiz_recv_data>
		   break;
    28cc:	e79d      	b.n	280a <recvfrom+0xbe>
   			wiz_recv_data(sn, head, 2);
    28ce:	2202      	movs	r2, #2
    28d0:	a902      	add	r1, sp, #8
    28d2:	0028      	movs	r0, r5
    28d4:	f000 faad 	bl	2e32 <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    28d8:	1c74      	adds	r4, r6, #1
    28da:	34ff      	adds	r4, #255	; 0xff
    28dc:	2140      	movs	r1, #64	; 0x40
    28de:	0020      	movs	r0, r4
    28e0:	f000 f964 	bl	2bac <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    28e4:	0020      	movs	r0, r4
    28e6:	f000 f92f 	bl	2b48 <WIZCHIP_READ>
    28ea:	2800      	cmp	r0, #0
    28ec:	d1fa      	bne.n	28e4 <recvfrom+0x198>
    			sock_remained_size[sn] = head[0];
    28ee:	ab02      	add	r3, sp, #8
    28f0:	781b      	ldrb	r3, [r3, #0]
   			sock_remained_size[sn] = (sock_remained_size[sn] <<8) + head[1] -2;
    28f2:	021b      	lsls	r3, r3, #8
    28f4:	aa02      	add	r2, sp, #8
    28f6:	7852      	ldrb	r2, [r2, #1]
    28f8:	189b      	adds	r3, r3, r2
    28fa:	b29b      	uxth	r3, r3
    28fc:	3b02      	subs	r3, #2
    28fe:	b29b      	uxth	r3, r3
    2900:	006a      	lsls	r2, r5, #1
    2902:	492c      	ldr	r1, [pc, #176]	; (29b4 <recvfrom+0x268>)
    2904:	5253      	strh	r3, [r2, r1]
   			if(sock_remained_size[sn] > 1514) 
    2906:	4a2e      	ldr	r2, [pc, #184]	; (29c0 <recvfrom+0x274>)
    2908:	4293      	cmp	r3, r2
    290a:	d803      	bhi.n	2914 <recvfrom+0x1c8>
   			sock_pack_info[sn] = PACK_FIRST;
    290c:	2280      	movs	r2, #128	; 0x80
    290e:	4b2b      	ldr	r3, [pc, #172]	; (29bc <recvfrom+0x270>)
    2910:	555a      	strb	r2, [r3, r5]
    2912:	e7d0      	b.n	28b6 <recvfrom+0x16a>
   			   close(sn);
    2914:	0028      	movs	r0, r5
    2916:	f7ff fbd1 	bl	20bc <close>
   			   return SOCKFATAL_PACKLEN;
    291a:	482a      	ldr	r0, [pc, #168]	; (29c4 <recvfrom+0x278>)
    291c:	e78f      	b.n	283e <recvfrom+0xf2>
		   if(sock_remained_size[sn] == 0)
    291e:	006b      	lsls	r3, r5, #1
    2920:	4a24      	ldr	r2, [pc, #144]	; (29b4 <recvfrom+0x268>)
    2922:	5a9b      	ldrh	r3, [r3, r2]
    2924:	2b00      	cmp	r3, #0
    2926:	d00b      	beq.n	2940 <recvfrom+0x1f4>
			if(len < sock_remained_size[sn]) pack_len = len;
    2928:	006b      	lsls	r3, r5, #1
    292a:	4a22      	ldr	r2, [pc, #136]	; (29b4 <recvfrom+0x268>)
    292c:	5a9c      	ldrh	r4, [r3, r2]
    292e:	45a0      	cmp	r8, r4
    2930:	d200      	bcs.n	2934 <recvfrom+0x1e8>
    2932:	4644      	mov	r4, r8
   		wiz_recv_data(sn, buf, pack_len); // data copy.
    2934:	0022      	movs	r2, r4
    2936:	9900      	ldr	r1, [sp, #0]
    2938:	0028      	movs	r0, r5
    293a:	f000 fa7a 	bl	2e32 <wiz_recv_data>
			break;
    293e:	e764      	b.n	280a <recvfrom+0xbe>
   			wiz_recv_data(sn, head, 6);
    2940:	2206      	movs	r2, #6
    2942:	a902      	add	r1, sp, #8
    2944:	0028      	movs	r0, r5
    2946:	f000 fa74 	bl	2e32 <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    294a:	1c74      	adds	r4, r6, #1
    294c:	34ff      	adds	r4, #255	; 0xff
    294e:	2140      	movs	r1, #64	; 0x40
    2950:	0020      	movs	r0, r4
    2952:	f000 f92b 	bl	2bac <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    2956:	0020      	movs	r0, r4
    2958:	f000 f8f6 	bl	2b48 <WIZCHIP_READ>
    295c:	2800      	cmp	r0, #0
    295e:	d1fa      	bne.n	2956 <recvfrom+0x20a>
   			addr[0] = head[0];
    2960:	ab02      	add	r3, sp, #8
    2962:	781b      	ldrb	r3, [r3, #0]
    2964:	9a01      	ldr	r2, [sp, #4]
    2966:	7013      	strb	r3, [r2, #0]
   			addr[1] = head[1];
    2968:	ab02      	add	r3, sp, #8
    296a:	785b      	ldrb	r3, [r3, #1]
    296c:	7053      	strb	r3, [r2, #1]
   			addr[2] = head[2];
    296e:	ab02      	add	r3, sp, #8
    2970:	789b      	ldrb	r3, [r3, #2]
    2972:	7093      	strb	r3, [r2, #2]
   			addr[3] = head[3];
    2974:	ab02      	add	r3, sp, #8
    2976:	78db      	ldrb	r3, [r3, #3]
    2978:	70d3      	strb	r3, [r2, #3]
   			sock_remained_size[sn] = head[4];
    297a:	ab02      	add	r3, sp, #8
    297c:	791b      	ldrb	r3, [r3, #4]
   			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[5];
    297e:	021b      	lsls	r3, r3, #8
    2980:	aa02      	add	r2, sp, #8
    2982:	7952      	ldrb	r2, [r2, #5]
    2984:	189b      	adds	r3, r3, r2
    2986:	006a      	lsls	r2, r5, #1
    2988:	490a      	ldr	r1, [pc, #40]	; (29b4 <recvfrom+0x268>)
    298a:	528b      	strh	r3, [r1, r2]
   			sock_pack_info[sn] = PACK_FIRST;
    298c:	2280      	movs	r2, #128	; 0x80
    298e:	4b0b      	ldr	r3, [pc, #44]	; (29bc <recvfrom+0x270>)
    2990:	555a      	strb	r2, [r3, r5]
    2992:	e7c9      	b.n	2928 <recvfrom+0x1dc>
	else sock_pack_info[sn] = PACK_COMPLETED;
    2994:	2200      	movs	r2, #0
    2996:	4b09      	ldr	r3, [pc, #36]	; (29bc <recvfrom+0x270>)
    2998:	555a      	strb	r2, [r3, r5]
    299a:	e74f      	b.n	283c <recvfrom+0xf0>
   CHECK_SOCKNUM();
    299c:	2001      	movs	r0, #1
    299e:	4240      	negs	r0, r0
    29a0:	e74d      	b.n	283e <recvfrom+0xf2>
         return SOCKERR_SOCKMODE;
    29a2:	2005      	movs	r0, #5
    29a4:	4240      	negs	r0, r0
    29a6:	e74a      	b.n	283e <recvfrom+0xf2>
   CHECK_SOCKDATA();
    29a8:	200e      	movs	r0, #14
    29aa:	4240      	negs	r0, r0
    29ac:	e747      	b.n	283e <recvfrom+0xf2>
         if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    29ae:	2004      	movs	r0, #4
    29b0:	4240      	negs	r0, r0
    29b2:	e744      	b.n	283e <recvfrom+0xf2>
    29b4:	20000a9c 	.word	0x20000a9c
    29b8:	20000a90 	.word	0x20000a90
    29bc:	20000a94 	.word	0x20000a94
    29c0:	000005ea 	.word	0x000005ea
    29c4:	fffffc17 	.word	0xfffffc17

000029c8 <getsockopt>:
   }   
   return SOCK_OK;
}

int8_t  getsockopt(uint8_t sn, sockopt_type sotype, void* arg)
{
    29c8:	b570      	push	{r4, r5, r6, lr}
    29ca:	0004      	movs	r4, r0
    29cc:	0015      	movs	r5, r2
   CHECK_SOCKNUM();
    29ce:	2808      	cmp	r0, #8
    29d0:	d900      	bls.n	29d4 <getsockopt+0xc>
    29d2:	e0a6      	b.n	2b22 <getsockopt+0x15a>
   switch(sotype)
    29d4:	290c      	cmp	r1, #12
    29d6:	d900      	bls.n	29da <getsockopt+0x12>
    29d8:	e0a6      	b.n	2b28 <getsockopt+0x160>
    29da:	0089      	lsls	r1, r1, #2
    29dc:	4b57      	ldr	r3, [pc, #348]	; (2b3c <getsockopt+0x174>)
    29de:	585b      	ldr	r3, [r3, r1]
    29e0:	469f      	mov	pc, r3
   {
      case SO_FLAG:
         *(uint8_t*)arg = getSn_MR(sn) & 0xF0;
    29e2:	0080      	lsls	r0, r0, #2
    29e4:	3001      	adds	r0, #1
    29e6:	00c0      	lsls	r0, r0, #3
    29e8:	f000 f8ae 	bl	2b48 <WIZCHIP_READ>
    29ec:	230f      	movs	r3, #15
    29ee:	4398      	bics	r0, r3
    29f0:	7028      	strb	r0, [r5, #0]
         *(uint8_t*)arg = sock_pack_info[sn];
         break;
      default:
         return SOCKERR_SOCKOPT;
   }
   return SOCK_OK;
    29f2:	2001      	movs	r0, #1
}
    29f4:	bd70      	pop	{r4, r5, r6, pc}
         *(uint8_t*) arg = getSn_TTL(sn);
    29f6:	0080      	lsls	r0, r0, #2
    29f8:	3001      	adds	r0, #1
    29fa:	00c0      	lsls	r0, r0, #3
    29fc:	23b0      	movs	r3, #176	; 0xb0
    29fe:	015b      	lsls	r3, r3, #5
    2a00:	469c      	mov	ip, r3
    2a02:	4460      	add	r0, ip
    2a04:	f000 f8a0 	bl	2b48 <WIZCHIP_READ>
    2a08:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2a0a:	2001      	movs	r0, #1
         break;
    2a0c:	e7f2      	b.n	29f4 <getsockopt+0x2c>
         *(uint8_t*) arg = getSn_TOS(sn);
    2a0e:	0080      	lsls	r0, r0, #2
    2a10:	3001      	adds	r0, #1
    2a12:	00c0      	lsls	r0, r0, #3
    2a14:	23a8      	movs	r3, #168	; 0xa8
    2a16:	015b      	lsls	r3, r3, #5
    2a18:	469c      	mov	ip, r3
    2a1a:	4460      	add	r0, ip
    2a1c:	f000 f894 	bl	2b48 <WIZCHIP_READ>
    2a20:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2a22:	2001      	movs	r0, #1
         break;
    2a24:	e7e6      	b.n	29f4 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_MSSR(sn);
    2a26:	0084      	lsls	r4, r0, #2
    2a28:	3401      	adds	r4, #1
    2a2a:	00e4      	lsls	r4, r4, #3
    2a2c:	2390      	movs	r3, #144	; 0x90
    2a2e:	015b      	lsls	r3, r3, #5
    2a30:	18e0      	adds	r0, r4, r3
    2a32:	f000 f889 	bl	2b48 <WIZCHIP_READ>
    2a36:	b286      	uxth	r6, r0
    2a38:	0236      	lsls	r6, r6, #8
    2a3a:	b2b6      	uxth	r6, r6
    2a3c:	2398      	movs	r3, #152	; 0x98
    2a3e:	015b      	lsls	r3, r3, #5
    2a40:	18e0      	adds	r0, r4, r3
    2a42:	f000 f881 	bl	2b48 <WIZCHIP_READ>
    2a46:	b280      	uxth	r0, r0
    2a48:	1836      	adds	r6, r6, r0
    2a4a:	802e      	strh	r6, [r5, #0]
   return SOCK_OK;
    2a4c:	2001      	movs	r0, #1
         break;
    2a4e:	e7d1      	b.n	29f4 <getsockopt+0x2c>
         getSn_DIPR(sn, (uint8_t*)arg);
    2a50:	0080      	lsls	r0, r0, #2
    2a52:	3001      	adds	r0, #1
    2a54:	00c0      	lsls	r0, r0, #3
    2a56:	23c0      	movs	r3, #192	; 0xc0
    2a58:	011b      	lsls	r3, r3, #4
    2a5a:	469c      	mov	ip, r3
    2a5c:	4460      	add	r0, ip
    2a5e:	2204      	movs	r2, #4
    2a60:	0029      	movs	r1, r5
    2a62:	f000 f8d3 	bl	2c0c <WIZCHIP_READ_BUF>
   return SOCK_OK;
    2a66:	2001      	movs	r0, #1
         break;
    2a68:	e7c4      	b.n	29f4 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_DPORT(sn);
    2a6a:	0084      	lsls	r4, r0, #2
    2a6c:	3401      	adds	r4, #1
    2a6e:	00e4      	lsls	r4, r4, #3
    2a70:	2380      	movs	r3, #128	; 0x80
    2a72:	015b      	lsls	r3, r3, #5
    2a74:	18e0      	adds	r0, r4, r3
    2a76:	f000 f867 	bl	2b48 <WIZCHIP_READ>
    2a7a:	b286      	uxth	r6, r0
    2a7c:	0236      	lsls	r6, r6, #8
    2a7e:	b2b6      	uxth	r6, r6
    2a80:	2388      	movs	r3, #136	; 0x88
    2a82:	015b      	lsls	r3, r3, #5
    2a84:	18e0      	adds	r0, r4, r3
    2a86:	f000 f85f 	bl	2b48 <WIZCHIP_READ>
    2a8a:	b280      	uxth	r0, r0
    2a8c:	1836      	adds	r6, r6, r0
    2a8e:	802e      	strh	r6, [r5, #0]
   return SOCK_OK;
    2a90:	2001      	movs	r0, #1
         break;
    2a92:	e7af      	b.n	29f4 <getsockopt+0x2c>
         CHECK_SOCKMODE(Sn_MR_TCP);
    2a94:	0084      	lsls	r4, r0, #2
    2a96:	3401      	adds	r4, #1
    2a98:	00e4      	lsls	r4, r4, #3
    2a9a:	0020      	movs	r0, r4
    2a9c:	f000 f854 	bl	2b48 <WIZCHIP_READ>
    2aa0:	230f      	movs	r3, #15
    2aa2:	4018      	ands	r0, r3
    2aa4:	2801      	cmp	r0, #1
    2aa6:	d142      	bne.n	2b2e <getsockopt+0x166>
         *(uint16_t*) arg = getSn_KPALVTR(sn);
    2aa8:	23bc      	movs	r3, #188	; 0xbc
    2aaa:	019b      	lsls	r3, r3, #6
    2aac:	18e0      	adds	r0, r4, r3
    2aae:	f000 f84b 	bl	2b48 <WIZCHIP_READ>
    2ab2:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2ab4:	2001      	movs	r0, #1
         break;
    2ab6:	e79d      	b.n	29f4 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_TX_FSR(sn);
    2ab8:	f000 f924 	bl	2d04 <getSn_TX_FSR>
    2abc:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2abe:	2001      	movs	r0, #1
         break;
    2ac0:	e798      	b.n	29f4 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_RX_RSR(sn);
    2ac2:	f000 f951 	bl	2d68 <getSn_RX_RSR>
    2ac6:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2ac8:	2001      	movs	r0, #1
         break;
    2aca:	e793      	b.n	29f4 <getsockopt+0x2c>
         *(uint8_t*) arg = getSn_SR(sn);
    2acc:	0080      	lsls	r0, r0, #2
    2ace:	3001      	adds	r0, #1
    2ad0:	00c0      	lsls	r0, r0, #3
    2ad2:	23c0      	movs	r3, #192	; 0xc0
    2ad4:	009b      	lsls	r3, r3, #2
    2ad6:	469c      	mov	ip, r3
    2ad8:	4460      	add	r0, ip
    2ada:	f000 f835 	bl	2b48 <WIZCHIP_READ>
    2ade:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2ae0:	2001      	movs	r0, #1
         break;
    2ae2:	e787      	b.n	29f4 <getsockopt+0x2c>
         if(getSn_MR(sn) & Sn_MR_TCP)
    2ae4:	0080      	lsls	r0, r0, #2
    2ae6:	3001      	adds	r0, #1
    2ae8:	00c0      	lsls	r0, r0, #3
    2aea:	f000 f82d 	bl	2b48 <WIZCHIP_READ>
    2aee:	07c3      	lsls	r3, r0, #31
    2af0:	d405      	bmi.n	2afe <getsockopt+0x136>
            *(uint16_t*)arg = sock_remained_size[sn];
    2af2:	0064      	lsls	r4, r4, #1
    2af4:	4b12      	ldr	r3, [pc, #72]	; (2b40 <getsockopt+0x178>)
    2af6:	5ae3      	ldrh	r3, [r4, r3]
    2af8:	802b      	strh	r3, [r5, #0]
   return SOCK_OK;
    2afa:	2001      	movs	r0, #1
    2afc:	e77a      	b.n	29f4 <getsockopt+0x2c>
            *(uint16_t*)arg = getSn_RX_RSR(sn);
    2afe:	0020      	movs	r0, r4
    2b00:	f000 f932 	bl	2d68 <getSn_RX_RSR>
    2b04:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2b06:	2001      	movs	r0, #1
    2b08:	e774      	b.n	29f4 <getsockopt+0x2c>
         if((getSn_MR(sn) == Sn_MR_TCP))
    2b0a:	0080      	lsls	r0, r0, #2
    2b0c:	3001      	adds	r0, #1
    2b0e:	00c0      	lsls	r0, r0, #3
    2b10:	f000 f81a 	bl	2b48 <WIZCHIP_READ>
    2b14:	2801      	cmp	r0, #1
    2b16:	d00d      	beq.n	2b34 <getsockopt+0x16c>
         *(uint8_t*)arg = sock_pack_info[sn];
    2b18:	4b0a      	ldr	r3, [pc, #40]	; (2b44 <getsockopt+0x17c>)
    2b1a:	5d1b      	ldrb	r3, [r3, r4]
    2b1c:	702b      	strb	r3, [r5, #0]
   return SOCK_OK;
    2b1e:	2001      	movs	r0, #1
         break;
    2b20:	e768      	b.n	29f4 <getsockopt+0x2c>
   CHECK_SOCKNUM();
    2b22:	2001      	movs	r0, #1
    2b24:	4240      	negs	r0, r0
    2b26:	e765      	b.n	29f4 <getsockopt+0x2c>
         return SOCKERR_SOCKOPT;
    2b28:	2002      	movs	r0, #2
    2b2a:	4240      	negs	r0, r0
    2b2c:	e762      	b.n	29f4 <getsockopt+0x2c>
         CHECK_SOCKMODE(Sn_MR_TCP);
    2b2e:	2005      	movs	r0, #5
    2b30:	4240      	negs	r0, r0
    2b32:	e75f      	b.n	29f4 <getsockopt+0x2c>
             return SOCKERR_SOCKMODE;
    2b34:	2005      	movs	r0, #5
    2b36:	4240      	negs	r0, r0
    2b38:	e75c      	b.n	29f4 <getsockopt+0x2c>
    2b3a:	46c0      	nop			; (mov r8, r8)
    2b3c:	0000d53c 	.word	0x0000d53c
    2b40:	20000a9c 	.word	0x20000a9c
    2b44:	20000a94 	.word	0x20000a94

00002b48 <WIZCHIP_READ>:

#if   (_WIZCHIP_ == 5500)
////////////////////////////////////////////////////

uint8_t  WIZCHIP_READ(uint32_t AddrSel)
{
    2b48:	b530      	push	{r4, r5, lr}
    2b4a:	b083      	sub	sp, #12
    2b4c:	0004      	movs	r4, r0
   uint8_t ret;
   uint8_t spi_data[3];

   WIZCHIP_CRITICAL_ENTER();
    2b4e:	4d16      	ldr	r5, [pc, #88]	; (2ba8 <WIZCHIP_READ+0x60>)
    2b50:	68eb      	ldr	r3, [r5, #12]
    2b52:	4798      	blx	r3
   WIZCHIP.CS._select();
    2b54:	696b      	ldr	r3, [r5, #20]
    2b56:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_READ_ | _W5500_SPI_VDM_OP_);

   if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2b58:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    2b5a:	2b00      	cmp	r3, #0
    2b5c:	d016      	beq.n	2b8c <WIZCHIP_READ+0x44>
    2b5e:	4b12      	ldr	r3, [pc, #72]	; (2ba8 <WIZCHIP_READ+0x60>)
    2b60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2b62:	2b00      	cmp	r3, #0
    2b64:	d012      	beq.n	2b8c <WIZCHIP_READ+0x44>
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
   }
   else																// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2b66:	0c22      	lsrs	r2, r4, #16
    2b68:	a801      	add	r0, sp, #4
    2b6a:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2b6c:	0a22      	lsrs	r2, r4, #8
    2b6e:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2b70:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2b72:	2103      	movs	r1, #3
    2b74:	4798      	blx	r3
   }
   ret = WIZCHIP.IF.SPI._read_byte();
    2b76:	4c0c      	ldr	r4, [pc, #48]	; (2ba8 <WIZCHIP_READ+0x60>)
    2b78:	69e3      	ldr	r3, [r4, #28]
    2b7a:	4798      	blx	r3
    2b7c:	0005      	movs	r5, r0

   WIZCHIP.CS._deselect();
    2b7e:	69a3      	ldr	r3, [r4, #24]
    2b80:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2b82:	6923      	ldr	r3, [r4, #16]
    2b84:	4798      	blx	r3
   return ret;
}
    2b86:	0028      	movs	r0, r5
    2b88:	b003      	add	sp, #12
    2b8a:	bd30      	pop	{r4, r5, pc}
	   WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2b8c:	4d06      	ldr	r5, [pc, #24]	; (2ba8 <WIZCHIP_READ+0x60>)
    2b8e:	0c20      	lsrs	r0, r4, #16
    2b90:	b2c0      	uxtb	r0, r0
    2b92:	6a2b      	ldr	r3, [r5, #32]
    2b94:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2b96:	0a20      	lsrs	r0, r4, #8
    2b98:	b2c0      	uxtb	r0, r0
    2b9a:	6a2b      	ldr	r3, [r5, #32]
    2b9c:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2b9e:	6a2b      	ldr	r3, [r5, #32]
    2ba0:	b2e0      	uxtb	r0, r4
    2ba2:	4798      	blx	r3
    2ba4:	e7e7      	b.n	2b76 <WIZCHIP_READ+0x2e>
    2ba6:	46c0      	nop			; (mov r8, r8)
    2ba8:	2000002c 	.word	0x2000002c

00002bac <WIZCHIP_WRITE>:

void     WIZCHIP_WRITE(uint32_t AddrSel, uint8_t wb )
{
    2bac:	b570      	push	{r4, r5, r6, lr}
    2bae:	b082      	sub	sp, #8
    2bb0:	0004      	movs	r4, r0
    2bb2:	000e      	movs	r6, r1
   uint8_t spi_data[4];

   WIZCHIP_CRITICAL_ENTER();
    2bb4:	4d14      	ldr	r5, [pc, #80]	; (2c08 <WIZCHIP_WRITE+0x5c>)
    2bb6:	68eb      	ldr	r3, [r5, #12]
    2bb8:	4798      	blx	r3
   WIZCHIP.CS._select();
    2bba:	696b      	ldr	r3, [r5, #20]
    2bbc:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_WRITE_ | _W5500_SPI_VDM_OP_);
    2bbe:	2004      	movs	r0, #4
    2bc0:	4304      	orrs	r4, r0

   //if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
   if(!WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2bc2:	6aab      	ldr	r3, [r5, #40]	; 0x28
    2bc4:	2b00      	cmp	r3, #0
    2bc6:	d00f      	beq.n	2be8 <WIZCHIP_WRITE+0x3c>
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
		WIZCHIP.IF.SPI._write_byte(wb);
   }
   else									// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2bc8:	0c22      	lsrs	r2, r4, #16
    2bca:	a801      	add	r0, sp, #4
    2bcc:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2bce:	0a22      	lsrs	r2, r4, #8
    2bd0:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2bd2:	7084      	strb	r4, [r0, #2]
		spi_data[3] = wb;
    2bd4:	70c6      	strb	r6, [r0, #3]
		WIZCHIP.IF.SPI._write_burst(spi_data, 4);
    2bd6:	2104      	movs	r1, #4
    2bd8:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2bda:	4c0b      	ldr	r4, [pc, #44]	; (2c08 <WIZCHIP_WRITE+0x5c>)
    2bdc:	69a3      	ldr	r3, [r4, #24]
    2bde:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2be0:	6923      	ldr	r3, [r4, #16]
    2be2:	4798      	blx	r3
}
    2be4:	b002      	add	sp, #8
    2be6:	bd70      	pop	{r4, r5, r6, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2be8:	4d07      	ldr	r5, [pc, #28]	; (2c08 <WIZCHIP_WRITE+0x5c>)
    2bea:	0c20      	lsrs	r0, r4, #16
    2bec:	b2c0      	uxtb	r0, r0
    2bee:	6a2b      	ldr	r3, [r5, #32]
    2bf0:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2bf2:	0a20      	lsrs	r0, r4, #8
    2bf4:	b2c0      	uxtb	r0, r0
    2bf6:	6a2b      	ldr	r3, [r5, #32]
    2bf8:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2bfa:	b2e0      	uxtb	r0, r4
    2bfc:	6a2b      	ldr	r3, [r5, #32]
    2bfe:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte(wb);
    2c00:	6a2b      	ldr	r3, [r5, #32]
    2c02:	0030      	movs	r0, r6
    2c04:	4798      	blx	r3
    2c06:	e7e8      	b.n	2bda <WIZCHIP_WRITE+0x2e>
    2c08:	2000002c 	.word	0x2000002c

00002c0c <WIZCHIP_READ_BUF>:
         
void     WIZCHIP_READ_BUF (uint32_t AddrSel, uint8_t* pBuf, uint16_t len)
{
    2c0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c0e:	b083      	sub	sp, #12
    2c10:	0004      	movs	r4, r0
    2c12:	000f      	movs	r7, r1
    2c14:	0016      	movs	r6, r2
   uint8_t spi_data[3];
   uint16_t i;

   WIZCHIP_CRITICAL_ENTER();
    2c16:	4d1c      	ldr	r5, [pc, #112]	; (2c88 <WIZCHIP_READ_BUF+0x7c>)
    2c18:	68eb      	ldr	r3, [r5, #12]
    2c1a:	4798      	blx	r3
   WIZCHIP.CS._select();
    2c1c:	696b      	ldr	r3, [r5, #20]
    2c1e:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_READ_ | _W5500_SPI_VDM_OP_);

   if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2c20:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    2c22:	2b00      	cmp	r3, #0
    2c24:	d017      	beq.n	2c56 <WIZCHIP_READ_BUF+0x4a>
    2c26:	4b18      	ldr	r3, [pc, #96]	; (2c88 <WIZCHIP_READ_BUF+0x7c>)
    2c28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2c2a:	2b00      	cmp	r3, #0
    2c2c:	d013      	beq.n	2c56 <WIZCHIP_READ_BUF+0x4a>
		for(i = 0; i < len; i++)
		   pBuf[i] = WIZCHIP.IF.SPI._read_byte();
   }
   else																// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2c2e:	0c22      	lsrs	r2, r4, #16
    2c30:	a801      	add	r0, sp, #4
    2c32:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2c34:	0a22      	lsrs	r2, r4, #8
    2c36:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2c38:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2c3a:	2103      	movs	r1, #3
    2c3c:	4798      	blx	r3
		WIZCHIP.IF.SPI._read_burst(pBuf, len);
    2c3e:	4b12      	ldr	r3, [pc, #72]	; (2c88 <WIZCHIP_READ_BUF+0x7c>)
    2c40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2c42:	0031      	movs	r1, r6
    2c44:	0038      	movs	r0, r7
    2c46:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2c48:	4c0f      	ldr	r4, [pc, #60]	; (2c88 <WIZCHIP_READ_BUF+0x7c>)
    2c4a:	69a3      	ldr	r3, [r4, #24]
    2c4c:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2c4e:	6923      	ldr	r3, [r4, #16]
    2c50:	4798      	blx	r3
}
    2c52:	b003      	add	sp, #12
    2c54:	bdf0      	pop	{r4, r5, r6, r7, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2c56:	4d0c      	ldr	r5, [pc, #48]	; (2c88 <WIZCHIP_READ_BUF+0x7c>)
    2c58:	0c20      	lsrs	r0, r4, #16
    2c5a:	b2c0      	uxtb	r0, r0
    2c5c:	6a2b      	ldr	r3, [r5, #32]
    2c5e:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2c60:	0a20      	lsrs	r0, r4, #8
    2c62:	b2c0      	uxtb	r0, r0
    2c64:	6a2b      	ldr	r3, [r5, #32]
    2c66:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2c68:	6a2b      	ldr	r3, [r5, #32]
    2c6a:	b2e0      	uxtb	r0, r4
    2c6c:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2c6e:	2400      	movs	r4, #0
    2c70:	e006      	b.n	2c80 <WIZCHIP_READ_BUF+0x74>
		   pBuf[i] = WIZCHIP.IF.SPI._read_byte();
    2c72:	193d      	adds	r5, r7, r4
    2c74:	4b04      	ldr	r3, [pc, #16]	; (2c88 <WIZCHIP_READ_BUF+0x7c>)
    2c76:	69db      	ldr	r3, [r3, #28]
    2c78:	4798      	blx	r3
    2c7a:	7028      	strb	r0, [r5, #0]
		for(i = 0; i < len; i++)
    2c7c:	3401      	adds	r4, #1
    2c7e:	b2a4      	uxth	r4, r4
    2c80:	42b4      	cmp	r4, r6
    2c82:	d3f6      	bcc.n	2c72 <WIZCHIP_READ_BUF+0x66>
    2c84:	e7e0      	b.n	2c48 <WIZCHIP_READ_BUF+0x3c>
    2c86:	46c0      	nop			; (mov r8, r8)
    2c88:	2000002c 	.word	0x2000002c

00002c8c <WIZCHIP_WRITE_BUF>:

void     WIZCHIP_WRITE_BUF(uint32_t AddrSel, uint8_t* pBuf, uint16_t len)
{
    2c8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c8e:	b083      	sub	sp, #12
    2c90:	0004      	movs	r4, r0
    2c92:	000f      	movs	r7, r1
    2c94:	0016      	movs	r6, r2
   uint8_t spi_data[3];
   uint16_t i;

   WIZCHIP_CRITICAL_ENTER();
    2c96:	4d1a      	ldr	r5, [pc, #104]	; (2d00 <WIZCHIP_WRITE_BUF+0x74>)
    2c98:	68eb      	ldr	r3, [r5, #12]
    2c9a:	4798      	blx	r3
   WIZCHIP.CS._select();
    2c9c:	696b      	ldr	r3, [r5, #20]
    2c9e:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_WRITE_ | _W5500_SPI_VDM_OP_);
    2ca0:	2004      	movs	r0, #4
    2ca2:	4304      	orrs	r4, r0

   if(!WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2ca4:	6aab      	ldr	r3, [r5, #40]	; 0x28
    2ca6:	2b00      	cmp	r3, #0
    2ca8:	d013      	beq.n	2cd2 <WIZCHIP_WRITE_BUF+0x46>
		for(i = 0; i < len; i++)
			WIZCHIP.IF.SPI._write_byte(pBuf[i]);
   }
   else									// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2caa:	0c22      	lsrs	r2, r4, #16
    2cac:	a801      	add	r0, sp, #4
    2cae:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2cb0:	0a22      	lsrs	r2, r4, #8
    2cb2:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2cb4:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2cb6:	2103      	movs	r1, #3
    2cb8:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_burst(pBuf, len);
    2cba:	4b11      	ldr	r3, [pc, #68]	; (2d00 <WIZCHIP_WRITE_BUF+0x74>)
    2cbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2cbe:	0031      	movs	r1, r6
    2cc0:	0038      	movs	r0, r7
    2cc2:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2cc4:	4c0e      	ldr	r4, [pc, #56]	; (2d00 <WIZCHIP_WRITE_BUF+0x74>)
    2cc6:	69a3      	ldr	r3, [r4, #24]
    2cc8:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2cca:	6923      	ldr	r3, [r4, #16]
    2ccc:	4798      	blx	r3
}
    2cce:	b003      	add	sp, #12
    2cd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2cd2:	4d0b      	ldr	r5, [pc, #44]	; (2d00 <WIZCHIP_WRITE_BUF+0x74>)
    2cd4:	0c20      	lsrs	r0, r4, #16
    2cd6:	b2c0      	uxtb	r0, r0
    2cd8:	6a2b      	ldr	r3, [r5, #32]
    2cda:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2cdc:	0a20      	lsrs	r0, r4, #8
    2cde:	b2c0      	uxtb	r0, r0
    2ce0:	6a2b      	ldr	r3, [r5, #32]
    2ce2:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2ce4:	6a2b      	ldr	r3, [r5, #32]
    2ce6:	b2e0      	uxtb	r0, r4
    2ce8:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2cea:	2400      	movs	r4, #0
    2cec:	e005      	b.n	2cfa <WIZCHIP_WRITE_BUF+0x6e>
			WIZCHIP.IF.SPI._write_byte(pBuf[i]);
    2cee:	4b04      	ldr	r3, [pc, #16]	; (2d00 <WIZCHIP_WRITE_BUF+0x74>)
    2cf0:	6a1b      	ldr	r3, [r3, #32]
    2cf2:	5d38      	ldrb	r0, [r7, r4]
    2cf4:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2cf6:	3401      	adds	r4, #1
    2cf8:	b2a4      	uxth	r4, r4
    2cfa:	42b4      	cmp	r4, r6
    2cfc:	d3f7      	bcc.n	2cee <WIZCHIP_WRITE_BUF+0x62>
    2cfe:	e7e1      	b.n	2cc4 <WIZCHIP_WRITE_BUF+0x38>
    2d00:	2000002c 	.word	0x2000002c

00002d04 <getSn_TX_FSR>:


uint16_t getSn_TX_FSR(uint8_t sn)
{
    2d04:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d06:	46c6      	mov	lr, r8
    2d08:	b500      	push	{lr}
    2d0a:	0007      	movs	r7, r0
   uint16_t val=0,val1=0;
    2d0c:	2500      	movs	r5, #0
    2d0e:	e001      	b.n	2d14 <getSn_TX_FSR+0x10>
      if (val1 != 0)
      {
        val = WIZCHIP_READ(Sn_TX_FSR(sn));
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
      }
   }while (val != val1);
    2d10:	42a5      	cmp	r5, r4
    2d12:	d025      	beq.n	2d60 <getSn_TX_FSR+0x5c>
      val1 = WIZCHIP_READ(Sn_TX_FSR(sn));
    2d14:	00bb      	lsls	r3, r7, #2
    2d16:	3301      	adds	r3, #1
    2d18:	00db      	lsls	r3, r3, #3
    2d1a:	4698      	mov	r8, r3
    2d1c:	2680      	movs	r6, #128	; 0x80
    2d1e:	01b6      	lsls	r6, r6, #6
    2d20:	4446      	add	r6, r8
    2d22:	0030      	movs	r0, r6
    2d24:	f7ff ff10 	bl	2b48 <WIZCHIP_READ>
    2d28:	b284      	uxth	r4, r0
      val1 = (val1 << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
    2d2a:	0224      	lsls	r4, r4, #8
    2d2c:	b2a4      	uxth	r4, r4
    2d2e:	2384      	movs	r3, #132	; 0x84
    2d30:	019b      	lsls	r3, r3, #6
    2d32:	469c      	mov	ip, r3
    2d34:	44e0      	add	r8, ip
    2d36:	4640      	mov	r0, r8
    2d38:	f7ff ff06 	bl	2b48 <WIZCHIP_READ>
    2d3c:	b280      	uxth	r0, r0
    2d3e:	1824      	adds	r4, r4, r0
    2d40:	b2a4      	uxth	r4, r4
      if (val1 != 0)
    2d42:	2c00      	cmp	r4, #0
    2d44:	d0e4      	beq.n	2d10 <getSn_TX_FSR+0xc>
        val = WIZCHIP_READ(Sn_TX_FSR(sn));
    2d46:	0030      	movs	r0, r6
    2d48:	f7ff fefe 	bl	2b48 <WIZCHIP_READ>
    2d4c:	b280      	uxth	r0, r0
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
    2d4e:	0200      	lsls	r0, r0, #8
    2d50:	b285      	uxth	r5, r0
    2d52:	4640      	mov	r0, r8
    2d54:	f7ff fef8 	bl	2b48 <WIZCHIP_READ>
    2d58:	b280      	uxth	r0, r0
    2d5a:	182d      	adds	r5, r5, r0
    2d5c:	b2ad      	uxth	r5, r5
    2d5e:	e7d7      	b.n	2d10 <getSn_TX_FSR+0xc>
   return val;
}
    2d60:	0028      	movs	r0, r5
    2d62:	bc04      	pop	{r2}
    2d64:	4690      	mov	r8, r2
    2d66:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002d68 <getSn_RX_RSR>:


uint16_t getSn_RX_RSR(uint8_t sn)
{
    2d68:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d6a:	46c6      	mov	lr, r8
    2d6c:	b500      	push	{lr}
    2d6e:	0007      	movs	r7, r0
   uint16_t val=0,val1=0;
    2d70:	2500      	movs	r5, #0
    2d72:	e001      	b.n	2d78 <getSn_RX_RSR+0x10>
      if (val1 != 0)
      {
        val = WIZCHIP_READ(Sn_RX_RSR(sn));
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
      }
   }while (val != val1);
    2d74:	42a5      	cmp	r5, r4
    2d76:	d025      	beq.n	2dc4 <getSn_RX_RSR+0x5c>
      val1 = WIZCHIP_READ(Sn_RX_RSR(sn));
    2d78:	00bb      	lsls	r3, r7, #2
    2d7a:	3301      	adds	r3, #1
    2d7c:	00db      	lsls	r3, r3, #3
    2d7e:	4698      	mov	r8, r3
    2d80:	2698      	movs	r6, #152	; 0x98
    2d82:	01b6      	lsls	r6, r6, #6
    2d84:	4446      	add	r6, r8
    2d86:	0030      	movs	r0, r6
    2d88:	f7ff fede 	bl	2b48 <WIZCHIP_READ>
    2d8c:	b284      	uxth	r4, r0
      val1 = (val1 << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
    2d8e:	0224      	lsls	r4, r4, #8
    2d90:	b2a4      	uxth	r4, r4
    2d92:	239c      	movs	r3, #156	; 0x9c
    2d94:	019b      	lsls	r3, r3, #6
    2d96:	469c      	mov	ip, r3
    2d98:	44e0      	add	r8, ip
    2d9a:	4640      	mov	r0, r8
    2d9c:	f7ff fed4 	bl	2b48 <WIZCHIP_READ>
    2da0:	b280      	uxth	r0, r0
    2da2:	1824      	adds	r4, r4, r0
    2da4:	b2a4      	uxth	r4, r4
      if (val1 != 0)
    2da6:	2c00      	cmp	r4, #0
    2da8:	d0e4      	beq.n	2d74 <getSn_RX_RSR+0xc>
        val = WIZCHIP_READ(Sn_RX_RSR(sn));
    2daa:	0030      	movs	r0, r6
    2dac:	f7ff fecc 	bl	2b48 <WIZCHIP_READ>
    2db0:	b280      	uxth	r0, r0
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
    2db2:	0200      	lsls	r0, r0, #8
    2db4:	b285      	uxth	r5, r0
    2db6:	4640      	mov	r0, r8
    2db8:	f7ff fec6 	bl	2b48 <WIZCHIP_READ>
    2dbc:	b280      	uxth	r0, r0
    2dbe:	182d      	adds	r5, r5, r0
    2dc0:	b2ad      	uxth	r5, r5
    2dc2:	e7d7      	b.n	2d74 <getSn_RX_RSR+0xc>
   return val;
}
    2dc4:	0028      	movs	r0, r5
    2dc6:	bc04      	pop	{r2}
    2dc8:	4690      	mov	r8, r2
    2dca:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002dcc <wiz_send_data>:

void wiz_send_data(uint8_t sn, uint8_t *wizdata, uint16_t len)
{
    2dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
    2dce:	b083      	sub	sp, #12
    2dd0:	9100      	str	r1, [sp, #0]
    2dd2:	1e14      	subs	r4, r2, #0
   uint16_t ptr = 0;
   uint32_t addrsel = 0;

   if(len == 0)  return;
    2dd4:	d101      	bne.n	2dda <wiz_send_data+0xe>
   //
   WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
   
   ptr += len;
   setSn_TX_WR(sn,ptr);
}
    2dd6:	b003      	add	sp, #12
    2dd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   ptr = getSn_TX_WR(sn);
    2dda:	0086      	lsls	r6, r0, #2
    2ddc:	1c75      	adds	r5, r6, #1
    2dde:	00ed      	lsls	r5, r5, #3
    2de0:	2390      	movs	r3, #144	; 0x90
    2de2:	019b      	lsls	r3, r3, #6
    2de4:	469c      	mov	ip, r3
    2de6:	44ac      	add	ip, r5
    2de8:	4663      	mov	r3, ip
    2dea:	9301      	str	r3, [sp, #4]
    2dec:	4660      	mov	r0, ip
    2dee:	f7ff feab 	bl	2b48 <WIZCHIP_READ>
    2df2:	b280      	uxth	r0, r0
    2df4:	0200      	lsls	r0, r0, #8
    2df6:	b287      	uxth	r7, r0
    2df8:	2294      	movs	r2, #148	; 0x94
    2dfa:	0192      	lsls	r2, r2, #6
    2dfc:	4694      	mov	ip, r2
    2dfe:	4465      	add	r5, ip
    2e00:	0028      	movs	r0, r5
    2e02:	f7ff fea1 	bl	2b48 <WIZCHIP_READ>
    2e06:	b280      	uxth	r0, r0
    2e08:	1838      	adds	r0, r7, r0
    2e0a:	b287      	uxth	r7, r0
   addrsel = ((uint32_t)ptr << 8) + (WIZCHIP_TXBUF_BLOCK(sn) << 3);
    2e0c:	023b      	lsls	r3, r7, #8
    2e0e:	1cb0      	adds	r0, r6, #2
    2e10:	00c0      	lsls	r0, r0, #3
    2e12:	1818      	adds	r0, r3, r0
   WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
    2e14:	0022      	movs	r2, r4
    2e16:	9900      	ldr	r1, [sp, #0]
    2e18:	f7ff ff38 	bl	2c8c <WIZCHIP_WRITE_BUF>
   ptr += len;
    2e1c:	19e4      	adds	r4, r4, r7
    2e1e:	b2a4      	uxth	r4, r4
   setSn_TX_WR(sn,ptr);
    2e20:	0a21      	lsrs	r1, r4, #8
    2e22:	9801      	ldr	r0, [sp, #4]
    2e24:	f7ff fec2 	bl	2bac <WIZCHIP_WRITE>
    2e28:	b2e1      	uxtb	r1, r4
    2e2a:	0028      	movs	r0, r5
    2e2c:	f7ff febe 	bl	2bac <WIZCHIP_WRITE>
    2e30:	e7d1      	b.n	2dd6 <wiz_send_data+0xa>

00002e32 <wiz_recv_data>:

void wiz_recv_data(uint8_t sn, uint8_t *wizdata, uint16_t len)
{
    2e32:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e34:	b083      	sub	sp, #12
    2e36:	9100      	str	r1, [sp, #0]
    2e38:	1e14      	subs	r4, r2, #0
   uint16_t ptr = 0;
   uint32_t addrsel = 0;
   
   if(len == 0) return;
    2e3a:	d101      	bne.n	2e40 <wiz_recv_data+0xe>
   //
   WIZCHIP_READ_BUF(addrsel, wizdata, len);
   ptr += len;
   
   setSn_RX_RD(sn,ptr);
}
    2e3c:	b003      	add	sp, #12
    2e3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   ptr = getSn_RX_RD(sn);
    2e40:	0086      	lsls	r6, r0, #2
    2e42:	1c75      	adds	r5, r6, #1
    2e44:	00ed      	lsls	r5, r5, #3
    2e46:	23a0      	movs	r3, #160	; 0xa0
    2e48:	019b      	lsls	r3, r3, #6
    2e4a:	469c      	mov	ip, r3
    2e4c:	44ac      	add	ip, r5
    2e4e:	4663      	mov	r3, ip
    2e50:	9301      	str	r3, [sp, #4]
    2e52:	4660      	mov	r0, ip
    2e54:	f7ff fe78 	bl	2b48 <WIZCHIP_READ>
    2e58:	b280      	uxth	r0, r0
    2e5a:	0200      	lsls	r0, r0, #8
    2e5c:	b287      	uxth	r7, r0
    2e5e:	22a4      	movs	r2, #164	; 0xa4
    2e60:	0192      	lsls	r2, r2, #6
    2e62:	4694      	mov	ip, r2
    2e64:	4465      	add	r5, ip
    2e66:	0028      	movs	r0, r5
    2e68:	f7ff fe6e 	bl	2b48 <WIZCHIP_READ>
    2e6c:	b280      	uxth	r0, r0
    2e6e:	1838      	adds	r0, r7, r0
    2e70:	b287      	uxth	r7, r0
   addrsel = ((uint32_t)ptr << 8) + (WIZCHIP_RXBUF_BLOCK(sn) << 3);
    2e72:	023b      	lsls	r3, r7, #8
    2e74:	1cf0      	adds	r0, r6, #3
    2e76:	00c0      	lsls	r0, r0, #3
    2e78:	1818      	adds	r0, r3, r0
   WIZCHIP_READ_BUF(addrsel, wizdata, len);
    2e7a:	0022      	movs	r2, r4
    2e7c:	9900      	ldr	r1, [sp, #0]
    2e7e:	f7ff fec5 	bl	2c0c <WIZCHIP_READ_BUF>
   ptr += len;
    2e82:	19e4      	adds	r4, r4, r7
    2e84:	b2a4      	uxth	r4, r4
   setSn_RX_RD(sn,ptr);
    2e86:	0a21      	lsrs	r1, r4, #8
    2e88:	9801      	ldr	r0, [sp, #4]
    2e8a:	f7ff fe8f 	bl	2bac <WIZCHIP_WRITE>
    2e8e:	b2e1      	uxtb	r1, r4
    2e90:	0028      	movs	r0, r5
    2e92:	f7ff fe8b 	bl	2bac <WIZCHIP_WRITE>
    2e96:	e7d1      	b.n	2e3c <wiz_recv_data+0xa>

00002e98 <wiz_recv_ignore>:


void wiz_recv_ignore(uint8_t sn, uint16_t len)
{
    2e98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2e9a:	000c      	movs	r4, r1
   uint16_t ptr = 0;

   ptr = getSn_RX_RD(sn);
    2e9c:	0087      	lsls	r7, r0, #2
    2e9e:	3701      	adds	r7, #1
    2ea0:	00ff      	lsls	r7, r7, #3
    2ea2:	23a0      	movs	r3, #160	; 0xa0
    2ea4:	019b      	lsls	r3, r3, #6
    2ea6:	18fe      	adds	r6, r7, r3
    2ea8:	0030      	movs	r0, r6
    2eaa:	f7ff fe4d 	bl	2b48 <WIZCHIP_READ>
    2eae:	b280      	uxth	r0, r0
    2eb0:	0200      	lsls	r0, r0, #8
    2eb2:	b285      	uxth	r5, r0
    2eb4:	23a4      	movs	r3, #164	; 0xa4
    2eb6:	019b      	lsls	r3, r3, #6
    2eb8:	469c      	mov	ip, r3
    2eba:	4467      	add	r7, ip
    2ebc:	0038      	movs	r0, r7
    2ebe:	f7ff fe43 	bl	2b48 <WIZCHIP_READ>
    2ec2:	b280      	uxth	r0, r0
    2ec4:	182d      	adds	r5, r5, r0
    2ec6:	b2ad      	uxth	r5, r5
   ptr += len;
    2ec8:	192c      	adds	r4, r5, r4
    2eca:	b2a4      	uxth	r4, r4
   setSn_RX_RD(sn,ptr);
    2ecc:	0a21      	lsrs	r1, r4, #8
    2ece:	0030      	movs	r0, r6
    2ed0:	f7ff fe6c 	bl	2bac <WIZCHIP_WRITE>
    2ed4:	b2e1      	uxtb	r1, r4
    2ed6:	0038      	movs	r0, r7
    2ed8:	f7ff fe68 	bl	2bac <WIZCHIP_WRITE>
}
    2edc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002ede <wizchip_cris_enter>:
 * @brief Default function to enable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_enter(void)           {};
void 	  wizchip_cris_enter(void)           {}
    2ede:	4770      	bx	lr

00002ee0 <wizchip_cris_exit>:
 * @brief Default function to disable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_exit(void)          {};
void 	  wizchip_cris_exit(void)          {}
    2ee0:	4770      	bx	lr

00002ee2 <wizchip_cs_select>:
 * @brief Default function to select chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_select(void)            {};
void 	wizchip_cs_select(void)            {}
    2ee2:	4770      	bx	lr

00002ee4 <wizchip_cs_deselect>:
 * @brief Default function to deselect chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_deselect(void)          {};
void 	wizchip_cs_deselect(void)          {}
    2ee4:	4770      	bx	lr

00002ee6 <wizchip_bus_readdata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
 //M20150601 : Rename the function for integrating with W5300
//uint8_t wizchip_bus_readbyte(uint32_t AddrSel) { return * ((volatile uint8_t *)((ptrdiff_t) AddrSel)); }
iodata_t wizchip_bus_readdata(uint32_t AddrSel) { return * ((volatile iodata_t *)((ptrdiff_t) AddrSel)); }
    2ee6:	7800      	ldrb	r0, [r0, #0]
    2ee8:	b2c0      	uxtb	r0, r0
    2eea:	4770      	bx	lr

00002eec <wizchip_bus_writedata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//M20150601 : Rename the function for integrating with W5300
//void 	wizchip_bus_writebyte(uint32_t AddrSel, uint8_t wb)  { *((volatile uint8_t*)((ptrdiff_t)AddrSel)) = wb; }
void 	wizchip_bus_writedata(uint32_t AddrSel, iodata_t wb)  { *((volatile iodata_t*)((ptrdiff_t)AddrSel)) = wb; }
    2eec:	7001      	strb	r1, [r0, #0]
    2eee:	4770      	bx	lr

00002ef0 <wizchip_spi_readbyte>:
 * @brief Default function to read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//uint8_t wizchip_spi_readbyte(void)        {return 0;};
uint8_t wizchip_spi_readbyte(void)        {return 0;}
    2ef0:	2000      	movs	r0, #0
    2ef2:	4770      	bx	lr

00002ef4 <wizchip_spi_writebyte>:
 * @brief Default function to write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writebyte(uint8_t wb) {};
void 	wizchip_spi_writebyte(uint8_t wb) {}
    2ef4:	4770      	bx	lr

00002ef6 <wizchip_spi_readburst>:
 * @brief Default function to burst read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_readburst(uint8_t* pBuf, uint16_t len) 	{}; 
void 	wizchip_spi_readburst(uint8_t* pBuf, uint16_t len) 	{}
    2ef6:	4770      	bx	lr

00002ef8 <wizchip_spi_writeburst>:
 * @brief Default function to burst write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writeburst(uint8_t* pBuf, uint16_t len) {};
void 	wizchip_spi_writeburst(uint8_t* pBuf, uint16_t len) {}
    2ef8:	4770      	bx	lr
	...

00002efc <reg_wizchip_cs_cbfunc>:
   }
}

void reg_wizchip_cs_cbfunc(void(*cs_sel)(void), void(*cs_desel)(void))
{
   if(!cs_sel || !cs_desel)
    2efc:	2800      	cmp	r0, #0
    2efe:	d005      	beq.n	2f0c <reg_wizchip_cs_cbfunc+0x10>
    2f00:	2900      	cmp	r1, #0
    2f02:	d003      	beq.n	2f0c <reg_wizchip_cs_cbfunc+0x10>
      WIZCHIP.CS._select   = wizchip_cs_select;
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
   }
   else
   {
      WIZCHIP.CS._select   = cs_sel;
    2f04:	4b04      	ldr	r3, [pc, #16]	; (2f18 <reg_wizchip_cs_cbfunc+0x1c>)
    2f06:	6158      	str	r0, [r3, #20]
      WIZCHIP.CS._deselect = cs_desel;
    2f08:	6199      	str	r1, [r3, #24]
   }
}
    2f0a:	4770      	bx	lr
      WIZCHIP.CS._select   = wizchip_cs_select;
    2f0c:	4b02      	ldr	r3, [pc, #8]	; (2f18 <reg_wizchip_cs_cbfunc+0x1c>)
    2f0e:	4a03      	ldr	r2, [pc, #12]	; (2f1c <reg_wizchip_cs_cbfunc+0x20>)
    2f10:	615a      	str	r2, [r3, #20]
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
    2f12:	4a03      	ldr	r2, [pc, #12]	; (2f20 <reg_wizchip_cs_cbfunc+0x24>)
    2f14:	619a      	str	r2, [r3, #24]
    2f16:	e7f8      	b.n	2f0a <reg_wizchip_cs_cbfunc+0xe>
    2f18:	2000002c 	.word	0x2000002c
    2f1c:	00002ee3 	.word	0x00002ee3
    2f20:	00002ee5 	.word	0x00002ee5

00002f24 <reg_wizchip_spi_cbfunc>:
   }
}

void reg_wizchip_spi_cbfunc(uint8_t (*spi_rb)(void), void (*spi_wb)(uint8_t wb))
{
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
    2f24:	4b08      	ldr	r3, [pc, #32]	; (2f48 <reg_wizchip_spi_cbfunc+0x24>)
    2f26:	881b      	ldrh	r3, [r3, #0]
    2f28:	059b      	lsls	r3, r3, #22
    2f2a:	d5fb      	bpl.n	2f24 <reg_wizchip_spi_cbfunc>
   
   if(!spi_rb || !spi_wb)
    2f2c:	2800      	cmp	r0, #0
    2f2e:	d005      	beq.n	2f3c <reg_wizchip_spi_cbfunc+0x18>
    2f30:	2900      	cmp	r1, #0
    2f32:	d003      	beq.n	2f3c <reg_wizchip_spi_cbfunc+0x18>
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
   }
   else
   {
      WIZCHIP.IF.SPI._read_byte   = spi_rb;
    2f34:	4b04      	ldr	r3, [pc, #16]	; (2f48 <reg_wizchip_spi_cbfunc+0x24>)
    2f36:	61d8      	str	r0, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = spi_wb;
    2f38:	6219      	str	r1, [r3, #32]
   }
}
    2f3a:	4770      	bx	lr
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
    2f3c:	4b02      	ldr	r3, [pc, #8]	; (2f48 <reg_wizchip_spi_cbfunc+0x24>)
    2f3e:	4a03      	ldr	r2, [pc, #12]	; (2f4c <reg_wizchip_spi_cbfunc+0x28>)
    2f40:	61da      	str	r2, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
    2f42:	4a03      	ldr	r2, [pc, #12]	; (2f50 <reg_wizchip_spi_cbfunc+0x2c>)
    2f44:	621a      	str	r2, [r3, #32]
    2f46:	e7f8      	b.n	2f3a <reg_wizchip_spi_cbfunc+0x16>
    2f48:	2000002c 	.word	0x2000002c
    2f4c:	00002ef1 	.word	0x00002ef1
    2f50:	00002ef5 	.word	0x00002ef5

00002f54 <reg_wizchip_spiburst_cbfunc>:

// 20140626 Eric Added for SPI burst operations
void reg_wizchip_spiburst_cbfunc(void (*spi_rb)(uint8_t* pBuf, uint16_t len), void (*spi_wb)(uint8_t* pBuf, uint16_t len))
{
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
    2f54:	4b08      	ldr	r3, [pc, #32]	; (2f78 <reg_wizchip_spiburst_cbfunc+0x24>)
    2f56:	881b      	ldrh	r3, [r3, #0]
    2f58:	059b      	lsls	r3, r3, #22
    2f5a:	d5fb      	bpl.n	2f54 <reg_wizchip_spiburst_cbfunc>

   if(!spi_rb || !spi_wb)
    2f5c:	2800      	cmp	r0, #0
    2f5e:	d005      	beq.n	2f6c <reg_wizchip_spiburst_cbfunc+0x18>
    2f60:	2900      	cmp	r1, #0
    2f62:	d003      	beq.n	2f6c <reg_wizchip_spiburst_cbfunc+0x18>
      WIZCHIP.IF.SPI._read_burst   = wizchip_spi_readburst;
      WIZCHIP.IF.SPI._write_burst  = wizchip_spi_writeburst;
   }
   else
   {
      WIZCHIP.IF.SPI._read_burst   = spi_rb;
    2f64:	4b04      	ldr	r3, [pc, #16]	; (2f78 <reg_wizchip_spiburst_cbfunc+0x24>)
    2f66:	6258      	str	r0, [r3, #36]	; 0x24
      WIZCHIP.IF.SPI._write_burst  = spi_wb;
    2f68:	6299      	str	r1, [r3, #40]	; 0x28
   }
}
    2f6a:	4770      	bx	lr
      WIZCHIP.IF.SPI._read_burst   = wizchip_spi_readburst;
    2f6c:	4b02      	ldr	r3, [pc, #8]	; (2f78 <reg_wizchip_spiburst_cbfunc+0x24>)
    2f6e:	4a03      	ldr	r2, [pc, #12]	; (2f7c <reg_wizchip_spiburst_cbfunc+0x28>)
    2f70:	625a      	str	r2, [r3, #36]	; 0x24
      WIZCHIP.IF.SPI._write_burst  = wizchip_spi_writeburst;
    2f72:	4a03      	ldr	r2, [pc, #12]	; (2f80 <reg_wizchip_spiburst_cbfunc+0x2c>)
    2f74:	629a      	str	r2, [r3, #40]	; 0x28
    2f76:	e7f8      	b.n	2f6a <reg_wizchip_spiburst_cbfunc+0x16>
    2f78:	2000002c 	.word	0x2000002c
    2f7c:	00002ef7 	.word	0x00002ef7
    2f80:	00002ef9 	.word	0x00002ef9

00002f84 <wizchip_sw_reset>:
   }
   return 0;
}

void wizchip_sw_reset(void)
{
    2f84:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f86:	b087      	sub	sp, #28
#if _WIZCHIP_IO_MODE_  == _WIZCHIP_IO_MODE_BUS_INDIR_
   uint16_t mr = (uint16_t)getMR();
   setMR(mr | MR_IND);
#endif
//
   getSHAR(mac);
    2f88:	2790      	movs	r7, #144	; 0x90
    2f8a:	013f      	lsls	r7, r7, #4
    2f8c:	2206      	movs	r2, #6
    2f8e:	a901      	add	r1, sp, #4
    2f90:	0038      	movs	r0, r7
    2f92:	f7ff fe3b 	bl	2c0c <WIZCHIP_READ_BUF>
   getGAR(gw);  getSUBR(sn);  getSIPR(sip);
    2f96:	2680      	movs	r6, #128	; 0x80
    2f98:	0076      	lsls	r6, r6, #1
    2f9a:	2204      	movs	r2, #4
    2f9c:	a905      	add	r1, sp, #20
    2f9e:	0030      	movs	r0, r6
    2fa0:	f7ff fe34 	bl	2c0c <WIZCHIP_READ_BUF>
    2fa4:	25a0      	movs	r5, #160	; 0xa0
    2fa6:	00ed      	lsls	r5, r5, #3
    2fa8:	2204      	movs	r2, #4
    2faa:	a904      	add	r1, sp, #16
    2fac:	0028      	movs	r0, r5
    2fae:	f7ff fe2d 	bl	2c0c <WIZCHIP_READ_BUF>
    2fb2:	24f0      	movs	r4, #240	; 0xf0
    2fb4:	0124      	lsls	r4, r4, #4
    2fb6:	2204      	movs	r2, #4
    2fb8:	a903      	add	r1, sp, #12
    2fba:	0020      	movs	r0, r4
    2fbc:	f7ff fe26 	bl	2c0c <WIZCHIP_READ_BUF>
   setMR(MR_RST);
    2fc0:	2180      	movs	r1, #128	; 0x80
    2fc2:	2000      	movs	r0, #0
    2fc4:	f7ff fdf2 	bl	2bac <WIZCHIP_WRITE>
   getMR(); // for delay
    2fc8:	2000      	movs	r0, #0
    2fca:	f7ff fdbd 	bl	2b48 <WIZCHIP_READ>
//A2015051 : For indirect bus mode 
#if _WIZCHIP_IO_MODE_  == _WIZCHIP_IO_MODE_BUS_INDIR_
   setMR(mr | MR_IND);
#endif
//
   setSHAR(mac);
    2fce:	2206      	movs	r2, #6
    2fd0:	a901      	add	r1, sp, #4
    2fd2:	0038      	movs	r0, r7
    2fd4:	f7ff fe5a 	bl	2c8c <WIZCHIP_WRITE_BUF>
   setGAR(gw);
    2fd8:	2204      	movs	r2, #4
    2fda:	a905      	add	r1, sp, #20
    2fdc:	0030      	movs	r0, r6
    2fde:	f7ff fe55 	bl	2c8c <WIZCHIP_WRITE_BUF>
   setSUBR(sn);
    2fe2:	2204      	movs	r2, #4
    2fe4:	a904      	add	r1, sp, #16
    2fe6:	0028      	movs	r0, r5
    2fe8:	f7ff fe50 	bl	2c8c <WIZCHIP_WRITE_BUF>
   setSIPR(sip);
    2fec:	2204      	movs	r2, #4
    2fee:	a903      	add	r1, sp, #12
    2ff0:	0020      	movs	r0, r4
    2ff2:	f7ff fe4b 	bl	2c8c <WIZCHIP_WRITE_BUF>
}
    2ff6:	b007      	add	sp, #28
    2ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002ffa <wizchip_init>:

int8_t wizchip_init(uint8_t* txsize, uint8_t* rxsize)
{
    2ffa:	b570      	push	{r4, r5, r6, lr}
    2ffc:	0006      	movs	r6, r0
    2ffe:	000d      	movs	r5, r1
   int8_t i;
#if _WIZCHIP_ < W5200
   int8_t j;
#endif
   int8_t tmp = 0;
   wizchip_sw_reset();
    3000:	f7ff ffc0 	bl	2f84 <wizchip_sw_reset>
   if(txsize)
    3004:	2e00      	cmp	r6, #0
    3006:	d01b      	beq.n	3040 <wizchip_init+0x46>
    3008:	2200      	movs	r2, #0
    300a:	2300      	movs	r3, #0
			tmp += txsize[i];
			if(tmp > 128) return -1;
		}
		if(tmp % 8) return -1;
#else
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    300c:	2b07      	cmp	r3, #7
    300e:	dc07      	bgt.n	3020 <wizchip_init+0x26>
		{
			tmp += txsize[i];
    3010:	5cf1      	ldrb	r1, [r6, r3]
    3012:	188a      	adds	r2, r1, r2
    3014:	b252      	sxtb	r2, r2

#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100 and w5100s
			if(tmp > 8) return -1;
#else
			if(tmp > 16) return -1;
    3016:	2a10      	cmp	r2, #16
    3018:	dc34      	bgt.n	3084 <wizchip_init+0x8a>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    301a:	3301      	adds	r3, #1
    301c:	b25b      	sxtb	r3, r3
    301e:	e7f5      	b.n	300c <wizchip_init+0x12>
    3020:	2400      	movs	r4, #0
    3022:	e00b      	b.n	303c <wizchip_init+0x42>
#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100
			j = 0;
			while((txsize[i] >> j != 1)&&(txsize[i] !=0)){j++;}
			setSn_TXBUF_SIZE(i, j);
#else
			setSn_TXBUF_SIZE(i, txsize[i]);
    3024:	00a0      	lsls	r0, r4, #2
    3026:	3001      	adds	r0, #1
    3028:	00c0      	lsls	r0, r0, #3
    302a:	23f8      	movs	r3, #248	; 0xf8
    302c:	015b      	lsls	r3, r3, #5
    302e:	469c      	mov	ip, r3
    3030:	4460      	add	r0, ip
    3032:	5d31      	ldrb	r1, [r6, r4]
    3034:	f7ff fdba 	bl	2bac <WIZCHIP_WRITE>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    3038:	3401      	adds	r4, #1
    303a:	b264      	sxtb	r4, r4
    303c:	2c07      	cmp	r4, #7
    303e:	ddf1      	ble.n	3024 <wizchip_init+0x2a>
#endif
		}	
   }

   if(rxsize)
    3040:	2d00      	cmp	r5, #0
    3042:	d00b      	beq.n	305c <wizchip_init+0x62>
    3044:	2200      	movs	r2, #0
    3046:	2300      	movs	r3, #0
			tmp += rxsize[i];
			if(tmp > 128) return -1;
		}
		if(tmp % 8) return -1;
#else
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    3048:	2b07      	cmp	r3, #7
    304a:	dc09      	bgt.n	3060 <wizchip_init+0x66>
		{
			tmp += rxsize[i];
    304c:	5ce9      	ldrb	r1, [r5, r3]
    304e:	188a      	adds	r2, r1, r2
    3050:	b252      	sxtb	r2, r2
#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100 and w5100s
			if(tmp > 8) return -1;
#else
			if(tmp > 16) return -1;
    3052:	2a10      	cmp	r2, #16
    3054:	dc19      	bgt.n	308a <wizchip_init+0x90>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    3056:	3301      	adds	r3, #1
    3058:	b25b      	sxtb	r3, r3
    305a:	e7f5      	b.n	3048 <wizchip_init+0x4e>
#else
			setSn_RXBUF_SIZE(i, rxsize[i]);
#endif
		}
   }
   return 0;
    305c:	2000      	movs	r0, #0
    305e:	e010      	b.n	3082 <wizchip_init+0x88>
    3060:	2400      	movs	r4, #0
    3062:	e00b      	b.n	307c <wizchip_init+0x82>
			setSn_RXBUF_SIZE(i, rxsize[i]);
    3064:	00a0      	lsls	r0, r4, #2
    3066:	3001      	adds	r0, #1
    3068:	00c0      	lsls	r0, r0, #3
    306a:	23f0      	movs	r3, #240	; 0xf0
    306c:	015b      	lsls	r3, r3, #5
    306e:	469c      	mov	ip, r3
    3070:	4460      	add	r0, ip
    3072:	5d29      	ldrb	r1, [r5, r4]
    3074:	f7ff fd9a 	bl	2bac <WIZCHIP_WRITE>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    3078:	3401      	adds	r4, #1
    307a:	b264      	sxtb	r4, r4
    307c:	2c07      	cmp	r4, #7
    307e:	ddf1      	ble.n	3064 <wizchip_init+0x6a>
   return 0;
    3080:	2000      	movs	r0, #0
}
    3082:	bd70      	pop	{r4, r5, r6, pc}
			if(tmp > 16) return -1;
    3084:	2001      	movs	r0, #1
    3086:	4240      	negs	r0, r0
    3088:	e7fb      	b.n	3082 <wizchip_init+0x88>
			if(tmp > 16) return -1;
    308a:	2001      	movs	r0, #1
    308c:	4240      	negs	r0, r0
    308e:	e7f8      	b.n	3082 <wizchip_init+0x88>

00003090 <wizphy_reset>:
}

#endif
#if _WIZCHIP_ == W5500
void wizphy_reset(void)
{
    3090:	b510      	push	{r4, lr}
   uint8_t tmp = getPHYCFGR();
    3092:	24b8      	movs	r4, #184	; 0xb8
    3094:	01a4      	lsls	r4, r4, #6
    3096:	0020      	movs	r0, r4
    3098:	f7ff fd56 	bl	2b48 <WIZCHIP_READ>
   tmp &= PHYCFGR_RST;
    309c:	217f      	movs	r1, #127	; 0x7f
    309e:	4001      	ands	r1, r0
   setPHYCFGR(tmp);
    30a0:	0020      	movs	r0, r4
    30a2:	f7ff fd83 	bl	2bac <WIZCHIP_WRITE>
   tmp = getPHYCFGR();
    30a6:	0020      	movs	r0, r4
    30a8:	f7ff fd4e 	bl	2b48 <WIZCHIP_READ>
   tmp |= ~PHYCFGR_RST;
    30ac:	2180      	movs	r1, #128	; 0x80
    30ae:	4249      	negs	r1, r1
    30b0:	4301      	orrs	r1, r0
    30b2:	b2c9      	uxtb	r1, r1
   setPHYCFGR(tmp);
    30b4:	0020      	movs	r0, r4
    30b6:	f7ff fd79 	bl	2bac <WIZCHIP_WRITE>
}
    30ba:	bd10      	pop	{r4, pc}

000030bc <wizchip_setnetinfo>:
}
#endif


void wizchip_setnetinfo(wiz_NetInfo* pnetinfo)
{
    30bc:	b510      	push	{r4, lr}
    30be:	0004      	movs	r4, r0
   setSHAR(pnetinfo->mac);
    30c0:	2206      	movs	r2, #6
    30c2:	0001      	movs	r1, r0
    30c4:	2090      	movs	r0, #144	; 0x90
    30c6:	0100      	lsls	r0, r0, #4
    30c8:	f7ff fde0 	bl	2c8c <WIZCHIP_WRITE_BUF>
   setGAR(pnetinfo->gw);
    30cc:	0021      	movs	r1, r4
    30ce:	310e      	adds	r1, #14
    30d0:	2204      	movs	r2, #4
    30d2:	2080      	movs	r0, #128	; 0x80
    30d4:	0040      	lsls	r0, r0, #1
    30d6:	f7ff fdd9 	bl	2c8c <WIZCHIP_WRITE_BUF>
   setSUBR(pnetinfo->sn);
    30da:	0021      	movs	r1, r4
    30dc:	310a      	adds	r1, #10
    30de:	2204      	movs	r2, #4
    30e0:	20a0      	movs	r0, #160	; 0xa0
    30e2:	00c0      	lsls	r0, r0, #3
    30e4:	f7ff fdd2 	bl	2c8c <WIZCHIP_WRITE_BUF>
   setSIPR(pnetinfo->ip);
    30e8:	1da1      	adds	r1, r4, #6
    30ea:	2204      	movs	r2, #4
    30ec:	20f0      	movs	r0, #240	; 0xf0
    30ee:	0100      	lsls	r0, r0, #4
    30f0:	f7ff fdcc 	bl	2c8c <WIZCHIP_WRITE_BUF>
   _DNS_[0] = pnetinfo->dns[0];
    30f4:	7ca2      	ldrb	r2, [r4, #18]
    30f6:	4b06      	ldr	r3, [pc, #24]	; (3110 <wizchip_setnetinfo+0x54>)
    30f8:	701a      	strb	r2, [r3, #0]
   _DNS_[1] = pnetinfo->dns[1];
    30fa:	7ce2      	ldrb	r2, [r4, #19]
    30fc:	705a      	strb	r2, [r3, #1]
   _DNS_[2] = pnetinfo->dns[2];
    30fe:	7d22      	ldrb	r2, [r4, #20]
    3100:	709a      	strb	r2, [r3, #2]
   _DNS_[3] = pnetinfo->dns[3];
    3102:	7d62      	ldrb	r2, [r4, #21]
    3104:	70da      	strb	r2, [r3, #3]
   _DHCP_   = pnetinfo->dhcp;
    3106:	7da2      	ldrb	r2, [r4, #22]
    3108:	4b02      	ldr	r3, [pc, #8]	; (3114 <wizchip_setnetinfo+0x58>)
    310a:	701a      	strb	r2, [r3, #0]
}
    310c:	bd10      	pop	{r4, pc}
    310e:	46c0      	nop			; (mov r8, r8)
    3110:	20000ab0 	.word	0x20000ab0
    3114:	20000aac 	.word	0x20000aac

00003118 <wizchip_getnetinfo>:

void wizchip_getnetinfo(wiz_NetInfo* pnetinfo)
{
    3118:	b510      	push	{r4, lr}
    311a:	0004      	movs	r4, r0
   getSHAR(pnetinfo->mac);
    311c:	2206      	movs	r2, #6
    311e:	0001      	movs	r1, r0
    3120:	2090      	movs	r0, #144	; 0x90
    3122:	0100      	lsls	r0, r0, #4
    3124:	f7ff fd72 	bl	2c0c <WIZCHIP_READ_BUF>
   getGAR(pnetinfo->gw);
    3128:	0021      	movs	r1, r4
    312a:	310e      	adds	r1, #14
    312c:	2204      	movs	r2, #4
    312e:	2080      	movs	r0, #128	; 0x80
    3130:	0040      	lsls	r0, r0, #1
    3132:	f7ff fd6b 	bl	2c0c <WIZCHIP_READ_BUF>
   getSUBR(pnetinfo->sn);
    3136:	0021      	movs	r1, r4
    3138:	310a      	adds	r1, #10
    313a:	2204      	movs	r2, #4
    313c:	20a0      	movs	r0, #160	; 0xa0
    313e:	00c0      	lsls	r0, r0, #3
    3140:	f7ff fd64 	bl	2c0c <WIZCHIP_READ_BUF>
   getSIPR(pnetinfo->ip);
    3144:	1da1      	adds	r1, r4, #6
    3146:	2204      	movs	r2, #4
    3148:	20f0      	movs	r0, #240	; 0xf0
    314a:	0100      	lsls	r0, r0, #4
    314c:	f7ff fd5e 	bl	2c0c <WIZCHIP_READ_BUF>
   pnetinfo->dns[0]= _DNS_[0];
    3150:	4b06      	ldr	r3, [pc, #24]	; (316c <wizchip_getnetinfo+0x54>)
    3152:	781a      	ldrb	r2, [r3, #0]
    3154:	74a2      	strb	r2, [r4, #18]
   pnetinfo->dns[1]= _DNS_[1];
    3156:	785a      	ldrb	r2, [r3, #1]
    3158:	74e2      	strb	r2, [r4, #19]
   pnetinfo->dns[2]= _DNS_[2];
    315a:	789a      	ldrb	r2, [r3, #2]
    315c:	7522      	strb	r2, [r4, #20]
   pnetinfo->dns[3]= _DNS_[3];
    315e:	78db      	ldrb	r3, [r3, #3]
    3160:	7563      	strb	r3, [r4, #21]
   pnetinfo->dhcp  = _DHCP_;
    3162:	4b03      	ldr	r3, [pc, #12]	; (3170 <wizchip_getnetinfo+0x58>)
    3164:	781b      	ldrb	r3, [r3, #0]
    3166:	75a3      	strb	r3, [r4, #22]
}
    3168:	bd10      	pop	{r4, pc}
    316a:	46c0      	nop			; (mov r8, r8)
    316c:	20000ab0 	.word	0x20000ab0
    3170:	20000aac 	.word	0x20000aac

00003174 <wizchip_setnetmode>:

int8_t wizchip_setnetmode(netmode_type netmode)
{
    3174:	b510      	push	{r4, lr}
    3176:	0004      	movs	r4, r0
   uint8_t tmp = 0;
#if _WIZCHIP_ != W5500
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK)) return -1;
#else
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK | NM_FORCEARP)) return -1;
    3178:	233a      	movs	r3, #58	; 0x3a
    317a:	0002      	movs	r2, r0
    317c:	439a      	bics	r2, r3
    317e:	d109      	bne.n	3194 <wizchip_setnetmode+0x20>
#endif      
   tmp = getMR();
    3180:	2000      	movs	r0, #0
    3182:	f7ff fce1 	bl	2b48 <WIZCHIP_READ>
   tmp |= (uint8_t)netmode;
    3186:	4304      	orrs	r4, r0
    3188:	b2e1      	uxtb	r1, r4
   setMR(tmp);
    318a:	2000      	movs	r0, #0
    318c:	f7ff fd0e 	bl	2bac <WIZCHIP_WRITE>
   return 0;
    3190:	2000      	movs	r0, #0
}
    3192:	bd10      	pop	{r4, pc}
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK | NM_FORCEARP)) return -1;
    3194:	2001      	movs	r0, #1
    3196:	4240      	negs	r0, r0
    3198:	e7fb      	b.n	3192 <wizchip_setnetmode+0x1e>

0000319a <wizchip_getnetmode>:

netmode_type wizchip_getnetmode(void)
{
    319a:	b510      	push	{r4, lr}
   return (netmode_type) getMR();
    319c:	2000      	movs	r0, #0
    319e:	f7ff fcd3 	bl	2b48 <WIZCHIP_READ>
}
    31a2:	bd10      	pop	{r4, pc}

000031a4 <wizchip_settimeout>:

void wizchip_settimeout(wiz_NetTimeout* nettime)
{
    31a4:	b510      	push	{r4, lr}
    31a6:	0004      	movs	r4, r0
   setRCR(nettime->retry_cnt);
    31a8:	7801      	ldrb	r1, [r0, #0]
    31aa:	20d8      	movs	r0, #216	; 0xd8
    31ac:	0140      	lsls	r0, r0, #5
    31ae:	f7ff fcfd 	bl	2bac <WIZCHIP_WRITE>
   setRTR(nettime->time_100us);
    31b2:	8861      	ldrh	r1, [r4, #2]
    31b4:	0a09      	lsrs	r1, r1, #8
    31b6:	20c8      	movs	r0, #200	; 0xc8
    31b8:	0140      	lsls	r0, r0, #5
    31ba:	f7ff fcf7 	bl	2bac <WIZCHIP_WRITE>
    31be:	78a1      	ldrb	r1, [r4, #2]
    31c0:	20d0      	movs	r0, #208	; 0xd0
    31c2:	0140      	lsls	r0, r0, #5
    31c4:	f7ff fcf2 	bl	2bac <WIZCHIP_WRITE>
}
    31c8:	bd10      	pop	{r4, pc}

000031ca <wizchip_gettimeout>:

void wizchip_gettimeout(wiz_NetTimeout* nettime)
{
    31ca:	b570      	push	{r4, r5, r6, lr}
    31cc:	0005      	movs	r5, r0
   nettime->retry_cnt = getRCR();
    31ce:	20d8      	movs	r0, #216	; 0xd8
    31d0:	0140      	lsls	r0, r0, #5
    31d2:	f7ff fcb9 	bl	2b48 <WIZCHIP_READ>
    31d6:	7028      	strb	r0, [r5, #0]
   nettime->time_100us = getRTR();
    31d8:	20c8      	movs	r0, #200	; 0xc8
    31da:	0140      	lsls	r0, r0, #5
    31dc:	f7ff fcb4 	bl	2b48 <WIZCHIP_READ>
    31e0:	b280      	uxth	r0, r0
    31e2:	0200      	lsls	r0, r0, #8
    31e4:	b284      	uxth	r4, r0
    31e6:	20d0      	movs	r0, #208	; 0xd0
    31e8:	0140      	lsls	r0, r0, #5
    31ea:	f7ff fcad 	bl	2b48 <WIZCHIP_READ>
    31ee:	b280      	uxth	r0, r0
    31f0:	1824      	adds	r4, r4, r0
    31f2:	806c      	strh	r4, [r5, #2]
}
    31f4:	bd70      	pop	{r4, r5, r6, pc}
	...

000031f8 <ctlnetwork>:
{
    31f8:	b510      	push	{r4, lr}
    31fa:	000c      	movs	r4, r1
   switch(cntype)
    31fc:	2805      	cmp	r0, #5
    31fe:	d820      	bhi.n	3242 <ctlnetwork+0x4a>
    3200:	0080      	lsls	r0, r0, #2
    3202:	4b11      	ldr	r3, [pc, #68]	; (3248 <ctlnetwork+0x50>)
    3204:	581b      	ldr	r3, [r3, r0]
    3206:	469f      	mov	pc, r3
         wizchip_setnetinfo((wiz_NetInfo*)arg);
    3208:	0008      	movs	r0, r1
    320a:	f7ff ff57 	bl	30bc <wizchip_setnetinfo>
   return 0;
    320e:	2000      	movs	r0, #0
}
    3210:	bd10      	pop	{r4, pc}
         wizchip_getnetinfo((wiz_NetInfo*)arg);
    3212:	0008      	movs	r0, r1
    3214:	f7ff ff80 	bl	3118 <wizchip_getnetinfo>
   return 0;
    3218:	2000      	movs	r0, #0
         break;
    321a:	e7f9      	b.n	3210 <ctlnetwork+0x18>
         return wizchip_setnetmode(*(netmode_type*)arg);
    321c:	7808      	ldrb	r0, [r1, #0]
    321e:	f7ff ffa9 	bl	3174 <wizchip_setnetmode>
    3222:	e7f5      	b.n	3210 <ctlnetwork+0x18>
         *(netmode_type*)arg = wizchip_getnetmode();
    3224:	f7ff ffb9 	bl	319a <wizchip_getnetmode>
    3228:	7020      	strb	r0, [r4, #0]
   return 0;
    322a:	2000      	movs	r0, #0
         break;
    322c:	e7f0      	b.n	3210 <ctlnetwork+0x18>
         wizchip_settimeout((wiz_NetTimeout*)arg);
    322e:	0008      	movs	r0, r1
    3230:	f7ff ffb8 	bl	31a4 <wizchip_settimeout>
   return 0;
    3234:	2000      	movs	r0, #0
         break;
    3236:	e7eb      	b.n	3210 <ctlnetwork+0x18>
         wizchip_gettimeout((wiz_NetTimeout*)arg);
    3238:	0008      	movs	r0, r1
    323a:	f7ff ffc6 	bl	31ca <wizchip_gettimeout>
   return 0;
    323e:	2000      	movs	r0, #0
         break;
    3240:	e7e6      	b.n	3210 <ctlnetwork+0x18>
         return -1;
    3242:	2001      	movs	r0, #1
    3244:	4240      	negs	r0, r0
    3246:	e7e3      	b.n	3210 <ctlnetwork+0x18>
    3248:	0000d570 	.word	0x0000d570

0000324c <main>:
uint8_t rx_tx_buff_sizes[]={2,2,2,2,2,2,2,2};
	
char http_ansver[128]="\0";	

int main(void)
{
    324c:	b5f0      	push	{r4, r5, r6, r7, lr}
    324e:	b0b1      	sub	sp, #196	; 0xc4
	/* Initializes MCU, drivers and middleware */
	//atmel_start_init();

	mcu_init();
    3250:	f7fe ff1a 	bl	2088 <mcu_init>
	reg_wizchip_cs_cbfunc(W5500_Select, W5500_Unselect);
    3254:	49d6      	ldr	r1, [pc, #856]	; (35b0 <main+0x364>)
    3256:	48d7      	ldr	r0, [pc, #860]	; (35b4 <main+0x368>)
    3258:	f7ff fe50 	bl	2efc <reg_wizchip_cs_cbfunc>
	reg_wizchip_spi_cbfunc(W5500_ReadByte, W5500_Write_byte);
    325c:	49d6      	ldr	r1, [pc, #856]	; (35b8 <main+0x36c>)
    325e:	48d7      	ldr	r0, [pc, #860]	; (35bc <main+0x370>)
    3260:	f7ff fe60 	bl	2f24 <reg_wizchip_spi_cbfunc>
	reg_wizchip_spiburst_cbfunc(W5500_ReadBuff, W5500_WriteBuff);
    3264:	49d6      	ldr	r1, [pc, #856]	; (35c0 <main+0x374>)
    3266:	48d7      	ldr	r0, [pc, #860]	; (35c4 <main+0x378>)
    3268:	f7ff fe74 	bl	2f54 <reg_wizchip_spiburst_cbfunc>
	wizphy_reset();
    326c:	f7ff ff10 	bl	3090 <wizphy_reset>
	delay_ms(100);
    3270:	2064      	movs	r0, #100	; 0x64
    3272:	f7fc ff8d 	bl	190 <delay_ms>
	wizchip_init(rx_tx_buff_sizes,rx_tx_buff_sizes);
    3276:	48d4      	ldr	r0, [pc, #848]	; (35c8 <main+0x37c>)
    3278:	0001      	movs	r1, r0
    327a:	f7ff febe 	bl	2ffa <wizchip_init>
	wizchip_setnetinfo(&netInfo);
    327e:	4cd3      	ldr	r4, [pc, #844]	; (35cc <main+0x380>)
    3280:	0020      	movs	r0, r4
    3282:	f7ff ff1b 	bl	30bc <wizchip_setnetinfo>
	ctlnetwork(CN_SET_NETINFO, (void*) &netInfo);
    3286:	0021      	movs	r1, r4
    3288:	2000      	movs	r0, #0
    328a:	f7ff ffb5 	bl	31f8 <ctlnetwork>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    328e:	23c0      	movs	r3, #192	; 0xc0
    3290:	05db      	lsls	r3, r3, #23
    3292:	2280      	movs	r2, #128	; 0x80
    3294:	03d2      	lsls	r2, r2, #15
    3296:	619a      	str	r2, [r3, #24]
    3298:	2280      	movs	r2, #128	; 0x80
    329a:	0052      	lsls	r2, r2, #1
    329c:	619a      	str	r2, [r3, #24]
    329e:	3201      	adds	r2, #1
    32a0:	32ff      	adds	r2, #255	; 0xff
    32a2:	619a      	str	r2, [r3, #24]
	
	gpio_set_pin_level(DLDA, true);
	gpio_set_pin_level(O2, true);
	gpio_set_pin_level(O3, true);
	
	setIMR(0xff);
    32a4:	21ff      	movs	r1, #255	; 0xff
    32a6:	20b0      	movs	r0, #176	; 0xb0
    32a8:	0140      	lsls	r0, r0, #5
    32aa:	f7ff fc7f 	bl	2bac <WIZCHIP_WRITE>
	setSIMR(0xff);
    32ae:	21ff      	movs	r1, #255	; 0xff
    32b0:	20c0      	movs	r0, #192	; 0xc0
    32b2:	0140      	lsls	r0, r0, #5
    32b4:	f7ff fc7a 	bl	2bac <WIZCHIP_WRITE>
	setINTLEVEL(1);
    32b8:	2100      	movs	r1, #0
    32ba:	2098      	movs	r0, #152	; 0x98
    32bc:	0140      	lsls	r0, r0, #5
    32be:	f7ff fc75 	bl	2bac <WIZCHIP_WRITE>
    32c2:	2101      	movs	r1, #1
    32c4:	20a0      	movs	r0, #160	; 0xa0
    32c6:	0140      	lsls	r0, r0, #5
    32c8:	f7ff fc70 	bl	2bac <WIZCHIP_WRITE>
	for(uint8_t HTTP_SOCKET = 0; HTTP_SOCKET <= 7; HTTP_SOCKET++){
    32cc:	2400      	movs	r4, #0
    32ce:	2c07      	cmp	r4, #7
    32d0:	d934      	bls.n	333c <main+0xf0>
 */
static inline uint32_t _gpio_get_level(const enum gpio_port port)
{
	uint32_t tmp;

	CRITICAL_SECTION_ENTER();
    32d2:	a80c      	add	r0, sp, #48	; 0x30
    32d4:	f7fc ff4e 	bl	174 <atomic_enter_critical>
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    32d8:	23c0      	movs	r3, #192	; 0xc0
    32da:	05db      	lsls	r3, r3, #23
    32dc:	2280      	movs	r2, #128	; 0x80
    32de:	589c      	ldr	r4, [r3, r2]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    32e0:	3220      	adds	r2, #32
    32e2:	49bb      	ldr	r1, [pc, #748]	; (35d0 <main+0x384>)
    32e4:	588a      	ldr	r2, [r1, r2]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    32e6:	2190      	movs	r1, #144	; 0x90
    32e8:	585b      	ldr	r3, [r3, r1]

	uint32_t dir_tmp = hri_port_read_DIR_reg(PORT_IOBUS, port);

	tmp = hri_port_read_IN_reg(PORT, port) & ~dir_tmp;
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    32ea:	4053      	eors	r3, r2
    32ec:	401c      	ands	r4, r3
    32ee:	4054      	eors	r4, r2

	CRITICAL_SECTION_LEAVE();
    32f0:	a80c      	add	r0, sp, #48	; 0x30
    32f2:	f7fc ff46 	bl	182 <atomic_leave_critical>
	if (level) {
    32f6:	05e3      	lsls	r3, r4, #23
    32f8:	d42d      	bmi.n	3356 <main+0x10a>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    32fa:	2280      	movs	r2, #128	; 0x80
    32fc:	03d2      	lsls	r2, r2, #15
    32fe:	23c0      	movs	r3, #192	; 0xc0
    3300:	05db      	lsls	r3, r3, #23
    3302:	619a      	str	r2, [r3, #24]
	//delay_ms(250);
	
	
	
	
	if(getSn_SR(UdpRxSockNum) == SOCK_CLOSED){
    3304:	4bb3      	ldr	r3, [pc, #716]	; (35d4 <main+0x388>)
    3306:	7818      	ldrb	r0, [r3, #0]
    3308:	0080      	lsls	r0, r0, #2
    330a:	3001      	adds	r0, #1
    330c:	00c0      	lsls	r0, r0, #3
    330e:	23c0      	movs	r3, #192	; 0xc0
    3310:	009b      	lsls	r3, r3, #2
    3312:	469c      	mov	ip, r3
    3314:	4460      	add	r0, ip
    3316:	f7ff fc17 	bl	2b48 <WIZCHIP_READ>
    331a:	2800      	cmp	r0, #0
    331c:	d021      	beq.n	3362 <main+0x116>
		socket(UdpRxSockNum, Sn_MR_UDP, UdpRxPort, SF_MULTI_ENABLE);
		listen(UdpRxSockNum);
	}
	
	if(getSn_IR(UdpRxSockNum)){ // & Sn_CR_RECV
    331e:	4bad      	ldr	r3, [pc, #692]	; (35d4 <main+0x388>)
    3320:	7818      	ldrb	r0, [r3, #0]
    3322:	0080      	lsls	r0, r0, #2
    3324:	3001      	adds	r0, #1
    3326:	00c0      	lsls	r0, r0, #3
    3328:	2380      	movs	r3, #128	; 0x80
    332a:	009b      	lsls	r3, r3, #2
    332c:	469c      	mov	ip, r3
    332e:	4460      	add	r0, ip
    3330:	f7ff fc0a 	bl	2b48 <WIZCHIP_READ>
    3334:	06c3      	lsls	r3, r0, #27
    3336:	d120      	bne.n	337a <main+0x12e>
    3338:	2403      	movs	r4, #3
    333a:	e08e      	b.n	345a <main+0x20e>
		setSn_IMR(HTTP_SOCKET, 0x04);
    333c:	00a0      	lsls	r0, r4, #2
    333e:	3001      	adds	r0, #1
    3340:	00c0      	lsls	r0, r0, #3
    3342:	23b0      	movs	r3, #176	; 0xb0
    3344:	019b      	lsls	r3, r3, #6
    3346:	469c      	mov	ip, r3
    3348:	4460      	add	r0, ip
    334a:	2104      	movs	r1, #4
    334c:	f7ff fc2e 	bl	2bac <WIZCHIP_WRITE>
	for(uint8_t HTTP_SOCKET = 0; HTTP_SOCKET <= 7; HTTP_SOCKET++){
    3350:	3401      	adds	r4, #1
    3352:	b2e4      	uxtb	r4, r4
    3354:	e7bb      	b.n	32ce <main+0x82>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    3356:	2280      	movs	r2, #128	; 0x80
    3358:	03d2      	lsls	r2, r2, #15
    335a:	23c0      	movs	r3, #192	; 0xc0
    335c:	05db      	lsls	r3, r3, #23
    335e:	615a      	str	r2, [r3, #20]
    3360:	e7d0      	b.n	3304 <main+0xb8>
		socket(UdpRxSockNum, Sn_MR_UDP, UdpRxPort, SF_MULTI_ENABLE);
    3362:	4b9d      	ldr	r3, [pc, #628]	; (35d8 <main+0x38c>)
    3364:	881a      	ldrh	r2, [r3, #0]
    3366:	4c9b      	ldr	r4, [pc, #620]	; (35d4 <main+0x388>)
    3368:	7820      	ldrb	r0, [r4, #0]
    336a:	2380      	movs	r3, #128	; 0x80
    336c:	2102      	movs	r1, #2
    336e:	f7fe fee5 	bl	213c <socket>
		listen(UdpRxSockNum);
    3372:	7820      	ldrb	r0, [r4, #0]
    3374:	f7fe ff9a 	bl	22ac <listen>
    3378:	e7d1      	b.n	331e <main+0xd2>
		uint16_t udp_size = getSn_RX_RSR(UdpRxSockNum);
    337a:	4b96      	ldr	r3, [pc, #600]	; (35d4 <main+0x388>)
    337c:	7818      	ldrb	r0, [r3, #0]
    337e:	f7ff fcf3 	bl	2d68 <getSn_RX_RSR>
    3382:	1e04      	subs	r4, r0, #0
		if (udp_size > 0) {
    3384:	d0d8      	beq.n	3338 <main+0xec>
			uint8_t ip[4];
			uint16_t port;
			if (udp_size > TCP_RX_BUF) udp_size = TCP_RX_BUF;
    3386:	4b95      	ldr	r3, [pc, #596]	; (35dc <main+0x390>)
    3388:	4298      	cmp	r0, r3
    338a:	d900      	bls.n	338e <main+0x142>
    338c:	b29c      	uxth	r4, r3
			memset(TCP_RX_BUF, 0, sizeof(TCP_RX_BUF));
    338e:	2280      	movs	r2, #128	; 0x80
    3390:	0112      	lsls	r2, r2, #4
    3392:	2100      	movs	r1, #0
    3394:	4891      	ldr	r0, [pc, #580]	; (35dc <main+0x390>)
    3396:	f002 f885 	bl	54a4 <memset>
			uint16_t ret = recvfrom(UdpRxSockNum, (uint8_t*)TCP_RX_BUF, udp_size, ip, &port);
    339a:	4e8e      	ldr	r6, [pc, #568]	; (35d4 <main+0x388>)
    339c:	7830      	ldrb	r0, [r6, #0]
    339e:	ab0d      	add	r3, sp, #52	; 0x34
    33a0:	9300      	str	r3, [sp, #0]
    33a2:	ab10      	add	r3, sp, #64	; 0x40
    33a4:	0022      	movs	r2, r4
    33a6:	498d      	ldr	r1, [pc, #564]	; (35dc <main+0x390>)
    33a8:	f7ff f9d0 	bl	274c <recvfrom>
			uint8_t result = 0;
			result = socket(UdpTxSockNum, Sn_MR_UDP, UdpTxPort, SF_IO_NONBLOCK);
    33ac:	4f8c      	ldr	r7, [pc, #560]	; (35e0 <main+0x394>)
    33ae:	883a      	ldrh	r2, [r7, #0]
    33b0:	4d8c      	ldr	r5, [pc, #560]	; (35e4 <main+0x398>)
    33b2:	7828      	ldrb	r0, [r5, #0]
    33b4:	2301      	movs	r3, #1
    33b6:	2102      	movs	r1, #2
    33b8:	f7fe fec0 	bl	213c <socket>
			result = sendto(UdpTxSockNum, TCP_RX_BUF, udp_size, ip, UdpTxPort);
    33bc:	7828      	ldrb	r0, [r5, #0]
    33be:	883b      	ldrh	r3, [r7, #0]
    33c0:	9300      	str	r3, [sp, #0]
    33c2:	ab10      	add	r3, sp, #64	; 0x40
    33c4:	0022      	movs	r2, r4
    33c6:	4985      	ldr	r1, [pc, #532]	; (35dc <main+0x390>)
    33c8:	f7ff f906 	bl	25d8 <sendto>
			setSn_IR(UdpRxSockNum, 0x1F);	
    33cc:	7830      	ldrb	r0, [r6, #0]
    33ce:	0080      	lsls	r0, r0, #2
    33d0:	3001      	adds	r0, #1
    33d2:	00c0      	lsls	r0, r0, #3
    33d4:	2380      	movs	r3, #128	; 0x80
    33d6:	009b      	lsls	r3, r3, #2
    33d8:	469c      	mov	ip, r3
    33da:	4460      	add	r0, ip
    33dc:	211f      	movs	r1, #31
    33de:	f7ff fbe5 	bl	2bac <WIZCHIP_WRITE>
    33e2:	e7a9      	b.n	3338 <main+0xec>
				size_t total_length = strlen(psu_page);
				size_t sent_length = 0;

				while (sent_length < total_length) {
					size_t chunk_size = total_length - sent_length > 1024 ? 1024 : total_length - sent_length;
					send(HTTP_SOCKET, (uint8_t*)(psu_page + sent_length), chunk_size);
    33e4:	b2b2      	uxth	r2, r6
    33e6:	4980      	ldr	r1, [pc, #512]	; (35e8 <main+0x39c>)
    33e8:	19c9      	adds	r1, r1, r7
    33ea:	0020      	movs	r0, r4
    33ec:	f7fe ffde 	bl	23ac <send>
					delay_ms(20);
    33f0:	2014      	movs	r0, #20
    33f2:	f7fc fecd 	bl	190 <delay_ms>
					sent_length += chunk_size;
    33f6:	19bf      	adds	r7, r7, r6
				while (sent_length < total_length) {
    33f8:	23e0      	movs	r3, #224	; 0xe0
    33fa:	011b      	lsls	r3, r3, #4
    33fc:	429f      	cmp	r7, r3
    33fe:	d818      	bhi.n	3432 <main+0x1e6>
					size_t chunk_size = total_length - sent_length > 1024 ? 1024 : total_length - sent_length;
    3400:	4e7a      	ldr	r6, [pc, #488]	; (35ec <main+0x3a0>)
    3402:	1bf6      	subs	r6, r6, r7
    3404:	2380      	movs	r3, #128	; 0x80
    3406:	00db      	lsls	r3, r3, #3
    3408:	429e      	cmp	r6, r3
    340a:	d9eb      	bls.n	33e4 <main+0x198>
    340c:	001e      	movs	r6, r3
    340e:	e7e9      	b.n	33e4 <main+0x198>
				}
				
				
				
				
				} else if (strstr((char*)TCP_RX_BUF, "GET /set_vals") != NULL) {
    3410:	4977      	ldr	r1, [pc, #476]	; (35f0 <main+0x3a4>)
    3412:	4872      	ldr	r0, [pc, #456]	; (35dc <main+0x390>)
    3414:	f002 fb42 	bl	5a9c <strstr>
    3418:	2800      	cmp	r0, #0
    341a:	d050      	beq.n	34be <main+0x272>
				char *query_string = strstr((char*)TCP_RX_BUF, "GET /set_vals") + strlen("GET /set_vals?");
    341c:	300e      	adds	r0, #14
				// Обробка параметрів запиту
				
				sscanf(query_string, "amp=%f&volt=%f", &amp, &volt);
    341e:	4b75      	ldr	r3, [pc, #468]	; (35f4 <main+0x3a8>)
    3420:	4a75      	ldr	r2, [pc, #468]	; (35f8 <main+0x3ac>)
    3422:	4976      	ldr	r1, [pc, #472]	; (35fc <main+0x3b0>)
    3424:	f002 f8ca 	bl	55bc <sscanf>
				// Тут додайте код для встановлення значень ампер, вольт та ват
				send(HTTP_SOCKET, (uint8_t*)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\"success\":true}", 65);
    3428:	2241      	movs	r2, #65	; 0x41
    342a:	4975      	ldr	r1, [pc, #468]	; (3600 <main+0x3b4>)
    342c:	0020      	movs	r0, r4
    342e:	f7fe ffbd 	bl	23ac <send>

				send(HTTP_SOCKET, (uint8_t*)json_response, strlen(json_response));
				
				}

			disconnect(HTTP_SOCKET);
    3432:	0020      	movs	r0, r4
    3434:	f7fe ff72 	bl	231c <disconnect>
			close(HTTP_SOCKET);
    3438:	0020      	movs	r0, r4
    343a:	f7fe fe3f 	bl	20bc <close>
		}

		if (getSn_SR(HTTP_SOCKET) == SOCK_CLOSE_WAIT) {
    343e:	0028      	movs	r0, r5
    3440:	f7ff fb82 	bl	2b48 <WIZCHIP_READ>
    3444:	281c      	cmp	r0, #28
    3446:	d100      	bne.n	344a <main+0x1fe>
    3448:	e0a1      	b.n	358e <main+0x342>
			disconnect(HTTP_SOCKET);
		}

		if (getSn_SR(HTTP_SOCKET) == SOCK_CLOSED) {
    344a:	0028      	movs	r0, r5
    344c:	f7ff fb7c 	bl	2b48 <WIZCHIP_READ>
    3450:	2800      	cmp	r0, #0
    3452:	d100      	bne.n	3456 <main+0x20a>
    3454:	e09f      	b.n	3596 <main+0x34a>
	for(uint8_t HTTP_SOCKET = 3; HTTP_SOCKET <= 7; HTTP_SOCKET++) {
    3456:	3401      	adds	r4, #1
    3458:	b2e4      	uxtb	r4, r4
    345a:	2c07      	cmp	r4, #7
    345c:	d900      	bls.n	3460 <main+0x214>
    345e:	e738      	b.n	32d2 <main+0x86>
		if (getSn_SR(HTTP_SOCKET) == SOCK_ESTABLISHED) {
    3460:	9408      	str	r4, [sp, #32]
    3462:	00a5      	lsls	r5, r4, #2
    3464:	3501      	adds	r5, #1
    3466:	00ed      	lsls	r5, r5, #3
    3468:	23c0      	movs	r3, #192	; 0xc0
    346a:	009b      	lsls	r3, r3, #2
    346c:	469c      	mov	ip, r3
    346e:	4465      	add	r5, ip
    3470:	0028      	movs	r0, r5
    3472:	f7ff fb69 	bl	2b48 <WIZCHIP_READ>
    3476:	2817      	cmp	r0, #23
    3478:	d1e1      	bne.n	343e <main+0x1f2>
			getsockopt(HTTP_SOCKET, SO_DESTIP, rIP);
    347a:	aa0b      	add	r2, sp, #44	; 0x2c
    347c:	2104      	movs	r1, #4
    347e:	0020      	movs	r0, r4
    3480:	f7ff faa2 	bl	29c8 <getsockopt>
			uint16_t res_size = getSn_RX_RSR(HTTP_SOCKET);
    3484:	0020      	movs	r0, r4
    3486:	f7ff fc6f 	bl	2d68 <getSn_RX_RSR>
    348a:	0006      	movs	r6, r0
			if (res_size > sizeof(TCP_RX_BUF)) {
    348c:	2380      	movs	r3, #128	; 0x80
    348e:	011b      	lsls	r3, r3, #4
    3490:	4298      	cmp	r0, r3
    3492:	d900      	bls.n	3496 <main+0x24a>
				res_size = sizeof(TCP_RX_BUF);
    3494:	001e      	movs	r6, r3
			memset(TCP_RX_BUF, 0, sizeof(TCP_RX_BUF));
    3496:	4f51      	ldr	r7, [pc, #324]	; (35dc <main+0x390>)
    3498:	2280      	movs	r2, #128	; 0x80
    349a:	0112      	lsls	r2, r2, #4
    349c:	2100      	movs	r1, #0
    349e:	0038      	movs	r0, r7
    34a0:	f002 f800 	bl	54a4 <memset>
			recv(HTTP_SOCKET, (uint8_t*)TCP_RX_BUF, res_size);
    34a4:	0032      	movs	r2, r6
    34a6:	0039      	movs	r1, r7
    34a8:	0020      	movs	r0, r4
    34aa:	f7ff f81b 	bl	24e4 <recv>
			if (strstr((char*)TCP_RX_BUF, "GET / ") != NULL) {
    34ae:	4955      	ldr	r1, [pc, #340]	; (3604 <main+0x3b8>)
    34b0:	0038      	movs	r0, r7
    34b2:	f002 faf3 	bl	5a9c <strstr>
    34b6:	2800      	cmp	r0, #0
    34b8:	d0aa      	beq.n	3410 <main+0x1c4>
    34ba:	2700      	movs	r7, #0
    34bc:	e79c      	b.n	33f8 <main+0x1ac>
				} else if (strstr((char*)TCP_RX_BUF, "GET /control") != NULL) {
    34be:	4952      	ldr	r1, [pc, #328]	; (3608 <main+0x3bc>)
    34c0:	4846      	ldr	r0, [pc, #280]	; (35dc <main+0x390>)
    34c2:	f002 faeb 	bl	5a9c <strstr>
    34c6:	2800      	cmp	r0, #0
    34c8:	d02e      	beq.n	3528 <main+0x2dc>
				char *query_string = strstr((char*)TCP_RX_BUF, "GET /control") + strlen("GET /control?");
    34ca:	300d      	adds	r0, #13
				sscanf(query_string, "device=%[^&]&action=%s", device, action);
    34cc:	ab10      	add	r3, sp, #64	; 0x40
    34ce:	aa0d      	add	r2, sp, #52	; 0x34
    34d0:	494e      	ldr	r1, [pc, #312]	; (360c <main+0x3c0>)
    34d2:	f002 f873 	bl	55bc <sscanf>
				if (strcmp(device, "fan") == 0) {
    34d6:	494e      	ldr	r1, [pc, #312]	; (3610 <main+0x3c4>)
    34d8:	a80d      	add	r0, sp, #52	; 0x34
    34da:	f002 f907 	bl	56ec <strcmp>
    34de:	2800      	cmp	r0, #0
    34e0:	d10d      	bne.n	34fe <main+0x2b2>
					if (strcmp(action, "on") == 0) {
    34e2:	494c      	ldr	r1, [pc, #304]	; (3614 <main+0x3c8>)
    34e4:	a810      	add	r0, sp, #64	; 0x40
    34e6:	f002 f901 	bl	56ec <strcmp>
    34ea:	2800      	cmp	r0, #0
    34ec:	d10d      	bne.n	350a <main+0x2be>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    34ee:	23c0      	movs	r3, #192	; 0xc0
    34f0:	05db      	lsls	r3, r3, #23
    34f2:	2280      	movs	r2, #128	; 0x80
    34f4:	0052      	lsls	r2, r2, #1
    34f6:	619a      	str	r2, [r3, #24]
    34f8:	3201      	adds	r2, #1
    34fa:	32ff      	adds	r2, #255	; 0xff
    34fc:	619a      	str	r2, [r3, #24]
				send(HTTP_SOCKET, (uint8_t*)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\"success\":true}", 65);
    34fe:	2241      	movs	r2, #65	; 0x41
    3500:	493f      	ldr	r1, [pc, #252]	; (3600 <main+0x3b4>)
    3502:	0020      	movs	r0, r4
    3504:	f7fe ff52 	bl	23ac <send>
    3508:	e793      	b.n	3432 <main+0x1e6>
						} else if (strcmp(action, "off") == 0) {
    350a:	4943      	ldr	r1, [pc, #268]	; (3618 <main+0x3cc>)
    350c:	a810      	add	r0, sp, #64	; 0x40
    350e:	f002 f8ed 	bl	56ec <strcmp>
    3512:	2800      	cmp	r0, #0
    3514:	d1f3      	bne.n	34fe <main+0x2b2>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    3516:	23c0      	movs	r3, #192	; 0xc0
    3518:	05db      	lsls	r3, r3, #23
    351a:	2280      	movs	r2, #128	; 0x80
    351c:	0052      	lsls	r2, r2, #1
    351e:	615a      	str	r2, [r3, #20]
    3520:	3201      	adds	r2, #1
    3522:	32ff      	adds	r2, #255	; 0xff
    3524:	615a      	str	r2, [r3, #20]
    3526:	e7ea      	b.n	34fe <main+0x2b2>
				} else if (strstr((char*)TCP_RX_BUF, "GET /get_vals") != NULL) {
    3528:	493c      	ldr	r1, [pc, #240]	; (361c <main+0x3d0>)
    352a:	482c      	ldr	r0, [pc, #176]	; (35dc <main+0x390>)
    352c:	f002 fab6 	bl	5a9c <strstr>
    3530:	2800      	cmp	r0, #0
    3532:	d100      	bne.n	3536 <main+0x2ea>
    3534:	e77d      	b.n	3432 <main+0x1e6>
				float watt = amp * volt;
    3536:	4b30      	ldr	r3, [pc, #192]	; (35f8 <main+0x3ac>)
    3538:	681e      	ldr	r6, [r3, #0]
    353a:	4b2e      	ldr	r3, [pc, #184]	; (35f4 <main+0x3a8>)
    353c:	681f      	ldr	r7, [r3, #0]
    353e:	1c39      	adds	r1, r7, #0
    3540:	1c30      	adds	r0, r6, #0
    3542:	f000 fb19 	bl	3b78 <__aeabi_fmul>
    3546:	9009      	str	r0, [sp, #36]	; 0x24
				int len = snprintf(json_response, sizeof(json_response),
    3548:	1c30      	adds	r0, r6, #0
    354a:	f001 fdad 	bl	50a8 <__aeabi_f2d>
    354e:	9006      	str	r0, [sp, #24]
    3550:	9107      	str	r1, [sp, #28]
    3552:	1c38      	adds	r0, r7, #0
    3554:	f001 fda8 	bl	50a8 <__aeabi_f2d>
    3558:	0006      	movs	r6, r0
    355a:	000f      	movs	r7, r1
    355c:	9809      	ldr	r0, [sp, #36]	; 0x24
    355e:	f001 fda3 	bl	50a8 <__aeabi_f2d>
    3562:	9004      	str	r0, [sp, #16]
    3564:	9105      	str	r1, [sp, #20]
    3566:	9602      	str	r6, [sp, #8]
    3568:	9703      	str	r7, [sp, #12]
    356a:	9a06      	ldr	r2, [sp, #24]
    356c:	9b07      	ldr	r3, [sp, #28]
    356e:	9200      	str	r2, [sp, #0]
    3570:	9301      	str	r3, [sp, #4]
    3572:	4a2b      	ldr	r2, [pc, #172]	; (3620 <main+0x3d4>)
    3574:	2180      	movs	r1, #128	; 0x80
    3576:	a810      	add	r0, sp, #64	; 0x40
    3578:	f001 ffde 	bl	5538 <snprintf>
				send(HTTP_SOCKET, (uint8_t*)json_response, strlen(json_response));
    357c:	a810      	add	r0, sp, #64	; 0x40
    357e:	f002 f8f9 	bl	5774 <strlen>
    3582:	b282      	uxth	r2, r0
    3584:	a910      	add	r1, sp, #64	; 0x40
    3586:	0020      	movs	r0, r4
    3588:	f7fe ff10 	bl	23ac <send>
    358c:	e751      	b.n	3432 <main+0x1e6>
			disconnect(HTTP_SOCKET);
    358e:	0020      	movs	r0, r4
    3590:	f7fe fec4 	bl	231c <disconnect>
    3594:	e759      	b.n	344a <main+0x1fe>
			socket(HTTP_SOCKET, Sn_MR_TCP, socketPort[HTTP_SOCKET], 0);
    3596:	9b08      	ldr	r3, [sp, #32]
    3598:	005b      	lsls	r3, r3, #1
    359a:	4a22      	ldr	r2, [pc, #136]	; (3624 <main+0x3d8>)
    359c:	5a9a      	ldrh	r2, [r3, r2]
    359e:	2300      	movs	r3, #0
    35a0:	2101      	movs	r1, #1
    35a2:	0020      	movs	r0, r4
    35a4:	f7fe fdca 	bl	213c <socket>
			listen(HTTP_SOCKET);
    35a8:	0020      	movs	r0, r4
    35aa:	f7fe fe7f 	bl	22ac <listen>
    35ae:	e752      	b.n	3456 <main+0x20a>
    35b0:	00001cff 	.word	0x00001cff
    35b4:	00001cf5 	.word	0x00001cf5
    35b8:	00001d5d 	.word	0x00001d5d
    35bc:	00001d39 	.word	0x00001d39
    35c0:	00001d21 	.word	0x00001d21
    35c4:	00001d09 	.word	0x00001d09
    35c8:	20000078 	.word	0x20000078
    35cc:	20000060 	.word	0x20000060
    35d0:	41004400 	.word	0x41004400
    35d4:	2000005a 	.word	0x2000005a
    35d8:	20000058 	.word	0x20000058
    35dc:	20000c30 	.word	0x20000c30
    35e0:	2000005c 	.word	0x2000005c
    35e4:	20000ab4 	.word	0x20000ab4
    35e8:	0000d694 	.word	0x0000d694
    35ec:	00000e01 	.word	0x00000e01
    35f0:	0000d590 	.word	0x0000d590
    35f4:	20000abc 	.word	0x20000abc
    35f8:	20000ab8 	.word	0x20000ab8
    35fc:	0000d5a0 	.word	0x0000d5a0
    3600:	0000d5b0 	.word	0x0000d5b0
    3604:	0000d588 	.word	0x0000d588
    3608:	0000d5f4 	.word	0x0000d5f4
    360c:	0000d604 	.word	0x0000d604
    3610:	0000d61c 	.word	0x0000d61c
    3614:	0000d620 	.word	0x0000d620
    3618:	0000d624 	.word	0x0000d624
    361c:	0000d62c 	.word	0x0000d62c
    3620:	0000d63c 	.word	0x0000d63c
    3624:	20000080 	.word	0x20000080

00003628 <__udivsi3>:
    3628:	2200      	movs	r2, #0
    362a:	0843      	lsrs	r3, r0, #1
    362c:	428b      	cmp	r3, r1
    362e:	d374      	bcc.n	371a <__udivsi3+0xf2>
    3630:	0903      	lsrs	r3, r0, #4
    3632:	428b      	cmp	r3, r1
    3634:	d35f      	bcc.n	36f6 <__udivsi3+0xce>
    3636:	0a03      	lsrs	r3, r0, #8
    3638:	428b      	cmp	r3, r1
    363a:	d344      	bcc.n	36c6 <__udivsi3+0x9e>
    363c:	0b03      	lsrs	r3, r0, #12
    363e:	428b      	cmp	r3, r1
    3640:	d328      	bcc.n	3694 <__udivsi3+0x6c>
    3642:	0c03      	lsrs	r3, r0, #16
    3644:	428b      	cmp	r3, r1
    3646:	d30d      	bcc.n	3664 <__udivsi3+0x3c>
    3648:	22ff      	movs	r2, #255	; 0xff
    364a:	0209      	lsls	r1, r1, #8
    364c:	ba12      	rev	r2, r2
    364e:	0c03      	lsrs	r3, r0, #16
    3650:	428b      	cmp	r3, r1
    3652:	d302      	bcc.n	365a <__udivsi3+0x32>
    3654:	1212      	asrs	r2, r2, #8
    3656:	0209      	lsls	r1, r1, #8
    3658:	d065      	beq.n	3726 <__udivsi3+0xfe>
    365a:	0b03      	lsrs	r3, r0, #12
    365c:	428b      	cmp	r3, r1
    365e:	d319      	bcc.n	3694 <__udivsi3+0x6c>
    3660:	e000      	b.n	3664 <__udivsi3+0x3c>
    3662:	0a09      	lsrs	r1, r1, #8
    3664:	0bc3      	lsrs	r3, r0, #15
    3666:	428b      	cmp	r3, r1
    3668:	d301      	bcc.n	366e <__udivsi3+0x46>
    366a:	03cb      	lsls	r3, r1, #15
    366c:	1ac0      	subs	r0, r0, r3
    366e:	4152      	adcs	r2, r2
    3670:	0b83      	lsrs	r3, r0, #14
    3672:	428b      	cmp	r3, r1
    3674:	d301      	bcc.n	367a <__udivsi3+0x52>
    3676:	038b      	lsls	r3, r1, #14
    3678:	1ac0      	subs	r0, r0, r3
    367a:	4152      	adcs	r2, r2
    367c:	0b43      	lsrs	r3, r0, #13
    367e:	428b      	cmp	r3, r1
    3680:	d301      	bcc.n	3686 <__udivsi3+0x5e>
    3682:	034b      	lsls	r3, r1, #13
    3684:	1ac0      	subs	r0, r0, r3
    3686:	4152      	adcs	r2, r2
    3688:	0b03      	lsrs	r3, r0, #12
    368a:	428b      	cmp	r3, r1
    368c:	d301      	bcc.n	3692 <__udivsi3+0x6a>
    368e:	030b      	lsls	r3, r1, #12
    3690:	1ac0      	subs	r0, r0, r3
    3692:	4152      	adcs	r2, r2
    3694:	0ac3      	lsrs	r3, r0, #11
    3696:	428b      	cmp	r3, r1
    3698:	d301      	bcc.n	369e <__udivsi3+0x76>
    369a:	02cb      	lsls	r3, r1, #11
    369c:	1ac0      	subs	r0, r0, r3
    369e:	4152      	adcs	r2, r2
    36a0:	0a83      	lsrs	r3, r0, #10
    36a2:	428b      	cmp	r3, r1
    36a4:	d301      	bcc.n	36aa <__udivsi3+0x82>
    36a6:	028b      	lsls	r3, r1, #10
    36a8:	1ac0      	subs	r0, r0, r3
    36aa:	4152      	adcs	r2, r2
    36ac:	0a43      	lsrs	r3, r0, #9
    36ae:	428b      	cmp	r3, r1
    36b0:	d301      	bcc.n	36b6 <__udivsi3+0x8e>
    36b2:	024b      	lsls	r3, r1, #9
    36b4:	1ac0      	subs	r0, r0, r3
    36b6:	4152      	adcs	r2, r2
    36b8:	0a03      	lsrs	r3, r0, #8
    36ba:	428b      	cmp	r3, r1
    36bc:	d301      	bcc.n	36c2 <__udivsi3+0x9a>
    36be:	020b      	lsls	r3, r1, #8
    36c0:	1ac0      	subs	r0, r0, r3
    36c2:	4152      	adcs	r2, r2
    36c4:	d2cd      	bcs.n	3662 <__udivsi3+0x3a>
    36c6:	09c3      	lsrs	r3, r0, #7
    36c8:	428b      	cmp	r3, r1
    36ca:	d301      	bcc.n	36d0 <__udivsi3+0xa8>
    36cc:	01cb      	lsls	r3, r1, #7
    36ce:	1ac0      	subs	r0, r0, r3
    36d0:	4152      	adcs	r2, r2
    36d2:	0983      	lsrs	r3, r0, #6
    36d4:	428b      	cmp	r3, r1
    36d6:	d301      	bcc.n	36dc <__udivsi3+0xb4>
    36d8:	018b      	lsls	r3, r1, #6
    36da:	1ac0      	subs	r0, r0, r3
    36dc:	4152      	adcs	r2, r2
    36de:	0943      	lsrs	r3, r0, #5
    36e0:	428b      	cmp	r3, r1
    36e2:	d301      	bcc.n	36e8 <__udivsi3+0xc0>
    36e4:	014b      	lsls	r3, r1, #5
    36e6:	1ac0      	subs	r0, r0, r3
    36e8:	4152      	adcs	r2, r2
    36ea:	0903      	lsrs	r3, r0, #4
    36ec:	428b      	cmp	r3, r1
    36ee:	d301      	bcc.n	36f4 <__udivsi3+0xcc>
    36f0:	010b      	lsls	r3, r1, #4
    36f2:	1ac0      	subs	r0, r0, r3
    36f4:	4152      	adcs	r2, r2
    36f6:	08c3      	lsrs	r3, r0, #3
    36f8:	428b      	cmp	r3, r1
    36fa:	d301      	bcc.n	3700 <__udivsi3+0xd8>
    36fc:	00cb      	lsls	r3, r1, #3
    36fe:	1ac0      	subs	r0, r0, r3
    3700:	4152      	adcs	r2, r2
    3702:	0883      	lsrs	r3, r0, #2
    3704:	428b      	cmp	r3, r1
    3706:	d301      	bcc.n	370c <__udivsi3+0xe4>
    3708:	008b      	lsls	r3, r1, #2
    370a:	1ac0      	subs	r0, r0, r3
    370c:	4152      	adcs	r2, r2
    370e:	0843      	lsrs	r3, r0, #1
    3710:	428b      	cmp	r3, r1
    3712:	d301      	bcc.n	3718 <__udivsi3+0xf0>
    3714:	004b      	lsls	r3, r1, #1
    3716:	1ac0      	subs	r0, r0, r3
    3718:	4152      	adcs	r2, r2
    371a:	1a41      	subs	r1, r0, r1
    371c:	d200      	bcs.n	3720 <__udivsi3+0xf8>
    371e:	4601      	mov	r1, r0
    3720:	4152      	adcs	r2, r2
    3722:	4610      	mov	r0, r2
    3724:	4770      	bx	lr
    3726:	e7ff      	b.n	3728 <__udivsi3+0x100>
    3728:	b501      	push	{r0, lr}
    372a:	2000      	movs	r0, #0
    372c:	f000 f8f0 	bl	3910 <__aeabi_idiv0>
    3730:	bd02      	pop	{r1, pc}
    3732:	46c0      	nop			; (mov r8, r8)

00003734 <__aeabi_uidivmod>:
    3734:	2900      	cmp	r1, #0
    3736:	d0f7      	beq.n	3728 <__udivsi3+0x100>
    3738:	e776      	b.n	3628 <__udivsi3>
    373a:	4770      	bx	lr

0000373c <__divsi3>:
    373c:	4603      	mov	r3, r0
    373e:	430b      	orrs	r3, r1
    3740:	d47f      	bmi.n	3842 <__divsi3+0x106>
    3742:	2200      	movs	r2, #0
    3744:	0843      	lsrs	r3, r0, #1
    3746:	428b      	cmp	r3, r1
    3748:	d374      	bcc.n	3834 <__divsi3+0xf8>
    374a:	0903      	lsrs	r3, r0, #4
    374c:	428b      	cmp	r3, r1
    374e:	d35f      	bcc.n	3810 <__divsi3+0xd4>
    3750:	0a03      	lsrs	r3, r0, #8
    3752:	428b      	cmp	r3, r1
    3754:	d344      	bcc.n	37e0 <__divsi3+0xa4>
    3756:	0b03      	lsrs	r3, r0, #12
    3758:	428b      	cmp	r3, r1
    375a:	d328      	bcc.n	37ae <__divsi3+0x72>
    375c:	0c03      	lsrs	r3, r0, #16
    375e:	428b      	cmp	r3, r1
    3760:	d30d      	bcc.n	377e <__divsi3+0x42>
    3762:	22ff      	movs	r2, #255	; 0xff
    3764:	0209      	lsls	r1, r1, #8
    3766:	ba12      	rev	r2, r2
    3768:	0c03      	lsrs	r3, r0, #16
    376a:	428b      	cmp	r3, r1
    376c:	d302      	bcc.n	3774 <__divsi3+0x38>
    376e:	1212      	asrs	r2, r2, #8
    3770:	0209      	lsls	r1, r1, #8
    3772:	d065      	beq.n	3840 <__divsi3+0x104>
    3774:	0b03      	lsrs	r3, r0, #12
    3776:	428b      	cmp	r3, r1
    3778:	d319      	bcc.n	37ae <__divsi3+0x72>
    377a:	e000      	b.n	377e <__divsi3+0x42>
    377c:	0a09      	lsrs	r1, r1, #8
    377e:	0bc3      	lsrs	r3, r0, #15
    3780:	428b      	cmp	r3, r1
    3782:	d301      	bcc.n	3788 <__divsi3+0x4c>
    3784:	03cb      	lsls	r3, r1, #15
    3786:	1ac0      	subs	r0, r0, r3
    3788:	4152      	adcs	r2, r2
    378a:	0b83      	lsrs	r3, r0, #14
    378c:	428b      	cmp	r3, r1
    378e:	d301      	bcc.n	3794 <__divsi3+0x58>
    3790:	038b      	lsls	r3, r1, #14
    3792:	1ac0      	subs	r0, r0, r3
    3794:	4152      	adcs	r2, r2
    3796:	0b43      	lsrs	r3, r0, #13
    3798:	428b      	cmp	r3, r1
    379a:	d301      	bcc.n	37a0 <__divsi3+0x64>
    379c:	034b      	lsls	r3, r1, #13
    379e:	1ac0      	subs	r0, r0, r3
    37a0:	4152      	adcs	r2, r2
    37a2:	0b03      	lsrs	r3, r0, #12
    37a4:	428b      	cmp	r3, r1
    37a6:	d301      	bcc.n	37ac <__divsi3+0x70>
    37a8:	030b      	lsls	r3, r1, #12
    37aa:	1ac0      	subs	r0, r0, r3
    37ac:	4152      	adcs	r2, r2
    37ae:	0ac3      	lsrs	r3, r0, #11
    37b0:	428b      	cmp	r3, r1
    37b2:	d301      	bcc.n	37b8 <__divsi3+0x7c>
    37b4:	02cb      	lsls	r3, r1, #11
    37b6:	1ac0      	subs	r0, r0, r3
    37b8:	4152      	adcs	r2, r2
    37ba:	0a83      	lsrs	r3, r0, #10
    37bc:	428b      	cmp	r3, r1
    37be:	d301      	bcc.n	37c4 <__divsi3+0x88>
    37c0:	028b      	lsls	r3, r1, #10
    37c2:	1ac0      	subs	r0, r0, r3
    37c4:	4152      	adcs	r2, r2
    37c6:	0a43      	lsrs	r3, r0, #9
    37c8:	428b      	cmp	r3, r1
    37ca:	d301      	bcc.n	37d0 <__divsi3+0x94>
    37cc:	024b      	lsls	r3, r1, #9
    37ce:	1ac0      	subs	r0, r0, r3
    37d0:	4152      	adcs	r2, r2
    37d2:	0a03      	lsrs	r3, r0, #8
    37d4:	428b      	cmp	r3, r1
    37d6:	d301      	bcc.n	37dc <__divsi3+0xa0>
    37d8:	020b      	lsls	r3, r1, #8
    37da:	1ac0      	subs	r0, r0, r3
    37dc:	4152      	adcs	r2, r2
    37de:	d2cd      	bcs.n	377c <__divsi3+0x40>
    37e0:	09c3      	lsrs	r3, r0, #7
    37e2:	428b      	cmp	r3, r1
    37e4:	d301      	bcc.n	37ea <__divsi3+0xae>
    37e6:	01cb      	lsls	r3, r1, #7
    37e8:	1ac0      	subs	r0, r0, r3
    37ea:	4152      	adcs	r2, r2
    37ec:	0983      	lsrs	r3, r0, #6
    37ee:	428b      	cmp	r3, r1
    37f0:	d301      	bcc.n	37f6 <__divsi3+0xba>
    37f2:	018b      	lsls	r3, r1, #6
    37f4:	1ac0      	subs	r0, r0, r3
    37f6:	4152      	adcs	r2, r2
    37f8:	0943      	lsrs	r3, r0, #5
    37fa:	428b      	cmp	r3, r1
    37fc:	d301      	bcc.n	3802 <__divsi3+0xc6>
    37fe:	014b      	lsls	r3, r1, #5
    3800:	1ac0      	subs	r0, r0, r3
    3802:	4152      	adcs	r2, r2
    3804:	0903      	lsrs	r3, r0, #4
    3806:	428b      	cmp	r3, r1
    3808:	d301      	bcc.n	380e <__divsi3+0xd2>
    380a:	010b      	lsls	r3, r1, #4
    380c:	1ac0      	subs	r0, r0, r3
    380e:	4152      	adcs	r2, r2
    3810:	08c3      	lsrs	r3, r0, #3
    3812:	428b      	cmp	r3, r1
    3814:	d301      	bcc.n	381a <__divsi3+0xde>
    3816:	00cb      	lsls	r3, r1, #3
    3818:	1ac0      	subs	r0, r0, r3
    381a:	4152      	adcs	r2, r2
    381c:	0883      	lsrs	r3, r0, #2
    381e:	428b      	cmp	r3, r1
    3820:	d301      	bcc.n	3826 <__divsi3+0xea>
    3822:	008b      	lsls	r3, r1, #2
    3824:	1ac0      	subs	r0, r0, r3
    3826:	4152      	adcs	r2, r2
    3828:	0843      	lsrs	r3, r0, #1
    382a:	428b      	cmp	r3, r1
    382c:	d301      	bcc.n	3832 <__divsi3+0xf6>
    382e:	004b      	lsls	r3, r1, #1
    3830:	1ac0      	subs	r0, r0, r3
    3832:	4152      	adcs	r2, r2
    3834:	1a41      	subs	r1, r0, r1
    3836:	d200      	bcs.n	383a <__divsi3+0xfe>
    3838:	4601      	mov	r1, r0
    383a:	4152      	adcs	r2, r2
    383c:	4610      	mov	r0, r2
    383e:	4770      	bx	lr
    3840:	e05d      	b.n	38fe <__divsi3+0x1c2>
    3842:	0fca      	lsrs	r2, r1, #31
    3844:	d000      	beq.n	3848 <__divsi3+0x10c>
    3846:	4249      	negs	r1, r1
    3848:	1003      	asrs	r3, r0, #32
    384a:	d300      	bcc.n	384e <__divsi3+0x112>
    384c:	4240      	negs	r0, r0
    384e:	4053      	eors	r3, r2
    3850:	2200      	movs	r2, #0
    3852:	469c      	mov	ip, r3
    3854:	0903      	lsrs	r3, r0, #4
    3856:	428b      	cmp	r3, r1
    3858:	d32d      	bcc.n	38b6 <__divsi3+0x17a>
    385a:	0a03      	lsrs	r3, r0, #8
    385c:	428b      	cmp	r3, r1
    385e:	d312      	bcc.n	3886 <__divsi3+0x14a>
    3860:	22fc      	movs	r2, #252	; 0xfc
    3862:	0189      	lsls	r1, r1, #6
    3864:	ba12      	rev	r2, r2
    3866:	0a03      	lsrs	r3, r0, #8
    3868:	428b      	cmp	r3, r1
    386a:	d30c      	bcc.n	3886 <__divsi3+0x14a>
    386c:	0189      	lsls	r1, r1, #6
    386e:	1192      	asrs	r2, r2, #6
    3870:	428b      	cmp	r3, r1
    3872:	d308      	bcc.n	3886 <__divsi3+0x14a>
    3874:	0189      	lsls	r1, r1, #6
    3876:	1192      	asrs	r2, r2, #6
    3878:	428b      	cmp	r3, r1
    387a:	d304      	bcc.n	3886 <__divsi3+0x14a>
    387c:	0189      	lsls	r1, r1, #6
    387e:	d03a      	beq.n	38f6 <__divsi3+0x1ba>
    3880:	1192      	asrs	r2, r2, #6
    3882:	e000      	b.n	3886 <__divsi3+0x14a>
    3884:	0989      	lsrs	r1, r1, #6
    3886:	09c3      	lsrs	r3, r0, #7
    3888:	428b      	cmp	r3, r1
    388a:	d301      	bcc.n	3890 <__divsi3+0x154>
    388c:	01cb      	lsls	r3, r1, #7
    388e:	1ac0      	subs	r0, r0, r3
    3890:	4152      	adcs	r2, r2
    3892:	0983      	lsrs	r3, r0, #6
    3894:	428b      	cmp	r3, r1
    3896:	d301      	bcc.n	389c <__divsi3+0x160>
    3898:	018b      	lsls	r3, r1, #6
    389a:	1ac0      	subs	r0, r0, r3
    389c:	4152      	adcs	r2, r2
    389e:	0943      	lsrs	r3, r0, #5
    38a0:	428b      	cmp	r3, r1
    38a2:	d301      	bcc.n	38a8 <__divsi3+0x16c>
    38a4:	014b      	lsls	r3, r1, #5
    38a6:	1ac0      	subs	r0, r0, r3
    38a8:	4152      	adcs	r2, r2
    38aa:	0903      	lsrs	r3, r0, #4
    38ac:	428b      	cmp	r3, r1
    38ae:	d301      	bcc.n	38b4 <__divsi3+0x178>
    38b0:	010b      	lsls	r3, r1, #4
    38b2:	1ac0      	subs	r0, r0, r3
    38b4:	4152      	adcs	r2, r2
    38b6:	08c3      	lsrs	r3, r0, #3
    38b8:	428b      	cmp	r3, r1
    38ba:	d301      	bcc.n	38c0 <__divsi3+0x184>
    38bc:	00cb      	lsls	r3, r1, #3
    38be:	1ac0      	subs	r0, r0, r3
    38c0:	4152      	adcs	r2, r2
    38c2:	0883      	lsrs	r3, r0, #2
    38c4:	428b      	cmp	r3, r1
    38c6:	d301      	bcc.n	38cc <__divsi3+0x190>
    38c8:	008b      	lsls	r3, r1, #2
    38ca:	1ac0      	subs	r0, r0, r3
    38cc:	4152      	adcs	r2, r2
    38ce:	d2d9      	bcs.n	3884 <__divsi3+0x148>
    38d0:	0843      	lsrs	r3, r0, #1
    38d2:	428b      	cmp	r3, r1
    38d4:	d301      	bcc.n	38da <__divsi3+0x19e>
    38d6:	004b      	lsls	r3, r1, #1
    38d8:	1ac0      	subs	r0, r0, r3
    38da:	4152      	adcs	r2, r2
    38dc:	1a41      	subs	r1, r0, r1
    38de:	d200      	bcs.n	38e2 <__divsi3+0x1a6>
    38e0:	4601      	mov	r1, r0
    38e2:	4663      	mov	r3, ip
    38e4:	4152      	adcs	r2, r2
    38e6:	105b      	asrs	r3, r3, #1
    38e8:	4610      	mov	r0, r2
    38ea:	d301      	bcc.n	38f0 <__divsi3+0x1b4>
    38ec:	4240      	negs	r0, r0
    38ee:	2b00      	cmp	r3, #0
    38f0:	d500      	bpl.n	38f4 <__divsi3+0x1b8>
    38f2:	4249      	negs	r1, r1
    38f4:	4770      	bx	lr
    38f6:	4663      	mov	r3, ip
    38f8:	105b      	asrs	r3, r3, #1
    38fa:	d300      	bcc.n	38fe <__divsi3+0x1c2>
    38fc:	4240      	negs	r0, r0
    38fe:	b501      	push	{r0, lr}
    3900:	2000      	movs	r0, #0
    3902:	f000 f805 	bl	3910 <__aeabi_idiv0>
    3906:	bd02      	pop	{r1, pc}

00003908 <__aeabi_idivmod>:
    3908:	2900      	cmp	r1, #0
    390a:	d0f8      	beq.n	38fe <__divsi3+0x1c2>
    390c:	e716      	b.n	373c <__divsi3>
    390e:	4770      	bx	lr

00003910 <__aeabi_idiv0>:
    3910:	4770      	bx	lr
    3912:	46c0      	nop			; (mov r8, r8)

00003914 <__aeabi_uldivmod>:
    3914:	2b00      	cmp	r3, #0
    3916:	d111      	bne.n	393c <__aeabi_uldivmod+0x28>
    3918:	2a00      	cmp	r2, #0
    391a:	d10f      	bne.n	393c <__aeabi_uldivmod+0x28>
    391c:	2900      	cmp	r1, #0
    391e:	d100      	bne.n	3922 <__aeabi_uldivmod+0xe>
    3920:	2800      	cmp	r0, #0
    3922:	d002      	beq.n	392a <__aeabi_uldivmod+0x16>
    3924:	2100      	movs	r1, #0
    3926:	43c9      	mvns	r1, r1
    3928:	1c08      	adds	r0, r1, #0
    392a:	b407      	push	{r0, r1, r2}
    392c:	4802      	ldr	r0, [pc, #8]	; (3938 <__aeabi_uldivmod+0x24>)
    392e:	a102      	add	r1, pc, #8	; (adr r1, 3938 <__aeabi_uldivmod+0x24>)
    3930:	1840      	adds	r0, r0, r1
    3932:	9002      	str	r0, [sp, #8]
    3934:	bd03      	pop	{r0, r1, pc}
    3936:	46c0      	nop			; (mov r8, r8)
    3938:	ffffffd9 	.word	0xffffffd9
    393c:	b403      	push	{r0, r1}
    393e:	4668      	mov	r0, sp
    3940:	b501      	push	{r0, lr}
    3942:	9802      	ldr	r0, [sp, #8]
    3944:	f000 f858 	bl	39f8 <__udivmoddi4>
    3948:	9b01      	ldr	r3, [sp, #4]
    394a:	469e      	mov	lr, r3
    394c:	b002      	add	sp, #8
    394e:	bc0c      	pop	{r2, r3}
    3950:	4770      	bx	lr
    3952:	46c0      	nop			; (mov r8, r8)

00003954 <__aeabi_lmul>:
    3954:	b5f0      	push	{r4, r5, r6, r7, lr}
    3956:	46ce      	mov	lr, r9
    3958:	4647      	mov	r7, r8
    395a:	0415      	lsls	r5, r2, #16
    395c:	0c2d      	lsrs	r5, r5, #16
    395e:	002e      	movs	r6, r5
    3960:	b580      	push	{r7, lr}
    3962:	0407      	lsls	r7, r0, #16
    3964:	0c14      	lsrs	r4, r2, #16
    3966:	0c3f      	lsrs	r7, r7, #16
    3968:	4699      	mov	r9, r3
    396a:	0c03      	lsrs	r3, r0, #16
    396c:	437e      	muls	r6, r7
    396e:	435d      	muls	r5, r3
    3970:	4367      	muls	r7, r4
    3972:	4363      	muls	r3, r4
    3974:	197f      	adds	r7, r7, r5
    3976:	0c34      	lsrs	r4, r6, #16
    3978:	19e4      	adds	r4, r4, r7
    397a:	469c      	mov	ip, r3
    397c:	42a5      	cmp	r5, r4
    397e:	d903      	bls.n	3988 <__aeabi_lmul+0x34>
    3980:	2380      	movs	r3, #128	; 0x80
    3982:	025b      	lsls	r3, r3, #9
    3984:	4698      	mov	r8, r3
    3986:	44c4      	add	ip, r8
    3988:	464b      	mov	r3, r9
    398a:	4351      	muls	r1, r2
    398c:	4343      	muls	r3, r0
    398e:	0436      	lsls	r6, r6, #16
    3990:	0c36      	lsrs	r6, r6, #16
    3992:	0c25      	lsrs	r5, r4, #16
    3994:	0424      	lsls	r4, r4, #16
    3996:	4465      	add	r5, ip
    3998:	19a4      	adds	r4, r4, r6
    399a:	1859      	adds	r1, r3, r1
    399c:	1949      	adds	r1, r1, r5
    399e:	0020      	movs	r0, r4
    39a0:	bc0c      	pop	{r2, r3}
    39a2:	4690      	mov	r8, r2
    39a4:	4699      	mov	r9, r3
    39a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

000039a8 <__ffssi2>:
    39a8:	b510      	push	{r4, lr}
    39aa:	2300      	movs	r3, #0
    39ac:	2800      	cmp	r0, #0
    39ae:	d002      	beq.n	39b6 <__ffssi2+0xe>
    39b0:	f001 fc34 	bl	521c <__ctzsi2>
    39b4:	1c43      	adds	r3, r0, #1
    39b6:	0018      	movs	r0, r3
    39b8:	bd10      	pop	{r4, pc}
    39ba:	46c0      	nop			; (mov r8, r8)

000039bc <__aeabi_d2uiz>:
    39bc:	b570      	push	{r4, r5, r6, lr}
    39be:	2200      	movs	r2, #0
    39c0:	4b0c      	ldr	r3, [pc, #48]	; (39f4 <__aeabi_d2uiz+0x38>)
    39c2:	0004      	movs	r4, r0
    39c4:	000d      	movs	r5, r1
    39c6:	f001 fbf5 	bl	51b4 <__aeabi_dcmpge>
    39ca:	2800      	cmp	r0, #0
    39cc:	d104      	bne.n	39d8 <__aeabi_d2uiz+0x1c>
    39ce:	0020      	movs	r0, r4
    39d0:	0029      	movs	r1, r5
    39d2:	f001 fabb 	bl	4f4c <__aeabi_d2iz>
    39d6:	bd70      	pop	{r4, r5, r6, pc}
    39d8:	4b06      	ldr	r3, [pc, #24]	; (39f4 <__aeabi_d2uiz+0x38>)
    39da:	2200      	movs	r2, #0
    39dc:	0020      	movs	r0, r4
    39de:	0029      	movs	r1, r5
    39e0:	f000 ff9e 	bl	4920 <__aeabi_dsub>
    39e4:	f001 fab2 	bl	4f4c <__aeabi_d2iz>
    39e8:	2380      	movs	r3, #128	; 0x80
    39ea:	061b      	lsls	r3, r3, #24
    39ec:	469c      	mov	ip, r3
    39ee:	4460      	add	r0, ip
    39f0:	e7f1      	b.n	39d6 <__aeabi_d2uiz+0x1a>
    39f2:	46c0      	nop			; (mov r8, r8)
    39f4:	41e00000 	.word	0x41e00000

000039f8 <__udivmoddi4>:
    39f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    39fa:	4657      	mov	r7, sl
    39fc:	464e      	mov	r6, r9
    39fe:	4645      	mov	r5, r8
    3a00:	46de      	mov	lr, fp
    3a02:	b5e0      	push	{r5, r6, r7, lr}
    3a04:	0004      	movs	r4, r0
    3a06:	b083      	sub	sp, #12
    3a08:	000d      	movs	r5, r1
    3a0a:	4692      	mov	sl, r2
    3a0c:	4699      	mov	r9, r3
    3a0e:	428b      	cmp	r3, r1
    3a10:	d82f      	bhi.n	3a72 <__udivmoddi4+0x7a>
    3a12:	d02c      	beq.n	3a6e <__udivmoddi4+0x76>
    3a14:	4649      	mov	r1, r9
    3a16:	4650      	mov	r0, sl
    3a18:	f001 fbf4 	bl	5204 <__clzdi2>
    3a1c:	0029      	movs	r1, r5
    3a1e:	0006      	movs	r6, r0
    3a20:	0020      	movs	r0, r4
    3a22:	f001 fbef 	bl	5204 <__clzdi2>
    3a26:	1a33      	subs	r3, r6, r0
    3a28:	4698      	mov	r8, r3
    3a2a:	3b20      	subs	r3, #32
    3a2c:	469b      	mov	fp, r3
    3a2e:	d500      	bpl.n	3a32 <__udivmoddi4+0x3a>
    3a30:	e074      	b.n	3b1c <__udivmoddi4+0x124>
    3a32:	4653      	mov	r3, sl
    3a34:	465a      	mov	r2, fp
    3a36:	4093      	lsls	r3, r2
    3a38:	001f      	movs	r7, r3
    3a3a:	4653      	mov	r3, sl
    3a3c:	4642      	mov	r2, r8
    3a3e:	4093      	lsls	r3, r2
    3a40:	001e      	movs	r6, r3
    3a42:	42af      	cmp	r7, r5
    3a44:	d829      	bhi.n	3a9a <__udivmoddi4+0xa2>
    3a46:	d026      	beq.n	3a96 <__udivmoddi4+0x9e>
    3a48:	465b      	mov	r3, fp
    3a4a:	1ba4      	subs	r4, r4, r6
    3a4c:	41bd      	sbcs	r5, r7
    3a4e:	2b00      	cmp	r3, #0
    3a50:	da00      	bge.n	3a54 <__udivmoddi4+0x5c>
    3a52:	e079      	b.n	3b48 <__udivmoddi4+0x150>
    3a54:	2200      	movs	r2, #0
    3a56:	2300      	movs	r3, #0
    3a58:	9200      	str	r2, [sp, #0]
    3a5a:	9301      	str	r3, [sp, #4]
    3a5c:	2301      	movs	r3, #1
    3a5e:	465a      	mov	r2, fp
    3a60:	4093      	lsls	r3, r2
    3a62:	9301      	str	r3, [sp, #4]
    3a64:	2301      	movs	r3, #1
    3a66:	4642      	mov	r2, r8
    3a68:	4093      	lsls	r3, r2
    3a6a:	9300      	str	r3, [sp, #0]
    3a6c:	e019      	b.n	3aa2 <__udivmoddi4+0xaa>
    3a6e:	4282      	cmp	r2, r0
    3a70:	d9d0      	bls.n	3a14 <__udivmoddi4+0x1c>
    3a72:	2200      	movs	r2, #0
    3a74:	2300      	movs	r3, #0
    3a76:	9200      	str	r2, [sp, #0]
    3a78:	9301      	str	r3, [sp, #4]
    3a7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3a7c:	2b00      	cmp	r3, #0
    3a7e:	d001      	beq.n	3a84 <__udivmoddi4+0x8c>
    3a80:	601c      	str	r4, [r3, #0]
    3a82:	605d      	str	r5, [r3, #4]
    3a84:	9800      	ldr	r0, [sp, #0]
    3a86:	9901      	ldr	r1, [sp, #4]
    3a88:	b003      	add	sp, #12
    3a8a:	bc3c      	pop	{r2, r3, r4, r5}
    3a8c:	4690      	mov	r8, r2
    3a8e:	4699      	mov	r9, r3
    3a90:	46a2      	mov	sl, r4
    3a92:	46ab      	mov	fp, r5
    3a94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3a96:	42a3      	cmp	r3, r4
    3a98:	d9d6      	bls.n	3a48 <__udivmoddi4+0x50>
    3a9a:	2200      	movs	r2, #0
    3a9c:	2300      	movs	r3, #0
    3a9e:	9200      	str	r2, [sp, #0]
    3aa0:	9301      	str	r3, [sp, #4]
    3aa2:	4643      	mov	r3, r8
    3aa4:	2b00      	cmp	r3, #0
    3aa6:	d0e8      	beq.n	3a7a <__udivmoddi4+0x82>
    3aa8:	07fb      	lsls	r3, r7, #31
    3aaa:	0872      	lsrs	r2, r6, #1
    3aac:	431a      	orrs	r2, r3
    3aae:	4646      	mov	r6, r8
    3ab0:	087b      	lsrs	r3, r7, #1
    3ab2:	e00e      	b.n	3ad2 <__udivmoddi4+0xda>
    3ab4:	42ab      	cmp	r3, r5
    3ab6:	d101      	bne.n	3abc <__udivmoddi4+0xc4>
    3ab8:	42a2      	cmp	r2, r4
    3aba:	d80c      	bhi.n	3ad6 <__udivmoddi4+0xde>
    3abc:	1aa4      	subs	r4, r4, r2
    3abe:	419d      	sbcs	r5, r3
    3ac0:	2001      	movs	r0, #1
    3ac2:	1924      	adds	r4, r4, r4
    3ac4:	416d      	adcs	r5, r5
    3ac6:	2100      	movs	r1, #0
    3ac8:	3e01      	subs	r6, #1
    3aca:	1824      	adds	r4, r4, r0
    3acc:	414d      	adcs	r5, r1
    3ace:	2e00      	cmp	r6, #0
    3ad0:	d006      	beq.n	3ae0 <__udivmoddi4+0xe8>
    3ad2:	42ab      	cmp	r3, r5
    3ad4:	d9ee      	bls.n	3ab4 <__udivmoddi4+0xbc>
    3ad6:	3e01      	subs	r6, #1
    3ad8:	1924      	adds	r4, r4, r4
    3ada:	416d      	adcs	r5, r5
    3adc:	2e00      	cmp	r6, #0
    3ade:	d1f8      	bne.n	3ad2 <__udivmoddi4+0xda>
    3ae0:	465b      	mov	r3, fp
    3ae2:	9800      	ldr	r0, [sp, #0]
    3ae4:	9901      	ldr	r1, [sp, #4]
    3ae6:	1900      	adds	r0, r0, r4
    3ae8:	4169      	adcs	r1, r5
    3aea:	2b00      	cmp	r3, #0
    3aec:	db22      	blt.n	3b34 <__udivmoddi4+0x13c>
    3aee:	002b      	movs	r3, r5
    3af0:	465a      	mov	r2, fp
    3af2:	40d3      	lsrs	r3, r2
    3af4:	002a      	movs	r2, r5
    3af6:	4644      	mov	r4, r8
    3af8:	40e2      	lsrs	r2, r4
    3afa:	001c      	movs	r4, r3
    3afc:	465b      	mov	r3, fp
    3afe:	0015      	movs	r5, r2
    3b00:	2b00      	cmp	r3, #0
    3b02:	db2c      	blt.n	3b5e <__udivmoddi4+0x166>
    3b04:	0026      	movs	r6, r4
    3b06:	409e      	lsls	r6, r3
    3b08:	0033      	movs	r3, r6
    3b0a:	0026      	movs	r6, r4
    3b0c:	4647      	mov	r7, r8
    3b0e:	40be      	lsls	r6, r7
    3b10:	0032      	movs	r2, r6
    3b12:	1a80      	subs	r0, r0, r2
    3b14:	4199      	sbcs	r1, r3
    3b16:	9000      	str	r0, [sp, #0]
    3b18:	9101      	str	r1, [sp, #4]
    3b1a:	e7ae      	b.n	3a7a <__udivmoddi4+0x82>
    3b1c:	4642      	mov	r2, r8
    3b1e:	2320      	movs	r3, #32
    3b20:	1a9b      	subs	r3, r3, r2
    3b22:	4652      	mov	r2, sl
    3b24:	40da      	lsrs	r2, r3
    3b26:	4641      	mov	r1, r8
    3b28:	0013      	movs	r3, r2
    3b2a:	464a      	mov	r2, r9
    3b2c:	408a      	lsls	r2, r1
    3b2e:	0017      	movs	r7, r2
    3b30:	431f      	orrs	r7, r3
    3b32:	e782      	b.n	3a3a <__udivmoddi4+0x42>
    3b34:	4642      	mov	r2, r8
    3b36:	2320      	movs	r3, #32
    3b38:	1a9b      	subs	r3, r3, r2
    3b3a:	002a      	movs	r2, r5
    3b3c:	4646      	mov	r6, r8
    3b3e:	409a      	lsls	r2, r3
    3b40:	0023      	movs	r3, r4
    3b42:	40f3      	lsrs	r3, r6
    3b44:	4313      	orrs	r3, r2
    3b46:	e7d5      	b.n	3af4 <__udivmoddi4+0xfc>
    3b48:	4642      	mov	r2, r8
    3b4a:	2320      	movs	r3, #32
    3b4c:	2100      	movs	r1, #0
    3b4e:	1a9b      	subs	r3, r3, r2
    3b50:	2200      	movs	r2, #0
    3b52:	9100      	str	r1, [sp, #0]
    3b54:	9201      	str	r2, [sp, #4]
    3b56:	2201      	movs	r2, #1
    3b58:	40da      	lsrs	r2, r3
    3b5a:	9201      	str	r2, [sp, #4]
    3b5c:	e782      	b.n	3a64 <__udivmoddi4+0x6c>
    3b5e:	4642      	mov	r2, r8
    3b60:	2320      	movs	r3, #32
    3b62:	0026      	movs	r6, r4
    3b64:	1a9b      	subs	r3, r3, r2
    3b66:	40de      	lsrs	r6, r3
    3b68:	002f      	movs	r7, r5
    3b6a:	46b4      	mov	ip, r6
    3b6c:	4097      	lsls	r7, r2
    3b6e:	4666      	mov	r6, ip
    3b70:	003b      	movs	r3, r7
    3b72:	4333      	orrs	r3, r6
    3b74:	e7c9      	b.n	3b0a <__udivmoddi4+0x112>
    3b76:	46c0      	nop			; (mov r8, r8)

00003b78 <__aeabi_fmul>:
    3b78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3b7a:	4657      	mov	r7, sl
    3b7c:	464e      	mov	r6, r9
    3b7e:	4645      	mov	r5, r8
    3b80:	46de      	mov	lr, fp
    3b82:	b5e0      	push	{r5, r6, r7, lr}
    3b84:	0247      	lsls	r7, r0, #9
    3b86:	0046      	lsls	r6, r0, #1
    3b88:	4688      	mov	r8, r1
    3b8a:	0a7f      	lsrs	r7, r7, #9
    3b8c:	0e36      	lsrs	r6, r6, #24
    3b8e:	0fc4      	lsrs	r4, r0, #31
    3b90:	2e00      	cmp	r6, #0
    3b92:	d047      	beq.n	3c24 <__aeabi_fmul+0xac>
    3b94:	2eff      	cmp	r6, #255	; 0xff
    3b96:	d024      	beq.n	3be2 <__aeabi_fmul+0x6a>
    3b98:	00fb      	lsls	r3, r7, #3
    3b9a:	2780      	movs	r7, #128	; 0x80
    3b9c:	04ff      	lsls	r7, r7, #19
    3b9e:	431f      	orrs	r7, r3
    3ba0:	2300      	movs	r3, #0
    3ba2:	4699      	mov	r9, r3
    3ba4:	469a      	mov	sl, r3
    3ba6:	3e7f      	subs	r6, #127	; 0x7f
    3ba8:	4643      	mov	r3, r8
    3baa:	025d      	lsls	r5, r3, #9
    3bac:	0058      	lsls	r0, r3, #1
    3bae:	0fdb      	lsrs	r3, r3, #31
    3bb0:	0a6d      	lsrs	r5, r5, #9
    3bb2:	0e00      	lsrs	r0, r0, #24
    3bb4:	4698      	mov	r8, r3
    3bb6:	d043      	beq.n	3c40 <__aeabi_fmul+0xc8>
    3bb8:	28ff      	cmp	r0, #255	; 0xff
    3bba:	d03b      	beq.n	3c34 <__aeabi_fmul+0xbc>
    3bbc:	00eb      	lsls	r3, r5, #3
    3bbe:	2580      	movs	r5, #128	; 0x80
    3bc0:	2200      	movs	r2, #0
    3bc2:	04ed      	lsls	r5, r5, #19
    3bc4:	431d      	orrs	r5, r3
    3bc6:	387f      	subs	r0, #127	; 0x7f
    3bc8:	1836      	adds	r6, r6, r0
    3bca:	1c73      	adds	r3, r6, #1
    3bcc:	4641      	mov	r1, r8
    3bce:	469b      	mov	fp, r3
    3bd0:	464b      	mov	r3, r9
    3bd2:	4061      	eors	r1, r4
    3bd4:	4313      	orrs	r3, r2
    3bd6:	2b0f      	cmp	r3, #15
    3bd8:	d864      	bhi.n	3ca4 <__aeabi_fmul+0x12c>
    3bda:	4875      	ldr	r0, [pc, #468]	; (3db0 <__aeabi_fmul+0x238>)
    3bdc:	009b      	lsls	r3, r3, #2
    3bde:	58c3      	ldr	r3, [r0, r3]
    3be0:	469f      	mov	pc, r3
    3be2:	2f00      	cmp	r7, #0
    3be4:	d142      	bne.n	3c6c <__aeabi_fmul+0xf4>
    3be6:	2308      	movs	r3, #8
    3be8:	4699      	mov	r9, r3
    3bea:	3b06      	subs	r3, #6
    3bec:	26ff      	movs	r6, #255	; 0xff
    3bee:	469a      	mov	sl, r3
    3bf0:	e7da      	b.n	3ba8 <__aeabi_fmul+0x30>
    3bf2:	4641      	mov	r1, r8
    3bf4:	2a02      	cmp	r2, #2
    3bf6:	d028      	beq.n	3c4a <__aeabi_fmul+0xd2>
    3bf8:	2a03      	cmp	r2, #3
    3bfa:	d100      	bne.n	3bfe <__aeabi_fmul+0x86>
    3bfc:	e0ce      	b.n	3d9c <__aeabi_fmul+0x224>
    3bfe:	2a01      	cmp	r2, #1
    3c00:	d000      	beq.n	3c04 <__aeabi_fmul+0x8c>
    3c02:	e0ac      	b.n	3d5e <__aeabi_fmul+0x1e6>
    3c04:	4011      	ands	r1, r2
    3c06:	2000      	movs	r0, #0
    3c08:	2200      	movs	r2, #0
    3c0a:	b2cc      	uxtb	r4, r1
    3c0c:	0240      	lsls	r0, r0, #9
    3c0e:	05d2      	lsls	r2, r2, #23
    3c10:	0a40      	lsrs	r0, r0, #9
    3c12:	07e4      	lsls	r4, r4, #31
    3c14:	4310      	orrs	r0, r2
    3c16:	4320      	orrs	r0, r4
    3c18:	bc3c      	pop	{r2, r3, r4, r5}
    3c1a:	4690      	mov	r8, r2
    3c1c:	4699      	mov	r9, r3
    3c1e:	46a2      	mov	sl, r4
    3c20:	46ab      	mov	fp, r5
    3c22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3c24:	2f00      	cmp	r7, #0
    3c26:	d115      	bne.n	3c54 <__aeabi_fmul+0xdc>
    3c28:	2304      	movs	r3, #4
    3c2a:	4699      	mov	r9, r3
    3c2c:	3b03      	subs	r3, #3
    3c2e:	2600      	movs	r6, #0
    3c30:	469a      	mov	sl, r3
    3c32:	e7b9      	b.n	3ba8 <__aeabi_fmul+0x30>
    3c34:	20ff      	movs	r0, #255	; 0xff
    3c36:	2202      	movs	r2, #2
    3c38:	2d00      	cmp	r5, #0
    3c3a:	d0c5      	beq.n	3bc8 <__aeabi_fmul+0x50>
    3c3c:	2203      	movs	r2, #3
    3c3e:	e7c3      	b.n	3bc8 <__aeabi_fmul+0x50>
    3c40:	2d00      	cmp	r5, #0
    3c42:	d119      	bne.n	3c78 <__aeabi_fmul+0x100>
    3c44:	2000      	movs	r0, #0
    3c46:	2201      	movs	r2, #1
    3c48:	e7be      	b.n	3bc8 <__aeabi_fmul+0x50>
    3c4a:	2401      	movs	r4, #1
    3c4c:	22ff      	movs	r2, #255	; 0xff
    3c4e:	400c      	ands	r4, r1
    3c50:	2000      	movs	r0, #0
    3c52:	e7db      	b.n	3c0c <__aeabi_fmul+0x94>
    3c54:	0038      	movs	r0, r7
    3c56:	f001 fab7 	bl	51c8 <__clzsi2>
    3c5a:	2676      	movs	r6, #118	; 0x76
    3c5c:	1f43      	subs	r3, r0, #5
    3c5e:	409f      	lsls	r7, r3
    3c60:	2300      	movs	r3, #0
    3c62:	4276      	negs	r6, r6
    3c64:	1a36      	subs	r6, r6, r0
    3c66:	4699      	mov	r9, r3
    3c68:	469a      	mov	sl, r3
    3c6a:	e79d      	b.n	3ba8 <__aeabi_fmul+0x30>
    3c6c:	230c      	movs	r3, #12
    3c6e:	4699      	mov	r9, r3
    3c70:	3b09      	subs	r3, #9
    3c72:	26ff      	movs	r6, #255	; 0xff
    3c74:	469a      	mov	sl, r3
    3c76:	e797      	b.n	3ba8 <__aeabi_fmul+0x30>
    3c78:	0028      	movs	r0, r5
    3c7a:	f001 faa5 	bl	51c8 <__clzsi2>
    3c7e:	1f43      	subs	r3, r0, #5
    3c80:	409d      	lsls	r5, r3
    3c82:	2376      	movs	r3, #118	; 0x76
    3c84:	425b      	negs	r3, r3
    3c86:	1a18      	subs	r0, r3, r0
    3c88:	2200      	movs	r2, #0
    3c8a:	e79d      	b.n	3bc8 <__aeabi_fmul+0x50>
    3c8c:	2080      	movs	r0, #128	; 0x80
    3c8e:	2400      	movs	r4, #0
    3c90:	03c0      	lsls	r0, r0, #15
    3c92:	22ff      	movs	r2, #255	; 0xff
    3c94:	e7ba      	b.n	3c0c <__aeabi_fmul+0x94>
    3c96:	003d      	movs	r5, r7
    3c98:	4652      	mov	r2, sl
    3c9a:	e7ab      	b.n	3bf4 <__aeabi_fmul+0x7c>
    3c9c:	003d      	movs	r5, r7
    3c9e:	0021      	movs	r1, r4
    3ca0:	4652      	mov	r2, sl
    3ca2:	e7a7      	b.n	3bf4 <__aeabi_fmul+0x7c>
    3ca4:	0c3b      	lsrs	r3, r7, #16
    3ca6:	469c      	mov	ip, r3
    3ca8:	042a      	lsls	r2, r5, #16
    3caa:	0c12      	lsrs	r2, r2, #16
    3cac:	0c2b      	lsrs	r3, r5, #16
    3cae:	0014      	movs	r4, r2
    3cb0:	4660      	mov	r0, ip
    3cb2:	4665      	mov	r5, ip
    3cb4:	043f      	lsls	r7, r7, #16
    3cb6:	0c3f      	lsrs	r7, r7, #16
    3cb8:	437c      	muls	r4, r7
    3cba:	4342      	muls	r2, r0
    3cbc:	435d      	muls	r5, r3
    3cbe:	437b      	muls	r3, r7
    3cc0:	0c27      	lsrs	r7, r4, #16
    3cc2:	189b      	adds	r3, r3, r2
    3cc4:	18ff      	adds	r7, r7, r3
    3cc6:	42ba      	cmp	r2, r7
    3cc8:	d903      	bls.n	3cd2 <__aeabi_fmul+0x15a>
    3cca:	2380      	movs	r3, #128	; 0x80
    3ccc:	025b      	lsls	r3, r3, #9
    3cce:	469c      	mov	ip, r3
    3cd0:	4465      	add	r5, ip
    3cd2:	0424      	lsls	r4, r4, #16
    3cd4:	043a      	lsls	r2, r7, #16
    3cd6:	0c24      	lsrs	r4, r4, #16
    3cd8:	1912      	adds	r2, r2, r4
    3cda:	0193      	lsls	r3, r2, #6
    3cdc:	1e5c      	subs	r4, r3, #1
    3cde:	41a3      	sbcs	r3, r4
    3ce0:	0c3f      	lsrs	r7, r7, #16
    3ce2:	0e92      	lsrs	r2, r2, #26
    3ce4:	197d      	adds	r5, r7, r5
    3ce6:	431a      	orrs	r2, r3
    3ce8:	01ad      	lsls	r5, r5, #6
    3cea:	4315      	orrs	r5, r2
    3cec:	012b      	lsls	r3, r5, #4
    3cee:	d504      	bpl.n	3cfa <__aeabi_fmul+0x182>
    3cf0:	2301      	movs	r3, #1
    3cf2:	465e      	mov	r6, fp
    3cf4:	086a      	lsrs	r2, r5, #1
    3cf6:	401d      	ands	r5, r3
    3cf8:	4315      	orrs	r5, r2
    3cfa:	0032      	movs	r2, r6
    3cfc:	327f      	adds	r2, #127	; 0x7f
    3cfe:	2a00      	cmp	r2, #0
    3d00:	dd25      	ble.n	3d4e <__aeabi_fmul+0x1d6>
    3d02:	076b      	lsls	r3, r5, #29
    3d04:	d004      	beq.n	3d10 <__aeabi_fmul+0x198>
    3d06:	230f      	movs	r3, #15
    3d08:	402b      	ands	r3, r5
    3d0a:	2b04      	cmp	r3, #4
    3d0c:	d000      	beq.n	3d10 <__aeabi_fmul+0x198>
    3d0e:	3504      	adds	r5, #4
    3d10:	012b      	lsls	r3, r5, #4
    3d12:	d503      	bpl.n	3d1c <__aeabi_fmul+0x1a4>
    3d14:	0032      	movs	r2, r6
    3d16:	4b27      	ldr	r3, [pc, #156]	; (3db4 <__aeabi_fmul+0x23c>)
    3d18:	3280      	adds	r2, #128	; 0x80
    3d1a:	401d      	ands	r5, r3
    3d1c:	2afe      	cmp	r2, #254	; 0xfe
    3d1e:	dc94      	bgt.n	3c4a <__aeabi_fmul+0xd2>
    3d20:	2401      	movs	r4, #1
    3d22:	01a8      	lsls	r0, r5, #6
    3d24:	0a40      	lsrs	r0, r0, #9
    3d26:	b2d2      	uxtb	r2, r2
    3d28:	400c      	ands	r4, r1
    3d2a:	e76f      	b.n	3c0c <__aeabi_fmul+0x94>
    3d2c:	2080      	movs	r0, #128	; 0x80
    3d2e:	03c0      	lsls	r0, r0, #15
    3d30:	4207      	tst	r7, r0
    3d32:	d007      	beq.n	3d44 <__aeabi_fmul+0x1cc>
    3d34:	4205      	tst	r5, r0
    3d36:	d105      	bne.n	3d44 <__aeabi_fmul+0x1cc>
    3d38:	4328      	orrs	r0, r5
    3d3a:	0240      	lsls	r0, r0, #9
    3d3c:	0a40      	lsrs	r0, r0, #9
    3d3e:	4644      	mov	r4, r8
    3d40:	22ff      	movs	r2, #255	; 0xff
    3d42:	e763      	b.n	3c0c <__aeabi_fmul+0x94>
    3d44:	4338      	orrs	r0, r7
    3d46:	0240      	lsls	r0, r0, #9
    3d48:	0a40      	lsrs	r0, r0, #9
    3d4a:	22ff      	movs	r2, #255	; 0xff
    3d4c:	e75e      	b.n	3c0c <__aeabi_fmul+0x94>
    3d4e:	2401      	movs	r4, #1
    3d50:	1aa3      	subs	r3, r4, r2
    3d52:	2b1b      	cmp	r3, #27
    3d54:	dd05      	ble.n	3d62 <__aeabi_fmul+0x1ea>
    3d56:	400c      	ands	r4, r1
    3d58:	2200      	movs	r2, #0
    3d5a:	2000      	movs	r0, #0
    3d5c:	e756      	b.n	3c0c <__aeabi_fmul+0x94>
    3d5e:	465e      	mov	r6, fp
    3d60:	e7cb      	b.n	3cfa <__aeabi_fmul+0x182>
    3d62:	002a      	movs	r2, r5
    3d64:	2020      	movs	r0, #32
    3d66:	40da      	lsrs	r2, r3
    3d68:	1ac3      	subs	r3, r0, r3
    3d6a:	409d      	lsls	r5, r3
    3d6c:	002b      	movs	r3, r5
    3d6e:	1e5d      	subs	r5, r3, #1
    3d70:	41ab      	sbcs	r3, r5
    3d72:	4313      	orrs	r3, r2
    3d74:	075a      	lsls	r2, r3, #29
    3d76:	d004      	beq.n	3d82 <__aeabi_fmul+0x20a>
    3d78:	220f      	movs	r2, #15
    3d7a:	401a      	ands	r2, r3
    3d7c:	2a04      	cmp	r2, #4
    3d7e:	d000      	beq.n	3d82 <__aeabi_fmul+0x20a>
    3d80:	3304      	adds	r3, #4
    3d82:	015a      	lsls	r2, r3, #5
    3d84:	d504      	bpl.n	3d90 <__aeabi_fmul+0x218>
    3d86:	2401      	movs	r4, #1
    3d88:	2201      	movs	r2, #1
    3d8a:	400c      	ands	r4, r1
    3d8c:	2000      	movs	r0, #0
    3d8e:	e73d      	b.n	3c0c <__aeabi_fmul+0x94>
    3d90:	2401      	movs	r4, #1
    3d92:	019b      	lsls	r3, r3, #6
    3d94:	0a58      	lsrs	r0, r3, #9
    3d96:	400c      	ands	r4, r1
    3d98:	2200      	movs	r2, #0
    3d9a:	e737      	b.n	3c0c <__aeabi_fmul+0x94>
    3d9c:	2080      	movs	r0, #128	; 0x80
    3d9e:	2401      	movs	r4, #1
    3da0:	03c0      	lsls	r0, r0, #15
    3da2:	4328      	orrs	r0, r5
    3da4:	0240      	lsls	r0, r0, #9
    3da6:	0a40      	lsrs	r0, r0, #9
    3da8:	400c      	ands	r4, r1
    3daa:	22ff      	movs	r2, #255	; 0xff
    3dac:	e72e      	b.n	3c0c <__aeabi_fmul+0x94>
    3dae:	46c0      	nop			; (mov r8, r8)
    3db0:	0000e498 	.word	0x0000e498
    3db4:	f7ffffff 	.word	0xf7ffffff

00003db8 <__aeabi_ddiv>:
    3db8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3dba:	4657      	mov	r7, sl
    3dbc:	4645      	mov	r5, r8
    3dbe:	46de      	mov	lr, fp
    3dc0:	464e      	mov	r6, r9
    3dc2:	b5e0      	push	{r5, r6, r7, lr}
    3dc4:	004c      	lsls	r4, r1, #1
    3dc6:	030e      	lsls	r6, r1, #12
    3dc8:	b087      	sub	sp, #28
    3dca:	4683      	mov	fp, r0
    3dcc:	4692      	mov	sl, r2
    3dce:	001d      	movs	r5, r3
    3dd0:	4680      	mov	r8, r0
    3dd2:	0b36      	lsrs	r6, r6, #12
    3dd4:	0d64      	lsrs	r4, r4, #21
    3dd6:	0fcf      	lsrs	r7, r1, #31
    3dd8:	2c00      	cmp	r4, #0
    3dda:	d04f      	beq.n	3e7c <__aeabi_ddiv+0xc4>
    3ddc:	4b6f      	ldr	r3, [pc, #444]	; (3f9c <__aeabi_ddiv+0x1e4>)
    3dde:	429c      	cmp	r4, r3
    3de0:	d035      	beq.n	3e4e <__aeabi_ddiv+0x96>
    3de2:	2380      	movs	r3, #128	; 0x80
    3de4:	0f42      	lsrs	r2, r0, #29
    3de6:	041b      	lsls	r3, r3, #16
    3de8:	00f6      	lsls	r6, r6, #3
    3dea:	4313      	orrs	r3, r2
    3dec:	4333      	orrs	r3, r6
    3dee:	4699      	mov	r9, r3
    3df0:	00c3      	lsls	r3, r0, #3
    3df2:	4698      	mov	r8, r3
    3df4:	4b6a      	ldr	r3, [pc, #424]	; (3fa0 <__aeabi_ddiv+0x1e8>)
    3df6:	2600      	movs	r6, #0
    3df8:	469c      	mov	ip, r3
    3dfa:	2300      	movs	r3, #0
    3dfc:	4464      	add	r4, ip
    3dfe:	9303      	str	r3, [sp, #12]
    3e00:	032b      	lsls	r3, r5, #12
    3e02:	0b1b      	lsrs	r3, r3, #12
    3e04:	469b      	mov	fp, r3
    3e06:	006b      	lsls	r3, r5, #1
    3e08:	0fed      	lsrs	r5, r5, #31
    3e0a:	4650      	mov	r0, sl
    3e0c:	0d5b      	lsrs	r3, r3, #21
    3e0e:	9501      	str	r5, [sp, #4]
    3e10:	d05e      	beq.n	3ed0 <__aeabi_ddiv+0x118>
    3e12:	4a62      	ldr	r2, [pc, #392]	; (3f9c <__aeabi_ddiv+0x1e4>)
    3e14:	4293      	cmp	r3, r2
    3e16:	d053      	beq.n	3ec0 <__aeabi_ddiv+0x108>
    3e18:	465a      	mov	r2, fp
    3e1a:	00d1      	lsls	r1, r2, #3
    3e1c:	2280      	movs	r2, #128	; 0x80
    3e1e:	0f40      	lsrs	r0, r0, #29
    3e20:	0412      	lsls	r2, r2, #16
    3e22:	4302      	orrs	r2, r0
    3e24:	430a      	orrs	r2, r1
    3e26:	4693      	mov	fp, r2
    3e28:	4652      	mov	r2, sl
    3e2a:	00d1      	lsls	r1, r2, #3
    3e2c:	4a5c      	ldr	r2, [pc, #368]	; (3fa0 <__aeabi_ddiv+0x1e8>)
    3e2e:	4694      	mov	ip, r2
    3e30:	2200      	movs	r2, #0
    3e32:	4463      	add	r3, ip
    3e34:	0038      	movs	r0, r7
    3e36:	4068      	eors	r0, r5
    3e38:	4684      	mov	ip, r0
    3e3a:	9002      	str	r0, [sp, #8]
    3e3c:	1ae4      	subs	r4, r4, r3
    3e3e:	4316      	orrs	r6, r2
    3e40:	2e0f      	cmp	r6, #15
    3e42:	d900      	bls.n	3e46 <__aeabi_ddiv+0x8e>
    3e44:	e0b4      	b.n	3fb0 <__aeabi_ddiv+0x1f8>
    3e46:	4b57      	ldr	r3, [pc, #348]	; (3fa4 <__aeabi_ddiv+0x1ec>)
    3e48:	00b6      	lsls	r6, r6, #2
    3e4a:	599b      	ldr	r3, [r3, r6]
    3e4c:	469f      	mov	pc, r3
    3e4e:	0003      	movs	r3, r0
    3e50:	4333      	orrs	r3, r6
    3e52:	4699      	mov	r9, r3
    3e54:	d16c      	bne.n	3f30 <__aeabi_ddiv+0x178>
    3e56:	2300      	movs	r3, #0
    3e58:	4698      	mov	r8, r3
    3e5a:	3302      	adds	r3, #2
    3e5c:	2608      	movs	r6, #8
    3e5e:	9303      	str	r3, [sp, #12]
    3e60:	e7ce      	b.n	3e00 <__aeabi_ddiv+0x48>
    3e62:	46cb      	mov	fp, r9
    3e64:	4641      	mov	r1, r8
    3e66:	9a03      	ldr	r2, [sp, #12]
    3e68:	9701      	str	r7, [sp, #4]
    3e6a:	2a02      	cmp	r2, #2
    3e6c:	d165      	bne.n	3f3a <__aeabi_ddiv+0x182>
    3e6e:	9b01      	ldr	r3, [sp, #4]
    3e70:	4c4a      	ldr	r4, [pc, #296]	; (3f9c <__aeabi_ddiv+0x1e4>)
    3e72:	469c      	mov	ip, r3
    3e74:	2300      	movs	r3, #0
    3e76:	2200      	movs	r2, #0
    3e78:	4698      	mov	r8, r3
    3e7a:	e06b      	b.n	3f54 <__aeabi_ddiv+0x19c>
    3e7c:	0003      	movs	r3, r0
    3e7e:	4333      	orrs	r3, r6
    3e80:	4699      	mov	r9, r3
    3e82:	d04e      	beq.n	3f22 <__aeabi_ddiv+0x16a>
    3e84:	2e00      	cmp	r6, #0
    3e86:	d100      	bne.n	3e8a <__aeabi_ddiv+0xd2>
    3e88:	e1bc      	b.n	4204 <__aeabi_ddiv+0x44c>
    3e8a:	0030      	movs	r0, r6
    3e8c:	f001 f99c 	bl	51c8 <__clzsi2>
    3e90:	0003      	movs	r3, r0
    3e92:	3b0b      	subs	r3, #11
    3e94:	2b1c      	cmp	r3, #28
    3e96:	dd00      	ble.n	3e9a <__aeabi_ddiv+0xe2>
    3e98:	e1ac      	b.n	41f4 <__aeabi_ddiv+0x43c>
    3e9a:	221d      	movs	r2, #29
    3e9c:	1ad3      	subs	r3, r2, r3
    3e9e:	465a      	mov	r2, fp
    3ea0:	0001      	movs	r1, r0
    3ea2:	40da      	lsrs	r2, r3
    3ea4:	3908      	subs	r1, #8
    3ea6:	408e      	lsls	r6, r1
    3ea8:	0013      	movs	r3, r2
    3eaa:	4333      	orrs	r3, r6
    3eac:	4699      	mov	r9, r3
    3eae:	465b      	mov	r3, fp
    3eb0:	408b      	lsls	r3, r1
    3eb2:	4698      	mov	r8, r3
    3eb4:	2300      	movs	r3, #0
    3eb6:	4c3c      	ldr	r4, [pc, #240]	; (3fa8 <__aeabi_ddiv+0x1f0>)
    3eb8:	2600      	movs	r6, #0
    3eba:	1a24      	subs	r4, r4, r0
    3ebc:	9303      	str	r3, [sp, #12]
    3ebe:	e79f      	b.n	3e00 <__aeabi_ddiv+0x48>
    3ec0:	4651      	mov	r1, sl
    3ec2:	465a      	mov	r2, fp
    3ec4:	4311      	orrs	r1, r2
    3ec6:	d129      	bne.n	3f1c <__aeabi_ddiv+0x164>
    3ec8:	2200      	movs	r2, #0
    3eca:	4693      	mov	fp, r2
    3ecc:	3202      	adds	r2, #2
    3ece:	e7b1      	b.n	3e34 <__aeabi_ddiv+0x7c>
    3ed0:	4659      	mov	r1, fp
    3ed2:	4301      	orrs	r1, r0
    3ed4:	d01e      	beq.n	3f14 <__aeabi_ddiv+0x15c>
    3ed6:	465b      	mov	r3, fp
    3ed8:	2b00      	cmp	r3, #0
    3eda:	d100      	bne.n	3ede <__aeabi_ddiv+0x126>
    3edc:	e19e      	b.n	421c <__aeabi_ddiv+0x464>
    3ede:	4658      	mov	r0, fp
    3ee0:	f001 f972 	bl	51c8 <__clzsi2>
    3ee4:	0003      	movs	r3, r0
    3ee6:	3b0b      	subs	r3, #11
    3ee8:	2b1c      	cmp	r3, #28
    3eea:	dd00      	ble.n	3eee <__aeabi_ddiv+0x136>
    3eec:	e18f      	b.n	420e <__aeabi_ddiv+0x456>
    3eee:	0002      	movs	r2, r0
    3ef0:	4659      	mov	r1, fp
    3ef2:	3a08      	subs	r2, #8
    3ef4:	4091      	lsls	r1, r2
    3ef6:	468b      	mov	fp, r1
    3ef8:	211d      	movs	r1, #29
    3efa:	1acb      	subs	r3, r1, r3
    3efc:	4651      	mov	r1, sl
    3efe:	40d9      	lsrs	r1, r3
    3f00:	000b      	movs	r3, r1
    3f02:	4659      	mov	r1, fp
    3f04:	430b      	orrs	r3, r1
    3f06:	4651      	mov	r1, sl
    3f08:	469b      	mov	fp, r3
    3f0a:	4091      	lsls	r1, r2
    3f0c:	4b26      	ldr	r3, [pc, #152]	; (3fa8 <__aeabi_ddiv+0x1f0>)
    3f0e:	2200      	movs	r2, #0
    3f10:	1a1b      	subs	r3, r3, r0
    3f12:	e78f      	b.n	3e34 <__aeabi_ddiv+0x7c>
    3f14:	2300      	movs	r3, #0
    3f16:	2201      	movs	r2, #1
    3f18:	469b      	mov	fp, r3
    3f1a:	e78b      	b.n	3e34 <__aeabi_ddiv+0x7c>
    3f1c:	4651      	mov	r1, sl
    3f1e:	2203      	movs	r2, #3
    3f20:	e788      	b.n	3e34 <__aeabi_ddiv+0x7c>
    3f22:	2300      	movs	r3, #0
    3f24:	4698      	mov	r8, r3
    3f26:	3301      	adds	r3, #1
    3f28:	2604      	movs	r6, #4
    3f2a:	2400      	movs	r4, #0
    3f2c:	9303      	str	r3, [sp, #12]
    3f2e:	e767      	b.n	3e00 <__aeabi_ddiv+0x48>
    3f30:	2303      	movs	r3, #3
    3f32:	46b1      	mov	r9, r6
    3f34:	9303      	str	r3, [sp, #12]
    3f36:	260c      	movs	r6, #12
    3f38:	e762      	b.n	3e00 <__aeabi_ddiv+0x48>
    3f3a:	2a03      	cmp	r2, #3
    3f3c:	d100      	bne.n	3f40 <__aeabi_ddiv+0x188>
    3f3e:	e25c      	b.n	43fa <__aeabi_ddiv+0x642>
    3f40:	9b01      	ldr	r3, [sp, #4]
    3f42:	2a01      	cmp	r2, #1
    3f44:	d000      	beq.n	3f48 <__aeabi_ddiv+0x190>
    3f46:	e1e4      	b.n	4312 <__aeabi_ddiv+0x55a>
    3f48:	4013      	ands	r3, r2
    3f4a:	469c      	mov	ip, r3
    3f4c:	2300      	movs	r3, #0
    3f4e:	2400      	movs	r4, #0
    3f50:	2200      	movs	r2, #0
    3f52:	4698      	mov	r8, r3
    3f54:	2100      	movs	r1, #0
    3f56:	0312      	lsls	r2, r2, #12
    3f58:	0b13      	lsrs	r3, r2, #12
    3f5a:	0d0a      	lsrs	r2, r1, #20
    3f5c:	0512      	lsls	r2, r2, #20
    3f5e:	431a      	orrs	r2, r3
    3f60:	0523      	lsls	r3, r4, #20
    3f62:	4c12      	ldr	r4, [pc, #72]	; (3fac <__aeabi_ddiv+0x1f4>)
    3f64:	4640      	mov	r0, r8
    3f66:	4022      	ands	r2, r4
    3f68:	4313      	orrs	r3, r2
    3f6a:	4662      	mov	r2, ip
    3f6c:	005b      	lsls	r3, r3, #1
    3f6e:	07d2      	lsls	r2, r2, #31
    3f70:	085b      	lsrs	r3, r3, #1
    3f72:	4313      	orrs	r3, r2
    3f74:	0019      	movs	r1, r3
    3f76:	b007      	add	sp, #28
    3f78:	bc3c      	pop	{r2, r3, r4, r5}
    3f7a:	4690      	mov	r8, r2
    3f7c:	4699      	mov	r9, r3
    3f7e:	46a2      	mov	sl, r4
    3f80:	46ab      	mov	fp, r5
    3f82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3f84:	2300      	movs	r3, #0
    3f86:	2280      	movs	r2, #128	; 0x80
    3f88:	469c      	mov	ip, r3
    3f8a:	0312      	lsls	r2, r2, #12
    3f8c:	4698      	mov	r8, r3
    3f8e:	4c03      	ldr	r4, [pc, #12]	; (3f9c <__aeabi_ddiv+0x1e4>)
    3f90:	e7e0      	b.n	3f54 <__aeabi_ddiv+0x19c>
    3f92:	2300      	movs	r3, #0
    3f94:	4c01      	ldr	r4, [pc, #4]	; (3f9c <__aeabi_ddiv+0x1e4>)
    3f96:	2200      	movs	r2, #0
    3f98:	4698      	mov	r8, r3
    3f9a:	e7db      	b.n	3f54 <__aeabi_ddiv+0x19c>
    3f9c:	000007ff 	.word	0x000007ff
    3fa0:	fffffc01 	.word	0xfffffc01
    3fa4:	0000e4d8 	.word	0x0000e4d8
    3fa8:	fffffc0d 	.word	0xfffffc0d
    3fac:	800fffff 	.word	0x800fffff
    3fb0:	45d9      	cmp	r9, fp
    3fb2:	d900      	bls.n	3fb6 <__aeabi_ddiv+0x1fe>
    3fb4:	e139      	b.n	422a <__aeabi_ddiv+0x472>
    3fb6:	d100      	bne.n	3fba <__aeabi_ddiv+0x202>
    3fb8:	e134      	b.n	4224 <__aeabi_ddiv+0x46c>
    3fba:	2300      	movs	r3, #0
    3fbc:	4646      	mov	r6, r8
    3fbe:	464d      	mov	r5, r9
    3fc0:	469a      	mov	sl, r3
    3fc2:	3c01      	subs	r4, #1
    3fc4:	465b      	mov	r3, fp
    3fc6:	0e0a      	lsrs	r2, r1, #24
    3fc8:	021b      	lsls	r3, r3, #8
    3fca:	431a      	orrs	r2, r3
    3fcc:	020b      	lsls	r3, r1, #8
    3fce:	0c17      	lsrs	r7, r2, #16
    3fd0:	9303      	str	r3, [sp, #12]
    3fd2:	0413      	lsls	r3, r2, #16
    3fd4:	0c1b      	lsrs	r3, r3, #16
    3fd6:	0039      	movs	r1, r7
    3fd8:	0028      	movs	r0, r5
    3fda:	4690      	mov	r8, r2
    3fdc:	9301      	str	r3, [sp, #4]
    3fde:	f7ff fb23 	bl	3628 <__udivsi3>
    3fe2:	0002      	movs	r2, r0
    3fe4:	9b01      	ldr	r3, [sp, #4]
    3fe6:	4683      	mov	fp, r0
    3fe8:	435a      	muls	r2, r3
    3fea:	0028      	movs	r0, r5
    3fec:	0039      	movs	r1, r7
    3fee:	4691      	mov	r9, r2
    3ff0:	f7ff fba0 	bl	3734 <__aeabi_uidivmod>
    3ff4:	0c35      	lsrs	r5, r6, #16
    3ff6:	0409      	lsls	r1, r1, #16
    3ff8:	430d      	orrs	r5, r1
    3ffa:	45a9      	cmp	r9, r5
    3ffc:	d90d      	bls.n	401a <__aeabi_ddiv+0x262>
    3ffe:	465b      	mov	r3, fp
    4000:	4445      	add	r5, r8
    4002:	3b01      	subs	r3, #1
    4004:	45a8      	cmp	r8, r5
    4006:	d900      	bls.n	400a <__aeabi_ddiv+0x252>
    4008:	e13a      	b.n	4280 <__aeabi_ddiv+0x4c8>
    400a:	45a9      	cmp	r9, r5
    400c:	d800      	bhi.n	4010 <__aeabi_ddiv+0x258>
    400e:	e137      	b.n	4280 <__aeabi_ddiv+0x4c8>
    4010:	2302      	movs	r3, #2
    4012:	425b      	negs	r3, r3
    4014:	469c      	mov	ip, r3
    4016:	4445      	add	r5, r8
    4018:	44e3      	add	fp, ip
    401a:	464b      	mov	r3, r9
    401c:	1aeb      	subs	r3, r5, r3
    401e:	0039      	movs	r1, r7
    4020:	0018      	movs	r0, r3
    4022:	9304      	str	r3, [sp, #16]
    4024:	f7ff fb00 	bl	3628 <__udivsi3>
    4028:	9b01      	ldr	r3, [sp, #4]
    402a:	0005      	movs	r5, r0
    402c:	4343      	muls	r3, r0
    402e:	0039      	movs	r1, r7
    4030:	9804      	ldr	r0, [sp, #16]
    4032:	4699      	mov	r9, r3
    4034:	f7ff fb7e 	bl	3734 <__aeabi_uidivmod>
    4038:	0433      	lsls	r3, r6, #16
    403a:	0409      	lsls	r1, r1, #16
    403c:	0c1b      	lsrs	r3, r3, #16
    403e:	430b      	orrs	r3, r1
    4040:	4599      	cmp	r9, r3
    4042:	d909      	bls.n	4058 <__aeabi_ddiv+0x2a0>
    4044:	4443      	add	r3, r8
    4046:	1e6a      	subs	r2, r5, #1
    4048:	4598      	cmp	r8, r3
    404a:	d900      	bls.n	404e <__aeabi_ddiv+0x296>
    404c:	e11a      	b.n	4284 <__aeabi_ddiv+0x4cc>
    404e:	4599      	cmp	r9, r3
    4050:	d800      	bhi.n	4054 <__aeabi_ddiv+0x29c>
    4052:	e117      	b.n	4284 <__aeabi_ddiv+0x4cc>
    4054:	3d02      	subs	r5, #2
    4056:	4443      	add	r3, r8
    4058:	464a      	mov	r2, r9
    405a:	1a9b      	subs	r3, r3, r2
    405c:	465a      	mov	r2, fp
    405e:	0412      	lsls	r2, r2, #16
    4060:	432a      	orrs	r2, r5
    4062:	9903      	ldr	r1, [sp, #12]
    4064:	4693      	mov	fp, r2
    4066:	0c10      	lsrs	r0, r2, #16
    4068:	0c0a      	lsrs	r2, r1, #16
    406a:	4691      	mov	r9, r2
    406c:	0409      	lsls	r1, r1, #16
    406e:	465a      	mov	r2, fp
    4070:	0c09      	lsrs	r1, r1, #16
    4072:	464e      	mov	r6, r9
    4074:	000d      	movs	r5, r1
    4076:	0412      	lsls	r2, r2, #16
    4078:	0c12      	lsrs	r2, r2, #16
    407a:	4345      	muls	r5, r0
    407c:	9105      	str	r1, [sp, #20]
    407e:	4351      	muls	r1, r2
    4080:	4372      	muls	r2, r6
    4082:	4370      	muls	r0, r6
    4084:	1952      	adds	r2, r2, r5
    4086:	0c0e      	lsrs	r6, r1, #16
    4088:	18b2      	adds	r2, r6, r2
    408a:	4295      	cmp	r5, r2
    408c:	d903      	bls.n	4096 <__aeabi_ddiv+0x2de>
    408e:	2580      	movs	r5, #128	; 0x80
    4090:	026d      	lsls	r5, r5, #9
    4092:	46ac      	mov	ip, r5
    4094:	4460      	add	r0, ip
    4096:	0c15      	lsrs	r5, r2, #16
    4098:	0409      	lsls	r1, r1, #16
    409a:	0412      	lsls	r2, r2, #16
    409c:	0c09      	lsrs	r1, r1, #16
    409e:	1828      	adds	r0, r5, r0
    40a0:	1852      	adds	r2, r2, r1
    40a2:	4283      	cmp	r3, r0
    40a4:	d200      	bcs.n	40a8 <__aeabi_ddiv+0x2f0>
    40a6:	e0ce      	b.n	4246 <__aeabi_ddiv+0x48e>
    40a8:	d100      	bne.n	40ac <__aeabi_ddiv+0x2f4>
    40aa:	e0c8      	b.n	423e <__aeabi_ddiv+0x486>
    40ac:	1a1d      	subs	r5, r3, r0
    40ae:	4653      	mov	r3, sl
    40b0:	1a9e      	subs	r6, r3, r2
    40b2:	45b2      	cmp	sl, r6
    40b4:	4192      	sbcs	r2, r2
    40b6:	4252      	negs	r2, r2
    40b8:	1aab      	subs	r3, r5, r2
    40ba:	469a      	mov	sl, r3
    40bc:	4598      	cmp	r8, r3
    40be:	d100      	bne.n	40c2 <__aeabi_ddiv+0x30a>
    40c0:	e117      	b.n	42f2 <__aeabi_ddiv+0x53a>
    40c2:	0039      	movs	r1, r7
    40c4:	0018      	movs	r0, r3
    40c6:	f7ff faaf 	bl	3628 <__udivsi3>
    40ca:	9b01      	ldr	r3, [sp, #4]
    40cc:	0005      	movs	r5, r0
    40ce:	4343      	muls	r3, r0
    40d0:	0039      	movs	r1, r7
    40d2:	4650      	mov	r0, sl
    40d4:	9304      	str	r3, [sp, #16]
    40d6:	f7ff fb2d 	bl	3734 <__aeabi_uidivmod>
    40da:	9804      	ldr	r0, [sp, #16]
    40dc:	040b      	lsls	r3, r1, #16
    40de:	0c31      	lsrs	r1, r6, #16
    40e0:	4319      	orrs	r1, r3
    40e2:	4288      	cmp	r0, r1
    40e4:	d909      	bls.n	40fa <__aeabi_ddiv+0x342>
    40e6:	4441      	add	r1, r8
    40e8:	1e6b      	subs	r3, r5, #1
    40ea:	4588      	cmp	r8, r1
    40ec:	d900      	bls.n	40f0 <__aeabi_ddiv+0x338>
    40ee:	e107      	b.n	4300 <__aeabi_ddiv+0x548>
    40f0:	4288      	cmp	r0, r1
    40f2:	d800      	bhi.n	40f6 <__aeabi_ddiv+0x33e>
    40f4:	e104      	b.n	4300 <__aeabi_ddiv+0x548>
    40f6:	3d02      	subs	r5, #2
    40f8:	4441      	add	r1, r8
    40fa:	9b04      	ldr	r3, [sp, #16]
    40fc:	1acb      	subs	r3, r1, r3
    40fe:	0018      	movs	r0, r3
    4100:	0039      	movs	r1, r7
    4102:	9304      	str	r3, [sp, #16]
    4104:	f7ff fa90 	bl	3628 <__udivsi3>
    4108:	9b01      	ldr	r3, [sp, #4]
    410a:	4682      	mov	sl, r0
    410c:	4343      	muls	r3, r0
    410e:	0039      	movs	r1, r7
    4110:	9804      	ldr	r0, [sp, #16]
    4112:	9301      	str	r3, [sp, #4]
    4114:	f7ff fb0e 	bl	3734 <__aeabi_uidivmod>
    4118:	9801      	ldr	r0, [sp, #4]
    411a:	040b      	lsls	r3, r1, #16
    411c:	0431      	lsls	r1, r6, #16
    411e:	0c09      	lsrs	r1, r1, #16
    4120:	4319      	orrs	r1, r3
    4122:	4288      	cmp	r0, r1
    4124:	d90d      	bls.n	4142 <__aeabi_ddiv+0x38a>
    4126:	4653      	mov	r3, sl
    4128:	4441      	add	r1, r8
    412a:	3b01      	subs	r3, #1
    412c:	4588      	cmp	r8, r1
    412e:	d900      	bls.n	4132 <__aeabi_ddiv+0x37a>
    4130:	e0e8      	b.n	4304 <__aeabi_ddiv+0x54c>
    4132:	4288      	cmp	r0, r1
    4134:	d800      	bhi.n	4138 <__aeabi_ddiv+0x380>
    4136:	e0e5      	b.n	4304 <__aeabi_ddiv+0x54c>
    4138:	2302      	movs	r3, #2
    413a:	425b      	negs	r3, r3
    413c:	469c      	mov	ip, r3
    413e:	4441      	add	r1, r8
    4140:	44e2      	add	sl, ip
    4142:	9b01      	ldr	r3, [sp, #4]
    4144:	042d      	lsls	r5, r5, #16
    4146:	1ace      	subs	r6, r1, r3
    4148:	4651      	mov	r1, sl
    414a:	4329      	orrs	r1, r5
    414c:	9d05      	ldr	r5, [sp, #20]
    414e:	464f      	mov	r7, r9
    4150:	002a      	movs	r2, r5
    4152:	040b      	lsls	r3, r1, #16
    4154:	0c08      	lsrs	r0, r1, #16
    4156:	0c1b      	lsrs	r3, r3, #16
    4158:	435a      	muls	r2, r3
    415a:	4345      	muls	r5, r0
    415c:	437b      	muls	r3, r7
    415e:	4378      	muls	r0, r7
    4160:	195b      	adds	r3, r3, r5
    4162:	0c17      	lsrs	r7, r2, #16
    4164:	18fb      	adds	r3, r7, r3
    4166:	429d      	cmp	r5, r3
    4168:	d903      	bls.n	4172 <__aeabi_ddiv+0x3ba>
    416a:	2580      	movs	r5, #128	; 0x80
    416c:	026d      	lsls	r5, r5, #9
    416e:	46ac      	mov	ip, r5
    4170:	4460      	add	r0, ip
    4172:	0c1d      	lsrs	r5, r3, #16
    4174:	0412      	lsls	r2, r2, #16
    4176:	041b      	lsls	r3, r3, #16
    4178:	0c12      	lsrs	r2, r2, #16
    417a:	1828      	adds	r0, r5, r0
    417c:	189b      	adds	r3, r3, r2
    417e:	4286      	cmp	r6, r0
    4180:	d200      	bcs.n	4184 <__aeabi_ddiv+0x3cc>
    4182:	e093      	b.n	42ac <__aeabi_ddiv+0x4f4>
    4184:	d100      	bne.n	4188 <__aeabi_ddiv+0x3d0>
    4186:	e08e      	b.n	42a6 <__aeabi_ddiv+0x4ee>
    4188:	2301      	movs	r3, #1
    418a:	4319      	orrs	r1, r3
    418c:	4ba0      	ldr	r3, [pc, #640]	; (4410 <__aeabi_ddiv+0x658>)
    418e:	18e3      	adds	r3, r4, r3
    4190:	2b00      	cmp	r3, #0
    4192:	dc00      	bgt.n	4196 <__aeabi_ddiv+0x3de>
    4194:	e099      	b.n	42ca <__aeabi_ddiv+0x512>
    4196:	074a      	lsls	r2, r1, #29
    4198:	d000      	beq.n	419c <__aeabi_ddiv+0x3e4>
    419a:	e09e      	b.n	42da <__aeabi_ddiv+0x522>
    419c:	465a      	mov	r2, fp
    419e:	01d2      	lsls	r2, r2, #7
    41a0:	d506      	bpl.n	41b0 <__aeabi_ddiv+0x3f8>
    41a2:	465a      	mov	r2, fp
    41a4:	4b9b      	ldr	r3, [pc, #620]	; (4414 <__aeabi_ddiv+0x65c>)
    41a6:	401a      	ands	r2, r3
    41a8:	2380      	movs	r3, #128	; 0x80
    41aa:	4693      	mov	fp, r2
    41ac:	00db      	lsls	r3, r3, #3
    41ae:	18e3      	adds	r3, r4, r3
    41b0:	4a99      	ldr	r2, [pc, #612]	; (4418 <__aeabi_ddiv+0x660>)
    41b2:	4293      	cmp	r3, r2
    41b4:	dd68      	ble.n	4288 <__aeabi_ddiv+0x4d0>
    41b6:	2301      	movs	r3, #1
    41b8:	9a02      	ldr	r2, [sp, #8]
    41ba:	4c98      	ldr	r4, [pc, #608]	; (441c <__aeabi_ddiv+0x664>)
    41bc:	401a      	ands	r2, r3
    41be:	2300      	movs	r3, #0
    41c0:	4694      	mov	ip, r2
    41c2:	4698      	mov	r8, r3
    41c4:	2200      	movs	r2, #0
    41c6:	e6c5      	b.n	3f54 <__aeabi_ddiv+0x19c>
    41c8:	2280      	movs	r2, #128	; 0x80
    41ca:	464b      	mov	r3, r9
    41cc:	0312      	lsls	r2, r2, #12
    41ce:	4213      	tst	r3, r2
    41d0:	d00a      	beq.n	41e8 <__aeabi_ddiv+0x430>
    41d2:	465b      	mov	r3, fp
    41d4:	4213      	tst	r3, r2
    41d6:	d106      	bne.n	41e6 <__aeabi_ddiv+0x42e>
    41d8:	431a      	orrs	r2, r3
    41da:	0312      	lsls	r2, r2, #12
    41dc:	0b12      	lsrs	r2, r2, #12
    41de:	46ac      	mov	ip, r5
    41e0:	4688      	mov	r8, r1
    41e2:	4c8e      	ldr	r4, [pc, #568]	; (441c <__aeabi_ddiv+0x664>)
    41e4:	e6b6      	b.n	3f54 <__aeabi_ddiv+0x19c>
    41e6:	464b      	mov	r3, r9
    41e8:	431a      	orrs	r2, r3
    41ea:	0312      	lsls	r2, r2, #12
    41ec:	0b12      	lsrs	r2, r2, #12
    41ee:	46bc      	mov	ip, r7
    41f0:	4c8a      	ldr	r4, [pc, #552]	; (441c <__aeabi_ddiv+0x664>)
    41f2:	e6af      	b.n	3f54 <__aeabi_ddiv+0x19c>
    41f4:	0003      	movs	r3, r0
    41f6:	465a      	mov	r2, fp
    41f8:	3b28      	subs	r3, #40	; 0x28
    41fa:	409a      	lsls	r2, r3
    41fc:	2300      	movs	r3, #0
    41fe:	4691      	mov	r9, r2
    4200:	4698      	mov	r8, r3
    4202:	e657      	b.n	3eb4 <__aeabi_ddiv+0xfc>
    4204:	4658      	mov	r0, fp
    4206:	f000 ffdf 	bl	51c8 <__clzsi2>
    420a:	3020      	adds	r0, #32
    420c:	e640      	b.n	3e90 <__aeabi_ddiv+0xd8>
    420e:	0003      	movs	r3, r0
    4210:	4652      	mov	r2, sl
    4212:	3b28      	subs	r3, #40	; 0x28
    4214:	409a      	lsls	r2, r3
    4216:	2100      	movs	r1, #0
    4218:	4693      	mov	fp, r2
    421a:	e677      	b.n	3f0c <__aeabi_ddiv+0x154>
    421c:	f000 ffd4 	bl	51c8 <__clzsi2>
    4220:	3020      	adds	r0, #32
    4222:	e65f      	b.n	3ee4 <__aeabi_ddiv+0x12c>
    4224:	4588      	cmp	r8, r1
    4226:	d200      	bcs.n	422a <__aeabi_ddiv+0x472>
    4228:	e6c7      	b.n	3fba <__aeabi_ddiv+0x202>
    422a:	464b      	mov	r3, r9
    422c:	07de      	lsls	r6, r3, #31
    422e:	085d      	lsrs	r5, r3, #1
    4230:	4643      	mov	r3, r8
    4232:	085b      	lsrs	r3, r3, #1
    4234:	431e      	orrs	r6, r3
    4236:	4643      	mov	r3, r8
    4238:	07db      	lsls	r3, r3, #31
    423a:	469a      	mov	sl, r3
    423c:	e6c2      	b.n	3fc4 <__aeabi_ddiv+0x20c>
    423e:	2500      	movs	r5, #0
    4240:	4592      	cmp	sl, r2
    4242:	d300      	bcc.n	4246 <__aeabi_ddiv+0x48e>
    4244:	e733      	b.n	40ae <__aeabi_ddiv+0x2f6>
    4246:	9e03      	ldr	r6, [sp, #12]
    4248:	4659      	mov	r1, fp
    424a:	46b4      	mov	ip, r6
    424c:	44e2      	add	sl, ip
    424e:	45b2      	cmp	sl, r6
    4250:	41ad      	sbcs	r5, r5
    4252:	426d      	negs	r5, r5
    4254:	4445      	add	r5, r8
    4256:	18eb      	adds	r3, r5, r3
    4258:	3901      	subs	r1, #1
    425a:	4598      	cmp	r8, r3
    425c:	d207      	bcs.n	426e <__aeabi_ddiv+0x4b6>
    425e:	4298      	cmp	r0, r3
    4260:	d900      	bls.n	4264 <__aeabi_ddiv+0x4ac>
    4262:	e07f      	b.n	4364 <__aeabi_ddiv+0x5ac>
    4264:	d100      	bne.n	4268 <__aeabi_ddiv+0x4b0>
    4266:	e0bc      	b.n	43e2 <__aeabi_ddiv+0x62a>
    4268:	1a1d      	subs	r5, r3, r0
    426a:	468b      	mov	fp, r1
    426c:	e71f      	b.n	40ae <__aeabi_ddiv+0x2f6>
    426e:	4598      	cmp	r8, r3
    4270:	d1fa      	bne.n	4268 <__aeabi_ddiv+0x4b0>
    4272:	9d03      	ldr	r5, [sp, #12]
    4274:	4555      	cmp	r5, sl
    4276:	d9f2      	bls.n	425e <__aeabi_ddiv+0x4a6>
    4278:	4643      	mov	r3, r8
    427a:	468b      	mov	fp, r1
    427c:	1a1d      	subs	r5, r3, r0
    427e:	e716      	b.n	40ae <__aeabi_ddiv+0x2f6>
    4280:	469b      	mov	fp, r3
    4282:	e6ca      	b.n	401a <__aeabi_ddiv+0x262>
    4284:	0015      	movs	r5, r2
    4286:	e6e7      	b.n	4058 <__aeabi_ddiv+0x2a0>
    4288:	465a      	mov	r2, fp
    428a:	08c9      	lsrs	r1, r1, #3
    428c:	0752      	lsls	r2, r2, #29
    428e:	430a      	orrs	r2, r1
    4290:	055b      	lsls	r3, r3, #21
    4292:	4690      	mov	r8, r2
    4294:	0d5c      	lsrs	r4, r3, #21
    4296:	465a      	mov	r2, fp
    4298:	2301      	movs	r3, #1
    429a:	9902      	ldr	r1, [sp, #8]
    429c:	0252      	lsls	r2, r2, #9
    429e:	4019      	ands	r1, r3
    42a0:	0b12      	lsrs	r2, r2, #12
    42a2:	468c      	mov	ip, r1
    42a4:	e656      	b.n	3f54 <__aeabi_ddiv+0x19c>
    42a6:	2b00      	cmp	r3, #0
    42a8:	d100      	bne.n	42ac <__aeabi_ddiv+0x4f4>
    42aa:	e76f      	b.n	418c <__aeabi_ddiv+0x3d4>
    42ac:	4446      	add	r6, r8
    42ae:	1e4a      	subs	r2, r1, #1
    42b0:	45b0      	cmp	r8, r6
    42b2:	d929      	bls.n	4308 <__aeabi_ddiv+0x550>
    42b4:	0011      	movs	r1, r2
    42b6:	4286      	cmp	r6, r0
    42b8:	d000      	beq.n	42bc <__aeabi_ddiv+0x504>
    42ba:	e765      	b.n	4188 <__aeabi_ddiv+0x3d0>
    42bc:	9a03      	ldr	r2, [sp, #12]
    42be:	4293      	cmp	r3, r2
    42c0:	d000      	beq.n	42c4 <__aeabi_ddiv+0x50c>
    42c2:	e761      	b.n	4188 <__aeabi_ddiv+0x3d0>
    42c4:	e762      	b.n	418c <__aeabi_ddiv+0x3d4>
    42c6:	2101      	movs	r1, #1
    42c8:	4249      	negs	r1, r1
    42ca:	2001      	movs	r0, #1
    42cc:	1ac2      	subs	r2, r0, r3
    42ce:	2a38      	cmp	r2, #56	; 0x38
    42d0:	dd21      	ble.n	4316 <__aeabi_ddiv+0x55e>
    42d2:	9b02      	ldr	r3, [sp, #8]
    42d4:	4003      	ands	r3, r0
    42d6:	469c      	mov	ip, r3
    42d8:	e638      	b.n	3f4c <__aeabi_ddiv+0x194>
    42da:	220f      	movs	r2, #15
    42dc:	400a      	ands	r2, r1
    42de:	2a04      	cmp	r2, #4
    42e0:	d100      	bne.n	42e4 <__aeabi_ddiv+0x52c>
    42e2:	e75b      	b.n	419c <__aeabi_ddiv+0x3e4>
    42e4:	000a      	movs	r2, r1
    42e6:	1d11      	adds	r1, r2, #4
    42e8:	4291      	cmp	r1, r2
    42ea:	4192      	sbcs	r2, r2
    42ec:	4252      	negs	r2, r2
    42ee:	4493      	add	fp, r2
    42f0:	e754      	b.n	419c <__aeabi_ddiv+0x3e4>
    42f2:	4b47      	ldr	r3, [pc, #284]	; (4410 <__aeabi_ddiv+0x658>)
    42f4:	18e3      	adds	r3, r4, r3
    42f6:	2b00      	cmp	r3, #0
    42f8:	dde5      	ble.n	42c6 <__aeabi_ddiv+0x50e>
    42fa:	2201      	movs	r2, #1
    42fc:	4252      	negs	r2, r2
    42fe:	e7f2      	b.n	42e6 <__aeabi_ddiv+0x52e>
    4300:	001d      	movs	r5, r3
    4302:	e6fa      	b.n	40fa <__aeabi_ddiv+0x342>
    4304:	469a      	mov	sl, r3
    4306:	e71c      	b.n	4142 <__aeabi_ddiv+0x38a>
    4308:	42b0      	cmp	r0, r6
    430a:	d839      	bhi.n	4380 <__aeabi_ddiv+0x5c8>
    430c:	d06e      	beq.n	43ec <__aeabi_ddiv+0x634>
    430e:	0011      	movs	r1, r2
    4310:	e73a      	b.n	4188 <__aeabi_ddiv+0x3d0>
    4312:	9302      	str	r3, [sp, #8]
    4314:	e73a      	b.n	418c <__aeabi_ddiv+0x3d4>
    4316:	2a1f      	cmp	r2, #31
    4318:	dc3c      	bgt.n	4394 <__aeabi_ddiv+0x5dc>
    431a:	2320      	movs	r3, #32
    431c:	1a9b      	subs	r3, r3, r2
    431e:	000c      	movs	r4, r1
    4320:	4658      	mov	r0, fp
    4322:	4099      	lsls	r1, r3
    4324:	4098      	lsls	r0, r3
    4326:	1e4b      	subs	r3, r1, #1
    4328:	4199      	sbcs	r1, r3
    432a:	465b      	mov	r3, fp
    432c:	40d4      	lsrs	r4, r2
    432e:	40d3      	lsrs	r3, r2
    4330:	4320      	orrs	r0, r4
    4332:	4308      	orrs	r0, r1
    4334:	001a      	movs	r2, r3
    4336:	0743      	lsls	r3, r0, #29
    4338:	d009      	beq.n	434e <__aeabi_ddiv+0x596>
    433a:	230f      	movs	r3, #15
    433c:	4003      	ands	r3, r0
    433e:	2b04      	cmp	r3, #4
    4340:	d005      	beq.n	434e <__aeabi_ddiv+0x596>
    4342:	0001      	movs	r1, r0
    4344:	1d08      	adds	r0, r1, #4
    4346:	4288      	cmp	r0, r1
    4348:	419b      	sbcs	r3, r3
    434a:	425b      	negs	r3, r3
    434c:	18d2      	adds	r2, r2, r3
    434e:	0213      	lsls	r3, r2, #8
    4350:	d53a      	bpl.n	43c8 <__aeabi_ddiv+0x610>
    4352:	2301      	movs	r3, #1
    4354:	9a02      	ldr	r2, [sp, #8]
    4356:	2401      	movs	r4, #1
    4358:	401a      	ands	r2, r3
    435a:	2300      	movs	r3, #0
    435c:	4694      	mov	ip, r2
    435e:	4698      	mov	r8, r3
    4360:	2200      	movs	r2, #0
    4362:	e5f7      	b.n	3f54 <__aeabi_ddiv+0x19c>
    4364:	2102      	movs	r1, #2
    4366:	4249      	negs	r1, r1
    4368:	468c      	mov	ip, r1
    436a:	9d03      	ldr	r5, [sp, #12]
    436c:	44e3      	add	fp, ip
    436e:	46ac      	mov	ip, r5
    4370:	44e2      	add	sl, ip
    4372:	45aa      	cmp	sl, r5
    4374:	41ad      	sbcs	r5, r5
    4376:	426d      	negs	r5, r5
    4378:	4445      	add	r5, r8
    437a:	18ed      	adds	r5, r5, r3
    437c:	1a2d      	subs	r5, r5, r0
    437e:	e696      	b.n	40ae <__aeabi_ddiv+0x2f6>
    4380:	1e8a      	subs	r2, r1, #2
    4382:	9903      	ldr	r1, [sp, #12]
    4384:	004d      	lsls	r5, r1, #1
    4386:	428d      	cmp	r5, r1
    4388:	4189      	sbcs	r1, r1
    438a:	4249      	negs	r1, r1
    438c:	4441      	add	r1, r8
    438e:	1876      	adds	r6, r6, r1
    4390:	9503      	str	r5, [sp, #12]
    4392:	e78f      	b.n	42b4 <__aeabi_ddiv+0x4fc>
    4394:	201f      	movs	r0, #31
    4396:	4240      	negs	r0, r0
    4398:	1ac3      	subs	r3, r0, r3
    439a:	4658      	mov	r0, fp
    439c:	40d8      	lsrs	r0, r3
    439e:	0003      	movs	r3, r0
    43a0:	2a20      	cmp	r2, #32
    43a2:	d028      	beq.n	43f6 <__aeabi_ddiv+0x63e>
    43a4:	2040      	movs	r0, #64	; 0x40
    43a6:	465d      	mov	r5, fp
    43a8:	1a82      	subs	r2, r0, r2
    43aa:	4095      	lsls	r5, r2
    43ac:	4329      	orrs	r1, r5
    43ae:	1e4a      	subs	r2, r1, #1
    43b0:	4191      	sbcs	r1, r2
    43b2:	4319      	orrs	r1, r3
    43b4:	2307      	movs	r3, #7
    43b6:	2200      	movs	r2, #0
    43b8:	400b      	ands	r3, r1
    43ba:	d009      	beq.n	43d0 <__aeabi_ddiv+0x618>
    43bc:	230f      	movs	r3, #15
    43be:	2200      	movs	r2, #0
    43c0:	400b      	ands	r3, r1
    43c2:	0008      	movs	r0, r1
    43c4:	2b04      	cmp	r3, #4
    43c6:	d1bd      	bne.n	4344 <__aeabi_ddiv+0x58c>
    43c8:	0001      	movs	r1, r0
    43ca:	0753      	lsls	r3, r2, #29
    43cc:	0252      	lsls	r2, r2, #9
    43ce:	0b12      	lsrs	r2, r2, #12
    43d0:	08c9      	lsrs	r1, r1, #3
    43d2:	4319      	orrs	r1, r3
    43d4:	2301      	movs	r3, #1
    43d6:	4688      	mov	r8, r1
    43d8:	9902      	ldr	r1, [sp, #8]
    43da:	2400      	movs	r4, #0
    43dc:	4019      	ands	r1, r3
    43de:	468c      	mov	ip, r1
    43e0:	e5b8      	b.n	3f54 <__aeabi_ddiv+0x19c>
    43e2:	4552      	cmp	r2, sl
    43e4:	d8be      	bhi.n	4364 <__aeabi_ddiv+0x5ac>
    43e6:	468b      	mov	fp, r1
    43e8:	2500      	movs	r5, #0
    43ea:	e660      	b.n	40ae <__aeabi_ddiv+0x2f6>
    43ec:	9d03      	ldr	r5, [sp, #12]
    43ee:	429d      	cmp	r5, r3
    43f0:	d3c6      	bcc.n	4380 <__aeabi_ddiv+0x5c8>
    43f2:	0011      	movs	r1, r2
    43f4:	e762      	b.n	42bc <__aeabi_ddiv+0x504>
    43f6:	2500      	movs	r5, #0
    43f8:	e7d8      	b.n	43ac <__aeabi_ddiv+0x5f4>
    43fa:	2280      	movs	r2, #128	; 0x80
    43fc:	465b      	mov	r3, fp
    43fe:	0312      	lsls	r2, r2, #12
    4400:	431a      	orrs	r2, r3
    4402:	9b01      	ldr	r3, [sp, #4]
    4404:	0312      	lsls	r2, r2, #12
    4406:	0b12      	lsrs	r2, r2, #12
    4408:	469c      	mov	ip, r3
    440a:	4688      	mov	r8, r1
    440c:	4c03      	ldr	r4, [pc, #12]	; (441c <__aeabi_ddiv+0x664>)
    440e:	e5a1      	b.n	3f54 <__aeabi_ddiv+0x19c>
    4410:	000003ff 	.word	0x000003ff
    4414:	feffffff 	.word	0xfeffffff
    4418:	000007fe 	.word	0x000007fe
    441c:	000007ff 	.word	0x000007ff

00004420 <__aeabi_dmul>:
    4420:	b5f0      	push	{r4, r5, r6, r7, lr}
    4422:	4657      	mov	r7, sl
    4424:	4645      	mov	r5, r8
    4426:	46de      	mov	lr, fp
    4428:	464e      	mov	r6, r9
    442a:	b5e0      	push	{r5, r6, r7, lr}
    442c:	030c      	lsls	r4, r1, #12
    442e:	4698      	mov	r8, r3
    4430:	004e      	lsls	r6, r1, #1
    4432:	0b23      	lsrs	r3, r4, #12
    4434:	b087      	sub	sp, #28
    4436:	0007      	movs	r7, r0
    4438:	4692      	mov	sl, r2
    443a:	469b      	mov	fp, r3
    443c:	0d76      	lsrs	r6, r6, #21
    443e:	0fcd      	lsrs	r5, r1, #31
    4440:	2e00      	cmp	r6, #0
    4442:	d06b      	beq.n	451c <__aeabi_dmul+0xfc>
    4444:	4b6d      	ldr	r3, [pc, #436]	; (45fc <__aeabi_dmul+0x1dc>)
    4446:	429e      	cmp	r6, r3
    4448:	d035      	beq.n	44b6 <__aeabi_dmul+0x96>
    444a:	2480      	movs	r4, #128	; 0x80
    444c:	465b      	mov	r3, fp
    444e:	0f42      	lsrs	r2, r0, #29
    4450:	0424      	lsls	r4, r4, #16
    4452:	00db      	lsls	r3, r3, #3
    4454:	4314      	orrs	r4, r2
    4456:	431c      	orrs	r4, r3
    4458:	00c3      	lsls	r3, r0, #3
    445a:	4699      	mov	r9, r3
    445c:	4b68      	ldr	r3, [pc, #416]	; (4600 <__aeabi_dmul+0x1e0>)
    445e:	46a3      	mov	fp, r4
    4460:	469c      	mov	ip, r3
    4462:	2300      	movs	r3, #0
    4464:	2700      	movs	r7, #0
    4466:	4466      	add	r6, ip
    4468:	9302      	str	r3, [sp, #8]
    446a:	4643      	mov	r3, r8
    446c:	031c      	lsls	r4, r3, #12
    446e:	005a      	lsls	r2, r3, #1
    4470:	0fdb      	lsrs	r3, r3, #31
    4472:	4650      	mov	r0, sl
    4474:	0b24      	lsrs	r4, r4, #12
    4476:	0d52      	lsrs	r2, r2, #21
    4478:	4698      	mov	r8, r3
    447a:	d100      	bne.n	447e <__aeabi_dmul+0x5e>
    447c:	e076      	b.n	456c <__aeabi_dmul+0x14c>
    447e:	4b5f      	ldr	r3, [pc, #380]	; (45fc <__aeabi_dmul+0x1dc>)
    4480:	429a      	cmp	r2, r3
    4482:	d06d      	beq.n	4560 <__aeabi_dmul+0x140>
    4484:	2380      	movs	r3, #128	; 0x80
    4486:	0f41      	lsrs	r1, r0, #29
    4488:	041b      	lsls	r3, r3, #16
    448a:	430b      	orrs	r3, r1
    448c:	495c      	ldr	r1, [pc, #368]	; (4600 <__aeabi_dmul+0x1e0>)
    448e:	00e4      	lsls	r4, r4, #3
    4490:	468c      	mov	ip, r1
    4492:	431c      	orrs	r4, r3
    4494:	00c3      	lsls	r3, r0, #3
    4496:	2000      	movs	r0, #0
    4498:	4462      	add	r2, ip
    449a:	4641      	mov	r1, r8
    449c:	18b6      	adds	r6, r6, r2
    449e:	4069      	eors	r1, r5
    44a0:	1c72      	adds	r2, r6, #1
    44a2:	9101      	str	r1, [sp, #4]
    44a4:	4694      	mov	ip, r2
    44a6:	4307      	orrs	r7, r0
    44a8:	2f0f      	cmp	r7, #15
    44aa:	d900      	bls.n	44ae <__aeabi_dmul+0x8e>
    44ac:	e0b0      	b.n	4610 <__aeabi_dmul+0x1f0>
    44ae:	4a55      	ldr	r2, [pc, #340]	; (4604 <__aeabi_dmul+0x1e4>)
    44b0:	00bf      	lsls	r7, r7, #2
    44b2:	59d2      	ldr	r2, [r2, r7]
    44b4:	4697      	mov	pc, r2
    44b6:	465b      	mov	r3, fp
    44b8:	4303      	orrs	r3, r0
    44ba:	4699      	mov	r9, r3
    44bc:	d000      	beq.n	44c0 <__aeabi_dmul+0xa0>
    44be:	e087      	b.n	45d0 <__aeabi_dmul+0x1b0>
    44c0:	2300      	movs	r3, #0
    44c2:	469b      	mov	fp, r3
    44c4:	3302      	adds	r3, #2
    44c6:	2708      	movs	r7, #8
    44c8:	9302      	str	r3, [sp, #8]
    44ca:	e7ce      	b.n	446a <__aeabi_dmul+0x4a>
    44cc:	4642      	mov	r2, r8
    44ce:	9201      	str	r2, [sp, #4]
    44d0:	2802      	cmp	r0, #2
    44d2:	d067      	beq.n	45a4 <__aeabi_dmul+0x184>
    44d4:	2803      	cmp	r0, #3
    44d6:	d100      	bne.n	44da <__aeabi_dmul+0xba>
    44d8:	e20e      	b.n	48f8 <__aeabi_dmul+0x4d8>
    44da:	2801      	cmp	r0, #1
    44dc:	d000      	beq.n	44e0 <__aeabi_dmul+0xc0>
    44de:	e162      	b.n	47a6 <__aeabi_dmul+0x386>
    44e0:	2300      	movs	r3, #0
    44e2:	2400      	movs	r4, #0
    44e4:	2200      	movs	r2, #0
    44e6:	4699      	mov	r9, r3
    44e8:	9901      	ldr	r1, [sp, #4]
    44ea:	4001      	ands	r1, r0
    44ec:	b2cd      	uxtb	r5, r1
    44ee:	2100      	movs	r1, #0
    44f0:	0312      	lsls	r2, r2, #12
    44f2:	0d0b      	lsrs	r3, r1, #20
    44f4:	0b12      	lsrs	r2, r2, #12
    44f6:	051b      	lsls	r3, r3, #20
    44f8:	4313      	orrs	r3, r2
    44fa:	4a43      	ldr	r2, [pc, #268]	; (4608 <__aeabi_dmul+0x1e8>)
    44fc:	0524      	lsls	r4, r4, #20
    44fe:	4013      	ands	r3, r2
    4500:	431c      	orrs	r4, r3
    4502:	0064      	lsls	r4, r4, #1
    4504:	07ed      	lsls	r5, r5, #31
    4506:	0864      	lsrs	r4, r4, #1
    4508:	432c      	orrs	r4, r5
    450a:	4648      	mov	r0, r9
    450c:	0021      	movs	r1, r4
    450e:	b007      	add	sp, #28
    4510:	bc3c      	pop	{r2, r3, r4, r5}
    4512:	4690      	mov	r8, r2
    4514:	4699      	mov	r9, r3
    4516:	46a2      	mov	sl, r4
    4518:	46ab      	mov	fp, r5
    451a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    451c:	4303      	orrs	r3, r0
    451e:	4699      	mov	r9, r3
    4520:	d04f      	beq.n	45c2 <__aeabi_dmul+0x1a2>
    4522:	465b      	mov	r3, fp
    4524:	2b00      	cmp	r3, #0
    4526:	d100      	bne.n	452a <__aeabi_dmul+0x10a>
    4528:	e189      	b.n	483e <__aeabi_dmul+0x41e>
    452a:	4658      	mov	r0, fp
    452c:	f000 fe4c 	bl	51c8 <__clzsi2>
    4530:	0003      	movs	r3, r0
    4532:	3b0b      	subs	r3, #11
    4534:	2b1c      	cmp	r3, #28
    4536:	dd00      	ble.n	453a <__aeabi_dmul+0x11a>
    4538:	e17a      	b.n	4830 <__aeabi_dmul+0x410>
    453a:	221d      	movs	r2, #29
    453c:	1ad3      	subs	r3, r2, r3
    453e:	003a      	movs	r2, r7
    4540:	0001      	movs	r1, r0
    4542:	465c      	mov	r4, fp
    4544:	40da      	lsrs	r2, r3
    4546:	3908      	subs	r1, #8
    4548:	408c      	lsls	r4, r1
    454a:	0013      	movs	r3, r2
    454c:	408f      	lsls	r7, r1
    454e:	4323      	orrs	r3, r4
    4550:	469b      	mov	fp, r3
    4552:	46b9      	mov	r9, r7
    4554:	2300      	movs	r3, #0
    4556:	4e2d      	ldr	r6, [pc, #180]	; (460c <__aeabi_dmul+0x1ec>)
    4558:	2700      	movs	r7, #0
    455a:	1a36      	subs	r6, r6, r0
    455c:	9302      	str	r3, [sp, #8]
    455e:	e784      	b.n	446a <__aeabi_dmul+0x4a>
    4560:	4653      	mov	r3, sl
    4562:	4323      	orrs	r3, r4
    4564:	d12a      	bne.n	45bc <__aeabi_dmul+0x19c>
    4566:	2400      	movs	r4, #0
    4568:	2002      	movs	r0, #2
    456a:	e796      	b.n	449a <__aeabi_dmul+0x7a>
    456c:	4653      	mov	r3, sl
    456e:	4323      	orrs	r3, r4
    4570:	d020      	beq.n	45b4 <__aeabi_dmul+0x194>
    4572:	2c00      	cmp	r4, #0
    4574:	d100      	bne.n	4578 <__aeabi_dmul+0x158>
    4576:	e157      	b.n	4828 <__aeabi_dmul+0x408>
    4578:	0020      	movs	r0, r4
    457a:	f000 fe25 	bl	51c8 <__clzsi2>
    457e:	0003      	movs	r3, r0
    4580:	3b0b      	subs	r3, #11
    4582:	2b1c      	cmp	r3, #28
    4584:	dd00      	ble.n	4588 <__aeabi_dmul+0x168>
    4586:	e149      	b.n	481c <__aeabi_dmul+0x3fc>
    4588:	211d      	movs	r1, #29
    458a:	1acb      	subs	r3, r1, r3
    458c:	4651      	mov	r1, sl
    458e:	0002      	movs	r2, r0
    4590:	40d9      	lsrs	r1, r3
    4592:	4653      	mov	r3, sl
    4594:	3a08      	subs	r2, #8
    4596:	4094      	lsls	r4, r2
    4598:	4093      	lsls	r3, r2
    459a:	430c      	orrs	r4, r1
    459c:	4a1b      	ldr	r2, [pc, #108]	; (460c <__aeabi_dmul+0x1ec>)
    459e:	1a12      	subs	r2, r2, r0
    45a0:	2000      	movs	r0, #0
    45a2:	e77a      	b.n	449a <__aeabi_dmul+0x7a>
    45a4:	2501      	movs	r5, #1
    45a6:	9b01      	ldr	r3, [sp, #4]
    45a8:	4c14      	ldr	r4, [pc, #80]	; (45fc <__aeabi_dmul+0x1dc>)
    45aa:	401d      	ands	r5, r3
    45ac:	2300      	movs	r3, #0
    45ae:	2200      	movs	r2, #0
    45b0:	4699      	mov	r9, r3
    45b2:	e79c      	b.n	44ee <__aeabi_dmul+0xce>
    45b4:	2400      	movs	r4, #0
    45b6:	2200      	movs	r2, #0
    45b8:	2001      	movs	r0, #1
    45ba:	e76e      	b.n	449a <__aeabi_dmul+0x7a>
    45bc:	4653      	mov	r3, sl
    45be:	2003      	movs	r0, #3
    45c0:	e76b      	b.n	449a <__aeabi_dmul+0x7a>
    45c2:	2300      	movs	r3, #0
    45c4:	469b      	mov	fp, r3
    45c6:	3301      	adds	r3, #1
    45c8:	2704      	movs	r7, #4
    45ca:	2600      	movs	r6, #0
    45cc:	9302      	str	r3, [sp, #8]
    45ce:	e74c      	b.n	446a <__aeabi_dmul+0x4a>
    45d0:	2303      	movs	r3, #3
    45d2:	4681      	mov	r9, r0
    45d4:	270c      	movs	r7, #12
    45d6:	9302      	str	r3, [sp, #8]
    45d8:	e747      	b.n	446a <__aeabi_dmul+0x4a>
    45da:	2280      	movs	r2, #128	; 0x80
    45dc:	2300      	movs	r3, #0
    45de:	2500      	movs	r5, #0
    45e0:	0312      	lsls	r2, r2, #12
    45e2:	4699      	mov	r9, r3
    45e4:	4c05      	ldr	r4, [pc, #20]	; (45fc <__aeabi_dmul+0x1dc>)
    45e6:	e782      	b.n	44ee <__aeabi_dmul+0xce>
    45e8:	465c      	mov	r4, fp
    45ea:	464b      	mov	r3, r9
    45ec:	9802      	ldr	r0, [sp, #8]
    45ee:	e76f      	b.n	44d0 <__aeabi_dmul+0xb0>
    45f0:	465c      	mov	r4, fp
    45f2:	464b      	mov	r3, r9
    45f4:	9501      	str	r5, [sp, #4]
    45f6:	9802      	ldr	r0, [sp, #8]
    45f8:	e76a      	b.n	44d0 <__aeabi_dmul+0xb0>
    45fa:	46c0      	nop			; (mov r8, r8)
    45fc:	000007ff 	.word	0x000007ff
    4600:	fffffc01 	.word	0xfffffc01
    4604:	0000e518 	.word	0x0000e518
    4608:	800fffff 	.word	0x800fffff
    460c:	fffffc0d 	.word	0xfffffc0d
    4610:	464a      	mov	r2, r9
    4612:	4649      	mov	r1, r9
    4614:	0c17      	lsrs	r7, r2, #16
    4616:	0c1a      	lsrs	r2, r3, #16
    4618:	041b      	lsls	r3, r3, #16
    461a:	0c1b      	lsrs	r3, r3, #16
    461c:	0408      	lsls	r0, r1, #16
    461e:	0019      	movs	r1, r3
    4620:	0c00      	lsrs	r0, r0, #16
    4622:	4341      	muls	r1, r0
    4624:	0015      	movs	r5, r2
    4626:	4688      	mov	r8, r1
    4628:	0019      	movs	r1, r3
    462a:	437d      	muls	r5, r7
    462c:	4379      	muls	r1, r7
    462e:	9503      	str	r5, [sp, #12]
    4630:	4689      	mov	r9, r1
    4632:	0029      	movs	r1, r5
    4634:	0015      	movs	r5, r2
    4636:	4345      	muls	r5, r0
    4638:	444d      	add	r5, r9
    463a:	9502      	str	r5, [sp, #8]
    463c:	4645      	mov	r5, r8
    463e:	0c2d      	lsrs	r5, r5, #16
    4640:	46aa      	mov	sl, r5
    4642:	9d02      	ldr	r5, [sp, #8]
    4644:	4455      	add	r5, sl
    4646:	45a9      	cmp	r9, r5
    4648:	d906      	bls.n	4658 <__aeabi_dmul+0x238>
    464a:	468a      	mov	sl, r1
    464c:	2180      	movs	r1, #128	; 0x80
    464e:	0249      	lsls	r1, r1, #9
    4650:	4689      	mov	r9, r1
    4652:	44ca      	add	sl, r9
    4654:	4651      	mov	r1, sl
    4656:	9103      	str	r1, [sp, #12]
    4658:	0c29      	lsrs	r1, r5, #16
    465a:	9104      	str	r1, [sp, #16]
    465c:	4641      	mov	r1, r8
    465e:	0409      	lsls	r1, r1, #16
    4660:	042d      	lsls	r5, r5, #16
    4662:	0c09      	lsrs	r1, r1, #16
    4664:	4688      	mov	r8, r1
    4666:	0029      	movs	r1, r5
    4668:	0c25      	lsrs	r5, r4, #16
    466a:	0424      	lsls	r4, r4, #16
    466c:	4441      	add	r1, r8
    466e:	0c24      	lsrs	r4, r4, #16
    4670:	9105      	str	r1, [sp, #20]
    4672:	0021      	movs	r1, r4
    4674:	4341      	muls	r1, r0
    4676:	4688      	mov	r8, r1
    4678:	0021      	movs	r1, r4
    467a:	4379      	muls	r1, r7
    467c:	468a      	mov	sl, r1
    467e:	4368      	muls	r0, r5
    4680:	4641      	mov	r1, r8
    4682:	4450      	add	r0, sl
    4684:	4681      	mov	r9, r0
    4686:	0c08      	lsrs	r0, r1, #16
    4688:	4448      	add	r0, r9
    468a:	436f      	muls	r7, r5
    468c:	4582      	cmp	sl, r0
    468e:	d903      	bls.n	4698 <__aeabi_dmul+0x278>
    4690:	2180      	movs	r1, #128	; 0x80
    4692:	0249      	lsls	r1, r1, #9
    4694:	4689      	mov	r9, r1
    4696:	444f      	add	r7, r9
    4698:	0c01      	lsrs	r1, r0, #16
    469a:	4689      	mov	r9, r1
    469c:	0039      	movs	r1, r7
    469e:	4449      	add	r1, r9
    46a0:	9102      	str	r1, [sp, #8]
    46a2:	4641      	mov	r1, r8
    46a4:	040f      	lsls	r7, r1, #16
    46a6:	9904      	ldr	r1, [sp, #16]
    46a8:	0c3f      	lsrs	r7, r7, #16
    46aa:	4688      	mov	r8, r1
    46ac:	0400      	lsls	r0, r0, #16
    46ae:	19c0      	adds	r0, r0, r7
    46b0:	4480      	add	r8, r0
    46b2:	4641      	mov	r1, r8
    46b4:	9104      	str	r1, [sp, #16]
    46b6:	4659      	mov	r1, fp
    46b8:	0c0f      	lsrs	r7, r1, #16
    46ba:	0409      	lsls	r1, r1, #16
    46bc:	0c09      	lsrs	r1, r1, #16
    46be:	4688      	mov	r8, r1
    46c0:	4359      	muls	r1, r3
    46c2:	468a      	mov	sl, r1
    46c4:	0039      	movs	r1, r7
    46c6:	4351      	muls	r1, r2
    46c8:	4689      	mov	r9, r1
    46ca:	4641      	mov	r1, r8
    46cc:	434a      	muls	r2, r1
    46ce:	4651      	mov	r1, sl
    46d0:	0c09      	lsrs	r1, r1, #16
    46d2:	468b      	mov	fp, r1
    46d4:	437b      	muls	r3, r7
    46d6:	18d2      	adds	r2, r2, r3
    46d8:	445a      	add	r2, fp
    46da:	4293      	cmp	r3, r2
    46dc:	d903      	bls.n	46e6 <__aeabi_dmul+0x2c6>
    46de:	2380      	movs	r3, #128	; 0x80
    46e0:	025b      	lsls	r3, r3, #9
    46e2:	469b      	mov	fp, r3
    46e4:	44d9      	add	r9, fp
    46e6:	4651      	mov	r1, sl
    46e8:	0409      	lsls	r1, r1, #16
    46ea:	0c09      	lsrs	r1, r1, #16
    46ec:	468a      	mov	sl, r1
    46ee:	4641      	mov	r1, r8
    46f0:	4361      	muls	r1, r4
    46f2:	437c      	muls	r4, r7
    46f4:	0c13      	lsrs	r3, r2, #16
    46f6:	0412      	lsls	r2, r2, #16
    46f8:	444b      	add	r3, r9
    46fa:	4452      	add	r2, sl
    46fc:	46a1      	mov	r9, r4
    46fe:	468a      	mov	sl, r1
    4700:	003c      	movs	r4, r7
    4702:	4641      	mov	r1, r8
    4704:	436c      	muls	r4, r5
    4706:	434d      	muls	r5, r1
    4708:	4651      	mov	r1, sl
    470a:	444d      	add	r5, r9
    470c:	0c0f      	lsrs	r7, r1, #16
    470e:	197d      	adds	r5, r7, r5
    4710:	45a9      	cmp	r9, r5
    4712:	d903      	bls.n	471c <__aeabi_dmul+0x2fc>
    4714:	2180      	movs	r1, #128	; 0x80
    4716:	0249      	lsls	r1, r1, #9
    4718:	4688      	mov	r8, r1
    471a:	4444      	add	r4, r8
    471c:	9f04      	ldr	r7, [sp, #16]
    471e:	9903      	ldr	r1, [sp, #12]
    4720:	46b8      	mov	r8, r7
    4722:	4441      	add	r1, r8
    4724:	468b      	mov	fp, r1
    4726:	4583      	cmp	fp, r0
    4728:	4180      	sbcs	r0, r0
    472a:	4241      	negs	r1, r0
    472c:	4688      	mov	r8, r1
    472e:	4651      	mov	r1, sl
    4730:	0408      	lsls	r0, r1, #16
    4732:	042f      	lsls	r7, r5, #16
    4734:	0c00      	lsrs	r0, r0, #16
    4736:	183f      	adds	r7, r7, r0
    4738:	4658      	mov	r0, fp
    473a:	9902      	ldr	r1, [sp, #8]
    473c:	1810      	adds	r0, r2, r0
    473e:	4689      	mov	r9, r1
    4740:	4290      	cmp	r0, r2
    4742:	4192      	sbcs	r2, r2
    4744:	444f      	add	r7, r9
    4746:	46ba      	mov	sl, r7
    4748:	4252      	negs	r2, r2
    474a:	4699      	mov	r9, r3
    474c:	4693      	mov	fp, r2
    474e:	44c2      	add	sl, r8
    4750:	44d1      	add	r9, sl
    4752:	44cb      	add	fp, r9
    4754:	428f      	cmp	r7, r1
    4756:	41bf      	sbcs	r7, r7
    4758:	45c2      	cmp	sl, r8
    475a:	4189      	sbcs	r1, r1
    475c:	4599      	cmp	r9, r3
    475e:	419b      	sbcs	r3, r3
    4760:	4593      	cmp	fp, r2
    4762:	4192      	sbcs	r2, r2
    4764:	427f      	negs	r7, r7
    4766:	4249      	negs	r1, r1
    4768:	0c2d      	lsrs	r5, r5, #16
    476a:	4252      	negs	r2, r2
    476c:	430f      	orrs	r7, r1
    476e:	425b      	negs	r3, r3
    4770:	4313      	orrs	r3, r2
    4772:	197f      	adds	r7, r7, r5
    4774:	18ff      	adds	r7, r7, r3
    4776:	465b      	mov	r3, fp
    4778:	193c      	adds	r4, r7, r4
    477a:	0ddb      	lsrs	r3, r3, #23
    477c:	9a05      	ldr	r2, [sp, #20]
    477e:	0264      	lsls	r4, r4, #9
    4780:	431c      	orrs	r4, r3
    4782:	0243      	lsls	r3, r0, #9
    4784:	4313      	orrs	r3, r2
    4786:	1e5d      	subs	r5, r3, #1
    4788:	41ab      	sbcs	r3, r5
    478a:	465a      	mov	r2, fp
    478c:	0dc0      	lsrs	r0, r0, #23
    478e:	4303      	orrs	r3, r0
    4790:	0252      	lsls	r2, r2, #9
    4792:	4313      	orrs	r3, r2
    4794:	01e2      	lsls	r2, r4, #7
    4796:	d556      	bpl.n	4846 <__aeabi_dmul+0x426>
    4798:	2001      	movs	r0, #1
    479a:	085a      	lsrs	r2, r3, #1
    479c:	4003      	ands	r3, r0
    479e:	4313      	orrs	r3, r2
    47a0:	07e2      	lsls	r2, r4, #31
    47a2:	4313      	orrs	r3, r2
    47a4:	0864      	lsrs	r4, r4, #1
    47a6:	485a      	ldr	r0, [pc, #360]	; (4910 <__aeabi_dmul+0x4f0>)
    47a8:	4460      	add	r0, ip
    47aa:	2800      	cmp	r0, #0
    47ac:	dd4d      	ble.n	484a <__aeabi_dmul+0x42a>
    47ae:	075a      	lsls	r2, r3, #29
    47b0:	d009      	beq.n	47c6 <__aeabi_dmul+0x3a6>
    47b2:	220f      	movs	r2, #15
    47b4:	401a      	ands	r2, r3
    47b6:	2a04      	cmp	r2, #4
    47b8:	d005      	beq.n	47c6 <__aeabi_dmul+0x3a6>
    47ba:	1d1a      	adds	r2, r3, #4
    47bc:	429a      	cmp	r2, r3
    47be:	419b      	sbcs	r3, r3
    47c0:	425b      	negs	r3, r3
    47c2:	18e4      	adds	r4, r4, r3
    47c4:	0013      	movs	r3, r2
    47c6:	01e2      	lsls	r2, r4, #7
    47c8:	d504      	bpl.n	47d4 <__aeabi_dmul+0x3b4>
    47ca:	2080      	movs	r0, #128	; 0x80
    47cc:	4a51      	ldr	r2, [pc, #324]	; (4914 <__aeabi_dmul+0x4f4>)
    47ce:	00c0      	lsls	r0, r0, #3
    47d0:	4014      	ands	r4, r2
    47d2:	4460      	add	r0, ip
    47d4:	4a50      	ldr	r2, [pc, #320]	; (4918 <__aeabi_dmul+0x4f8>)
    47d6:	4290      	cmp	r0, r2
    47d8:	dd00      	ble.n	47dc <__aeabi_dmul+0x3bc>
    47da:	e6e3      	b.n	45a4 <__aeabi_dmul+0x184>
    47dc:	2501      	movs	r5, #1
    47de:	08db      	lsrs	r3, r3, #3
    47e0:	0762      	lsls	r2, r4, #29
    47e2:	431a      	orrs	r2, r3
    47e4:	0264      	lsls	r4, r4, #9
    47e6:	9b01      	ldr	r3, [sp, #4]
    47e8:	4691      	mov	r9, r2
    47ea:	0b22      	lsrs	r2, r4, #12
    47ec:	0544      	lsls	r4, r0, #21
    47ee:	0d64      	lsrs	r4, r4, #21
    47f0:	401d      	ands	r5, r3
    47f2:	e67c      	b.n	44ee <__aeabi_dmul+0xce>
    47f4:	2280      	movs	r2, #128	; 0x80
    47f6:	4659      	mov	r1, fp
    47f8:	0312      	lsls	r2, r2, #12
    47fa:	4211      	tst	r1, r2
    47fc:	d008      	beq.n	4810 <__aeabi_dmul+0x3f0>
    47fe:	4214      	tst	r4, r2
    4800:	d106      	bne.n	4810 <__aeabi_dmul+0x3f0>
    4802:	4322      	orrs	r2, r4
    4804:	0312      	lsls	r2, r2, #12
    4806:	0b12      	lsrs	r2, r2, #12
    4808:	4645      	mov	r5, r8
    480a:	4699      	mov	r9, r3
    480c:	4c43      	ldr	r4, [pc, #268]	; (491c <__aeabi_dmul+0x4fc>)
    480e:	e66e      	b.n	44ee <__aeabi_dmul+0xce>
    4810:	465b      	mov	r3, fp
    4812:	431a      	orrs	r2, r3
    4814:	0312      	lsls	r2, r2, #12
    4816:	0b12      	lsrs	r2, r2, #12
    4818:	4c40      	ldr	r4, [pc, #256]	; (491c <__aeabi_dmul+0x4fc>)
    481a:	e668      	b.n	44ee <__aeabi_dmul+0xce>
    481c:	0003      	movs	r3, r0
    481e:	4654      	mov	r4, sl
    4820:	3b28      	subs	r3, #40	; 0x28
    4822:	409c      	lsls	r4, r3
    4824:	2300      	movs	r3, #0
    4826:	e6b9      	b.n	459c <__aeabi_dmul+0x17c>
    4828:	f000 fcce 	bl	51c8 <__clzsi2>
    482c:	3020      	adds	r0, #32
    482e:	e6a6      	b.n	457e <__aeabi_dmul+0x15e>
    4830:	0003      	movs	r3, r0
    4832:	3b28      	subs	r3, #40	; 0x28
    4834:	409f      	lsls	r7, r3
    4836:	2300      	movs	r3, #0
    4838:	46bb      	mov	fp, r7
    483a:	4699      	mov	r9, r3
    483c:	e68a      	b.n	4554 <__aeabi_dmul+0x134>
    483e:	f000 fcc3 	bl	51c8 <__clzsi2>
    4842:	3020      	adds	r0, #32
    4844:	e674      	b.n	4530 <__aeabi_dmul+0x110>
    4846:	46b4      	mov	ip, r6
    4848:	e7ad      	b.n	47a6 <__aeabi_dmul+0x386>
    484a:	2501      	movs	r5, #1
    484c:	1a2a      	subs	r2, r5, r0
    484e:	2a38      	cmp	r2, #56	; 0x38
    4850:	dd06      	ble.n	4860 <__aeabi_dmul+0x440>
    4852:	9b01      	ldr	r3, [sp, #4]
    4854:	2400      	movs	r4, #0
    4856:	401d      	ands	r5, r3
    4858:	2300      	movs	r3, #0
    485a:	2200      	movs	r2, #0
    485c:	4699      	mov	r9, r3
    485e:	e646      	b.n	44ee <__aeabi_dmul+0xce>
    4860:	2a1f      	cmp	r2, #31
    4862:	dc21      	bgt.n	48a8 <__aeabi_dmul+0x488>
    4864:	2520      	movs	r5, #32
    4866:	0020      	movs	r0, r4
    4868:	1aad      	subs	r5, r5, r2
    486a:	001e      	movs	r6, r3
    486c:	40ab      	lsls	r3, r5
    486e:	40a8      	lsls	r0, r5
    4870:	40d6      	lsrs	r6, r2
    4872:	1e5d      	subs	r5, r3, #1
    4874:	41ab      	sbcs	r3, r5
    4876:	4330      	orrs	r0, r6
    4878:	4318      	orrs	r0, r3
    487a:	40d4      	lsrs	r4, r2
    487c:	0743      	lsls	r3, r0, #29
    487e:	d009      	beq.n	4894 <__aeabi_dmul+0x474>
    4880:	230f      	movs	r3, #15
    4882:	4003      	ands	r3, r0
    4884:	2b04      	cmp	r3, #4
    4886:	d005      	beq.n	4894 <__aeabi_dmul+0x474>
    4888:	0003      	movs	r3, r0
    488a:	1d18      	adds	r0, r3, #4
    488c:	4298      	cmp	r0, r3
    488e:	419b      	sbcs	r3, r3
    4890:	425b      	negs	r3, r3
    4892:	18e4      	adds	r4, r4, r3
    4894:	0223      	lsls	r3, r4, #8
    4896:	d521      	bpl.n	48dc <__aeabi_dmul+0x4bc>
    4898:	2501      	movs	r5, #1
    489a:	9b01      	ldr	r3, [sp, #4]
    489c:	2401      	movs	r4, #1
    489e:	401d      	ands	r5, r3
    48a0:	2300      	movs	r3, #0
    48a2:	2200      	movs	r2, #0
    48a4:	4699      	mov	r9, r3
    48a6:	e622      	b.n	44ee <__aeabi_dmul+0xce>
    48a8:	251f      	movs	r5, #31
    48aa:	0021      	movs	r1, r4
    48ac:	426d      	negs	r5, r5
    48ae:	1a28      	subs	r0, r5, r0
    48b0:	40c1      	lsrs	r1, r0
    48b2:	0008      	movs	r0, r1
    48b4:	2a20      	cmp	r2, #32
    48b6:	d01d      	beq.n	48f4 <__aeabi_dmul+0x4d4>
    48b8:	355f      	adds	r5, #95	; 0x5f
    48ba:	1aaa      	subs	r2, r5, r2
    48bc:	4094      	lsls	r4, r2
    48be:	4323      	orrs	r3, r4
    48c0:	1e5c      	subs	r4, r3, #1
    48c2:	41a3      	sbcs	r3, r4
    48c4:	2507      	movs	r5, #7
    48c6:	4303      	orrs	r3, r0
    48c8:	401d      	ands	r5, r3
    48ca:	2200      	movs	r2, #0
    48cc:	2d00      	cmp	r5, #0
    48ce:	d009      	beq.n	48e4 <__aeabi_dmul+0x4c4>
    48d0:	220f      	movs	r2, #15
    48d2:	2400      	movs	r4, #0
    48d4:	401a      	ands	r2, r3
    48d6:	0018      	movs	r0, r3
    48d8:	2a04      	cmp	r2, #4
    48da:	d1d6      	bne.n	488a <__aeabi_dmul+0x46a>
    48dc:	0003      	movs	r3, r0
    48de:	0765      	lsls	r5, r4, #29
    48e0:	0264      	lsls	r4, r4, #9
    48e2:	0b22      	lsrs	r2, r4, #12
    48e4:	08db      	lsrs	r3, r3, #3
    48e6:	432b      	orrs	r3, r5
    48e8:	2501      	movs	r5, #1
    48ea:	4699      	mov	r9, r3
    48ec:	9b01      	ldr	r3, [sp, #4]
    48ee:	2400      	movs	r4, #0
    48f0:	401d      	ands	r5, r3
    48f2:	e5fc      	b.n	44ee <__aeabi_dmul+0xce>
    48f4:	2400      	movs	r4, #0
    48f6:	e7e2      	b.n	48be <__aeabi_dmul+0x49e>
    48f8:	2280      	movs	r2, #128	; 0x80
    48fa:	2501      	movs	r5, #1
    48fc:	0312      	lsls	r2, r2, #12
    48fe:	4322      	orrs	r2, r4
    4900:	9901      	ldr	r1, [sp, #4]
    4902:	0312      	lsls	r2, r2, #12
    4904:	0b12      	lsrs	r2, r2, #12
    4906:	400d      	ands	r5, r1
    4908:	4699      	mov	r9, r3
    490a:	4c04      	ldr	r4, [pc, #16]	; (491c <__aeabi_dmul+0x4fc>)
    490c:	e5ef      	b.n	44ee <__aeabi_dmul+0xce>
    490e:	46c0      	nop			; (mov r8, r8)
    4910:	000003ff 	.word	0x000003ff
    4914:	feffffff 	.word	0xfeffffff
    4918:	000007fe 	.word	0x000007fe
    491c:	000007ff 	.word	0x000007ff

00004920 <__aeabi_dsub>:
    4920:	b5f0      	push	{r4, r5, r6, r7, lr}
    4922:	4646      	mov	r6, r8
    4924:	46d6      	mov	lr, sl
    4926:	464f      	mov	r7, r9
    4928:	030c      	lsls	r4, r1, #12
    492a:	b5c0      	push	{r6, r7, lr}
    492c:	0fcd      	lsrs	r5, r1, #31
    492e:	004e      	lsls	r6, r1, #1
    4930:	0a61      	lsrs	r1, r4, #9
    4932:	0f44      	lsrs	r4, r0, #29
    4934:	430c      	orrs	r4, r1
    4936:	00c1      	lsls	r1, r0, #3
    4938:	0058      	lsls	r0, r3, #1
    493a:	0d40      	lsrs	r0, r0, #21
    493c:	4684      	mov	ip, r0
    493e:	468a      	mov	sl, r1
    4940:	000f      	movs	r7, r1
    4942:	0319      	lsls	r1, r3, #12
    4944:	0f50      	lsrs	r0, r2, #29
    4946:	0a49      	lsrs	r1, r1, #9
    4948:	4301      	orrs	r1, r0
    494a:	48c6      	ldr	r0, [pc, #792]	; (4c64 <__aeabi_dsub+0x344>)
    494c:	0d76      	lsrs	r6, r6, #21
    494e:	46a8      	mov	r8, r5
    4950:	0fdb      	lsrs	r3, r3, #31
    4952:	00d2      	lsls	r2, r2, #3
    4954:	4584      	cmp	ip, r0
    4956:	d100      	bne.n	495a <__aeabi_dsub+0x3a>
    4958:	e0d8      	b.n	4b0c <__aeabi_dsub+0x1ec>
    495a:	2001      	movs	r0, #1
    495c:	4043      	eors	r3, r0
    495e:	42ab      	cmp	r3, r5
    4960:	d100      	bne.n	4964 <__aeabi_dsub+0x44>
    4962:	e0a6      	b.n	4ab2 <__aeabi_dsub+0x192>
    4964:	4660      	mov	r0, ip
    4966:	1a35      	subs	r5, r6, r0
    4968:	2d00      	cmp	r5, #0
    496a:	dc00      	bgt.n	496e <__aeabi_dsub+0x4e>
    496c:	e105      	b.n	4b7a <__aeabi_dsub+0x25a>
    496e:	2800      	cmp	r0, #0
    4970:	d110      	bne.n	4994 <__aeabi_dsub+0x74>
    4972:	000b      	movs	r3, r1
    4974:	4313      	orrs	r3, r2
    4976:	d100      	bne.n	497a <__aeabi_dsub+0x5a>
    4978:	e0d7      	b.n	4b2a <__aeabi_dsub+0x20a>
    497a:	1e6b      	subs	r3, r5, #1
    497c:	2b00      	cmp	r3, #0
    497e:	d000      	beq.n	4982 <__aeabi_dsub+0x62>
    4980:	e14b      	b.n	4c1a <__aeabi_dsub+0x2fa>
    4982:	4653      	mov	r3, sl
    4984:	1a9f      	subs	r7, r3, r2
    4986:	45ba      	cmp	sl, r7
    4988:	4180      	sbcs	r0, r0
    498a:	1a64      	subs	r4, r4, r1
    498c:	4240      	negs	r0, r0
    498e:	1a24      	subs	r4, r4, r0
    4990:	2601      	movs	r6, #1
    4992:	e01e      	b.n	49d2 <__aeabi_dsub+0xb2>
    4994:	4bb3      	ldr	r3, [pc, #716]	; (4c64 <__aeabi_dsub+0x344>)
    4996:	429e      	cmp	r6, r3
    4998:	d048      	beq.n	4a2c <__aeabi_dsub+0x10c>
    499a:	2380      	movs	r3, #128	; 0x80
    499c:	041b      	lsls	r3, r3, #16
    499e:	4319      	orrs	r1, r3
    49a0:	2d38      	cmp	r5, #56	; 0x38
    49a2:	dd00      	ble.n	49a6 <__aeabi_dsub+0x86>
    49a4:	e119      	b.n	4bda <__aeabi_dsub+0x2ba>
    49a6:	2d1f      	cmp	r5, #31
    49a8:	dd00      	ble.n	49ac <__aeabi_dsub+0x8c>
    49aa:	e14c      	b.n	4c46 <__aeabi_dsub+0x326>
    49ac:	2320      	movs	r3, #32
    49ae:	000f      	movs	r7, r1
    49b0:	1b5b      	subs	r3, r3, r5
    49b2:	0010      	movs	r0, r2
    49b4:	409a      	lsls	r2, r3
    49b6:	409f      	lsls	r7, r3
    49b8:	40e8      	lsrs	r0, r5
    49ba:	1e53      	subs	r3, r2, #1
    49bc:	419a      	sbcs	r2, r3
    49be:	40e9      	lsrs	r1, r5
    49c0:	4307      	orrs	r7, r0
    49c2:	4317      	orrs	r7, r2
    49c4:	4653      	mov	r3, sl
    49c6:	1bdf      	subs	r7, r3, r7
    49c8:	1a61      	subs	r1, r4, r1
    49ca:	45ba      	cmp	sl, r7
    49cc:	41a4      	sbcs	r4, r4
    49ce:	4264      	negs	r4, r4
    49d0:	1b0c      	subs	r4, r1, r4
    49d2:	0223      	lsls	r3, r4, #8
    49d4:	d400      	bmi.n	49d8 <__aeabi_dsub+0xb8>
    49d6:	e0c5      	b.n	4b64 <__aeabi_dsub+0x244>
    49d8:	0264      	lsls	r4, r4, #9
    49da:	0a65      	lsrs	r5, r4, #9
    49dc:	2d00      	cmp	r5, #0
    49de:	d100      	bne.n	49e2 <__aeabi_dsub+0xc2>
    49e0:	e0f6      	b.n	4bd0 <__aeabi_dsub+0x2b0>
    49e2:	0028      	movs	r0, r5
    49e4:	f000 fbf0 	bl	51c8 <__clzsi2>
    49e8:	0003      	movs	r3, r0
    49ea:	3b08      	subs	r3, #8
    49ec:	2b1f      	cmp	r3, #31
    49ee:	dd00      	ble.n	49f2 <__aeabi_dsub+0xd2>
    49f0:	e0e9      	b.n	4bc6 <__aeabi_dsub+0x2a6>
    49f2:	2220      	movs	r2, #32
    49f4:	003c      	movs	r4, r7
    49f6:	1ad2      	subs	r2, r2, r3
    49f8:	409d      	lsls	r5, r3
    49fa:	40d4      	lsrs	r4, r2
    49fc:	409f      	lsls	r7, r3
    49fe:	4325      	orrs	r5, r4
    4a00:	429e      	cmp	r6, r3
    4a02:	dd00      	ble.n	4a06 <__aeabi_dsub+0xe6>
    4a04:	e0db      	b.n	4bbe <__aeabi_dsub+0x29e>
    4a06:	1b9e      	subs	r6, r3, r6
    4a08:	1c73      	adds	r3, r6, #1
    4a0a:	2b1f      	cmp	r3, #31
    4a0c:	dd00      	ble.n	4a10 <__aeabi_dsub+0xf0>
    4a0e:	e10a      	b.n	4c26 <__aeabi_dsub+0x306>
    4a10:	2220      	movs	r2, #32
    4a12:	0038      	movs	r0, r7
    4a14:	1ad2      	subs	r2, r2, r3
    4a16:	0029      	movs	r1, r5
    4a18:	4097      	lsls	r7, r2
    4a1a:	002c      	movs	r4, r5
    4a1c:	4091      	lsls	r1, r2
    4a1e:	40d8      	lsrs	r0, r3
    4a20:	1e7a      	subs	r2, r7, #1
    4a22:	4197      	sbcs	r7, r2
    4a24:	40dc      	lsrs	r4, r3
    4a26:	2600      	movs	r6, #0
    4a28:	4301      	orrs	r1, r0
    4a2a:	430f      	orrs	r7, r1
    4a2c:	077b      	lsls	r3, r7, #29
    4a2e:	d009      	beq.n	4a44 <__aeabi_dsub+0x124>
    4a30:	230f      	movs	r3, #15
    4a32:	403b      	ands	r3, r7
    4a34:	2b04      	cmp	r3, #4
    4a36:	d005      	beq.n	4a44 <__aeabi_dsub+0x124>
    4a38:	1d3b      	adds	r3, r7, #4
    4a3a:	42bb      	cmp	r3, r7
    4a3c:	41bf      	sbcs	r7, r7
    4a3e:	427f      	negs	r7, r7
    4a40:	19e4      	adds	r4, r4, r7
    4a42:	001f      	movs	r7, r3
    4a44:	0223      	lsls	r3, r4, #8
    4a46:	d525      	bpl.n	4a94 <__aeabi_dsub+0x174>
    4a48:	4b86      	ldr	r3, [pc, #536]	; (4c64 <__aeabi_dsub+0x344>)
    4a4a:	3601      	adds	r6, #1
    4a4c:	429e      	cmp	r6, r3
    4a4e:	d100      	bne.n	4a52 <__aeabi_dsub+0x132>
    4a50:	e0af      	b.n	4bb2 <__aeabi_dsub+0x292>
    4a52:	4b85      	ldr	r3, [pc, #532]	; (4c68 <__aeabi_dsub+0x348>)
    4a54:	2501      	movs	r5, #1
    4a56:	401c      	ands	r4, r3
    4a58:	4643      	mov	r3, r8
    4a5a:	0762      	lsls	r2, r4, #29
    4a5c:	08ff      	lsrs	r7, r7, #3
    4a5e:	0264      	lsls	r4, r4, #9
    4a60:	0576      	lsls	r6, r6, #21
    4a62:	4317      	orrs	r7, r2
    4a64:	0b24      	lsrs	r4, r4, #12
    4a66:	0d76      	lsrs	r6, r6, #21
    4a68:	401d      	ands	r5, r3
    4a6a:	2100      	movs	r1, #0
    4a6c:	0324      	lsls	r4, r4, #12
    4a6e:	0b23      	lsrs	r3, r4, #12
    4a70:	0d0c      	lsrs	r4, r1, #20
    4a72:	4a7e      	ldr	r2, [pc, #504]	; (4c6c <__aeabi_dsub+0x34c>)
    4a74:	0524      	lsls	r4, r4, #20
    4a76:	431c      	orrs	r4, r3
    4a78:	4014      	ands	r4, r2
    4a7a:	0533      	lsls	r3, r6, #20
    4a7c:	4323      	orrs	r3, r4
    4a7e:	005b      	lsls	r3, r3, #1
    4a80:	07ed      	lsls	r5, r5, #31
    4a82:	085b      	lsrs	r3, r3, #1
    4a84:	432b      	orrs	r3, r5
    4a86:	0038      	movs	r0, r7
    4a88:	0019      	movs	r1, r3
    4a8a:	bc1c      	pop	{r2, r3, r4}
    4a8c:	4690      	mov	r8, r2
    4a8e:	4699      	mov	r9, r3
    4a90:	46a2      	mov	sl, r4
    4a92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a94:	2501      	movs	r5, #1
    4a96:	4643      	mov	r3, r8
    4a98:	0762      	lsls	r2, r4, #29
    4a9a:	08ff      	lsrs	r7, r7, #3
    4a9c:	4317      	orrs	r7, r2
    4a9e:	08e4      	lsrs	r4, r4, #3
    4aa0:	401d      	ands	r5, r3
    4aa2:	4b70      	ldr	r3, [pc, #448]	; (4c64 <__aeabi_dsub+0x344>)
    4aa4:	429e      	cmp	r6, r3
    4aa6:	d036      	beq.n	4b16 <__aeabi_dsub+0x1f6>
    4aa8:	0324      	lsls	r4, r4, #12
    4aaa:	0576      	lsls	r6, r6, #21
    4aac:	0b24      	lsrs	r4, r4, #12
    4aae:	0d76      	lsrs	r6, r6, #21
    4ab0:	e7db      	b.n	4a6a <__aeabi_dsub+0x14a>
    4ab2:	4663      	mov	r3, ip
    4ab4:	1af3      	subs	r3, r6, r3
    4ab6:	2b00      	cmp	r3, #0
    4ab8:	dc00      	bgt.n	4abc <__aeabi_dsub+0x19c>
    4aba:	e094      	b.n	4be6 <__aeabi_dsub+0x2c6>
    4abc:	4660      	mov	r0, ip
    4abe:	2800      	cmp	r0, #0
    4ac0:	d035      	beq.n	4b2e <__aeabi_dsub+0x20e>
    4ac2:	4868      	ldr	r0, [pc, #416]	; (4c64 <__aeabi_dsub+0x344>)
    4ac4:	4286      	cmp	r6, r0
    4ac6:	d0b1      	beq.n	4a2c <__aeabi_dsub+0x10c>
    4ac8:	2780      	movs	r7, #128	; 0x80
    4aca:	043f      	lsls	r7, r7, #16
    4acc:	4339      	orrs	r1, r7
    4ace:	2b38      	cmp	r3, #56	; 0x38
    4ad0:	dc00      	bgt.n	4ad4 <__aeabi_dsub+0x1b4>
    4ad2:	e0fd      	b.n	4cd0 <__aeabi_dsub+0x3b0>
    4ad4:	430a      	orrs	r2, r1
    4ad6:	0017      	movs	r7, r2
    4ad8:	2100      	movs	r1, #0
    4ada:	1e7a      	subs	r2, r7, #1
    4adc:	4197      	sbcs	r7, r2
    4ade:	4457      	add	r7, sl
    4ae0:	4557      	cmp	r7, sl
    4ae2:	4180      	sbcs	r0, r0
    4ae4:	1909      	adds	r1, r1, r4
    4ae6:	4244      	negs	r4, r0
    4ae8:	190c      	adds	r4, r1, r4
    4aea:	0223      	lsls	r3, r4, #8
    4aec:	d53a      	bpl.n	4b64 <__aeabi_dsub+0x244>
    4aee:	4b5d      	ldr	r3, [pc, #372]	; (4c64 <__aeabi_dsub+0x344>)
    4af0:	3601      	adds	r6, #1
    4af2:	429e      	cmp	r6, r3
    4af4:	d100      	bne.n	4af8 <__aeabi_dsub+0x1d8>
    4af6:	e14b      	b.n	4d90 <__aeabi_dsub+0x470>
    4af8:	2201      	movs	r2, #1
    4afa:	4b5b      	ldr	r3, [pc, #364]	; (4c68 <__aeabi_dsub+0x348>)
    4afc:	401c      	ands	r4, r3
    4afe:	087b      	lsrs	r3, r7, #1
    4b00:	4017      	ands	r7, r2
    4b02:	431f      	orrs	r7, r3
    4b04:	07e2      	lsls	r2, r4, #31
    4b06:	4317      	orrs	r7, r2
    4b08:	0864      	lsrs	r4, r4, #1
    4b0a:	e78f      	b.n	4a2c <__aeabi_dsub+0x10c>
    4b0c:	0008      	movs	r0, r1
    4b0e:	4310      	orrs	r0, r2
    4b10:	d000      	beq.n	4b14 <__aeabi_dsub+0x1f4>
    4b12:	e724      	b.n	495e <__aeabi_dsub+0x3e>
    4b14:	e721      	b.n	495a <__aeabi_dsub+0x3a>
    4b16:	0023      	movs	r3, r4
    4b18:	433b      	orrs	r3, r7
    4b1a:	d100      	bne.n	4b1e <__aeabi_dsub+0x1fe>
    4b1c:	e1b9      	b.n	4e92 <__aeabi_dsub+0x572>
    4b1e:	2280      	movs	r2, #128	; 0x80
    4b20:	0312      	lsls	r2, r2, #12
    4b22:	4314      	orrs	r4, r2
    4b24:	0324      	lsls	r4, r4, #12
    4b26:	0b24      	lsrs	r4, r4, #12
    4b28:	e79f      	b.n	4a6a <__aeabi_dsub+0x14a>
    4b2a:	002e      	movs	r6, r5
    4b2c:	e77e      	b.n	4a2c <__aeabi_dsub+0x10c>
    4b2e:	0008      	movs	r0, r1
    4b30:	4310      	orrs	r0, r2
    4b32:	d100      	bne.n	4b36 <__aeabi_dsub+0x216>
    4b34:	e0ca      	b.n	4ccc <__aeabi_dsub+0x3ac>
    4b36:	1e58      	subs	r0, r3, #1
    4b38:	4684      	mov	ip, r0
    4b3a:	2800      	cmp	r0, #0
    4b3c:	d000      	beq.n	4b40 <__aeabi_dsub+0x220>
    4b3e:	e0e7      	b.n	4d10 <__aeabi_dsub+0x3f0>
    4b40:	4452      	add	r2, sl
    4b42:	4552      	cmp	r2, sl
    4b44:	4180      	sbcs	r0, r0
    4b46:	1864      	adds	r4, r4, r1
    4b48:	4240      	negs	r0, r0
    4b4a:	1824      	adds	r4, r4, r0
    4b4c:	0017      	movs	r7, r2
    4b4e:	2601      	movs	r6, #1
    4b50:	0223      	lsls	r3, r4, #8
    4b52:	d507      	bpl.n	4b64 <__aeabi_dsub+0x244>
    4b54:	2602      	movs	r6, #2
    4b56:	e7cf      	b.n	4af8 <__aeabi_dsub+0x1d8>
    4b58:	4664      	mov	r4, ip
    4b5a:	432c      	orrs	r4, r5
    4b5c:	d100      	bne.n	4b60 <__aeabi_dsub+0x240>
    4b5e:	e1b3      	b.n	4ec8 <__aeabi_dsub+0x5a8>
    4b60:	002c      	movs	r4, r5
    4b62:	4667      	mov	r7, ip
    4b64:	077b      	lsls	r3, r7, #29
    4b66:	d000      	beq.n	4b6a <__aeabi_dsub+0x24a>
    4b68:	e762      	b.n	4a30 <__aeabi_dsub+0x110>
    4b6a:	0763      	lsls	r3, r4, #29
    4b6c:	08ff      	lsrs	r7, r7, #3
    4b6e:	431f      	orrs	r7, r3
    4b70:	2501      	movs	r5, #1
    4b72:	4643      	mov	r3, r8
    4b74:	08e4      	lsrs	r4, r4, #3
    4b76:	401d      	ands	r5, r3
    4b78:	e793      	b.n	4aa2 <__aeabi_dsub+0x182>
    4b7a:	2d00      	cmp	r5, #0
    4b7c:	d178      	bne.n	4c70 <__aeabi_dsub+0x350>
    4b7e:	1c75      	adds	r5, r6, #1
    4b80:	056d      	lsls	r5, r5, #21
    4b82:	0d6d      	lsrs	r5, r5, #21
    4b84:	2d01      	cmp	r5, #1
    4b86:	dc00      	bgt.n	4b8a <__aeabi_dsub+0x26a>
    4b88:	e0f2      	b.n	4d70 <__aeabi_dsub+0x450>
    4b8a:	4650      	mov	r0, sl
    4b8c:	1a80      	subs	r0, r0, r2
    4b8e:	4582      	cmp	sl, r0
    4b90:	41bf      	sbcs	r7, r7
    4b92:	1a65      	subs	r5, r4, r1
    4b94:	427f      	negs	r7, r7
    4b96:	1bed      	subs	r5, r5, r7
    4b98:	4684      	mov	ip, r0
    4b9a:	0228      	lsls	r0, r5, #8
    4b9c:	d400      	bmi.n	4ba0 <__aeabi_dsub+0x280>
    4b9e:	e08c      	b.n	4cba <__aeabi_dsub+0x39a>
    4ba0:	4650      	mov	r0, sl
    4ba2:	1a17      	subs	r7, r2, r0
    4ba4:	42ba      	cmp	r2, r7
    4ba6:	4192      	sbcs	r2, r2
    4ba8:	1b0c      	subs	r4, r1, r4
    4baa:	4255      	negs	r5, r2
    4bac:	1b65      	subs	r5, r4, r5
    4bae:	4698      	mov	r8, r3
    4bb0:	e714      	b.n	49dc <__aeabi_dsub+0xbc>
    4bb2:	2501      	movs	r5, #1
    4bb4:	4643      	mov	r3, r8
    4bb6:	2400      	movs	r4, #0
    4bb8:	401d      	ands	r5, r3
    4bba:	2700      	movs	r7, #0
    4bbc:	e755      	b.n	4a6a <__aeabi_dsub+0x14a>
    4bbe:	4c2a      	ldr	r4, [pc, #168]	; (4c68 <__aeabi_dsub+0x348>)
    4bc0:	1af6      	subs	r6, r6, r3
    4bc2:	402c      	ands	r4, r5
    4bc4:	e732      	b.n	4a2c <__aeabi_dsub+0x10c>
    4bc6:	003d      	movs	r5, r7
    4bc8:	3828      	subs	r0, #40	; 0x28
    4bca:	4085      	lsls	r5, r0
    4bcc:	2700      	movs	r7, #0
    4bce:	e717      	b.n	4a00 <__aeabi_dsub+0xe0>
    4bd0:	0038      	movs	r0, r7
    4bd2:	f000 faf9 	bl	51c8 <__clzsi2>
    4bd6:	3020      	adds	r0, #32
    4bd8:	e706      	b.n	49e8 <__aeabi_dsub+0xc8>
    4bda:	430a      	orrs	r2, r1
    4bdc:	0017      	movs	r7, r2
    4bde:	2100      	movs	r1, #0
    4be0:	1e7a      	subs	r2, r7, #1
    4be2:	4197      	sbcs	r7, r2
    4be4:	e6ee      	b.n	49c4 <__aeabi_dsub+0xa4>
    4be6:	2b00      	cmp	r3, #0
    4be8:	d000      	beq.n	4bec <__aeabi_dsub+0x2cc>
    4bea:	e0e5      	b.n	4db8 <__aeabi_dsub+0x498>
    4bec:	1c73      	adds	r3, r6, #1
    4bee:	469c      	mov	ip, r3
    4bf0:	055b      	lsls	r3, r3, #21
    4bf2:	0d5b      	lsrs	r3, r3, #21
    4bf4:	2b01      	cmp	r3, #1
    4bf6:	dc00      	bgt.n	4bfa <__aeabi_dsub+0x2da>
    4bf8:	e09f      	b.n	4d3a <__aeabi_dsub+0x41a>
    4bfa:	4b1a      	ldr	r3, [pc, #104]	; (4c64 <__aeabi_dsub+0x344>)
    4bfc:	459c      	cmp	ip, r3
    4bfe:	d100      	bne.n	4c02 <__aeabi_dsub+0x2e2>
    4c00:	e0c5      	b.n	4d8e <__aeabi_dsub+0x46e>
    4c02:	4452      	add	r2, sl
    4c04:	4552      	cmp	r2, sl
    4c06:	4180      	sbcs	r0, r0
    4c08:	1864      	adds	r4, r4, r1
    4c0a:	4240      	negs	r0, r0
    4c0c:	1824      	adds	r4, r4, r0
    4c0e:	07e7      	lsls	r7, r4, #31
    4c10:	0852      	lsrs	r2, r2, #1
    4c12:	4317      	orrs	r7, r2
    4c14:	0864      	lsrs	r4, r4, #1
    4c16:	4666      	mov	r6, ip
    4c18:	e708      	b.n	4a2c <__aeabi_dsub+0x10c>
    4c1a:	4812      	ldr	r0, [pc, #72]	; (4c64 <__aeabi_dsub+0x344>)
    4c1c:	4285      	cmp	r5, r0
    4c1e:	d100      	bne.n	4c22 <__aeabi_dsub+0x302>
    4c20:	e085      	b.n	4d2e <__aeabi_dsub+0x40e>
    4c22:	001d      	movs	r5, r3
    4c24:	e6bc      	b.n	49a0 <__aeabi_dsub+0x80>
    4c26:	0029      	movs	r1, r5
    4c28:	3e1f      	subs	r6, #31
    4c2a:	40f1      	lsrs	r1, r6
    4c2c:	2b20      	cmp	r3, #32
    4c2e:	d100      	bne.n	4c32 <__aeabi_dsub+0x312>
    4c30:	e07f      	b.n	4d32 <__aeabi_dsub+0x412>
    4c32:	2240      	movs	r2, #64	; 0x40
    4c34:	1ad3      	subs	r3, r2, r3
    4c36:	409d      	lsls	r5, r3
    4c38:	432f      	orrs	r7, r5
    4c3a:	1e7d      	subs	r5, r7, #1
    4c3c:	41af      	sbcs	r7, r5
    4c3e:	2400      	movs	r4, #0
    4c40:	430f      	orrs	r7, r1
    4c42:	2600      	movs	r6, #0
    4c44:	e78e      	b.n	4b64 <__aeabi_dsub+0x244>
    4c46:	002b      	movs	r3, r5
    4c48:	000f      	movs	r7, r1
    4c4a:	3b20      	subs	r3, #32
    4c4c:	40df      	lsrs	r7, r3
    4c4e:	2d20      	cmp	r5, #32
    4c50:	d071      	beq.n	4d36 <__aeabi_dsub+0x416>
    4c52:	2340      	movs	r3, #64	; 0x40
    4c54:	1b5d      	subs	r5, r3, r5
    4c56:	40a9      	lsls	r1, r5
    4c58:	430a      	orrs	r2, r1
    4c5a:	1e51      	subs	r1, r2, #1
    4c5c:	418a      	sbcs	r2, r1
    4c5e:	2100      	movs	r1, #0
    4c60:	4317      	orrs	r7, r2
    4c62:	e6af      	b.n	49c4 <__aeabi_dsub+0xa4>
    4c64:	000007ff 	.word	0x000007ff
    4c68:	ff7fffff 	.word	0xff7fffff
    4c6c:	800fffff 	.word	0x800fffff
    4c70:	2e00      	cmp	r6, #0
    4c72:	d03e      	beq.n	4cf2 <__aeabi_dsub+0x3d2>
    4c74:	4eb3      	ldr	r6, [pc, #716]	; (4f44 <__aeabi_dsub+0x624>)
    4c76:	45b4      	cmp	ip, r6
    4c78:	d045      	beq.n	4d06 <__aeabi_dsub+0x3e6>
    4c7a:	2680      	movs	r6, #128	; 0x80
    4c7c:	0436      	lsls	r6, r6, #16
    4c7e:	426d      	negs	r5, r5
    4c80:	4334      	orrs	r4, r6
    4c82:	2d38      	cmp	r5, #56	; 0x38
    4c84:	dd00      	ble.n	4c88 <__aeabi_dsub+0x368>
    4c86:	e0a8      	b.n	4dda <__aeabi_dsub+0x4ba>
    4c88:	2d1f      	cmp	r5, #31
    4c8a:	dd00      	ble.n	4c8e <__aeabi_dsub+0x36e>
    4c8c:	e11f      	b.n	4ece <__aeabi_dsub+0x5ae>
    4c8e:	2620      	movs	r6, #32
    4c90:	0027      	movs	r7, r4
    4c92:	4650      	mov	r0, sl
    4c94:	1b76      	subs	r6, r6, r5
    4c96:	40b7      	lsls	r7, r6
    4c98:	40e8      	lsrs	r0, r5
    4c9a:	4307      	orrs	r7, r0
    4c9c:	4650      	mov	r0, sl
    4c9e:	40b0      	lsls	r0, r6
    4ca0:	1e46      	subs	r6, r0, #1
    4ca2:	41b0      	sbcs	r0, r6
    4ca4:	40ec      	lsrs	r4, r5
    4ca6:	4338      	orrs	r0, r7
    4ca8:	1a17      	subs	r7, r2, r0
    4caa:	42ba      	cmp	r2, r7
    4cac:	4192      	sbcs	r2, r2
    4cae:	1b0c      	subs	r4, r1, r4
    4cb0:	4252      	negs	r2, r2
    4cb2:	1aa4      	subs	r4, r4, r2
    4cb4:	4666      	mov	r6, ip
    4cb6:	4698      	mov	r8, r3
    4cb8:	e68b      	b.n	49d2 <__aeabi_dsub+0xb2>
    4cba:	4664      	mov	r4, ip
    4cbc:	4667      	mov	r7, ip
    4cbe:	432c      	orrs	r4, r5
    4cc0:	d000      	beq.n	4cc4 <__aeabi_dsub+0x3a4>
    4cc2:	e68b      	b.n	49dc <__aeabi_dsub+0xbc>
    4cc4:	2500      	movs	r5, #0
    4cc6:	2600      	movs	r6, #0
    4cc8:	2700      	movs	r7, #0
    4cca:	e6ea      	b.n	4aa2 <__aeabi_dsub+0x182>
    4ccc:	001e      	movs	r6, r3
    4cce:	e6ad      	b.n	4a2c <__aeabi_dsub+0x10c>
    4cd0:	2b1f      	cmp	r3, #31
    4cd2:	dc60      	bgt.n	4d96 <__aeabi_dsub+0x476>
    4cd4:	2720      	movs	r7, #32
    4cd6:	1af8      	subs	r0, r7, r3
    4cd8:	000f      	movs	r7, r1
    4cda:	4684      	mov	ip, r0
    4cdc:	4087      	lsls	r7, r0
    4cde:	0010      	movs	r0, r2
    4ce0:	40d8      	lsrs	r0, r3
    4ce2:	4307      	orrs	r7, r0
    4ce4:	4660      	mov	r0, ip
    4ce6:	4082      	lsls	r2, r0
    4ce8:	1e50      	subs	r0, r2, #1
    4cea:	4182      	sbcs	r2, r0
    4cec:	40d9      	lsrs	r1, r3
    4cee:	4317      	orrs	r7, r2
    4cf0:	e6f5      	b.n	4ade <__aeabi_dsub+0x1be>
    4cf2:	0026      	movs	r6, r4
    4cf4:	4650      	mov	r0, sl
    4cf6:	4306      	orrs	r6, r0
    4cf8:	d005      	beq.n	4d06 <__aeabi_dsub+0x3e6>
    4cfa:	43ed      	mvns	r5, r5
    4cfc:	2d00      	cmp	r5, #0
    4cfe:	d0d3      	beq.n	4ca8 <__aeabi_dsub+0x388>
    4d00:	4e90      	ldr	r6, [pc, #576]	; (4f44 <__aeabi_dsub+0x624>)
    4d02:	45b4      	cmp	ip, r6
    4d04:	d1bd      	bne.n	4c82 <__aeabi_dsub+0x362>
    4d06:	000c      	movs	r4, r1
    4d08:	0017      	movs	r7, r2
    4d0a:	4666      	mov	r6, ip
    4d0c:	4698      	mov	r8, r3
    4d0e:	e68d      	b.n	4a2c <__aeabi_dsub+0x10c>
    4d10:	488c      	ldr	r0, [pc, #560]	; (4f44 <__aeabi_dsub+0x624>)
    4d12:	4283      	cmp	r3, r0
    4d14:	d00b      	beq.n	4d2e <__aeabi_dsub+0x40e>
    4d16:	4663      	mov	r3, ip
    4d18:	e6d9      	b.n	4ace <__aeabi_dsub+0x1ae>
    4d1a:	2d00      	cmp	r5, #0
    4d1c:	d000      	beq.n	4d20 <__aeabi_dsub+0x400>
    4d1e:	e096      	b.n	4e4e <__aeabi_dsub+0x52e>
    4d20:	0008      	movs	r0, r1
    4d22:	4310      	orrs	r0, r2
    4d24:	d100      	bne.n	4d28 <__aeabi_dsub+0x408>
    4d26:	e0e2      	b.n	4eee <__aeabi_dsub+0x5ce>
    4d28:	000c      	movs	r4, r1
    4d2a:	0017      	movs	r7, r2
    4d2c:	4698      	mov	r8, r3
    4d2e:	4e85      	ldr	r6, [pc, #532]	; (4f44 <__aeabi_dsub+0x624>)
    4d30:	e67c      	b.n	4a2c <__aeabi_dsub+0x10c>
    4d32:	2500      	movs	r5, #0
    4d34:	e780      	b.n	4c38 <__aeabi_dsub+0x318>
    4d36:	2100      	movs	r1, #0
    4d38:	e78e      	b.n	4c58 <__aeabi_dsub+0x338>
    4d3a:	0023      	movs	r3, r4
    4d3c:	4650      	mov	r0, sl
    4d3e:	4303      	orrs	r3, r0
    4d40:	2e00      	cmp	r6, #0
    4d42:	d000      	beq.n	4d46 <__aeabi_dsub+0x426>
    4d44:	e0a8      	b.n	4e98 <__aeabi_dsub+0x578>
    4d46:	2b00      	cmp	r3, #0
    4d48:	d100      	bne.n	4d4c <__aeabi_dsub+0x42c>
    4d4a:	e0de      	b.n	4f0a <__aeabi_dsub+0x5ea>
    4d4c:	000b      	movs	r3, r1
    4d4e:	4313      	orrs	r3, r2
    4d50:	d100      	bne.n	4d54 <__aeabi_dsub+0x434>
    4d52:	e66b      	b.n	4a2c <__aeabi_dsub+0x10c>
    4d54:	4452      	add	r2, sl
    4d56:	4552      	cmp	r2, sl
    4d58:	4180      	sbcs	r0, r0
    4d5a:	1864      	adds	r4, r4, r1
    4d5c:	4240      	negs	r0, r0
    4d5e:	1824      	adds	r4, r4, r0
    4d60:	0017      	movs	r7, r2
    4d62:	0223      	lsls	r3, r4, #8
    4d64:	d400      	bmi.n	4d68 <__aeabi_dsub+0x448>
    4d66:	e6fd      	b.n	4b64 <__aeabi_dsub+0x244>
    4d68:	4b77      	ldr	r3, [pc, #476]	; (4f48 <__aeabi_dsub+0x628>)
    4d6a:	4666      	mov	r6, ip
    4d6c:	401c      	ands	r4, r3
    4d6e:	e65d      	b.n	4a2c <__aeabi_dsub+0x10c>
    4d70:	0025      	movs	r5, r4
    4d72:	4650      	mov	r0, sl
    4d74:	4305      	orrs	r5, r0
    4d76:	2e00      	cmp	r6, #0
    4d78:	d1cf      	bne.n	4d1a <__aeabi_dsub+0x3fa>
    4d7a:	2d00      	cmp	r5, #0
    4d7c:	d14f      	bne.n	4e1e <__aeabi_dsub+0x4fe>
    4d7e:	000c      	movs	r4, r1
    4d80:	4314      	orrs	r4, r2
    4d82:	d100      	bne.n	4d86 <__aeabi_dsub+0x466>
    4d84:	e0a0      	b.n	4ec8 <__aeabi_dsub+0x5a8>
    4d86:	000c      	movs	r4, r1
    4d88:	0017      	movs	r7, r2
    4d8a:	4698      	mov	r8, r3
    4d8c:	e64e      	b.n	4a2c <__aeabi_dsub+0x10c>
    4d8e:	4666      	mov	r6, ip
    4d90:	2400      	movs	r4, #0
    4d92:	2700      	movs	r7, #0
    4d94:	e685      	b.n	4aa2 <__aeabi_dsub+0x182>
    4d96:	001f      	movs	r7, r3
    4d98:	0008      	movs	r0, r1
    4d9a:	3f20      	subs	r7, #32
    4d9c:	40f8      	lsrs	r0, r7
    4d9e:	0007      	movs	r7, r0
    4da0:	2b20      	cmp	r3, #32
    4da2:	d100      	bne.n	4da6 <__aeabi_dsub+0x486>
    4da4:	e08e      	b.n	4ec4 <__aeabi_dsub+0x5a4>
    4da6:	2040      	movs	r0, #64	; 0x40
    4da8:	1ac3      	subs	r3, r0, r3
    4daa:	4099      	lsls	r1, r3
    4dac:	430a      	orrs	r2, r1
    4dae:	1e51      	subs	r1, r2, #1
    4db0:	418a      	sbcs	r2, r1
    4db2:	2100      	movs	r1, #0
    4db4:	4317      	orrs	r7, r2
    4db6:	e692      	b.n	4ade <__aeabi_dsub+0x1be>
    4db8:	2e00      	cmp	r6, #0
    4dba:	d114      	bne.n	4de6 <__aeabi_dsub+0x4c6>
    4dbc:	0026      	movs	r6, r4
    4dbe:	4650      	mov	r0, sl
    4dc0:	4306      	orrs	r6, r0
    4dc2:	d062      	beq.n	4e8a <__aeabi_dsub+0x56a>
    4dc4:	43db      	mvns	r3, r3
    4dc6:	2b00      	cmp	r3, #0
    4dc8:	d15c      	bne.n	4e84 <__aeabi_dsub+0x564>
    4dca:	1887      	adds	r7, r0, r2
    4dcc:	4297      	cmp	r7, r2
    4dce:	4192      	sbcs	r2, r2
    4dd0:	1864      	adds	r4, r4, r1
    4dd2:	4252      	negs	r2, r2
    4dd4:	18a4      	adds	r4, r4, r2
    4dd6:	4666      	mov	r6, ip
    4dd8:	e687      	b.n	4aea <__aeabi_dsub+0x1ca>
    4dda:	4650      	mov	r0, sl
    4ddc:	4320      	orrs	r0, r4
    4dde:	1e44      	subs	r4, r0, #1
    4de0:	41a0      	sbcs	r0, r4
    4de2:	2400      	movs	r4, #0
    4de4:	e760      	b.n	4ca8 <__aeabi_dsub+0x388>
    4de6:	4e57      	ldr	r6, [pc, #348]	; (4f44 <__aeabi_dsub+0x624>)
    4de8:	45b4      	cmp	ip, r6
    4dea:	d04e      	beq.n	4e8a <__aeabi_dsub+0x56a>
    4dec:	2680      	movs	r6, #128	; 0x80
    4dee:	0436      	lsls	r6, r6, #16
    4df0:	425b      	negs	r3, r3
    4df2:	4334      	orrs	r4, r6
    4df4:	2b38      	cmp	r3, #56	; 0x38
    4df6:	dd00      	ble.n	4dfa <__aeabi_dsub+0x4da>
    4df8:	e07f      	b.n	4efa <__aeabi_dsub+0x5da>
    4dfa:	2b1f      	cmp	r3, #31
    4dfc:	dd00      	ble.n	4e00 <__aeabi_dsub+0x4e0>
    4dfe:	e08b      	b.n	4f18 <__aeabi_dsub+0x5f8>
    4e00:	2620      	movs	r6, #32
    4e02:	0027      	movs	r7, r4
    4e04:	4650      	mov	r0, sl
    4e06:	1af6      	subs	r6, r6, r3
    4e08:	40b7      	lsls	r7, r6
    4e0a:	40d8      	lsrs	r0, r3
    4e0c:	4307      	orrs	r7, r0
    4e0e:	4650      	mov	r0, sl
    4e10:	40b0      	lsls	r0, r6
    4e12:	1e46      	subs	r6, r0, #1
    4e14:	41b0      	sbcs	r0, r6
    4e16:	4307      	orrs	r7, r0
    4e18:	40dc      	lsrs	r4, r3
    4e1a:	18bf      	adds	r7, r7, r2
    4e1c:	e7d6      	b.n	4dcc <__aeabi_dsub+0x4ac>
    4e1e:	000d      	movs	r5, r1
    4e20:	4315      	orrs	r5, r2
    4e22:	d100      	bne.n	4e26 <__aeabi_dsub+0x506>
    4e24:	e602      	b.n	4a2c <__aeabi_dsub+0x10c>
    4e26:	4650      	mov	r0, sl
    4e28:	1a80      	subs	r0, r0, r2
    4e2a:	4582      	cmp	sl, r0
    4e2c:	41bf      	sbcs	r7, r7
    4e2e:	1a65      	subs	r5, r4, r1
    4e30:	427f      	negs	r7, r7
    4e32:	1bed      	subs	r5, r5, r7
    4e34:	4684      	mov	ip, r0
    4e36:	0228      	lsls	r0, r5, #8
    4e38:	d400      	bmi.n	4e3c <__aeabi_dsub+0x51c>
    4e3a:	e68d      	b.n	4b58 <__aeabi_dsub+0x238>
    4e3c:	4650      	mov	r0, sl
    4e3e:	1a17      	subs	r7, r2, r0
    4e40:	42ba      	cmp	r2, r7
    4e42:	4192      	sbcs	r2, r2
    4e44:	1b0c      	subs	r4, r1, r4
    4e46:	4252      	negs	r2, r2
    4e48:	1aa4      	subs	r4, r4, r2
    4e4a:	4698      	mov	r8, r3
    4e4c:	e5ee      	b.n	4a2c <__aeabi_dsub+0x10c>
    4e4e:	000d      	movs	r5, r1
    4e50:	4315      	orrs	r5, r2
    4e52:	d100      	bne.n	4e56 <__aeabi_dsub+0x536>
    4e54:	e76b      	b.n	4d2e <__aeabi_dsub+0x40e>
    4e56:	4650      	mov	r0, sl
    4e58:	0767      	lsls	r7, r4, #29
    4e5a:	08c0      	lsrs	r0, r0, #3
    4e5c:	4307      	orrs	r7, r0
    4e5e:	2080      	movs	r0, #128	; 0x80
    4e60:	08e4      	lsrs	r4, r4, #3
    4e62:	0300      	lsls	r0, r0, #12
    4e64:	4204      	tst	r4, r0
    4e66:	d007      	beq.n	4e78 <__aeabi_dsub+0x558>
    4e68:	08cd      	lsrs	r5, r1, #3
    4e6a:	4205      	tst	r5, r0
    4e6c:	d104      	bne.n	4e78 <__aeabi_dsub+0x558>
    4e6e:	002c      	movs	r4, r5
    4e70:	4698      	mov	r8, r3
    4e72:	08d7      	lsrs	r7, r2, #3
    4e74:	0749      	lsls	r1, r1, #29
    4e76:	430f      	orrs	r7, r1
    4e78:	0f7b      	lsrs	r3, r7, #29
    4e7a:	00e4      	lsls	r4, r4, #3
    4e7c:	431c      	orrs	r4, r3
    4e7e:	00ff      	lsls	r7, r7, #3
    4e80:	4e30      	ldr	r6, [pc, #192]	; (4f44 <__aeabi_dsub+0x624>)
    4e82:	e5d3      	b.n	4a2c <__aeabi_dsub+0x10c>
    4e84:	4e2f      	ldr	r6, [pc, #188]	; (4f44 <__aeabi_dsub+0x624>)
    4e86:	45b4      	cmp	ip, r6
    4e88:	d1b4      	bne.n	4df4 <__aeabi_dsub+0x4d4>
    4e8a:	000c      	movs	r4, r1
    4e8c:	0017      	movs	r7, r2
    4e8e:	4666      	mov	r6, ip
    4e90:	e5cc      	b.n	4a2c <__aeabi_dsub+0x10c>
    4e92:	2700      	movs	r7, #0
    4e94:	2400      	movs	r4, #0
    4e96:	e5e8      	b.n	4a6a <__aeabi_dsub+0x14a>
    4e98:	2b00      	cmp	r3, #0
    4e9a:	d039      	beq.n	4f10 <__aeabi_dsub+0x5f0>
    4e9c:	000b      	movs	r3, r1
    4e9e:	4313      	orrs	r3, r2
    4ea0:	d100      	bne.n	4ea4 <__aeabi_dsub+0x584>
    4ea2:	e744      	b.n	4d2e <__aeabi_dsub+0x40e>
    4ea4:	08c0      	lsrs	r0, r0, #3
    4ea6:	0767      	lsls	r7, r4, #29
    4ea8:	4307      	orrs	r7, r0
    4eaa:	2080      	movs	r0, #128	; 0x80
    4eac:	08e4      	lsrs	r4, r4, #3
    4eae:	0300      	lsls	r0, r0, #12
    4eb0:	4204      	tst	r4, r0
    4eb2:	d0e1      	beq.n	4e78 <__aeabi_dsub+0x558>
    4eb4:	08cb      	lsrs	r3, r1, #3
    4eb6:	4203      	tst	r3, r0
    4eb8:	d1de      	bne.n	4e78 <__aeabi_dsub+0x558>
    4eba:	08d7      	lsrs	r7, r2, #3
    4ebc:	0749      	lsls	r1, r1, #29
    4ebe:	430f      	orrs	r7, r1
    4ec0:	001c      	movs	r4, r3
    4ec2:	e7d9      	b.n	4e78 <__aeabi_dsub+0x558>
    4ec4:	2100      	movs	r1, #0
    4ec6:	e771      	b.n	4dac <__aeabi_dsub+0x48c>
    4ec8:	2500      	movs	r5, #0
    4eca:	2700      	movs	r7, #0
    4ecc:	e5e9      	b.n	4aa2 <__aeabi_dsub+0x182>
    4ece:	002e      	movs	r6, r5
    4ed0:	0027      	movs	r7, r4
    4ed2:	3e20      	subs	r6, #32
    4ed4:	40f7      	lsrs	r7, r6
    4ed6:	2d20      	cmp	r5, #32
    4ed8:	d02f      	beq.n	4f3a <__aeabi_dsub+0x61a>
    4eda:	2640      	movs	r6, #64	; 0x40
    4edc:	1b75      	subs	r5, r6, r5
    4ede:	40ac      	lsls	r4, r5
    4ee0:	4650      	mov	r0, sl
    4ee2:	4320      	orrs	r0, r4
    4ee4:	1e44      	subs	r4, r0, #1
    4ee6:	41a0      	sbcs	r0, r4
    4ee8:	2400      	movs	r4, #0
    4eea:	4338      	orrs	r0, r7
    4eec:	e6dc      	b.n	4ca8 <__aeabi_dsub+0x388>
    4eee:	2480      	movs	r4, #128	; 0x80
    4ef0:	2500      	movs	r5, #0
    4ef2:	0324      	lsls	r4, r4, #12
    4ef4:	4e13      	ldr	r6, [pc, #76]	; (4f44 <__aeabi_dsub+0x624>)
    4ef6:	2700      	movs	r7, #0
    4ef8:	e5d3      	b.n	4aa2 <__aeabi_dsub+0x182>
    4efa:	4650      	mov	r0, sl
    4efc:	4320      	orrs	r0, r4
    4efe:	0007      	movs	r7, r0
    4f00:	1e78      	subs	r0, r7, #1
    4f02:	4187      	sbcs	r7, r0
    4f04:	2400      	movs	r4, #0
    4f06:	18bf      	adds	r7, r7, r2
    4f08:	e760      	b.n	4dcc <__aeabi_dsub+0x4ac>
    4f0a:	000c      	movs	r4, r1
    4f0c:	0017      	movs	r7, r2
    4f0e:	e58d      	b.n	4a2c <__aeabi_dsub+0x10c>
    4f10:	000c      	movs	r4, r1
    4f12:	0017      	movs	r7, r2
    4f14:	4e0b      	ldr	r6, [pc, #44]	; (4f44 <__aeabi_dsub+0x624>)
    4f16:	e589      	b.n	4a2c <__aeabi_dsub+0x10c>
    4f18:	001e      	movs	r6, r3
    4f1a:	0027      	movs	r7, r4
    4f1c:	3e20      	subs	r6, #32
    4f1e:	40f7      	lsrs	r7, r6
    4f20:	2b20      	cmp	r3, #32
    4f22:	d00c      	beq.n	4f3e <__aeabi_dsub+0x61e>
    4f24:	2640      	movs	r6, #64	; 0x40
    4f26:	1af3      	subs	r3, r6, r3
    4f28:	409c      	lsls	r4, r3
    4f2a:	4650      	mov	r0, sl
    4f2c:	4320      	orrs	r0, r4
    4f2e:	1e44      	subs	r4, r0, #1
    4f30:	41a0      	sbcs	r0, r4
    4f32:	4307      	orrs	r7, r0
    4f34:	2400      	movs	r4, #0
    4f36:	18bf      	adds	r7, r7, r2
    4f38:	e748      	b.n	4dcc <__aeabi_dsub+0x4ac>
    4f3a:	2400      	movs	r4, #0
    4f3c:	e7d0      	b.n	4ee0 <__aeabi_dsub+0x5c0>
    4f3e:	2400      	movs	r4, #0
    4f40:	e7f3      	b.n	4f2a <__aeabi_dsub+0x60a>
    4f42:	46c0      	nop			; (mov r8, r8)
    4f44:	000007ff 	.word	0x000007ff
    4f48:	ff7fffff 	.word	0xff7fffff

00004f4c <__aeabi_d2iz>:
    4f4c:	b530      	push	{r4, r5, lr}
    4f4e:	4d13      	ldr	r5, [pc, #76]	; (4f9c <__aeabi_d2iz+0x50>)
    4f50:	030a      	lsls	r2, r1, #12
    4f52:	004b      	lsls	r3, r1, #1
    4f54:	0b12      	lsrs	r2, r2, #12
    4f56:	0d5b      	lsrs	r3, r3, #21
    4f58:	0fc9      	lsrs	r1, r1, #31
    4f5a:	2400      	movs	r4, #0
    4f5c:	42ab      	cmp	r3, r5
    4f5e:	dd10      	ble.n	4f82 <__aeabi_d2iz+0x36>
    4f60:	4c0f      	ldr	r4, [pc, #60]	; (4fa0 <__aeabi_d2iz+0x54>)
    4f62:	42a3      	cmp	r3, r4
    4f64:	dc0f      	bgt.n	4f86 <__aeabi_d2iz+0x3a>
    4f66:	2480      	movs	r4, #128	; 0x80
    4f68:	4d0e      	ldr	r5, [pc, #56]	; (4fa4 <__aeabi_d2iz+0x58>)
    4f6a:	0364      	lsls	r4, r4, #13
    4f6c:	4322      	orrs	r2, r4
    4f6e:	1aed      	subs	r5, r5, r3
    4f70:	2d1f      	cmp	r5, #31
    4f72:	dd0b      	ble.n	4f8c <__aeabi_d2iz+0x40>
    4f74:	480c      	ldr	r0, [pc, #48]	; (4fa8 <__aeabi_d2iz+0x5c>)
    4f76:	1ac3      	subs	r3, r0, r3
    4f78:	40da      	lsrs	r2, r3
    4f7a:	4254      	negs	r4, r2
    4f7c:	2900      	cmp	r1, #0
    4f7e:	d100      	bne.n	4f82 <__aeabi_d2iz+0x36>
    4f80:	0014      	movs	r4, r2
    4f82:	0020      	movs	r0, r4
    4f84:	bd30      	pop	{r4, r5, pc}
    4f86:	4b09      	ldr	r3, [pc, #36]	; (4fac <__aeabi_d2iz+0x60>)
    4f88:	18cc      	adds	r4, r1, r3
    4f8a:	e7fa      	b.n	4f82 <__aeabi_d2iz+0x36>
    4f8c:	4c08      	ldr	r4, [pc, #32]	; (4fb0 <__aeabi_d2iz+0x64>)
    4f8e:	40e8      	lsrs	r0, r5
    4f90:	46a4      	mov	ip, r4
    4f92:	4463      	add	r3, ip
    4f94:	409a      	lsls	r2, r3
    4f96:	4302      	orrs	r2, r0
    4f98:	e7ef      	b.n	4f7a <__aeabi_d2iz+0x2e>
    4f9a:	46c0      	nop			; (mov r8, r8)
    4f9c:	000003fe 	.word	0x000003fe
    4fa0:	0000041d 	.word	0x0000041d
    4fa4:	00000433 	.word	0x00000433
    4fa8:	00000413 	.word	0x00000413
    4fac:	7fffffff 	.word	0x7fffffff
    4fb0:	fffffbed 	.word	0xfffffbed

00004fb4 <__aeabi_i2d>:
    4fb4:	b570      	push	{r4, r5, r6, lr}
    4fb6:	2800      	cmp	r0, #0
    4fb8:	d030      	beq.n	501c <__aeabi_i2d+0x68>
    4fba:	17c3      	asrs	r3, r0, #31
    4fbc:	18c4      	adds	r4, r0, r3
    4fbe:	405c      	eors	r4, r3
    4fc0:	0fc5      	lsrs	r5, r0, #31
    4fc2:	0020      	movs	r0, r4
    4fc4:	f000 f900 	bl	51c8 <__clzsi2>
    4fc8:	4b17      	ldr	r3, [pc, #92]	; (5028 <__aeabi_i2d+0x74>)
    4fca:	4a18      	ldr	r2, [pc, #96]	; (502c <__aeabi_i2d+0x78>)
    4fcc:	1a1b      	subs	r3, r3, r0
    4fce:	1ad2      	subs	r2, r2, r3
    4fd0:	2a1f      	cmp	r2, #31
    4fd2:	dd18      	ble.n	5006 <__aeabi_i2d+0x52>
    4fd4:	4a16      	ldr	r2, [pc, #88]	; (5030 <__aeabi_i2d+0x7c>)
    4fd6:	1ad2      	subs	r2, r2, r3
    4fd8:	4094      	lsls	r4, r2
    4fda:	2200      	movs	r2, #0
    4fdc:	0324      	lsls	r4, r4, #12
    4fde:	055b      	lsls	r3, r3, #21
    4fe0:	0b24      	lsrs	r4, r4, #12
    4fe2:	0d5b      	lsrs	r3, r3, #21
    4fe4:	2100      	movs	r1, #0
    4fe6:	0010      	movs	r0, r2
    4fe8:	0324      	lsls	r4, r4, #12
    4fea:	0d0a      	lsrs	r2, r1, #20
    4fec:	0b24      	lsrs	r4, r4, #12
    4fee:	0512      	lsls	r2, r2, #20
    4ff0:	4322      	orrs	r2, r4
    4ff2:	4c10      	ldr	r4, [pc, #64]	; (5034 <__aeabi_i2d+0x80>)
    4ff4:	051b      	lsls	r3, r3, #20
    4ff6:	4022      	ands	r2, r4
    4ff8:	4313      	orrs	r3, r2
    4ffa:	005b      	lsls	r3, r3, #1
    4ffc:	07ed      	lsls	r5, r5, #31
    4ffe:	085b      	lsrs	r3, r3, #1
    5000:	432b      	orrs	r3, r5
    5002:	0019      	movs	r1, r3
    5004:	bd70      	pop	{r4, r5, r6, pc}
    5006:	0021      	movs	r1, r4
    5008:	4091      	lsls	r1, r2
    500a:	000a      	movs	r2, r1
    500c:	210b      	movs	r1, #11
    500e:	1a08      	subs	r0, r1, r0
    5010:	40c4      	lsrs	r4, r0
    5012:	055b      	lsls	r3, r3, #21
    5014:	0324      	lsls	r4, r4, #12
    5016:	0b24      	lsrs	r4, r4, #12
    5018:	0d5b      	lsrs	r3, r3, #21
    501a:	e7e3      	b.n	4fe4 <__aeabi_i2d+0x30>
    501c:	2500      	movs	r5, #0
    501e:	2300      	movs	r3, #0
    5020:	2400      	movs	r4, #0
    5022:	2200      	movs	r2, #0
    5024:	e7de      	b.n	4fe4 <__aeabi_i2d+0x30>
    5026:	46c0      	nop			; (mov r8, r8)
    5028:	0000041e 	.word	0x0000041e
    502c:	00000433 	.word	0x00000433
    5030:	00000413 	.word	0x00000413
    5034:	800fffff 	.word	0x800fffff

00005038 <__aeabi_ui2d>:
    5038:	b510      	push	{r4, lr}
    503a:	1e04      	subs	r4, r0, #0
    503c:	d028      	beq.n	5090 <__aeabi_ui2d+0x58>
    503e:	f000 f8c3 	bl	51c8 <__clzsi2>
    5042:	4b15      	ldr	r3, [pc, #84]	; (5098 <__aeabi_ui2d+0x60>)
    5044:	4a15      	ldr	r2, [pc, #84]	; (509c <__aeabi_ui2d+0x64>)
    5046:	1a1b      	subs	r3, r3, r0
    5048:	1ad2      	subs	r2, r2, r3
    504a:	2a1f      	cmp	r2, #31
    504c:	dd15      	ble.n	507a <__aeabi_ui2d+0x42>
    504e:	4a14      	ldr	r2, [pc, #80]	; (50a0 <__aeabi_ui2d+0x68>)
    5050:	1ad2      	subs	r2, r2, r3
    5052:	4094      	lsls	r4, r2
    5054:	2200      	movs	r2, #0
    5056:	0324      	lsls	r4, r4, #12
    5058:	055b      	lsls	r3, r3, #21
    505a:	0b24      	lsrs	r4, r4, #12
    505c:	0d5b      	lsrs	r3, r3, #21
    505e:	2100      	movs	r1, #0
    5060:	0010      	movs	r0, r2
    5062:	0324      	lsls	r4, r4, #12
    5064:	0d0a      	lsrs	r2, r1, #20
    5066:	0b24      	lsrs	r4, r4, #12
    5068:	0512      	lsls	r2, r2, #20
    506a:	4322      	orrs	r2, r4
    506c:	4c0d      	ldr	r4, [pc, #52]	; (50a4 <__aeabi_ui2d+0x6c>)
    506e:	051b      	lsls	r3, r3, #20
    5070:	4022      	ands	r2, r4
    5072:	4313      	orrs	r3, r2
    5074:	005b      	lsls	r3, r3, #1
    5076:	0859      	lsrs	r1, r3, #1
    5078:	bd10      	pop	{r4, pc}
    507a:	0021      	movs	r1, r4
    507c:	4091      	lsls	r1, r2
    507e:	000a      	movs	r2, r1
    5080:	210b      	movs	r1, #11
    5082:	1a08      	subs	r0, r1, r0
    5084:	40c4      	lsrs	r4, r0
    5086:	055b      	lsls	r3, r3, #21
    5088:	0324      	lsls	r4, r4, #12
    508a:	0b24      	lsrs	r4, r4, #12
    508c:	0d5b      	lsrs	r3, r3, #21
    508e:	e7e6      	b.n	505e <__aeabi_ui2d+0x26>
    5090:	2300      	movs	r3, #0
    5092:	2400      	movs	r4, #0
    5094:	2200      	movs	r2, #0
    5096:	e7e2      	b.n	505e <__aeabi_ui2d+0x26>
    5098:	0000041e 	.word	0x0000041e
    509c:	00000433 	.word	0x00000433
    50a0:	00000413 	.word	0x00000413
    50a4:	800fffff 	.word	0x800fffff

000050a8 <__aeabi_f2d>:
    50a8:	0041      	lsls	r1, r0, #1
    50aa:	0e09      	lsrs	r1, r1, #24
    50ac:	1c4b      	adds	r3, r1, #1
    50ae:	b570      	push	{r4, r5, r6, lr}
    50b0:	b2db      	uxtb	r3, r3
    50b2:	0246      	lsls	r6, r0, #9
    50b4:	0a75      	lsrs	r5, r6, #9
    50b6:	0fc4      	lsrs	r4, r0, #31
    50b8:	2b01      	cmp	r3, #1
    50ba:	dd14      	ble.n	50e6 <__aeabi_f2d+0x3e>
    50bc:	23e0      	movs	r3, #224	; 0xe0
    50be:	009b      	lsls	r3, r3, #2
    50c0:	076d      	lsls	r5, r5, #29
    50c2:	0b36      	lsrs	r6, r6, #12
    50c4:	18cb      	adds	r3, r1, r3
    50c6:	2100      	movs	r1, #0
    50c8:	0d0a      	lsrs	r2, r1, #20
    50ca:	0028      	movs	r0, r5
    50cc:	0512      	lsls	r2, r2, #20
    50ce:	4d1c      	ldr	r5, [pc, #112]	; (5140 <__aeabi_f2d+0x98>)
    50d0:	4332      	orrs	r2, r6
    50d2:	055b      	lsls	r3, r3, #21
    50d4:	402a      	ands	r2, r5
    50d6:	085b      	lsrs	r3, r3, #1
    50d8:	4313      	orrs	r3, r2
    50da:	005b      	lsls	r3, r3, #1
    50dc:	07e4      	lsls	r4, r4, #31
    50de:	085b      	lsrs	r3, r3, #1
    50e0:	4323      	orrs	r3, r4
    50e2:	0019      	movs	r1, r3
    50e4:	bd70      	pop	{r4, r5, r6, pc}
    50e6:	2900      	cmp	r1, #0
    50e8:	d114      	bne.n	5114 <__aeabi_f2d+0x6c>
    50ea:	2d00      	cmp	r5, #0
    50ec:	d01e      	beq.n	512c <__aeabi_f2d+0x84>
    50ee:	0028      	movs	r0, r5
    50f0:	f000 f86a 	bl	51c8 <__clzsi2>
    50f4:	280a      	cmp	r0, #10
    50f6:	dc1c      	bgt.n	5132 <__aeabi_f2d+0x8a>
    50f8:	230b      	movs	r3, #11
    50fa:	002a      	movs	r2, r5
    50fc:	1a1b      	subs	r3, r3, r0
    50fe:	40da      	lsrs	r2, r3
    5100:	0003      	movs	r3, r0
    5102:	3315      	adds	r3, #21
    5104:	409d      	lsls	r5, r3
    5106:	4b0f      	ldr	r3, [pc, #60]	; (5144 <__aeabi_f2d+0x9c>)
    5108:	0312      	lsls	r2, r2, #12
    510a:	1a1b      	subs	r3, r3, r0
    510c:	055b      	lsls	r3, r3, #21
    510e:	0b16      	lsrs	r6, r2, #12
    5110:	0d5b      	lsrs	r3, r3, #21
    5112:	e7d8      	b.n	50c6 <__aeabi_f2d+0x1e>
    5114:	2d00      	cmp	r5, #0
    5116:	d006      	beq.n	5126 <__aeabi_f2d+0x7e>
    5118:	0b32      	lsrs	r2, r6, #12
    511a:	2680      	movs	r6, #128	; 0x80
    511c:	0336      	lsls	r6, r6, #12
    511e:	076d      	lsls	r5, r5, #29
    5120:	4316      	orrs	r6, r2
    5122:	4b09      	ldr	r3, [pc, #36]	; (5148 <__aeabi_f2d+0xa0>)
    5124:	e7cf      	b.n	50c6 <__aeabi_f2d+0x1e>
    5126:	4b08      	ldr	r3, [pc, #32]	; (5148 <__aeabi_f2d+0xa0>)
    5128:	2600      	movs	r6, #0
    512a:	e7cc      	b.n	50c6 <__aeabi_f2d+0x1e>
    512c:	2300      	movs	r3, #0
    512e:	2600      	movs	r6, #0
    5130:	e7c9      	b.n	50c6 <__aeabi_f2d+0x1e>
    5132:	0003      	movs	r3, r0
    5134:	002a      	movs	r2, r5
    5136:	3b0b      	subs	r3, #11
    5138:	409a      	lsls	r2, r3
    513a:	2500      	movs	r5, #0
    513c:	e7e3      	b.n	5106 <__aeabi_f2d+0x5e>
    513e:	46c0      	nop			; (mov r8, r8)
    5140:	800fffff 	.word	0x800fffff
    5144:	00000389 	.word	0x00000389
    5148:	000007ff 	.word	0x000007ff

0000514c <__aeabi_cdrcmple>:
    514c:	4684      	mov	ip, r0
    514e:	1c10      	adds	r0, r2, #0
    5150:	4662      	mov	r2, ip
    5152:	468c      	mov	ip, r1
    5154:	1c19      	adds	r1, r3, #0
    5156:	4663      	mov	r3, ip
    5158:	e000      	b.n	515c <__aeabi_cdcmpeq>
    515a:	46c0      	nop			; (mov r8, r8)

0000515c <__aeabi_cdcmpeq>:
    515c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    515e:	f000 f91b 	bl	5398 <__ledf2>
    5162:	2800      	cmp	r0, #0
    5164:	d401      	bmi.n	516a <__aeabi_cdcmpeq+0xe>
    5166:	2100      	movs	r1, #0
    5168:	42c8      	cmn	r0, r1
    516a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0000516c <__aeabi_dcmpeq>:
    516c:	b510      	push	{r4, lr}
    516e:	f000 f875 	bl	525c <__eqdf2>
    5172:	4240      	negs	r0, r0
    5174:	3001      	adds	r0, #1
    5176:	bd10      	pop	{r4, pc}

00005178 <__aeabi_dcmplt>:
    5178:	b510      	push	{r4, lr}
    517a:	f000 f90d 	bl	5398 <__ledf2>
    517e:	2800      	cmp	r0, #0
    5180:	db01      	blt.n	5186 <__aeabi_dcmplt+0xe>
    5182:	2000      	movs	r0, #0
    5184:	bd10      	pop	{r4, pc}
    5186:	2001      	movs	r0, #1
    5188:	bd10      	pop	{r4, pc}
    518a:	46c0      	nop			; (mov r8, r8)

0000518c <__aeabi_dcmple>:
    518c:	b510      	push	{r4, lr}
    518e:	f000 f903 	bl	5398 <__ledf2>
    5192:	2800      	cmp	r0, #0
    5194:	dd01      	ble.n	519a <__aeabi_dcmple+0xe>
    5196:	2000      	movs	r0, #0
    5198:	bd10      	pop	{r4, pc}
    519a:	2001      	movs	r0, #1
    519c:	bd10      	pop	{r4, pc}
    519e:	46c0      	nop			; (mov r8, r8)

000051a0 <__aeabi_dcmpgt>:
    51a0:	b510      	push	{r4, lr}
    51a2:	f000 f895 	bl	52d0 <__gedf2>
    51a6:	2800      	cmp	r0, #0
    51a8:	dc01      	bgt.n	51ae <__aeabi_dcmpgt+0xe>
    51aa:	2000      	movs	r0, #0
    51ac:	bd10      	pop	{r4, pc}
    51ae:	2001      	movs	r0, #1
    51b0:	bd10      	pop	{r4, pc}
    51b2:	46c0      	nop			; (mov r8, r8)

000051b4 <__aeabi_dcmpge>:
    51b4:	b510      	push	{r4, lr}
    51b6:	f000 f88b 	bl	52d0 <__gedf2>
    51ba:	2800      	cmp	r0, #0
    51bc:	da01      	bge.n	51c2 <__aeabi_dcmpge+0xe>
    51be:	2000      	movs	r0, #0
    51c0:	bd10      	pop	{r4, pc}
    51c2:	2001      	movs	r0, #1
    51c4:	bd10      	pop	{r4, pc}
    51c6:	46c0      	nop			; (mov r8, r8)

000051c8 <__clzsi2>:
    51c8:	211c      	movs	r1, #28
    51ca:	2301      	movs	r3, #1
    51cc:	041b      	lsls	r3, r3, #16
    51ce:	4298      	cmp	r0, r3
    51d0:	d301      	bcc.n	51d6 <__clzsi2+0xe>
    51d2:	0c00      	lsrs	r0, r0, #16
    51d4:	3910      	subs	r1, #16
    51d6:	0a1b      	lsrs	r3, r3, #8
    51d8:	4298      	cmp	r0, r3
    51da:	d301      	bcc.n	51e0 <__clzsi2+0x18>
    51dc:	0a00      	lsrs	r0, r0, #8
    51de:	3908      	subs	r1, #8
    51e0:	091b      	lsrs	r3, r3, #4
    51e2:	4298      	cmp	r0, r3
    51e4:	d301      	bcc.n	51ea <__clzsi2+0x22>
    51e6:	0900      	lsrs	r0, r0, #4
    51e8:	3904      	subs	r1, #4
    51ea:	a202      	add	r2, pc, #8	; (adr r2, 51f4 <__clzsi2+0x2c>)
    51ec:	5c10      	ldrb	r0, [r2, r0]
    51ee:	1840      	adds	r0, r0, r1
    51f0:	4770      	bx	lr
    51f2:	46c0      	nop			; (mov r8, r8)
    51f4:	02020304 	.word	0x02020304
    51f8:	01010101 	.word	0x01010101
	...

00005204 <__clzdi2>:
    5204:	b510      	push	{r4, lr}
    5206:	2900      	cmp	r1, #0
    5208:	d103      	bne.n	5212 <__clzdi2+0xe>
    520a:	f7ff ffdd 	bl	51c8 <__clzsi2>
    520e:	3020      	adds	r0, #32
    5210:	e002      	b.n	5218 <__clzdi2+0x14>
    5212:	1c08      	adds	r0, r1, #0
    5214:	f7ff ffd8 	bl	51c8 <__clzsi2>
    5218:	bd10      	pop	{r4, pc}
    521a:	46c0      	nop			; (mov r8, r8)

0000521c <__ctzsi2>:
    521c:	4241      	negs	r1, r0
    521e:	4008      	ands	r0, r1
    5220:	211c      	movs	r1, #28
    5222:	2301      	movs	r3, #1
    5224:	041b      	lsls	r3, r3, #16
    5226:	4298      	cmp	r0, r3
    5228:	d301      	bcc.n	522e <__ctzsi2+0x12>
    522a:	0c00      	lsrs	r0, r0, #16
    522c:	3910      	subs	r1, #16
    522e:	0a1b      	lsrs	r3, r3, #8
    5230:	4298      	cmp	r0, r3
    5232:	d301      	bcc.n	5238 <__ctzsi2+0x1c>
    5234:	0a00      	lsrs	r0, r0, #8
    5236:	3908      	subs	r1, #8
    5238:	091b      	lsrs	r3, r3, #4
    523a:	4298      	cmp	r0, r3
    523c:	d301      	bcc.n	5242 <__ctzsi2+0x26>
    523e:	0900      	lsrs	r0, r0, #4
    5240:	3904      	subs	r1, #4
    5242:	a202      	add	r2, pc, #8	; (adr r2, 524c <__ctzsi2+0x30>)
    5244:	5c10      	ldrb	r0, [r2, r0]
    5246:	1a40      	subs	r0, r0, r1
    5248:	4770      	bx	lr
    524a:	46c0      	nop			; (mov r8, r8)
    524c:	1d1d1c1b 	.word	0x1d1d1c1b
    5250:	1e1e1e1e 	.word	0x1e1e1e1e
    5254:	1f1f1f1f 	.word	0x1f1f1f1f
    5258:	1f1f1f1f 	.word	0x1f1f1f1f

0000525c <__eqdf2>:
    525c:	b5f0      	push	{r4, r5, r6, r7, lr}
    525e:	464f      	mov	r7, r9
    5260:	4646      	mov	r6, r8
    5262:	46d6      	mov	lr, sl
    5264:	005c      	lsls	r4, r3, #1
    5266:	b5c0      	push	{r6, r7, lr}
    5268:	031f      	lsls	r7, r3, #12
    526a:	0fdb      	lsrs	r3, r3, #31
    526c:	469a      	mov	sl, r3
    526e:	4b17      	ldr	r3, [pc, #92]	; (52cc <__eqdf2+0x70>)
    5270:	030e      	lsls	r6, r1, #12
    5272:	004d      	lsls	r5, r1, #1
    5274:	4684      	mov	ip, r0
    5276:	4680      	mov	r8, r0
    5278:	0b36      	lsrs	r6, r6, #12
    527a:	0d6d      	lsrs	r5, r5, #21
    527c:	0fc9      	lsrs	r1, r1, #31
    527e:	4691      	mov	r9, r2
    5280:	0b3f      	lsrs	r7, r7, #12
    5282:	0d64      	lsrs	r4, r4, #21
    5284:	2001      	movs	r0, #1
    5286:	429d      	cmp	r5, r3
    5288:	d008      	beq.n	529c <__eqdf2+0x40>
    528a:	429c      	cmp	r4, r3
    528c:	d001      	beq.n	5292 <__eqdf2+0x36>
    528e:	42a5      	cmp	r5, r4
    5290:	d00b      	beq.n	52aa <__eqdf2+0x4e>
    5292:	bc1c      	pop	{r2, r3, r4}
    5294:	4690      	mov	r8, r2
    5296:	4699      	mov	r9, r3
    5298:	46a2      	mov	sl, r4
    529a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    529c:	4663      	mov	r3, ip
    529e:	4333      	orrs	r3, r6
    52a0:	d1f7      	bne.n	5292 <__eqdf2+0x36>
    52a2:	42ac      	cmp	r4, r5
    52a4:	d1f5      	bne.n	5292 <__eqdf2+0x36>
    52a6:	433a      	orrs	r2, r7
    52a8:	d1f3      	bne.n	5292 <__eqdf2+0x36>
    52aa:	2001      	movs	r0, #1
    52ac:	42be      	cmp	r6, r7
    52ae:	d1f0      	bne.n	5292 <__eqdf2+0x36>
    52b0:	45c8      	cmp	r8, r9
    52b2:	d1ee      	bne.n	5292 <__eqdf2+0x36>
    52b4:	4551      	cmp	r1, sl
    52b6:	d007      	beq.n	52c8 <__eqdf2+0x6c>
    52b8:	2d00      	cmp	r5, #0
    52ba:	d1ea      	bne.n	5292 <__eqdf2+0x36>
    52bc:	4663      	mov	r3, ip
    52be:	431e      	orrs	r6, r3
    52c0:	0030      	movs	r0, r6
    52c2:	1e46      	subs	r6, r0, #1
    52c4:	41b0      	sbcs	r0, r6
    52c6:	e7e4      	b.n	5292 <__eqdf2+0x36>
    52c8:	2000      	movs	r0, #0
    52ca:	e7e2      	b.n	5292 <__eqdf2+0x36>
    52cc:	000007ff 	.word	0x000007ff

000052d0 <__gedf2>:
    52d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    52d2:	4645      	mov	r5, r8
    52d4:	46de      	mov	lr, fp
    52d6:	4657      	mov	r7, sl
    52d8:	464e      	mov	r6, r9
    52da:	b5e0      	push	{r5, r6, r7, lr}
    52dc:	031f      	lsls	r7, r3, #12
    52de:	0b3d      	lsrs	r5, r7, #12
    52e0:	4f2c      	ldr	r7, [pc, #176]	; (5394 <__gedf2+0xc4>)
    52e2:	030e      	lsls	r6, r1, #12
    52e4:	004c      	lsls	r4, r1, #1
    52e6:	46ab      	mov	fp, r5
    52e8:	005d      	lsls	r5, r3, #1
    52ea:	4684      	mov	ip, r0
    52ec:	0b36      	lsrs	r6, r6, #12
    52ee:	0d64      	lsrs	r4, r4, #21
    52f0:	0fc9      	lsrs	r1, r1, #31
    52f2:	4690      	mov	r8, r2
    52f4:	0d6d      	lsrs	r5, r5, #21
    52f6:	0fdb      	lsrs	r3, r3, #31
    52f8:	42bc      	cmp	r4, r7
    52fa:	d02a      	beq.n	5352 <__gedf2+0x82>
    52fc:	4f25      	ldr	r7, [pc, #148]	; (5394 <__gedf2+0xc4>)
    52fe:	42bd      	cmp	r5, r7
    5300:	d02d      	beq.n	535e <__gedf2+0x8e>
    5302:	2c00      	cmp	r4, #0
    5304:	d10f      	bne.n	5326 <__gedf2+0x56>
    5306:	4330      	orrs	r0, r6
    5308:	0007      	movs	r7, r0
    530a:	4681      	mov	r9, r0
    530c:	4278      	negs	r0, r7
    530e:	4178      	adcs	r0, r7
    5310:	b2c0      	uxtb	r0, r0
    5312:	2d00      	cmp	r5, #0
    5314:	d117      	bne.n	5346 <__gedf2+0x76>
    5316:	465f      	mov	r7, fp
    5318:	433a      	orrs	r2, r7
    531a:	d114      	bne.n	5346 <__gedf2+0x76>
    531c:	464b      	mov	r3, r9
    531e:	2000      	movs	r0, #0
    5320:	2b00      	cmp	r3, #0
    5322:	d00a      	beq.n	533a <__gedf2+0x6a>
    5324:	e006      	b.n	5334 <__gedf2+0x64>
    5326:	2d00      	cmp	r5, #0
    5328:	d102      	bne.n	5330 <__gedf2+0x60>
    532a:	4658      	mov	r0, fp
    532c:	4302      	orrs	r2, r0
    532e:	d001      	beq.n	5334 <__gedf2+0x64>
    5330:	4299      	cmp	r1, r3
    5332:	d018      	beq.n	5366 <__gedf2+0x96>
    5334:	4248      	negs	r0, r1
    5336:	2101      	movs	r1, #1
    5338:	4308      	orrs	r0, r1
    533a:	bc3c      	pop	{r2, r3, r4, r5}
    533c:	4690      	mov	r8, r2
    533e:	4699      	mov	r9, r3
    5340:	46a2      	mov	sl, r4
    5342:	46ab      	mov	fp, r5
    5344:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5346:	2800      	cmp	r0, #0
    5348:	d0f2      	beq.n	5330 <__gedf2+0x60>
    534a:	2001      	movs	r0, #1
    534c:	3b01      	subs	r3, #1
    534e:	4318      	orrs	r0, r3
    5350:	e7f3      	b.n	533a <__gedf2+0x6a>
    5352:	0037      	movs	r7, r6
    5354:	4307      	orrs	r7, r0
    5356:	d0d1      	beq.n	52fc <__gedf2+0x2c>
    5358:	2002      	movs	r0, #2
    535a:	4240      	negs	r0, r0
    535c:	e7ed      	b.n	533a <__gedf2+0x6a>
    535e:	465f      	mov	r7, fp
    5360:	4317      	orrs	r7, r2
    5362:	d0ce      	beq.n	5302 <__gedf2+0x32>
    5364:	e7f8      	b.n	5358 <__gedf2+0x88>
    5366:	42ac      	cmp	r4, r5
    5368:	dce4      	bgt.n	5334 <__gedf2+0x64>
    536a:	da03      	bge.n	5374 <__gedf2+0xa4>
    536c:	1e48      	subs	r0, r1, #1
    536e:	2101      	movs	r1, #1
    5370:	4308      	orrs	r0, r1
    5372:	e7e2      	b.n	533a <__gedf2+0x6a>
    5374:	455e      	cmp	r6, fp
    5376:	d8dd      	bhi.n	5334 <__gedf2+0x64>
    5378:	d006      	beq.n	5388 <__gedf2+0xb8>
    537a:	2000      	movs	r0, #0
    537c:	455e      	cmp	r6, fp
    537e:	d2dc      	bcs.n	533a <__gedf2+0x6a>
    5380:	2301      	movs	r3, #1
    5382:	1e48      	subs	r0, r1, #1
    5384:	4318      	orrs	r0, r3
    5386:	e7d8      	b.n	533a <__gedf2+0x6a>
    5388:	45c4      	cmp	ip, r8
    538a:	d8d3      	bhi.n	5334 <__gedf2+0x64>
    538c:	2000      	movs	r0, #0
    538e:	45c4      	cmp	ip, r8
    5390:	d3f6      	bcc.n	5380 <__gedf2+0xb0>
    5392:	e7d2      	b.n	533a <__gedf2+0x6a>
    5394:	000007ff 	.word	0x000007ff

00005398 <__ledf2>:
    5398:	b5f0      	push	{r4, r5, r6, r7, lr}
    539a:	464e      	mov	r6, r9
    539c:	4645      	mov	r5, r8
    539e:	46de      	mov	lr, fp
    53a0:	4657      	mov	r7, sl
    53a2:	005c      	lsls	r4, r3, #1
    53a4:	b5e0      	push	{r5, r6, r7, lr}
    53a6:	031f      	lsls	r7, r3, #12
    53a8:	0fdb      	lsrs	r3, r3, #31
    53aa:	4699      	mov	r9, r3
    53ac:	4b2a      	ldr	r3, [pc, #168]	; (5458 <__ledf2+0xc0>)
    53ae:	030e      	lsls	r6, r1, #12
    53b0:	004d      	lsls	r5, r1, #1
    53b2:	0fc9      	lsrs	r1, r1, #31
    53b4:	4684      	mov	ip, r0
    53b6:	0b36      	lsrs	r6, r6, #12
    53b8:	0d6d      	lsrs	r5, r5, #21
    53ba:	468b      	mov	fp, r1
    53bc:	4690      	mov	r8, r2
    53be:	0b3f      	lsrs	r7, r7, #12
    53c0:	0d64      	lsrs	r4, r4, #21
    53c2:	429d      	cmp	r5, r3
    53c4:	d020      	beq.n	5408 <__ledf2+0x70>
    53c6:	4b24      	ldr	r3, [pc, #144]	; (5458 <__ledf2+0xc0>)
    53c8:	429c      	cmp	r4, r3
    53ca:	d022      	beq.n	5412 <__ledf2+0x7a>
    53cc:	2d00      	cmp	r5, #0
    53ce:	d112      	bne.n	53f6 <__ledf2+0x5e>
    53d0:	4330      	orrs	r0, r6
    53d2:	4243      	negs	r3, r0
    53d4:	4143      	adcs	r3, r0
    53d6:	b2db      	uxtb	r3, r3
    53d8:	2c00      	cmp	r4, #0
    53da:	d01f      	beq.n	541c <__ledf2+0x84>
    53dc:	2b00      	cmp	r3, #0
    53de:	d00c      	beq.n	53fa <__ledf2+0x62>
    53e0:	464b      	mov	r3, r9
    53e2:	2001      	movs	r0, #1
    53e4:	3b01      	subs	r3, #1
    53e6:	4303      	orrs	r3, r0
    53e8:	0018      	movs	r0, r3
    53ea:	bc3c      	pop	{r2, r3, r4, r5}
    53ec:	4690      	mov	r8, r2
    53ee:	4699      	mov	r9, r3
    53f0:	46a2      	mov	sl, r4
    53f2:	46ab      	mov	fp, r5
    53f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    53f6:	2c00      	cmp	r4, #0
    53f8:	d016      	beq.n	5428 <__ledf2+0x90>
    53fa:	45cb      	cmp	fp, r9
    53fc:	d017      	beq.n	542e <__ledf2+0x96>
    53fe:	465b      	mov	r3, fp
    5400:	4259      	negs	r1, r3
    5402:	2301      	movs	r3, #1
    5404:	430b      	orrs	r3, r1
    5406:	e7ef      	b.n	53e8 <__ledf2+0x50>
    5408:	0031      	movs	r1, r6
    540a:	2302      	movs	r3, #2
    540c:	4301      	orrs	r1, r0
    540e:	d1eb      	bne.n	53e8 <__ledf2+0x50>
    5410:	e7d9      	b.n	53c6 <__ledf2+0x2e>
    5412:	0039      	movs	r1, r7
    5414:	2302      	movs	r3, #2
    5416:	4311      	orrs	r1, r2
    5418:	d1e6      	bne.n	53e8 <__ledf2+0x50>
    541a:	e7d7      	b.n	53cc <__ledf2+0x34>
    541c:	433a      	orrs	r2, r7
    541e:	d1dd      	bne.n	53dc <__ledf2+0x44>
    5420:	2300      	movs	r3, #0
    5422:	2800      	cmp	r0, #0
    5424:	d0e0      	beq.n	53e8 <__ledf2+0x50>
    5426:	e7ea      	b.n	53fe <__ledf2+0x66>
    5428:	433a      	orrs	r2, r7
    542a:	d1e6      	bne.n	53fa <__ledf2+0x62>
    542c:	e7e7      	b.n	53fe <__ledf2+0x66>
    542e:	42a5      	cmp	r5, r4
    5430:	dce5      	bgt.n	53fe <__ledf2+0x66>
    5432:	db05      	blt.n	5440 <__ledf2+0xa8>
    5434:	42be      	cmp	r6, r7
    5436:	d8e2      	bhi.n	53fe <__ledf2+0x66>
    5438:	d007      	beq.n	544a <__ledf2+0xb2>
    543a:	2300      	movs	r3, #0
    543c:	42be      	cmp	r6, r7
    543e:	d2d3      	bcs.n	53e8 <__ledf2+0x50>
    5440:	4659      	mov	r1, fp
    5442:	2301      	movs	r3, #1
    5444:	3901      	subs	r1, #1
    5446:	430b      	orrs	r3, r1
    5448:	e7ce      	b.n	53e8 <__ledf2+0x50>
    544a:	45c4      	cmp	ip, r8
    544c:	d8d7      	bhi.n	53fe <__ledf2+0x66>
    544e:	2300      	movs	r3, #0
    5450:	45c4      	cmp	ip, r8
    5452:	d3f5      	bcc.n	5440 <__ledf2+0xa8>
    5454:	e7c8      	b.n	53e8 <__ledf2+0x50>
    5456:	46c0      	nop			; (mov r8, r8)
    5458:	000007ff 	.word	0x000007ff

0000545c <__libc_init_array>:
    545c:	b570      	push	{r4, r5, r6, lr}
    545e:	4e0d      	ldr	r6, [pc, #52]	; (5494 <__libc_init_array+0x38>)
    5460:	4d0d      	ldr	r5, [pc, #52]	; (5498 <__libc_init_array+0x3c>)
    5462:	2400      	movs	r4, #0
    5464:	1bad      	subs	r5, r5, r6
    5466:	10ad      	asrs	r5, r5, #2
    5468:	d005      	beq.n	5476 <__libc_init_array+0x1a>
    546a:	00a3      	lsls	r3, r4, #2
    546c:	58f3      	ldr	r3, [r6, r3]
    546e:	3401      	adds	r4, #1
    5470:	4798      	blx	r3
    5472:	42a5      	cmp	r5, r4
    5474:	d1f9      	bne.n	546a <__libc_init_array+0xe>
    5476:	f009 fdc1 	bl	effc <_init>
    547a:	4e08      	ldr	r6, [pc, #32]	; (549c <__libc_init_array+0x40>)
    547c:	4d08      	ldr	r5, [pc, #32]	; (54a0 <__libc_init_array+0x44>)
    547e:	2400      	movs	r4, #0
    5480:	1bad      	subs	r5, r5, r6
    5482:	10ad      	asrs	r5, r5, #2
    5484:	d005      	beq.n	5492 <__libc_init_array+0x36>
    5486:	00a3      	lsls	r3, r4, #2
    5488:	58f3      	ldr	r3, [r6, r3]
    548a:	3401      	adds	r4, #1
    548c:	4798      	blx	r3
    548e:	42a5      	cmp	r5, r4
    5490:	d1f9      	bne.n	5486 <__libc_init_array+0x2a>
    5492:	bd70      	pop	{r4, r5, r6, pc}
    5494:	0000f008 	.word	0x0000f008
    5498:	0000f008 	.word	0x0000f008
    549c:	0000f008 	.word	0x0000f008
    54a0:	0000f010 	.word	0x0000f010

000054a4 <memset>:
    54a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    54a6:	0783      	lsls	r3, r0, #30
    54a8:	d043      	beq.n	5532 <memset+0x8e>
    54aa:	1e54      	subs	r4, r2, #1
    54ac:	2a00      	cmp	r2, #0
    54ae:	d03f      	beq.n	5530 <memset+0x8c>
    54b0:	b2ce      	uxtb	r6, r1
    54b2:	0002      	movs	r2, r0
    54b4:	2503      	movs	r5, #3
    54b6:	e002      	b.n	54be <memset+0x1a>
    54b8:	001a      	movs	r2, r3
    54ba:	3c01      	subs	r4, #1
    54bc:	d338      	bcc.n	5530 <memset+0x8c>
    54be:	1c53      	adds	r3, r2, #1
    54c0:	7016      	strb	r6, [r2, #0]
    54c2:	422b      	tst	r3, r5
    54c4:	d1f8      	bne.n	54b8 <memset+0x14>
    54c6:	2c03      	cmp	r4, #3
    54c8:	d92a      	bls.n	5520 <memset+0x7c>
    54ca:	22ff      	movs	r2, #255	; 0xff
    54cc:	400a      	ands	r2, r1
    54ce:	0215      	lsls	r5, r2, #8
    54d0:	4315      	orrs	r5, r2
    54d2:	042a      	lsls	r2, r5, #16
    54d4:	4315      	orrs	r5, r2
    54d6:	2c0f      	cmp	r4, #15
    54d8:	d914      	bls.n	5504 <memset+0x60>
    54da:	0027      	movs	r7, r4
    54dc:	001a      	movs	r2, r3
    54de:	3f10      	subs	r7, #16
    54e0:	093e      	lsrs	r6, r7, #4
    54e2:	3601      	adds	r6, #1
    54e4:	0136      	lsls	r6, r6, #4
    54e6:	199e      	adds	r6, r3, r6
    54e8:	6015      	str	r5, [r2, #0]
    54ea:	6055      	str	r5, [r2, #4]
    54ec:	6095      	str	r5, [r2, #8]
    54ee:	60d5      	str	r5, [r2, #12]
    54f0:	3210      	adds	r2, #16
    54f2:	4296      	cmp	r6, r2
    54f4:	d1f8      	bne.n	54e8 <memset+0x44>
    54f6:	220f      	movs	r2, #15
    54f8:	4397      	bics	r7, r2
    54fa:	3710      	adds	r7, #16
    54fc:	19db      	adds	r3, r3, r7
    54fe:	4014      	ands	r4, r2
    5500:	2c03      	cmp	r4, #3
    5502:	d90d      	bls.n	5520 <memset+0x7c>
    5504:	001a      	movs	r2, r3
    5506:	1f27      	subs	r7, r4, #4
    5508:	08be      	lsrs	r6, r7, #2
    550a:	3601      	adds	r6, #1
    550c:	00b6      	lsls	r6, r6, #2
    550e:	199e      	adds	r6, r3, r6
    5510:	c220      	stmia	r2!, {r5}
    5512:	42b2      	cmp	r2, r6
    5514:	d1fc      	bne.n	5510 <memset+0x6c>
    5516:	2203      	movs	r2, #3
    5518:	4397      	bics	r7, r2
    551a:	3704      	adds	r7, #4
    551c:	19db      	adds	r3, r3, r7
    551e:	4014      	ands	r4, r2
    5520:	2c00      	cmp	r4, #0
    5522:	d005      	beq.n	5530 <memset+0x8c>
    5524:	b2c9      	uxtb	r1, r1
    5526:	191c      	adds	r4, r3, r4
    5528:	7019      	strb	r1, [r3, #0]
    552a:	3301      	adds	r3, #1
    552c:	429c      	cmp	r4, r3
    552e:	d1fb      	bne.n	5528 <memset+0x84>
    5530:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5532:	0014      	movs	r4, r2
    5534:	0003      	movs	r3, r0
    5536:	e7c6      	b.n	54c6 <memset+0x22>

00005538 <snprintf>:
    5538:	b40c      	push	{r2, r3}
    553a:	b530      	push	{r4, r5, lr}
    553c:	4b1e      	ldr	r3, [pc, #120]	; (55b8 <snprintf+0x80>)
    553e:	b09d      	sub	sp, #116	; 0x74
    5540:	681d      	ldr	r5, [r3, #0]
    5542:	2900      	cmp	r1, #0
    5544:	db33      	blt.n	55ae <snprintf+0x76>
    5546:	2382      	movs	r3, #130	; 0x82
    5548:	ac02      	add	r4, sp, #8
    554a:	009b      	lsls	r3, r3, #2
    554c:	81a3      	strh	r3, [r4, #12]
    554e:	9002      	str	r0, [sp, #8]
    5550:	6120      	str	r0, [r4, #16]
    5552:	2900      	cmp	r1, #0
    5554:	d012      	beq.n	557c <snprintf+0x44>
    5556:	2301      	movs	r3, #1
    5558:	3901      	subs	r1, #1
    555a:	425b      	negs	r3, r3
    555c:	60a1      	str	r1, [r4, #8]
    555e:	6161      	str	r1, [r4, #20]
    5560:	81e3      	strh	r3, [r4, #14]
    5562:	9a20      	ldr	r2, [sp, #128]	; 0x80
    5564:	ab21      	add	r3, sp, #132	; 0x84
    5566:	0021      	movs	r1, r4
    5568:	0028      	movs	r0, r5
    556a:	9301      	str	r3, [sp, #4]
    556c:	f000 fc44 	bl	5df8 <_svfprintf_r>
    5570:	1c43      	adds	r3, r0, #1
    5572:	db16      	blt.n	55a2 <snprintf+0x6a>
    5574:	2300      	movs	r3, #0
    5576:	9a02      	ldr	r2, [sp, #8]
    5578:	7013      	strb	r3, [r2, #0]
    557a:	e00d      	b.n	5598 <snprintf+0x60>
    557c:	2301      	movs	r3, #1
    557e:	425b      	negs	r3, r3
    5580:	60a1      	str	r1, [r4, #8]
    5582:	6161      	str	r1, [r4, #20]
    5584:	81e3      	strh	r3, [r4, #14]
    5586:	9a20      	ldr	r2, [sp, #128]	; 0x80
    5588:	ab21      	add	r3, sp, #132	; 0x84
    558a:	0021      	movs	r1, r4
    558c:	0028      	movs	r0, r5
    558e:	9301      	str	r3, [sp, #4]
    5590:	f000 fc32 	bl	5df8 <_svfprintf_r>
    5594:	1c43      	adds	r3, r0, #1
    5596:	db07      	blt.n	55a8 <snprintf+0x70>
    5598:	b01d      	add	sp, #116	; 0x74
    559a:	bc30      	pop	{r4, r5}
    559c:	bc08      	pop	{r3}
    559e:	b002      	add	sp, #8
    55a0:	4718      	bx	r3
    55a2:	238b      	movs	r3, #139	; 0x8b
    55a4:	602b      	str	r3, [r5, #0]
    55a6:	e7e5      	b.n	5574 <snprintf+0x3c>
    55a8:	238b      	movs	r3, #139	; 0x8b
    55aa:	602b      	str	r3, [r5, #0]
    55ac:	e7f4      	b.n	5598 <snprintf+0x60>
    55ae:	238b      	movs	r3, #139	; 0x8b
    55b0:	2001      	movs	r0, #1
    55b2:	602b      	str	r3, [r5, #0]
    55b4:	4240      	negs	r0, r0
    55b6:	e7ef      	b.n	5598 <snprintf+0x60>
    55b8:	20000090 	.word	0x20000090

000055bc <sscanf>:
    55bc:	b40e      	push	{r1, r2, r3}
    55be:	2381      	movs	r3, #129	; 0x81
    55c0:	b570      	push	{r4, r5, r6, lr}
    55c2:	b09d      	sub	sp, #116	; 0x74
    55c4:	ac02      	add	r4, sp, #8
    55c6:	ad21      	add	r5, sp, #132	; 0x84
    55c8:	009b      	lsls	r3, r3, #2
    55ca:	cd40      	ldmia	r5!, {r6}
    55cc:	81a3      	strh	r3, [r4, #12]
    55ce:	9002      	str	r0, [sp, #8]
    55d0:	9006      	str	r0, [sp, #24]
    55d2:	f000 f8cf 	bl	5774 <strlen>
    55d6:	4b0b      	ldr	r3, [pc, #44]	; (5604 <sscanf+0x48>)
    55d8:	6060      	str	r0, [r4, #4]
    55da:	6223      	str	r3, [r4, #32]
    55dc:	2300      	movs	r3, #0
    55de:	6323      	str	r3, [r4, #48]	; 0x30
    55e0:	6463      	str	r3, [r4, #68]	; 0x44
    55e2:	3b01      	subs	r3, #1
    55e4:	81e3      	strh	r3, [r4, #14]
    55e6:	4b08      	ldr	r3, [pc, #32]	; (5608 <sscanf+0x4c>)
    55e8:	6160      	str	r0, [r4, #20]
    55ea:	0032      	movs	r2, r6
    55ec:	6818      	ldr	r0, [r3, #0]
    55ee:	0021      	movs	r1, r4
    55f0:	002b      	movs	r3, r5
    55f2:	9501      	str	r5, [sp, #4]
    55f4:	f001 ff04 	bl	7400 <__ssvfscanf_r>
    55f8:	b01d      	add	sp, #116	; 0x74
    55fa:	bc70      	pop	{r4, r5, r6}
    55fc:	bc08      	pop	{r3}
    55fe:	b003      	add	sp, #12
    5600:	4718      	bx	r3
    5602:	46c0      	nop			; (mov r8, r8)
    5604:	0000560d 	.word	0x0000560d
    5608:	20000090 	.word	0x20000090

0000560c <__seofread>:
    560c:	2000      	movs	r0, #0
    560e:	4770      	bx	lr

00005610 <strchr>:
    5610:	b570      	push	{r4, r5, r6, lr}
    5612:	b2cc      	uxtb	r4, r1
    5614:	2c00      	cmp	r4, #0
    5616:	d03b      	beq.n	5690 <strchr+0x80>
    5618:	0783      	lsls	r3, r0, #30
    561a:	d00e      	beq.n	563a <strchr+0x2a>
    561c:	7803      	ldrb	r3, [r0, #0]
    561e:	2b00      	cmp	r3, #0
    5620:	d05b      	beq.n	56da <strchr+0xca>
    5622:	429c      	cmp	r4, r3
    5624:	d033      	beq.n	568e <strchr+0x7e>
    5626:	2203      	movs	r2, #3
    5628:	e004      	b.n	5634 <strchr+0x24>
    562a:	7803      	ldrb	r3, [r0, #0]
    562c:	2b00      	cmp	r3, #0
    562e:	d054      	beq.n	56da <strchr+0xca>
    5630:	429c      	cmp	r4, r3
    5632:	d02c      	beq.n	568e <strchr+0x7e>
    5634:	3001      	adds	r0, #1
    5636:	4210      	tst	r0, r2
    5638:	d1f7      	bne.n	562a <strchr+0x1a>
    563a:	25ff      	movs	r5, #255	; 0xff
    563c:	4029      	ands	r1, r5
    563e:	020d      	lsls	r5, r1, #8
    5640:	4329      	orrs	r1, r5
    5642:	040d      	lsls	r5, r1, #16
    5644:	430d      	orrs	r5, r1
    5646:	0029      	movs	r1, r5
    5648:	6802      	ldr	r2, [r0, #0]
    564a:	4b26      	ldr	r3, [pc, #152]	; (56e4 <strchr+0xd4>)
    564c:	4051      	eors	r1, r2
    564e:	18d3      	adds	r3, r2, r3
    5650:	4393      	bics	r3, r2
    5652:	4a24      	ldr	r2, [pc, #144]	; (56e4 <strchr+0xd4>)
    5654:	4e24      	ldr	r6, [pc, #144]	; (56e8 <strchr+0xd8>)
    5656:	188a      	adds	r2, r1, r2
    5658:	438a      	bics	r2, r1
    565a:	4313      	orrs	r3, r2
    565c:	4233      	tst	r3, r6
    565e:	d10c      	bne.n	567a <strchr+0x6a>
    5660:	0029      	movs	r1, r5
    5662:	3004      	adds	r0, #4
    5664:	6802      	ldr	r2, [r0, #0]
    5666:	4b1f      	ldr	r3, [pc, #124]	; (56e4 <strchr+0xd4>)
    5668:	4051      	eors	r1, r2
    566a:	18d3      	adds	r3, r2, r3
    566c:	4393      	bics	r3, r2
    566e:	4a1d      	ldr	r2, [pc, #116]	; (56e4 <strchr+0xd4>)
    5670:	188a      	adds	r2, r1, r2
    5672:	438a      	bics	r2, r1
    5674:	4313      	orrs	r3, r2
    5676:	4233      	tst	r3, r6
    5678:	d0f2      	beq.n	5660 <strchr+0x50>
    567a:	7803      	ldrb	r3, [r0, #0]
    567c:	2b00      	cmp	r3, #0
    567e:	d104      	bne.n	568a <strchr+0x7a>
    5680:	e02b      	b.n	56da <strchr+0xca>
    5682:	3001      	adds	r0, #1
    5684:	7803      	ldrb	r3, [r0, #0]
    5686:	2b00      	cmp	r3, #0
    5688:	d027      	beq.n	56da <strchr+0xca>
    568a:	429c      	cmp	r4, r3
    568c:	d1f9      	bne.n	5682 <strchr+0x72>
    568e:	bd70      	pop	{r4, r5, r6, pc}
    5690:	0783      	lsls	r3, r0, #30
    5692:	d00a      	beq.n	56aa <strchr+0x9a>
    5694:	7803      	ldrb	r3, [r0, #0]
    5696:	2b00      	cmp	r3, #0
    5698:	d0f9      	beq.n	568e <strchr+0x7e>
    569a:	2203      	movs	r2, #3
    569c:	e002      	b.n	56a4 <strchr+0x94>
    569e:	7803      	ldrb	r3, [r0, #0]
    56a0:	2b00      	cmp	r3, #0
    56a2:	d0f4      	beq.n	568e <strchr+0x7e>
    56a4:	3001      	adds	r0, #1
    56a6:	4210      	tst	r0, r2
    56a8:	d1f9      	bne.n	569e <strchr+0x8e>
    56aa:	6801      	ldr	r1, [r0, #0]
    56ac:	4a0d      	ldr	r2, [pc, #52]	; (56e4 <strchr+0xd4>)
    56ae:	0003      	movs	r3, r0
    56b0:	188a      	adds	r2, r1, r2
    56b2:	480d      	ldr	r0, [pc, #52]	; (56e8 <strchr+0xd8>)
    56b4:	438a      	bics	r2, r1
    56b6:	4202      	tst	r2, r0
    56b8:	d106      	bne.n	56c8 <strchr+0xb8>
    56ba:	3304      	adds	r3, #4
    56bc:	6819      	ldr	r1, [r3, #0]
    56be:	4a09      	ldr	r2, [pc, #36]	; (56e4 <strchr+0xd4>)
    56c0:	188a      	adds	r2, r1, r2
    56c2:	438a      	bics	r2, r1
    56c4:	4202      	tst	r2, r0
    56c6:	d0f8      	beq.n	56ba <strchr+0xaa>
    56c8:	781a      	ldrb	r2, [r3, #0]
    56ca:	0018      	movs	r0, r3
    56cc:	2a00      	cmp	r2, #0
    56ce:	d006      	beq.n	56de <strchr+0xce>
    56d0:	3001      	adds	r0, #1
    56d2:	7803      	ldrb	r3, [r0, #0]
    56d4:	2b00      	cmp	r3, #0
    56d6:	d1fb      	bne.n	56d0 <strchr+0xc0>
    56d8:	e7d9      	b.n	568e <strchr+0x7e>
    56da:	2000      	movs	r0, #0
    56dc:	e7d7      	b.n	568e <strchr+0x7e>
    56de:	0018      	movs	r0, r3
    56e0:	e7d5      	b.n	568e <strchr+0x7e>
    56e2:	46c0      	nop			; (mov r8, r8)
    56e4:	fefefeff 	.word	0xfefefeff
    56e8:	80808080 	.word	0x80808080

000056ec <strcmp>:
    56ec:	4602      	mov	r2, r0
    56ee:	b570      	push	{r4, r5, r6, lr}
    56f0:	430a      	orrs	r2, r1
    56f2:	0792      	lsls	r2, r2, #30
    56f4:	d12a      	bne.n	574c <strcmp+0x60>
    56f6:	4d1e      	ldr	r5, [pc, #120]	; (5770 <strcmp+0x84>)
    56f8:	01ee      	lsls	r6, r5, #7
    56fa:	c804      	ldmia	r0!, {r2}
    56fc:	c908      	ldmia	r1!, {r3}
    56fe:	1b54      	subs	r4, r2, r5
    5700:	4394      	bics	r4, r2
    5702:	4034      	ands	r4, r6
    5704:	d017      	beq.n	5736 <strcmp+0x4a>
    5706:	b2d0      	uxtb	r0, r2
    5708:	b2d9      	uxtb	r1, r3
    570a:	1a40      	subs	r0, r0, r1
    570c:	0621      	lsls	r1, r4, #24
    570e:	4301      	orrs	r1, r0
    5710:	d110      	bne.n	5734 <strcmp+0x48>
    5712:	b290      	uxth	r0, r2
    5714:	b299      	uxth	r1, r3
    5716:	1a40      	subs	r0, r0, r1
    5718:	0421      	lsls	r1, r4, #16
    571a:	4301      	orrs	r1, r0
    571c:	d10a      	bne.n	5734 <strcmp+0x48>
    571e:	0210      	lsls	r0, r2, #8
    5720:	0219      	lsls	r1, r3, #8
    5722:	0a00      	lsrs	r0, r0, #8
    5724:	0a09      	lsrs	r1, r1, #8
    5726:	1a40      	subs	r0, r0, r1
    5728:	0221      	lsls	r1, r4, #8
    572a:	4301      	orrs	r1, r0
    572c:	d102      	bne.n	5734 <strcmp+0x48>
    572e:	0e10      	lsrs	r0, r2, #24
    5730:	0e19      	lsrs	r1, r3, #24
    5732:	1a40      	subs	r0, r0, r1
    5734:	bd70      	pop	{r4, r5, r6, pc}
    5736:	429a      	cmp	r2, r3
    5738:	d0df      	beq.n	56fa <strcmp+0xe>
    573a:	ba10      	rev	r0, r2
    573c:	ba19      	rev	r1, r3
    573e:	4288      	cmp	r0, r1
    5740:	d901      	bls.n	5746 <strcmp+0x5a>
    5742:	2001      	movs	r0, #1
    5744:	bd70      	pop	{r4, r5, r6, pc}
    5746:	2000      	movs	r0, #0
    5748:	43c0      	mvns	r0, r0
    574a:	bd70      	pop	{r4, r5, r6, pc}
    574c:	7802      	ldrb	r2, [r0, #0]
    574e:	780b      	ldrb	r3, [r1, #0]
    5750:	3001      	adds	r0, #1
    5752:	3101      	adds	r1, #1
    5754:	2a00      	cmp	r2, #0
    5756:	d009      	beq.n	576c <strcmp+0x80>
    5758:	429a      	cmp	r2, r3
    575a:	d107      	bne.n	576c <strcmp+0x80>
    575c:	7802      	ldrb	r2, [r0, #0]
    575e:	780b      	ldrb	r3, [r1, #0]
    5760:	3001      	adds	r0, #1
    5762:	3101      	adds	r1, #1
    5764:	2a00      	cmp	r2, #0
    5766:	d001      	beq.n	576c <strcmp+0x80>
    5768:	429a      	cmp	r2, r3
    576a:	d0ef      	beq.n	574c <strcmp+0x60>
    576c:	1ad0      	subs	r0, r2, r3
    576e:	bd70      	pop	{r4, r5, r6, pc}
    5770:	01010101 	.word	0x01010101

00005774 <strlen>:
    5774:	b510      	push	{r4, lr}
    5776:	0783      	lsls	r3, r0, #30
    5778:	d025      	beq.n	57c6 <strlen+0x52>
    577a:	7803      	ldrb	r3, [r0, #0]
    577c:	2b00      	cmp	r3, #0
    577e:	d024      	beq.n	57ca <strlen+0x56>
    5780:	0003      	movs	r3, r0
    5782:	2103      	movs	r1, #3
    5784:	e002      	b.n	578c <strlen+0x18>
    5786:	781a      	ldrb	r2, [r3, #0]
    5788:	2a00      	cmp	r2, #0
    578a:	d01a      	beq.n	57c2 <strlen+0x4e>
    578c:	3301      	adds	r3, #1
    578e:	420b      	tst	r3, r1
    5790:	d1f9      	bne.n	5786 <strlen+0x12>
    5792:	6819      	ldr	r1, [r3, #0]
    5794:	4a0e      	ldr	r2, [pc, #56]	; (57d0 <strlen+0x5c>)
    5796:	4c0f      	ldr	r4, [pc, #60]	; (57d4 <strlen+0x60>)
    5798:	188a      	adds	r2, r1, r2
    579a:	438a      	bics	r2, r1
    579c:	4222      	tst	r2, r4
    579e:	d106      	bne.n	57ae <strlen+0x3a>
    57a0:	3304      	adds	r3, #4
    57a2:	6819      	ldr	r1, [r3, #0]
    57a4:	4a0a      	ldr	r2, [pc, #40]	; (57d0 <strlen+0x5c>)
    57a6:	188a      	adds	r2, r1, r2
    57a8:	438a      	bics	r2, r1
    57aa:	4222      	tst	r2, r4
    57ac:	d0f8      	beq.n	57a0 <strlen+0x2c>
    57ae:	001a      	movs	r2, r3
    57b0:	781b      	ldrb	r3, [r3, #0]
    57b2:	2b00      	cmp	r3, #0
    57b4:	d003      	beq.n	57be <strlen+0x4a>
    57b6:	3201      	adds	r2, #1
    57b8:	7811      	ldrb	r1, [r2, #0]
    57ba:	2900      	cmp	r1, #0
    57bc:	d1fb      	bne.n	57b6 <strlen+0x42>
    57be:	1a10      	subs	r0, r2, r0
    57c0:	bd10      	pop	{r4, pc}
    57c2:	1a18      	subs	r0, r3, r0
    57c4:	e7fc      	b.n	57c0 <strlen+0x4c>
    57c6:	0003      	movs	r3, r0
    57c8:	e7e3      	b.n	5792 <strlen+0x1e>
    57ca:	2000      	movs	r0, #0
    57cc:	e7f8      	b.n	57c0 <strlen+0x4c>
    57ce:	46c0      	nop			; (mov r8, r8)
    57d0:	fefefeff 	.word	0xfefefeff
    57d4:	80808080 	.word	0x80808080

000057d8 <critical_factorization>:
    57d8:	2301      	movs	r3, #1
    57da:	b5f0      	push	{r4, r5, r6, r7, lr}
    57dc:	4647      	mov	r7, r8
    57de:	46ce      	mov	lr, r9
    57e0:	4694      	mov	ip, r2
    57e2:	2201      	movs	r2, #1
    57e4:	4698      	mov	r8, r3
    57e6:	2401      	movs	r4, #1
    57e8:	2500      	movs	r5, #0
    57ea:	b580      	push	{r7, lr}
    57ec:	4252      	negs	r2, r2
    57ee:	192b      	adds	r3, r5, r4
    57f0:	428b      	cmp	r3, r1
    57f2:	d20b      	bcs.n	580c <critical_factorization+0x34>
    57f4:	1886      	adds	r6, r0, r2
    57f6:	5cc7      	ldrb	r7, [r0, r3]
    57f8:	5d36      	ldrb	r6, [r6, r4]
    57fa:	42b7      	cmp	r7, r6
    57fc:	d22d      	bcs.n	585a <critical_factorization+0x82>
    57fe:	1a9c      	subs	r4, r3, r2
    5800:	46a0      	mov	r8, r4
    5802:	001d      	movs	r5, r3
    5804:	2401      	movs	r4, #1
    5806:	192b      	adds	r3, r5, r4
    5808:	428b      	cmp	r3, r1
    580a:	d3f3      	bcc.n	57f4 <critical_factorization+0x1c>
    580c:	4644      	mov	r4, r8
    580e:	4663      	mov	r3, ip
    5810:	601c      	str	r4, [r3, #0]
    5812:	2301      	movs	r3, #1
    5814:	4699      	mov	r9, r3
    5816:	3b02      	subs	r3, #2
    5818:	2401      	movs	r4, #1
    581a:	2500      	movs	r5, #0
    581c:	4698      	mov	r8, r3
    581e:	192b      	adds	r3, r5, r4
    5820:	4299      	cmp	r1, r3
    5822:	d90d      	bls.n	5840 <critical_factorization+0x68>
    5824:	4646      	mov	r6, r8
    5826:	1986      	adds	r6, r0, r6
    5828:	5cc7      	ldrb	r7, [r0, r3]
    582a:	5d36      	ldrb	r6, [r6, r4]
    582c:	42b7      	cmp	r7, r6
    582e:	d91c      	bls.n	586a <critical_factorization+0x92>
    5830:	4644      	mov	r4, r8
    5832:	1b1c      	subs	r4, r3, r4
    5834:	46a1      	mov	r9, r4
    5836:	001d      	movs	r5, r3
    5838:	2401      	movs	r4, #1
    583a:	192b      	adds	r3, r5, r4
    583c:	4299      	cmp	r1, r3
    583e:	d8f1      	bhi.n	5824 <critical_factorization+0x4c>
    5840:	4643      	mov	r3, r8
    5842:	1c50      	adds	r0, r2, #1
    5844:	3301      	adds	r3, #1
    5846:	4283      	cmp	r3, r0
    5848:	d303      	bcc.n	5852 <critical_factorization+0x7a>
    584a:	4662      	mov	r2, ip
    584c:	4649      	mov	r1, r9
    584e:	0018      	movs	r0, r3
    5850:	6011      	str	r1, [r2, #0]
    5852:	bc0c      	pop	{r2, r3}
    5854:	4690      	mov	r8, r2
    5856:	4699      	mov	r9, r3
    5858:	bdf0      	pop	{r4, r5, r6, r7, pc}
    585a:	42b7      	cmp	r7, r6
    585c:	d00d      	beq.n	587a <critical_factorization+0xa2>
    585e:	2301      	movs	r3, #1
    5860:	002a      	movs	r2, r5
    5862:	4698      	mov	r8, r3
    5864:	3501      	adds	r5, #1
    5866:	2401      	movs	r4, #1
    5868:	e7c1      	b.n	57ee <critical_factorization+0x16>
    586a:	42b7      	cmp	r7, r6
    586c:	d009      	beq.n	5882 <critical_factorization+0xaa>
    586e:	2301      	movs	r3, #1
    5870:	46a8      	mov	r8, r5
    5872:	4699      	mov	r9, r3
    5874:	3501      	adds	r5, #1
    5876:	2401      	movs	r4, #1
    5878:	e7d1      	b.n	581e <critical_factorization+0x46>
    587a:	4544      	cmp	r4, r8
    587c:	d005      	beq.n	588a <critical_factorization+0xb2>
    587e:	3401      	adds	r4, #1
    5880:	e7b5      	b.n	57ee <critical_factorization+0x16>
    5882:	454c      	cmp	r4, r9
    5884:	d004      	beq.n	5890 <critical_factorization+0xb8>
    5886:	3401      	adds	r4, #1
    5888:	e7c9      	b.n	581e <critical_factorization+0x46>
    588a:	001d      	movs	r5, r3
    588c:	2401      	movs	r4, #1
    588e:	e7ae      	b.n	57ee <critical_factorization+0x16>
    5890:	001d      	movs	r5, r3
    5892:	2401      	movs	r4, #1
    5894:	e7c3      	b.n	581e <critical_factorization+0x46>
    5896:	46c0      	nop			; (mov r8, r8)

00005898 <two_way_long_needle>:
    5898:	b5f0      	push	{r4, r5, r6, r7, lr}
    589a:	46de      	mov	lr, fp
    589c:	4657      	mov	r7, sl
    589e:	464e      	mov	r6, r9
    58a0:	4645      	mov	r5, r8
    58a2:	b5e0      	push	{r5, r6, r7, lr}
    58a4:	0015      	movs	r5, r2
    58a6:	4c7b      	ldr	r4, [pc, #492]	; (5a94 <two_way_long_needle+0x1fc>)
    58a8:	0006      	movs	r6, r0
    58aa:	44a5      	add	sp, r4
    58ac:	aa03      	add	r2, sp, #12
    58ae:	000f      	movs	r7, r1
    58b0:	0028      	movs	r0, r5
    58b2:	0019      	movs	r1, r3
    58b4:	001c      	movs	r4, r3
    58b6:	f7ff ff8f 	bl	57d8 <critical_factorization>
    58ba:	4683      	mov	fp, r0
    58bc:	aaff      	add	r2, sp, #1020	; 0x3fc
    58be:	ab04      	add	r3, sp, #16
    58c0:	3214      	adds	r2, #20
    58c2:	c310      	stmia	r3!, {r4}
    58c4:	4293      	cmp	r3, r2
    58c6:	d1fc      	bne.n	58c2 <two_way_long_needle+0x2a>
    58c8:	1e63      	subs	r3, r4, #1
    58ca:	0029      	movs	r1, r5
    58cc:	46a4      	mov	ip, r4
    58ce:	2c00      	cmp	r4, #0
    58d0:	d009      	beq.n	58e6 <two_way_long_needle+0x4e>
    58d2:	2408      	movs	r4, #8
    58d4:	780a      	ldrb	r2, [r1, #0]
    58d6:	a802      	add	r0, sp, #8
    58d8:	0092      	lsls	r2, r2, #2
    58da:	1900      	adds	r0, r0, r4
    58dc:	5083      	str	r3, [r0, r2]
    58de:	3101      	adds	r1, #1
    58e0:	3b01      	subs	r3, #1
    58e2:	d2f6      	bcs.n	58d2 <two_way_long_needle+0x3a>
    58e4:	4664      	mov	r4, ip
    58e6:	9b03      	ldr	r3, [sp, #12]
    58e8:	465a      	mov	r2, fp
    58ea:	18e9      	adds	r1, r5, r3
    58ec:	0028      	movs	r0, r5
    58ee:	f004 f9b7 	bl	9c60 <memcmp>
    58f2:	2800      	cmp	r0, #0
    58f4:	d000      	beq.n	58f8 <two_way_long_needle+0x60>
    58f6:	e074      	b.n	59e2 <two_way_long_needle+0x14a>
    58f8:	2300      	movs	r3, #0
    58fa:	001a      	movs	r2, r3
    58fc:	469a      	mov	sl, r3
    58fe:	1e63      	subs	r3, r4, #1
    5900:	4698      	mov	r8, r3
    5902:	4659      	mov	r1, fp
    5904:	2301      	movs	r3, #1
    5906:	0038      	movs	r0, r7
    5908:	46a1      	mov	r9, r4
    590a:	0017      	movs	r7, r2
    590c:	4644      	mov	r4, r8
    590e:	46b0      	mov	r8, r6
    5910:	1a5b      	subs	r3, r3, r1
    5912:	9301      	str	r3, [sp, #4]
    5914:	9100      	str	r1, [sp, #0]
    5916:	4656      	mov	r6, sl
    5918:	444e      	add	r6, r9
    591a:	1a32      	subs	r2, r6, r0
    591c:	2100      	movs	r1, #0
    591e:	4440      	add	r0, r8
    5920:	f004 f95e 	bl	9be0 <memchr>
    5924:	2800      	cmp	r0, #0
    5926:	d153      	bne.n	59d0 <two_way_long_needle+0x138>
    5928:	2e00      	cmp	r6, #0
    592a:	d051      	beq.n	59d0 <two_way_long_needle+0x138>
    592c:	4643      	mov	r3, r8
    592e:	2108      	movs	r1, #8
    5930:	199b      	adds	r3, r3, r6
    5932:	3b01      	subs	r3, #1
    5934:	781b      	ldrb	r3, [r3, #0]
    5936:	aa02      	add	r2, sp, #8
    5938:	009b      	lsls	r3, r3, #2
    593a:	1852      	adds	r2, r2, r1
    593c:	58d3      	ldr	r3, [r2, r3]
    593e:	2b00      	cmp	r3, #0
    5940:	d00a      	beq.n	5958 <two_way_long_needle+0xc0>
    5942:	2f00      	cmp	r7, #0
    5944:	d004      	beq.n	5950 <two_way_long_needle+0xb8>
    5946:	9a03      	ldr	r2, [sp, #12]
    5948:	4293      	cmp	r3, r2
    594a:	d201      	bcs.n	5950 <two_way_long_needle+0xb8>
    594c:	464b      	mov	r3, r9
    594e:	1a9b      	subs	r3, r3, r2
    5950:	449a      	add	sl, r3
    5952:	2700      	movs	r7, #0
    5954:	0030      	movs	r0, r6
    5956:	e7de      	b.n	5916 <two_way_long_needle+0x7e>
    5958:	9900      	ldr	r1, [sp, #0]
    595a:	003b      	movs	r3, r7
    595c:	428f      	cmp	r7, r1
    595e:	d200      	bcs.n	5962 <two_way_long_needle+0xca>
    5960:	000b      	movs	r3, r1
    5962:	42a3      	cmp	r3, r4
    5964:	d20d      	bcs.n	5982 <two_way_long_needle+0xea>
    5966:	4642      	mov	r2, r8
    5968:	4452      	add	r2, sl
    596a:	e002      	b.n	5972 <two_way_long_needle+0xda>
    596c:	3301      	adds	r3, #1
    596e:	42a3      	cmp	r3, r4
    5970:	d207      	bcs.n	5982 <two_way_long_needle+0xea>
    5972:	5ce8      	ldrb	r0, [r5, r3]
    5974:	5cd1      	ldrb	r1, [r2, r3]
    5976:	4288      	cmp	r0, r1
    5978:	d0f8      	beq.n	596c <two_way_long_needle+0xd4>
    597a:	9a01      	ldr	r2, [sp, #4]
    597c:	4452      	add	r2, sl
    597e:	4692      	mov	sl, r2
    5980:	e7e6      	b.n	5950 <two_way_long_needle+0xb8>
    5982:	9b00      	ldr	r3, [sp, #0]
    5984:	1e59      	subs	r1, r3, #1
    5986:	429f      	cmp	r7, r3
    5988:	d300      	bcc.n	598c <two_way_long_needle+0xf4>
    598a:	e07d      	b.n	5a88 <two_way_long_needle+0x1f0>
    598c:	4642      	mov	r2, r8
    598e:	4452      	add	r2, sl
    5990:	5c50      	ldrb	r0, [r2, r1]
    5992:	5c6b      	ldrb	r3, [r5, r1]
    5994:	4298      	cmp	r0, r3
    5996:	d000      	beq.n	599a <two_way_long_needle+0x102>
    5998:	e074      	b.n	5a84 <two_way_long_needle+0x1ec>
    599a:	1e7b      	subs	r3, r7, #1
    599c:	469b      	mov	fp, r3
    599e:	0023      	movs	r3, r4
    59a0:	46b4      	mov	ip, r6
    59a2:	465c      	mov	r4, fp
    59a4:	0016      	movs	r6, r2
    59a6:	469b      	mov	fp, r3
    59a8:	e004      	b.n	59b4 <two_way_long_needle+0x11c>
    59aa:	5cea      	ldrb	r2, [r5, r3]
    59ac:	5cf0      	ldrb	r0, [r6, r3]
    59ae:	4282      	cmp	r2, r0
    59b0:	d103      	bne.n	59ba <two_way_long_needle+0x122>
    59b2:	0019      	movs	r1, r3
    59b4:	1e4b      	subs	r3, r1, #1
    59b6:	42a3      	cmp	r3, r4
    59b8:	d1f7      	bne.n	59aa <two_way_long_needle+0x112>
    59ba:	4666      	mov	r6, ip
    59bc:	465c      	mov	r4, fp
    59be:	3701      	adds	r7, #1
    59c0:	428f      	cmp	r7, r1
    59c2:	d863      	bhi.n	5a8c <two_way_long_needle+0x1f4>
    59c4:	464b      	mov	r3, r9
    59c6:	9f03      	ldr	r7, [sp, #12]
    59c8:	0030      	movs	r0, r6
    59ca:	44ba      	add	sl, r7
    59cc:	1bdf      	subs	r7, r3, r7
    59ce:	e7a2      	b.n	5916 <two_way_long_needle+0x7e>
    59d0:	2000      	movs	r0, #0
    59d2:	4b31      	ldr	r3, [pc, #196]	; (5a98 <two_way_long_needle+0x200>)
    59d4:	449d      	add	sp, r3
    59d6:	bc3c      	pop	{r2, r3, r4, r5}
    59d8:	4690      	mov	r8, r2
    59da:	4699      	mov	r9, r3
    59dc:	46a2      	mov	sl, r4
    59de:	46ab      	mov	fp, r5
    59e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    59e2:	465b      	mov	r3, fp
    59e4:	1ae3      	subs	r3, r4, r3
    59e6:	455b      	cmp	r3, fp
    59e8:	d34a      	bcc.n	5a80 <two_way_long_needle+0x1e8>
    59ea:	3301      	adds	r3, #1
    59ec:	9303      	str	r3, [sp, #12]
    59ee:	2300      	movs	r3, #0
    59f0:	469a      	mov	sl, r3
    59f2:	1e63      	subs	r3, r4, #1
    59f4:	4698      	mov	r8, r3
    59f6:	465a      	mov	r2, fp
    59f8:	2301      	movs	r3, #1
    59fa:	0038      	movs	r0, r7
    59fc:	46a1      	mov	r9, r4
    59fe:	4657      	mov	r7, sl
    5a00:	4644      	mov	r4, r8
    5a02:	46b0      	mov	r8, r6
    5a04:	1a9b      	subs	r3, r3, r2
    5a06:	9300      	str	r3, [sp, #0]
    5a08:	464b      	mov	r3, r9
    5a0a:	18fe      	adds	r6, r7, r3
    5a0c:	1a32      	subs	r2, r6, r0
    5a0e:	2100      	movs	r1, #0
    5a10:	4440      	add	r0, r8
    5a12:	f004 f8e5 	bl	9be0 <memchr>
    5a16:	2800      	cmp	r0, #0
    5a18:	d1da      	bne.n	59d0 <two_way_long_needle+0x138>
    5a1a:	2e00      	cmp	r6, #0
    5a1c:	d0d8      	beq.n	59d0 <two_way_long_needle+0x138>
    5a1e:	4643      	mov	r3, r8
    5a20:	2108      	movs	r1, #8
    5a22:	199b      	adds	r3, r3, r6
    5a24:	3b01      	subs	r3, #1
    5a26:	781b      	ldrb	r3, [r3, #0]
    5a28:	aa02      	add	r2, sp, #8
    5a2a:	009b      	lsls	r3, r3, #2
    5a2c:	1852      	adds	r2, r2, r1
    5a2e:	58d3      	ldr	r3, [r2, r3]
    5a30:	2b00      	cmp	r3, #0
    5a32:	d122      	bne.n	5a7a <two_way_long_needle+0x1e2>
    5a34:	4643      	mov	r3, r8
    5a36:	19d8      	adds	r0, r3, r7
    5a38:	45a3      	cmp	fp, r4
    5a3a:	d20c      	bcs.n	5a56 <two_way_long_needle+0x1be>
    5a3c:	465b      	mov	r3, fp
    5a3e:	5cc1      	ldrb	r1, [r0, r3]
    5a40:	5cea      	ldrb	r2, [r5, r3]
    5a42:	4291      	cmp	r1, r2
    5a44:	d004      	beq.n	5a50 <two_way_long_needle+0x1b8>
    5a46:	e015      	b.n	5a74 <two_way_long_needle+0x1dc>
    5a48:	5ce9      	ldrb	r1, [r5, r3]
    5a4a:	5cc2      	ldrb	r2, [r0, r3]
    5a4c:	4291      	cmp	r1, r2
    5a4e:	d111      	bne.n	5a74 <two_way_long_needle+0x1dc>
    5a50:	3301      	adds	r3, #1
    5a52:	42a3      	cmp	r3, r4
    5a54:	d3f8      	bcc.n	5a48 <two_way_long_needle+0x1b0>
    5a56:	465b      	mov	r3, fp
    5a58:	3b01      	subs	r3, #1
    5a5a:	d202      	bcs.n	5a62 <two_way_long_needle+0x1ca>
    5a5c:	e7b9      	b.n	59d2 <two_way_long_needle+0x13a>
    5a5e:	3b01      	subs	r3, #1
    5a60:	d3b7      	bcc.n	59d2 <two_way_long_needle+0x13a>
    5a62:	5ce9      	ldrb	r1, [r5, r3]
    5a64:	5cc2      	ldrb	r2, [r0, r3]
    5a66:	4291      	cmp	r1, r2
    5a68:	d0f9      	beq.n	5a5e <two_way_long_needle+0x1c6>
    5a6a:	9b03      	ldr	r3, [sp, #12]
    5a6c:	0030      	movs	r0, r6
    5a6e:	469c      	mov	ip, r3
    5a70:	4467      	add	r7, ip
    5a72:	e7c9      	b.n	5a08 <two_way_long_needle+0x170>
    5a74:	9a00      	ldr	r2, [sp, #0]
    5a76:	4694      	mov	ip, r2
    5a78:	4467      	add	r7, ip
    5a7a:	18ff      	adds	r7, r7, r3
    5a7c:	0030      	movs	r0, r6
    5a7e:	e7c3      	b.n	5a08 <two_way_long_needle+0x170>
    5a80:	465b      	mov	r3, fp
    5a82:	e7b2      	b.n	59ea <two_way_long_needle+0x152>
    5a84:	9900      	ldr	r1, [sp, #0]
    5a86:	e79a      	b.n	59be <two_way_long_needle+0x126>
    5a88:	0019      	movs	r1, r3
    5a8a:	e798      	b.n	59be <two_way_long_needle+0x126>
    5a8c:	4640      	mov	r0, r8
    5a8e:	4450      	add	r0, sl
    5a90:	e79f      	b.n	59d2 <two_way_long_needle+0x13a>
    5a92:	46c0      	nop			; (mov r8, r8)
    5a94:	fffffbec 	.word	0xfffffbec
    5a98:	00000414 	.word	0x00000414

00005a9c <strstr>:
    5a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5a9e:	4657      	mov	r7, sl
    5aa0:	4645      	mov	r5, r8
    5aa2:	46de      	mov	lr, fp
    5aa4:	464e      	mov	r6, r9
    5aa6:	b5e0      	push	{r5, r6, r7, lr}
    5aa8:	7803      	ldrb	r3, [r0, #0]
    5aaa:	b085      	sub	sp, #20
    5aac:	0007      	movs	r7, r0
    5aae:	000d      	movs	r5, r1
    5ab0:	2b00      	cmp	r3, #0
    5ab2:	d035      	beq.n	5b20 <strstr+0x84>
    5ab4:	7809      	ldrb	r1, [r1, #0]
    5ab6:	1e0a      	subs	r2, r1, #0
    5ab8:	d100      	bne.n	5abc <strstr+0x20>
    5aba:	e09f      	b.n	5bfc <strstr+0x160>
    5abc:	002c      	movs	r4, r5
    5abe:	2601      	movs	r6, #1
    5ac0:	e002      	b.n	5ac8 <strstr+0x2c>
    5ac2:	7822      	ldrb	r2, [r4, #0]
    5ac4:	2a00      	cmp	r2, #0
    5ac6:	d00b      	beq.n	5ae0 <strstr+0x44>
    5ac8:	1a9b      	subs	r3, r3, r2
    5aca:	425a      	negs	r2, r3
    5acc:	4153      	adcs	r3, r2
    5ace:	3001      	adds	r0, #1
    5ad0:	401e      	ands	r6, r3
    5ad2:	7803      	ldrb	r3, [r0, #0]
    5ad4:	3401      	adds	r4, #1
    5ad6:	2b00      	cmp	r3, #0
    5ad8:	d1f3      	bne.n	5ac2 <strstr+0x26>
    5ada:	7823      	ldrb	r3, [r4, #0]
    5adc:	2b00      	cmp	r3, #0
    5ade:	d122      	bne.n	5b26 <strstr+0x8a>
    5ae0:	0038      	movs	r0, r7
    5ae2:	2e00      	cmp	r6, #0
    5ae4:	d006      	beq.n	5af4 <strstr+0x58>
    5ae6:	b005      	add	sp, #20
    5ae8:	bc3c      	pop	{r2, r3, r4, r5}
    5aea:	4690      	mov	r8, r2
    5aec:	4699      	mov	r9, r3
    5aee:	46a2      	mov	sl, r4
    5af0:	46ab      	mov	fp, r5
    5af2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5af4:	1c78      	adds	r0, r7, #1
    5af6:	f7ff fd8b 	bl	5610 <strchr>
    5afa:	1b64      	subs	r4, r4, r5
    5afc:	1e06      	subs	r6, r0, #0
    5afe:	d012      	beq.n	5b26 <strstr+0x8a>
    5b00:	2c01      	cmp	r4, #1
    5b02:	d0f0      	beq.n	5ae6 <strstr+0x4a>
    5b04:	193f      	adds	r7, r7, r4
    5b06:	2101      	movs	r1, #1
    5b08:	42b8      	cmp	r0, r7
    5b0a:	d800      	bhi.n	5b0e <strstr+0x72>
    5b0c:	1a39      	subs	r1, r7, r0
    5b0e:	000f      	movs	r7, r1
    5b10:	2c1f      	cmp	r4, #31
    5b12:	d90a      	bls.n	5b2a <strstr+0x8e>
    5b14:	0023      	movs	r3, r4
    5b16:	002a      	movs	r2, r5
    5b18:	0030      	movs	r0, r6
    5b1a:	f7ff febd 	bl	5898 <two_way_long_needle>
    5b1e:	e7e2      	b.n	5ae6 <strstr+0x4a>
    5b20:	780b      	ldrb	r3, [r1, #0]
    5b22:	2b00      	cmp	r3, #0
    5b24:	d06a      	beq.n	5bfc <strstr+0x160>
    5b26:	2000      	movs	r0, #0
    5b28:	e7dd      	b.n	5ae6 <strstr+0x4a>
    5b2a:	aa03      	add	r2, sp, #12
    5b2c:	0021      	movs	r1, r4
    5b2e:	0028      	movs	r0, r5
    5b30:	f7ff fe52 	bl	57d8 <critical_factorization>
    5b34:	9b03      	ldr	r3, [sp, #12]
    5b36:	4680      	mov	r8, r0
    5b38:	0002      	movs	r2, r0
    5b3a:	18e9      	adds	r1, r5, r3
    5b3c:	0028      	movs	r0, r5
    5b3e:	f004 f88f 	bl	9c60 <memcmp>
    5b42:	2800      	cmp	r0, #0
    5b44:	d15c      	bne.n	5c00 <strstr+0x164>
    5b46:	2300      	movs	r3, #0
    5b48:	4699      	mov	r9, r3
    5b4a:	4643      	mov	r3, r8
    5b4c:	3b01      	subs	r3, #1
    5b4e:	9300      	str	r3, [sp, #0]
    5b50:	4642      	mov	r2, r8
    5b52:	2301      	movs	r3, #1
    5b54:	46b2      	mov	sl, r6
    5b56:	0038      	movs	r0, r7
    5b58:	464e      	mov	r6, r9
    5b5a:	464f      	mov	r7, r9
    5b5c:	1a9b      	subs	r3, r3, r2
    5b5e:	9301      	str	r3, [sp, #4]
    5b60:	19e3      	adds	r3, r4, r7
    5b62:	1a1a      	subs	r2, r3, r0
    5b64:	2100      	movs	r1, #0
    5b66:	4450      	add	r0, sl
    5b68:	4699      	mov	r9, r3
    5b6a:	f004 f839 	bl	9be0 <memchr>
    5b6e:	2800      	cmp	r0, #0
    5b70:	d1d9      	bne.n	5b26 <strstr+0x8a>
    5b72:	464b      	mov	r3, r9
    5b74:	2b00      	cmp	r3, #0
    5b76:	d0d6      	beq.n	5b26 <strstr+0x8a>
    5b78:	4643      	mov	r3, r8
    5b7a:	45b0      	cmp	r8, r6
    5b7c:	d200      	bcs.n	5b80 <strstr+0xe4>
    5b7e:	0033      	movs	r3, r6
    5b80:	429c      	cmp	r4, r3
    5b82:	d90f      	bls.n	5ba4 <strstr+0x108>
    5b84:	4652      	mov	r2, sl
    5b86:	18d2      	adds	r2, r2, r3
    5b88:	5ce9      	ldrb	r1, [r5, r3]
    5b8a:	5dd2      	ldrb	r2, [r2, r7]
    5b8c:	4291      	cmp	r1, r2
    5b8e:	d12e      	bne.n	5bee <strstr+0x152>
    5b90:	4652      	mov	r2, sl
    5b92:	19d0      	adds	r0, r2, r7
    5b94:	e003      	b.n	5b9e <strstr+0x102>
    5b96:	5ce9      	ldrb	r1, [r5, r3]
    5b98:	5cc2      	ldrb	r2, [r0, r3]
    5b9a:	4291      	cmp	r1, r2
    5b9c:	d127      	bne.n	5bee <strstr+0x152>
    5b9e:	3301      	adds	r3, #1
    5ba0:	429c      	cmp	r4, r3
    5ba2:	d1f8      	bne.n	5b96 <strstr+0xfa>
    5ba4:	9a00      	ldr	r2, [sp, #0]
    5ba6:	45b0      	cmp	r8, r6
    5ba8:	d976      	bls.n	5c98 <strstr+0x1fc>
    5baa:	46bc      	mov	ip, r7
    5bac:	44d4      	add	ip, sl
    5bae:	4661      	mov	r1, ip
    5bb0:	9b00      	ldr	r3, [sp, #0]
    5bb2:	5cc9      	ldrb	r1, [r1, r3]
    5bb4:	5ceb      	ldrb	r3, [r5, r3]
    5bb6:	4299      	cmp	r1, r3
    5bb8:	d16e      	bne.n	5c98 <strstr+0x1fc>
    5bba:	1e73      	subs	r3, r6, #1
    5bbc:	469b      	mov	fp, r3
    5bbe:	4663      	mov	r3, ip
    5bc0:	46a4      	mov	ip, r4
    5bc2:	465c      	mov	r4, fp
    5bc4:	46b3      	mov	fp, r6
    5bc6:	001e      	movs	r6, r3
    5bc8:	e004      	b.n	5bd4 <strstr+0x138>
    5bca:	5ce8      	ldrb	r0, [r5, r3]
    5bcc:	5cf1      	ldrb	r1, [r6, r3]
    5bce:	4288      	cmp	r0, r1
    5bd0:	d103      	bne.n	5bda <strstr+0x13e>
    5bd2:	001a      	movs	r2, r3
    5bd4:	1e53      	subs	r3, r2, #1
    5bd6:	42a3      	cmp	r3, r4
    5bd8:	d1f7      	bne.n	5bca <strstr+0x12e>
    5bda:	4664      	mov	r4, ip
    5bdc:	465e      	mov	r6, fp
    5bde:	3601      	adds	r6, #1
    5be0:	4296      	cmp	r6, r2
    5be2:	d85b      	bhi.n	5c9c <strstr+0x200>
    5be4:	9e03      	ldr	r6, [sp, #12]
    5be6:	4648      	mov	r0, r9
    5be8:	19bf      	adds	r7, r7, r6
    5bea:	1ba6      	subs	r6, r4, r6
    5bec:	e7b8      	b.n	5b60 <strstr+0xc4>
    5bee:	9a01      	ldr	r2, [sp, #4]
    5bf0:	2600      	movs	r6, #0
    5bf2:	4694      	mov	ip, r2
    5bf4:	4467      	add	r7, ip
    5bf6:	18ff      	adds	r7, r7, r3
    5bf8:	4648      	mov	r0, r9
    5bfa:	e7b1      	b.n	5b60 <strstr+0xc4>
    5bfc:	0038      	movs	r0, r7
    5bfe:	e772      	b.n	5ae6 <strstr+0x4a>
    5c00:	4643      	mov	r3, r8
    5c02:	1ae3      	subs	r3, r4, r3
    5c04:	4543      	cmp	r3, r8
    5c06:	d200      	bcs.n	5c0a <strstr+0x16e>
    5c08:	4643      	mov	r3, r8
    5c0a:	3301      	adds	r3, #1
    5c0c:	9303      	str	r3, [sp, #12]
    5c0e:	2300      	movs	r3, #0
    5c10:	4642      	mov	r2, r8
    5c12:	4699      	mov	r9, r3
    5c14:	3301      	adds	r3, #1
    5c16:	1a9b      	subs	r3, r3, r2
    5c18:	464a      	mov	r2, r9
    5c1a:	46b3      	mov	fp, r6
    5c1c:	46b1      	mov	r9, r6
    5c1e:	0038      	movs	r0, r7
    5c20:	469a      	mov	sl, r3
    5c22:	0016      	movs	r6, r2
    5c24:	44c3      	add	fp, r8
    5c26:	19a7      	adds	r7, r4, r6
    5c28:	1a3a      	subs	r2, r7, r0
    5c2a:	2100      	movs	r1, #0
    5c2c:	4448      	add	r0, r9
    5c2e:	f003 ffd7 	bl	9be0 <memchr>
    5c32:	2800      	cmp	r0, #0
    5c34:	d000      	beq.n	5c38 <strstr+0x19c>
    5c36:	e776      	b.n	5b26 <strstr+0x8a>
    5c38:	2f00      	cmp	r7, #0
    5c3a:	d100      	bne.n	5c3e <strstr+0x1a2>
    5c3c:	e773      	b.n	5b26 <strstr+0x8a>
    5c3e:	464b      	mov	r3, r9
    5c40:	1998      	adds	r0, r3, r6
    5c42:	4544      	cmp	r4, r8
    5c44:	d90f      	bls.n	5c66 <strstr+0x1ca>
    5c46:	465b      	mov	r3, fp
    5c48:	5d99      	ldrb	r1, [r3, r6]
    5c4a:	4643      	mov	r3, r8
    5c4c:	4648      	mov	r0, r9
    5c4e:	5cea      	ldrb	r2, [r5, r3]
    5c50:	1980      	adds	r0, r0, r6
    5c52:	4291      	cmp	r1, r2
    5c54:	d004      	beq.n	5c60 <strstr+0x1c4>
    5c56:	e016      	b.n	5c86 <strstr+0x1ea>
    5c58:	5ce9      	ldrb	r1, [r5, r3]
    5c5a:	5cc2      	ldrb	r2, [r0, r3]
    5c5c:	4291      	cmp	r1, r2
    5c5e:	d112      	bne.n	5c86 <strstr+0x1ea>
    5c60:	3301      	adds	r3, #1
    5c62:	429c      	cmp	r4, r3
    5c64:	d1f8      	bne.n	5c58 <strstr+0x1bc>
    5c66:	4643      	mov	r3, r8
    5c68:	3b01      	subs	r3, #1
    5c6a:	d200      	bcs.n	5c6e <strstr+0x1d2>
    5c6c:	e73b      	b.n	5ae6 <strstr+0x4a>
    5c6e:	5cc1      	ldrb	r1, [r0, r3]
    5c70:	5cea      	ldrb	r2, [r5, r3]
    5c72:	4291      	cmp	r1, r2
    5c74:	d004      	beq.n	5c80 <strstr+0x1e4>
    5c76:	e00a      	b.n	5c8e <strstr+0x1f2>
    5c78:	5ce9      	ldrb	r1, [r5, r3]
    5c7a:	5cc2      	ldrb	r2, [r0, r3]
    5c7c:	4291      	cmp	r1, r2
    5c7e:	d106      	bne.n	5c8e <strstr+0x1f2>
    5c80:	3b01      	subs	r3, #1
    5c82:	d2f9      	bcs.n	5c78 <strstr+0x1dc>
    5c84:	e72f      	b.n	5ae6 <strstr+0x4a>
    5c86:	4456      	add	r6, sl
    5c88:	18f6      	adds	r6, r6, r3
    5c8a:	0038      	movs	r0, r7
    5c8c:	e7cb      	b.n	5c26 <strstr+0x18a>
    5c8e:	9b03      	ldr	r3, [sp, #12]
    5c90:	0038      	movs	r0, r7
    5c92:	469c      	mov	ip, r3
    5c94:	4466      	add	r6, ip
    5c96:	e7c6      	b.n	5c26 <strstr+0x18a>
    5c98:	4642      	mov	r2, r8
    5c9a:	e7a0      	b.n	5bde <strstr+0x142>
    5c9c:	46b9      	mov	r9, r7
    5c9e:	4650      	mov	r0, sl
    5ca0:	4448      	add	r0, r9
    5ca2:	e720      	b.n	5ae6 <strstr+0x4a>

00005ca4 <_strtol_l.isra.0>:
    5ca4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5ca6:	4657      	mov	r7, sl
    5ca8:	464e      	mov	r6, r9
    5caa:	46de      	mov	lr, fp
    5cac:	4645      	mov	r5, r8
    5cae:	b5e0      	push	{r5, r6, r7, lr}
    5cb0:	001e      	movs	r6, r3
    5cb2:	2308      	movs	r3, #8
    5cb4:	b083      	sub	sp, #12
    5cb6:	9001      	str	r0, [sp, #4]
    5cb8:	9100      	str	r1, [sp, #0]
    5cba:	4692      	mov	sl, r2
    5cbc:	000f      	movs	r7, r1
    5cbe:	4699      	mov	r9, r3
    5cc0:	e000      	b.n	5cc4 <_strtol_l.isra.0+0x20>
    5cc2:	002f      	movs	r7, r5
    5cc4:	980c      	ldr	r0, [sp, #48]	; 0x30
    5cc6:	783c      	ldrb	r4, [r7, #0]
    5cc8:	f003 fc68 	bl	959c <__locale_ctype_ptr_l>
    5ccc:	464a      	mov	r2, r9
    5cce:	1900      	adds	r0, r0, r4
    5cd0:	7843      	ldrb	r3, [r0, #1]
    5cd2:	1c7d      	adds	r5, r7, #1
    5cd4:	421a      	tst	r2, r3
    5cd6:	d1f4      	bne.n	5cc2 <_strtol_l.isra.0+0x1e>
    5cd8:	2c2d      	cmp	r4, #45	; 0x2d
    5cda:	d04f      	beq.n	5d7c <_strtol_l.isra.0+0xd8>
    5cdc:	2300      	movs	r3, #0
    5cde:	4698      	mov	r8, r3
    5ce0:	2c2b      	cmp	r4, #43	; 0x2b
    5ce2:	d05c      	beq.n	5d9e <_strtol_l.isra.0+0xfa>
    5ce4:	2e00      	cmp	r6, #0
    5ce6:	d003      	beq.n	5cf0 <_strtol_l.isra.0+0x4c>
    5ce8:	2e10      	cmp	r6, #16
    5cea:	d05b      	beq.n	5da4 <_strtol_l.isra.0+0x100>
    5cec:	0037      	movs	r7, r6
    5cee:	e003      	b.n	5cf8 <_strtol_l.isra.0+0x54>
    5cf0:	2c30      	cmp	r4, #48	; 0x30
    5cf2:	d063      	beq.n	5dbc <_strtol_l.isra.0+0x118>
    5cf4:	270a      	movs	r7, #10
    5cf6:	260a      	movs	r6, #10
    5cf8:	4b35      	ldr	r3, [pc, #212]	; (5dd0 <_strtol_l.isra.0+0x12c>)
    5cfa:	0039      	movs	r1, r7
    5cfc:	4443      	add	r3, r8
    5cfe:	0018      	movs	r0, r3
    5d00:	4699      	mov	r9, r3
    5d02:	f7fd fd17 	bl	3734 <__aeabi_uidivmod>
    5d06:	4648      	mov	r0, r9
    5d08:	468b      	mov	fp, r1
    5d0a:	0039      	movs	r1, r7
    5d0c:	f7fd fc8c 	bl	3628 <__udivsi3>
    5d10:	2200      	movs	r2, #0
    5d12:	0001      	movs	r1, r0
    5d14:	2000      	movs	r0, #0
    5d16:	0023      	movs	r3, r4
    5d18:	3b30      	subs	r3, #48	; 0x30
    5d1a:	2b09      	cmp	r3, #9
    5d1c:	d907      	bls.n	5d2e <_strtol_l.isra.0+0x8a>
    5d1e:	3b11      	subs	r3, #17
    5d20:	2b19      	cmp	r3, #25
    5d22:	d903      	bls.n	5d2c <_strtol_l.isra.0+0x88>
    5d24:	0023      	movs	r3, r4
    5d26:	3b61      	subs	r3, #97	; 0x61
    5d28:	2b19      	cmp	r3, #25
    5d2a:	d80d      	bhi.n	5d48 <_strtol_l.isra.0+0xa4>
    5d2c:	330a      	adds	r3, #10
    5d2e:	429e      	cmp	r6, r3
    5d30:	dd0a      	ble.n	5d48 <_strtol_l.isra.0+0xa4>
    5d32:	1c54      	adds	r4, r2, #1
    5d34:	d005      	beq.n	5d42 <_strtol_l.isra.0+0x9e>
    5d36:	4281      	cmp	r1, r0
    5d38:	d31d      	bcc.n	5d76 <_strtol_l.isra.0+0xd2>
    5d3a:	d01a      	beq.n	5d72 <_strtol_l.isra.0+0xce>
    5d3c:	2201      	movs	r2, #1
    5d3e:	4378      	muls	r0, r7
    5d40:	1818      	adds	r0, r3, r0
    5d42:	782c      	ldrb	r4, [r5, #0]
    5d44:	3501      	adds	r5, #1
    5d46:	e7e6      	b.n	5d16 <_strtol_l.isra.0+0x72>
    5d48:	1c53      	adds	r3, r2, #1
    5d4a:	d01c      	beq.n	5d86 <_strtol_l.isra.0+0xe2>
    5d4c:	4643      	mov	r3, r8
    5d4e:	2b00      	cmp	r3, #0
    5d50:	d000      	beq.n	5d54 <_strtol_l.isra.0+0xb0>
    5d52:	4240      	negs	r0, r0
    5d54:	4653      	mov	r3, sl
    5d56:	2b00      	cmp	r3, #0
    5d58:	d004      	beq.n	5d64 <_strtol_l.isra.0+0xc0>
    5d5a:	9b00      	ldr	r3, [sp, #0]
    5d5c:	2a00      	cmp	r2, #0
    5d5e:	d11c      	bne.n	5d9a <_strtol_l.isra.0+0xf6>
    5d60:	4652      	mov	r2, sl
    5d62:	6013      	str	r3, [r2, #0]
    5d64:	b003      	add	sp, #12
    5d66:	bc3c      	pop	{r2, r3, r4, r5}
    5d68:	4690      	mov	r8, r2
    5d6a:	4699      	mov	r9, r3
    5d6c:	46a2      	mov	sl, r4
    5d6e:	46ab      	mov	fp, r5
    5d70:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5d72:	459b      	cmp	fp, r3
    5d74:	dae2      	bge.n	5d3c <_strtol_l.isra.0+0x98>
    5d76:	2201      	movs	r2, #1
    5d78:	4252      	negs	r2, r2
    5d7a:	e7e2      	b.n	5d42 <_strtol_l.isra.0+0x9e>
    5d7c:	2301      	movs	r3, #1
    5d7e:	782c      	ldrb	r4, [r5, #0]
    5d80:	4698      	mov	r8, r3
    5d82:	1cbd      	adds	r5, r7, #2
    5d84:	e7ae      	b.n	5ce4 <_strtol_l.isra.0+0x40>
    5d86:	2322      	movs	r3, #34	; 0x22
    5d88:	9a01      	ldr	r2, [sp, #4]
    5d8a:	4648      	mov	r0, r9
    5d8c:	6013      	str	r3, [r2, #0]
    5d8e:	4653      	mov	r3, sl
    5d90:	2b00      	cmp	r3, #0
    5d92:	d0e7      	beq.n	5d64 <_strtol_l.isra.0+0xc0>
    5d94:	1e6b      	subs	r3, r5, #1
    5d96:	4648      	mov	r0, r9
    5d98:	e7e2      	b.n	5d60 <_strtol_l.isra.0+0xbc>
    5d9a:	4681      	mov	r9, r0
    5d9c:	e7fa      	b.n	5d94 <_strtol_l.isra.0+0xf0>
    5d9e:	782c      	ldrb	r4, [r5, #0]
    5da0:	1cbd      	adds	r5, r7, #2
    5da2:	e79f      	b.n	5ce4 <_strtol_l.isra.0+0x40>
    5da4:	2c30      	cmp	r4, #48	; 0x30
    5da6:	d111      	bne.n	5dcc <_strtol_l.isra.0+0x128>
    5da8:	2220      	movs	r2, #32
    5daa:	782b      	ldrb	r3, [r5, #0]
    5dac:	4393      	bics	r3, r2
    5dae:	2b58      	cmp	r3, #88	; 0x58
    5db0:	d10c      	bne.n	5dcc <_strtol_l.isra.0+0x128>
    5db2:	786c      	ldrb	r4, [r5, #1]
    5db4:	2710      	movs	r7, #16
    5db6:	3502      	adds	r5, #2
    5db8:	2610      	movs	r6, #16
    5dba:	e79d      	b.n	5cf8 <_strtol_l.isra.0+0x54>
    5dbc:	2220      	movs	r2, #32
    5dbe:	782b      	ldrb	r3, [r5, #0]
    5dc0:	4393      	bics	r3, r2
    5dc2:	2b58      	cmp	r3, #88	; 0x58
    5dc4:	d0f5      	beq.n	5db2 <_strtol_l.isra.0+0x10e>
    5dc6:	2708      	movs	r7, #8
    5dc8:	2608      	movs	r6, #8
    5dca:	e795      	b.n	5cf8 <_strtol_l.isra.0+0x54>
    5dcc:	2710      	movs	r7, #16
    5dce:	e793      	b.n	5cf8 <_strtol_l.isra.0+0x54>
    5dd0:	7fffffff 	.word	0x7fffffff

00005dd4 <_strtol_r>:
    5dd4:	b510      	push	{r4, lr}
    5dd6:	4c06      	ldr	r4, [pc, #24]	; (5df0 <_strtol_r+0x1c>)
    5dd8:	b082      	sub	sp, #8
    5dda:	6824      	ldr	r4, [r4, #0]
    5ddc:	6b64      	ldr	r4, [r4, #52]	; 0x34
    5dde:	2c00      	cmp	r4, #0
    5de0:	d004      	beq.n	5dec <_strtol_r+0x18>
    5de2:	9400      	str	r4, [sp, #0]
    5de4:	f7ff ff5e 	bl	5ca4 <_strtol_l.isra.0>
    5de8:	b002      	add	sp, #8
    5dea:	bd10      	pop	{r4, pc}
    5dec:	4c01      	ldr	r4, [pc, #4]	; (5df4 <_strtol_r+0x20>)
    5dee:	e7f8      	b.n	5de2 <_strtol_r+0xe>
    5df0:	20000090 	.word	0x20000090
    5df4:	200004c4 	.word	0x200004c4

00005df8 <_svfprintf_r>:
    5df8:	b5f0      	push	{r4, r5, r6, r7, lr}
    5dfa:	46de      	mov	lr, fp
    5dfc:	4645      	mov	r5, r8
    5dfe:	4657      	mov	r7, sl
    5e00:	464e      	mov	r6, r9
    5e02:	b5e0      	push	{r5, r6, r7, lr}
    5e04:	b0c3      	sub	sp, #268	; 0x10c
    5e06:	000d      	movs	r5, r1
    5e08:	9106      	str	r1, [sp, #24]
    5e0a:	0014      	movs	r4, r2
    5e0c:	930f      	str	r3, [sp, #60]	; 0x3c
    5e0e:	9009      	str	r0, [sp, #36]	; 0x24
    5e10:	f003 fbd8 	bl	95c4 <_localeconv_r>
    5e14:	6803      	ldr	r3, [r0, #0]
    5e16:	0018      	movs	r0, r3
    5e18:	9319      	str	r3, [sp, #100]	; 0x64
    5e1a:	f7ff fcab 	bl	5774 <strlen>
    5e1e:	9018      	str	r0, [sp, #96]	; 0x60
    5e20:	89ab      	ldrh	r3, [r5, #12]
    5e22:	061b      	lsls	r3, r3, #24
    5e24:	d505      	bpl.n	5e32 <_svfprintf_r+0x3a>
    5e26:	692b      	ldr	r3, [r5, #16]
    5e28:	9307      	str	r3, [sp, #28]
    5e2a:	2b00      	cmp	r3, #0
    5e2c:	d101      	bne.n	5e32 <_svfprintf_r+0x3a>
    5e2e:	f001 f863 	bl	6ef8 <_svfprintf_r+0x1100>
    5e32:	ab32      	add	r3, sp, #200	; 0xc8
    5e34:	9325      	str	r3, [sp, #148]	; 0x94
    5e36:	2300      	movs	r3, #0
    5e38:	46a3      	mov	fp, r4
    5e3a:	af25      	add	r7, sp, #148	; 0x94
    5e3c:	60bb      	str	r3, [r7, #8]
    5e3e:	607b      	str	r3, [r7, #4]
    5e40:	9314      	str	r3, [sp, #80]	; 0x50
    5e42:	9316      	str	r3, [sp, #88]	; 0x58
    5e44:	9315      	str	r3, [sp, #84]	; 0x54
    5e46:	ae32      	add	r6, sp, #200	; 0xc8
    5e48:	9317      	str	r3, [sp, #92]	; 0x5c
    5e4a:	931a      	str	r3, [sp, #104]	; 0x68
    5e4c:	930a      	str	r3, [sp, #40]	; 0x28
    5e4e:	465b      	mov	r3, fp
    5e50:	781b      	ldrb	r3, [r3, #0]
    5e52:	465c      	mov	r4, fp
    5e54:	2b00      	cmp	r3, #0
    5e56:	d01c      	beq.n	5e92 <_svfprintf_r+0x9a>
    5e58:	2b25      	cmp	r3, #37	; 0x25
    5e5a:	d102      	bne.n	5e62 <_svfprintf_r+0x6a>
    5e5c:	e019      	b.n	5e92 <_svfprintf_r+0x9a>
    5e5e:	2b25      	cmp	r3, #37	; 0x25
    5e60:	d003      	beq.n	5e6a <_svfprintf_r+0x72>
    5e62:	3401      	adds	r4, #1
    5e64:	7823      	ldrb	r3, [r4, #0]
    5e66:	2b00      	cmp	r3, #0
    5e68:	d1f9      	bne.n	5e5e <_svfprintf_r+0x66>
    5e6a:	465b      	mov	r3, fp
    5e6c:	1ae5      	subs	r5, r4, r3
    5e6e:	d010      	beq.n	5e92 <_svfprintf_r+0x9a>
    5e70:	465b      	mov	r3, fp
    5e72:	6033      	str	r3, [r6, #0]
    5e74:	68bb      	ldr	r3, [r7, #8]
    5e76:	6075      	str	r5, [r6, #4]
    5e78:	195b      	adds	r3, r3, r5
    5e7a:	60bb      	str	r3, [r7, #8]
    5e7c:	687b      	ldr	r3, [r7, #4]
    5e7e:	3301      	adds	r3, #1
    5e80:	607b      	str	r3, [r7, #4]
    5e82:	2b07      	cmp	r3, #7
    5e84:	dc2e      	bgt.n	5ee4 <_svfprintf_r+0xec>
    5e86:	3608      	adds	r6, #8
    5e88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5e8a:	469c      	mov	ip, r3
    5e8c:	44ac      	add	ip, r5
    5e8e:	4663      	mov	r3, ip
    5e90:	930a      	str	r3, [sp, #40]	; 0x28
    5e92:	7823      	ldrb	r3, [r4, #0]
    5e94:	2b00      	cmp	r3, #0
    5e96:	d02e      	beq.n	5ef6 <_svfprintf_r+0xfe>
    5e98:	1c63      	adds	r3, r4, #1
    5e9a:	469b      	mov	fp, r3
    5e9c:	2300      	movs	r3, #0
    5e9e:	aa16      	add	r2, sp, #88	; 0x58
    5ea0:	77d3      	strb	r3, [r2, #31]
    5ea2:	2201      	movs	r2, #1
    5ea4:	4252      	negs	r2, r2
    5ea6:	4692      	mov	sl, r2
    5ea8:	2200      	movs	r2, #0
    5eaa:	2100      	movs	r1, #0
    5eac:	920b      	str	r2, [sp, #44]	; 0x2c
    5eae:	3220      	adds	r2, #32
    5eb0:	4691      	mov	r9, r2
    5eb2:	3220      	adds	r2, #32
    5eb4:	7863      	ldrb	r3, [r4, #1]
    5eb6:	4688      	mov	r8, r1
    5eb8:	2000      	movs	r0, #0
    5eba:	2400      	movs	r4, #0
    5ebc:	4694      	mov	ip, r2
    5ebe:	4659      	mov	r1, fp
    5ec0:	3101      	adds	r1, #1
    5ec2:	001a      	movs	r2, r3
    5ec4:	3a20      	subs	r2, #32
    5ec6:	2a58      	cmp	r2, #88	; 0x58
    5ec8:	d900      	bls.n	5ecc <_svfprintf_r+0xd4>
    5eca:	e2fd      	b.n	64c8 <_svfprintf_r+0x6d0>
    5ecc:	4dd7      	ldr	r5, [pc, #860]	; (622c <_svfprintf_r+0x434>)
    5ece:	0092      	lsls	r2, r2, #2
    5ed0:	58aa      	ldr	r2, [r5, r2]
    5ed2:	4697      	mov	pc, r2
    5ed4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5ed6:	920f      	str	r2, [sp, #60]	; 0x3c
    5ed8:	425b      	negs	r3, r3
    5eda:	930b      	str	r3, [sp, #44]	; 0x2c
    5edc:	2304      	movs	r3, #4
    5ede:	431c      	orrs	r4, r3
    5ee0:	780b      	ldrb	r3, [r1, #0]
    5ee2:	e7ed      	b.n	5ec0 <_svfprintf_r+0xc8>
    5ee4:	003a      	movs	r2, r7
    5ee6:	9906      	ldr	r1, [sp, #24]
    5ee8:	9809      	ldr	r0, [sp, #36]	; 0x24
    5eea:	f005 fe5d 	bl	bba8 <__ssprint_r>
    5eee:	2800      	cmp	r0, #0
    5ef0:	d109      	bne.n	5f06 <_svfprintf_r+0x10e>
    5ef2:	ae32      	add	r6, sp, #200	; 0xc8
    5ef4:	e7c8      	b.n	5e88 <_svfprintf_r+0x90>
    5ef6:	68bb      	ldr	r3, [r7, #8]
    5ef8:	2b00      	cmp	r3, #0
    5efa:	d004      	beq.n	5f06 <_svfprintf_r+0x10e>
    5efc:	003a      	movs	r2, r7
    5efe:	9906      	ldr	r1, [sp, #24]
    5f00:	9809      	ldr	r0, [sp, #36]	; 0x24
    5f02:	f005 fe51 	bl	bba8 <__ssprint_r>
    5f06:	9b06      	ldr	r3, [sp, #24]
    5f08:	899b      	ldrh	r3, [r3, #12]
    5f0a:	065b      	lsls	r3, r3, #25
    5f0c:	d501      	bpl.n	5f12 <_svfprintf_r+0x11a>
    5f0e:	f001 f8ce 	bl	70ae <_svfprintf_r+0x12b6>
    5f12:	980a      	ldr	r0, [sp, #40]	; 0x28
    5f14:	b043      	add	sp, #268	; 0x10c
    5f16:	bc3c      	pop	{r2, r3, r4, r5}
    5f18:	4690      	mov	r8, r2
    5f1a:	4699      	mov	r9, r3
    5f1c:	46a2      	mov	sl, r4
    5f1e:	46ab      	mov	fp, r5
    5f20:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5f22:	2201      	movs	r2, #1
    5f24:	780b      	ldrb	r3, [r1, #0]
    5f26:	4690      	mov	r8, r2
    5f28:	202b      	movs	r0, #43	; 0x2b
    5f2a:	e7c9      	b.n	5ec0 <_svfprintf_r+0xc8>
    5f2c:	1c4b      	adds	r3, r1, #1
    5f2e:	469b      	mov	fp, r3
    5f30:	780b      	ldrb	r3, [r1, #0]
    5f32:	2b2a      	cmp	r3, #42	; 0x2a
    5f34:	d101      	bne.n	5f3a <_svfprintf_r+0x142>
    5f36:	f001 fa1b 	bl	7370 <_svfprintf_r+0x1578>
    5f3a:	001a      	movs	r2, r3
    5f3c:	2100      	movs	r1, #0
    5f3e:	3a30      	subs	r2, #48	; 0x30
    5f40:	468a      	mov	sl, r1
    5f42:	4659      	mov	r1, fp
    5f44:	2a09      	cmp	r2, #9
    5f46:	d8bc      	bhi.n	5ec2 <_svfprintf_r+0xca>
    5f48:	0003      	movs	r3, r0
    5f4a:	0011      	movs	r1, r2
    5f4c:	4650      	mov	r0, sl
    5f4e:	465a      	mov	r2, fp
    5f50:	469a      	mov	sl, r3
    5f52:	46a3      	mov	fp, r4
    5f54:	0083      	lsls	r3, r0, #2
    5f56:	181b      	adds	r3, r3, r0
    5f58:	7814      	ldrb	r4, [r2, #0]
    5f5a:	005b      	lsls	r3, r3, #1
    5f5c:	1858      	adds	r0, r3, r1
    5f5e:	0021      	movs	r1, r4
    5f60:	1c53      	adds	r3, r2, #1
    5f62:	3930      	subs	r1, #48	; 0x30
    5f64:	001a      	movs	r2, r3
    5f66:	2909      	cmp	r1, #9
    5f68:	d9f4      	bls.n	5f54 <_svfprintf_r+0x15c>
    5f6a:	4652      	mov	r2, sl
    5f6c:	0019      	movs	r1, r3
    5f6e:	4682      	mov	sl, r0
    5f70:	0023      	movs	r3, r4
    5f72:	0010      	movs	r0, r2
    5f74:	465c      	mov	r4, fp
    5f76:	e7a4      	b.n	5ec2 <_svfprintf_r+0xca>
    5f78:	2380      	movs	r3, #128	; 0x80
    5f7a:	431c      	orrs	r4, r3
    5f7c:	780b      	ldrb	r3, [r1, #0]
    5f7e:	e79f      	b.n	5ec0 <_svfprintf_r+0xc8>
    5f80:	468b      	mov	fp, r1
    5f82:	4641      	mov	r1, r8
    5f84:	9312      	str	r3, [sp, #72]	; 0x48
    5f86:	2900      	cmp	r1, #0
    5f88:	d001      	beq.n	5f8e <_svfprintf_r+0x196>
    5f8a:	f001 fa1f 	bl	73cc <_svfprintf_r+0x15d4>
    5f8e:	2310      	movs	r3, #16
    5f90:	431c      	orrs	r4, r3
    5f92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    5f94:	06a3      	lsls	r3, r4, #26
    5f96:	d501      	bpl.n	5f9c <_svfprintf_r+0x1a4>
    5f98:	f000 fe88 	bl	6cac <_svfprintf_r+0xeb4>
    5f9c:	06e3      	lsls	r3, r4, #27
    5f9e:	d501      	bpl.n	5fa4 <_svfprintf_r+0x1ac>
    5fa0:	f000 fd80 	bl	6aa4 <_svfprintf_r+0xcac>
    5fa4:	0663      	lsls	r3, r4, #25
    5fa6:	d401      	bmi.n	5fac <_svfprintf_r+0x1b4>
    5fa8:	f000 fd7c 	bl	6aa4 <_svfprintf_r+0xcac>
    5fac:	2100      	movs	r1, #0
    5fae:	5e53      	ldrsh	r3, [r2, r1]
    5fb0:	930c      	str	r3, [sp, #48]	; 0x30
    5fb2:	3204      	adds	r2, #4
    5fb4:	17db      	asrs	r3, r3, #31
    5fb6:	930d      	str	r3, [sp, #52]	; 0x34
    5fb8:	920f      	str	r2, [sp, #60]	; 0x3c
    5fba:	d501      	bpl.n	5fc0 <_svfprintf_r+0x1c8>
    5fbc:	f000 fe86 	bl	6ccc <_svfprintf_r+0xed4>
    5fc0:	990c      	ldr	r1, [sp, #48]	; 0x30
    5fc2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5fc4:	0008      	movs	r0, r1
    5fc6:	ab16      	add	r3, sp, #88	; 0x58
    5fc8:	7fdb      	ldrb	r3, [r3, #31]
    5fca:	4310      	orrs	r0, r2
    5fcc:	4698      	mov	r8, r3
    5fce:	0002      	movs	r2, r0
    5fd0:	2301      	movs	r3, #1
    5fd2:	4651      	mov	r1, sl
    5fd4:	3101      	adds	r1, #1
    5fd6:	d100      	bne.n	5fda <_svfprintf_r+0x1e2>
    5fd8:	e0ff      	b.n	61da <_svfprintf_r+0x3e2>
    5fda:	2180      	movs	r1, #128	; 0x80
    5fdc:	0020      	movs	r0, r4
    5fde:	4388      	bics	r0, r1
    5fe0:	9008      	str	r0, [sp, #32]
    5fe2:	2a00      	cmp	r2, #0
    5fe4:	d000      	beq.n	5fe8 <_svfprintf_r+0x1f0>
    5fe6:	e0fc      	b.n	61e2 <_svfprintf_r+0x3ea>
    5fe8:	4652      	mov	r2, sl
    5fea:	2a00      	cmp	r2, #0
    5fec:	d001      	beq.n	5ff2 <_svfprintf_r+0x1fa>
    5fee:	f000 fc2c 	bl	684a <_svfprintf_r+0xa52>
    5ff2:	2b00      	cmp	r3, #0
    5ff4:	d001      	beq.n	5ffa <_svfprintf_r+0x202>
    5ff6:	f000 fd04 	bl	6a02 <_svfprintf_r+0xc0a>
    5ffa:	2001      	movs	r0, #1
    5ffc:	ab32      	add	r3, sp, #200	; 0xc8
    5ffe:	4020      	ands	r0, r4
    6000:	900e      	str	r0, [sp, #56]	; 0x38
    6002:	9311      	str	r3, [sp, #68]	; 0x44
    6004:	d008      	beq.n	6018 <_svfprintf_r+0x220>
    6006:	2327      	movs	r3, #39	; 0x27
    6008:	2130      	movs	r1, #48	; 0x30
    600a:	aa28      	add	r2, sp, #160	; 0xa0
    600c:	54d1      	strb	r1, [r2, r3]
    600e:	aa16      	add	r2, sp, #88	; 0x58
    6010:	4694      	mov	ip, r2
    6012:	3348      	adds	r3, #72	; 0x48
    6014:	4463      	add	r3, ip
    6016:	9311      	str	r3, [sp, #68]	; 0x44
    6018:	4653      	mov	r3, sl
    601a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    601c:	9307      	str	r3, [sp, #28]
    601e:	4592      	cmp	sl, r2
    6020:	da00      	bge.n	6024 <_svfprintf_r+0x22c>
    6022:	9207      	str	r2, [sp, #28]
    6024:	2300      	movs	r3, #0
    6026:	9313      	str	r3, [sp, #76]	; 0x4c
    6028:	4643      	mov	r3, r8
    602a:	2b00      	cmp	r3, #0
    602c:	d002      	beq.n	6034 <_svfprintf_r+0x23c>
    602e:	9b07      	ldr	r3, [sp, #28]
    6030:	3301      	adds	r3, #1
    6032:	9307      	str	r3, [sp, #28]
    6034:	2302      	movs	r3, #2
    6036:	9a08      	ldr	r2, [sp, #32]
    6038:	401a      	ands	r2, r3
    603a:	4691      	mov	r9, r2
    603c:	d002      	beq.n	6044 <_svfprintf_r+0x24c>
    603e:	9b07      	ldr	r3, [sp, #28]
    6040:	3302      	adds	r3, #2
    6042:	9307      	str	r3, [sp, #28]
    6044:	2384      	movs	r3, #132	; 0x84
    6046:	9a08      	ldr	r2, [sp, #32]
    6048:	401a      	ands	r2, r3
    604a:	9210      	str	r2, [sp, #64]	; 0x40
    604c:	d000      	beq.n	6050 <_svfprintf_r+0x258>
    604e:	e24d      	b.n	64ec <_svfprintf_r+0x6f4>
    6050:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6052:	9a07      	ldr	r2, [sp, #28]
    6054:	1a9c      	subs	r4, r3, r2
    6056:	2c00      	cmp	r4, #0
    6058:	dc00      	bgt.n	605c <_svfprintf_r+0x264>
    605a:	e247      	b.n	64ec <_svfprintf_r+0x6f4>
    605c:	4974      	ldr	r1, [pc, #464]	; (6230 <_svfprintf_r+0x438>)
    605e:	68ba      	ldr	r2, [r7, #8]
    6060:	687b      	ldr	r3, [r7, #4]
    6062:	4688      	mov	r8, r1
    6064:	2c10      	cmp	r4, #16
    6066:	dd1f      	ble.n	60a8 <_svfprintf_r+0x2b0>
    6068:	0031      	movs	r1, r6
    606a:	2510      	movs	r5, #16
    606c:	4646      	mov	r6, r8
    606e:	e003      	b.n	6078 <_svfprintf_r+0x280>
    6070:	3c10      	subs	r4, #16
    6072:	3108      	adds	r1, #8
    6074:	2c10      	cmp	r4, #16
    6076:	dd15      	ble.n	60a4 <_svfprintf_r+0x2ac>
    6078:	3210      	adds	r2, #16
    607a:	3301      	adds	r3, #1
    607c:	600e      	str	r6, [r1, #0]
    607e:	604d      	str	r5, [r1, #4]
    6080:	60ba      	str	r2, [r7, #8]
    6082:	607b      	str	r3, [r7, #4]
    6084:	2b07      	cmp	r3, #7
    6086:	ddf3      	ble.n	6070 <_svfprintf_r+0x278>
    6088:	003a      	movs	r2, r7
    608a:	9906      	ldr	r1, [sp, #24]
    608c:	9809      	ldr	r0, [sp, #36]	; 0x24
    608e:	f005 fd8b 	bl	bba8 <__ssprint_r>
    6092:	2800      	cmp	r0, #0
    6094:	d000      	beq.n	6098 <_svfprintf_r+0x2a0>
    6096:	e736      	b.n	5f06 <_svfprintf_r+0x10e>
    6098:	3c10      	subs	r4, #16
    609a:	68ba      	ldr	r2, [r7, #8]
    609c:	687b      	ldr	r3, [r7, #4]
    609e:	a932      	add	r1, sp, #200	; 0xc8
    60a0:	2c10      	cmp	r4, #16
    60a2:	dce9      	bgt.n	6078 <_svfprintf_r+0x280>
    60a4:	46b0      	mov	r8, r6
    60a6:	000e      	movs	r6, r1
    60a8:	4641      	mov	r1, r8
    60aa:	6074      	str	r4, [r6, #4]
    60ac:	3301      	adds	r3, #1
    60ae:	18a4      	adds	r4, r4, r2
    60b0:	6031      	str	r1, [r6, #0]
    60b2:	60bc      	str	r4, [r7, #8]
    60b4:	607b      	str	r3, [r7, #4]
    60b6:	2b07      	cmp	r3, #7
    60b8:	dd01      	ble.n	60be <_svfprintf_r+0x2c6>
    60ba:	f000 fca8 	bl	6a0e <_svfprintf_r+0xc16>
    60be:	ab16      	add	r3, sp, #88	; 0x58
    60c0:	7fdb      	ldrb	r3, [r3, #31]
    60c2:	3608      	adds	r6, #8
    60c4:	4698      	mov	r8, r3
    60c6:	e212      	b.n	64ee <_svfprintf_r+0x6f6>
    60c8:	468b      	mov	fp, r1
    60ca:	4641      	mov	r1, r8
    60cc:	9312      	str	r3, [sp, #72]	; 0x48
    60ce:	2900      	cmp	r1, #0
    60d0:	d001      	beq.n	60d6 <_svfprintf_r+0x2de>
    60d2:	f001 f977 	bl	73c4 <_svfprintf_r+0x15cc>
    60d6:	2207      	movs	r2, #7
    60d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    60da:	3307      	adds	r3, #7
    60dc:	4393      	bics	r3, r2
    60de:	3201      	adds	r2, #1
    60e0:	4694      	mov	ip, r2
    60e2:	449c      	add	ip, r3
    60e4:	4662      	mov	r2, ip
    60e6:	920f      	str	r2, [sp, #60]	; 0x3c
    60e8:	681a      	ldr	r2, [r3, #0]
    60ea:	9216      	str	r2, [sp, #88]	; 0x58
    60ec:	685b      	ldr	r3, [r3, #4]
    60ee:	2201      	movs	r2, #1
    60f0:	9315      	str	r3, [sp, #84]	; 0x54
    60f2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    60f4:	9d16      	ldr	r5, [sp, #88]	; 0x58
    60f6:	005b      	lsls	r3, r3, #1
    60f8:	085b      	lsrs	r3, r3, #1
    60fa:	4698      	mov	r8, r3
    60fc:	4252      	negs	r2, r2
    60fe:	4b4d      	ldr	r3, [pc, #308]	; (6234 <_svfprintf_r+0x43c>)
    6100:	0028      	movs	r0, r5
    6102:	4641      	mov	r1, r8
    6104:	f007 f8bc 	bl	d280 <__aeabi_dcmpun>
    6108:	2800      	cmp	r0, #0
    610a:	d001      	beq.n	6110 <_svfprintf_r+0x318>
    610c:	f000 fdfd 	bl	6d0a <_svfprintf_r+0xf12>
    6110:	2201      	movs	r2, #1
    6112:	4b48      	ldr	r3, [pc, #288]	; (6234 <_svfprintf_r+0x43c>)
    6114:	4252      	negs	r2, r2
    6116:	0028      	movs	r0, r5
    6118:	4641      	mov	r1, r8
    611a:	f7ff f837 	bl	518c <__aeabi_dcmple>
    611e:	2800      	cmp	r0, #0
    6120:	d001      	beq.n	6126 <_svfprintf_r+0x32e>
    6122:	f000 fdf2 	bl	6d0a <_svfprintf_r+0xf12>
    6126:	2200      	movs	r2, #0
    6128:	2300      	movs	r3, #0
    612a:	9816      	ldr	r0, [sp, #88]	; 0x58
    612c:	9915      	ldr	r1, [sp, #84]	; 0x54
    612e:	f7ff f823 	bl	5178 <__aeabi_dcmplt>
    6132:	2800      	cmp	r0, #0
    6134:	d001      	beq.n	613a <_svfprintf_r+0x342>
    6136:	f001 f822 	bl	717e <_svfprintf_r+0x1386>
    613a:	ab16      	add	r3, sp, #88	; 0x58
    613c:	7fdb      	ldrb	r3, [r3, #31]
    613e:	4698      	mov	r8, r3
    6140:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6142:	2b47      	cmp	r3, #71	; 0x47
    6144:	dd01      	ble.n	614a <_svfprintf_r+0x352>
    6146:	f000 fec7 	bl	6ed8 <_svfprintf_r+0x10e0>
    614a:	4b3b      	ldr	r3, [pc, #236]	; (6238 <_svfprintf_r+0x440>)
    614c:	9311      	str	r3, [sp, #68]	; 0x44
    614e:	2380      	movs	r3, #128	; 0x80
    6150:	439c      	bics	r4, r3
    6152:	3b7d      	subs	r3, #125	; 0x7d
    6154:	9307      	str	r3, [sp, #28]
    6156:	930e      	str	r3, [sp, #56]	; 0x38
    6158:	2300      	movs	r3, #0
    615a:	9408      	str	r4, [sp, #32]
    615c:	469a      	mov	sl, r3
    615e:	9313      	str	r3, [sp, #76]	; 0x4c
    6160:	e762      	b.n	6028 <_svfprintf_r+0x230>
    6162:	2200      	movs	r2, #0
    6164:	3b30      	subs	r3, #48	; 0x30
    6166:	0015      	movs	r5, r2
    6168:	001a      	movs	r2, r3
    616a:	0003      	movs	r3, r0
    616c:	9407      	str	r4, [sp, #28]
    616e:	0008      	movs	r0, r1
    6170:	002c      	movs	r4, r5
    6172:	469b      	mov	fp, r3
    6174:	00a3      	lsls	r3, r4, #2
    6176:	191c      	adds	r4, r3, r4
    6178:	7803      	ldrb	r3, [r0, #0]
    617a:	0064      	lsls	r4, r4, #1
    617c:	1914      	adds	r4, r2, r4
    617e:	001a      	movs	r2, r3
    6180:	3101      	adds	r1, #1
    6182:	3a30      	subs	r2, #48	; 0x30
    6184:	0008      	movs	r0, r1
    6186:	2a09      	cmp	r2, #9
    6188:	d9f4      	bls.n	6174 <_svfprintf_r+0x37c>
    618a:	940b      	str	r4, [sp, #44]	; 0x2c
    618c:	4658      	mov	r0, fp
    618e:	9c07      	ldr	r4, [sp, #28]
    6190:	e697      	b.n	5ec2 <_svfprintf_r+0xca>
    6192:	2308      	movs	r3, #8
    6194:	431c      	orrs	r4, r3
    6196:	780b      	ldrb	r3, [r1, #0]
    6198:	e692      	b.n	5ec0 <_svfprintf_r+0xc8>
    619a:	9312      	str	r3, [sp, #72]	; 0x48
    619c:	2310      	movs	r3, #16
    619e:	431c      	orrs	r4, r3
    61a0:	468b      	mov	fp, r1
    61a2:	06a3      	lsls	r3, r4, #26
    61a4:	d500      	bpl.n	61a8 <_svfprintf_r+0x3b0>
    61a6:	e17b      	b.n	64a0 <_svfprintf_r+0x6a8>
    61a8:	06e3      	lsls	r3, r4, #27
    61aa:	d501      	bpl.n	61b0 <_svfprintf_r+0x3b8>
    61ac:	f000 fc7e 	bl	6aac <_svfprintf_r+0xcb4>
    61b0:	0663      	lsls	r3, r4, #25
    61b2:	d401      	bmi.n	61b8 <_svfprintf_r+0x3c0>
    61b4:	f000 fc7a 	bl	6aac <_svfprintf_r+0xcb4>
    61b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    61ba:	881a      	ldrh	r2, [r3, #0]
    61bc:	920c      	str	r2, [sp, #48]	; 0x30
    61be:	2200      	movs	r2, #0
    61c0:	3304      	adds	r3, #4
    61c2:	930f      	str	r3, [sp, #60]	; 0x3c
    61c4:	2300      	movs	r3, #0
    61c6:	920d      	str	r2, [sp, #52]	; 0x34
    61c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    61ca:	2100      	movs	r1, #0
    61cc:	a816      	add	r0, sp, #88	; 0x58
    61ce:	77c1      	strb	r1, [r0, #31]
    61d0:	4688      	mov	r8, r1
    61d2:	4651      	mov	r1, sl
    61d4:	3101      	adds	r1, #1
    61d6:	d000      	beq.n	61da <_svfprintf_r+0x3e2>
    61d8:	e6ff      	b.n	5fda <_svfprintf_r+0x1e2>
    61da:	2a00      	cmp	r2, #0
    61dc:	d100      	bne.n	61e0 <_svfprintf_r+0x3e8>
    61de:	e335      	b.n	684c <_svfprintf_r+0xa54>
    61e0:	9408      	str	r4, [sp, #32]
    61e2:	2b01      	cmp	r3, #1
    61e4:	d100      	bne.n	61e8 <_svfprintf_r+0x3f0>
    61e6:	e3e5      	b.n	69b4 <_svfprintf_r+0xbbc>
    61e8:	2b02      	cmp	r3, #2
    61ea:	d000      	beq.n	61ee <_svfprintf_r+0x3f6>
    61ec:	e362      	b.n	68b4 <_svfprintf_r+0xabc>
    61ee:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    61f0:	200f      	movs	r0, #15
    61f2:	46a1      	mov	r9, r4
    61f4:	46b4      	mov	ip, r6
    61f6:	ab32      	add	r3, sp, #200	; 0xc8
    61f8:	0019      	movs	r1, r3
    61fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    61fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    61fe:	0004      	movs	r4, r0
    6200:	464d      	mov	r5, r9
    6202:	4014      	ands	r4, r2
    6204:	5d2c      	ldrb	r4, [r5, r4]
    6206:	071e      	lsls	r6, r3, #28
    6208:	0915      	lsrs	r5, r2, #4
    620a:	3901      	subs	r1, #1
    620c:	432e      	orrs	r6, r5
    620e:	700c      	strb	r4, [r1, #0]
    6210:	091c      	lsrs	r4, r3, #4
    6212:	0023      	movs	r3, r4
    6214:	0034      	movs	r4, r6
    6216:	0032      	movs	r2, r6
    6218:	431c      	orrs	r4, r3
    621a:	d1f0      	bne.n	61fe <_svfprintf_r+0x406>
    621c:	920c      	str	r2, [sp, #48]	; 0x30
    621e:	930d      	str	r3, [sp, #52]	; 0x34
    6220:	ab32      	add	r3, sp, #200	; 0xc8
    6222:	1a5b      	subs	r3, r3, r1
    6224:	9111      	str	r1, [sp, #68]	; 0x44
    6226:	4666      	mov	r6, ip
    6228:	930e      	str	r3, [sp, #56]	; 0x38
    622a:	e6f5      	b.n	6018 <_svfprintf_r+0x220>
    622c:	0000e55c 	.word	0x0000e55c
    6230:	0000e704 	.word	0x0000e704
    6234:	7fefffff 	.word	0x7fefffff
    6238:	0000e6c0 	.word	0x0000e6c0
    623c:	9312      	str	r3, [sp, #72]	; 0x48
    623e:	2310      	movs	r3, #16
    6240:	431c      	orrs	r4, r3
    6242:	468b      	mov	fp, r1
    6244:	06a3      	lsls	r3, r4, #26
    6246:	d500      	bpl.n	624a <_svfprintf_r+0x452>
    6248:	e111      	b.n	646e <_svfprintf_r+0x676>
    624a:	06e3      	lsls	r3, r4, #27
    624c:	d501      	bpl.n	6252 <_svfprintf_r+0x45a>
    624e:	f000 fc31 	bl	6ab4 <_svfprintf_r+0xcbc>
    6252:	0663      	lsls	r3, r4, #25
    6254:	d401      	bmi.n	625a <_svfprintf_r+0x462>
    6256:	f000 fc2d 	bl	6ab4 <_svfprintf_r+0xcbc>
    625a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    625c:	881a      	ldrh	r2, [r3, #0]
    625e:	920c      	str	r2, [sp, #48]	; 0x30
    6260:	2200      	movs	r2, #0
    6262:	3304      	adds	r3, #4
    6264:	920d      	str	r2, [sp, #52]	; 0x34
    6266:	930f      	str	r3, [sp, #60]	; 0x3c
    6268:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    626a:	2301      	movs	r3, #1
    626c:	e7ad      	b.n	61ca <_svfprintf_r+0x3d2>
    626e:	468b      	mov	fp, r1
    6270:	4641      	mov	r1, r8
    6272:	9312      	str	r3, [sp, #72]	; 0x48
    6274:	2900      	cmp	r1, #0
    6276:	d001      	beq.n	627c <_svfprintf_r+0x484>
    6278:	f001 f890 	bl	739c <_svfprintf_r+0x15a4>
    627c:	4bb8      	ldr	r3, [pc, #736]	; (6560 <_svfprintf_r+0x768>)
    627e:	9317      	str	r3, [sp, #92]	; 0x5c
    6280:	06a3      	lsls	r3, r4, #26
    6282:	d500      	bpl.n	6286 <_svfprintf_r+0x48e>
    6284:	e0ab      	b.n	63de <_svfprintf_r+0x5e6>
    6286:	06e3      	lsls	r3, r4, #27
    6288:	d501      	bpl.n	628e <_svfprintf_r+0x496>
    628a:	f000 fc07 	bl	6a9c <_svfprintf_r+0xca4>
    628e:	0663      	lsls	r3, r4, #25
    6290:	d401      	bmi.n	6296 <_svfprintf_r+0x49e>
    6292:	f000 fc03 	bl	6a9c <_svfprintf_r+0xca4>
    6296:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6298:	881a      	ldrh	r2, [r3, #0]
    629a:	920c      	str	r2, [sp, #48]	; 0x30
    629c:	2200      	movs	r2, #0
    629e:	3304      	adds	r3, #4
    62a0:	920d      	str	r2, [sp, #52]	; 0x34
    62a2:	930f      	str	r3, [sp, #60]	; 0x3c
    62a4:	07e3      	lsls	r3, r4, #31
    62a6:	d400      	bmi.n	62aa <_svfprintf_r+0x4b2>
    62a8:	e0a9      	b.n	63fe <_svfprintf_r+0x606>
    62aa:	990c      	ldr	r1, [sp, #48]	; 0x30
    62ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    62ae:	000b      	movs	r3, r1
    62b0:	4313      	orrs	r3, r2
    62b2:	001a      	movs	r2, r3
    62b4:	2302      	movs	r3, #2
    62b6:	2a00      	cmp	r2, #0
    62b8:	d100      	bne.n	62bc <_svfprintf_r+0x4c4>
    62ba:	e786      	b.n	61ca <_svfprintf_r+0x3d2>
    62bc:	2030      	movs	r0, #48	; 0x30
    62be:	a91e      	add	r1, sp, #120	; 0x78
    62c0:	7008      	strb	r0, [r1, #0]
    62c2:	2548      	movs	r5, #72	; 0x48
    62c4:	4668      	mov	r0, sp
    62c6:	1940      	adds	r0, r0, r5
    62c8:	7800      	ldrb	r0, [r0, #0]
    62ca:	431c      	orrs	r4, r3
    62cc:	7048      	strb	r0, [r1, #1]
    62ce:	e77c      	b.n	61ca <_svfprintf_r+0x3d2>
    62d0:	468b      	mov	fp, r1
    62d2:	4641      	mov	r1, r8
    62d4:	2900      	cmp	r1, #0
    62d6:	d001      	beq.n	62dc <_svfprintf_r+0x4e4>
    62d8:	f001 f883 	bl	73e2 <_svfprintf_r+0x15ea>
    62dc:	06a3      	lsls	r3, r4, #26
    62de:	d501      	bpl.n	62e4 <_svfprintf_r+0x4ec>
    62e0:	f000 fde9 	bl	6eb6 <_svfprintf_r+0x10be>
    62e4:	06e3      	lsls	r3, r4, #27
    62e6:	d501      	bpl.n	62ec <_svfprintf_r+0x4f4>
    62e8:	f000 fd9b 	bl	6e22 <_svfprintf_r+0x102a>
    62ec:	0663      	lsls	r3, r4, #25
    62ee:	d401      	bmi.n	62f4 <_svfprintf_r+0x4fc>
    62f0:	f000 fd97 	bl	6e22 <_svfprintf_r+0x102a>
    62f4:	4669      	mov	r1, sp
    62f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    62f8:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    62fa:	681a      	ldr	r2, [r3, #0]
    62fc:	3304      	adds	r3, #4
    62fe:	9207      	str	r2, [sp, #28]
    6300:	8011      	strh	r1, [r2, #0]
    6302:	930f      	str	r3, [sp, #60]	; 0x3c
    6304:	e5a3      	b.n	5e4e <_svfprintf_r+0x56>
    6306:	464b      	mov	r3, r9
    6308:	431c      	orrs	r4, r3
    630a:	780b      	ldrb	r3, [r1, #0]
    630c:	e5d8      	b.n	5ec0 <_svfprintf_r+0xc8>
    630e:	9312      	str	r3, [sp, #72]	; 0x48
    6310:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6312:	468b      	mov	fp, r1
    6314:	1d1d      	adds	r5, r3, #4
    6316:	681b      	ldr	r3, [r3, #0]
    6318:	a916      	add	r1, sp, #88	; 0x58
    631a:	001a      	movs	r2, r3
    631c:	9311      	str	r3, [sp, #68]	; 0x44
    631e:	2300      	movs	r3, #0
    6320:	77cb      	strb	r3, [r1, #31]
    6322:	2a00      	cmp	r2, #0
    6324:	d101      	bne.n	632a <_svfprintf_r+0x532>
    6326:	f000 fefb 	bl	7120 <_svfprintf_r+0x1328>
    632a:	4653      	mov	r3, sl
    632c:	3301      	adds	r3, #1
    632e:	d101      	bne.n	6334 <_svfprintf_r+0x53c>
    6330:	f000 fe38 	bl	6fa4 <_svfprintf_r+0x11ac>
    6334:	4652      	mov	r2, sl
    6336:	2100      	movs	r1, #0
    6338:	9811      	ldr	r0, [sp, #68]	; 0x44
    633a:	f003 fc51 	bl	9be0 <memchr>
    633e:	2800      	cmp	r0, #0
    6340:	d101      	bne.n	6346 <_svfprintf_r+0x54e>
    6342:	f000 ff54 	bl	71ee <_svfprintf_r+0x13f6>
    6346:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6348:	1ac3      	subs	r3, r0, r3
    634a:	001a      	movs	r2, r3
    634c:	930e      	str	r3, [sp, #56]	; 0x38
    634e:	43db      	mvns	r3, r3
    6350:	17db      	asrs	r3, r3, #31
    6352:	401a      	ands	r2, r3
    6354:	ab16      	add	r3, sp, #88	; 0x58
    6356:	7fdb      	ldrb	r3, [r3, #31]
    6358:	9207      	str	r2, [sp, #28]
    635a:	4698      	mov	r8, r3
    635c:	2300      	movs	r3, #0
    635e:	950f      	str	r5, [sp, #60]	; 0x3c
    6360:	9408      	str	r4, [sp, #32]
    6362:	469a      	mov	sl, r3
    6364:	9313      	str	r3, [sp, #76]	; 0x4c
    6366:	e65f      	b.n	6028 <_svfprintf_r+0x230>
    6368:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    636a:	9312      	str	r3, [sp, #72]	; 0x48
    636c:	6813      	ldr	r3, [r2, #0]
    636e:	ad28      	add	r5, sp, #160	; 0xa0
    6370:	9307      	str	r3, [sp, #28]
    6372:	466b      	mov	r3, sp
    6374:	7f1b      	ldrb	r3, [r3, #28]
    6376:	468b      	mov	fp, r1
    6378:	702b      	strb	r3, [r5, #0]
    637a:	2300      	movs	r3, #0
    637c:	a916      	add	r1, sp, #88	; 0x58
    637e:	77cb      	strb	r3, [r1, #31]
    6380:	0013      	movs	r3, r2
    6382:	3304      	adds	r3, #4
    6384:	930f      	str	r3, [sp, #60]	; 0x3c
    6386:	2300      	movs	r3, #0
    6388:	9408      	str	r4, [sp, #32]
    638a:	4698      	mov	r8, r3
    638c:	3301      	adds	r3, #1
    638e:	9307      	str	r3, [sp, #28]
    6390:	930e      	str	r3, [sp, #56]	; 0x38
    6392:	2300      	movs	r3, #0
    6394:	9511      	str	r5, [sp, #68]	; 0x44
    6396:	469a      	mov	sl, r3
    6398:	9313      	str	r3, [sp, #76]	; 0x4c
    639a:	e64b      	b.n	6034 <_svfprintf_r+0x23c>
    639c:	468b      	mov	fp, r1
    639e:	4641      	mov	r1, r8
    63a0:	9312      	str	r3, [sp, #72]	; 0x48
    63a2:	2900      	cmp	r1, #0
    63a4:	d100      	bne.n	63a8 <_svfprintf_r+0x5b0>
    63a6:	e5f4      	b.n	5f92 <_svfprintf_r+0x19a>
    63a8:	ab16      	add	r3, sp, #88	; 0x58
    63aa:	77d8      	strb	r0, [r3, #31]
    63ac:	e5f1      	b.n	5f92 <_svfprintf_r+0x19a>
    63ae:	4663      	mov	r3, ip
    63b0:	431c      	orrs	r4, r3
    63b2:	780b      	ldrb	r3, [r1, #0]
    63b4:	e584      	b.n	5ec0 <_svfprintf_r+0xc8>
    63b6:	780b      	ldrb	r3, [r1, #0]
    63b8:	2b6c      	cmp	r3, #108	; 0x6c
    63ba:	d101      	bne.n	63c0 <_svfprintf_r+0x5c8>
    63bc:	f000 fd86 	bl	6ecc <_svfprintf_r+0x10d4>
    63c0:	2210      	movs	r2, #16
    63c2:	4314      	orrs	r4, r2
    63c4:	e57c      	b.n	5ec0 <_svfprintf_r+0xc8>
    63c6:	468b      	mov	fp, r1
    63c8:	4641      	mov	r1, r8
    63ca:	9312      	str	r3, [sp, #72]	; 0x48
    63cc:	2900      	cmp	r1, #0
    63ce:	d001      	beq.n	63d4 <_svfprintf_r+0x5dc>
    63d0:	f000 ffe8 	bl	73a4 <_svfprintf_r+0x15ac>
    63d4:	4b63      	ldr	r3, [pc, #396]	; (6564 <_svfprintf_r+0x76c>)
    63d6:	9317      	str	r3, [sp, #92]	; 0x5c
    63d8:	06a3      	lsls	r3, r4, #26
    63da:	d400      	bmi.n	63de <_svfprintf_r+0x5e6>
    63dc:	e753      	b.n	6286 <_svfprintf_r+0x48e>
    63de:	2207      	movs	r2, #7
    63e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    63e2:	3307      	adds	r3, #7
    63e4:	4393      	bics	r3, r2
    63e6:	3201      	adds	r2, #1
    63e8:	4694      	mov	ip, r2
    63ea:	449c      	add	ip, r3
    63ec:	4662      	mov	r2, ip
    63ee:	920f      	str	r2, [sp, #60]	; 0x3c
    63f0:	681a      	ldr	r2, [r3, #0]
    63f2:	685b      	ldr	r3, [r3, #4]
    63f4:	920c      	str	r2, [sp, #48]	; 0x30
    63f6:	930d      	str	r3, [sp, #52]	; 0x34
    63f8:	07e3      	lsls	r3, r4, #31
    63fa:	d500      	bpl.n	63fe <_svfprintf_r+0x606>
    63fc:	e755      	b.n	62aa <_svfprintf_r+0x4b2>
    63fe:	990c      	ldr	r1, [sp, #48]	; 0x30
    6400:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6402:	0008      	movs	r0, r1
    6404:	4310      	orrs	r0, r2
    6406:	2302      	movs	r3, #2
    6408:	0002      	movs	r2, r0
    640a:	e6de      	b.n	61ca <_svfprintf_r+0x3d2>
    640c:	468b      	mov	fp, r1
    640e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    6410:	2230      	movs	r2, #48	; 0x30
    6412:	680b      	ldr	r3, [r1, #0]
    6414:	930c      	str	r3, [sp, #48]	; 0x30
    6416:	2300      	movs	r3, #0
    6418:	930d      	str	r3, [sp, #52]	; 0x34
    641a:	3302      	adds	r3, #2
    641c:	431c      	orrs	r4, r3
    641e:	ab1e      	add	r3, sp, #120	; 0x78
    6420:	701a      	strb	r2, [r3, #0]
    6422:	3248      	adds	r2, #72	; 0x48
    6424:	705a      	strb	r2, [r3, #1]
    6426:	000b      	movs	r3, r1
    6428:	3304      	adds	r3, #4
    642a:	930f      	str	r3, [sp, #60]	; 0x3c
    642c:	4b4d      	ldr	r3, [pc, #308]	; (6564 <_svfprintf_r+0x76c>)
    642e:	9212      	str	r2, [sp, #72]	; 0x48
    6430:	9317      	str	r3, [sp, #92]	; 0x5c
    6432:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    6434:	2302      	movs	r3, #2
    6436:	e6c8      	b.n	61ca <_svfprintf_r+0x3d2>
    6438:	2301      	movs	r3, #1
    643a:	431c      	orrs	r4, r3
    643c:	780b      	ldrb	r3, [r1, #0]
    643e:	e53f      	b.n	5ec0 <_svfprintf_r+0xc8>
    6440:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6442:	1d1a      	adds	r2, r3, #4
    6444:	681b      	ldr	r3, [r3, #0]
    6446:	930b      	str	r3, [sp, #44]	; 0x2c
    6448:	2b00      	cmp	r3, #0
    644a:	da00      	bge.n	644e <_svfprintf_r+0x656>
    644c:	e542      	b.n	5ed4 <_svfprintf_r+0xdc>
    644e:	780b      	ldrb	r3, [r1, #0]
    6450:	920f      	str	r2, [sp, #60]	; 0x3c
    6452:	e535      	b.n	5ec0 <_svfprintf_r+0xc8>
    6454:	780b      	ldrb	r3, [r1, #0]
    6456:	2800      	cmp	r0, #0
    6458:	d000      	beq.n	645c <_svfprintf_r+0x664>
    645a:	e531      	b.n	5ec0 <_svfprintf_r+0xc8>
    645c:	2201      	movs	r2, #1
    645e:	3020      	adds	r0, #32
    6460:	4690      	mov	r8, r2
    6462:	e52d      	b.n	5ec0 <_svfprintf_r+0xc8>
    6464:	468b      	mov	fp, r1
    6466:	9312      	str	r3, [sp, #72]	; 0x48
    6468:	06a3      	lsls	r3, r4, #26
    646a:	d400      	bmi.n	646e <_svfprintf_r+0x676>
    646c:	e6ed      	b.n	624a <_svfprintf_r+0x452>
    646e:	2207      	movs	r2, #7
    6470:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6472:	3307      	adds	r3, #7
    6474:	4393      	bics	r3, r2
    6476:	3201      	adds	r2, #1
    6478:	4694      	mov	ip, r2
    647a:	449c      	add	ip, r3
    647c:	4662      	mov	r2, ip
    647e:	920f      	str	r2, [sp, #60]	; 0x3c
    6480:	681a      	ldr	r2, [r3, #0]
    6482:	685b      	ldr	r3, [r3, #4]
    6484:	0011      	movs	r1, r2
    6486:	001a      	movs	r2, r3
    6488:	0008      	movs	r0, r1
    648a:	4310      	orrs	r0, r2
    648c:	910c      	str	r1, [sp, #48]	; 0x30
    648e:	920d      	str	r2, [sp, #52]	; 0x34
    6490:	2301      	movs	r3, #1
    6492:	0002      	movs	r2, r0
    6494:	e699      	b.n	61ca <_svfprintf_r+0x3d2>
    6496:	468b      	mov	fp, r1
    6498:	9312      	str	r3, [sp, #72]	; 0x48
    649a:	06a3      	lsls	r3, r4, #26
    649c:	d400      	bmi.n	64a0 <_svfprintf_r+0x6a8>
    649e:	e683      	b.n	61a8 <_svfprintf_r+0x3b0>
    64a0:	2207      	movs	r2, #7
    64a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    64a4:	3307      	adds	r3, #7
    64a6:	4393      	bics	r3, r2
    64a8:	3201      	adds	r2, #1
    64aa:	4694      	mov	ip, r2
    64ac:	449c      	add	ip, r3
    64ae:	4662      	mov	r2, ip
    64b0:	920f      	str	r2, [sp, #60]	; 0x3c
    64b2:	681a      	ldr	r2, [r3, #0]
    64b4:	685b      	ldr	r3, [r3, #4]
    64b6:	0011      	movs	r1, r2
    64b8:	001a      	movs	r2, r3
    64ba:	0008      	movs	r0, r1
    64bc:	4310      	orrs	r0, r2
    64be:	910c      	str	r1, [sp, #48]	; 0x30
    64c0:	920d      	str	r2, [sp, #52]	; 0x34
    64c2:	2300      	movs	r3, #0
    64c4:	0002      	movs	r2, r0
    64c6:	e680      	b.n	61ca <_svfprintf_r+0x3d2>
    64c8:	468b      	mov	fp, r1
    64ca:	4641      	mov	r1, r8
    64cc:	9312      	str	r3, [sp, #72]	; 0x48
    64ce:	2900      	cmp	r1, #0
    64d0:	d001      	beq.n	64d6 <_svfprintf_r+0x6de>
    64d2:	f000 ff7f 	bl	73d4 <_svfprintf_r+0x15dc>
    64d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    64d8:	2b00      	cmp	r3, #0
    64da:	d100      	bne.n	64de <_svfprintf_r+0x6e6>
    64dc:	e50b      	b.n	5ef6 <_svfprintf_r+0xfe>
    64de:	ad28      	add	r5, sp, #160	; 0xa0
    64e0:	702b      	strb	r3, [r5, #0]
    64e2:	2300      	movs	r3, #0
    64e4:	aa16      	add	r2, sp, #88	; 0x58
    64e6:	77d3      	strb	r3, [r2, #31]
    64e8:	9408      	str	r4, [sp, #32]
    64ea:	e74e      	b.n	638a <_svfprintf_r+0x592>
    64ec:	68bc      	ldr	r4, [r7, #8]
    64ee:	4643      	mov	r3, r8
    64f0:	2b00      	cmp	r3, #0
    64f2:	d00f      	beq.n	6514 <_svfprintf_r+0x71c>
    64f4:	aa16      	add	r2, sp, #88	; 0x58
    64f6:	231f      	movs	r3, #31
    64f8:	4694      	mov	ip, r2
    64fa:	4463      	add	r3, ip
    64fc:	6033      	str	r3, [r6, #0]
    64fe:	2301      	movs	r3, #1
    6500:	6073      	str	r3, [r6, #4]
    6502:	687b      	ldr	r3, [r7, #4]
    6504:	3401      	adds	r4, #1
    6506:	3301      	adds	r3, #1
    6508:	60bc      	str	r4, [r7, #8]
    650a:	607b      	str	r3, [r7, #4]
    650c:	2b07      	cmp	r3, #7
    650e:	dd00      	ble.n	6512 <_svfprintf_r+0x71a>
    6510:	e1b3      	b.n	687a <_svfprintf_r+0xa82>
    6512:	3608      	adds	r6, #8
    6514:	464b      	mov	r3, r9
    6516:	2b00      	cmp	r3, #0
    6518:	d00c      	beq.n	6534 <_svfprintf_r+0x73c>
    651a:	ab1e      	add	r3, sp, #120	; 0x78
    651c:	6033      	str	r3, [r6, #0]
    651e:	2302      	movs	r3, #2
    6520:	6073      	str	r3, [r6, #4]
    6522:	687b      	ldr	r3, [r7, #4]
    6524:	3402      	adds	r4, #2
    6526:	3301      	adds	r3, #1
    6528:	60bc      	str	r4, [r7, #8]
    652a:	607b      	str	r3, [r7, #4]
    652c:	2b07      	cmp	r3, #7
    652e:	dd00      	ble.n	6532 <_svfprintf_r+0x73a>
    6530:	e1af      	b.n	6892 <_svfprintf_r+0xa9a>
    6532:	3608      	adds	r6, #8
    6534:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6536:	2b80      	cmp	r3, #128	; 0x80
    6538:	d100      	bne.n	653c <_svfprintf_r+0x744>
    653a:	e120      	b.n	677e <_svfprintf_r+0x986>
    653c:	4653      	mov	r3, sl
    653e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    6540:	1a9d      	subs	r5, r3, r2
    6542:	2d00      	cmp	r5, #0
    6544:	dd3c      	ble.n	65c0 <_svfprintf_r+0x7c8>
    6546:	4a08      	ldr	r2, [pc, #32]	; (6568 <_svfprintf_r+0x770>)
    6548:	687b      	ldr	r3, [r7, #4]
    654a:	4691      	mov	r9, r2
    654c:	2d10      	cmp	r5, #16
    654e:	dd2c      	ble.n	65aa <_svfprintf_r+0x7b2>
    6550:	2210      	movs	r2, #16
    6552:	0021      	movs	r1, r4
    6554:	4692      	mov	sl, r2
    6556:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6558:	0032      	movs	r2, r6
    655a:	002e      	movs	r6, r5
    655c:	464d      	mov	r5, r9
    655e:	e009      	b.n	6574 <_svfprintf_r+0x77c>
    6560:	0000e6d0 	.word	0x0000e6d0
    6564:	0000e6e4 	.word	0x0000e6e4
    6568:	0000e714 	.word	0x0000e714
    656c:	3e10      	subs	r6, #16
    656e:	3208      	adds	r2, #8
    6570:	2e10      	cmp	r6, #16
    6572:	dd16      	ble.n	65a2 <_svfprintf_r+0x7aa>
    6574:	4650      	mov	r0, sl
    6576:	3110      	adds	r1, #16
    6578:	3301      	adds	r3, #1
    657a:	6015      	str	r5, [r2, #0]
    657c:	6050      	str	r0, [r2, #4]
    657e:	60b9      	str	r1, [r7, #8]
    6580:	607b      	str	r3, [r7, #4]
    6582:	2b07      	cmp	r3, #7
    6584:	ddf2      	ble.n	656c <_svfprintf_r+0x774>
    6586:	003a      	movs	r2, r7
    6588:	9906      	ldr	r1, [sp, #24]
    658a:	0020      	movs	r0, r4
    658c:	f005 fb0c 	bl	bba8 <__ssprint_r>
    6590:	2800      	cmp	r0, #0
    6592:	d000      	beq.n	6596 <_svfprintf_r+0x79e>
    6594:	e4b7      	b.n	5f06 <_svfprintf_r+0x10e>
    6596:	3e10      	subs	r6, #16
    6598:	68b9      	ldr	r1, [r7, #8]
    659a:	687b      	ldr	r3, [r7, #4]
    659c:	aa32      	add	r2, sp, #200	; 0xc8
    659e:	2e10      	cmp	r6, #16
    65a0:	dce8      	bgt.n	6574 <_svfprintf_r+0x77c>
    65a2:	46a9      	mov	r9, r5
    65a4:	000c      	movs	r4, r1
    65a6:	0035      	movs	r5, r6
    65a8:	0016      	movs	r6, r2
    65aa:	464a      	mov	r2, r9
    65ac:	1964      	adds	r4, r4, r5
    65ae:	3301      	adds	r3, #1
    65b0:	6032      	str	r2, [r6, #0]
    65b2:	6075      	str	r5, [r6, #4]
    65b4:	60bc      	str	r4, [r7, #8]
    65b6:	607b      	str	r3, [r7, #4]
    65b8:	2b07      	cmp	r3, #7
    65ba:	dd00      	ble.n	65be <_svfprintf_r+0x7c6>
    65bc:	e151      	b.n	6862 <_svfprintf_r+0xa6a>
    65be:	3608      	adds	r6, #8
    65c0:	9b08      	ldr	r3, [sp, #32]
    65c2:	05db      	lsls	r3, r3, #23
    65c4:	d500      	bpl.n	65c8 <_svfprintf_r+0x7d0>
    65c6:	e0b6      	b.n	6736 <_svfprintf_r+0x93e>
    65c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    65ca:	6033      	str	r3, [r6, #0]
    65cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    65ce:	469c      	mov	ip, r3
    65d0:	6073      	str	r3, [r6, #4]
    65d2:	687b      	ldr	r3, [r7, #4]
    65d4:	4464      	add	r4, ip
    65d6:	3301      	adds	r3, #1
    65d8:	60bc      	str	r4, [r7, #8]
    65da:	607b      	str	r3, [r7, #4]
    65dc:	2b07      	cmp	r3, #7
    65de:	dd00      	ble.n	65e2 <_svfprintf_r+0x7ea>
    65e0:	e09d      	b.n	671e <_svfprintf_r+0x926>
    65e2:	3608      	adds	r6, #8
    65e4:	9b08      	ldr	r3, [sp, #32]
    65e6:	075b      	lsls	r3, r3, #29
    65e8:	d541      	bpl.n	666e <_svfprintf_r+0x876>
    65ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    65ec:	9a07      	ldr	r2, [sp, #28]
    65ee:	1a9d      	subs	r5, r3, r2
    65f0:	2d00      	cmp	r5, #0
    65f2:	dd3c      	ble.n	666e <_svfprintf_r+0x876>
    65f4:	4ac4      	ldr	r2, [pc, #784]	; (6908 <_svfprintf_r+0xb10>)
    65f6:	687b      	ldr	r3, [r7, #4]
    65f8:	4690      	mov	r8, r2
    65fa:	2d10      	cmp	r5, #16
    65fc:	dd26      	ble.n	664c <_svfprintf_r+0x854>
    65fe:	2210      	movs	r2, #16
    6600:	0021      	movs	r1, r4
    6602:	4691      	mov	r9, r2
    6604:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6606:	0032      	movs	r2, r6
    6608:	002e      	movs	r6, r5
    660a:	9d06      	ldr	r5, [sp, #24]
    660c:	e003      	b.n	6616 <_svfprintf_r+0x81e>
    660e:	3e10      	subs	r6, #16
    6610:	3208      	adds	r2, #8
    6612:	2e10      	cmp	r6, #16
    6614:	dd17      	ble.n	6646 <_svfprintf_r+0x84e>
    6616:	48bc      	ldr	r0, [pc, #752]	; (6908 <_svfprintf_r+0xb10>)
    6618:	3110      	adds	r1, #16
    661a:	6010      	str	r0, [r2, #0]
    661c:	4648      	mov	r0, r9
    661e:	3301      	adds	r3, #1
    6620:	6050      	str	r0, [r2, #4]
    6622:	60b9      	str	r1, [r7, #8]
    6624:	607b      	str	r3, [r7, #4]
    6626:	2b07      	cmp	r3, #7
    6628:	ddf1      	ble.n	660e <_svfprintf_r+0x816>
    662a:	003a      	movs	r2, r7
    662c:	0029      	movs	r1, r5
    662e:	0020      	movs	r0, r4
    6630:	f005 faba 	bl	bba8 <__ssprint_r>
    6634:	2800      	cmp	r0, #0
    6636:	d000      	beq.n	663a <_svfprintf_r+0x842>
    6638:	e465      	b.n	5f06 <_svfprintf_r+0x10e>
    663a:	3e10      	subs	r6, #16
    663c:	68b9      	ldr	r1, [r7, #8]
    663e:	687b      	ldr	r3, [r7, #4]
    6640:	aa32      	add	r2, sp, #200	; 0xc8
    6642:	2e10      	cmp	r6, #16
    6644:	dce7      	bgt.n	6616 <_svfprintf_r+0x81e>
    6646:	0035      	movs	r5, r6
    6648:	000c      	movs	r4, r1
    664a:	0016      	movs	r6, r2
    664c:	4642      	mov	r2, r8
    664e:	1964      	adds	r4, r4, r5
    6650:	3301      	adds	r3, #1
    6652:	c624      	stmia	r6!, {r2, r5}
    6654:	60bc      	str	r4, [r7, #8]
    6656:	607b      	str	r3, [r7, #4]
    6658:	2b07      	cmp	r3, #7
    665a:	dd08      	ble.n	666e <_svfprintf_r+0x876>
    665c:	003a      	movs	r2, r7
    665e:	9906      	ldr	r1, [sp, #24]
    6660:	9809      	ldr	r0, [sp, #36]	; 0x24
    6662:	f005 faa1 	bl	bba8 <__ssprint_r>
    6666:	2800      	cmp	r0, #0
    6668:	d000      	beq.n	666c <_svfprintf_r+0x874>
    666a:	e44c      	b.n	5f06 <_svfprintf_r+0x10e>
    666c:	68bc      	ldr	r4, [r7, #8]
    666e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6670:	9907      	ldr	r1, [sp, #28]
    6672:	428b      	cmp	r3, r1
    6674:	da00      	bge.n	6678 <_svfprintf_r+0x880>
    6676:	000b      	movs	r3, r1
    6678:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    667a:	4694      	mov	ip, r2
    667c:	449c      	add	ip, r3
    667e:	4663      	mov	r3, ip
    6680:	930a      	str	r3, [sp, #40]	; 0x28
    6682:	2c00      	cmp	r4, #0
    6684:	d000      	beq.n	6688 <_svfprintf_r+0x890>
    6686:	e0d6      	b.n	6836 <_svfprintf_r+0xa3e>
    6688:	2300      	movs	r3, #0
    668a:	ae32      	add	r6, sp, #200	; 0xc8
    668c:	607b      	str	r3, [r7, #4]
    668e:	f7ff fbde 	bl	5e4e <_svfprintf_r+0x56>
    6692:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6694:	2b01      	cmp	r3, #1
    6696:	dc00      	bgt.n	669a <_svfprintf_r+0x8a2>
    6698:	e0ae      	b.n	67f8 <_svfprintf_r+0xa00>
    669a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    669c:	3401      	adds	r4, #1
    669e:	6033      	str	r3, [r6, #0]
    66a0:	2301      	movs	r3, #1
    66a2:	6073      	str	r3, [r6, #4]
    66a4:	687b      	ldr	r3, [r7, #4]
    66a6:	60bc      	str	r4, [r7, #8]
    66a8:	3301      	adds	r3, #1
    66aa:	607b      	str	r3, [r7, #4]
    66ac:	2b07      	cmp	r3, #7
    66ae:	dd00      	ble.n	66b2 <_svfprintf_r+0x8ba>
    66b0:	e2df      	b.n	6c72 <_svfprintf_r+0xe7a>
    66b2:	3608      	adds	r6, #8
    66b4:	9a19      	ldr	r2, [sp, #100]	; 0x64
    66b6:	3301      	adds	r3, #1
    66b8:	6032      	str	r2, [r6, #0]
    66ba:	9a18      	ldr	r2, [sp, #96]	; 0x60
    66bc:	4698      	mov	r8, r3
    66be:	4694      	mov	ip, r2
    66c0:	4464      	add	r4, ip
    66c2:	6072      	str	r2, [r6, #4]
    66c4:	60bc      	str	r4, [r7, #8]
    66c6:	607b      	str	r3, [r7, #4]
    66c8:	2b07      	cmp	r3, #7
    66ca:	dd00      	ble.n	66ce <_svfprintf_r+0x8d6>
    66cc:	e2de      	b.n	6c8c <_svfprintf_r+0xe94>
    66ce:	3608      	adds	r6, #8
    66d0:	2200      	movs	r2, #0
    66d2:	2300      	movs	r3, #0
    66d4:	9816      	ldr	r0, [sp, #88]	; 0x58
    66d6:	9915      	ldr	r1, [sp, #84]	; 0x54
    66d8:	f7fe fd48 	bl	516c <__aeabi_dcmpeq>
    66dc:	2800      	cmp	r0, #0
    66de:	d000      	beq.n	66e2 <_svfprintf_r+0x8ea>
    66e0:	e1a4      	b.n	6a2c <_svfprintf_r+0xc34>
    66e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
    66e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    66e6:	3501      	adds	r5, #1
    66e8:	3b01      	subs	r3, #1
    66ea:	6035      	str	r5, [r6, #0]
    66ec:	6073      	str	r3, [r6, #4]
    66ee:	18e4      	adds	r4, r4, r3
    66f0:	2301      	movs	r3, #1
    66f2:	469c      	mov	ip, r3
    66f4:	44e0      	add	r8, ip
    66f6:	4643      	mov	r3, r8
    66f8:	60bc      	str	r4, [r7, #8]
    66fa:	607b      	str	r3, [r7, #4]
    66fc:	2b07      	cmp	r3, #7
    66fe:	dd00      	ble.n	6702 <_svfprintf_r+0x90a>
    6700:	e08b      	b.n	681a <_svfprintf_r+0xa22>
    6702:	3608      	adds	r6, #8
    6704:	ab21      	add	r3, sp, #132	; 0x84
    6706:	6033      	str	r3, [r6, #0]
    6708:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    670a:	469c      	mov	ip, r3
    670c:	6073      	str	r3, [r6, #4]
    670e:	4643      	mov	r3, r8
    6710:	4464      	add	r4, ip
    6712:	3301      	adds	r3, #1
    6714:	60bc      	str	r4, [r7, #8]
    6716:	607b      	str	r3, [r7, #4]
    6718:	2b07      	cmp	r3, #7
    671a:	dc00      	bgt.n	671e <_svfprintf_r+0x926>
    671c:	e761      	b.n	65e2 <_svfprintf_r+0x7ea>
    671e:	003a      	movs	r2, r7
    6720:	9906      	ldr	r1, [sp, #24]
    6722:	9809      	ldr	r0, [sp, #36]	; 0x24
    6724:	f005 fa40 	bl	bba8 <__ssprint_r>
    6728:	2800      	cmp	r0, #0
    672a:	d001      	beq.n	6730 <_svfprintf_r+0x938>
    672c:	f7ff fbeb 	bl	5f06 <_svfprintf_r+0x10e>
    6730:	68bc      	ldr	r4, [r7, #8]
    6732:	ae32      	add	r6, sp, #200	; 0xc8
    6734:	e756      	b.n	65e4 <_svfprintf_r+0x7ec>
    6736:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6738:	2b65      	cmp	r3, #101	; 0x65
    673a:	ddaa      	ble.n	6692 <_svfprintf_r+0x89a>
    673c:	2200      	movs	r2, #0
    673e:	2300      	movs	r3, #0
    6740:	9816      	ldr	r0, [sp, #88]	; 0x58
    6742:	9915      	ldr	r1, [sp, #84]	; 0x54
    6744:	f7fe fd12 	bl	516c <__aeabi_dcmpeq>
    6748:	2800      	cmp	r0, #0
    674a:	d100      	bne.n	674e <_svfprintf_r+0x956>
    674c:	e0e2      	b.n	6914 <_svfprintf_r+0xb1c>
    674e:	4b6f      	ldr	r3, [pc, #444]	; (690c <_svfprintf_r+0xb14>)
    6750:	3401      	adds	r4, #1
    6752:	6033      	str	r3, [r6, #0]
    6754:	2301      	movs	r3, #1
    6756:	6073      	str	r3, [r6, #4]
    6758:	687b      	ldr	r3, [r7, #4]
    675a:	60bc      	str	r4, [r7, #8]
    675c:	3301      	adds	r3, #1
    675e:	607b      	str	r3, [r7, #4]
    6760:	2b07      	cmp	r3, #7
    6762:	dd00      	ble.n	6766 <_svfprintf_r+0x96e>
    6764:	e366      	b.n	6e34 <_svfprintf_r+0x103c>
    6766:	3608      	adds	r6, #8
    6768:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    676a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    676c:	4293      	cmp	r3, r2
    676e:	da00      	bge.n	6772 <_svfprintf_r+0x97a>
    6770:	e1a4      	b.n	6abc <_svfprintf_r+0xcc4>
    6772:	9b08      	ldr	r3, [sp, #32]
    6774:	07db      	lsls	r3, r3, #31
    6776:	d500      	bpl.n	677a <_svfprintf_r+0x982>
    6778:	e1a0      	b.n	6abc <_svfprintf_r+0xcc4>
    677a:	68bc      	ldr	r4, [r7, #8]
    677c:	e732      	b.n	65e4 <_svfprintf_r+0x7ec>
    677e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6780:	9a07      	ldr	r2, [sp, #28]
    6782:	1a9d      	subs	r5, r3, r2
    6784:	2d00      	cmp	r5, #0
    6786:	dc00      	bgt.n	678a <_svfprintf_r+0x992>
    6788:	e6d8      	b.n	653c <_svfprintf_r+0x744>
    678a:	4a61      	ldr	r2, [pc, #388]	; (6910 <_svfprintf_r+0xb18>)
    678c:	687b      	ldr	r3, [r7, #4]
    678e:	4691      	mov	r9, r2
    6790:	2d10      	cmp	r5, #16
    6792:	dd25      	ble.n	67e0 <_svfprintf_r+0x9e8>
    6794:	2210      	movs	r2, #16
    6796:	0021      	movs	r1, r4
    6798:	4690      	mov	r8, r2
    679a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    679c:	0032      	movs	r2, r6
    679e:	464e      	mov	r6, r9
    67a0:	e003      	b.n	67aa <_svfprintf_r+0x9b2>
    67a2:	3d10      	subs	r5, #16
    67a4:	3208      	adds	r2, #8
    67a6:	2d10      	cmp	r5, #16
    67a8:	dd17      	ble.n	67da <_svfprintf_r+0x9e2>
    67aa:	4640      	mov	r0, r8
    67ac:	3110      	adds	r1, #16
    67ae:	3301      	adds	r3, #1
    67b0:	6016      	str	r6, [r2, #0]
    67b2:	6050      	str	r0, [r2, #4]
    67b4:	60b9      	str	r1, [r7, #8]
    67b6:	607b      	str	r3, [r7, #4]
    67b8:	2b07      	cmp	r3, #7
    67ba:	ddf2      	ble.n	67a2 <_svfprintf_r+0x9aa>
    67bc:	003a      	movs	r2, r7
    67be:	9906      	ldr	r1, [sp, #24]
    67c0:	0020      	movs	r0, r4
    67c2:	f005 f9f1 	bl	bba8 <__ssprint_r>
    67c6:	2800      	cmp	r0, #0
    67c8:	d001      	beq.n	67ce <_svfprintf_r+0x9d6>
    67ca:	f7ff fb9c 	bl	5f06 <_svfprintf_r+0x10e>
    67ce:	3d10      	subs	r5, #16
    67d0:	68b9      	ldr	r1, [r7, #8]
    67d2:	687b      	ldr	r3, [r7, #4]
    67d4:	aa32      	add	r2, sp, #200	; 0xc8
    67d6:	2d10      	cmp	r5, #16
    67d8:	dce7      	bgt.n	67aa <_svfprintf_r+0x9b2>
    67da:	46b1      	mov	r9, r6
    67dc:	000c      	movs	r4, r1
    67de:	0016      	movs	r6, r2
    67e0:	464a      	mov	r2, r9
    67e2:	1964      	adds	r4, r4, r5
    67e4:	3301      	adds	r3, #1
    67e6:	6032      	str	r2, [r6, #0]
    67e8:	6075      	str	r5, [r6, #4]
    67ea:	60bc      	str	r4, [r7, #8]
    67ec:	607b      	str	r3, [r7, #4]
    67ee:	2b07      	cmp	r3, #7
    67f0:	dd00      	ble.n	67f4 <_svfprintf_r+0x9fc>
    67f2:	e27e      	b.n	6cf2 <_svfprintf_r+0xefa>
    67f4:	3608      	adds	r6, #8
    67f6:	e6a1      	b.n	653c <_svfprintf_r+0x744>
    67f8:	2301      	movs	r3, #1
    67fa:	9a08      	ldr	r2, [sp, #32]
    67fc:	4213      	tst	r3, r2
    67fe:	d000      	beq.n	6802 <_svfprintf_r+0xa0a>
    6800:	e74b      	b.n	669a <_svfprintf_r+0x8a2>
    6802:	6073      	str	r3, [r6, #4]
    6804:	687b      	ldr	r3, [r7, #4]
    6806:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6808:	3301      	adds	r3, #1
    680a:	3401      	adds	r4, #1
    680c:	6032      	str	r2, [r6, #0]
    680e:	60bc      	str	r4, [r7, #8]
    6810:	4698      	mov	r8, r3
    6812:	607b      	str	r3, [r7, #4]
    6814:	2b07      	cmp	r3, #7
    6816:	dc00      	bgt.n	681a <_svfprintf_r+0xa22>
    6818:	e773      	b.n	6702 <_svfprintf_r+0x90a>
    681a:	003a      	movs	r2, r7
    681c:	9906      	ldr	r1, [sp, #24]
    681e:	9809      	ldr	r0, [sp, #36]	; 0x24
    6820:	f005 f9c2 	bl	bba8 <__ssprint_r>
    6824:	2800      	cmp	r0, #0
    6826:	d001      	beq.n	682c <_svfprintf_r+0xa34>
    6828:	f7ff fb6d 	bl	5f06 <_svfprintf_r+0x10e>
    682c:	687b      	ldr	r3, [r7, #4]
    682e:	68bc      	ldr	r4, [r7, #8]
    6830:	4698      	mov	r8, r3
    6832:	ae32      	add	r6, sp, #200	; 0xc8
    6834:	e766      	b.n	6704 <_svfprintf_r+0x90c>
    6836:	003a      	movs	r2, r7
    6838:	9906      	ldr	r1, [sp, #24]
    683a:	9809      	ldr	r0, [sp, #36]	; 0x24
    683c:	f005 f9b4 	bl	bba8 <__ssprint_r>
    6840:	2800      	cmp	r0, #0
    6842:	d100      	bne.n	6846 <_svfprintf_r+0xa4e>
    6844:	e720      	b.n	6688 <_svfprintf_r+0x890>
    6846:	f7ff fb5e 	bl	5f06 <_svfprintf_r+0x10e>
    684a:	9c08      	ldr	r4, [sp, #32]
    684c:	2b01      	cmp	r3, #1
    684e:	d100      	bne.n	6852 <_svfprintf_r+0xa5a>
    6850:	e184      	b.n	6b5c <_svfprintf_r+0xd64>
    6852:	2b02      	cmp	r3, #2
    6854:	d129      	bne.n	68aa <_svfprintf_r+0xab2>
    6856:	9408      	str	r4, [sp, #32]
    6858:	2300      	movs	r3, #0
    685a:	2400      	movs	r4, #0
    685c:	930c      	str	r3, [sp, #48]	; 0x30
    685e:	940d      	str	r4, [sp, #52]	; 0x34
    6860:	e4c5      	b.n	61ee <_svfprintf_r+0x3f6>
    6862:	003a      	movs	r2, r7
    6864:	9906      	ldr	r1, [sp, #24]
    6866:	9809      	ldr	r0, [sp, #36]	; 0x24
    6868:	f005 f99e 	bl	bba8 <__ssprint_r>
    686c:	2800      	cmp	r0, #0
    686e:	d001      	beq.n	6874 <_svfprintf_r+0xa7c>
    6870:	f7ff fb49 	bl	5f06 <_svfprintf_r+0x10e>
    6874:	68bc      	ldr	r4, [r7, #8]
    6876:	ae32      	add	r6, sp, #200	; 0xc8
    6878:	e6a2      	b.n	65c0 <_svfprintf_r+0x7c8>
    687a:	003a      	movs	r2, r7
    687c:	9906      	ldr	r1, [sp, #24]
    687e:	9809      	ldr	r0, [sp, #36]	; 0x24
    6880:	f005 f992 	bl	bba8 <__ssprint_r>
    6884:	2800      	cmp	r0, #0
    6886:	d001      	beq.n	688c <_svfprintf_r+0xa94>
    6888:	f7ff fb3d 	bl	5f06 <_svfprintf_r+0x10e>
    688c:	68bc      	ldr	r4, [r7, #8]
    688e:	ae32      	add	r6, sp, #200	; 0xc8
    6890:	e640      	b.n	6514 <_svfprintf_r+0x71c>
    6892:	003a      	movs	r2, r7
    6894:	9906      	ldr	r1, [sp, #24]
    6896:	9809      	ldr	r0, [sp, #36]	; 0x24
    6898:	f005 f986 	bl	bba8 <__ssprint_r>
    689c:	2800      	cmp	r0, #0
    689e:	d001      	beq.n	68a4 <_svfprintf_r+0xaac>
    68a0:	f7ff fb31 	bl	5f06 <_svfprintf_r+0x10e>
    68a4:	68bc      	ldr	r4, [r7, #8]
    68a6:	ae32      	add	r6, sp, #200	; 0xc8
    68a8:	e644      	b.n	6534 <_svfprintf_r+0x73c>
    68aa:	9408      	str	r4, [sp, #32]
    68ac:	2300      	movs	r3, #0
    68ae:	2400      	movs	r4, #0
    68b0:	930c      	str	r3, [sp, #48]	; 0x30
    68b2:	940d      	str	r4, [sp, #52]	; 0x34
    68b4:	980c      	ldr	r0, [sp, #48]	; 0x30
    68b6:	990d      	ldr	r1, [sp, #52]	; 0x34
    68b8:	465b      	mov	r3, fp
    68ba:	aa32      	add	r2, sp, #200	; 0xc8
    68bc:	9307      	str	r3, [sp, #28]
    68be:	4691      	mov	r9, r2
    68c0:	46b3      	mov	fp, r6
    68c2:	e000      	b.n	68c6 <_svfprintf_r+0xace>
    68c4:	46a1      	mov	r9, r4
    68c6:	074a      	lsls	r2, r1, #29
    68c8:	4694      	mov	ip, r2
    68ca:	464b      	mov	r3, r9
    68cc:	4665      	mov	r5, ip
    68ce:	1e5c      	subs	r4, r3, #1
    68d0:	08c6      	lsrs	r6, r0, #3
    68d2:	2307      	movs	r3, #7
    68d4:	08ca      	lsrs	r2, r1, #3
    68d6:	4335      	orrs	r5, r6
    68d8:	0011      	movs	r1, r2
    68da:	002a      	movs	r2, r5
    68dc:	4003      	ands	r3, r0
    68de:	3330      	adds	r3, #48	; 0x30
    68e0:	7023      	strb	r3, [r4, #0]
    68e2:	0028      	movs	r0, r5
    68e4:	430a      	orrs	r2, r1
    68e6:	d1ed      	bne.n	68c4 <_svfprintf_r+0xacc>
    68e8:	900c      	str	r0, [sp, #48]	; 0x30
    68ea:	910d      	str	r1, [sp, #52]	; 0x34
    68ec:	9907      	ldr	r1, [sp, #28]
    68ee:	465e      	mov	r6, fp
    68f0:	468b      	mov	fp, r1
    68f2:	9908      	ldr	r1, [sp, #32]
    68f4:	464a      	mov	r2, r9
    68f6:	9411      	str	r4, [sp, #68]	; 0x44
    68f8:	07c9      	lsls	r1, r1, #31
    68fa:	d500      	bpl.n	68fe <_svfprintf_r+0xb06>
    68fc:	e13d      	b.n	6b7a <_svfprintf_r+0xd82>
    68fe:	ab32      	add	r3, sp, #200	; 0xc8
    6900:	1b1b      	subs	r3, r3, r4
    6902:	930e      	str	r3, [sp, #56]	; 0x38
    6904:	f7ff fb88 	bl	6018 <_svfprintf_r+0x220>
    6908:	0000e704 	.word	0x0000e704
    690c:	0000e700 	.word	0x0000e700
    6910:	0000e714 	.word	0x0000e714
    6914:	981f      	ldr	r0, [sp, #124]	; 0x7c
    6916:	2800      	cmp	r0, #0
    6918:	dc00      	bgt.n	691c <_svfprintf_r+0xb24>
    691a:	e296      	b.n	6e4a <_svfprintf_r+0x1052>
    691c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    691e:	9914      	ldr	r1, [sp, #80]	; 0x50
    6920:	0013      	movs	r3, r2
    6922:	4690      	mov	r8, r2
    6924:	428b      	cmp	r3, r1
    6926:	dd00      	ble.n	692a <_svfprintf_r+0xb32>
    6928:	4688      	mov	r8, r1
    692a:	4643      	mov	r3, r8
    692c:	2b00      	cmp	r3, #0
    692e:	dd0c      	ble.n	694a <_svfprintf_r+0xb52>
    6930:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6932:	4444      	add	r4, r8
    6934:	6033      	str	r3, [r6, #0]
    6936:	4643      	mov	r3, r8
    6938:	6073      	str	r3, [r6, #4]
    693a:	687b      	ldr	r3, [r7, #4]
    693c:	60bc      	str	r4, [r7, #8]
    693e:	3301      	adds	r3, #1
    6940:	607b      	str	r3, [r7, #4]
    6942:	2b07      	cmp	r3, #7
    6944:	dd00      	ble.n	6948 <_svfprintf_r+0xb50>
    6946:	e3b7      	b.n	70b8 <_svfprintf_r+0x12c0>
    6948:	3608      	adds	r6, #8
    694a:	4643      	mov	r3, r8
    694c:	43db      	mvns	r3, r3
    694e:	4642      	mov	r2, r8
    6950:	17db      	asrs	r3, r3, #31
    6952:	4013      	ands	r3, r2
    6954:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6956:	1ad3      	subs	r3, r2, r3
    6958:	4698      	mov	r8, r3
    695a:	2b00      	cmp	r3, #0
    695c:	dc00      	bgt.n	6960 <_svfprintf_r+0xb68>
    695e:	e128      	b.n	6bb2 <_svfprintf_r+0xdba>
    6960:	2b10      	cmp	r3, #16
    6962:	dc01      	bgt.n	6968 <_svfprintf_r+0xb70>
    6964:	f000 fce7 	bl	7336 <_svfprintf_r+0x153e>
    6968:	4acf      	ldr	r2, [pc, #828]	; (6ca8 <_svfprintf_r+0xeb0>)
    696a:	0021      	movs	r1, r4
    696c:	4691      	mov	r9, r2
    696e:	2210      	movs	r2, #16
    6970:	687b      	ldr	r3, [r7, #4]
    6972:	4692      	mov	sl, r2
    6974:	9d09      	ldr	r5, [sp, #36]	; 0x24
    6976:	0032      	movs	r2, r6
    6978:	464c      	mov	r4, r9
    697a:	4646      	mov	r6, r8
    697c:	e004      	b.n	6988 <_svfprintf_r+0xb90>
    697e:	3208      	adds	r2, #8
    6980:	3e10      	subs	r6, #16
    6982:	2e10      	cmp	r6, #16
    6984:	dc00      	bgt.n	6988 <_svfprintf_r+0xb90>
    6986:	e104      	b.n	6b92 <_svfprintf_r+0xd9a>
    6988:	4650      	mov	r0, sl
    698a:	3110      	adds	r1, #16
    698c:	3301      	adds	r3, #1
    698e:	6014      	str	r4, [r2, #0]
    6990:	6050      	str	r0, [r2, #4]
    6992:	60b9      	str	r1, [r7, #8]
    6994:	607b      	str	r3, [r7, #4]
    6996:	2b07      	cmp	r3, #7
    6998:	ddf1      	ble.n	697e <_svfprintf_r+0xb86>
    699a:	003a      	movs	r2, r7
    699c:	9906      	ldr	r1, [sp, #24]
    699e:	0028      	movs	r0, r5
    69a0:	f005 f902 	bl	bba8 <__ssprint_r>
    69a4:	2800      	cmp	r0, #0
    69a6:	d001      	beq.n	69ac <_svfprintf_r+0xbb4>
    69a8:	f7ff faad 	bl	5f06 <_svfprintf_r+0x10e>
    69ac:	68b9      	ldr	r1, [r7, #8]
    69ae:	687b      	ldr	r3, [r7, #4]
    69b0:	aa32      	add	r2, sp, #200	; 0xc8
    69b2:	e7e5      	b.n	6980 <_svfprintf_r+0xb88>
    69b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    69b6:	2b00      	cmp	r3, #0
    69b8:	d100      	bne.n	69bc <_svfprintf_r+0xbc4>
    69ba:	e0ca      	b.n	6b52 <_svfprintf_r+0xd5a>
    69bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    69be:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    69c0:	ab32      	add	r3, sp, #200	; 0xc8
    69c2:	46b1      	mov	r9, r6
    69c4:	001e      	movs	r6, r3
    69c6:	0020      	movs	r0, r4
    69c8:	0029      	movs	r1, r5
    69ca:	220a      	movs	r2, #10
    69cc:	2300      	movs	r3, #0
    69ce:	f7fc ffa1 	bl	3914 <__aeabi_uldivmod>
    69d2:	3e01      	subs	r6, #1
    69d4:	3230      	adds	r2, #48	; 0x30
    69d6:	7032      	strb	r2, [r6, #0]
    69d8:	2300      	movs	r3, #0
    69da:	0020      	movs	r0, r4
    69dc:	0029      	movs	r1, r5
    69de:	220a      	movs	r2, #10
    69e0:	f7fc ff98 	bl	3914 <__aeabi_uldivmod>
    69e4:	0003      	movs	r3, r0
    69e6:	0004      	movs	r4, r0
    69e8:	000d      	movs	r5, r1
    69ea:	430b      	orrs	r3, r1
    69ec:	d1eb      	bne.n	69c6 <_svfprintf_r+0xbce>
    69ee:	0032      	movs	r2, r6
    69f0:	ab32      	add	r3, sp, #200	; 0xc8
    69f2:	1a9b      	subs	r3, r3, r2
    69f4:	9611      	str	r6, [sp, #68]	; 0x44
    69f6:	940c      	str	r4, [sp, #48]	; 0x30
    69f8:	950d      	str	r5, [sp, #52]	; 0x34
    69fa:	464e      	mov	r6, r9
    69fc:	930e      	str	r3, [sp, #56]	; 0x38
    69fe:	f7ff fb0b 	bl	6018 <_svfprintf_r+0x220>
    6a02:	2300      	movs	r3, #0
    6a04:	930e      	str	r3, [sp, #56]	; 0x38
    6a06:	ab32      	add	r3, sp, #200	; 0xc8
    6a08:	9311      	str	r3, [sp, #68]	; 0x44
    6a0a:	f7ff fb05 	bl	6018 <_svfprintf_r+0x220>
    6a0e:	003a      	movs	r2, r7
    6a10:	9906      	ldr	r1, [sp, #24]
    6a12:	9809      	ldr	r0, [sp, #36]	; 0x24
    6a14:	f005 f8c8 	bl	bba8 <__ssprint_r>
    6a18:	2800      	cmp	r0, #0
    6a1a:	d001      	beq.n	6a20 <_svfprintf_r+0xc28>
    6a1c:	f7ff fa73 	bl	5f06 <_svfprintf_r+0x10e>
    6a20:	ab16      	add	r3, sp, #88	; 0x58
    6a22:	7fdb      	ldrb	r3, [r3, #31]
    6a24:	68bc      	ldr	r4, [r7, #8]
    6a26:	4698      	mov	r8, r3
    6a28:	ae32      	add	r6, sp, #200	; 0xc8
    6a2a:	e560      	b.n	64ee <_svfprintf_r+0x6f6>
    6a2c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6a2e:	1e5d      	subs	r5, r3, #1
    6a30:	2d00      	cmp	r5, #0
    6a32:	dc00      	bgt.n	6a36 <_svfprintf_r+0xc3e>
    6a34:	e666      	b.n	6704 <_svfprintf_r+0x90c>
    6a36:	4b9c      	ldr	r3, [pc, #624]	; (6ca8 <_svfprintf_r+0xeb0>)
    6a38:	4699      	mov	r9, r3
    6a3a:	2d10      	cmp	r5, #16
    6a3c:	dd29      	ble.n	6a92 <_svfprintf_r+0xc9a>
    6a3e:	2310      	movs	r3, #16
    6a40:	0032      	movs	r2, r6
    6a42:	469a      	mov	sl, r3
    6a44:	002e      	movs	r6, r5
    6a46:	0021      	movs	r1, r4
    6a48:	4643      	mov	r3, r8
    6a4a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6a4c:	464d      	mov	r5, r9
    6a4e:	e003      	b.n	6a58 <_svfprintf_r+0xc60>
    6a50:	3e10      	subs	r6, #16
    6a52:	3208      	adds	r2, #8
    6a54:	2e10      	cmp	r6, #16
    6a56:	dd17      	ble.n	6a88 <_svfprintf_r+0xc90>
    6a58:	4650      	mov	r0, sl
    6a5a:	3110      	adds	r1, #16
    6a5c:	3301      	adds	r3, #1
    6a5e:	6015      	str	r5, [r2, #0]
    6a60:	6050      	str	r0, [r2, #4]
    6a62:	60b9      	str	r1, [r7, #8]
    6a64:	607b      	str	r3, [r7, #4]
    6a66:	2b07      	cmp	r3, #7
    6a68:	ddf2      	ble.n	6a50 <_svfprintf_r+0xc58>
    6a6a:	003a      	movs	r2, r7
    6a6c:	9906      	ldr	r1, [sp, #24]
    6a6e:	0020      	movs	r0, r4
    6a70:	f005 f89a 	bl	bba8 <__ssprint_r>
    6a74:	2800      	cmp	r0, #0
    6a76:	d001      	beq.n	6a7c <_svfprintf_r+0xc84>
    6a78:	f7ff fa45 	bl	5f06 <_svfprintf_r+0x10e>
    6a7c:	3e10      	subs	r6, #16
    6a7e:	68b9      	ldr	r1, [r7, #8]
    6a80:	687b      	ldr	r3, [r7, #4]
    6a82:	aa32      	add	r2, sp, #200	; 0xc8
    6a84:	2e10      	cmp	r6, #16
    6a86:	dce7      	bgt.n	6a58 <_svfprintf_r+0xc60>
    6a88:	46a9      	mov	r9, r5
    6a8a:	000c      	movs	r4, r1
    6a8c:	0035      	movs	r5, r6
    6a8e:	4698      	mov	r8, r3
    6a90:	0016      	movs	r6, r2
    6a92:	464b      	mov	r3, r9
    6a94:	6075      	str	r5, [r6, #4]
    6a96:	6033      	str	r3, [r6, #0]
    6a98:	1964      	adds	r4, r4, r5
    6a9a:	e629      	b.n	66f0 <_svfprintf_r+0x8f8>
    6a9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6a9e:	681a      	ldr	r2, [r3, #0]
    6aa0:	f7ff fbfb 	bl	629a <_svfprintf_r+0x4a2>
    6aa4:	6813      	ldr	r3, [r2, #0]
    6aa6:	9307      	str	r3, [sp, #28]
    6aa8:	f7ff fa82 	bl	5fb0 <_svfprintf_r+0x1b8>
    6aac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6aae:	681a      	ldr	r2, [r3, #0]
    6ab0:	f7ff fb84 	bl	61bc <_svfprintf_r+0x3c4>
    6ab4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6ab6:	681a      	ldr	r2, [r3, #0]
    6ab8:	f7ff fbd1 	bl	625e <_svfprintf_r+0x466>
    6abc:	9b19      	ldr	r3, [sp, #100]	; 0x64
    6abe:	68ba      	ldr	r2, [r7, #8]
    6ac0:	6033      	str	r3, [r6, #0]
    6ac2:	9b18      	ldr	r3, [sp, #96]	; 0x60
    6ac4:	469c      	mov	ip, r3
    6ac6:	6073      	str	r3, [r6, #4]
    6ac8:	687b      	ldr	r3, [r7, #4]
    6aca:	4462      	add	r2, ip
    6acc:	3301      	adds	r3, #1
    6ace:	0014      	movs	r4, r2
    6ad0:	60ba      	str	r2, [r7, #8]
    6ad2:	607b      	str	r3, [r7, #4]
    6ad4:	2b07      	cmp	r3, #7
    6ad6:	dd00      	ble.n	6ada <_svfprintf_r+0xce2>
    6ad8:	e202      	b.n	6ee0 <_svfprintf_r+0x10e8>
    6ada:	3608      	adds	r6, #8
    6adc:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6ade:	1e5d      	subs	r5, r3, #1
    6ae0:	2d00      	cmp	r5, #0
    6ae2:	dc00      	bgt.n	6ae6 <_svfprintf_r+0xcee>
    6ae4:	e57e      	b.n	65e4 <_svfprintf_r+0x7ec>
    6ae6:	4a70      	ldr	r2, [pc, #448]	; (6ca8 <_svfprintf_r+0xeb0>)
    6ae8:	687b      	ldr	r3, [r7, #4]
    6aea:	4691      	mov	r9, r2
    6aec:	2d10      	cmp	r5, #16
    6aee:	dd25      	ble.n	6b3c <_svfprintf_r+0xd44>
    6af0:	2210      	movs	r2, #16
    6af2:	0021      	movs	r1, r4
    6af4:	4690      	mov	r8, r2
    6af6:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6af8:	0032      	movs	r2, r6
    6afa:	002e      	movs	r6, r5
    6afc:	464d      	mov	r5, r9
    6afe:	e003      	b.n	6b08 <_svfprintf_r+0xd10>
    6b00:	3208      	adds	r2, #8
    6b02:	3e10      	subs	r6, #16
    6b04:	2e10      	cmp	r6, #16
    6b06:	dd15      	ble.n	6b34 <_svfprintf_r+0xd3c>
    6b08:	4640      	mov	r0, r8
    6b0a:	3110      	adds	r1, #16
    6b0c:	3301      	adds	r3, #1
    6b0e:	6015      	str	r5, [r2, #0]
    6b10:	6050      	str	r0, [r2, #4]
    6b12:	60b9      	str	r1, [r7, #8]
    6b14:	607b      	str	r3, [r7, #4]
    6b16:	2b07      	cmp	r3, #7
    6b18:	ddf2      	ble.n	6b00 <_svfprintf_r+0xd08>
    6b1a:	003a      	movs	r2, r7
    6b1c:	9906      	ldr	r1, [sp, #24]
    6b1e:	0020      	movs	r0, r4
    6b20:	f005 f842 	bl	bba8 <__ssprint_r>
    6b24:	2800      	cmp	r0, #0
    6b26:	d001      	beq.n	6b2c <_svfprintf_r+0xd34>
    6b28:	f7ff f9ed 	bl	5f06 <_svfprintf_r+0x10e>
    6b2c:	68b9      	ldr	r1, [r7, #8]
    6b2e:	687b      	ldr	r3, [r7, #4]
    6b30:	aa32      	add	r2, sp, #200	; 0xc8
    6b32:	e7e6      	b.n	6b02 <_svfprintf_r+0xd0a>
    6b34:	46a9      	mov	r9, r5
    6b36:	000c      	movs	r4, r1
    6b38:	0035      	movs	r5, r6
    6b3a:	0016      	movs	r6, r2
    6b3c:	464a      	mov	r2, r9
    6b3e:	1964      	adds	r4, r4, r5
    6b40:	3301      	adds	r3, #1
    6b42:	6032      	str	r2, [r6, #0]
    6b44:	6075      	str	r5, [r6, #4]
    6b46:	60bc      	str	r4, [r7, #8]
    6b48:	607b      	str	r3, [r7, #4]
    6b4a:	2b07      	cmp	r3, #7
    6b4c:	dc00      	bgt.n	6b50 <_svfprintf_r+0xd58>
    6b4e:	e548      	b.n	65e2 <_svfprintf_r+0x7ea>
    6b50:	e5e5      	b.n	671e <_svfprintf_r+0x926>
    6b52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6b54:	2b09      	cmp	r3, #9
    6b56:	d900      	bls.n	6b5a <_svfprintf_r+0xd62>
    6b58:	e730      	b.n	69bc <_svfprintf_r+0xbc4>
    6b5a:	9c08      	ldr	r4, [sp, #32]
    6b5c:	2227      	movs	r2, #39	; 0x27
    6b5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6b60:	a928      	add	r1, sp, #160	; 0xa0
    6b62:	3330      	adds	r3, #48	; 0x30
    6b64:	548b      	strb	r3, [r1, r2]
    6b66:	2301      	movs	r3, #1
    6b68:	aa16      	add	r2, sp, #88	; 0x58
    6b6a:	4694      	mov	ip, r2
    6b6c:	930e      	str	r3, [sp, #56]	; 0x38
    6b6e:	336e      	adds	r3, #110	; 0x6e
    6b70:	4463      	add	r3, ip
    6b72:	9408      	str	r4, [sp, #32]
    6b74:	9311      	str	r3, [sp, #68]	; 0x44
    6b76:	f7ff fa4f 	bl	6018 <_svfprintf_r+0x220>
    6b7a:	2b30      	cmp	r3, #48	; 0x30
    6b7c:	d100      	bne.n	6b80 <_svfprintf_r+0xd88>
    6b7e:	e20b      	b.n	6f98 <_svfprintf_r+0x11a0>
    6b80:	2330      	movs	r3, #48	; 0x30
    6b82:	3a02      	subs	r2, #2
    6b84:	7013      	strb	r3, [r2, #0]
    6b86:	ab32      	add	r3, sp, #200	; 0xc8
    6b88:	1a9b      	subs	r3, r3, r2
    6b8a:	930e      	str	r3, [sp, #56]	; 0x38
    6b8c:	9211      	str	r2, [sp, #68]	; 0x44
    6b8e:	f7ff fa43 	bl	6018 <_svfprintf_r+0x220>
    6b92:	46b0      	mov	r8, r6
    6b94:	46a1      	mov	r9, r4
    6b96:	0016      	movs	r6, r2
    6b98:	000c      	movs	r4, r1
    6b9a:	464a      	mov	r2, r9
    6b9c:	6032      	str	r2, [r6, #0]
    6b9e:	4642      	mov	r2, r8
    6ba0:	4444      	add	r4, r8
    6ba2:	3301      	adds	r3, #1
    6ba4:	6072      	str	r2, [r6, #4]
    6ba6:	60bc      	str	r4, [r7, #8]
    6ba8:	607b      	str	r3, [r7, #4]
    6baa:	2b07      	cmp	r3, #7
    6bac:	dd00      	ble.n	6bb0 <_svfprintf_r+0xdb8>
    6bae:	e29c      	b.n	70ea <_svfprintf_r+0x12f2>
    6bb0:	3608      	adds	r6, #8
    6bb2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6bb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6bb6:	4293      	cmp	r3, r2
    6bb8:	db4c      	blt.n	6c54 <_svfprintf_r+0xe5c>
    6bba:	9a08      	ldr	r2, [sp, #32]
    6bbc:	07d2      	lsls	r2, r2, #31
    6bbe:	d449      	bmi.n	6c54 <_svfprintf_r+0xe5c>
    6bc0:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6bc2:	9913      	ldr	r1, [sp, #76]	; 0x4c
    6bc4:	1ad3      	subs	r3, r2, r3
    6bc6:	1a52      	subs	r2, r2, r1
    6bc8:	4690      	mov	r8, r2
    6bca:	429a      	cmp	r2, r3
    6bcc:	dd00      	ble.n	6bd0 <_svfprintf_r+0xdd8>
    6bce:	4698      	mov	r8, r3
    6bd0:	4642      	mov	r2, r8
    6bd2:	2a00      	cmp	r2, #0
    6bd4:	dd0f      	ble.n	6bf6 <_svfprintf_r+0xdfe>
    6bd6:	9913      	ldr	r1, [sp, #76]	; 0x4c
    6bd8:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6bda:	468c      	mov	ip, r1
    6bdc:	4462      	add	r2, ip
    6bde:	6032      	str	r2, [r6, #0]
    6be0:	4642      	mov	r2, r8
    6be2:	6072      	str	r2, [r6, #4]
    6be4:	687a      	ldr	r2, [r7, #4]
    6be6:	4444      	add	r4, r8
    6be8:	3201      	adds	r2, #1
    6bea:	60bc      	str	r4, [r7, #8]
    6bec:	607a      	str	r2, [r7, #4]
    6bee:	2a07      	cmp	r2, #7
    6bf0:	dd00      	ble.n	6bf4 <_svfprintf_r+0xdfc>
    6bf2:	e286      	b.n	7102 <_svfprintf_r+0x130a>
    6bf4:	3608      	adds	r6, #8
    6bf6:	4642      	mov	r2, r8
    6bf8:	43d5      	mvns	r5, r2
    6bfa:	17ed      	asrs	r5, r5, #31
    6bfc:	4015      	ands	r5, r2
    6bfe:	1b5d      	subs	r5, r3, r5
    6c00:	2d00      	cmp	r5, #0
    6c02:	dc00      	bgt.n	6c06 <_svfprintf_r+0xe0e>
    6c04:	e4ee      	b.n	65e4 <_svfprintf_r+0x7ec>
    6c06:	4a28      	ldr	r2, [pc, #160]	; (6ca8 <_svfprintf_r+0xeb0>)
    6c08:	687b      	ldr	r3, [r7, #4]
    6c0a:	4691      	mov	r9, r2
    6c0c:	2d10      	cmp	r5, #16
    6c0e:	dd95      	ble.n	6b3c <_svfprintf_r+0xd44>
    6c10:	2210      	movs	r2, #16
    6c12:	0021      	movs	r1, r4
    6c14:	4690      	mov	r8, r2
    6c16:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6c18:	0032      	movs	r2, r6
    6c1a:	002e      	movs	r6, r5
    6c1c:	464d      	mov	r5, r9
    6c1e:	e003      	b.n	6c28 <_svfprintf_r+0xe30>
    6c20:	3208      	adds	r2, #8
    6c22:	3e10      	subs	r6, #16
    6c24:	2e10      	cmp	r6, #16
    6c26:	dd85      	ble.n	6b34 <_svfprintf_r+0xd3c>
    6c28:	4640      	mov	r0, r8
    6c2a:	3110      	adds	r1, #16
    6c2c:	3301      	adds	r3, #1
    6c2e:	6015      	str	r5, [r2, #0]
    6c30:	6050      	str	r0, [r2, #4]
    6c32:	60b9      	str	r1, [r7, #8]
    6c34:	607b      	str	r3, [r7, #4]
    6c36:	2b07      	cmp	r3, #7
    6c38:	ddf2      	ble.n	6c20 <_svfprintf_r+0xe28>
    6c3a:	003a      	movs	r2, r7
    6c3c:	9906      	ldr	r1, [sp, #24]
    6c3e:	0020      	movs	r0, r4
    6c40:	f004 ffb2 	bl	bba8 <__ssprint_r>
    6c44:	2800      	cmp	r0, #0
    6c46:	d001      	beq.n	6c4c <_svfprintf_r+0xe54>
    6c48:	f7ff f95d 	bl	5f06 <_svfprintf_r+0x10e>
    6c4c:	68b9      	ldr	r1, [r7, #8]
    6c4e:	687b      	ldr	r3, [r7, #4]
    6c50:	aa32      	add	r2, sp, #200	; 0xc8
    6c52:	e7e6      	b.n	6c22 <_svfprintf_r+0xe2a>
    6c54:	9a19      	ldr	r2, [sp, #100]	; 0x64
    6c56:	6032      	str	r2, [r6, #0]
    6c58:	9a18      	ldr	r2, [sp, #96]	; 0x60
    6c5a:	4694      	mov	ip, r2
    6c5c:	6072      	str	r2, [r6, #4]
    6c5e:	687a      	ldr	r2, [r7, #4]
    6c60:	4464      	add	r4, ip
    6c62:	3201      	adds	r2, #1
    6c64:	60bc      	str	r4, [r7, #8]
    6c66:	607a      	str	r2, [r7, #4]
    6c68:	2a07      	cmp	r2, #7
    6c6a:	dd00      	ble.n	6c6e <_svfprintf_r+0xe76>
    6c6c:	e230      	b.n	70d0 <_svfprintf_r+0x12d8>
    6c6e:	3608      	adds	r6, #8
    6c70:	e7a6      	b.n	6bc0 <_svfprintf_r+0xdc8>
    6c72:	003a      	movs	r2, r7
    6c74:	9906      	ldr	r1, [sp, #24]
    6c76:	9809      	ldr	r0, [sp, #36]	; 0x24
    6c78:	f004 ff96 	bl	bba8 <__ssprint_r>
    6c7c:	2800      	cmp	r0, #0
    6c7e:	d001      	beq.n	6c84 <_svfprintf_r+0xe8c>
    6c80:	f7ff f941 	bl	5f06 <_svfprintf_r+0x10e>
    6c84:	68bc      	ldr	r4, [r7, #8]
    6c86:	687b      	ldr	r3, [r7, #4]
    6c88:	ae32      	add	r6, sp, #200	; 0xc8
    6c8a:	e513      	b.n	66b4 <_svfprintf_r+0x8bc>
    6c8c:	003a      	movs	r2, r7
    6c8e:	9906      	ldr	r1, [sp, #24]
    6c90:	9809      	ldr	r0, [sp, #36]	; 0x24
    6c92:	f004 ff89 	bl	bba8 <__ssprint_r>
    6c96:	2800      	cmp	r0, #0
    6c98:	d001      	beq.n	6c9e <_svfprintf_r+0xea6>
    6c9a:	f7ff f934 	bl	5f06 <_svfprintf_r+0x10e>
    6c9e:	687b      	ldr	r3, [r7, #4]
    6ca0:	68bc      	ldr	r4, [r7, #8]
    6ca2:	4698      	mov	r8, r3
    6ca4:	ae32      	add	r6, sp, #200	; 0xc8
    6ca6:	e513      	b.n	66d0 <_svfprintf_r+0x8d8>
    6ca8:	0000e714 	.word	0x0000e714
    6cac:	2307      	movs	r3, #7
    6cae:	3207      	adds	r2, #7
    6cb0:	439a      	bics	r2, r3
    6cb2:	3301      	adds	r3, #1
    6cb4:	469c      	mov	ip, r3
    6cb6:	4494      	add	ip, r2
    6cb8:	4663      	mov	r3, ip
    6cba:	930f      	str	r3, [sp, #60]	; 0x3c
    6cbc:	6853      	ldr	r3, [r2, #4]
    6cbe:	6812      	ldr	r2, [r2, #0]
    6cc0:	930d      	str	r3, [sp, #52]	; 0x34
    6cc2:	920c      	str	r2, [sp, #48]	; 0x30
    6cc4:	2b00      	cmp	r3, #0
    6cc6:	db01      	blt.n	6ccc <_svfprintf_r+0xed4>
    6cc8:	f7ff f97a 	bl	5fc0 <_svfprintf_r+0x1c8>
    6ccc:	980c      	ldr	r0, [sp, #48]	; 0x30
    6cce:	990d      	ldr	r1, [sp, #52]	; 0x34
    6cd0:	2300      	movs	r3, #0
    6cd2:	4242      	negs	r2, r0
    6cd4:	418b      	sbcs	r3, r1
    6cd6:	0011      	movs	r1, r2
    6cd8:	001a      	movs	r2, r3
    6cda:	232d      	movs	r3, #45	; 0x2d
    6cdc:	a816      	add	r0, sp, #88	; 0x58
    6cde:	77c3      	strb	r3, [r0, #31]
    6ce0:	0008      	movs	r0, r1
    6ce2:	4310      	orrs	r0, r2
    6ce4:	910c      	str	r1, [sp, #48]	; 0x30
    6ce6:	920d      	str	r2, [sp, #52]	; 0x34
    6ce8:	4698      	mov	r8, r3
    6cea:	0002      	movs	r2, r0
    6cec:	3b2c      	subs	r3, #44	; 0x2c
    6cee:	f7ff f970 	bl	5fd2 <_svfprintf_r+0x1da>
    6cf2:	003a      	movs	r2, r7
    6cf4:	9906      	ldr	r1, [sp, #24]
    6cf6:	9809      	ldr	r0, [sp, #36]	; 0x24
    6cf8:	f004 ff56 	bl	bba8 <__ssprint_r>
    6cfc:	2800      	cmp	r0, #0
    6cfe:	d001      	beq.n	6d04 <_svfprintf_r+0xf0c>
    6d00:	f7ff f901 	bl	5f06 <_svfprintf_r+0x10e>
    6d04:	68bc      	ldr	r4, [r7, #8]
    6d06:	ae32      	add	r6, sp, #200	; 0xc8
    6d08:	e418      	b.n	653c <_svfprintf_r+0x744>
    6d0a:	9916      	ldr	r1, [sp, #88]	; 0x58
    6d0c:	9d15      	ldr	r5, [sp, #84]	; 0x54
    6d0e:	000a      	movs	r2, r1
    6d10:	0008      	movs	r0, r1
    6d12:	002b      	movs	r3, r5
    6d14:	0029      	movs	r1, r5
    6d16:	f006 fab3 	bl	d280 <__aeabi_dcmpun>
    6d1a:	2800      	cmp	r0, #0
    6d1c:	d000      	beq.n	6d20 <_svfprintf_r+0xf28>
    6d1e:	e2e6      	b.n	72ee <_svfprintf_r+0x14f6>
    6d20:	4653      	mov	r3, sl
    6d22:	3301      	adds	r3, #1
    6d24:	d100      	bne.n	6d28 <_svfprintf_r+0xf30>
    6d26:	e20d      	b.n	7144 <_svfprintf_r+0x134c>
    6d28:	2320      	movs	r3, #32
    6d2a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    6d2c:	439a      	bics	r2, r3
    6d2e:	920e      	str	r2, [sp, #56]	; 0x38
    6d30:	2a47      	cmp	r2, #71	; 0x47
    6d32:	d100      	bne.n	6d36 <_svfprintf_r+0xf3e>
    6d34:	e11c      	b.n	6f70 <_svfprintf_r+0x1178>
    6d36:	2380      	movs	r3, #128	; 0x80
    6d38:	005b      	lsls	r3, r3, #1
    6d3a:	4323      	orrs	r3, r4
    6d3c:	9308      	str	r3, [sp, #32]
    6d3e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    6d40:	2b00      	cmp	r3, #0
    6d42:	da00      	bge.n	6d46 <_svfprintf_r+0xf4e>
    6d44:	e221      	b.n	718a <_svfprintf_r+0x1392>
    6d46:	9a16      	ldr	r2, [sp, #88]	; 0x58
    6d48:	9307      	str	r3, [sp, #28]
    6d4a:	2300      	movs	r3, #0
    6d4c:	4691      	mov	r9, r2
    6d4e:	9310      	str	r3, [sp, #64]	; 0x40
    6d50:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6d52:	2b66      	cmp	r3, #102	; 0x66
    6d54:	d100      	bne.n	6d58 <_svfprintf_r+0xf60>
    6d56:	e1fc      	b.n	7152 <_svfprintf_r+0x135a>
    6d58:	2b46      	cmp	r3, #70	; 0x46
    6d5a:	d100      	bne.n	6d5e <_svfprintf_r+0xf66>
    6d5c:	e0db      	b.n	6f16 <_svfprintf_r+0x111e>
    6d5e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    6d60:	9809      	ldr	r0, [sp, #36]	; 0x24
    6d62:	3a45      	subs	r2, #69	; 0x45
    6d64:	0013      	movs	r3, r2
    6d66:	4259      	negs	r1, r3
    6d68:	4159      	adcs	r1, r3
    6d6a:	ab20      	add	r3, sp, #128	; 0x80
    6d6c:	000d      	movs	r5, r1
    6d6e:	9303      	str	r3, [sp, #12]
    6d70:	ab1f      	add	r3, sp, #124	; 0x7c
    6d72:	9302      	str	r3, [sp, #8]
    6d74:	2302      	movs	r3, #2
    6d76:	aa23      	add	r2, sp, #140	; 0x8c
    6d78:	4455      	add	r5, sl
    6d7a:	921b      	str	r2, [sp, #108]	; 0x6c
    6d7c:	9204      	str	r2, [sp, #16]
    6d7e:	9300      	str	r3, [sp, #0]
    6d80:	9501      	str	r5, [sp, #4]
    6d82:	9b07      	ldr	r3, [sp, #28]
    6d84:	464a      	mov	r2, r9
    6d86:	f001 fae1 	bl	834c <_dtoa_r>
    6d8a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6d8c:	9011      	str	r0, [sp, #68]	; 0x44
    6d8e:	2b67      	cmp	r3, #103	; 0x67
    6d90:	d000      	beq.n	6d94 <_svfprintf_r+0xf9c>
    6d92:	e239      	b.n	7208 <_svfprintf_r+0x1410>
    6d94:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6d96:	4698      	mov	r8, r3
    6d98:	44a8      	add	r8, r5
    6d9a:	07e3      	lsls	r3, r4, #31
    6d9c:	d400      	bmi.n	6da0 <_svfprintf_r+0xfa8>
    6d9e:	e28b      	b.n	72b8 <_svfprintf_r+0x14c0>
    6da0:	2300      	movs	r3, #0
    6da2:	2200      	movs	r2, #0
    6da4:	4648      	mov	r0, r9
    6da6:	9907      	ldr	r1, [sp, #28]
    6da8:	f7fe f9e0 	bl	516c <__aeabi_dcmpeq>
    6dac:	4643      	mov	r3, r8
    6dae:	2800      	cmp	r0, #0
    6db0:	d10a      	bne.n	6dc8 <_svfprintf_r+0xfd0>
    6db2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6db4:	4543      	cmp	r3, r8
    6db6:	d207      	bcs.n	6dc8 <_svfprintf_r+0xfd0>
    6db8:	2130      	movs	r1, #48	; 0x30
    6dba:	4640      	mov	r0, r8
    6dbc:	1c5a      	adds	r2, r3, #1
    6dbe:	9223      	str	r2, [sp, #140]	; 0x8c
    6dc0:	7019      	strb	r1, [r3, #0]
    6dc2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6dc4:	4298      	cmp	r0, r3
    6dc6:	d8f9      	bhi.n	6dbc <_svfprintf_r+0xfc4>
    6dc8:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6dca:	1a9b      	subs	r3, r3, r2
    6dcc:	9314      	str	r3, [sp, #80]	; 0x50
    6dce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6dd0:	2b47      	cmp	r3, #71	; 0x47
    6dd2:	d100      	bne.n	6dd6 <_svfprintf_r+0xfde>
    6dd4:	e0f6      	b.n	6fc4 <_svfprintf_r+0x11cc>
    6dd6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6dd8:	2b65      	cmp	r3, #101	; 0x65
    6dda:	dc00      	bgt.n	6dde <_svfprintf_r+0xfe6>
    6ddc:	e226      	b.n	722c <_svfprintf_r+0x1434>
    6dde:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6de0:	2b66      	cmp	r3, #102	; 0x66
    6de2:	d100      	bne.n	6de6 <_svfprintf_r+0xfee>
    6de4:	e1f4      	b.n	71d0 <_svfprintf_r+0x13d8>
    6de6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6de8:	9313      	str	r3, [sp, #76]	; 0x4c
    6dea:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6dec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6dee:	0019      	movs	r1, r3
    6df0:	4291      	cmp	r1, r2
    6df2:	dd00      	ble.n	6df6 <_svfprintf_r+0xffe>
    6df4:	e1d4      	b.n	71a0 <_svfprintf_r+0x13a8>
    6df6:	07e3      	lsls	r3, r4, #31
    6df8:	d500      	bpl.n	6dfc <_svfprintf_r+0x1004>
    6dfa:	e249      	b.n	7290 <_svfprintf_r+0x1498>
    6dfc:	43d3      	mvns	r3, r2
    6dfe:	17db      	asrs	r3, r3, #31
    6e00:	0011      	movs	r1, r2
    6e02:	401a      	ands	r2, r3
    6e04:	2367      	movs	r3, #103	; 0x67
    6e06:	9207      	str	r2, [sp, #28]
    6e08:	910e      	str	r1, [sp, #56]	; 0x38
    6e0a:	9312      	str	r3, [sp, #72]	; 0x48
    6e0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6e0e:	2b00      	cmp	r3, #0
    6e10:	d000      	beq.n	6e14 <_svfprintf_r+0x101c>
    6e12:	e0cf      	b.n	6fb4 <_svfprintf_r+0x11bc>
    6e14:	ab16      	add	r3, sp, #88	; 0x58
    6e16:	7fdb      	ldrb	r3, [r3, #31]
    6e18:	4698      	mov	r8, r3
    6e1a:	2300      	movs	r3, #0
    6e1c:	469a      	mov	sl, r3
    6e1e:	f7ff f903 	bl	6028 <_svfprintf_r+0x230>
    6e22:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6e24:	990a      	ldr	r1, [sp, #40]	; 0x28
    6e26:	6813      	ldr	r3, [r2, #0]
    6e28:	6019      	str	r1, [r3, #0]
    6e2a:	0013      	movs	r3, r2
    6e2c:	3304      	adds	r3, #4
    6e2e:	930f      	str	r3, [sp, #60]	; 0x3c
    6e30:	f7ff f80d 	bl	5e4e <_svfprintf_r+0x56>
    6e34:	003a      	movs	r2, r7
    6e36:	9906      	ldr	r1, [sp, #24]
    6e38:	9809      	ldr	r0, [sp, #36]	; 0x24
    6e3a:	f004 feb5 	bl	bba8 <__ssprint_r>
    6e3e:	2800      	cmp	r0, #0
    6e40:	d001      	beq.n	6e46 <_svfprintf_r+0x104e>
    6e42:	f7ff f860 	bl	5f06 <_svfprintf_r+0x10e>
    6e46:	ae32      	add	r6, sp, #200	; 0xc8
    6e48:	e48e      	b.n	6768 <_svfprintf_r+0x970>
    6e4a:	4bde      	ldr	r3, [pc, #888]	; (71c4 <_svfprintf_r+0x13cc>)
    6e4c:	3401      	adds	r4, #1
    6e4e:	6033      	str	r3, [r6, #0]
    6e50:	2301      	movs	r3, #1
    6e52:	6073      	str	r3, [r6, #4]
    6e54:	687b      	ldr	r3, [r7, #4]
    6e56:	60bc      	str	r4, [r7, #8]
    6e58:	3301      	adds	r3, #1
    6e5a:	607b      	str	r3, [r7, #4]
    6e5c:	2b07      	cmp	r3, #7
    6e5e:	dc7a      	bgt.n	6f56 <_svfprintf_r+0x115e>
    6e60:	3608      	adds	r6, #8
    6e62:	2800      	cmp	r0, #0
    6e64:	d107      	bne.n	6e76 <_svfprintf_r+0x107e>
    6e66:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6e68:	2b00      	cmp	r3, #0
    6e6a:	d104      	bne.n	6e76 <_svfprintf_r+0x107e>
    6e6c:	9b08      	ldr	r3, [sp, #32]
    6e6e:	07db      	lsls	r3, r3, #31
    6e70:	d401      	bmi.n	6e76 <_svfprintf_r+0x107e>
    6e72:	f7ff fbb7 	bl	65e4 <_svfprintf_r+0x7ec>
    6e76:	9b19      	ldr	r3, [sp, #100]	; 0x64
    6e78:	6033      	str	r3, [r6, #0]
    6e7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    6e7c:	1919      	adds	r1, r3, r4
    6e7e:	6073      	str	r3, [r6, #4]
    6e80:	687b      	ldr	r3, [r7, #4]
    6e82:	60b9      	str	r1, [r7, #8]
    6e84:	3301      	adds	r3, #1
    6e86:	607b      	str	r3, [r7, #4]
    6e88:	2b07      	cmp	r3, #7
    6e8a:	dd00      	ble.n	6e8e <_svfprintf_r+0x1096>
    6e8c:	e1f2      	b.n	7274 <_svfprintf_r+0x147c>
    6e8e:	0032      	movs	r2, r6
    6e90:	3208      	adds	r2, #8
    6e92:	2800      	cmp	r0, #0
    6e94:	da00      	bge.n	6e98 <_svfprintf_r+0x10a0>
    6e96:	e1cc      	b.n	7232 <_svfprintf_r+0x143a>
    6e98:	9811      	ldr	r0, [sp, #68]	; 0x44
    6e9a:	3301      	adds	r3, #1
    6e9c:	6010      	str	r0, [r2, #0]
    6e9e:	9814      	ldr	r0, [sp, #80]	; 0x50
    6ea0:	607b      	str	r3, [r7, #4]
    6ea2:	1844      	adds	r4, r0, r1
    6ea4:	6050      	str	r0, [r2, #4]
    6ea6:	60bc      	str	r4, [r7, #8]
    6ea8:	2b07      	cmp	r3, #7
    6eaa:	dd00      	ble.n	6eae <_svfprintf_r+0x10b6>
    6eac:	e437      	b.n	671e <_svfprintf_r+0x926>
    6eae:	3208      	adds	r2, #8
    6eb0:	0016      	movs	r6, r2
    6eb2:	f7ff fb97 	bl	65e4 <_svfprintf_r+0x7ec>
    6eb6:	990f      	ldr	r1, [sp, #60]	; 0x3c
    6eb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6eba:	680b      	ldr	r3, [r1, #0]
    6ebc:	601a      	str	r2, [r3, #0]
    6ebe:	17d2      	asrs	r2, r2, #31
    6ec0:	605a      	str	r2, [r3, #4]
    6ec2:	000b      	movs	r3, r1
    6ec4:	3304      	adds	r3, #4
    6ec6:	930f      	str	r3, [sp, #60]	; 0x3c
    6ec8:	f7fe ffc1 	bl	5e4e <_svfprintf_r+0x56>
    6ecc:	464b      	mov	r3, r9
    6ece:	3101      	adds	r1, #1
    6ed0:	431c      	orrs	r4, r3
    6ed2:	780b      	ldrb	r3, [r1, #0]
    6ed4:	f7fe fff4 	bl	5ec0 <_svfprintf_r+0xc8>
    6ed8:	4bbb      	ldr	r3, [pc, #748]	; (71c8 <_svfprintf_r+0x13d0>)
    6eda:	9311      	str	r3, [sp, #68]	; 0x44
    6edc:	f7ff f937 	bl	614e <_svfprintf_r+0x356>
    6ee0:	003a      	movs	r2, r7
    6ee2:	9906      	ldr	r1, [sp, #24]
    6ee4:	9809      	ldr	r0, [sp, #36]	; 0x24
    6ee6:	f004 fe5f 	bl	bba8 <__ssprint_r>
    6eea:	2800      	cmp	r0, #0
    6eec:	d001      	beq.n	6ef2 <_svfprintf_r+0x10fa>
    6eee:	f7ff f80a 	bl	5f06 <_svfprintf_r+0x10e>
    6ef2:	68bc      	ldr	r4, [r7, #8]
    6ef4:	ae32      	add	r6, sp, #200	; 0xc8
    6ef6:	e5f1      	b.n	6adc <_svfprintf_r+0xce4>
    6ef8:	2140      	movs	r1, #64	; 0x40
    6efa:	9809      	ldr	r0, [sp, #36]	; 0x24
    6efc:	f002 fb74 	bl	95e8 <_malloc_r>
    6f00:	9b06      	ldr	r3, [sp, #24]
    6f02:	6018      	str	r0, [r3, #0]
    6f04:	6118      	str	r0, [r3, #16]
    6f06:	2800      	cmp	r0, #0
    6f08:	d100      	bne.n	6f0c <_svfprintf_r+0x1114>
    6f0a:	e24f      	b.n	73ac <_svfprintf_r+0x15b4>
    6f0c:	2340      	movs	r3, #64	; 0x40
    6f0e:	9a06      	ldr	r2, [sp, #24]
    6f10:	6153      	str	r3, [r2, #20]
    6f12:	f7fe ff8e 	bl	5e32 <_svfprintf_r+0x3a>
    6f16:	ab23      	add	r3, sp, #140	; 0x8c
    6f18:	931b      	str	r3, [sp, #108]	; 0x6c
    6f1a:	9304      	str	r3, [sp, #16]
    6f1c:	ab20      	add	r3, sp, #128	; 0x80
    6f1e:	9303      	str	r3, [sp, #12]
    6f20:	ab1f      	add	r3, sp, #124	; 0x7c
    6f22:	9302      	str	r3, [sp, #8]
    6f24:	4653      	mov	r3, sl
    6f26:	9301      	str	r3, [sp, #4]
    6f28:	2303      	movs	r3, #3
    6f2a:	464a      	mov	r2, r9
    6f2c:	9300      	str	r3, [sp, #0]
    6f2e:	9809      	ldr	r0, [sp, #36]	; 0x24
    6f30:	9b07      	ldr	r3, [sp, #28]
    6f32:	f001 fa0b 	bl	834c <_dtoa_r>
    6f36:	4655      	mov	r5, sl
    6f38:	9011      	str	r0, [sp, #68]	; 0x44
    6f3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6f3c:	4698      	mov	r8, r3
    6f3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6f40:	44a8      	add	r8, r5
    6f42:	2b46      	cmp	r3, #70	; 0x46
    6f44:	d000      	beq.n	6f48 <_svfprintf_r+0x1150>
    6f46:	e72b      	b.n	6da0 <_svfprintf_r+0xfa8>
    6f48:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6f4a:	781b      	ldrb	r3, [r3, #0]
    6f4c:	2b30      	cmp	r3, #48	; 0x30
    6f4e:	d016      	beq.n	6f7e <_svfprintf_r+0x1186>
    6f50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6f52:	4498      	add	r8, r3
    6f54:	e724      	b.n	6da0 <_svfprintf_r+0xfa8>
    6f56:	003a      	movs	r2, r7
    6f58:	9906      	ldr	r1, [sp, #24]
    6f5a:	9809      	ldr	r0, [sp, #36]	; 0x24
    6f5c:	f004 fe24 	bl	bba8 <__ssprint_r>
    6f60:	2800      	cmp	r0, #0
    6f62:	d001      	beq.n	6f68 <_svfprintf_r+0x1170>
    6f64:	f7fe ffcf 	bl	5f06 <_svfprintf_r+0x10e>
    6f68:	981f      	ldr	r0, [sp, #124]	; 0x7c
    6f6a:	68bc      	ldr	r4, [r7, #8]
    6f6c:	ae32      	add	r6, sp, #200	; 0xc8
    6f6e:	e778      	b.n	6e62 <_svfprintf_r+0x106a>
    6f70:	4653      	mov	r3, sl
    6f72:	2b00      	cmp	r3, #0
    6f74:	d000      	beq.n	6f78 <_svfprintf_r+0x1180>
    6f76:	e6de      	b.n	6d36 <_svfprintf_r+0xf3e>
    6f78:	3301      	adds	r3, #1
    6f7a:	469a      	mov	sl, r3
    6f7c:	e6db      	b.n	6d36 <_svfprintf_r+0xf3e>
    6f7e:	2200      	movs	r2, #0
    6f80:	2300      	movs	r3, #0
    6f82:	4648      	mov	r0, r9
    6f84:	9907      	ldr	r1, [sp, #28]
    6f86:	f7fe f8f1 	bl	516c <__aeabi_dcmpeq>
    6f8a:	2800      	cmp	r0, #0
    6f8c:	d1e0      	bne.n	6f50 <_svfprintf_r+0x1158>
    6f8e:	2301      	movs	r3, #1
    6f90:	1b5b      	subs	r3, r3, r5
    6f92:	931f      	str	r3, [sp, #124]	; 0x7c
    6f94:	4498      	add	r8, r3
    6f96:	e703      	b.n	6da0 <_svfprintf_r+0xfa8>
    6f98:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6f9a:	ab32      	add	r3, sp, #200	; 0xc8
    6f9c:	1a9b      	subs	r3, r3, r2
    6f9e:	930e      	str	r3, [sp, #56]	; 0x38
    6fa0:	f7ff f83a 	bl	6018 <_svfprintf_r+0x220>
    6fa4:	9811      	ldr	r0, [sp, #68]	; 0x44
    6fa6:	f7fe fbe5 	bl	5774 <strlen>
    6faa:	0002      	movs	r2, r0
    6fac:	900e      	str	r0, [sp, #56]	; 0x38
    6fae:	0003      	movs	r3, r0
    6fb0:	f7ff f9cd 	bl	634e <_svfprintf_r+0x556>
    6fb4:	232d      	movs	r3, #45	; 0x2d
    6fb6:	aa16      	add	r2, sp, #88	; 0x58
    6fb8:	77d3      	strb	r3, [r2, #31]
    6fba:	4698      	mov	r8, r3
    6fbc:	2300      	movs	r3, #0
    6fbe:	469a      	mov	sl, r3
    6fc0:	f7ff f835 	bl	602e <_svfprintf_r+0x236>
    6fc4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6fc6:	9313      	str	r3, [sp, #76]	; 0x4c
    6fc8:	1cda      	adds	r2, r3, #3
    6fca:	db02      	blt.n	6fd2 <_svfprintf_r+0x11da>
    6fcc:	459a      	cmp	sl, r3
    6fce:	db00      	blt.n	6fd2 <_svfprintf_r+0x11da>
    6fd0:	e70b      	b.n	6dea <_svfprintf_r+0xff2>
    6fd2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6fd4:	3b02      	subs	r3, #2
    6fd6:	9312      	str	r3, [sp, #72]	; 0x48
    6fd8:	222c      	movs	r2, #44	; 0x2c
    6fda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6fdc:	2148      	movs	r1, #72	; 0x48
    6fde:	1e5d      	subs	r5, r3, #1
    6fe0:	ab16      	add	r3, sp, #88	; 0x58
    6fe2:	189b      	adds	r3, r3, r2
    6fe4:	466a      	mov	r2, sp
    6fe6:	1852      	adds	r2, r2, r1
    6fe8:	7812      	ldrb	r2, [r2, #0]
    6fea:	951f      	str	r5, [sp, #124]	; 0x7c
    6fec:	701a      	strb	r2, [r3, #0]
    6fee:	2d00      	cmp	r5, #0
    6ff0:	da00      	bge.n	6ff4 <_svfprintf_r+0x11fc>
    6ff2:	e1a4      	b.n	733e <_svfprintf_r+0x1546>
    6ff4:	212d      	movs	r1, #45	; 0x2d
    6ff6:	232b      	movs	r3, #43	; 0x2b
    6ff8:	aa16      	add	r2, sp, #88	; 0x58
    6ffa:	1852      	adds	r2, r2, r1
    6ffc:	7013      	strb	r3, [r2, #0]
    6ffe:	2d09      	cmp	r5, #9
    7000:	dc00      	bgt.n	7004 <_svfprintf_r+0x120c>
    7002:	e14c      	b.n	729e <_svfprintf_r+0x14a6>
    7004:	aa16      	add	r2, sp, #88	; 0x58
    7006:	233b      	movs	r3, #59	; 0x3b
    7008:	4694      	mov	ip, r2
    700a:	4463      	add	r3, ip
    700c:	469a      	mov	sl, r3
    700e:	46b1      	mov	r9, r6
    7010:	46a0      	mov	r8, r4
    7012:	4656      	mov	r6, sl
    7014:	e000      	b.n	7018 <_svfprintf_r+0x1220>
    7016:	0026      	movs	r6, r4
    7018:	0028      	movs	r0, r5
    701a:	210a      	movs	r1, #10
    701c:	f7fc fc74 	bl	3908 <__aeabi_idivmod>
    7020:	1e74      	subs	r4, r6, #1
    7022:	3130      	adds	r1, #48	; 0x30
    7024:	7021      	strb	r1, [r4, #0]
    7026:	0028      	movs	r0, r5
    7028:	210a      	movs	r1, #10
    702a:	f7fc fb87 	bl	373c <__divsi3>
    702e:	0005      	movs	r5, r0
    7030:	2809      	cmp	r0, #9
    7032:	dcf0      	bgt.n	7016 <_svfprintf_r+0x121e>
    7034:	0023      	movs	r3, r4
    7036:	4644      	mov	r4, r8
    7038:	46b0      	mov	r8, r6
    703a:	464e      	mov	r6, r9
    703c:	4699      	mov	r9, r3
    703e:	0003      	movs	r3, r0
    7040:	3330      	adds	r3, #48	; 0x30
    7042:	b2d8      	uxtb	r0, r3
    7044:	4643      	mov	r3, r8
    7046:	3b02      	subs	r3, #2
    7048:	7018      	strb	r0, [r3, #0]
    704a:	459a      	cmp	sl, r3
    704c:	d800      	bhi.n	7050 <_svfprintf_r+0x1258>
    704e:	e1b4      	b.n	73ba <_svfprintf_r+0x15c2>
    7050:	4642      	mov	r2, r8
    7052:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7054:	4645      	mov	r5, r8
    7056:	1a99      	subs	r1, r3, r2
    7058:	2301      	movs	r3, #1
    705a:	3107      	adds	r1, #7
    705c:	425b      	negs	r3, r3
    705e:	e001      	b.n	7064 <_svfprintf_r+0x126c>
    7060:	5ce8      	ldrb	r0, [r5, r3]
    7062:	3301      	adds	r3, #1
    7064:	aa21      	add	r2, sp, #132	; 0x84
    7066:	18d2      	adds	r2, r2, r3
    7068:	70d0      	strb	r0, [r2, #3]
    706a:	428b      	cmp	r3, r1
    706c:	d1f8      	bne.n	7060 <_svfprintf_r+0x1268>
    706e:	a916      	add	r1, sp, #88	; 0x58
    7070:	468c      	mov	ip, r1
    7072:	222e      	movs	r2, #46	; 0x2e
    7074:	464b      	mov	r3, r9
    7076:	4462      	add	r2, ip
    7078:	4694      	mov	ip, r2
    707a:	1afb      	subs	r3, r7, r3
    707c:	4463      	add	r3, ip
    707e:	aa21      	add	r2, sp, #132	; 0x84
    7080:	9914      	ldr	r1, [sp, #80]	; 0x50
    7082:	1a9b      	subs	r3, r3, r2
    7084:	469c      	mov	ip, r3
    7086:	000a      	movs	r2, r1
    7088:	4462      	add	r2, ip
    708a:	931a      	str	r3, [sp, #104]	; 0x68
    708c:	920e      	str	r2, [sp, #56]	; 0x38
    708e:	2901      	cmp	r1, #1
    7090:	dc00      	bgt.n	7094 <_svfprintf_r+0x129c>
    7092:	e145      	b.n	7320 <_svfprintf_r+0x1528>
    7094:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7096:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7098:	4694      	mov	ip, r2
    709a:	4463      	add	r3, ip
    709c:	001a      	movs	r2, r3
    709e:	930e      	str	r3, [sp, #56]	; 0x38
    70a0:	43db      	mvns	r3, r3
    70a2:	17db      	asrs	r3, r3, #31
    70a4:	401a      	ands	r2, r3
    70a6:	2300      	movs	r3, #0
    70a8:	9207      	str	r2, [sp, #28]
    70aa:	9313      	str	r3, [sp, #76]	; 0x4c
    70ac:	e6ae      	b.n	6e0c <_svfprintf_r+0x1014>
    70ae:	2301      	movs	r3, #1
    70b0:	425b      	negs	r3, r3
    70b2:	930a      	str	r3, [sp, #40]	; 0x28
    70b4:	f7fe ff2d 	bl	5f12 <_svfprintf_r+0x11a>
    70b8:	003a      	movs	r2, r7
    70ba:	9906      	ldr	r1, [sp, #24]
    70bc:	9809      	ldr	r0, [sp, #36]	; 0x24
    70be:	f004 fd73 	bl	bba8 <__ssprint_r>
    70c2:	2800      	cmp	r0, #0
    70c4:	d001      	beq.n	70ca <_svfprintf_r+0x12d2>
    70c6:	f7fe ff1e 	bl	5f06 <_svfprintf_r+0x10e>
    70ca:	68bc      	ldr	r4, [r7, #8]
    70cc:	ae32      	add	r6, sp, #200	; 0xc8
    70ce:	e43c      	b.n	694a <_svfprintf_r+0xb52>
    70d0:	003a      	movs	r2, r7
    70d2:	9906      	ldr	r1, [sp, #24]
    70d4:	9809      	ldr	r0, [sp, #36]	; 0x24
    70d6:	f004 fd67 	bl	bba8 <__ssprint_r>
    70da:	2800      	cmp	r0, #0
    70dc:	d001      	beq.n	70e2 <_svfprintf_r+0x12ea>
    70de:	f7fe ff12 	bl	5f06 <_svfprintf_r+0x10e>
    70e2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    70e4:	68bc      	ldr	r4, [r7, #8]
    70e6:	ae32      	add	r6, sp, #200	; 0xc8
    70e8:	e56a      	b.n	6bc0 <_svfprintf_r+0xdc8>
    70ea:	003a      	movs	r2, r7
    70ec:	9906      	ldr	r1, [sp, #24]
    70ee:	9809      	ldr	r0, [sp, #36]	; 0x24
    70f0:	f004 fd5a 	bl	bba8 <__ssprint_r>
    70f4:	2800      	cmp	r0, #0
    70f6:	d001      	beq.n	70fc <_svfprintf_r+0x1304>
    70f8:	f7fe ff05 	bl	5f06 <_svfprintf_r+0x10e>
    70fc:	68bc      	ldr	r4, [r7, #8]
    70fe:	ae32      	add	r6, sp, #200	; 0xc8
    7100:	e557      	b.n	6bb2 <_svfprintf_r+0xdba>
    7102:	003a      	movs	r2, r7
    7104:	9906      	ldr	r1, [sp, #24]
    7106:	9809      	ldr	r0, [sp, #36]	; 0x24
    7108:	f004 fd4e 	bl	bba8 <__ssprint_r>
    710c:	2800      	cmp	r0, #0
    710e:	d001      	beq.n	7114 <_svfprintf_r+0x131c>
    7110:	f7fe fef9 	bl	5f06 <_svfprintf_r+0x10e>
    7114:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7116:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    7118:	68bc      	ldr	r4, [r7, #8]
    711a:	1a9b      	subs	r3, r3, r2
    711c:	ae32      	add	r6, sp, #200	; 0xc8
    711e:	e56a      	b.n	6bf6 <_svfprintf_r+0xdfe>
    7120:	4653      	mov	r3, sl
    7122:	9307      	str	r3, [sp, #28]
    7124:	2b06      	cmp	r3, #6
    7126:	d901      	bls.n	712c <_svfprintf_r+0x1334>
    7128:	2306      	movs	r3, #6
    712a:	9307      	str	r3, [sp, #28]
    712c:	9b07      	ldr	r3, [sp, #28]
    712e:	950f      	str	r5, [sp, #60]	; 0x3c
    7130:	930e      	str	r3, [sp, #56]	; 0x38
    7132:	2300      	movs	r3, #0
    7134:	4698      	mov	r8, r3
    7136:	469a      	mov	sl, r3
    7138:	9313      	str	r3, [sp, #76]	; 0x4c
    713a:	4b24      	ldr	r3, [pc, #144]	; (71cc <_svfprintf_r+0x13d4>)
    713c:	9408      	str	r4, [sp, #32]
    713e:	9311      	str	r3, [sp, #68]	; 0x44
    7140:	f7fe ff78 	bl	6034 <_svfprintf_r+0x23c>
    7144:	2320      	movs	r3, #32
    7146:	9a12      	ldr	r2, [sp, #72]	; 0x48
    7148:	439a      	bics	r2, r3
    714a:	3b1a      	subs	r3, #26
    714c:	920e      	str	r2, [sp, #56]	; 0x38
    714e:	469a      	mov	sl, r3
    7150:	e5f1      	b.n	6d36 <_svfprintf_r+0xf3e>
    7152:	ab23      	add	r3, sp, #140	; 0x8c
    7154:	931b      	str	r3, [sp, #108]	; 0x6c
    7156:	9304      	str	r3, [sp, #16]
    7158:	ab20      	add	r3, sp, #128	; 0x80
    715a:	9303      	str	r3, [sp, #12]
    715c:	ab1f      	add	r3, sp, #124	; 0x7c
    715e:	9302      	str	r3, [sp, #8]
    7160:	4653      	mov	r3, sl
    7162:	9301      	str	r3, [sp, #4]
    7164:	2303      	movs	r3, #3
    7166:	464a      	mov	r2, r9
    7168:	9300      	str	r3, [sp, #0]
    716a:	9809      	ldr	r0, [sp, #36]	; 0x24
    716c:	9b07      	ldr	r3, [sp, #28]
    716e:	f001 f8ed 	bl	834c <_dtoa_r>
    7172:	0003      	movs	r3, r0
    7174:	4453      	add	r3, sl
    7176:	9011      	str	r0, [sp, #68]	; 0x44
    7178:	4698      	mov	r8, r3
    717a:	4655      	mov	r5, sl
    717c:	e6e4      	b.n	6f48 <_svfprintf_r+0x1150>
    717e:	232d      	movs	r3, #45	; 0x2d
    7180:	aa16      	add	r2, sp, #88	; 0x58
    7182:	77d3      	strb	r3, [r2, #31]
    7184:	4698      	mov	r8, r3
    7186:	f7fe ffdb 	bl	6140 <_svfprintf_r+0x348>
    718a:	2280      	movs	r2, #128	; 0x80
    718c:	0612      	lsls	r2, r2, #24
    718e:	4694      	mov	ip, r2
    7190:	9b16      	ldr	r3, [sp, #88]	; 0x58
    7192:	4699      	mov	r9, r3
    7194:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7196:	4463      	add	r3, ip
    7198:	9307      	str	r3, [sp, #28]
    719a:	232d      	movs	r3, #45	; 0x2d
    719c:	9310      	str	r3, [sp, #64]	; 0x40
    719e:	e5d7      	b.n	6d50 <_svfprintf_r+0xf58>
    71a0:	9a18      	ldr	r2, [sp, #96]	; 0x60
    71a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
    71a4:	4694      	mov	ip, r2
    71a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    71a8:	4463      	add	r3, ip
    71aa:	930e      	str	r3, [sp, #56]	; 0x38
    71ac:	2a00      	cmp	r2, #0
    71ae:	dc00      	bgt.n	71b2 <_svfprintf_r+0x13ba>
    71b0:	e0ce      	b.n	7350 <_svfprintf_r+0x1558>
    71b2:	001a      	movs	r2, r3
    71b4:	43db      	mvns	r3, r3
    71b6:	17db      	asrs	r3, r3, #31
    71b8:	401a      	ands	r2, r3
    71ba:	2367      	movs	r3, #103	; 0x67
    71bc:	9207      	str	r2, [sp, #28]
    71be:	9312      	str	r3, [sp, #72]	; 0x48
    71c0:	e624      	b.n	6e0c <_svfprintf_r+0x1014>
    71c2:	46c0      	nop			; (mov r8, r8)
    71c4:	0000e700 	.word	0x0000e700
    71c8:	0000e6c4 	.word	0x0000e6c4
    71cc:	0000e6f8 	.word	0x0000e6f8
    71d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    71d2:	9313      	str	r3, [sp, #76]	; 0x4c
    71d4:	2b00      	cmp	r3, #0
    71d6:	dc00      	bgt.n	71da <_svfprintf_r+0x13e2>
    71d8:	e0d5      	b.n	7386 <_svfprintf_r+0x158e>
    71da:	4652      	mov	r2, sl
    71dc:	2a00      	cmp	r2, #0
    71de:	d000      	beq.n	71e2 <_svfprintf_r+0x13ea>
    71e0:	e092      	b.n	7308 <_svfprintf_r+0x1510>
    71e2:	07e2      	lsls	r2, r4, #31
    71e4:	d500      	bpl.n	71e8 <_svfprintf_r+0x13f0>
    71e6:	e08f      	b.n	7308 <_svfprintf_r+0x1510>
    71e8:	9307      	str	r3, [sp, #28]
    71ea:	930e      	str	r3, [sp, #56]	; 0x38
    71ec:	e60e      	b.n	6e0c <_svfprintf_r+0x1014>
    71ee:	ab16      	add	r3, sp, #88	; 0x58
    71f0:	7fdb      	ldrb	r3, [r3, #31]
    71f2:	950f      	str	r5, [sp, #60]	; 0x3c
    71f4:	4698      	mov	r8, r3
    71f6:	4653      	mov	r3, sl
    71f8:	9307      	str	r3, [sp, #28]
    71fa:	930e      	str	r3, [sp, #56]	; 0x38
    71fc:	2300      	movs	r3, #0
    71fe:	9408      	str	r4, [sp, #32]
    7200:	469a      	mov	sl, r3
    7202:	9313      	str	r3, [sp, #76]	; 0x4c
    7204:	f7fe ff10 	bl	6028 <_svfprintf_r+0x230>
    7208:	9b11      	ldr	r3, [sp, #68]	; 0x44
    720a:	4698      	mov	r8, r3
    720c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    720e:	44a8      	add	r8, r5
    7210:	2b47      	cmp	r3, #71	; 0x47
    7212:	d000      	beq.n	7216 <_svfprintf_r+0x141e>
    7214:	e5c4      	b.n	6da0 <_svfprintf_r+0xfa8>
    7216:	07e3      	lsls	r3, r4, #31
    7218:	d500      	bpl.n	721c <_svfprintf_r+0x1424>
    721a:	e68e      	b.n	6f3a <_svfprintf_r+0x1142>
    721c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    721e:	9a11      	ldr	r2, [sp, #68]	; 0x44
    7220:	1a9b      	subs	r3, r3, r2
    7222:	9314      	str	r3, [sp, #80]	; 0x50
    7224:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7226:	2b47      	cmp	r3, #71	; 0x47
    7228:	d100      	bne.n	722c <_svfprintf_r+0x1434>
    722a:	e6cb      	b.n	6fc4 <_svfprintf_r+0x11cc>
    722c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    722e:	9313      	str	r3, [sp, #76]	; 0x4c
    7230:	e6d2      	b.n	6fd8 <_svfprintf_r+0x11e0>
    7232:	4244      	negs	r4, r0
    7234:	3010      	adds	r0, #16
    7236:	db00      	blt.n	723a <_svfprintf_r+0x1442>
    7238:	e0d0      	b.n	73dc <_svfprintf_r+0x15e4>
    723a:	486e      	ldr	r0, [pc, #440]	; (73f4 <_svfprintf_r+0x15fc>)
    723c:	2610      	movs	r6, #16
    723e:	0005      	movs	r5, r0
    7240:	e003      	b.n	724a <_svfprintf_r+0x1452>
    7242:	3208      	adds	r2, #8
    7244:	3c10      	subs	r4, #16
    7246:	2c10      	cmp	r4, #16
    7248:	dd38      	ble.n	72bc <_svfprintf_r+0x14c4>
    724a:	3110      	adds	r1, #16
    724c:	3301      	adds	r3, #1
    724e:	6015      	str	r5, [r2, #0]
    7250:	6056      	str	r6, [r2, #4]
    7252:	60b9      	str	r1, [r7, #8]
    7254:	607b      	str	r3, [r7, #4]
    7256:	2b07      	cmp	r3, #7
    7258:	ddf3      	ble.n	7242 <_svfprintf_r+0x144a>
    725a:	003a      	movs	r2, r7
    725c:	9906      	ldr	r1, [sp, #24]
    725e:	9809      	ldr	r0, [sp, #36]	; 0x24
    7260:	f004 fca2 	bl	bba8 <__ssprint_r>
    7264:	2800      	cmp	r0, #0
    7266:	d001      	beq.n	726c <_svfprintf_r+0x1474>
    7268:	f7fe fe4d 	bl	5f06 <_svfprintf_r+0x10e>
    726c:	68b9      	ldr	r1, [r7, #8]
    726e:	687b      	ldr	r3, [r7, #4]
    7270:	aa32      	add	r2, sp, #200	; 0xc8
    7272:	e7e7      	b.n	7244 <_svfprintf_r+0x144c>
    7274:	003a      	movs	r2, r7
    7276:	9906      	ldr	r1, [sp, #24]
    7278:	9809      	ldr	r0, [sp, #36]	; 0x24
    727a:	f004 fc95 	bl	bba8 <__ssprint_r>
    727e:	2800      	cmp	r0, #0
    7280:	d001      	beq.n	7286 <_svfprintf_r+0x148e>
    7282:	f7fe fe40 	bl	5f06 <_svfprintf_r+0x10e>
    7286:	981f      	ldr	r0, [sp, #124]	; 0x7c
    7288:	68b9      	ldr	r1, [r7, #8]
    728a:	687b      	ldr	r3, [r7, #4]
    728c:	aa32      	add	r2, sp, #200	; 0xc8
    728e:	e600      	b.n	6e92 <_svfprintf_r+0x109a>
    7290:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7292:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    7294:	4694      	mov	ip, r2
    7296:	4463      	add	r3, ip
    7298:	001a      	movs	r2, r3
    729a:	930e      	str	r3, [sp, #56]	; 0x38
    729c:	e78a      	b.n	71b4 <_svfprintf_r+0x13bc>
    729e:	212e      	movs	r1, #46	; 0x2e
    72a0:	2330      	movs	r3, #48	; 0x30
    72a2:	aa16      	add	r2, sp, #88	; 0x58
    72a4:	1852      	adds	r2, r2, r1
    72a6:	7013      	strb	r3, [r2, #0]
    72a8:	002b      	movs	r3, r5
    72aa:	aa16      	add	r2, sp, #88	; 0x58
    72ac:	3101      	adds	r1, #1
    72ae:	3330      	adds	r3, #48	; 0x30
    72b0:	1852      	adds	r2, r2, r1
    72b2:	7013      	strb	r3, [r2, #0]
    72b4:	ab22      	add	r3, sp, #136	; 0x88
    72b6:	e6e2      	b.n	707e <_svfprintf_r+0x1286>
    72b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    72ba:	e585      	b.n	6dc8 <_svfprintf_r+0xfd0>
    72bc:	46a9      	mov	r9, r5
    72be:	4648      	mov	r0, r9
    72c0:	1909      	adds	r1, r1, r4
    72c2:	3301      	adds	r3, #1
    72c4:	6010      	str	r0, [r2, #0]
    72c6:	6054      	str	r4, [r2, #4]
    72c8:	60b9      	str	r1, [r7, #8]
    72ca:	3208      	adds	r2, #8
    72cc:	607b      	str	r3, [r7, #4]
    72ce:	2b07      	cmp	r3, #7
    72d0:	dc00      	bgt.n	72d4 <_svfprintf_r+0x14dc>
    72d2:	e5e1      	b.n	6e98 <_svfprintf_r+0x10a0>
    72d4:	003a      	movs	r2, r7
    72d6:	9906      	ldr	r1, [sp, #24]
    72d8:	9809      	ldr	r0, [sp, #36]	; 0x24
    72da:	f004 fc65 	bl	bba8 <__ssprint_r>
    72de:	2800      	cmp	r0, #0
    72e0:	d001      	beq.n	72e6 <_svfprintf_r+0x14ee>
    72e2:	f7fe fe10 	bl	5f06 <_svfprintf_r+0x10e>
    72e6:	68b9      	ldr	r1, [r7, #8]
    72e8:	687b      	ldr	r3, [r7, #4]
    72ea:	aa32      	add	r2, sp, #200	; 0xc8
    72ec:	e5d4      	b.n	6e98 <_svfprintf_r+0x10a0>
    72ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
    72f0:	2b00      	cmp	r3, #0
    72f2:	db38      	blt.n	7366 <_svfprintf_r+0x156e>
    72f4:	ab16      	add	r3, sp, #88	; 0x58
    72f6:	7fdb      	ldrb	r3, [r3, #31]
    72f8:	4698      	mov	r8, r3
    72fa:	9b12      	ldr	r3, [sp, #72]	; 0x48
    72fc:	2b47      	cmp	r3, #71	; 0x47
    72fe:	dc2e      	bgt.n	735e <_svfprintf_r+0x1566>
    7300:	4b3d      	ldr	r3, [pc, #244]	; (73f8 <_svfprintf_r+0x1600>)
    7302:	9311      	str	r3, [sp, #68]	; 0x44
    7304:	f7fe ff23 	bl	614e <_svfprintf_r+0x356>
    7308:	9a18      	ldr	r2, [sp, #96]	; 0x60
    730a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    730c:	4694      	mov	ip, r2
    730e:	4463      	add	r3, ip
    7310:	4453      	add	r3, sl
    7312:	001a      	movs	r2, r3
    7314:	930e      	str	r3, [sp, #56]	; 0x38
    7316:	43db      	mvns	r3, r3
    7318:	17db      	asrs	r3, r3, #31
    731a:	401a      	ands	r2, r3
    731c:	9207      	str	r2, [sp, #28]
    731e:	e575      	b.n	6e0c <_svfprintf_r+0x1014>
    7320:	2301      	movs	r3, #1
    7322:	4023      	ands	r3, r4
    7324:	9313      	str	r3, [sp, #76]	; 0x4c
    7326:	d000      	beq.n	732a <_svfprintf_r+0x1532>
    7328:	e6b4      	b.n	7094 <_svfprintf_r+0x129c>
    732a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    732c:	43d3      	mvns	r3, r2
    732e:	17db      	asrs	r3, r3, #31
    7330:	401a      	ands	r2, r3
    7332:	9207      	str	r2, [sp, #28]
    7334:	e56a      	b.n	6e0c <_svfprintf_r+0x1014>
    7336:	4a2f      	ldr	r2, [pc, #188]	; (73f4 <_svfprintf_r+0x15fc>)
    7338:	687b      	ldr	r3, [r7, #4]
    733a:	4691      	mov	r9, r2
    733c:	e42d      	b.n	6b9a <_svfprintf_r+0xda2>
    733e:	2301      	movs	r3, #1
    7340:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7342:	391b      	subs	r1, #27
    7344:	1a9d      	subs	r5, r3, r2
    7346:	aa16      	add	r2, sp, #88	; 0x58
    7348:	332c      	adds	r3, #44	; 0x2c
    734a:	1852      	adds	r2, r2, r1
    734c:	7013      	strb	r3, [r2, #0]
    734e:	e656      	b.n	6ffe <_svfprintf_r+0x1206>
    7350:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7352:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7354:	1a98      	subs	r0, r3, r2
    7356:	1c43      	adds	r3, r0, #1
    7358:	001a      	movs	r2, r3
    735a:	930e      	str	r3, [sp, #56]	; 0x38
    735c:	e72a      	b.n	71b4 <_svfprintf_r+0x13bc>
    735e:	4b27      	ldr	r3, [pc, #156]	; (73fc <_svfprintf_r+0x1604>)
    7360:	9311      	str	r3, [sp, #68]	; 0x44
    7362:	f7fe fef4 	bl	614e <_svfprintf_r+0x356>
    7366:	232d      	movs	r3, #45	; 0x2d
    7368:	aa16      	add	r2, sp, #88	; 0x58
    736a:	77d3      	strb	r3, [r2, #31]
    736c:	4698      	mov	r8, r3
    736e:	e7c4      	b.n	72fa <_svfprintf_r+0x1502>
    7370:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7372:	1d1a      	adds	r2, r3, #4
    7374:	681b      	ldr	r3, [r3, #0]
    7376:	469a      	mov	sl, r3
    7378:	2b00      	cmp	r3, #0
    737a:	db36      	blt.n	73ea <_svfprintf_r+0x15f2>
    737c:	784b      	ldrb	r3, [r1, #1]
    737e:	920f      	str	r2, [sp, #60]	; 0x3c
    7380:	4659      	mov	r1, fp
    7382:	f7fe fd9d 	bl	5ec0 <_svfprintf_r+0xc8>
    7386:	4653      	mov	r3, sl
    7388:	2b00      	cmp	r3, #0
    738a:	d101      	bne.n	7390 <_svfprintf_r+0x1598>
    738c:	07e3      	lsls	r3, r4, #31
    738e:	d503      	bpl.n	7398 <_svfprintf_r+0x15a0>
    7390:	9b18      	ldr	r3, [sp, #96]	; 0x60
    7392:	1c58      	adds	r0, r3, #1
    7394:	0003      	movs	r3, r0
    7396:	e7bb      	b.n	7310 <_svfprintf_r+0x1518>
    7398:	2301      	movs	r3, #1
    739a:	e725      	b.n	71e8 <_svfprintf_r+0x13f0>
    739c:	ab16      	add	r3, sp, #88	; 0x58
    739e:	77d8      	strb	r0, [r3, #31]
    73a0:	f7fe ff6c 	bl	627c <_svfprintf_r+0x484>
    73a4:	ab16      	add	r3, sp, #88	; 0x58
    73a6:	77d8      	strb	r0, [r3, #31]
    73a8:	f7ff f814 	bl	63d4 <_svfprintf_r+0x5dc>
    73ac:	230c      	movs	r3, #12
    73ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
    73b0:	6013      	str	r3, [r2, #0]
    73b2:	3b0d      	subs	r3, #13
    73b4:	930a      	str	r3, [sp, #40]	; 0x28
    73b6:	f7fe fdac 	bl	5f12 <_svfprintf_r+0x11a>
    73ba:	aa16      	add	r2, sp, #88	; 0x58
    73bc:	232e      	movs	r3, #46	; 0x2e
    73be:	4694      	mov	ip, r2
    73c0:	4463      	add	r3, ip
    73c2:	e65c      	b.n	707e <_svfprintf_r+0x1286>
    73c4:	ab16      	add	r3, sp, #88	; 0x58
    73c6:	77d8      	strb	r0, [r3, #31]
    73c8:	f7fe fe85 	bl	60d6 <_svfprintf_r+0x2de>
    73cc:	ab16      	add	r3, sp, #88	; 0x58
    73ce:	77d8      	strb	r0, [r3, #31]
    73d0:	f7fe fddd 	bl	5f8e <_svfprintf_r+0x196>
    73d4:	ab16      	add	r3, sp, #88	; 0x58
    73d6:	77d8      	strb	r0, [r3, #31]
    73d8:	f7ff f87d 	bl	64d6 <_svfprintf_r+0x6de>
    73dc:	4805      	ldr	r0, [pc, #20]	; (73f4 <_svfprintf_r+0x15fc>)
    73de:	4681      	mov	r9, r0
    73e0:	e76d      	b.n	72be <_svfprintf_r+0x14c6>
    73e2:	ab16      	add	r3, sp, #88	; 0x58
    73e4:	77d8      	strb	r0, [r3, #31]
    73e6:	f7fe ff79 	bl	62dc <_svfprintf_r+0x4e4>
    73ea:	2301      	movs	r3, #1
    73ec:	425b      	negs	r3, r3
    73ee:	469a      	mov	sl, r3
    73f0:	e7c4      	b.n	737c <_svfprintf_r+0x1584>
    73f2:	46c0      	nop			; (mov r8, r8)
    73f4:	0000e714 	.word	0x0000e714
    73f8:	0000e6c8 	.word	0x0000e6c8
    73fc:	0000e6cc 	.word	0x0000e6cc

00007400 <__ssvfscanf_r>:
    7400:	b5f0      	push	{r4, r5, r6, r7, lr}
    7402:	464e      	mov	r6, r9
    7404:	4645      	mov	r5, r8
    7406:	46de      	mov	lr, fp
    7408:	4657      	mov	r7, sl
    740a:	b5e0      	push	{r5, r6, r7, lr}
    740c:	4cce      	ldr	r4, [pc, #824]	; (7748 <__ssvfscanf_r+0x348>)
    740e:	000e      	movs	r6, r1
    7410:	44a5      	add	sp, r4
    7412:	9307      	str	r3, [sp, #28]
    7414:	230c      	movs	r3, #12
    7416:	5ec9      	ldrsh	r1, [r1, r3]
    7418:	2380      	movs	r3, #128	; 0x80
    741a:	019b      	lsls	r3, r3, #6
    741c:	4680      	mov	r8, r0
    741e:	4219      	tst	r1, r3
    7420:	d105      	bne.n	742e <__ssvfscanf_r+0x2e>
    7422:	430b      	orrs	r3, r1
    7424:	81b3      	strh	r3, [r6, #12]
    7426:	6e71      	ldr	r1, [r6, #100]	; 0x64
    7428:	4bc8      	ldr	r3, [pc, #800]	; (774c <__ssvfscanf_r+0x34c>)
    742a:	400b      	ands	r3, r1
    742c:	6673      	str	r3, [r6, #100]	; 0x64
    742e:	2300      	movs	r3, #0
    7430:	0014      	movs	r4, r2
    7432:	9309      	str	r3, [sp, #36]	; 0x24
    7434:	9305      	str	r3, [sp, #20]
    7436:	9308      	str	r3, [sp, #32]
    7438:	7823      	ldrb	r3, [r4, #0]
    743a:	1c62      	adds	r2, r4, #1
    743c:	2700      	movs	r7, #0
    743e:	9311      	str	r3, [sp, #68]	; 0x44
    7440:	4692      	mov	sl, r2
    7442:	2b00      	cmp	r3, #0
    7444:	d029      	beq.n	749a <__ssvfscanf_r+0x9a>
    7446:	f002 f8ad 	bl	95a4 <__locale_ctype_ptr>
    744a:	2508      	movs	r5, #8
    744c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    744e:	18c0      	adds	r0, r0, r3
    7450:	7842      	ldrb	r2, [r0, #1]
    7452:	4015      	ands	r5, r2
    7454:	d02b      	beq.n	74ae <__ssvfscanf_r+0xae>
    7456:	6873      	ldr	r3, [r6, #4]
    7458:	2408      	movs	r4, #8
    745a:	4645      	mov	r5, r8
    745c:	e00d      	b.n	747a <__ssvfscanf_r+0x7a>
    745e:	f002 f8a1 	bl	95a4 <__locale_ctype_ptr>
    7462:	6832      	ldr	r2, [r6, #0]
    7464:	7813      	ldrb	r3, [r2, #0]
    7466:	18c0      	adds	r0, r0, r3
    7468:	7843      	ldrb	r3, [r0, #1]
    746a:	421c      	tst	r4, r3
    746c:	d00d      	beq.n	748a <__ssvfscanf_r+0x8a>
    746e:	6873      	ldr	r3, [r6, #4]
    7470:	3201      	adds	r2, #1
    7472:	3b01      	subs	r3, #1
    7474:	3701      	adds	r7, #1
    7476:	6073      	str	r3, [r6, #4]
    7478:	6032      	str	r2, [r6, #0]
    747a:	2b00      	cmp	r3, #0
    747c:	dcef      	bgt.n	745e <__ssvfscanf_r+0x5e>
    747e:	0031      	movs	r1, r6
    7480:	0028      	movs	r0, r5
    7482:	f004 fc63 	bl	bd4c <__ssrefill_r>
    7486:	2800      	cmp	r0, #0
    7488:	d0e9      	beq.n	745e <__ssvfscanf_r+0x5e>
    748a:	46a8      	mov	r8, r5
    748c:	4654      	mov	r4, sl
    748e:	7823      	ldrb	r3, [r4, #0]
    7490:	1c62      	adds	r2, r4, #1
    7492:	9311      	str	r3, [sp, #68]	; 0x44
    7494:	4692      	mov	sl, r2
    7496:	2b00      	cmp	r3, #0
    7498:	d1d5      	bne.n	7446 <__ssvfscanf_r+0x46>
    749a:	9808      	ldr	r0, [sp, #32]
    749c:	23ad      	movs	r3, #173	; 0xad
    749e:	009b      	lsls	r3, r3, #2
    74a0:	449d      	add	sp, r3
    74a2:	bc3c      	pop	{r2, r3, r4, r5}
    74a4:	4690      	mov	r8, r2
    74a6:	4699      	mov	r9, r3
    74a8:	46a2      	mov	sl, r4
    74aa:	46ab      	mov	fp, r5
    74ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
    74ae:	2b25      	cmp	r3, #37	; 0x25
    74b0:	d116      	bne.n	74e0 <__ssvfscanf_r+0xe0>
    74b2:	7863      	ldrb	r3, [r4, #1]
    74b4:	2400      	movs	r4, #0
    74b6:	469b      	mov	fp, r3
    74b8:	2300      	movs	r3, #0
    74ba:	4699      	mov	r9, r3
    74bc:	3301      	adds	r3, #1
    74be:	9304      	str	r3, [sp, #16]
    74c0:	2004      	movs	r0, #4
    74c2:	465b      	mov	r3, fp
    74c4:	2202      	movs	r2, #2
    74c6:	46a3      	mov	fp, r4
    74c8:	4654      	mov	r4, sl
    74ca:	3401      	adds	r4, #1
    74cc:	9403      	str	r4, [sp, #12]
    74ce:	2b78      	cmp	r3, #120	; 0x78
    74d0:	d900      	bls.n	74d4 <__ssvfscanf_r+0xd4>
    74d2:	e0d5      	b.n	7680 <__ssvfscanf_r+0x280>
    74d4:	499e      	ldr	r1, [pc, #632]	; (7750 <__ssvfscanf_r+0x350>)
    74d6:	009c      	lsls	r4, r3, #2
    74d8:	590c      	ldr	r4, [r1, r4]
    74da:	46a7      	mov	pc, r4
    74dc:	9b03      	ldr	r3, [sp, #12]
    74de:	469a      	mov	sl, r3
    74e0:	6873      	ldr	r3, [r6, #4]
    74e2:	2b00      	cmp	r3, #0
    74e4:	dc01      	bgt.n	74ea <__ssvfscanf_r+0xea>
    74e6:	f000 fd64 	bl	7fb2 <__ssvfscanf_r+0xbb2>
    74ea:	4652      	mov	r2, sl
    74ec:	6833      	ldr	r3, [r6, #0]
    74ee:	3a01      	subs	r2, #1
    74f0:	7811      	ldrb	r1, [r2, #0]
    74f2:	781a      	ldrb	r2, [r3, #0]
    74f4:	4291      	cmp	r1, r2
    74f6:	d1d0      	bne.n	749a <__ssvfscanf_r+0x9a>
    74f8:	6872      	ldr	r2, [r6, #4]
    74fa:	3301      	adds	r3, #1
    74fc:	3a01      	subs	r2, #1
    74fe:	6072      	str	r2, [r6, #4]
    7500:	6033      	str	r3, [r6, #0]
    7502:	3701      	adds	r7, #1
    7504:	4654      	mov	r4, sl
    7506:	e7c2      	b.n	748e <__ssvfscanf_r+0x8e>
    7508:	4655      	mov	r5, sl
    750a:	1c83      	adds	r3, r0, #2
    750c:	d001      	beq.n	7512 <__ssvfscanf_r+0x112>
    750e:	f000 fe1a 	bl	8146 <__ssvfscanf_r+0xd46>
    7512:	6873      	ldr	r3, [r6, #4]
    7514:	2b00      	cmp	r3, #0
    7516:	dd01      	ble.n	751c <__ssvfscanf_r+0x11c>
    7518:	f000 fc2a 	bl	7d70 <__ssvfscanf_r+0x970>
    751c:	0031      	movs	r1, r6
    751e:	4640      	mov	r0, r8
    7520:	f004 fc14 	bl	bd4c <__ssrefill_r>
    7524:	2800      	cmp	r0, #0
    7526:	d101      	bne.n	752c <__ssvfscanf_r+0x12c>
    7528:	f000 fc22 	bl	7d70 <__ssvfscanf_r+0x970>
    752c:	2d00      	cmp	r5, #0
    752e:	d101      	bne.n	7534 <__ssvfscanf_r+0x134>
    7530:	f000 fc2a 	bl	7d88 <__ssvfscanf_r+0x988>
    7534:	9b08      	ldr	r3, [sp, #32]
    7536:	2b00      	cmp	r3, #0
    7538:	d002      	beq.n	7540 <__ssvfscanf_r+0x140>
    753a:	89b3      	ldrh	r3, [r6, #12]
    753c:	065b      	lsls	r3, r3, #25
    753e:	d5ac      	bpl.n	749a <__ssvfscanf_r+0x9a>
    7540:	2301      	movs	r3, #1
    7542:	425b      	negs	r3, r3
    7544:	9308      	str	r3, [sp, #32]
    7546:	e7a8      	b.n	749a <__ssvfscanf_r+0x9a>
    7548:	4b82      	ldr	r3, [pc, #520]	; (7754 <__ssvfscanf_r+0x354>)
    754a:	465c      	mov	r4, fp
    754c:	9309      	str	r3, [sp, #36]	; 0x24
    754e:	2300      	movs	r3, #0
    7550:	9305      	str	r3, [sp, #20]
    7552:	3303      	adds	r3, #3
    7554:	469b      	mov	fp, r3
    7556:	6873      	ldr	r3, [r6, #4]
    7558:	2b00      	cmp	r3, #0
    755a:	dd27      	ble.n	75ac <__ssvfscanf_r+0x1ac>
    755c:	464b      	mov	r3, r9
    755e:	065b      	lsls	r3, r3, #25
    7560:	d42d      	bmi.n	75be <__ssvfscanf_r+0x1be>
    7562:	2308      	movs	r3, #8
    7564:	469a      	mov	sl, r3
    7566:	e001      	b.n	756c <__ssvfscanf_r+0x16c>
    7568:	3201      	adds	r2, #1
    756a:	6032      	str	r2, [r6, #0]
    756c:	f002 f81a 	bl	95a4 <__locale_ctype_ptr>
    7570:	4651      	mov	r1, sl
    7572:	6832      	ldr	r2, [r6, #0]
    7574:	7813      	ldrb	r3, [r2, #0]
    7576:	18c0      	adds	r0, r0, r3
    7578:	7843      	ldrb	r3, [r0, #1]
    757a:	4219      	tst	r1, r3
    757c:	d01f      	beq.n	75be <__ssvfscanf_r+0x1be>
    757e:	6873      	ldr	r3, [r6, #4]
    7580:	3701      	adds	r7, #1
    7582:	3b01      	subs	r3, #1
    7584:	6073      	str	r3, [r6, #4]
    7586:	2b00      	cmp	r3, #0
    7588:	dcee      	bgt.n	7568 <__ssvfscanf_r+0x168>
    758a:	0031      	movs	r1, r6
    758c:	4640      	mov	r0, r8
    758e:	f004 fbdd 	bl	bd4c <__ssrefill_r>
    7592:	2800      	cmp	r0, #0
    7594:	d0ea      	beq.n	756c <__ssvfscanf_r+0x16c>
    7596:	e7cd      	b.n	7534 <__ssvfscanf_r+0x134>
    7598:	465c      	mov	r4, fp
    759a:	4b6f      	ldr	r3, [pc, #444]	; (7758 <__ssvfscanf_r+0x358>)
    759c:	9309      	str	r3, [sp, #36]	; 0x24
    759e:	230a      	movs	r3, #10
    75a0:	9305      	str	r3, [sp, #20]
    75a2:	3b07      	subs	r3, #7
    75a4:	469b      	mov	fp, r3
    75a6:	6873      	ldr	r3, [r6, #4]
    75a8:	2b00      	cmp	r3, #0
    75aa:	dcd7      	bgt.n	755c <__ssvfscanf_r+0x15c>
    75ac:	0031      	movs	r1, r6
    75ae:	4640      	mov	r0, r8
    75b0:	f004 fbcc 	bl	bd4c <__ssrefill_r>
    75b4:	2800      	cmp	r0, #0
    75b6:	d1bd      	bne.n	7534 <__ssvfscanf_r+0x134>
    75b8:	464b      	mov	r3, r9
    75ba:	065b      	lsls	r3, r3, #25
    75bc:	d5d1      	bpl.n	7562 <__ssvfscanf_r+0x162>
    75be:	465b      	mov	r3, fp
    75c0:	2b02      	cmp	r3, #2
    75c2:	d100      	bne.n	75c6 <__ssvfscanf_r+0x1c6>
    75c4:	e326      	b.n	7c14 <__ssvfscanf_r+0x814>
    75c6:	dc00      	bgt.n	75ca <__ssvfscanf_r+0x1ca>
    75c8:	e21b      	b.n	7a02 <__ssvfscanf_r+0x602>
    75ca:	465b      	mov	r3, fp
    75cc:	2b03      	cmp	r3, #3
    75ce:	d100      	bne.n	75d2 <__ssvfscanf_r+0x1d2>
    75d0:	e28a      	b.n	7ae8 <__ssvfscanf_r+0x6e8>
    75d2:	2b04      	cmp	r3, #4
    75d4:	d000      	beq.n	75d8 <__ssvfscanf_r+0x1d8>
    75d6:	e25b      	b.n	7a90 <__ssvfscanf_r+0x690>
    75d8:	4640      	mov	r0, r8
    75da:	f001 fff3 	bl	95c4 <_localeconv_r>
    75de:	22ae      	movs	r2, #174	; 0xae
    75e0:	2100      	movs	r1, #0
    75e2:	6803      	ldr	r3, [r0, #0]
    75e4:	0052      	lsls	r2, r2, #1
    75e6:	930c      	str	r3, [sp, #48]	; 0x30
    75e8:	1e63      	subs	r3, r4, #1
    75ea:	910d      	str	r1, [sp, #52]	; 0x34
    75ec:	4293      	cmp	r3, r2
    75ee:	d904      	bls.n	75fa <__ssvfscanf_r+0x1fa>
    75f0:	3c5e      	subs	r4, #94	; 0x5e
    75f2:	3cff      	subs	r4, #255	; 0xff
    75f4:	940d      	str	r4, [sp, #52]	; 0x34
    75f6:	245e      	movs	r4, #94	; 0x5e
    75f8:	34ff      	adds	r4, #255	; 0xff
    75fa:	23f0      	movs	r3, #240	; 0xf0
    75fc:	464a      	mov	r2, r9
    75fe:	00db      	lsls	r3, r3, #3
    7600:	431a      	orrs	r2, r3
    7602:	2300      	movs	r3, #0
    7604:	9304      	str	r3, [sp, #16]
    7606:	930e      	str	r3, [sp, #56]	; 0x38
    7608:	930f      	str	r3, [sp, #60]	; 0x3c
    760a:	9306      	str	r3, [sp, #24]
    760c:	930b      	str	r3, [sp, #44]	; 0x2c
    760e:	ab54      	add	r3, sp, #336	; 0x150
    7610:	469b      	mov	fp, r3
    7612:	930a      	str	r3, [sp, #40]	; 0x28
    7614:	4b51      	ldr	r3, [pc, #324]	; (775c <__ssvfscanf_r+0x35c>)
    7616:	4691      	mov	r9, r2
    7618:	469a      	mov	sl, r3
    761a:	002b      	movs	r3, r5
    761c:	003d      	movs	r5, r7
    761e:	465f      	mov	r7, fp
    7620:	469b      	mov	fp, r3
    7622:	6832      	ldr	r2, [r6, #0]
    7624:	7811      	ldrb	r1, [r2, #0]
    7626:	000b      	movs	r3, r1
    7628:	3b2b      	subs	r3, #43	; 0x2b
    762a:	b2db      	uxtb	r3, r3
    762c:	2b4e      	cmp	r3, #78	; 0x4e
    762e:	d900      	bls.n	7632 <__ssvfscanf_r+0x232>
    7630:	e1d6      	b.n	79e0 <__ssvfscanf_r+0x5e0>
    7632:	4650      	mov	r0, sl
    7634:	009b      	lsls	r3, r3, #2
    7636:	58c3      	ldr	r3, [r0, r3]
    7638:	469f      	mov	pc, r3
    763a:	2302      	movs	r3, #2
    763c:	465c      	mov	r4, fp
    763e:	469b      	mov	fp, r3
    7640:	e789      	b.n	7556 <__ssvfscanf_r+0x156>
    7642:	465c      	mov	r4, fp
    7644:	2388      	movs	r3, #136	; 0x88
    7646:	464a      	mov	r2, r9
    7648:	009b      	lsls	r3, r3, #2
    764a:	431a      	orrs	r2, r3
    764c:	4b42      	ldr	r3, [pc, #264]	; (7758 <__ssvfscanf_r+0x358>)
    764e:	4691      	mov	r9, r2
    7650:	9309      	str	r3, [sp, #36]	; 0x24
    7652:	2310      	movs	r3, #16
    7654:	9305      	str	r3, [sp, #20]
    7656:	3b0d      	subs	r3, #13
    7658:	469b      	mov	fp, r3
    765a:	e77c      	b.n	7556 <__ssvfscanf_r+0x156>
    765c:	4653      	mov	r3, sl
    765e:	785b      	ldrb	r3, [r3, #1]
    7660:	2b6c      	cmp	r3, #108	; 0x6c
    7662:	d101      	bne.n	7668 <__ssvfscanf_r+0x268>
    7664:	f000 fcd0 	bl	8008 <__ssvfscanf_r+0xc08>
    7668:	4649      	mov	r1, r9
    766a:	9c04      	ldr	r4, [sp, #16]
    766c:	4321      	orrs	r1, r4
    766e:	4689      	mov	r9, r1
    7670:	9903      	ldr	r1, [sp, #12]
    7672:	468a      	mov	sl, r1
    7674:	4654      	mov	r4, sl
    7676:	3401      	adds	r4, #1
    7678:	9403      	str	r4, [sp, #12]
    767a:	2b78      	cmp	r3, #120	; 0x78
    767c:	d800      	bhi.n	7680 <__ssvfscanf_r+0x280>
    767e:	e729      	b.n	74d4 <__ssvfscanf_r+0xd4>
    7680:	465c      	mov	r4, fp
    7682:	469b      	mov	fp, r3
    7684:	f001 ff8e 	bl	95a4 <__locale_ctype_ptr>
    7688:	2303      	movs	r3, #3
    768a:	4458      	add	r0, fp
    768c:	7842      	ldrb	r2, [r0, #1]
    768e:	4013      	ands	r3, r2
    7690:	2b01      	cmp	r3, #1
    7692:	d100      	bne.n	7696 <__ssvfscanf_r+0x296>
    7694:	e30a      	b.n	7cac <__ssvfscanf_r+0x8ac>
    7696:	4b2f      	ldr	r3, [pc, #188]	; (7754 <__ssvfscanf_r+0x354>)
    7698:	e780      	b.n	759c <__ssvfscanf_r+0x19c>
    769a:	465c      	mov	r4, fp
    769c:	4b2e      	ldr	r3, [pc, #184]	; (7758 <__ssvfscanf_r+0x358>)
    769e:	9309      	str	r3, [sp, #36]	; 0x24
    76a0:	2308      	movs	r3, #8
    76a2:	9305      	str	r3, [sp, #20]
    76a4:	3b05      	subs	r3, #5
    76a6:	469b      	mov	fp, r3
    76a8:	e755      	b.n	7556 <__ssvfscanf_r+0x156>
    76aa:	9b03      	ldr	r3, [sp, #12]
    76ac:	469a      	mov	sl, r3
    76ae:	464b      	mov	r3, r9
    76b0:	06db      	lsls	r3, r3, #27
    76b2:	d500      	bpl.n	76b6 <__ssvfscanf_r+0x2b6>
    76b4:	e6ea      	b.n	748c <__ssvfscanf_r+0x8c>
    76b6:	464b      	mov	r3, r9
    76b8:	075b      	lsls	r3, r3, #29
    76ba:	d501      	bpl.n	76c0 <__ssvfscanf_r+0x2c0>
    76bc:	f000 fce2 	bl	8084 <__ssvfscanf_r+0xc84>
    76c0:	464b      	mov	r3, r9
    76c2:	07db      	lsls	r3, r3, #31
    76c4:	d500      	bpl.n	76c8 <__ssvfscanf_r+0x2c8>
    76c6:	e30e      	b.n	7ce6 <__ssvfscanf_r+0x8e6>
    76c8:	464b      	mov	r3, r9
    76ca:	079b      	lsls	r3, r3, #30
    76cc:	d400      	bmi.n	76d0 <__ssvfscanf_r+0x2d0>
    76ce:	e30a      	b.n	7ce6 <__ssvfscanf_r+0x8e6>
    76d0:	9907      	ldr	r1, [sp, #28]
    76d2:	17fa      	asrs	r2, r7, #31
    76d4:	680b      	ldr	r3, [r1, #0]
    76d6:	4654      	mov	r4, sl
    76d8:	601f      	str	r7, [r3, #0]
    76da:	605a      	str	r2, [r3, #4]
    76dc:	000b      	movs	r3, r1
    76de:	3304      	adds	r3, #4
    76e0:	9307      	str	r3, [sp, #28]
    76e2:	e6d4      	b.n	748e <__ssvfscanf_r+0x8e>
    76e4:	464b      	mov	r3, r9
    76e6:	4303      	orrs	r3, r0
    76e8:	4699      	mov	r9, r3
    76ea:	4653      	mov	r3, sl
    76ec:	9903      	ldr	r1, [sp, #12]
    76ee:	785b      	ldrb	r3, [r3, #1]
    76f0:	468a      	mov	sl, r1
    76f2:	e6e9      	b.n	74c8 <__ssvfscanf_r+0xc8>
    76f4:	465c      	mov	r4, fp
    76f6:	4b17      	ldr	r3, [pc, #92]	; (7754 <__ssvfscanf_r+0x354>)
    76f8:	e750      	b.n	759c <__ssvfscanf_r+0x19c>
    76fa:	2340      	movs	r3, #64	; 0x40
    76fc:	464a      	mov	r2, r9
    76fe:	431a      	orrs	r2, r3
    7700:	2300      	movs	r3, #0
    7702:	465c      	mov	r4, fp
    7704:	4691      	mov	r9, r2
    7706:	469b      	mov	fp, r3
    7708:	e725      	b.n	7556 <__ssvfscanf_r+0x156>
    770a:	ab14      	add	r3, sp, #80	; 0x50
    770c:	0018      	movs	r0, r3
    770e:	9903      	ldr	r1, [sp, #12]
    7710:	f002 ffde 	bl	a6d0 <__sccl>
    7714:	2340      	movs	r3, #64	; 0x40
    7716:	464a      	mov	r2, r9
    7718:	431a      	orrs	r2, r3
    771a:	3b3f      	subs	r3, #63	; 0x3f
    771c:	465c      	mov	r4, fp
    771e:	9003      	str	r0, [sp, #12]
    7720:	4691      	mov	r9, r2
    7722:	469b      	mov	fp, r3
    7724:	e717      	b.n	7556 <__ssvfscanf_r+0x156>
    7726:	465c      	mov	r4, fp
    7728:	2380      	movs	r3, #128	; 0x80
    772a:	e78c      	b.n	7646 <__ssvfscanf_r+0x246>
    772c:	464a      	mov	r2, r9
    772e:	2301      	movs	r3, #1
    7730:	431a      	orrs	r2, r3
    7732:	465c      	mov	r4, fp
    7734:	4691      	mov	r9, r2
    7736:	e7b1      	b.n	769c <__ssvfscanf_r+0x29c>
    7738:	464b      	mov	r3, r9
    773a:	4313      	orrs	r3, r2
    773c:	e7d4      	b.n	76e8 <__ssvfscanf_r+0x2e8>
    773e:	2304      	movs	r3, #4
    7740:	465c      	mov	r4, fp
    7742:	469b      	mov	fp, r3
    7744:	e707      	b.n	7556 <__ssvfscanf_r+0x156>
    7746:	46c0      	nop			; (mov r8, r8)
    7748:	fffffd4c 	.word	0xfffffd4c
    774c:	ffffdfff 	.word	0xffffdfff
    7750:	0000e724 	.word	0x0000e724
    7754:	00005dd5 	.word	0x00005dd5
    7758:	0000b99d 	.word	0x0000b99d
    775c:	0000e908 	.word	0x0000e908
    7760:	2301      	movs	r3, #1
    7762:	464a      	mov	r2, r9
    7764:	431a      	orrs	r2, r3
    7766:	465c      	mov	r4, fp
    7768:	4691      	mov	r9, r2
    776a:	4bc5      	ldr	r3, [pc, #788]	; (7a80 <__ssvfscanf_r+0x680>)
    776c:	e716      	b.n	759c <__ssvfscanf_r+0x19c>
    776e:	4659      	mov	r1, fp
    7770:	008c      	lsls	r4, r1, #2
    7772:	2130      	movs	r1, #48	; 0x30
    7774:	4249      	negs	r1, r1
    7776:	445c      	add	r4, fp
    7778:	468b      	mov	fp, r1
    777a:	0064      	lsls	r4, r4, #1
    777c:	18e3      	adds	r3, r4, r3
    777e:	449b      	add	fp, r3
    7780:	4653      	mov	r3, sl
    7782:	9903      	ldr	r1, [sp, #12]
    7784:	785b      	ldrb	r3, [r3, #1]
    7786:	468a      	mov	sl, r1
    7788:	e69e      	b.n	74c8 <__ssvfscanf_r+0xc8>
    778a:	464b      	mov	r3, r9
    778c:	2110      	movs	r1, #16
    778e:	430b      	orrs	r3, r1
    7790:	e7aa      	b.n	76e8 <__ssvfscanf_r+0x2e8>
    7792:	9b04      	ldr	r3, [sp, #16]
    7794:	445b      	add	r3, fp
    7796:	2b00      	cmp	r3, #0
    7798:	d111      	bne.n	77be <__ssvfscanf_r+0x3be>
    779a:	4648      	mov	r0, r9
    779c:	4bb9      	ldr	r3, [pc, #740]	; (7a84 <__ssvfscanf_r+0x684>)
    779e:	4018      	ands	r0, r3
    77a0:	4681      	mov	r9, r0
    77a2:	7039      	strb	r1, [r7, #0]
    77a4:	3701      	adds	r7, #1
    77a6:	6873      	ldr	r3, [r6, #4]
    77a8:	3c01      	subs	r4, #1
    77aa:	3b01      	subs	r3, #1
    77ac:	3501      	adds	r5, #1
    77ae:	6073      	str	r3, [r6, #4]
    77b0:	2b00      	cmp	r3, #0
    77b2:	dd23      	ble.n	77fc <__ssvfscanf_r+0x3fc>
    77b4:	3201      	adds	r2, #1
    77b6:	6032      	str	r2, [r6, #0]
    77b8:	2c00      	cmp	r4, #0
    77ba:	d000      	beq.n	77be <__ssvfscanf_r+0x3be>
    77bc:	e731      	b.n	7622 <__ssvfscanf_r+0x222>
    77be:	465b      	mov	r3, fp
    77c0:	46bb      	mov	fp, r7
    77c2:	002f      	movs	r7, r5
    77c4:	001d      	movs	r5, r3
    77c6:	9b06      	ldr	r3, [sp, #24]
    77c8:	2b00      	cmp	r3, #0
    77ca:	d056      	beq.n	787a <__ssvfscanf_r+0x47a>
    77cc:	e251      	b.n	7c72 <__ssvfscanf_r+0x872>
    77ce:	464b      	mov	r3, r9
    77d0:	05db      	lsls	r3, r3, #23
    77d2:	d5de      	bpl.n	7792 <__ssvfscanf_r+0x392>
    77d4:	2380      	movs	r3, #128	; 0x80
    77d6:	4649      	mov	r1, r9
    77d8:	4399      	bics	r1, r3
    77da:	9b06      	ldr	r3, [sp, #24]
    77dc:	4689      	mov	r9, r1
    77de:	3301      	adds	r3, #1
    77e0:	9306      	str	r3, [sp, #24]
    77e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    77e4:	2b00      	cmp	r3, #0
    77e6:	d0de      	beq.n	77a6 <__ssvfscanf_r+0x3a6>
    77e8:	3b01      	subs	r3, #1
    77ea:	930d      	str	r3, [sp, #52]	; 0x34
    77ec:	6873      	ldr	r3, [r6, #4]
    77ee:	3401      	adds	r4, #1
    77f0:	3b01      	subs	r3, #1
    77f2:	3c01      	subs	r4, #1
    77f4:	3501      	adds	r5, #1
    77f6:	6073      	str	r3, [r6, #4]
    77f8:	2b00      	cmp	r3, #0
    77fa:	dcdb      	bgt.n	77b4 <__ssvfscanf_r+0x3b4>
    77fc:	0031      	movs	r1, r6
    77fe:	4640      	mov	r0, r8
    7800:	f004 faa4 	bl	bd4c <__ssrefill_r>
    7804:	2800      	cmp	r0, #0
    7806:	d0d7      	beq.n	77b8 <__ssvfscanf_r+0x3b8>
    7808:	e7d9      	b.n	77be <__ssvfscanf_r+0x3be>
    780a:	2380      	movs	r3, #128	; 0x80
    780c:	4648      	mov	r0, r9
    780e:	4203      	tst	r3, r0
    7810:	d0d5      	beq.n	77be <__ssvfscanf_r+0x3be>
    7812:	4398      	bics	r0, r3
    7814:	4681      	mov	r9, r0
    7816:	e7c4      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    7818:	465b      	mov	r3, fp
    781a:	2b06      	cmp	r3, #6
    781c:	d1d0      	bne.n	77c0 <__ssvfscanf_r+0x3c0>
    781e:	2307      	movs	r3, #7
    7820:	469b      	mov	fp, r3
    7822:	e7be      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    7824:	9b04      	ldr	r3, [sp, #16]
    7826:	2b00      	cmp	r3, #0
    7828:	d000      	beq.n	782c <__ssvfscanf_r+0x42c>
    782a:	e121      	b.n	7a70 <__ssvfscanf_r+0x670>
    782c:	9b06      	ldr	r3, [sp, #24]
    782e:	2b00      	cmp	r3, #0
    7830:	d106      	bne.n	7840 <__ssvfscanf_r+0x440>
    7832:	23e0      	movs	r3, #224	; 0xe0
    7834:	4648      	mov	r0, r9
    7836:	00db      	lsls	r3, r3, #3
    7838:	4018      	ands	r0, r3
    783a:	4298      	cmp	r0, r3
    783c:	d100      	bne.n	7840 <__ssvfscanf_r+0x440>
    783e:	e3db      	b.n	7ff8 <__ssvfscanf_r+0xbf8>
    7840:	465b      	mov	r3, fp
    7842:	2b01      	cmp	r3, #1
    7844:	d001      	beq.n	784a <__ssvfscanf_r+0x44a>
    7846:	2b04      	cmp	r3, #4
    7848:	d1b9      	bne.n	77be <__ssvfscanf_r+0x3be>
    784a:	465b      	mov	r3, fp
    784c:	3301      	adds	r3, #1
    784e:	b2db      	uxtb	r3, r3
    7850:	469b      	mov	fp, r3
    7852:	e7a6      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    7854:	465b      	mov	r3, fp
    7856:	2b00      	cmp	r3, #0
    7858:	d000      	beq.n	785c <__ssvfscanf_r+0x45c>
    785a:	e0ff      	b.n	7a5c <__ssvfscanf_r+0x65c>
    785c:	9b06      	ldr	r3, [sp, #24]
    785e:	2b00      	cmp	r3, #0
    7860:	d000      	beq.n	7864 <__ssvfscanf_r+0x464>
    7862:	e202      	b.n	7c6a <__ssvfscanf_r+0x86a>
    7864:	23e0      	movs	r3, #224	; 0xe0
    7866:	4648      	mov	r0, r9
    7868:	00db      	lsls	r3, r3, #3
    786a:	4018      	ands	r0, r3
    786c:	4298      	cmp	r0, r3
    786e:	d100      	bne.n	7872 <__ssvfscanf_r+0x472>
    7870:	e3ba      	b.n	7fe8 <__ssvfscanf_r+0xbe8>
    7872:	465b      	mov	r3, fp
    7874:	46bb      	mov	fp, r7
    7876:	002f      	movs	r7, r5
    7878:	001d      	movs	r5, r3
    787a:	9b04      	ldr	r3, [sp, #16]
    787c:	3b01      	subs	r3, #1
    787e:	2b01      	cmp	r3, #1
    7880:	d801      	bhi.n	7886 <__ssvfscanf_r+0x486>
    7882:	f000 fc63 	bl	814c <__ssvfscanf_r+0xd4c>
    7886:	1e6b      	subs	r3, r5, #1
    7888:	2b06      	cmp	r3, #6
    788a:	d820      	bhi.n	78ce <__ssvfscanf_r+0x4ce>
    788c:	2d02      	cmp	r5, #2
    788e:	d801      	bhi.n	7894 <__ssvfscanf_r+0x494>
    7890:	f000 fc6e 	bl	8170 <__ssvfscanf_r+0xd70>
    7894:	2d03      	cmp	r5, #3
    7896:	d01a      	beq.n	78ce <__ssvfscanf_r+0x4ce>
    7898:	3d04      	subs	r5, #4
    789a:	b2ed      	uxtb	r5, r5
    789c:	43ec      	mvns	r4, r5
    789e:	0033      	movs	r3, r6
    78a0:	445c      	add	r4, fp
    78a2:	46aa      	mov	sl, r5
    78a4:	4646      	mov	r6, r8
    78a6:	0025      	movs	r5, r4
    78a8:	46b8      	mov	r8, r7
    78aa:	465c      	mov	r4, fp
    78ac:	001f      	movs	r7, r3
    78ae:	3c01      	subs	r4, #1
    78b0:	7821      	ldrb	r1, [r4, #0]
    78b2:	003a      	movs	r2, r7
    78b4:	0030      	movs	r0, r6
    78b6:	f004 fa07 	bl	bcc8 <_sungetc_r>
    78ba:	42a5      	cmp	r5, r4
    78bc:	d1f7      	bne.n	78ae <__ssvfscanf_r+0x4ae>
    78be:	003b      	movs	r3, r7
    78c0:	4647      	mov	r7, r8
    78c2:	4655      	mov	r5, sl
    78c4:	46b0      	mov	r8, r6
    78c6:	46a3      	mov	fp, r4
    78c8:	001e      	movs	r6, r3
    78ca:	3f01      	subs	r7, #1
    78cc:	1b7f      	subs	r7, r7, r5
    78ce:	464b      	mov	r3, r9
    78d0:	05db      	lsls	r3, r3, #23
    78d2:	d519      	bpl.n	7908 <__ssvfscanf_r+0x508>
    78d4:	464b      	mov	r3, r9
    78d6:	055b      	lsls	r3, r3, #21
    78d8:	d501      	bpl.n	78de <__ssvfscanf_r+0x4de>
    78da:	f000 fc5b 	bl	8194 <__ssvfscanf_r+0xd94>
    78de:	465b      	mov	r3, fp
    78e0:	1e5c      	subs	r4, r3, #1
    78e2:	7821      	ldrb	r1, [r4, #0]
    78e4:	1e7d      	subs	r5, r7, #1
    78e6:	2965      	cmp	r1, #101	; 0x65
    78e8:	d008      	beq.n	78fc <__ssvfscanf_r+0x4fc>
    78ea:	2945      	cmp	r1, #69	; 0x45
    78ec:	d006      	beq.n	78fc <__ssvfscanf_r+0x4fc>
    78ee:	0032      	movs	r2, r6
    78f0:	4640      	mov	r0, r8
    78f2:	3c01      	subs	r4, #1
    78f4:	f004 f9e8 	bl	bcc8 <_sungetc_r>
    78f8:	7821      	ldrb	r1, [r4, #0]
    78fa:	1ebd      	subs	r5, r7, #2
    78fc:	0032      	movs	r2, r6
    78fe:	4640      	mov	r0, r8
    7900:	f004 f9e2 	bl	bcc8 <_sungetc_r>
    7904:	002f      	movs	r7, r5
    7906:	46a3      	mov	fp, r4
    7908:	464a      	mov	r2, r9
    790a:	2310      	movs	r3, #16
    790c:	4013      	ands	r3, r2
    790e:	9a03      	ldr	r2, [sp, #12]
    7910:	4692      	mov	sl, r2
    7912:	d000      	beq.n	7916 <__ssvfscanf_r+0x516>
    7914:	e5ba      	b.n	748c <__ssvfscanf_r+0x8c>
    7916:	465a      	mov	r2, fp
    7918:	7013      	strb	r3, [r2, #0]
    791a:	23c0      	movs	r3, #192	; 0xc0
    791c:	464a      	mov	r2, r9
    791e:	00db      	lsls	r3, r3, #3
    7920:	4013      	ands	r3, r2
    7922:	2280      	movs	r2, #128	; 0x80
    7924:	00d2      	lsls	r2, r2, #3
    7926:	4293      	cmp	r3, r2
    7928:	d100      	bne.n	792c <__ssvfscanf_r+0x52c>
    792a:	e389      	b.n	8040 <__ssvfscanf_r+0xc40>
    792c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    792e:	2b00      	cmp	r3, #0
    7930:	d000      	beq.n	7934 <__ssvfscanf_r+0x534>
    7932:	e1c0      	b.n	7cb6 <__ssvfscanf_r+0x8b6>
    7934:	2200      	movs	r2, #0
    7936:	990a      	ldr	r1, [sp, #40]	; 0x28
    7938:	4640      	mov	r0, r8
    793a:	f003 fe89 	bl	b650 <_strtod_r>
    793e:	464b      	mov	r3, r9
    7940:	0004      	movs	r4, r0
    7942:	000d      	movs	r5, r1
    7944:	07db      	lsls	r3, r3, #31
    7946:	d403      	bmi.n	7950 <__ssvfscanf_r+0x550>
    7948:	464b      	mov	r3, r9
    794a:	079b      	lsls	r3, r3, #30
    794c:	d400      	bmi.n	7950 <__ssvfscanf_r+0x550>
    794e:	e198      	b.n	7c82 <__ssvfscanf_r+0x882>
    7950:	9a07      	ldr	r2, [sp, #28]
    7952:	6813      	ldr	r3, [r2, #0]
    7954:	601c      	str	r4, [r3, #0]
    7956:	605d      	str	r5, [r3, #4]
    7958:	0013      	movs	r3, r2
    795a:	3304      	adds	r3, #4
    795c:	9307      	str	r3, [sp, #28]
    795e:	9b08      	ldr	r3, [sp, #32]
    7960:	3301      	adds	r3, #1
    7962:	9308      	str	r3, [sp, #32]
    7964:	9b03      	ldr	r3, [sp, #12]
    7966:	469a      	mov	sl, r3
    7968:	4654      	mov	r4, sl
    796a:	e590      	b.n	748e <__ssvfscanf_r+0x8e>
    796c:	465b      	mov	r3, fp
    796e:	2b02      	cmp	r3, #2
    7970:	d000      	beq.n	7974 <__ssvfscanf_r+0x574>
    7972:	e725      	b.n	77c0 <__ssvfscanf_r+0x3c0>
    7974:	2303      	movs	r3, #3
    7976:	469b      	mov	fp, r3
    7978:	e713      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    797a:	23a0      	movs	r3, #160	; 0xa0
    797c:	4648      	mov	r0, r9
    797e:	00db      	lsls	r3, r3, #3
    7980:	4003      	ands	r3, r0
    7982:	2080      	movs	r0, #128	; 0x80
    7984:	00c0      	lsls	r0, r0, #3
    7986:	4283      	cmp	r3, r0
    7988:	d007      	beq.n	799a <__ssvfscanf_r+0x59a>
    798a:	464b      	mov	r3, r9
    798c:	4203      	tst	r3, r0
    798e:	d100      	bne.n	7992 <__ssvfscanf_r+0x592>
    7990:	e715      	b.n	77be <__ssvfscanf_r+0x3be>
    7992:	9b06      	ldr	r3, [sp, #24]
    7994:	2b00      	cmp	r3, #0
    7996:	d100      	bne.n	799a <__ssvfscanf_r+0x59a>
    7998:	e76b      	b.n	7872 <__ssvfscanf_r+0x472>
    799a:	2080      	movs	r0, #128	; 0x80
    799c:	464b      	mov	r3, r9
    799e:	0080      	lsls	r0, r0, #2
    79a0:	4203      	tst	r3, r0
    79a2:	d104      	bne.n	79ae <__ssvfscanf_r+0x5ae>
    79a4:	9b06      	ldr	r3, [sp, #24]
    79a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
    79a8:	970e      	str	r7, [sp, #56]	; 0x38
    79aa:	1a1b      	subs	r3, r3, r0
    79ac:	930f      	str	r3, [sp, #60]	; 0x3c
    79ae:	4648      	mov	r0, r9
    79b0:	4b35      	ldr	r3, [pc, #212]	; (7a88 <__ssvfscanf_r+0x688>)
    79b2:	4018      	ands	r0, r3
    79b4:	0003      	movs	r3, r0
    79b6:	20c0      	movs	r0, #192	; 0xc0
    79b8:	0040      	lsls	r0, r0, #1
    79ba:	4318      	orrs	r0, r3
    79bc:	2300      	movs	r3, #0
    79be:	4681      	mov	r9, r0
    79c0:	9306      	str	r3, [sp, #24]
    79c2:	e6ee      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    79c4:	9b04      	ldr	r3, [sp, #16]
    79c6:	2b01      	cmp	r3, #1
    79c8:	d000      	beq.n	79cc <__ssvfscanf_r+0x5cc>
    79ca:	e6f8      	b.n	77be <__ssvfscanf_r+0x3be>
    79cc:	2302      	movs	r3, #2
    79ce:	9304      	str	r3, [sp, #16]
    79d0:	e6e7      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    79d2:	465b      	mov	r3, fp
    79d4:	2b07      	cmp	r3, #7
    79d6:	d000      	beq.n	79da <__ssvfscanf_r+0x5da>
    79d8:	e6f2      	b.n	77c0 <__ssvfscanf_r+0x3c0>
    79da:	2308      	movs	r3, #8
    79dc:	469b      	mov	fp, r3
    79de:	e6e0      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    79e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    79e2:	781b      	ldrb	r3, [r3, #0]
    79e4:	428b      	cmp	r3, r1
    79e6:	d000      	beq.n	79ea <__ssvfscanf_r+0x5ea>
    79e8:	e6e9      	b.n	77be <__ssvfscanf_r+0x3be>
    79ea:	2080      	movs	r0, #128	; 0x80
    79ec:	464b      	mov	r3, r9
    79ee:	0080      	lsls	r0, r0, #2
    79f0:	4203      	tst	r3, r0
    79f2:	d100      	bne.n	79f6 <__ssvfscanf_r+0x5f6>
    79f4:	e6e3      	b.n	77be <__ssvfscanf_r+0x3be>
    79f6:	4825      	ldr	r0, [pc, #148]	; (7a8c <__ssvfscanf_r+0x68c>)
    79f8:	4003      	ands	r3, r0
    79fa:	4699      	mov	r9, r3
    79fc:	9b06      	ldr	r3, [sp, #24]
    79fe:	930b      	str	r3, [sp, #44]	; 0x2c
    7a00:	e6cf      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    7a02:	2b01      	cmp	r3, #1
    7a04:	d144      	bne.n	7a90 <__ssvfscanf_r+0x690>
    7a06:	2c00      	cmp	r4, #0
    7a08:	d100      	bne.n	7a0c <__ssvfscanf_r+0x60c>
    7a0a:	3c01      	subs	r4, #1
    7a0c:	464b      	mov	r3, r9
    7a0e:	06db      	lsls	r3, r3, #27
    7a10:	d400      	bmi.n	7a14 <__ssvfscanf_r+0x614>
    7a12:	e1c1      	b.n	7d98 <__ssvfscanf_r+0x998>
    7a14:	ab14      	add	r3, sp, #80	; 0x50
    7a16:	2500      	movs	r5, #0
    7a18:	469a      	mov	sl, r3
    7a1a:	6832      	ldr	r2, [r6, #0]
    7a1c:	4651      	mov	r1, sl
    7a1e:	7813      	ldrb	r3, [r2, #0]
    7a20:	5ccb      	ldrb	r3, [r1, r3]
    7a22:	2b00      	cmp	r3, #0
    7a24:	d015      	beq.n	7a52 <__ssvfscanf_r+0x652>
    7a26:	6873      	ldr	r3, [r6, #4]
    7a28:	3201      	adds	r2, #1
    7a2a:	3b01      	subs	r3, #1
    7a2c:	3501      	adds	r5, #1
    7a2e:	6073      	str	r3, [r6, #4]
    7a30:	6032      	str	r2, [r6, #0]
    7a32:	42ac      	cmp	r4, r5
    7a34:	d010      	beq.n	7a58 <__ssvfscanf_r+0x658>
    7a36:	2b00      	cmp	r3, #0
    7a38:	dcf0      	bgt.n	7a1c <__ssvfscanf_r+0x61c>
    7a3a:	0031      	movs	r1, r6
    7a3c:	4640      	mov	r0, r8
    7a3e:	f004 f985 	bl	bd4c <__ssrefill_r>
    7a42:	2800      	cmp	r0, #0
    7a44:	d108      	bne.n	7a58 <__ssvfscanf_r+0x658>
    7a46:	4651      	mov	r1, sl
    7a48:	6832      	ldr	r2, [r6, #0]
    7a4a:	7813      	ldrb	r3, [r2, #0]
    7a4c:	5ccb      	ldrb	r3, [r1, r3]
    7a4e:	2b00      	cmp	r3, #0
    7a50:	d1e9      	bne.n	7a26 <__ssvfscanf_r+0x626>
    7a52:	2d00      	cmp	r5, #0
    7a54:	d100      	bne.n	7a58 <__ssvfscanf_r+0x658>
    7a56:	e520      	b.n	749a <__ssvfscanf_r+0x9a>
    7a58:	197f      	adds	r7, r7, r5
    7a5a:	e783      	b.n	7964 <__ssvfscanf_r+0x564>
    7a5c:	465b      	mov	r3, fp
    7a5e:	20fd      	movs	r0, #253	; 0xfd
    7a60:	3b03      	subs	r3, #3
    7a62:	4203      	tst	r3, r0
    7a64:	d000      	beq.n	7a68 <__ssvfscanf_r+0x668>
    7a66:	e6aa      	b.n	77be <__ssvfscanf_r+0x3be>
    7a68:	3304      	adds	r3, #4
    7a6a:	b2db      	uxtb	r3, r3
    7a6c:	469b      	mov	fp, r3
    7a6e:	e698      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    7a70:	9b04      	ldr	r3, [sp, #16]
    7a72:	2b02      	cmp	r3, #2
    7a74:	d000      	beq.n	7a78 <__ssvfscanf_r+0x678>
    7a76:	e6e3      	b.n	7840 <__ssvfscanf_r+0x440>
    7a78:	2303      	movs	r3, #3
    7a7a:	9304      	str	r3, [sp, #16]
    7a7c:	e691      	b.n	77a2 <__ssvfscanf_r+0x3a2>
    7a7e:	46c0      	nop			; (mov r8, r8)
    7a80:	00005dd5 	.word	0x00005dd5
    7a84:	fffffe7f 	.word	0xfffffe7f
    7a88:	fffff87f 	.word	0xfffff87f
    7a8c:	fffffd7f 	.word	0xfffffd7f
    7a90:	2c00      	cmp	r4, #0
    7a92:	d100      	bne.n	7a96 <__ssvfscanf_r+0x696>
    7a94:	3401      	adds	r4, #1
    7a96:	464b      	mov	r3, r9
    7a98:	07db      	lsls	r3, r3, #31
    7a9a:	d500      	bpl.n	7a9e <__ssvfscanf_r+0x69e>
    7a9c:	e1aa      	b.n	7df4 <__ssvfscanf_r+0x9f4>
    7a9e:	464b      	mov	r3, r9
    7aa0:	06db      	lsls	r3, r3, #27
    7aa2:	d400      	bmi.n	7aa6 <__ssvfscanf_r+0x6a6>
    7aa4:	e22f      	b.n	7f06 <__ssvfscanf_r+0xb06>
    7aa6:	4643      	mov	r3, r8
    7aa8:	2500      	movs	r5, #0
    7aaa:	46b8      	mov	r8, r7
    7aac:	001f      	movs	r7, r3
    7aae:	e00c      	b.n	7aca <__ssvfscanf_r+0x6ca>
    7ab0:	6832      	ldr	r2, [r6, #0]
    7ab2:	18ed      	adds	r5, r5, r3
    7ab4:	4694      	mov	ip, r2
    7ab6:	1ae4      	subs	r4, r4, r3
    7ab8:	4463      	add	r3, ip
    7aba:	6033      	str	r3, [r6, #0]
    7abc:	0031      	movs	r1, r6
    7abe:	0038      	movs	r0, r7
    7ac0:	f004 f944 	bl	bd4c <__ssrefill_r>
    7ac4:	2800      	cmp	r0, #0
    7ac6:	d000      	beq.n	7aca <__ssvfscanf_r+0x6ca>
    7ac8:	e214      	b.n	7ef4 <__ssvfscanf_r+0xaf4>
    7aca:	6873      	ldr	r3, [r6, #4]
    7acc:	42a3      	cmp	r3, r4
    7ace:	dbef      	blt.n	7ab0 <__ssvfscanf_r+0x6b0>
    7ad0:	1b1b      	subs	r3, r3, r4
    7ad2:	6073      	str	r3, [r6, #4]
    7ad4:	6833      	ldr	r3, [r6, #0]
    7ad6:	003a      	movs	r2, r7
    7ad8:	469c      	mov	ip, r3
    7ada:	4647      	mov	r7, r8
    7adc:	192d      	adds	r5, r5, r4
    7ade:	4464      	add	r4, ip
    7ae0:	4690      	mov	r8, r2
    7ae2:	6034      	str	r4, [r6, #0]
    7ae4:	197f      	adds	r7, r7, r5
    7ae6:	e73d      	b.n	7964 <__ssvfscanf_r+0x564>
    7ae8:	22ae      	movs	r2, #174	; 0xae
    7aea:	2100      	movs	r1, #0
    7aec:	1e63      	subs	r3, r4, #1
    7aee:	0052      	lsls	r2, r2, #1
    7af0:	468b      	mov	fp, r1
    7af2:	4293      	cmp	r3, r2
    7af4:	d904      	bls.n	7b00 <__ssvfscanf_r+0x700>
    7af6:	4bcb      	ldr	r3, [pc, #812]	; (7e24 <__ssvfscanf_r+0xa24>)
    7af8:	469b      	mov	fp, r3
    7afa:	44a3      	add	fp, r4
    7afc:	245e      	movs	r4, #94	; 0x5e
    7afe:	34ff      	adds	r4, #255	; 0xff
    7b00:	23d8      	movs	r3, #216	; 0xd8
    7b02:	464a      	mov	r2, r9
    7b04:	011b      	lsls	r3, r3, #4
    7b06:	431a      	orrs	r2, r3
    7b08:	2300      	movs	r3, #0
    7b0a:	469a      	mov	sl, r3
    7b0c:	ab54      	add	r3, sp, #336	; 0x150
    7b0e:	930a      	str	r3, [sp, #40]	; 0x28
    7b10:	001d      	movs	r5, r3
    7b12:	003b      	movs	r3, r7
    7b14:	0017      	movs	r7, r2
    7b16:	4699      	mov	r9, r3
    7b18:	6832      	ldr	r2, [r6, #0]
    7b1a:	7811      	ldrb	r1, [r2, #0]
    7b1c:	000b      	movs	r3, r1
    7b1e:	3b2b      	subs	r3, #43	; 0x2b
    7b20:	b2db      	uxtb	r3, r3
    7b22:	2b4d      	cmp	r3, #77	; 0x4d
    7b24:	d81d      	bhi.n	7b62 <__ssvfscanf_r+0x762>
    7b26:	48c0      	ldr	r0, [pc, #768]	; (7e28 <__ssvfscanf_r+0xa28>)
    7b28:	009b      	lsls	r3, r3, #2
    7b2a:	58c3      	ldr	r3, [r0, r3]
    7b2c:	469f      	mov	pc, r3
    7b2e:	23c0      	movs	r3, #192	; 0xc0
    7b30:	2080      	movs	r0, #128	; 0x80
    7b32:	00db      	lsls	r3, r3, #3
    7b34:	403b      	ands	r3, r7
    7b36:	0080      	lsls	r0, r0, #2
    7b38:	4283      	cmp	r3, r0
    7b3a:	d112      	bne.n	7b62 <__ssvfscanf_r+0x762>
    7b3c:	4bbb      	ldr	r3, [pc, #748]	; (7e2c <__ssvfscanf_r+0xa2c>)
    7b3e:	401f      	ands	r7, r3
    7b40:	23a0      	movs	r3, #160	; 0xa0
    7b42:	00db      	lsls	r3, r3, #3
    7b44:	431f      	orrs	r7, r3
    7b46:	2310      	movs	r3, #16
    7b48:	9305      	str	r3, [sp, #20]
    7b4a:	6873      	ldr	r3, [r6, #4]
    7b4c:	7029      	strb	r1, [r5, #0]
    7b4e:	3b01      	subs	r3, #1
    7b50:	3501      	adds	r5, #1
    7b52:	6073      	str	r3, [r6, #4]
    7b54:	2b00      	cmp	r3, #0
    7b56:	dd49      	ble.n	7bec <__ssvfscanf_r+0x7ec>
    7b58:	3201      	adds	r2, #1
    7b5a:	6032      	str	r2, [r6, #0]
    7b5c:	3c01      	subs	r4, #1
    7b5e:	2c00      	cmp	r4, #0
    7b60:	d1da      	bne.n	7b18 <__ssvfscanf_r+0x718>
    7b62:	464b      	mov	r3, r9
    7b64:	46b9      	mov	r9, r7
    7b66:	001f      	movs	r7, r3
    7b68:	464b      	mov	r3, r9
    7b6a:	05db      	lsls	r3, r3, #23
    7b6c:	d507      	bpl.n	7b7e <__ssvfscanf_r+0x77e>
    7b6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7b70:	429d      	cmp	r5, r3
    7b72:	d900      	bls.n	7b76 <__ssvfscanf_r+0x776>
    7b74:	e231      	b.n	7fda <__ssvfscanf_r+0xbda>
    7b76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7b78:	429d      	cmp	r5, r3
    7b7a:	d100      	bne.n	7b7e <__ssvfscanf_r+0x77e>
    7b7c:	e48d      	b.n	749a <__ssvfscanf_r+0x9a>
    7b7e:	2310      	movs	r3, #16
    7b80:	464a      	mov	r2, r9
    7b82:	4013      	ands	r3, r2
    7b84:	d100      	bne.n	7b88 <__ssvfscanf_r+0x788>
    7b86:	e0b7      	b.n	7cf8 <__ssvfscanf_r+0x8f8>
    7b88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7b8a:	1aed      	subs	r5, r5, r3
    7b8c:	4455      	add	r5, sl
    7b8e:	197f      	adds	r7, r7, r5
    7b90:	e6e8      	b.n	7964 <__ssvfscanf_r+0x564>
    7b92:	9b05      	ldr	r3, [sp, #20]
    7b94:	2b0a      	cmp	r3, #10
    7b96:	dde4      	ble.n	7b62 <__ssvfscanf_r+0x762>
    7b98:	4ba5      	ldr	r3, [pc, #660]	; (7e30 <__ssvfscanf_r+0xa30>)
    7b9a:	401f      	ands	r7, r3
    7b9c:	e7d5      	b.n	7b4a <__ssvfscanf_r+0x74a>
    7b9e:	9b05      	ldr	r3, [sp, #20]
    7ba0:	48a4      	ldr	r0, [pc, #656]	; (7e34 <__ssvfscanf_r+0xa34>)
    7ba2:	005b      	lsls	r3, r3, #1
    7ba4:	5e1b      	ldrsh	r3, [r3, r0]
    7ba6:	9305      	str	r3, [sp, #20]
    7ba8:	4ba1      	ldr	r3, [pc, #644]	; (7e30 <__ssvfscanf_r+0xa30>)
    7baa:	401f      	ands	r7, r3
    7bac:	e7cd      	b.n	7b4a <__ssvfscanf_r+0x74a>
    7bae:	053b      	lsls	r3, r7, #20
    7bb0:	d5cb      	bpl.n	7b4a <__ssvfscanf_r+0x74a>
    7bb2:	9b05      	ldr	r3, [sp, #20]
    7bb4:	2b00      	cmp	r3, #0
    7bb6:	d105      	bne.n	7bc4 <__ssvfscanf_r+0x7c4>
    7bb8:	2380      	movs	r3, #128	; 0x80
    7bba:	009b      	lsls	r3, r3, #2
    7bbc:	431f      	orrs	r7, r3
    7bbe:	3bf9      	subs	r3, #249	; 0xf9
    7bc0:	3bff      	subs	r3, #255	; 0xff
    7bc2:	9305      	str	r3, [sp, #20]
    7bc4:	057b      	lsls	r3, r7, #21
    7bc6:	d459      	bmi.n	7c7c <__ssvfscanf_r+0x87c>
    7bc8:	4b9b      	ldr	r3, [pc, #620]	; (7e38 <__ssvfscanf_r+0xa38>)
    7bca:	401f      	ands	r7, r3
    7bcc:	465b      	mov	r3, fp
    7bce:	2b00      	cmp	r3, #0
    7bd0:	d004      	beq.n	7bdc <__ssvfscanf_r+0x7dc>
    7bd2:	2301      	movs	r3, #1
    7bd4:	425b      	negs	r3, r3
    7bd6:	469c      	mov	ip, r3
    7bd8:	3401      	adds	r4, #1
    7bda:	44e3      	add	fp, ip
    7bdc:	2301      	movs	r3, #1
    7bde:	469c      	mov	ip, r3
    7be0:	6873      	ldr	r3, [r6, #4]
    7be2:	44e2      	add	sl, ip
    7be4:	3b01      	subs	r3, #1
    7be6:	6073      	str	r3, [r6, #4]
    7be8:	2b00      	cmp	r3, #0
    7bea:	dcb5      	bgt.n	7b58 <__ssvfscanf_r+0x758>
    7bec:	0031      	movs	r1, r6
    7bee:	4640      	mov	r0, r8
    7bf0:	f004 f8ac 	bl	bd4c <__ssrefill_r>
    7bf4:	2800      	cmp	r0, #0
    7bf6:	d0b1      	beq.n	7b5c <__ssvfscanf_r+0x75c>
    7bf8:	e7b3      	b.n	7b62 <__ssvfscanf_r+0x762>
    7bfa:	9b05      	ldr	r3, [sp, #20]
    7bfc:	488d      	ldr	r0, [pc, #564]	; (7e34 <__ssvfscanf_r+0xa34>)
    7bfe:	005b      	lsls	r3, r3, #1
    7c00:	5e1b      	ldrsh	r3, [r3, r0]
    7c02:	9305      	str	r3, [sp, #20]
    7c04:	2b08      	cmp	r3, #8
    7c06:	dcc7      	bgt.n	7b98 <__ssvfscanf_r+0x798>
    7c08:	e7ab      	b.n	7b62 <__ssvfscanf_r+0x762>
    7c0a:	2380      	movs	r3, #128	; 0x80
    7c0c:	423b      	tst	r3, r7
    7c0e:	d0a8      	beq.n	7b62 <__ssvfscanf_r+0x762>
    7c10:	439f      	bics	r7, r3
    7c12:	e79a      	b.n	7b4a <__ssvfscanf_r+0x74a>
    7c14:	2c00      	cmp	r4, #0
    7c16:	d100      	bne.n	7c1a <__ssvfscanf_r+0x81a>
    7c18:	3c01      	subs	r4, #1
    7c1a:	2501      	movs	r5, #1
    7c1c:	464b      	mov	r3, r9
    7c1e:	401d      	ands	r5, r3
    7c20:	d000      	beq.n	7c24 <__ssvfscanf_r+0x824>
    7c22:	e093      	b.n	7d4c <__ssvfscanf_r+0x94c>
    7c24:	464b      	mov	r3, r9
    7c26:	06db      	lsls	r3, r3, #27
    7c28:	d400      	bmi.n	7c2c <__ssvfscanf_r+0x82c>
    7c2a:	e183      	b.n	7f34 <__ssvfscanf_r+0xb34>
    7c2c:	2308      	movs	r3, #8
    7c2e:	4699      	mov	r9, r3
    7c30:	f001 fcb8 	bl	95a4 <__locale_ctype_ptr>
    7c34:	4649      	mov	r1, r9
    7c36:	6833      	ldr	r3, [r6, #0]
    7c38:	781a      	ldrb	r2, [r3, #0]
    7c3a:	1880      	adds	r0, r0, r2
    7c3c:	7842      	ldrb	r2, [r0, #1]
    7c3e:	4211      	tst	r1, r2
    7c40:	d000      	beq.n	7c44 <__ssvfscanf_r+0x844>
    7c42:	e709      	b.n	7a58 <__ssvfscanf_r+0x658>
    7c44:	6872      	ldr	r2, [r6, #4]
    7c46:	3301      	adds	r3, #1
    7c48:	3a01      	subs	r2, #1
    7c4a:	3501      	adds	r5, #1
    7c4c:	6072      	str	r2, [r6, #4]
    7c4e:	6033      	str	r3, [r6, #0]
    7c50:	42ac      	cmp	r4, r5
    7c52:	d100      	bne.n	7c56 <__ssvfscanf_r+0x856>
    7c54:	e700      	b.n	7a58 <__ssvfscanf_r+0x658>
    7c56:	2a00      	cmp	r2, #0
    7c58:	dcea      	bgt.n	7c30 <__ssvfscanf_r+0x830>
    7c5a:	0031      	movs	r1, r6
    7c5c:	4640      	mov	r0, r8
    7c5e:	f004 f875 	bl	bd4c <__ssrefill_r>
    7c62:	2800      	cmp	r0, #0
    7c64:	d0e4      	beq.n	7c30 <__ssvfscanf_r+0x830>
    7c66:	197f      	adds	r7, r7, r5
    7c68:	e67c      	b.n	7964 <__ssvfscanf_r+0x564>
    7c6a:	465b      	mov	r3, fp
    7c6c:	46bb      	mov	fp, r7
    7c6e:	002f      	movs	r7, r5
    7c70:	001d      	movs	r5, r3
    7c72:	464a      	mov	r2, r9
    7c74:	4b71      	ldr	r3, [pc, #452]	; (7e3c <__ssvfscanf_r+0xa3c>)
    7c76:	401a      	ands	r2, r3
    7c78:	4691      	mov	r9, r2
    7c7a:	e5fe      	b.n	787a <__ssvfscanf_r+0x47a>
    7c7c:	4b70      	ldr	r3, [pc, #448]	; (7e40 <__ssvfscanf_r+0xa40>)
    7c7e:	401f      	ands	r7, r3
    7c80:	e763      	b.n	7b4a <__ssvfscanf_r+0x74a>
    7c82:	9b07      	ldr	r3, [sp, #28]
    7c84:	1d1a      	adds	r2, r3, #4
    7c86:	681b      	ldr	r3, [r3, #0]
    7c88:	4692      	mov	sl, r2
    7c8a:	4699      	mov	r9, r3
    7c8c:	0002      	movs	r2, r0
    7c8e:	000b      	movs	r3, r1
    7c90:	f005 faf6 	bl	d280 <__aeabi_dcmpun>
    7c94:	2800      	cmp	r0, #0
    7c96:	d000      	beq.n	7c9a <__ssvfscanf_r+0x89a>
    7c98:	e28e      	b.n	81b8 <__ssvfscanf_r+0xdb8>
    7c9a:	0020      	movs	r0, r4
    7c9c:	0029      	movs	r1, r5
    7c9e:	f005 fb0f 	bl	d2c0 <__aeabi_d2f>
    7ca2:	464b      	mov	r3, r9
    7ca4:	6018      	str	r0, [r3, #0]
    7ca6:	4653      	mov	r3, sl
    7ca8:	9307      	str	r3, [sp, #28]
    7caa:	e658      	b.n	795e <__ssvfscanf_r+0x55e>
    7cac:	464a      	mov	r2, r9
    7cae:	431a      	orrs	r2, r3
    7cb0:	4691      	mov	r9, r2
    7cb2:	4b64      	ldr	r3, [pc, #400]	; (7e44 <__ssvfscanf_r+0xa44>)
    7cb4:	e472      	b.n	759c <__ssvfscanf_r+0x19c>
    7cb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7cb8:	2200      	movs	r2, #0
    7cba:	1c59      	adds	r1, r3, #1
    7cbc:	4640      	mov	r0, r8
    7cbe:	230a      	movs	r3, #10
    7cc0:	f7fe f888 	bl	5dd4 <_strtol_r>
    7cc4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7cc6:	1ac2      	subs	r2, r0, r3
    7cc8:	a90e      	add	r1, sp, #56	; 0x38
    7cca:	468c      	mov	ip, r1
    7ccc:	4b5e      	ldr	r3, [pc, #376]	; (7e48 <__ssvfscanf_r+0xa48>)
    7cce:	990e      	ldr	r1, [sp, #56]	; 0x38
    7cd0:	4463      	add	r3, ip
    7cd2:	4299      	cmp	r1, r3
    7cd4:	d302      	bcc.n	7cdc <__ssvfscanf_r+0x8dc>
    7cd6:	4b5d      	ldr	r3, [pc, #372]	; (7e4c <__ssvfscanf_r+0xa4c>)
    7cd8:	4463      	add	r3, ip
    7cda:	930e      	str	r3, [sp, #56]	; 0x38
    7cdc:	495c      	ldr	r1, [pc, #368]	; (7e50 <__ssvfscanf_r+0xa50>)
    7cde:	980e      	ldr	r0, [sp, #56]	; 0x38
    7ce0:	f002 fd30 	bl	a744 <sprintf>
    7ce4:	e626      	b.n	7934 <__ssvfscanf_r+0x534>
    7ce6:	9a07      	ldr	r2, [sp, #28]
    7ce8:	4654      	mov	r4, sl
    7cea:	6813      	ldr	r3, [r2, #0]
    7cec:	601f      	str	r7, [r3, #0]
    7cee:	0013      	movs	r3, r2
    7cf0:	3304      	adds	r3, #4
    7cf2:	9307      	str	r3, [sp, #28]
    7cf4:	f7ff fbcb 	bl	748e <__ssvfscanf_r+0x8e>
    7cf8:	702b      	strb	r3, [r5, #0]
    7cfa:	2200      	movs	r2, #0
    7cfc:	9b05      	ldr	r3, [sp, #20]
    7cfe:	990a      	ldr	r1, [sp, #40]	; 0x28
    7d00:	4640      	mov	r0, r8
    7d02:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7d04:	47a0      	blx	r4
    7d06:	464b      	mov	r3, r9
    7d08:	069b      	lsls	r3, r3, #26
    7d0a:	d500      	bpl.n	7d0e <__ssvfscanf_r+0x90e>
    7d0c:	e15b      	b.n	7fc6 <__ssvfscanf_r+0xbc6>
    7d0e:	464b      	mov	r3, r9
    7d10:	075b      	lsls	r3, r3, #29
    7d12:	d500      	bpl.n	7d16 <__ssvfscanf_r+0x916>
    7d14:	e1c6      	b.n	80a4 <__ssvfscanf_r+0xca4>
    7d16:	464b      	mov	r3, r9
    7d18:	07db      	lsls	r3, r3, #31
    7d1a:	d500      	bpl.n	7d1e <__ssvfscanf_r+0x91e>
    7d1c:	e153      	b.n	7fc6 <__ssvfscanf_r+0xbc6>
    7d1e:	464b      	mov	r3, r9
    7d20:	079b      	lsls	r3, r3, #30
    7d22:	d400      	bmi.n	7d26 <__ssvfscanf_r+0x926>
    7d24:	e14f      	b.n	7fc6 <__ssvfscanf_r+0xbc6>
    7d26:	4b4b      	ldr	r3, [pc, #300]	; (7e54 <__ssvfscanf_r+0xa54>)
    7d28:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7d2a:	429a      	cmp	r2, r3
    7d2c:	d100      	bne.n	7d30 <__ssvfscanf_r+0x930>
    7d2e:	e1b2      	b.n	8096 <__ssvfscanf_r+0xc96>
    7d30:	9b05      	ldr	r3, [sp, #20]
    7d32:	2200      	movs	r2, #0
    7d34:	990a      	ldr	r1, [sp, #40]	; 0x28
    7d36:	4640      	mov	r0, r8
    7d38:	f003 fd78 	bl	b82c <_strtoll_r>
    7d3c:	9a07      	ldr	r2, [sp, #28]
    7d3e:	6813      	ldr	r3, [r2, #0]
    7d40:	6018      	str	r0, [r3, #0]
    7d42:	6059      	str	r1, [r3, #4]
    7d44:	0013      	movs	r3, r2
    7d46:	3304      	adds	r3, #4
    7d48:	9307      	str	r3, [sp, #28]
    7d4a:	e142      	b.n	7fd2 <__ssvfscanf_r+0xbd2>
    7d4c:	ab12      	add	r3, sp, #72	; 0x48
    7d4e:	2208      	movs	r2, #8
    7d50:	0018      	movs	r0, r3
    7d52:	2100      	movs	r1, #0
    7d54:	9306      	str	r3, [sp, #24]
    7d56:	f7fd fba5 	bl	54a4 <memset>
    7d5a:	2310      	movs	r3, #16
    7d5c:	464a      	mov	r2, r9
    7d5e:	401a      	ands	r2, r3
    7d60:	ab11      	add	r3, sp, #68	; 0x44
    7d62:	4693      	mov	fp, r2
    7d64:	4699      	mov	r9, r3
    7d66:	2a00      	cmp	r2, #0
    7d68:	d100      	bne.n	7d6c <__ssvfscanf_r+0x96c>
    7d6a:	e17f      	b.n	806c <__ssvfscanf_r+0xc6c>
    7d6c:	2300      	movs	r3, #0
    7d6e:	001d      	movs	r5, r3
    7d70:	f001 fc18 	bl	95a4 <__locale_ctype_ptr>
    7d74:	2208      	movs	r2, #8
    7d76:	6833      	ldr	r3, [r6, #0]
    7d78:	781b      	ldrb	r3, [r3, #0]
    7d7a:	18c0      	adds	r0, r0, r3
    7d7c:	7843      	ldrb	r3, [r0, #1]
    7d7e:	421a      	tst	r2, r3
    7d80:	d102      	bne.n	7d88 <__ssvfscanf_r+0x988>
    7d82:	2c00      	cmp	r4, #0
    7d84:	d000      	beq.n	7d88 <__ssvfscanf_r+0x988>
    7d86:	e194      	b.n	80b2 <__ssvfscanf_r+0xcb2>
    7d88:	465b      	mov	r3, fp
    7d8a:	2b00      	cmp	r3, #0
    7d8c:	d000      	beq.n	7d90 <__ssvfscanf_r+0x990>
    7d8e:	e5e9      	b.n	7964 <__ssvfscanf_r+0x564>
    7d90:	464b      	mov	r3, r9
    7d92:	465a      	mov	r2, fp
    7d94:	601a      	str	r2, [r3, #0]
    7d96:	e5e2      	b.n	795e <__ssvfscanf_r+0x55e>
    7d98:	9b07      	ldr	r3, [sp, #28]
    7d9a:	3c01      	subs	r4, #1
    7d9c:	1d1a      	adds	r2, r3, #4
    7d9e:	681b      	ldr	r3, [r3, #0]
    7da0:	4693      	mov	fp, r2
    7da2:	4699      	mov	r9, r3
    7da4:	001a      	movs	r2, r3
    7da6:	444c      	add	r4, r9
    7da8:	ab14      	add	r3, sp, #80	; 0x50
    7daa:	46ba      	mov	sl, r7
    7dac:	001d      	movs	r5, r3
    7dae:	0027      	movs	r7, r4
    7db0:	6833      	ldr	r3, [r6, #0]
    7db2:	7819      	ldrb	r1, [r3, #0]
    7db4:	5c69      	ldrb	r1, [r5, r1]
    7db6:	2900      	cmp	r1, #0
    7db8:	d100      	bne.n	7dbc <__ssvfscanf_r+0x9bc>
    7dba:	e13e      	b.n	803a <__ssvfscanf_r+0xc3a>
    7dbc:	6871      	ldr	r1, [r6, #4]
    7dbe:	1c54      	adds	r4, r2, #1
    7dc0:	3901      	subs	r1, #1
    7dc2:	6071      	str	r1, [r6, #4]
    7dc4:	1c59      	adds	r1, r3, #1
    7dc6:	6031      	str	r1, [r6, #0]
    7dc8:	781b      	ldrb	r3, [r3, #0]
    7dca:	7013      	strb	r3, [r2, #0]
    7dcc:	42ba      	cmp	r2, r7
    7dce:	d100      	bne.n	7dd2 <__ssvfscanf_r+0x9d2>
    7dd0:	e124      	b.n	801c <__ssvfscanf_r+0xc1c>
    7dd2:	6873      	ldr	r3, [r6, #4]
    7dd4:	2b00      	cmp	r3, #0
    7dd6:	dd01      	ble.n	7ddc <__ssvfscanf_r+0x9dc>
    7dd8:	0022      	movs	r2, r4
    7dda:	e7e9      	b.n	7db0 <__ssvfscanf_r+0x9b0>
    7ddc:	0031      	movs	r1, r6
    7dde:	4640      	mov	r0, r8
    7de0:	f003 ffb4 	bl	bd4c <__ssrefill_r>
    7de4:	2800      	cmp	r0, #0
    7de6:	d0f7      	beq.n	7dd8 <__ssvfscanf_r+0x9d8>
    7de8:	4657      	mov	r7, sl
    7dea:	45a1      	cmp	r9, r4
    7dec:	d000      	beq.n	7df0 <__ssvfscanf_r+0x9f0>
    7dee:	e116      	b.n	801e <__ssvfscanf_r+0xc1e>
    7df0:	f7ff fba0 	bl	7534 <__ssvfscanf_r+0x134>
    7df4:	ab12      	add	r3, sp, #72	; 0x48
    7df6:	2208      	movs	r2, #8
    7df8:	0018      	movs	r0, r3
    7dfa:	2100      	movs	r1, #0
    7dfc:	9306      	str	r3, [sp, #24]
    7dfe:	f7fd fb51 	bl	54a4 <memset>
    7e02:	2310      	movs	r3, #16
    7e04:	464a      	mov	r2, r9
    7e06:	401a      	ands	r2, r3
    7e08:	9204      	str	r2, [sp, #16]
    7e0a:	d100      	bne.n	7e0e <__ssvfscanf_r+0xa0e>
    7e0c:	e124      	b.n	8058 <__ssvfscanf_r+0xc58>
    7e0e:	2300      	movs	r3, #0
    7e10:	469b      	mov	fp, r3
    7e12:	2c00      	cmp	r4, #0
    7e14:	d100      	bne.n	7e18 <__ssvfscanf_r+0xa18>
    7e16:	e5a5      	b.n	7964 <__ssvfscanf_r+0x564>
    7e18:	9b06      	ldr	r3, [sp, #24]
    7e1a:	46b9      	mov	r9, r7
    7e1c:	2500      	movs	r5, #0
    7e1e:	0027      	movs	r7, r4
    7e20:	469a      	mov	sl, r3
    7e22:	e02a      	b.n	7e7a <__ssvfscanf_r+0xa7a>
    7e24:	fffffea3 	.word	0xfffffea3
    7e28:	0000ea44 	.word	0x0000ea44
    7e2c:	fffffdff 	.word	0xfffffdff
    7e30:	fffff47f 	.word	0xfffff47f
    7e34:	0000eb84 	.word	0x0000eb84
    7e38:	fffffc7f 	.word	0xfffffc7f
    7e3c:	fffffeff 	.word	0xfffffeff
    7e40:	fffffa7f 	.word	0xfffffa7f
    7e44:	00005dd5 	.word	0x00005dd5
    7e48:	0000026b 	.word	0x0000026b
    7e4c:	0000026a 	.word	0x0000026a
    7e50:	0000eb7c 	.word	0x0000eb7c
    7e54:	0000b99d 	.word	0x0000b99d
    7e58:	9b04      	ldr	r3, [sp, #16]
    7e5a:	2b00      	cmp	r3, #0
    7e5c:	d146      	bne.n	7eec <__ssvfscanf_r+0xaec>
    7e5e:	465a      	mov	r2, fp
    7e60:	44a1      	add	r9, r4
    7e62:	6013      	str	r3, [r2, #0]
    7e64:	3f01      	subs	r7, #1
    7e66:	2304      	movs	r3, #4
    7e68:	469c      	mov	ip, r3
    7e6a:	2500      	movs	r5, #0
    7e6c:	44e3      	add	fp, ip
    7e6e:	6873      	ldr	r3, [r6, #4]
    7e70:	2b00      	cmp	r3, #0
    7e72:	dd2f      	ble.n	7ed4 <__ssvfscanf_r+0xad4>
    7e74:	2f00      	cmp	r7, #0
    7e76:	d100      	bne.n	7e7a <__ssvfscanf_r+0xa7a>
    7e78:	e0fe      	b.n	8078 <__ssvfscanf_r+0xc78>
    7e7a:	f001 fb7f 	bl	957c <__locale_mb_cur_max>
    7e7e:	42a8      	cmp	r0, r5
    7e80:	d101      	bne.n	7e86 <__ssvfscanf_r+0xa86>
    7e82:	f7ff fb57 	bl	7534 <__ssvfscanf_r+0x134>
    7e86:	208c      	movs	r0, #140	; 0x8c
    7e88:	6833      	ldr	r3, [r6, #0]
    7e8a:	0040      	lsls	r0, r0, #1
    7e8c:	781a      	ldrb	r2, [r3, #0]
    7e8e:	3301      	adds	r3, #1
    7e90:	6033      	str	r3, [r6, #0]
    7e92:	4653      	mov	r3, sl
    7e94:	a90e      	add	r1, sp, #56	; 0x38
    7e96:	1809      	adds	r1, r1, r0
    7e98:	554a      	strb	r2, [r1, r5]
    7e9a:	6872      	ldr	r2, [r6, #4]
    7e9c:	1c6c      	adds	r4, r5, #1
    7e9e:	3a01      	subs	r2, #1
    7ea0:	6072      	str	r2, [r6, #4]
    7ea2:	4659      	mov	r1, fp
    7ea4:	9300      	str	r3, [sp, #0]
    7ea6:	aa54      	add	r2, sp, #336	; 0x150
    7ea8:	0023      	movs	r3, r4
    7eaa:	4640      	mov	r0, r8
    7eac:	f001 fe50 	bl	9b50 <_mbrtowc_r>
    7eb0:	1c43      	adds	r3, r0, #1
    7eb2:	d101      	bne.n	7eb8 <__ssvfscanf_r+0xab8>
    7eb4:	f7ff fb3e 	bl	7534 <__ssvfscanf_r+0x134>
    7eb8:	2800      	cmp	r0, #0
    7eba:	d0cd      	beq.n	7e58 <__ssvfscanf_r+0xa58>
    7ebc:	0025      	movs	r5, r4
    7ebe:	1c83      	adds	r3, r0, #2
    7ec0:	d0d5      	beq.n	7e6e <__ssvfscanf_r+0xa6e>
    7ec2:	9b04      	ldr	r3, [sp, #16]
    7ec4:	44a1      	add	r9, r4
    7ec6:	3f01      	subs	r7, #1
    7ec8:	2500      	movs	r5, #0
    7eca:	2b00      	cmp	r3, #0
    7ecc:	d0cb      	beq.n	7e66 <__ssvfscanf_r+0xa66>
    7ece:	6873      	ldr	r3, [r6, #4]
    7ed0:	2b00      	cmp	r3, #0
    7ed2:	dccf      	bgt.n	7e74 <__ssvfscanf_r+0xa74>
    7ed4:	0031      	movs	r1, r6
    7ed6:	4640      	mov	r0, r8
    7ed8:	f003 ff38 	bl	bd4c <__ssrefill_r>
    7edc:	2800      	cmp	r0, #0
    7ede:	d0c9      	beq.n	7e74 <__ssvfscanf_r+0xa74>
    7ee0:	464f      	mov	r7, r9
    7ee2:	2d00      	cmp	r5, #0
    7ee4:	d100      	bne.n	7ee8 <__ssvfscanf_r+0xae8>
    7ee6:	e0c8      	b.n	807a <__ssvfscanf_r+0xc7a>
    7ee8:	f7ff fb24 	bl	7534 <__ssvfscanf_r+0x134>
    7eec:	44a1      	add	r9, r4
    7eee:	3f01      	subs	r7, #1
    7ef0:	2500      	movs	r5, #0
    7ef2:	e7bc      	b.n	7e6e <__ssvfscanf_r+0xa6e>
    7ef4:	003b      	movs	r3, r7
    7ef6:	4647      	mov	r7, r8
    7ef8:	4698      	mov	r8, r3
    7efa:	2d00      	cmp	r5, #0
    7efc:	d101      	bne.n	7f02 <__ssvfscanf_r+0xb02>
    7efe:	f7ff fb19 	bl	7534 <__ssvfscanf_r+0x134>
    7f02:	197f      	adds	r7, r7, r5
    7f04:	e52e      	b.n	7964 <__ssvfscanf_r+0x564>
    7f06:	9b07      	ldr	r3, [sp, #28]
    7f08:	2201      	movs	r2, #1
    7f0a:	6819      	ldr	r1, [r3, #0]
    7f0c:	1d1d      	adds	r5, r3, #4
    7f0e:	9600      	str	r6, [sp, #0]
    7f10:	0023      	movs	r3, r4
    7f12:	4640      	mov	r0, r8
    7f14:	f003 ff3a 	bl	bd8c <_sfread_r>
    7f18:	2800      	cmp	r0, #0
    7f1a:	d101      	bne.n	7f20 <__ssvfscanf_r+0xb20>
    7f1c:	f7ff fb0a 	bl	7534 <__ssvfscanf_r+0x134>
    7f20:	9b08      	ldr	r3, [sp, #32]
    7f22:	183f      	adds	r7, r7, r0
    7f24:	3301      	adds	r3, #1
    7f26:	9308      	str	r3, [sp, #32]
    7f28:	9b03      	ldr	r3, [sp, #12]
    7f2a:	9507      	str	r5, [sp, #28]
    7f2c:	469a      	mov	sl, r3
    7f2e:	4654      	mov	r4, sl
    7f30:	f7ff faad 	bl	748e <__ssvfscanf_r+0x8e>
    7f34:	9b07      	ldr	r3, [sp, #28]
    7f36:	46b9      	mov	r9, r7
    7f38:	1d1a      	adds	r2, r3, #4
    7f3a:	681b      	ldr	r3, [r3, #0]
    7f3c:	3c01      	subs	r4, #1
    7f3e:	469a      	mov	sl, r3
    7f40:	9306      	str	r3, [sp, #24]
    7f42:	001d      	movs	r5, r3
    7f44:	2308      	movs	r3, #8
    7f46:	469b      	mov	fp, r3
    7f48:	9204      	str	r2, [sp, #16]
    7f4a:	44a2      	add	sl, r4
    7f4c:	f001 fb2a 	bl	95a4 <__locale_ctype_ptr>
    7f50:	4659      	mov	r1, fp
    7f52:	6833      	ldr	r3, [r6, #0]
    7f54:	781a      	ldrb	r2, [r3, #0]
    7f56:	1880      	adds	r0, r0, r2
    7f58:	7842      	ldrb	r2, [r0, #1]
    7f5a:	4211      	tst	r1, r2
    7f5c:	d179      	bne.n	8052 <__ssvfscanf_r+0xc52>
    7f5e:	6872      	ldr	r2, [r6, #4]
    7f60:	1c6c      	adds	r4, r5, #1
    7f62:	3a01      	subs	r2, #1
    7f64:	6072      	str	r2, [r6, #4]
    7f66:	1c5a      	adds	r2, r3, #1
    7f68:	6032      	str	r2, [r6, #0]
    7f6a:	781b      	ldrb	r3, [r3, #0]
    7f6c:	0027      	movs	r7, r4
    7f6e:	702b      	strb	r3, [r5, #0]
    7f70:	4555      	cmp	r5, sl
    7f72:	d00a      	beq.n	7f8a <__ssvfscanf_r+0xb8a>
    7f74:	6873      	ldr	r3, [r6, #4]
    7f76:	2b00      	cmp	r3, #0
    7f78:	dd01      	ble.n	7f7e <__ssvfscanf_r+0xb7e>
    7f7a:	0025      	movs	r5, r4
    7f7c:	e7e6      	b.n	7f4c <__ssvfscanf_r+0xb4c>
    7f7e:	0031      	movs	r1, r6
    7f80:	4640      	mov	r0, r8
    7f82:	f003 fee3 	bl	bd4c <__ssrefill_r>
    7f86:	2800      	cmp	r0, #0
    7f88:	d0f7      	beq.n	7f7a <__ssvfscanf_r+0xb7a>
    7f8a:	464b      	mov	r3, r9
    7f8c:	46b9      	mov	r9, r7
    7f8e:	001f      	movs	r7, r3
    7f90:	2300      	movs	r3, #0
    7f92:	464a      	mov	r2, r9
    7f94:	7013      	strb	r3, [r2, #0]
    7f96:	464b      	mov	r3, r9
    7f98:	9a06      	ldr	r2, [sp, #24]
    7f9a:	1a9b      	subs	r3, r3, r2
    7f9c:	18ff      	adds	r7, r7, r3
    7f9e:	9b08      	ldr	r3, [sp, #32]
    7fa0:	3301      	adds	r3, #1
    7fa2:	9308      	str	r3, [sp, #32]
    7fa4:	9b04      	ldr	r3, [sp, #16]
    7fa6:	9307      	str	r3, [sp, #28]
    7fa8:	9b03      	ldr	r3, [sp, #12]
    7faa:	469a      	mov	sl, r3
    7fac:	4654      	mov	r4, sl
    7fae:	f7ff fa6e 	bl	748e <__ssvfscanf_r+0x8e>
    7fb2:	0031      	movs	r1, r6
    7fb4:	4640      	mov	r0, r8
    7fb6:	f003 fec9 	bl	bd4c <__ssrefill_r>
    7fba:	2800      	cmp	r0, #0
    7fbc:	d101      	bne.n	7fc2 <__ssvfscanf_r+0xbc2>
    7fbe:	f7ff fa94 	bl	74ea <__ssvfscanf_r+0xea>
    7fc2:	f7ff fab7 	bl	7534 <__ssvfscanf_r+0x134>
    7fc6:	9a07      	ldr	r2, [sp, #28]
    7fc8:	6813      	ldr	r3, [r2, #0]
    7fca:	6018      	str	r0, [r3, #0]
    7fcc:	0013      	movs	r3, r2
    7fce:	3304      	adds	r3, #4
    7fd0:	9307      	str	r3, [sp, #28]
    7fd2:	9b08      	ldr	r3, [sp, #32]
    7fd4:	3301      	adds	r3, #1
    7fd6:	9308      	str	r3, [sp, #32]
    7fd8:	e5d6      	b.n	7b88 <__ssvfscanf_r+0x788>
    7fda:	3d01      	subs	r5, #1
    7fdc:	7829      	ldrb	r1, [r5, #0]
    7fde:	0032      	movs	r2, r6
    7fe0:	4640      	mov	r0, r8
    7fe2:	f003 fe71 	bl	bcc8 <_sungetc_r>
    7fe6:	e5c6      	b.n	7b76 <__ssvfscanf_r+0x776>
    7fe8:	4648      	mov	r0, r9
    7fea:	4b78      	ldr	r3, [pc, #480]	; (81cc <__ssvfscanf_r+0xdcc>)
    7fec:	4018      	ands	r0, r3
    7fee:	2301      	movs	r3, #1
    7ff0:	4681      	mov	r9, r0
    7ff2:	469b      	mov	fp, r3
    7ff4:	f7ff fbd5 	bl	77a2 <__ssvfscanf_r+0x3a2>
    7ff8:	4648      	mov	r0, r9
    7ffa:	4b74      	ldr	r3, [pc, #464]	; (81cc <__ssvfscanf_r+0xdcc>)
    7ffc:	4018      	ands	r0, r3
    7ffe:	2301      	movs	r3, #1
    8000:	4681      	mov	r9, r0
    8002:	9304      	str	r3, [sp, #16]
    8004:	f7ff fbcd 	bl	77a2 <__ssvfscanf_r+0x3a2>
    8008:	464b      	mov	r3, r9
    800a:	2102      	movs	r1, #2
    800c:	4313      	orrs	r3, r2
    800e:	4699      	mov	r9, r3
    8010:	468c      	mov	ip, r1
    8012:	4653      	mov	r3, sl
    8014:	44e2      	add	sl, ip
    8016:	789b      	ldrb	r3, [r3, #2]
    8018:	f7ff fa56 	bl	74c8 <__ssvfscanf_r+0xc8>
    801c:	4657      	mov	r7, sl
    801e:	464b      	mov	r3, r9
    8020:	1ae5      	subs	r5, r4, r3
    8022:	d101      	bne.n	8028 <__ssvfscanf_r+0xc28>
    8024:	f7ff fa39 	bl	749a <__ssvfscanf_r+0x9a>
    8028:	2300      	movs	r3, #0
    802a:	7023      	strb	r3, [r4, #0]
    802c:	9b08      	ldr	r3, [sp, #32]
    802e:	197f      	adds	r7, r7, r5
    8030:	3301      	adds	r3, #1
    8032:	9308      	str	r3, [sp, #32]
    8034:	465b      	mov	r3, fp
    8036:	9307      	str	r3, [sp, #28]
    8038:	e494      	b.n	7964 <__ssvfscanf_r+0x564>
    803a:	4657      	mov	r7, sl
    803c:	0014      	movs	r4, r2
    803e:	e7ee      	b.n	801e <__ssvfscanf_r+0xc1e>
    8040:	9b06      	ldr	r3, [sp, #24]
    8042:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    8044:	1a9a      	subs	r2, r3, r2
    8046:	d100      	bne.n	804a <__ssvfscanf_r+0xc4a>
    8048:	e474      	b.n	7934 <__ssvfscanf_r+0x534>
    804a:	465b      	mov	r3, fp
    804c:	4252      	negs	r2, r2
    804e:	930e      	str	r3, [sp, #56]	; 0x38
    8050:	e63a      	b.n	7cc8 <__ssvfscanf_r+0x8c8>
    8052:	464f      	mov	r7, r9
    8054:	46a9      	mov	r9, r5
    8056:	e79b      	b.n	7f90 <__ssvfscanf_r+0xb90>
    8058:	9a07      	ldr	r2, [sp, #28]
    805a:	0013      	movs	r3, r2
    805c:	6812      	ldr	r2, [r2, #0]
    805e:	3304      	adds	r3, #4
    8060:	4693      	mov	fp, r2
    8062:	9307      	str	r3, [sp, #28]
    8064:	2c00      	cmp	r4, #0
    8066:	d000      	beq.n	806a <__ssvfscanf_r+0xc6a>
    8068:	e6d6      	b.n	7e18 <__ssvfscanf_r+0xa18>
    806a:	e478      	b.n	795e <__ssvfscanf_r+0x55e>
    806c:	9b07      	ldr	r3, [sp, #28]
    806e:	681a      	ldr	r2, [r3, #0]
    8070:	3304      	adds	r3, #4
    8072:	4691      	mov	r9, r2
    8074:	9307      	str	r3, [sp, #28]
    8076:	e679      	b.n	7d6c <__ssvfscanf_r+0x96c>
    8078:	464f      	mov	r7, r9
    807a:	9b04      	ldr	r3, [sp, #16]
    807c:	2b00      	cmp	r3, #0
    807e:	d100      	bne.n	8082 <__ssvfscanf_r+0xc82>
    8080:	e46d      	b.n	795e <__ssvfscanf_r+0x55e>
    8082:	e46f      	b.n	7964 <__ssvfscanf_r+0x564>
    8084:	9b07      	ldr	r3, [sp, #28]
    8086:	4654      	mov	r4, sl
    8088:	681a      	ldr	r2, [r3, #0]
    808a:	3304      	adds	r3, #4
    808c:	9203      	str	r2, [sp, #12]
    808e:	8017      	strh	r7, [r2, #0]
    8090:	9307      	str	r3, [sp, #28]
    8092:	f7ff f9fc 	bl	748e <__ssvfscanf_r+0x8e>
    8096:	9b05      	ldr	r3, [sp, #20]
    8098:	2200      	movs	r2, #0
    809a:	990a      	ldr	r1, [sp, #40]	; 0x28
    809c:	4640      	mov	r0, r8
    809e:	f003 fd71 	bl	bb84 <_strtoull_r>
    80a2:	e64b      	b.n	7d3c <__ssvfscanf_r+0x93c>
    80a4:	9b07      	ldr	r3, [sp, #28]
    80a6:	681a      	ldr	r2, [r3, #0]
    80a8:	3304      	adds	r3, #4
    80aa:	9204      	str	r2, [sp, #16]
    80ac:	8010      	strh	r0, [r2, #0]
    80ae:	9307      	str	r3, [sp, #28]
    80b0:	e78f      	b.n	7fd2 <__ssvfscanf_r+0xbd2>
    80b2:	f001 fa63 	bl	957c <__locale_mb_cur_max>
    80b6:	4285      	cmp	r5, r0
    80b8:	d101      	bne.n	80be <__ssvfscanf_r+0xcbe>
    80ba:	f7ff fa3b 	bl	7534 <__ssvfscanf_r+0x134>
    80be:	208c      	movs	r0, #140	; 0x8c
    80c0:	1c6b      	adds	r3, r5, #1
    80c2:	469a      	mov	sl, r3
    80c4:	6833      	ldr	r3, [r6, #0]
    80c6:	0040      	lsls	r0, r0, #1
    80c8:	781a      	ldrb	r2, [r3, #0]
    80ca:	a90e      	add	r1, sp, #56	; 0x38
    80cc:	1809      	adds	r1, r1, r0
    80ce:	554a      	strb	r2, [r1, r5]
    80d0:	3301      	adds	r3, #1
    80d2:	6872      	ldr	r2, [r6, #4]
    80d4:	6033      	str	r3, [r6, #0]
    80d6:	9b06      	ldr	r3, [sp, #24]
    80d8:	3a01      	subs	r2, #1
    80da:	6072      	str	r2, [r6, #4]
    80dc:	4649      	mov	r1, r9
    80de:	9300      	str	r3, [sp, #0]
    80e0:	aa54      	add	r2, sp, #336	; 0x150
    80e2:	4653      	mov	r3, sl
    80e4:	4640      	mov	r0, r8
    80e6:	f001 fd33 	bl	9b50 <_mbrtowc_r>
    80ea:	1c43      	adds	r3, r0, #1
    80ec:	d101      	bne.n	80f2 <__ssvfscanf_r+0xcf2>
    80ee:	f7ff fa21 	bl	7534 <__ssvfscanf_r+0x134>
    80f2:	2800      	cmp	r0, #0
    80f4:	d001      	beq.n	80fa <__ssvfscanf_r+0xcfa>
    80f6:	f7ff fa07 	bl	7508 <__ssvfscanf_r+0x108>
    80fa:	464b      	mov	r3, r9
    80fc:	6018      	str	r0, [r3, #0]
    80fe:	f001 fa31 	bl	9564 <iswspace>
    8102:	1e05      	subs	r5, r0, #0
    8104:	d012      	beq.n	812c <__ssvfscanf_r+0xd2c>
    8106:	4655      	mov	r5, sl
    8108:	2d00      	cmp	r5, #0
    810a:	d100      	bne.n	810e <__ssvfscanf_r+0xd0e>
    810c:	e63c      	b.n	7d88 <__ssvfscanf_r+0x988>
    810e:	4644      	mov	r4, r8
    8110:	228c      	movs	r2, #140	; 0x8c
    8112:	ab0e      	add	r3, sp, #56	; 0x38
    8114:	0052      	lsls	r2, r2, #1
    8116:	3d01      	subs	r5, #1
    8118:	189b      	adds	r3, r3, r2
    811a:	5d59      	ldrb	r1, [r3, r5]
    811c:	0032      	movs	r2, r6
    811e:	0020      	movs	r0, r4
    8120:	f003 fdd2 	bl	bcc8 <_sungetc_r>
    8124:	2d00      	cmp	r5, #0
    8126:	d1f3      	bne.n	8110 <__ssvfscanf_r+0xd10>
    8128:	46a0      	mov	r8, r4
    812a:	e62d      	b.n	7d88 <__ssvfscanf_r+0x988>
    812c:	465b      	mov	r3, fp
    812e:	4457      	add	r7, sl
    8130:	3c01      	subs	r4, #1
    8132:	2b00      	cmp	r3, #0
    8134:	d001      	beq.n	813a <__ssvfscanf_r+0xd3a>
    8136:	f7ff f9ec 	bl	7512 <__ssvfscanf_r+0x112>
    813a:	3304      	adds	r3, #4
    813c:	469c      	mov	ip, r3
    813e:	465d      	mov	r5, fp
    8140:	44e1      	add	r9, ip
    8142:	f7ff f9e6 	bl	7512 <__ssvfscanf_r+0x112>
    8146:	464b      	mov	r3, r9
    8148:	6818      	ldr	r0, [r3, #0]
    814a:	e7d8      	b.n	80fe <__ssvfscanf_r+0xcfe>
    814c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    814e:	459b      	cmp	fp, r3
    8150:	d801      	bhi.n	8156 <__ssvfscanf_r+0xd56>
    8152:	f7ff f9a2 	bl	749a <__ssvfscanf_r+0x9a>
    8156:	465c      	mov	r4, fp
    8158:	4645      	mov	r5, r8
    815a:	3c01      	subs	r4, #1
    815c:	7821      	ldrb	r1, [r4, #0]
    815e:	0032      	movs	r2, r6
    8160:	0028      	movs	r0, r5
    8162:	f003 fdb1 	bl	bcc8 <_sungetc_r>
    8166:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8168:	429c      	cmp	r4, r3
    816a:	d1f6      	bne.n	815a <__ssvfscanf_r+0xd5a>
    816c:	f7ff f995 	bl	749a <__ssvfscanf_r+0x9a>
    8170:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8172:	465c      	mov	r4, fp
    8174:	4645      	mov	r5, r8
    8176:	459b      	cmp	fp, r3
    8178:	d801      	bhi.n	817e <__ssvfscanf_r+0xd7e>
    817a:	f7ff f98e 	bl	749a <__ssvfscanf_r+0x9a>
    817e:	3c01      	subs	r4, #1
    8180:	7821      	ldrb	r1, [r4, #0]
    8182:	0032      	movs	r2, r6
    8184:	0028      	movs	r0, r5
    8186:	f003 fd9f 	bl	bcc8 <_sungetc_r>
    818a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    818c:	429c      	cmp	r4, r3
    818e:	d1f6      	bne.n	817e <__ssvfscanf_r+0xd7e>
    8190:	f7ff f983 	bl	749a <__ssvfscanf_r+0x9a>
    8194:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8196:	459b      	cmp	fp, r3
    8198:	d801      	bhi.n	819e <__ssvfscanf_r+0xd9e>
    819a:	f7ff f97e 	bl	749a <__ssvfscanf_r+0x9a>
    819e:	465c      	mov	r4, fp
    81a0:	4645      	mov	r5, r8
    81a2:	3c01      	subs	r4, #1
    81a4:	7821      	ldrb	r1, [r4, #0]
    81a6:	0032      	movs	r2, r6
    81a8:	0028      	movs	r0, r5
    81aa:	f003 fd8d 	bl	bcc8 <_sungetc_r>
    81ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    81b0:	429c      	cmp	r4, r3
    81b2:	d1f6      	bne.n	81a2 <__ssvfscanf_r+0xda2>
    81b4:	f7ff f971 	bl	749a <__ssvfscanf_r+0x9a>
    81b8:	2000      	movs	r0, #0
    81ba:	f002 fabf 	bl	a73c <nanf>
    81be:	464b      	mov	r3, r9
    81c0:	6018      	str	r0, [r3, #0]
    81c2:	4653      	mov	r3, sl
    81c4:	9307      	str	r3, [sp, #28]
    81c6:	f7ff fbca 	bl	795e <__ssvfscanf_r+0x55e>
    81ca:	46c0      	nop			; (mov r8, r8)
    81cc:	fffff87f 	.word	0xfffff87f

000081d0 <register_fini>:
    81d0:	4b03      	ldr	r3, [pc, #12]	; (81e0 <register_fini+0x10>)
    81d2:	b510      	push	{r4, lr}
    81d4:	2b00      	cmp	r3, #0
    81d6:	d002      	beq.n	81de <register_fini+0xe>
    81d8:	4802      	ldr	r0, [pc, #8]	; (81e4 <register_fini+0x14>)
    81da:	f000 f805 	bl	81e8 <atexit>
    81de:	bd10      	pop	{r4, pc}
    81e0:	00000000 	.word	0x00000000
    81e4:	000092d5 	.word	0x000092d5

000081e8 <atexit>:
    81e8:	b510      	push	{r4, lr}
    81ea:	0001      	movs	r1, r0
    81ec:	2300      	movs	r3, #0
    81ee:	2200      	movs	r2, #0
    81f0:	2000      	movs	r0, #0
    81f2:	f003 fe63 	bl	bebc <__register_exitproc>
    81f6:	bd10      	pop	{r4, pc}

000081f8 <quorem>:
    81f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    81fa:	4645      	mov	r5, r8
    81fc:	4680      	mov	r8, r0
    81fe:	46de      	mov	lr, fp
    8200:	4657      	mov	r7, sl
    8202:	464e      	mov	r6, r9
    8204:	4642      	mov	r2, r8
    8206:	b5e0      	push	{r5, r6, r7, lr}
    8208:	690c      	ldr	r4, [r1, #16]
    820a:	6912      	ldr	r2, [r2, #16]
    820c:	b085      	sub	sp, #20
    820e:	000b      	movs	r3, r1
    8210:	9102      	str	r1, [sp, #8]
    8212:	2000      	movs	r0, #0
    8214:	4294      	cmp	r4, r2
    8216:	dd00      	ble.n	821a <quorem+0x22>
    8218:	e090      	b.n	833c <quorem+0x144>
    821a:	2214      	movs	r2, #20
    821c:	4694      	mov	ip, r2
    821e:	4463      	add	r3, ip
    8220:	4699      	mov	r9, r3
    8222:	464a      	mov	r2, r9
    8224:	3c01      	subs	r4, #1
    8226:	00a3      	lsls	r3, r4, #2
    8228:	18d6      	adds	r6, r2, r3
    822a:	2214      	movs	r2, #20
    822c:	4442      	add	r2, r8
    822e:	4693      	mov	fp, r2
    8230:	449b      	add	fp, r3
    8232:	6833      	ldr	r3, [r6, #0]
    8234:	0015      	movs	r5, r2
    8236:	1c59      	adds	r1, r3, #1
    8238:	465b      	mov	r3, fp
    823a:	6818      	ldr	r0, [r3, #0]
    823c:	9201      	str	r2, [sp, #4]
    823e:	f7fb f9f3 	bl	3628 <__udivsi3>
    8242:	1e03      	subs	r3, r0, #0
    8244:	9000      	str	r0, [sp, #0]
    8246:	d042      	beq.n	82ce <quorem+0xd6>
    8248:	0029      	movs	r1, r5
    824a:	2700      	movs	r7, #0
    824c:	464d      	mov	r5, r9
    824e:	2000      	movs	r0, #0
    8250:	46b1      	mov	r9, r6
    8252:	46a2      	mov	sl, r4
    8254:	003e      	movs	r6, r7
    8256:	0004      	movs	r4, r0
    8258:	469c      	mov	ip, r3
    825a:	002f      	movs	r7, r5
    825c:	0008      	movs	r0, r1
    825e:	9503      	str	r5, [sp, #12]
    8260:	4663      	mov	r3, ip
    8262:	cf04      	ldmia	r7!, {r2}
    8264:	0415      	lsls	r5, r2, #16
    8266:	0c2d      	lsrs	r5, r5, #16
    8268:	435d      	muls	r5, r3
    826a:	0c12      	lsrs	r2, r2, #16
    826c:	435a      	muls	r2, r3
    826e:	19ad      	adds	r5, r5, r6
    8270:	0c2b      	lsrs	r3, r5, #16
    8272:	18d2      	adds	r2, r2, r3
    8274:	6803      	ldr	r3, [r0, #0]
    8276:	042d      	lsls	r5, r5, #16
    8278:	0419      	lsls	r1, r3, #16
    827a:	0c09      	lsrs	r1, r1, #16
    827c:	1909      	adds	r1, r1, r4
    827e:	0c16      	lsrs	r6, r2, #16
    8280:	0c2d      	lsrs	r5, r5, #16
    8282:	0412      	lsls	r2, r2, #16
    8284:	1b49      	subs	r1, r1, r5
    8286:	0c12      	lsrs	r2, r2, #16
    8288:	0c1b      	lsrs	r3, r3, #16
    828a:	1a9b      	subs	r3, r3, r2
    828c:	140a      	asrs	r2, r1, #16
    828e:	189b      	adds	r3, r3, r2
    8290:	0409      	lsls	r1, r1, #16
    8292:	141c      	asrs	r4, r3, #16
    8294:	0c09      	lsrs	r1, r1, #16
    8296:	041b      	lsls	r3, r3, #16
    8298:	4319      	orrs	r1, r3
    829a:	c002      	stmia	r0!, {r1}
    829c:	45b9      	cmp	r9, r7
    829e:	d2df      	bcs.n	8260 <quorem+0x68>
    82a0:	9b03      	ldr	r3, [sp, #12]
    82a2:	464e      	mov	r6, r9
    82a4:	4699      	mov	r9, r3
    82a6:	465b      	mov	r3, fp
    82a8:	681b      	ldr	r3, [r3, #0]
    82aa:	4654      	mov	r4, sl
    82ac:	2b00      	cmp	r3, #0
    82ae:	d10e      	bne.n	82ce <quorem+0xd6>
    82b0:	465b      	mov	r3, fp
    82b2:	9a01      	ldr	r2, [sp, #4]
    82b4:	3b04      	subs	r3, #4
    82b6:	429a      	cmp	r2, r3
    82b8:	d304      	bcc.n	82c4 <quorem+0xcc>
    82ba:	e006      	b.n	82ca <quorem+0xd2>
    82bc:	3b04      	subs	r3, #4
    82be:	3c01      	subs	r4, #1
    82c0:	429a      	cmp	r2, r3
    82c2:	d202      	bcs.n	82ca <quorem+0xd2>
    82c4:	6819      	ldr	r1, [r3, #0]
    82c6:	2900      	cmp	r1, #0
    82c8:	d0f8      	beq.n	82bc <quorem+0xc4>
    82ca:	4643      	mov	r3, r8
    82cc:	611c      	str	r4, [r3, #16]
    82ce:	9902      	ldr	r1, [sp, #8]
    82d0:	4640      	mov	r0, r8
    82d2:	f001 ffbb 	bl	a24c <__mcmp>
    82d6:	2800      	cmp	r0, #0
    82d8:	db2f      	blt.n	833a <quorem+0x142>
    82da:	464f      	mov	r7, r9
    82dc:	2000      	movs	r0, #0
    82de:	9b00      	ldr	r3, [sp, #0]
    82e0:	9d01      	ldr	r5, [sp, #4]
    82e2:	3301      	adds	r3, #1
    82e4:	9300      	str	r3, [sp, #0]
    82e6:	682b      	ldr	r3, [r5, #0]
    82e8:	cf02      	ldmia	r7!, {r1}
    82ea:	041a      	lsls	r2, r3, #16
    82ec:	0c12      	lsrs	r2, r2, #16
    82ee:	1810      	adds	r0, r2, r0
    82f0:	040a      	lsls	r2, r1, #16
    82f2:	0c12      	lsrs	r2, r2, #16
    82f4:	1a82      	subs	r2, r0, r2
    82f6:	0c09      	lsrs	r1, r1, #16
    82f8:	0c1b      	lsrs	r3, r3, #16
    82fa:	1a5b      	subs	r3, r3, r1
    82fc:	1411      	asrs	r1, r2, #16
    82fe:	185b      	adds	r3, r3, r1
    8300:	0412      	lsls	r2, r2, #16
    8302:	1418      	asrs	r0, r3, #16
    8304:	0c12      	lsrs	r2, r2, #16
    8306:	041b      	lsls	r3, r3, #16
    8308:	4313      	orrs	r3, r2
    830a:	c508      	stmia	r5!, {r3}
    830c:	42be      	cmp	r6, r7
    830e:	d2ea      	bcs.n	82e6 <quorem+0xee>
    8310:	9901      	ldr	r1, [sp, #4]
    8312:	00a3      	lsls	r3, r4, #2
    8314:	468c      	mov	ip, r1
    8316:	4463      	add	r3, ip
    8318:	681a      	ldr	r2, [r3, #0]
    831a:	2a00      	cmp	r2, #0
    831c:	d10d      	bne.n	833a <quorem+0x142>
    831e:	3b04      	subs	r3, #4
    8320:	000a      	movs	r2, r1
    8322:	4299      	cmp	r1, r3
    8324:	d304      	bcc.n	8330 <quorem+0x138>
    8326:	e006      	b.n	8336 <quorem+0x13e>
    8328:	3b04      	subs	r3, #4
    832a:	3c01      	subs	r4, #1
    832c:	429a      	cmp	r2, r3
    832e:	d202      	bcs.n	8336 <quorem+0x13e>
    8330:	6819      	ldr	r1, [r3, #0]
    8332:	2900      	cmp	r1, #0
    8334:	d0f8      	beq.n	8328 <quorem+0x130>
    8336:	4643      	mov	r3, r8
    8338:	611c      	str	r4, [r3, #16]
    833a:	9800      	ldr	r0, [sp, #0]
    833c:	b005      	add	sp, #20
    833e:	bc3c      	pop	{r2, r3, r4, r5}
    8340:	4690      	mov	r8, r2
    8342:	4699      	mov	r9, r3
    8344:	46a2      	mov	sl, r4
    8346:	46ab      	mov	fp, r5
    8348:	bdf0      	pop	{r4, r5, r6, r7, pc}
    834a:	46c0      	nop			; (mov r8, r8)

0000834c <_dtoa_r>:
    834c:	b5f0      	push	{r4, r5, r6, r7, lr}
    834e:	4657      	mov	r7, sl
    8350:	464e      	mov	r6, r9
    8352:	4645      	mov	r5, r8
    8354:	46de      	mov	lr, fp
    8356:	b5e0      	push	{r5, r6, r7, lr}
    8358:	6c01      	ldr	r1, [r0, #64]	; 0x40
    835a:	b099      	sub	sp, #100	; 0x64
    835c:	4682      	mov	sl, r0
    835e:	001d      	movs	r5, r3
    8360:	0016      	movs	r6, r2
    8362:	001f      	movs	r7, r3
    8364:	2900      	cmp	r1, #0
    8366:	d009      	beq.n	837c <_dtoa_r+0x30>
    8368:	2301      	movs	r3, #1
    836a:	6c42      	ldr	r2, [r0, #68]	; 0x44
    836c:	4093      	lsls	r3, r2
    836e:	604a      	str	r2, [r1, #4]
    8370:	608b      	str	r3, [r1, #8]
    8372:	f001 fd15 	bl	9da0 <_Bfree>
    8376:	2300      	movs	r3, #0
    8378:	4652      	mov	r2, sl
    837a:	6413      	str	r3, [r2, #64]	; 0x40
    837c:	46b8      	mov	r8, r7
    837e:	2f00      	cmp	r7, #0
    8380:	db37      	blt.n	83f2 <_dtoa_r+0xa6>
    8382:	2300      	movs	r3, #0
    8384:	9a25      	ldr	r2, [sp, #148]	; 0x94
    8386:	6013      	str	r3, [r2, #0]
    8388:	4642      	mov	r2, r8
    838a:	4bd6      	ldr	r3, [pc, #856]	; (86e4 <_dtoa_r+0x398>)
    838c:	401a      	ands	r2, r3
    838e:	429a      	cmp	r2, r3
    8390:	d018      	beq.n	83c4 <_dtoa_r+0x78>
    8392:	2200      	movs	r2, #0
    8394:	2300      	movs	r3, #0
    8396:	0030      	movs	r0, r6
    8398:	0039      	movs	r1, r7
    839a:	f7fc fee7 	bl	516c <__aeabi_dcmpeq>
    839e:	2800      	cmp	r0, #0
    83a0:	d02f      	beq.n	8402 <_dtoa_r+0xb6>
    83a2:	2301      	movs	r3, #1
    83a4:	9a24      	ldr	r2, [sp, #144]	; 0x90
    83a6:	6013      	str	r3, [r2, #0]
    83a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
    83aa:	2b00      	cmp	r3, #0
    83ac:	d100      	bne.n	83b0 <_dtoa_r+0x64>
    83ae:	e22a      	b.n	8806 <_dtoa_r+0x4ba>
    83b0:	48cd      	ldr	r0, [pc, #820]	; (86e8 <_dtoa_r+0x39c>)
    83b2:	6018      	str	r0, [r3, #0]
    83b4:	3801      	subs	r0, #1
    83b6:	b019      	add	sp, #100	; 0x64
    83b8:	bc3c      	pop	{r2, r3, r4, r5}
    83ba:	4690      	mov	r8, r2
    83bc:	4699      	mov	r9, r3
    83be:	46a2      	mov	sl, r4
    83c0:	46ab      	mov	fp, r5
    83c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    83c4:	4bc9      	ldr	r3, [pc, #804]	; (86ec <_dtoa_r+0x3a0>)
    83c6:	9a24      	ldr	r2, [sp, #144]	; 0x90
    83c8:	6013      	str	r3, [r2, #0]
    83ca:	2e00      	cmp	r6, #0
    83cc:	d10b      	bne.n	83e6 <_dtoa_r+0x9a>
    83ce:	4643      	mov	r3, r8
    83d0:	0318      	lsls	r0, r3, #12
    83d2:	d108      	bne.n	83e6 <_dtoa_r+0x9a>
    83d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
    83d6:	48c6      	ldr	r0, [pc, #792]	; (86f0 <_dtoa_r+0x3a4>)
    83d8:	2b00      	cmp	r3, #0
    83da:	d0ec      	beq.n	83b6 <_dtoa_r+0x6a>
    83dc:	0003      	movs	r3, r0
    83de:	3308      	adds	r3, #8
    83e0:	9a26      	ldr	r2, [sp, #152]	; 0x98
    83e2:	6013      	str	r3, [r2, #0]
    83e4:	e7e7      	b.n	83b6 <_dtoa_r+0x6a>
    83e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
    83e8:	48c2      	ldr	r0, [pc, #776]	; (86f4 <_dtoa_r+0x3a8>)
    83ea:	2b00      	cmp	r3, #0
    83ec:	d0e3      	beq.n	83b6 <_dtoa_r+0x6a>
    83ee:	1cc3      	adds	r3, r0, #3
    83f0:	e7f6      	b.n	83e0 <_dtoa_r+0x94>
    83f2:	2301      	movs	r3, #1
    83f4:	9a25      	ldr	r2, [sp, #148]	; 0x94
    83f6:	0068      	lsls	r0, r5, #1
    83f8:	6013      	str	r3, [r2, #0]
    83fa:	0843      	lsrs	r3, r0, #1
    83fc:	4698      	mov	r8, r3
    83fe:	001f      	movs	r7, r3
    8400:	e7c2      	b.n	8388 <_dtoa_r+0x3c>
    8402:	ab16      	add	r3, sp, #88	; 0x58
    8404:	9301      	str	r3, [sp, #4]
    8406:	ab17      	add	r3, sp, #92	; 0x5c
    8408:	9300      	str	r3, [sp, #0]
    840a:	0032      	movs	r2, r6
    840c:	003b      	movs	r3, r7
    840e:	4650      	mov	r0, sl
    8410:	f002 f864 	bl	a4dc <__d2b>
    8414:	4643      	mov	r3, r8
    8416:	4683      	mov	fp, r0
    8418:	0d1a      	lsrs	r2, r3, #20
    841a:	d100      	bne.n	841e <_dtoa_r+0xd2>
    841c:	e1d6      	b.n	87cc <_dtoa_r+0x480>
    841e:	033b      	lsls	r3, r7, #12
    8420:	4cb5      	ldr	r4, [pc, #724]	; (86f8 <_dtoa_r+0x3ac>)
    8422:	0b1b      	lsrs	r3, r3, #12
    8424:	431c      	orrs	r4, r3
    8426:	4bb5      	ldr	r3, [pc, #724]	; (86fc <_dtoa_r+0x3b0>)
    8428:	0030      	movs	r0, r6
    842a:	4698      	mov	r8, r3
    842c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    842e:	0021      	movs	r1, r4
    8430:	4699      	mov	r9, r3
    8432:	2300      	movs	r3, #0
    8434:	4490      	add	r8, r2
    8436:	930f      	str	r3, [sp, #60]	; 0x3c
    8438:	2200      	movs	r2, #0
    843a:	4bb1      	ldr	r3, [pc, #708]	; (8700 <_dtoa_r+0x3b4>)
    843c:	f7fc fa70 	bl	4920 <__aeabi_dsub>
    8440:	4ab0      	ldr	r2, [pc, #704]	; (8704 <_dtoa_r+0x3b8>)
    8442:	4bb1      	ldr	r3, [pc, #708]	; (8708 <_dtoa_r+0x3bc>)
    8444:	f7fb ffec 	bl	4420 <__aeabi_dmul>
    8448:	4ab0      	ldr	r2, [pc, #704]	; (870c <_dtoa_r+0x3c0>)
    844a:	4bb1      	ldr	r3, [pc, #708]	; (8710 <_dtoa_r+0x3c4>)
    844c:	f004 fc08 	bl	cc60 <__aeabi_dadd>
    8450:	0004      	movs	r4, r0
    8452:	4640      	mov	r0, r8
    8454:	000d      	movs	r5, r1
    8456:	f7fc fdad 	bl	4fb4 <__aeabi_i2d>
    845a:	4aae      	ldr	r2, [pc, #696]	; (8714 <_dtoa_r+0x3c8>)
    845c:	4bae      	ldr	r3, [pc, #696]	; (8718 <_dtoa_r+0x3cc>)
    845e:	f7fb ffdf 	bl	4420 <__aeabi_dmul>
    8462:	0002      	movs	r2, r0
    8464:	000b      	movs	r3, r1
    8466:	0020      	movs	r0, r4
    8468:	0029      	movs	r1, r5
    846a:	f004 fbf9 	bl	cc60 <__aeabi_dadd>
    846e:	0004      	movs	r4, r0
    8470:	000d      	movs	r5, r1
    8472:	f7fc fd6b 	bl	4f4c <__aeabi_d2iz>
    8476:	2200      	movs	r2, #0
    8478:	9003      	str	r0, [sp, #12]
    847a:	2300      	movs	r3, #0
    847c:	0020      	movs	r0, r4
    847e:	0029      	movs	r1, r5
    8480:	f7fc fe7a 	bl	5178 <__aeabi_dcmplt>
    8484:	2800      	cmp	r0, #0
    8486:	d000      	beq.n	848a <_dtoa_r+0x13e>
    8488:	e2b1      	b.n	89ee <_dtoa_r+0x6a2>
    848a:	2301      	movs	r3, #1
    848c:	9c03      	ldr	r4, [sp, #12]
    848e:	930c      	str	r3, [sp, #48]	; 0x30
    8490:	2c16      	cmp	r4, #22
    8492:	d810      	bhi.n	84b6 <_dtoa_r+0x16a>
    8494:	49a1      	ldr	r1, [pc, #644]	; (871c <_dtoa_r+0x3d0>)
    8496:	00e3      	lsls	r3, r4, #3
    8498:	18c9      	adds	r1, r1, r3
    849a:	0032      	movs	r2, r6
    849c:	6808      	ldr	r0, [r1, #0]
    849e:	6849      	ldr	r1, [r1, #4]
    84a0:	003b      	movs	r3, r7
    84a2:	f7fc fe7d 	bl	51a0 <__aeabi_dcmpgt>
    84a6:	2800      	cmp	r0, #0
    84a8:	d100      	bne.n	84ac <_dtoa_r+0x160>
    84aa:	e31d      	b.n	8ae8 <_dtoa_r+0x79c>
    84ac:	0023      	movs	r3, r4
    84ae:	3b01      	subs	r3, #1
    84b0:	9303      	str	r3, [sp, #12]
    84b2:	2300      	movs	r3, #0
    84b4:	930c      	str	r3, [sp, #48]	; 0x30
    84b6:	464b      	mov	r3, r9
    84b8:	4642      	mov	r2, r8
    84ba:	1a9a      	subs	r2, r3, r2
    84bc:	2300      	movs	r3, #0
    84be:	9306      	str	r3, [sp, #24]
    84c0:	0013      	movs	r3, r2
    84c2:	3b01      	subs	r3, #1
    84c4:	9304      	str	r3, [sp, #16]
    84c6:	d500      	bpl.n	84ca <_dtoa_r+0x17e>
    84c8:	e2a1      	b.n	8a0e <_dtoa_r+0x6c2>
    84ca:	9b03      	ldr	r3, [sp, #12]
    84cc:	2b00      	cmp	r3, #0
    84ce:	da00      	bge.n	84d2 <_dtoa_r+0x186>
    84d0:	e284      	b.n	89dc <_dtoa_r+0x690>
    84d2:	469c      	mov	ip, r3
    84d4:	930d      	str	r3, [sp, #52]	; 0x34
    84d6:	2300      	movs	r3, #0
    84d8:	9a04      	ldr	r2, [sp, #16]
    84da:	4699      	mov	r9, r3
    84dc:	0011      	movs	r1, r2
    84de:	4461      	add	r1, ip
    84e0:	9104      	str	r1, [sp, #16]
    84e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    84e4:	2b09      	cmp	r3, #9
    84e6:	d900      	bls.n	84ea <_dtoa_r+0x19e>
    84e8:	e18f      	b.n	880a <_dtoa_r+0x4be>
    84ea:	2401      	movs	r4, #1
    84ec:	2b05      	cmp	r3, #5
    84ee:	dd02      	ble.n	84f6 <_dtoa_r+0x1aa>
    84f0:	2400      	movs	r4, #0
    84f2:	3b04      	subs	r3, #4
    84f4:	9322      	str	r3, [sp, #136]	; 0x88
    84f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    84f8:	2b03      	cmp	r3, #3
    84fa:	d101      	bne.n	8500 <_dtoa_r+0x1b4>
    84fc:	f000 fcce 	bl	8e9c <_dtoa_r+0xb50>
    8500:	dc01      	bgt.n	8506 <_dtoa_r+0x1ba>
    8502:	f000 fc92 	bl	8e2a <_dtoa_r+0xade>
    8506:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8508:	2b04      	cmp	r3, #4
    850a:	d101      	bne.n	8510 <_dtoa_r+0x1c4>
    850c:	f000 fc40 	bl	8d90 <_dtoa_r+0xa44>
    8510:	2301      	movs	r3, #1
    8512:	930b      	str	r3, [sp, #44]	; 0x2c
    8514:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8516:	2b05      	cmp	r3, #5
    8518:	d001      	beq.n	851e <_dtoa_r+0x1d2>
    851a:	f000 fc8b 	bl	8e34 <_dtoa_r+0xae8>
    851e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    8520:	9b03      	ldr	r3, [sp, #12]
    8522:	4694      	mov	ip, r2
    8524:	4463      	add	r3, ip
    8526:	930e      	str	r3, [sp, #56]	; 0x38
    8528:	3301      	adds	r3, #1
    852a:	9307      	str	r3, [sp, #28]
    852c:	1e1d      	subs	r5, r3, #0
    852e:	dc01      	bgt.n	8534 <_dtoa_r+0x1e8>
    8530:	f000 fd49 	bl	8fc6 <_dtoa_r+0xc7a>
    8534:	9b07      	ldr	r3, [sp, #28]
    8536:	4698      	mov	r8, r3
    8538:	2300      	movs	r3, #0
    853a:	4652      	mov	r2, sl
    853c:	2100      	movs	r1, #0
    853e:	6453      	str	r3, [r2, #68]	; 0x44
    8540:	2d17      	cmp	r5, #23
    8542:	d90a      	bls.n	855a <_dtoa_r+0x20e>
    8544:	2201      	movs	r2, #1
    8546:	3304      	adds	r3, #4
    8548:	005b      	lsls	r3, r3, #1
    854a:	0018      	movs	r0, r3
    854c:	3014      	adds	r0, #20
    854e:	0011      	movs	r1, r2
    8550:	3201      	adds	r2, #1
    8552:	4285      	cmp	r5, r0
    8554:	d2f8      	bcs.n	8548 <_dtoa_r+0x1fc>
    8556:	4653      	mov	r3, sl
    8558:	6459      	str	r1, [r3, #68]	; 0x44
    855a:	4650      	mov	r0, sl
    855c:	f001 fbf8 	bl	9d50 <_Balloc>
    8560:	4653      	mov	r3, sl
    8562:	6418      	str	r0, [r3, #64]	; 0x40
    8564:	4643      	mov	r3, r8
    8566:	900a      	str	r0, [sp, #40]	; 0x28
    8568:	2b0e      	cmp	r3, #14
    856a:	d900      	bls.n	856e <_dtoa_r+0x222>
    856c:	e161      	b.n	8832 <_dtoa_r+0x4e6>
    856e:	2c00      	cmp	r4, #0
    8570:	d100      	bne.n	8574 <_dtoa_r+0x228>
    8572:	e15e      	b.n	8832 <_dtoa_r+0x4e6>
    8574:	9610      	str	r6, [sp, #64]	; 0x40
    8576:	9711      	str	r7, [sp, #68]	; 0x44
    8578:	9e03      	ldr	r6, [sp, #12]
    857a:	2e00      	cmp	r6, #0
    857c:	dc01      	bgt.n	8582 <_dtoa_r+0x236>
    857e:	f000 fd25 	bl	8fcc <_dtoa_r+0xc80>
    8582:	0032      	movs	r2, r6
    8584:	210f      	movs	r1, #15
    8586:	4b65      	ldr	r3, [pc, #404]	; (871c <_dtoa_r+0x3d0>)
    8588:	400a      	ands	r2, r1
    858a:	00d2      	lsls	r2, r2, #3
    858c:	189b      	adds	r3, r3, r2
    858e:	1136      	asrs	r6, r6, #4
    8590:	681c      	ldr	r4, [r3, #0]
    8592:	685d      	ldr	r5, [r3, #4]
    8594:	06f3      	lsls	r3, r6, #27
    8596:	d401      	bmi.n	859c <_dtoa_r+0x250>
    8598:	f000 fcca 	bl	8f30 <_dtoa_r+0xbe4>
    859c:	4b60      	ldr	r3, [pc, #384]	; (8720 <_dtoa_r+0x3d4>)
    859e:	400e      	ands	r6, r1
    85a0:	6a1a      	ldr	r2, [r3, #32]
    85a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    85a4:	9810      	ldr	r0, [sp, #64]	; 0x40
    85a6:	9911      	ldr	r1, [sp, #68]	; 0x44
    85a8:	f7fb fc06 	bl	3db8 <__aeabi_ddiv>
    85ac:	2303      	movs	r3, #3
    85ae:	4698      	mov	r8, r3
    85b0:	9008      	str	r0, [sp, #32]
    85b2:	9109      	str	r1, [sp, #36]	; 0x24
    85b4:	2e00      	cmp	r6, #0
    85b6:	d011      	beq.n	85dc <_dtoa_r+0x290>
    85b8:	4f59      	ldr	r7, [pc, #356]	; (8720 <_dtoa_r+0x3d4>)
    85ba:	2301      	movs	r3, #1
    85bc:	4233      	tst	r3, r6
    85be:	d009      	beq.n	85d4 <_dtoa_r+0x288>
    85c0:	469c      	mov	ip, r3
    85c2:	683a      	ldr	r2, [r7, #0]
    85c4:	687b      	ldr	r3, [r7, #4]
    85c6:	0020      	movs	r0, r4
    85c8:	0029      	movs	r1, r5
    85ca:	44e0      	add	r8, ip
    85cc:	f7fb ff28 	bl	4420 <__aeabi_dmul>
    85d0:	0004      	movs	r4, r0
    85d2:	000d      	movs	r5, r1
    85d4:	1076      	asrs	r6, r6, #1
    85d6:	3708      	adds	r7, #8
    85d8:	2e00      	cmp	r6, #0
    85da:	d1ee      	bne.n	85ba <_dtoa_r+0x26e>
    85dc:	0022      	movs	r2, r4
    85de:	9808      	ldr	r0, [sp, #32]
    85e0:	9909      	ldr	r1, [sp, #36]	; 0x24
    85e2:	002b      	movs	r3, r5
    85e4:	f7fb fbe8 	bl	3db8 <__aeabi_ddiv>
    85e8:	0006      	movs	r6, r0
    85ea:	000f      	movs	r7, r1
    85ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    85ee:	2b00      	cmp	r3, #0
    85f0:	d009      	beq.n	8606 <_dtoa_r+0x2ba>
    85f2:	2200      	movs	r2, #0
    85f4:	4b40      	ldr	r3, [pc, #256]	; (86f8 <_dtoa_r+0x3ac>)
    85f6:	0030      	movs	r0, r6
    85f8:	0039      	movs	r1, r7
    85fa:	f7fc fdbd 	bl	5178 <__aeabi_dcmplt>
    85fe:	2800      	cmp	r0, #0
    8600:	d001      	beq.n	8606 <_dtoa_r+0x2ba>
    8602:	f000 fdc2 	bl	918a <_dtoa_r+0xe3e>
    8606:	4640      	mov	r0, r8
    8608:	f7fc fcd4 	bl	4fb4 <__aeabi_i2d>
    860c:	0032      	movs	r2, r6
    860e:	003b      	movs	r3, r7
    8610:	f7fb ff06 	bl	4420 <__aeabi_dmul>
    8614:	2200      	movs	r2, #0
    8616:	4b43      	ldr	r3, [pc, #268]	; (8724 <_dtoa_r+0x3d8>)
    8618:	f004 fb22 	bl	cc60 <__aeabi_dadd>
    861c:	4a42      	ldr	r2, [pc, #264]	; (8728 <_dtoa_r+0x3dc>)
    861e:	000b      	movs	r3, r1
    8620:	4694      	mov	ip, r2
    8622:	4463      	add	r3, ip
    8624:	9008      	str	r0, [sp, #32]
    8626:	9109      	str	r1, [sp, #36]	; 0x24
    8628:	9309      	str	r3, [sp, #36]	; 0x24
    862a:	9b07      	ldr	r3, [sp, #28]
    862c:	2b00      	cmp	r3, #0
    862e:	d101      	bne.n	8634 <_dtoa_r+0x2e8>
    8630:	f000 fc50 	bl	8ed4 <_dtoa_r+0xb88>
    8634:	9b03      	ldr	r3, [sp, #12]
    8636:	9313      	str	r3, [sp, #76]	; 0x4c
    8638:	9b07      	ldr	r3, [sp, #28]
    863a:	9312      	str	r3, [sp, #72]	; 0x48
    863c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    863e:	2b00      	cmp	r3, #0
    8640:	d101      	bne.n	8646 <_dtoa_r+0x2fa>
    8642:	f000 fd1d 	bl	9080 <_dtoa_r+0xd34>
    8646:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8648:	2000      	movs	r0, #0
    864a:	1e5a      	subs	r2, r3, #1
    864c:	4b33      	ldr	r3, [pc, #204]	; (871c <_dtoa_r+0x3d0>)
    864e:	00d2      	lsls	r2, r2, #3
    8650:	189b      	adds	r3, r3, r2
    8652:	681a      	ldr	r2, [r3, #0]
    8654:	685b      	ldr	r3, [r3, #4]
    8656:	4935      	ldr	r1, [pc, #212]	; (872c <_dtoa_r+0x3e0>)
    8658:	f7fb fbae 	bl	3db8 <__aeabi_ddiv>
    865c:	9a08      	ldr	r2, [sp, #32]
    865e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8660:	f7fc f95e 	bl	4920 <__aeabi_dsub>
    8664:	9008      	str	r0, [sp, #32]
    8666:	9109      	str	r1, [sp, #36]	; 0x24
    8668:	0039      	movs	r1, r7
    866a:	0030      	movs	r0, r6
    866c:	f7fc fc6e 	bl	4f4c <__aeabi_d2iz>
    8670:	0004      	movs	r4, r0
    8672:	f7fc fc9f 	bl	4fb4 <__aeabi_i2d>
    8676:	0002      	movs	r2, r0
    8678:	000b      	movs	r3, r1
    867a:	0030      	movs	r0, r6
    867c:	0039      	movs	r1, r7
    867e:	f7fc f94f 	bl	4920 <__aeabi_dsub>
    8682:	0005      	movs	r5, r0
    8684:	000e      	movs	r6, r1
    8686:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8688:	3430      	adds	r4, #48	; 0x30
    868a:	1c51      	adds	r1, r2, #1
    868c:	b2e7      	uxtb	r7, r4
    868e:	9114      	str	r1, [sp, #80]	; 0x50
    8690:	7017      	strb	r7, [r2, #0]
    8692:	0033      	movs	r3, r6
    8694:	9808      	ldr	r0, [sp, #32]
    8696:	9909      	ldr	r1, [sp, #36]	; 0x24
    8698:	002a      	movs	r2, r5
    869a:	f7fc fd81 	bl	51a0 <__aeabi_dcmpgt>
    869e:	2800      	cmp	r0, #0
    86a0:	d001      	beq.n	86a6 <_dtoa_r+0x35a>
    86a2:	f000 fdfe 	bl	92a2 <_dtoa_r+0xf56>
    86a6:	002a      	movs	r2, r5
    86a8:	0033      	movs	r3, r6
    86aa:	2000      	movs	r0, #0
    86ac:	4912      	ldr	r1, [pc, #72]	; (86f8 <_dtoa_r+0x3ac>)
    86ae:	f7fc f937 	bl	4920 <__aeabi_dsub>
    86b2:	0002      	movs	r2, r0
    86b4:	000b      	movs	r3, r1
    86b6:	9808      	ldr	r0, [sp, #32]
    86b8:	9909      	ldr	r1, [sp, #36]	; 0x24
    86ba:	f7fc fd71 	bl	51a0 <__aeabi_dcmpgt>
    86be:	2800      	cmp	r0, #0
    86c0:	d001      	beq.n	86c6 <_dtoa_r+0x37a>
    86c2:	f000 fde7 	bl	9294 <_dtoa_r+0xf48>
    86c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    86c8:	2b01      	cmp	r3, #1
    86ca:	d101      	bne.n	86d0 <_dtoa_r+0x384>
    86cc:	f000 fc78 	bl	8fc0 <_dtoa_r+0xc74>
    86d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    86d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    86d4:	4694      	mov	ip, r2
    86d6:	4463      	add	r3, ip
    86d8:	4698      	mov	r8, r3
    86da:	464b      	mov	r3, r9
    86dc:	9312      	str	r3, [sp, #72]	; 0x48
    86de:	9b14      	ldr	r3, [sp, #80]	; 0x50
    86e0:	4699      	mov	r9, r3
    86e2:	e038      	b.n	8756 <_dtoa_r+0x40a>
    86e4:	7ff00000 	.word	0x7ff00000
    86e8:	0000e701 	.word	0x0000e701
    86ec:	0000270f 	.word	0x0000270f
    86f0:	0000eba8 	.word	0x0000eba8
    86f4:	0000ebb4 	.word	0x0000ebb4
    86f8:	3ff00000 	.word	0x3ff00000
    86fc:	fffffc01 	.word	0xfffffc01
    8700:	3ff80000 	.word	0x3ff80000
    8704:	636f4361 	.word	0x636f4361
    8708:	3fd287a7 	.word	0x3fd287a7
    870c:	8b60c8b3 	.word	0x8b60c8b3
    8710:	3fc68a28 	.word	0x3fc68a28
    8714:	509f79fb 	.word	0x509f79fb
    8718:	3fd34413 	.word	0x3fd34413
    871c:	0000ebf0 	.word	0x0000ebf0
    8720:	0000ebc8 	.word	0x0000ebc8
    8724:	401c0000 	.word	0x401c0000
    8728:	fcc00000 	.word	0xfcc00000
    872c:	3fe00000 	.word	0x3fe00000
    8730:	002a      	movs	r2, r5
    8732:	0033      	movs	r3, r6
    8734:	2000      	movs	r0, #0
    8736:	49b9      	ldr	r1, [pc, #740]	; (8a1c <_dtoa_r+0x6d0>)
    8738:	f7fc f8f2 	bl	4920 <__aeabi_dsub>
    873c:	9a08      	ldr	r2, [sp, #32]
    873e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8740:	f7fc fd1a 	bl	5178 <__aeabi_dcmplt>
    8744:	2800      	cmp	r0, #0
    8746:	d001      	beq.n	874c <_dtoa_r+0x400>
    8748:	f000 fd74 	bl	9234 <_dtoa_r+0xee8>
    874c:	46a1      	mov	r9, r4
    874e:	4544      	cmp	r4, r8
    8750:	d101      	bne.n	8756 <_dtoa_r+0x40a>
    8752:	f000 fc33 	bl	8fbc <_dtoa_r+0xc70>
    8756:	9808      	ldr	r0, [sp, #32]
    8758:	9909      	ldr	r1, [sp, #36]	; 0x24
    875a:	2200      	movs	r2, #0
    875c:	4bb0      	ldr	r3, [pc, #704]	; (8a20 <_dtoa_r+0x6d4>)
    875e:	f7fb fe5f 	bl	4420 <__aeabi_dmul>
    8762:	2200      	movs	r2, #0
    8764:	4bae      	ldr	r3, [pc, #696]	; (8a20 <_dtoa_r+0x6d4>)
    8766:	9008      	str	r0, [sp, #32]
    8768:	9109      	str	r1, [sp, #36]	; 0x24
    876a:	0028      	movs	r0, r5
    876c:	0031      	movs	r1, r6
    876e:	f7fb fe57 	bl	4420 <__aeabi_dmul>
    8772:	000d      	movs	r5, r1
    8774:	0004      	movs	r4, r0
    8776:	f7fc fbe9 	bl	4f4c <__aeabi_d2iz>
    877a:	0007      	movs	r7, r0
    877c:	f7fc fc1a 	bl	4fb4 <__aeabi_i2d>
    8780:	0002      	movs	r2, r0
    8782:	000b      	movs	r3, r1
    8784:	0020      	movs	r0, r4
    8786:	0029      	movs	r1, r5
    8788:	f7fc f8ca 	bl	4920 <__aeabi_dsub>
    878c:	464b      	mov	r3, r9
    878e:	3730      	adds	r7, #48	; 0x30
    8790:	b2ff      	uxtb	r7, r7
    8792:	1c5c      	adds	r4, r3, #1
    8794:	701f      	strb	r7, [r3, #0]
    8796:	9a08      	ldr	r2, [sp, #32]
    8798:	9b09      	ldr	r3, [sp, #36]	; 0x24
    879a:	0005      	movs	r5, r0
    879c:	000e      	movs	r6, r1
    879e:	f7fc fceb 	bl	5178 <__aeabi_dcmplt>
    87a2:	2800      	cmp	r0, #0
    87a4:	d0c4      	beq.n	8730 <_dtoa_r+0x3e4>
    87a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    87a8:	9303      	str	r3, [sp, #12]
    87aa:	4659      	mov	r1, fp
    87ac:	4650      	mov	r0, sl
    87ae:	f001 faf7 	bl	9da0 <_Bfree>
    87b2:	2300      	movs	r3, #0
    87b4:	7023      	strb	r3, [r4, #0]
    87b6:	9b03      	ldr	r3, [sp, #12]
    87b8:	9a24      	ldr	r2, [sp, #144]	; 0x90
    87ba:	3301      	adds	r3, #1
    87bc:	6013      	str	r3, [r2, #0]
    87be:	9b26      	ldr	r3, [sp, #152]	; 0x98
    87c0:	2b00      	cmp	r3, #0
    87c2:	d100      	bne.n	87c6 <_dtoa_r+0x47a>
    87c4:	e3a8      	b.n	8f18 <_dtoa_r+0xbcc>
    87c6:	601c      	str	r4, [r3, #0]
    87c8:	980a      	ldr	r0, [sp, #40]	; 0x28
    87ca:	e5f4      	b.n	83b6 <_dtoa_r+0x6a>
    87cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
    87ce:	4699      	mov	r9, r3
    87d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    87d2:	444b      	add	r3, r9
    87d4:	001c      	movs	r4, r3
    87d6:	4b93      	ldr	r3, [pc, #588]	; (8a24 <_dtoa_r+0x6d8>)
    87d8:	18e3      	adds	r3, r4, r3
    87da:	2b20      	cmp	r3, #32
    87dc:	dc00      	bgt.n	87e0 <_dtoa_r+0x494>
    87de:	e17e      	b.n	8ade <_dtoa_r+0x792>
    87e0:	0031      	movs	r1, r6
    87e2:	4a91      	ldr	r2, [pc, #580]	; (8a28 <_dtoa_r+0x6dc>)
    87e4:	4640      	mov	r0, r8
    87e6:	18a2      	adds	r2, r4, r2
    87e8:	40d1      	lsrs	r1, r2
    87ea:	000a      	movs	r2, r1
    87ec:	2140      	movs	r1, #64	; 0x40
    87ee:	1acb      	subs	r3, r1, r3
    87f0:	4098      	lsls	r0, r3
    87f2:	4310      	orrs	r0, r2
    87f4:	f7fc fc20 	bl	5038 <__aeabi_ui2d>
    87f8:	1e63      	subs	r3, r4, #1
    87fa:	4698      	mov	r8, r3
    87fc:	2301      	movs	r3, #1
    87fe:	4d8b      	ldr	r5, [pc, #556]	; (8a2c <_dtoa_r+0x6e0>)
    8800:	930f      	str	r3, [sp, #60]	; 0x3c
    8802:	1949      	adds	r1, r1, r5
    8804:	e618      	b.n	8438 <_dtoa_r+0xec>
    8806:	488a      	ldr	r0, [pc, #552]	; (8a30 <_dtoa_r+0x6e4>)
    8808:	e5d5      	b.n	83b6 <_dtoa_r+0x6a>
    880a:	2300      	movs	r3, #0
    880c:	4652      	mov	r2, sl
    880e:	2100      	movs	r1, #0
    8810:	6453      	str	r3, [r2, #68]	; 0x44
    8812:	4650      	mov	r0, sl
    8814:	f001 fa9c 	bl	9d50 <_Balloc>
    8818:	4653      	mov	r3, sl
    881a:	6418      	str	r0, [r3, #64]	; 0x40
    881c:	2301      	movs	r3, #1
    881e:	425b      	negs	r3, r3
    8820:	9307      	str	r3, [sp, #28]
    8822:	930e      	str	r3, [sp, #56]	; 0x38
    8824:	3302      	adds	r3, #2
    8826:	2200      	movs	r2, #0
    8828:	930b      	str	r3, [sp, #44]	; 0x2c
    882a:	2300      	movs	r3, #0
    882c:	900a      	str	r0, [sp, #40]	; 0x28
    882e:	9223      	str	r2, [sp, #140]	; 0x8c
    8830:	9322      	str	r3, [sp, #136]	; 0x88
    8832:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    8834:	2b00      	cmp	r3, #0
    8836:	da00      	bge.n	883a <_dtoa_r+0x4ee>
    8838:	e0ab      	b.n	8992 <_dtoa_r+0x646>
    883a:	9a03      	ldr	r2, [sp, #12]
    883c:	2a0e      	cmp	r2, #14
    883e:	dd00      	ble.n	8842 <_dtoa_r+0x4f6>
    8840:	e0a7      	b.n	8992 <_dtoa_r+0x646>
    8842:	4b7c      	ldr	r3, [pc, #496]	; (8a34 <_dtoa_r+0x6e8>)
    8844:	00d2      	lsls	r2, r2, #3
    8846:	189b      	adds	r3, r3, r2
    8848:	685c      	ldr	r4, [r3, #4]
    884a:	681b      	ldr	r3, [r3, #0]
    884c:	9304      	str	r3, [sp, #16]
    884e:	9405      	str	r4, [sp, #20]
    8850:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8852:	2b00      	cmp	r3, #0
    8854:	da00      	bge.n	8858 <_dtoa_r+0x50c>
    8856:	e2a7      	b.n	8da8 <_dtoa_r+0xa5c>
    8858:	9c04      	ldr	r4, [sp, #16]
    885a:	9d05      	ldr	r5, [sp, #20]
    885c:	0030      	movs	r0, r6
    885e:	0022      	movs	r2, r4
    8860:	002b      	movs	r3, r5
    8862:	0039      	movs	r1, r7
    8864:	f7fb faa8 	bl	3db8 <__aeabi_ddiv>
    8868:	f7fc fb70 	bl	4f4c <__aeabi_d2iz>
    886c:	4680      	mov	r8, r0
    886e:	f7fc fba1 	bl	4fb4 <__aeabi_i2d>
    8872:	0022      	movs	r2, r4
    8874:	002b      	movs	r3, r5
    8876:	f7fb fdd3 	bl	4420 <__aeabi_dmul>
    887a:	0002      	movs	r2, r0
    887c:	000b      	movs	r3, r1
    887e:	0030      	movs	r0, r6
    8880:	0039      	movs	r1, r7
    8882:	f7fc f84d 	bl	4920 <__aeabi_dsub>
    8886:	4643      	mov	r3, r8
    8888:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    888a:	3330      	adds	r3, #48	; 0x30
    888c:	7013      	strb	r3, [r2, #0]
    888e:	9b07      	ldr	r3, [sp, #28]
    8890:	0006      	movs	r6, r0
    8892:	000f      	movs	r7, r1
    8894:	1c54      	adds	r4, r2, #1
    8896:	2b01      	cmp	r3, #1
    8898:	d04e      	beq.n	8938 <_dtoa_r+0x5ec>
    889a:	2200      	movs	r2, #0
    889c:	4b60      	ldr	r3, [pc, #384]	; (8a20 <_dtoa_r+0x6d4>)
    889e:	f7fb fdbf 	bl	4420 <__aeabi_dmul>
    88a2:	2200      	movs	r2, #0
    88a4:	2300      	movs	r3, #0
    88a6:	0006      	movs	r6, r0
    88a8:	000f      	movs	r7, r1
    88aa:	f7fc fc5f 	bl	516c <__aeabi_dcmpeq>
    88ae:	2800      	cmp	r0, #0
    88b0:	d000      	beq.n	88b4 <_dtoa_r+0x568>
    88b2:	e77a      	b.n	87aa <_dtoa_r+0x45e>
    88b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    88b6:	9a07      	ldr	r2, [sp, #28]
    88b8:	1c9d      	adds	r5, r3, #2
    88ba:	469c      	mov	ip, r3
    88bc:	465b      	mov	r3, fp
    88be:	9306      	str	r3, [sp, #24]
    88c0:	4653      	mov	r3, sl
    88c2:	4462      	add	r2, ip
    88c4:	46aa      	mov	sl, r5
    88c6:	9c04      	ldr	r4, [sp, #16]
    88c8:	9d05      	ldr	r5, [sp, #20]
    88ca:	4691      	mov	r9, r2
    88cc:	9307      	str	r3, [sp, #28]
    88ce:	e00f      	b.n	88f0 <_dtoa_r+0x5a4>
    88d0:	2200      	movs	r2, #0
    88d2:	4b53      	ldr	r3, [pc, #332]	; (8a20 <_dtoa_r+0x6d4>)
    88d4:	f7fb fda4 	bl	4420 <__aeabi_dmul>
    88d8:	2301      	movs	r3, #1
    88da:	469c      	mov	ip, r3
    88dc:	2200      	movs	r2, #0
    88de:	2300      	movs	r3, #0
    88e0:	0006      	movs	r6, r0
    88e2:	000f      	movs	r7, r1
    88e4:	44e2      	add	sl, ip
    88e6:	f7fc fc41 	bl	516c <__aeabi_dcmpeq>
    88ea:	2800      	cmp	r0, #0
    88ec:	d000      	beq.n	88f0 <_dtoa_r+0x5a4>
    88ee:	e2d9      	b.n	8ea4 <_dtoa_r+0xb58>
    88f0:	0022      	movs	r2, r4
    88f2:	002b      	movs	r3, r5
    88f4:	0030      	movs	r0, r6
    88f6:	0039      	movs	r1, r7
    88f8:	f7fb fa5e 	bl	3db8 <__aeabi_ddiv>
    88fc:	f7fc fb26 	bl	4f4c <__aeabi_d2iz>
    8900:	4680      	mov	r8, r0
    8902:	f7fc fb57 	bl	4fb4 <__aeabi_i2d>
    8906:	0022      	movs	r2, r4
    8908:	002b      	movs	r3, r5
    890a:	f7fb fd89 	bl	4420 <__aeabi_dmul>
    890e:	0002      	movs	r2, r0
    8910:	000b      	movs	r3, r1
    8912:	0030      	movs	r0, r6
    8914:	0039      	movs	r1, r7
    8916:	f7fc f803 	bl	4920 <__aeabi_dsub>
    891a:	4653      	mov	r3, sl
    891c:	4642      	mov	r2, r8
    891e:	3b01      	subs	r3, #1
    8920:	3230      	adds	r2, #48	; 0x30
    8922:	0006      	movs	r6, r0
    8924:	000f      	movs	r7, r1
    8926:	46d3      	mov	fp, sl
    8928:	701a      	strb	r2, [r3, #0]
    892a:	45d1      	cmp	r9, sl
    892c:	d1d0      	bne.n	88d0 <_dtoa_r+0x584>
    892e:	9b06      	ldr	r3, [sp, #24]
    8930:	4654      	mov	r4, sl
    8932:	469b      	mov	fp, r3
    8934:	9b07      	ldr	r3, [sp, #28]
    8936:	469a      	mov	sl, r3
    8938:	0032      	movs	r2, r6
    893a:	003b      	movs	r3, r7
    893c:	0030      	movs	r0, r6
    893e:	0039      	movs	r1, r7
    8940:	f004 f98e 	bl	cc60 <__aeabi_dadd>
    8944:	0006      	movs	r6, r0
    8946:	000f      	movs	r7, r1
    8948:	0002      	movs	r2, r0
    894a:	000b      	movs	r3, r1
    894c:	9804      	ldr	r0, [sp, #16]
    894e:	9905      	ldr	r1, [sp, #20]
    8950:	f7fc fc12 	bl	5178 <__aeabi_dcmplt>
    8954:	2800      	cmp	r0, #0
    8956:	d10c      	bne.n	8972 <_dtoa_r+0x626>
    8958:	9804      	ldr	r0, [sp, #16]
    895a:	9905      	ldr	r1, [sp, #20]
    895c:	0032      	movs	r2, r6
    895e:	003b      	movs	r3, r7
    8960:	f7fc fc04 	bl	516c <__aeabi_dcmpeq>
    8964:	2800      	cmp	r0, #0
    8966:	d100      	bne.n	896a <_dtoa_r+0x61e>
    8968:	e71f      	b.n	87aa <_dtoa_r+0x45e>
    896a:	4643      	mov	r3, r8
    896c:	07db      	lsls	r3, r3, #31
    896e:	d400      	bmi.n	8972 <_dtoa_r+0x626>
    8970:	e71b      	b.n	87aa <_dtoa_r+0x45e>
    8972:	1e65      	subs	r5, r4, #1
    8974:	782f      	ldrb	r7, [r5, #0]
    8976:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8978:	e006      	b.n	8988 <_dtoa_r+0x63c>
    897a:	429d      	cmp	r5, r3
    897c:	d100      	bne.n	8980 <_dtoa_r+0x634>
    897e:	e351      	b.n	9024 <_dtoa_r+0xcd8>
    8980:	3c02      	subs	r4, #2
    8982:	7827      	ldrb	r7, [r4, #0]
    8984:	002c      	movs	r4, r5
    8986:	3d01      	subs	r5, #1
    8988:	2f39      	cmp	r7, #57	; 0x39
    898a:	d0f6      	beq.n	897a <_dtoa_r+0x62e>
    898c:	3701      	adds	r7, #1
    898e:	702f      	strb	r7, [r5, #0]
    8990:	e70b      	b.n	87aa <_dtoa_r+0x45e>
    8992:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    8994:	2a00      	cmp	r2, #0
    8996:	d04f      	beq.n	8a38 <_dtoa_r+0x6ec>
    8998:	9a22      	ldr	r2, [sp, #136]	; 0x88
    899a:	2a01      	cmp	r2, #1
    899c:	dc00      	bgt.n	89a0 <_dtoa_r+0x654>
    899e:	e22c      	b.n	8dfa <_dtoa_r+0xaae>
    89a0:	9b07      	ldr	r3, [sp, #28]
    89a2:	1e5c      	subs	r4, r3, #1
    89a4:	464b      	mov	r3, r9
    89a6:	45a1      	cmp	r9, r4
    89a8:	da00      	bge.n	89ac <_dtoa_r+0x660>
    89aa:	e2b8      	b.n	8f1e <_dtoa_r+0xbd2>
    89ac:	1b1c      	subs	r4, r3, r4
    89ae:	9b07      	ldr	r3, [sp, #28]
    89b0:	2b00      	cmp	r3, #0
    89b2:	da00      	bge.n	89b6 <_dtoa_r+0x66a>
    89b4:	e3d4      	b.n	9160 <_dtoa_r+0xe14>
    89b6:	9b06      	ldr	r3, [sp, #24]
    89b8:	9308      	str	r3, [sp, #32]
    89ba:	9b07      	ldr	r3, [sp, #28]
    89bc:	9a06      	ldr	r2, [sp, #24]
    89be:	2101      	movs	r1, #1
    89c0:	4694      	mov	ip, r2
    89c2:	449c      	add	ip, r3
    89c4:	4662      	mov	r2, ip
    89c6:	9206      	str	r2, [sp, #24]
    89c8:	9a04      	ldr	r2, [sp, #16]
    89ca:	4650      	mov	r0, sl
    89cc:	4694      	mov	ip, r2
    89ce:	449c      	add	ip, r3
    89d0:	4663      	mov	r3, ip
    89d2:	9304      	str	r3, [sp, #16]
    89d4:	f001 fac6 	bl	9f64 <__i2b>
    89d8:	4680      	mov	r8, r0
    89da:	e032      	b.n	8a42 <_dtoa_r+0x6f6>
    89dc:	9a06      	ldr	r2, [sp, #24]
    89de:	9b03      	ldr	r3, [sp, #12]
    89e0:	1ad2      	subs	r2, r2, r3
    89e2:	425b      	negs	r3, r3
    89e4:	4699      	mov	r9, r3
    89e6:	2300      	movs	r3, #0
    89e8:	9206      	str	r2, [sp, #24]
    89ea:	930d      	str	r3, [sp, #52]	; 0x34
    89ec:	e579      	b.n	84e2 <_dtoa_r+0x196>
    89ee:	9803      	ldr	r0, [sp, #12]
    89f0:	f7fc fae0 	bl	4fb4 <__aeabi_i2d>
    89f4:	000b      	movs	r3, r1
    89f6:	0002      	movs	r2, r0
    89f8:	0029      	movs	r1, r5
    89fa:	0020      	movs	r0, r4
    89fc:	f7fc fbb6 	bl	516c <__aeabi_dcmpeq>
    8a00:	0002      	movs	r2, r0
    8a02:	4250      	negs	r0, r2
    8a04:	4150      	adcs	r0, r2
    8a06:	9b03      	ldr	r3, [sp, #12]
    8a08:	1a1b      	subs	r3, r3, r0
    8a0a:	9303      	str	r3, [sp, #12]
    8a0c:	e53d      	b.n	848a <_dtoa_r+0x13e>
    8a0e:	2301      	movs	r3, #1
    8a10:	1a9b      	subs	r3, r3, r2
    8a12:	9306      	str	r3, [sp, #24]
    8a14:	2300      	movs	r3, #0
    8a16:	9304      	str	r3, [sp, #16]
    8a18:	e557      	b.n	84ca <_dtoa_r+0x17e>
    8a1a:	46c0      	nop			; (mov r8, r8)
    8a1c:	3ff00000 	.word	0x3ff00000
    8a20:	40240000 	.word	0x40240000
    8a24:	00000432 	.word	0x00000432
    8a28:	00000412 	.word	0x00000412
    8a2c:	fe100000 	.word	0xfe100000
    8a30:	0000e700 	.word	0x0000e700
    8a34:	0000ebf0 	.word	0x0000ebf0
    8a38:	9b06      	ldr	r3, [sp, #24]
    8a3a:	464c      	mov	r4, r9
    8a3c:	9308      	str	r3, [sp, #32]
    8a3e:	2300      	movs	r3, #0
    8a40:	4698      	mov	r8, r3
    8a42:	9908      	ldr	r1, [sp, #32]
    8a44:	1e0b      	subs	r3, r1, #0
    8a46:	dd0e      	ble.n	8a66 <_dtoa_r+0x71a>
    8a48:	9a04      	ldr	r2, [sp, #16]
    8a4a:	2a00      	cmp	r2, #0
    8a4c:	dd0b      	ble.n	8a66 <_dtoa_r+0x71a>
    8a4e:	4293      	cmp	r3, r2
    8a50:	dd00      	ble.n	8a54 <_dtoa_r+0x708>
    8a52:	e187      	b.n	8d64 <_dtoa_r+0xa18>
    8a54:	9a06      	ldr	r2, [sp, #24]
    8a56:	1ad2      	subs	r2, r2, r3
    8a58:	9206      	str	r2, [sp, #24]
    8a5a:	9a08      	ldr	r2, [sp, #32]
    8a5c:	1ad2      	subs	r2, r2, r3
    8a5e:	9208      	str	r2, [sp, #32]
    8a60:	9a04      	ldr	r2, [sp, #16]
    8a62:	1ad3      	subs	r3, r2, r3
    8a64:	9304      	str	r3, [sp, #16]
    8a66:	464b      	mov	r3, r9
    8a68:	2b00      	cmp	r3, #0
    8a6a:	d01a      	beq.n	8aa2 <_dtoa_r+0x756>
    8a6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8a6e:	2b00      	cmp	r3, #0
    8a70:	d100      	bne.n	8a74 <_dtoa_r+0x728>
    8a72:	e1bb      	b.n	8dec <_dtoa_r+0xaa0>
    8a74:	2c00      	cmp	r4, #0
    8a76:	dd10      	ble.n	8a9a <_dtoa_r+0x74e>
    8a78:	4641      	mov	r1, r8
    8a7a:	0022      	movs	r2, r4
    8a7c:	4650      	mov	r0, sl
    8a7e:	f001 fb25 	bl	a0cc <__pow5mult>
    8a82:	465a      	mov	r2, fp
    8a84:	0001      	movs	r1, r0
    8a86:	4680      	mov	r8, r0
    8a88:	4650      	mov	r0, sl
    8a8a:	f001 fa75 	bl	9f78 <__multiply>
    8a8e:	0005      	movs	r5, r0
    8a90:	4659      	mov	r1, fp
    8a92:	4650      	mov	r0, sl
    8a94:	f001 f984 	bl	9da0 <_Bfree>
    8a98:	46ab      	mov	fp, r5
    8a9a:	464b      	mov	r3, r9
    8a9c:	1b1a      	subs	r2, r3, r4
    8a9e:	d000      	beq.n	8aa2 <_dtoa_r+0x756>
    8aa0:	e1a5      	b.n	8dee <_dtoa_r+0xaa2>
    8aa2:	2101      	movs	r1, #1
    8aa4:	4650      	mov	r0, sl
    8aa6:	f001 fa5d 	bl	9f64 <__i2b>
    8aaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8aac:	4681      	mov	r9, r0
    8aae:	2b00      	cmp	r3, #0
    8ab0:	dd1d      	ble.n	8aee <_dtoa_r+0x7a2>
    8ab2:	001a      	movs	r2, r3
    8ab4:	0001      	movs	r1, r0
    8ab6:	4650      	mov	r0, sl
    8ab8:	f001 fb08 	bl	a0cc <__pow5mult>
    8abc:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8abe:	4681      	mov	r9, r0
    8ac0:	2b01      	cmp	r3, #1
    8ac2:	dc00      	bgt.n	8ac6 <_dtoa_r+0x77a>
    8ac4:	e150      	b.n	8d68 <_dtoa_r+0xa1c>
    8ac6:	2400      	movs	r4, #0
    8ac8:	464b      	mov	r3, r9
    8aca:	691b      	ldr	r3, [r3, #16]
    8acc:	3303      	adds	r3, #3
    8ace:	009b      	lsls	r3, r3, #2
    8ad0:	444b      	add	r3, r9
    8ad2:	6858      	ldr	r0, [r3, #4]
    8ad4:	f001 f9fe 	bl	9ed4 <__hi0bits>
    8ad8:	2320      	movs	r3, #32
    8ada:	1a1b      	subs	r3, r3, r0
    8adc:	e010      	b.n	8b00 <_dtoa_r+0x7b4>
    8ade:	2220      	movs	r2, #32
    8ae0:	0030      	movs	r0, r6
    8ae2:	1ad3      	subs	r3, r2, r3
    8ae4:	4098      	lsls	r0, r3
    8ae6:	e685      	b.n	87f4 <_dtoa_r+0x4a8>
    8ae8:	2300      	movs	r3, #0
    8aea:	930c      	str	r3, [sp, #48]	; 0x30
    8aec:	e4e3      	b.n	84b6 <_dtoa_r+0x16a>
    8aee:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8af0:	2400      	movs	r4, #0
    8af2:	2b01      	cmp	r3, #1
    8af4:	dc00      	bgt.n	8af8 <_dtoa_r+0x7ac>
    8af6:	e18b      	b.n	8e10 <_dtoa_r+0xac4>
    8af8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    8afa:	2301      	movs	r3, #1
    8afc:	2a00      	cmp	r2, #0
    8afe:	d1e3      	bne.n	8ac8 <_dtoa_r+0x77c>
    8b00:	9904      	ldr	r1, [sp, #16]
    8b02:	201f      	movs	r0, #31
    8b04:	468c      	mov	ip, r1
    8b06:	4463      	add	r3, ip
    8b08:	4018      	ands	r0, r3
    8b0a:	d100      	bne.n	8b0e <_dtoa_r+0x7c2>
    8b0c:	e0ae      	b.n	8c6c <_dtoa_r+0x920>
    8b0e:	2320      	movs	r3, #32
    8b10:	1a1b      	subs	r3, r3, r0
    8b12:	2b04      	cmp	r3, #4
    8b14:	dc00      	bgt.n	8b18 <_dtoa_r+0x7cc>
    8b16:	e3cc      	b.n	92b2 <_dtoa_r+0xf66>
    8b18:	231c      	movs	r3, #28
    8b1a:	1a18      	subs	r0, r3, r0
    8b1c:	9b06      	ldr	r3, [sp, #24]
    8b1e:	469c      	mov	ip, r3
    8b20:	4484      	add	ip, r0
    8b22:	4663      	mov	r3, ip
    8b24:	9306      	str	r3, [sp, #24]
    8b26:	9b08      	ldr	r3, [sp, #32]
    8b28:	469c      	mov	ip, r3
    8b2a:	4484      	add	ip, r0
    8b2c:	4663      	mov	r3, ip
    8b2e:	468c      	mov	ip, r1
    8b30:	4484      	add	ip, r0
    8b32:	9308      	str	r3, [sp, #32]
    8b34:	4663      	mov	r3, ip
    8b36:	9304      	str	r3, [sp, #16]
    8b38:	9b06      	ldr	r3, [sp, #24]
    8b3a:	2b00      	cmp	r3, #0
    8b3c:	dd05      	ble.n	8b4a <_dtoa_r+0x7fe>
    8b3e:	4659      	mov	r1, fp
    8b40:	001a      	movs	r2, r3
    8b42:	4650      	mov	r0, sl
    8b44:	f001 fb22 	bl	a18c <__lshift>
    8b48:	4683      	mov	fp, r0
    8b4a:	9b04      	ldr	r3, [sp, #16]
    8b4c:	2b00      	cmp	r3, #0
    8b4e:	dd05      	ble.n	8b5c <_dtoa_r+0x810>
    8b50:	4649      	mov	r1, r9
    8b52:	001a      	movs	r2, r3
    8b54:	4650      	mov	r0, sl
    8b56:	f001 fb19 	bl	a18c <__lshift>
    8b5a:	4681      	mov	r9, r0
    8b5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8b5e:	2b00      	cmp	r3, #0
    8b60:	d000      	beq.n	8b64 <_dtoa_r+0x818>
    8b62:	e094      	b.n	8c8e <_dtoa_r+0x942>
    8b64:	9b07      	ldr	r3, [sp, #28]
    8b66:	2b00      	cmp	r3, #0
    8b68:	dc00      	bgt.n	8b6c <_dtoa_r+0x820>
    8b6a:	e175      	b.n	8e58 <_dtoa_r+0xb0c>
    8b6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8b6e:	2b00      	cmp	r3, #0
    8b70:	d100      	bne.n	8b74 <_dtoa_r+0x828>
    8b72:	e0a6      	b.n	8cc2 <_dtoa_r+0x976>
    8b74:	9b08      	ldr	r3, [sp, #32]
    8b76:	2b00      	cmp	r3, #0
    8b78:	dd05      	ble.n	8b86 <_dtoa_r+0x83a>
    8b7a:	4641      	mov	r1, r8
    8b7c:	001a      	movs	r2, r3
    8b7e:	4650      	mov	r0, sl
    8b80:	f001 fb04 	bl	a18c <__lshift>
    8b84:	4680      	mov	r8, r0
    8b86:	4643      	mov	r3, r8
    8b88:	930c      	str	r3, [sp, #48]	; 0x30
    8b8a:	2c00      	cmp	r4, #0
    8b8c:	d000      	beq.n	8b90 <_dtoa_r+0x844>
    8b8e:	e250      	b.n	9032 <_dtoa_r+0xce6>
    8b90:	9c07      	ldr	r4, [sp, #28]
    8b92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8b94:	3c01      	subs	r4, #1
    8b96:	0023      	movs	r3, r4
    8b98:	4694      	mov	ip, r2
    8b9a:	4463      	add	r3, ip
    8b9c:	9308      	str	r3, [sp, #32]
    8b9e:	2301      	movs	r3, #1
    8ba0:	4033      	ands	r3, r6
    8ba2:	9307      	str	r3, [sp, #28]
    8ba4:	464b      	mov	r3, r9
    8ba6:	9306      	str	r3, [sp, #24]
    8ba8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8baa:	4657      	mov	r7, sl
    8bac:	4645      	mov	r5, r8
    8bae:	465e      	mov	r6, fp
    8bb0:	4692      	mov	sl, r2
    8bb2:	4698      	mov	r8, r3
    8bb4:	9b06      	ldr	r3, [sp, #24]
    8bb6:	0030      	movs	r0, r6
    8bb8:	0019      	movs	r1, r3
    8bba:	4699      	mov	r9, r3
    8bbc:	f7ff fb1c 	bl	81f8 <quorem>
    8bc0:	0003      	movs	r3, r0
    8bc2:	900b      	str	r0, [sp, #44]	; 0x2c
    8bc4:	3330      	adds	r3, #48	; 0x30
    8bc6:	0029      	movs	r1, r5
    8bc8:	0030      	movs	r0, r6
    8bca:	9304      	str	r3, [sp, #16]
    8bcc:	f001 fb3e 	bl	a24c <__mcmp>
    8bd0:	4649      	mov	r1, r9
    8bd2:	0004      	movs	r4, r0
    8bd4:	4642      	mov	r2, r8
    8bd6:	0038      	movs	r0, r7
    8bd8:	f001 fb52 	bl	a280 <__mdiff>
    8bdc:	68c3      	ldr	r3, [r0, #12]
    8bde:	4681      	mov	r9, r0
    8be0:	2b00      	cmp	r3, #0
    8be2:	d000      	beq.n	8be6 <_dtoa_r+0x89a>
    8be4:	e11e      	b.n	8e24 <_dtoa_r+0xad8>
    8be6:	0001      	movs	r1, r0
    8be8:	0030      	movs	r0, r6
    8bea:	f001 fb2f 	bl	a24c <__mcmp>
    8bee:	4683      	mov	fp, r0
    8bf0:	4649      	mov	r1, r9
    8bf2:	0038      	movs	r0, r7
    8bf4:	f001 f8d4 	bl	9da0 <_Bfree>
    8bf8:	465b      	mov	r3, fp
    8bfa:	9a22      	ldr	r2, [sp, #136]	; 0x88
    8bfc:	4313      	orrs	r3, r2
    8bfe:	d103      	bne.n	8c08 <_dtoa_r+0x8bc>
    8c00:	9b07      	ldr	r3, [sp, #28]
    8c02:	2b00      	cmp	r3, #0
    8c04:	d100      	bne.n	8c08 <_dtoa_r+0x8bc>
    8c06:	e306      	b.n	9216 <_dtoa_r+0xeca>
    8c08:	2c00      	cmp	r4, #0
    8c0a:	da00      	bge.n	8c0e <_dtoa_r+0x8c2>
    8c0c:	e1a8      	b.n	8f60 <_dtoa_r+0xc14>
    8c0e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8c10:	431c      	orrs	r4, r3
    8c12:	d103      	bne.n	8c1c <_dtoa_r+0x8d0>
    8c14:	9b07      	ldr	r3, [sp, #28]
    8c16:	2b00      	cmp	r3, #0
    8c18:	d100      	bne.n	8c1c <_dtoa_r+0x8d0>
    8c1a:	e1a1      	b.n	8f60 <_dtoa_r+0xc14>
    8c1c:	465b      	mov	r3, fp
    8c1e:	2b00      	cmp	r3, #0
    8c20:	dd00      	ble.n	8c24 <_dtoa_r+0x8d8>
    8c22:	e282      	b.n	912a <_dtoa_r+0xdde>
    8c24:	4669      	mov	r1, sp
    8c26:	4652      	mov	r2, sl
    8c28:	4653      	mov	r3, sl
    8c2a:	7c09      	ldrb	r1, [r1, #16]
    8c2c:	1c5c      	adds	r4, r3, #1
    8c2e:	7011      	strb	r1, [r2, #0]
    8c30:	9a08      	ldr	r2, [sp, #32]
    8c32:	4552      	cmp	r2, sl
    8c34:	d100      	bne.n	8c38 <_dtoa_r+0x8ec>
    8c36:	e28a      	b.n	914e <_dtoa_r+0xe02>
    8c38:	0031      	movs	r1, r6
    8c3a:	2300      	movs	r3, #0
    8c3c:	220a      	movs	r2, #10
    8c3e:	0038      	movs	r0, r7
    8c40:	f001 f8b8 	bl	9db4 <__multadd>
    8c44:	2300      	movs	r3, #0
    8c46:	0006      	movs	r6, r0
    8c48:	220a      	movs	r2, #10
    8c4a:	0029      	movs	r1, r5
    8c4c:	0038      	movs	r0, r7
    8c4e:	4545      	cmp	r5, r8
    8c50:	d100      	bne.n	8c54 <_dtoa_r+0x908>
    8c52:	e0e1      	b.n	8e18 <_dtoa_r+0xacc>
    8c54:	f001 f8ae 	bl	9db4 <__multadd>
    8c58:	4641      	mov	r1, r8
    8c5a:	0005      	movs	r5, r0
    8c5c:	2300      	movs	r3, #0
    8c5e:	220a      	movs	r2, #10
    8c60:	0038      	movs	r0, r7
    8c62:	f001 f8a7 	bl	9db4 <__multadd>
    8c66:	46a2      	mov	sl, r4
    8c68:	4680      	mov	r8, r0
    8c6a:	e7a3      	b.n	8bb4 <_dtoa_r+0x868>
    8c6c:	201c      	movs	r0, #28
    8c6e:	9b06      	ldr	r3, [sp, #24]
    8c70:	469c      	mov	ip, r3
    8c72:	4484      	add	ip, r0
    8c74:	4663      	mov	r3, ip
    8c76:	9306      	str	r3, [sp, #24]
    8c78:	9b08      	ldr	r3, [sp, #32]
    8c7a:	469c      	mov	ip, r3
    8c7c:	4484      	add	ip, r0
    8c7e:	4663      	mov	r3, ip
    8c80:	9308      	str	r3, [sp, #32]
    8c82:	9b04      	ldr	r3, [sp, #16]
    8c84:	469c      	mov	ip, r3
    8c86:	4484      	add	ip, r0
    8c88:	4663      	mov	r3, ip
    8c8a:	9304      	str	r3, [sp, #16]
    8c8c:	e754      	b.n	8b38 <_dtoa_r+0x7ec>
    8c8e:	4649      	mov	r1, r9
    8c90:	4658      	mov	r0, fp
    8c92:	f001 fadb 	bl	a24c <__mcmp>
    8c96:	2800      	cmp	r0, #0
    8c98:	db00      	blt.n	8c9c <_dtoa_r+0x950>
    8c9a:	e763      	b.n	8b64 <_dtoa_r+0x818>
    8c9c:	9b03      	ldr	r3, [sp, #12]
    8c9e:	4659      	mov	r1, fp
    8ca0:	3b01      	subs	r3, #1
    8ca2:	9303      	str	r3, [sp, #12]
    8ca4:	220a      	movs	r2, #10
    8ca6:	2300      	movs	r3, #0
    8ca8:	4650      	mov	r0, sl
    8caa:	f001 f883 	bl	9db4 <__multadd>
    8cae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8cb0:	4683      	mov	fp, r0
    8cb2:	2b00      	cmp	r3, #0
    8cb4:	d000      	beq.n	8cb8 <_dtoa_r+0x96c>
    8cb6:	e2ca      	b.n	924e <_dtoa_r+0xf02>
    8cb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8cba:	2b00      	cmp	r3, #0
    8cbc:	dc00      	bgt.n	8cc0 <_dtoa_r+0x974>
    8cbe:	e2d8      	b.n	9272 <_dtoa_r+0xf26>
    8cc0:	9307      	str	r3, [sp, #28]
    8cc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8cc4:	465d      	mov	r5, fp
    8cc6:	2400      	movs	r4, #0
    8cc8:	9f07      	ldr	r7, [sp, #28]
    8cca:	469b      	mov	fp, r3
    8ccc:	e006      	b.n	8cdc <_dtoa_r+0x990>
    8cce:	0029      	movs	r1, r5
    8cd0:	2300      	movs	r3, #0
    8cd2:	220a      	movs	r2, #10
    8cd4:	4650      	mov	r0, sl
    8cd6:	f001 f86d 	bl	9db4 <__multadd>
    8cda:	0005      	movs	r5, r0
    8cdc:	4649      	mov	r1, r9
    8cde:	0028      	movs	r0, r5
    8ce0:	f7ff fa8a 	bl	81f8 <quorem>
    8ce4:	465b      	mov	r3, fp
    8ce6:	3030      	adds	r0, #48	; 0x30
    8ce8:	5518      	strb	r0, [r3, r4]
    8cea:	3401      	adds	r4, #1
    8cec:	42bc      	cmp	r4, r7
    8cee:	dbee      	blt.n	8cce <_dtoa_r+0x982>
    8cf0:	46ab      	mov	fp, r5
    8cf2:	0006      	movs	r6, r0
    8cf4:	9c07      	ldr	r4, [sp, #28]
    8cf6:	2c00      	cmp	r4, #0
    8cf8:	dc00      	bgt.n	8cfc <_dtoa_r+0x9b0>
    8cfa:	e237      	b.n	916c <_dtoa_r+0xe20>
    8cfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8cfe:	2700      	movs	r7, #0
    8d00:	469c      	mov	ip, r3
    8d02:	4464      	add	r4, ip
    8d04:	4659      	mov	r1, fp
    8d06:	2201      	movs	r2, #1
    8d08:	4650      	mov	r0, sl
    8d0a:	f001 fa3f 	bl	a18c <__lshift>
    8d0e:	4649      	mov	r1, r9
    8d10:	4683      	mov	fp, r0
    8d12:	f001 fa9b 	bl	a24c <__mcmp>
    8d16:	2800      	cmp	r0, #0
    8d18:	dc00      	bgt.n	8d1c <_dtoa_r+0x9d0>
    8d1a:	e144      	b.n	8fa6 <_dtoa_r+0xc5a>
    8d1c:	1e65      	subs	r5, r4, #1
    8d1e:	782b      	ldrb	r3, [r5, #0]
    8d20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8d22:	e006      	b.n	8d32 <_dtoa_r+0x9e6>
    8d24:	4295      	cmp	r5, r2
    8d26:	d100      	bne.n	8d2a <_dtoa_r+0x9de>
    8d28:	e0b1      	b.n	8e8e <_dtoa_r+0xb42>
    8d2a:	3c02      	subs	r4, #2
    8d2c:	7823      	ldrb	r3, [r4, #0]
    8d2e:	002c      	movs	r4, r5
    8d30:	3d01      	subs	r5, #1
    8d32:	2b39      	cmp	r3, #57	; 0x39
    8d34:	d0f6      	beq.n	8d24 <_dtoa_r+0x9d8>
    8d36:	3301      	adds	r3, #1
    8d38:	702b      	strb	r3, [r5, #0]
    8d3a:	4649      	mov	r1, r9
    8d3c:	4650      	mov	r0, sl
    8d3e:	f001 f82f 	bl	9da0 <_Bfree>
    8d42:	4643      	mov	r3, r8
    8d44:	2b00      	cmp	r3, #0
    8d46:	d100      	bne.n	8d4a <_dtoa_r+0x9fe>
    8d48:	e52f      	b.n	87aa <_dtoa_r+0x45e>
    8d4a:	2f00      	cmp	r7, #0
    8d4c:	d005      	beq.n	8d5a <_dtoa_r+0xa0e>
    8d4e:	4547      	cmp	r7, r8
    8d50:	d003      	beq.n	8d5a <_dtoa_r+0xa0e>
    8d52:	0039      	movs	r1, r7
    8d54:	4650      	mov	r0, sl
    8d56:	f001 f823 	bl	9da0 <_Bfree>
    8d5a:	4641      	mov	r1, r8
    8d5c:	4650      	mov	r0, sl
    8d5e:	f001 f81f 	bl	9da0 <_Bfree>
    8d62:	e522      	b.n	87aa <_dtoa_r+0x45e>
    8d64:	0013      	movs	r3, r2
    8d66:	e675      	b.n	8a54 <_dtoa_r+0x708>
    8d68:	2e00      	cmp	r6, #0
    8d6a:	d000      	beq.n	8d6e <_dtoa_r+0xa22>
    8d6c:	e6ab      	b.n	8ac6 <_dtoa_r+0x77a>
    8d6e:	033b      	lsls	r3, r7, #12
    8d70:	2400      	movs	r4, #0
    8d72:	2b00      	cmp	r3, #0
    8d74:	d000      	beq.n	8d78 <_dtoa_r+0xa2c>
    8d76:	e6bf      	b.n	8af8 <_dtoa_r+0x7ac>
    8d78:	4bba      	ldr	r3, [pc, #744]	; (9064 <_dtoa_r+0xd18>)
    8d7a:	423b      	tst	r3, r7
    8d7c:	d100      	bne.n	8d80 <_dtoa_r+0xa34>
    8d7e:	e6bb      	b.n	8af8 <_dtoa_r+0x7ac>
    8d80:	9b06      	ldr	r3, [sp, #24]
    8d82:	3401      	adds	r4, #1
    8d84:	3301      	adds	r3, #1
    8d86:	9306      	str	r3, [sp, #24]
    8d88:	9b04      	ldr	r3, [sp, #16]
    8d8a:	3301      	adds	r3, #1
    8d8c:	9304      	str	r3, [sp, #16]
    8d8e:	e6b3      	b.n	8af8 <_dtoa_r+0x7ac>
    8d90:	2301      	movs	r3, #1
    8d92:	930b      	str	r3, [sp, #44]	; 0x2c
    8d94:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8d96:	2b00      	cmp	r3, #0
    8d98:	dc00      	bgt.n	8d9c <_dtoa_r+0xa50>
    8d9a:	e0d1      	b.n	8f40 <_dtoa_r+0xbf4>
    8d9c:	001d      	movs	r5, r3
    8d9e:	4698      	mov	r8, r3
    8da0:	930e      	str	r3, [sp, #56]	; 0x38
    8da2:	9307      	str	r3, [sp, #28]
    8da4:	f7ff fbc8 	bl	8538 <_dtoa_r+0x1ec>
    8da8:	9b07      	ldr	r3, [sp, #28]
    8daa:	2b00      	cmp	r3, #0
    8dac:	dd00      	ble.n	8db0 <_dtoa_r+0xa64>
    8dae:	e553      	b.n	8858 <_dtoa_r+0x50c>
    8db0:	d000      	beq.n	8db4 <_dtoa_r+0xa68>
    8db2:	e0ad      	b.n	8f10 <_dtoa_r+0xbc4>
    8db4:	9804      	ldr	r0, [sp, #16]
    8db6:	9905      	ldr	r1, [sp, #20]
    8db8:	2200      	movs	r2, #0
    8dba:	4bab      	ldr	r3, [pc, #684]	; (9068 <_dtoa_r+0xd1c>)
    8dbc:	f7fb fb30 	bl	4420 <__aeabi_dmul>
    8dc0:	003b      	movs	r3, r7
    8dc2:	0032      	movs	r2, r6
    8dc4:	f7fc f9f6 	bl	51b4 <__aeabi_dcmpge>
    8dc8:	2300      	movs	r3, #0
    8dca:	4699      	mov	r9, r3
    8dcc:	4698      	mov	r8, r3
    8dce:	2800      	cmp	r0, #0
    8dd0:	d055      	beq.n	8e7e <_dtoa_r+0xb32>
    8dd2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8dd4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    8dd6:	43db      	mvns	r3, r3
    8dd8:	9303      	str	r3, [sp, #12]
    8dda:	4649      	mov	r1, r9
    8ddc:	4650      	mov	r0, sl
    8dde:	f000 ffdf 	bl	9da0 <_Bfree>
    8de2:	4643      	mov	r3, r8
    8de4:	2b00      	cmp	r3, #0
    8de6:	d100      	bne.n	8dea <_dtoa_r+0xa9e>
    8de8:	e4df      	b.n	87aa <_dtoa_r+0x45e>
    8dea:	e7b6      	b.n	8d5a <_dtoa_r+0xa0e>
    8dec:	464a      	mov	r2, r9
    8dee:	4659      	mov	r1, fp
    8df0:	4650      	mov	r0, sl
    8df2:	f001 f96b 	bl	a0cc <__pow5mult>
    8df6:	4683      	mov	fp, r0
    8df8:	e653      	b.n	8aa2 <_dtoa_r+0x756>
    8dfa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    8dfc:	2a00      	cmp	r2, #0
    8dfe:	d100      	bne.n	8e02 <_dtoa_r+0xab6>
    8e00:	e1b6      	b.n	9170 <_dtoa_r+0xe24>
    8e02:	4a9a      	ldr	r2, [pc, #616]	; (906c <_dtoa_r+0xd20>)
    8e04:	464c      	mov	r4, r9
    8e06:	4694      	mov	ip, r2
    8e08:	9a06      	ldr	r2, [sp, #24]
    8e0a:	4463      	add	r3, ip
    8e0c:	9208      	str	r2, [sp, #32]
    8e0e:	e5d5      	b.n	89bc <_dtoa_r+0x670>
    8e10:	2e00      	cmp	r6, #0
    8e12:	d000      	beq.n	8e16 <_dtoa_r+0xaca>
    8e14:	e670      	b.n	8af8 <_dtoa_r+0x7ac>
    8e16:	e7aa      	b.n	8d6e <_dtoa_r+0xa22>
    8e18:	f000 ffcc 	bl	9db4 <__multadd>
    8e1c:	46a2      	mov	sl, r4
    8e1e:	0005      	movs	r5, r0
    8e20:	4680      	mov	r8, r0
    8e22:	e6c7      	b.n	8bb4 <_dtoa_r+0x868>
    8e24:	2301      	movs	r3, #1
    8e26:	469b      	mov	fp, r3
    8e28:	e6e2      	b.n	8bf0 <_dtoa_r+0x8a4>
    8e2a:	2300      	movs	r3, #0
    8e2c:	930b      	str	r3, [sp, #44]	; 0x2c
    8e2e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8e30:	2b02      	cmp	r3, #2
    8e32:	d0af      	beq.n	8d94 <_dtoa_r+0xa48>
    8e34:	2400      	movs	r4, #0
    8e36:	4653      	mov	r3, sl
    8e38:	0021      	movs	r1, r4
    8e3a:	645c      	str	r4, [r3, #68]	; 0x44
    8e3c:	4650      	mov	r0, sl
    8e3e:	f000 ff87 	bl	9d50 <_Balloc>
    8e42:	4653      	mov	r3, sl
    8e44:	6418      	str	r0, [r3, #64]	; 0x40
    8e46:	2301      	movs	r3, #1
    8e48:	425b      	negs	r3, r3
    8e4a:	9307      	str	r3, [sp, #28]
    8e4c:	930e      	str	r3, [sp, #56]	; 0x38
    8e4e:	3302      	adds	r3, #2
    8e50:	900a      	str	r0, [sp, #40]	; 0x28
    8e52:	9423      	str	r4, [sp, #140]	; 0x8c
    8e54:	930b      	str	r3, [sp, #44]	; 0x2c
    8e56:	e4ec      	b.n	8832 <_dtoa_r+0x4e6>
    8e58:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8e5a:	2b02      	cmp	r3, #2
    8e5c:	dc00      	bgt.n	8e60 <_dtoa_r+0xb14>
    8e5e:	e685      	b.n	8b6c <_dtoa_r+0x820>
    8e60:	9b07      	ldr	r3, [sp, #28]
    8e62:	2b00      	cmp	r3, #0
    8e64:	d1b5      	bne.n	8dd2 <_dtoa_r+0xa86>
    8e66:	4649      	mov	r1, r9
    8e68:	2205      	movs	r2, #5
    8e6a:	4650      	mov	r0, sl
    8e6c:	f000 ffa2 	bl	9db4 <__multadd>
    8e70:	4681      	mov	r9, r0
    8e72:	0001      	movs	r1, r0
    8e74:	4658      	mov	r0, fp
    8e76:	f001 f9e9 	bl	a24c <__mcmp>
    8e7a:	2800      	cmp	r0, #0
    8e7c:	dda9      	ble.n	8dd2 <_dtoa_r+0xa86>
    8e7e:	2331      	movs	r3, #49	; 0x31
    8e80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8e82:	7013      	strb	r3, [r2, #0]
    8e84:	9b03      	ldr	r3, [sp, #12]
    8e86:	1c54      	adds	r4, r2, #1
    8e88:	3301      	adds	r3, #1
    8e8a:	9303      	str	r3, [sp, #12]
    8e8c:	e7a5      	b.n	8dda <_dtoa_r+0xa8e>
    8e8e:	9b03      	ldr	r3, [sp, #12]
    8e90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8e92:	3301      	adds	r3, #1
    8e94:	9303      	str	r3, [sp, #12]
    8e96:	2331      	movs	r3, #49	; 0x31
    8e98:	7013      	strb	r3, [r2, #0]
    8e9a:	e74e      	b.n	8d3a <_dtoa_r+0x9ee>
    8e9c:	2300      	movs	r3, #0
    8e9e:	930b      	str	r3, [sp, #44]	; 0x2c
    8ea0:	f7ff fb3d 	bl	851e <_dtoa_r+0x1d2>
    8ea4:	9b06      	ldr	r3, [sp, #24]
    8ea6:	465c      	mov	r4, fp
    8ea8:	469b      	mov	fp, r3
    8eaa:	9b07      	ldr	r3, [sp, #28]
    8eac:	469a      	mov	sl, r3
    8eae:	e47c      	b.n	87aa <_dtoa_r+0x45e>
    8eb0:	4640      	mov	r0, r8
    8eb2:	f7fc f87f 	bl	4fb4 <__aeabi_i2d>
    8eb6:	0032      	movs	r2, r6
    8eb8:	003b      	movs	r3, r7
    8eba:	f7fb fab1 	bl	4420 <__aeabi_dmul>
    8ebe:	2200      	movs	r2, #0
    8ec0:	4b6b      	ldr	r3, [pc, #428]	; (9070 <_dtoa_r+0xd24>)
    8ec2:	f003 fecd 	bl	cc60 <__aeabi_dadd>
    8ec6:	4a6b      	ldr	r2, [pc, #428]	; (9074 <_dtoa_r+0xd28>)
    8ec8:	000b      	movs	r3, r1
    8eca:	4694      	mov	ip, r2
    8ecc:	4463      	add	r3, ip
    8ece:	9008      	str	r0, [sp, #32]
    8ed0:	9109      	str	r1, [sp, #36]	; 0x24
    8ed2:	9309      	str	r3, [sp, #36]	; 0x24
    8ed4:	2200      	movs	r2, #0
    8ed6:	4b64      	ldr	r3, [pc, #400]	; (9068 <_dtoa_r+0xd1c>)
    8ed8:	0030      	movs	r0, r6
    8eda:	0039      	movs	r1, r7
    8edc:	f7fb fd20 	bl	4920 <__aeabi_dsub>
    8ee0:	9e08      	ldr	r6, [sp, #32]
    8ee2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8ee4:	0032      	movs	r2, r6
    8ee6:	003b      	movs	r3, r7
    8ee8:	0004      	movs	r4, r0
    8eea:	000d      	movs	r5, r1
    8eec:	f7fc f958 	bl	51a0 <__aeabi_dcmpgt>
    8ef0:	2800      	cmp	r0, #0
    8ef2:	d000      	beq.n	8ef6 <_dtoa_r+0xbaa>
    8ef4:	e0b2      	b.n	905c <_dtoa_r+0xd10>
    8ef6:	2080      	movs	r0, #128	; 0x80
    8ef8:	0600      	lsls	r0, r0, #24
    8efa:	4684      	mov	ip, r0
    8efc:	0039      	movs	r1, r7
    8efe:	4461      	add	r1, ip
    8f00:	000b      	movs	r3, r1
    8f02:	0032      	movs	r2, r6
    8f04:	0020      	movs	r0, r4
    8f06:	0029      	movs	r1, r5
    8f08:	f7fc f936 	bl	5178 <__aeabi_dcmplt>
    8f0c:	2800      	cmp	r0, #0
    8f0e:	d057      	beq.n	8fc0 <_dtoa_r+0xc74>
    8f10:	2300      	movs	r3, #0
    8f12:	4699      	mov	r9, r3
    8f14:	4698      	mov	r8, r3
    8f16:	e75c      	b.n	8dd2 <_dtoa_r+0xa86>
    8f18:	980a      	ldr	r0, [sp, #40]	; 0x28
    8f1a:	f7ff fa4c 	bl	83b6 <_dtoa_r+0x6a>
    8f1e:	1ae2      	subs	r2, r4, r3
    8f20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8f22:	46a1      	mov	r9, r4
    8f24:	469c      	mov	ip, r3
    8f26:	4494      	add	ip, r2
    8f28:	4663      	mov	r3, ip
    8f2a:	2400      	movs	r4, #0
    8f2c:	930d      	str	r3, [sp, #52]	; 0x34
    8f2e:	e53e      	b.n	89ae <_dtoa_r+0x662>
    8f30:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8f32:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8f34:	9208      	str	r2, [sp, #32]
    8f36:	9309      	str	r3, [sp, #36]	; 0x24
    8f38:	2302      	movs	r3, #2
    8f3a:	4698      	mov	r8, r3
    8f3c:	f7ff fb3a 	bl	85b4 <_dtoa_r+0x268>
    8f40:	2300      	movs	r3, #0
    8f42:	4652      	mov	r2, sl
    8f44:	2100      	movs	r1, #0
    8f46:	6453      	str	r3, [r2, #68]	; 0x44
    8f48:	4650      	mov	r0, sl
    8f4a:	f000 ff01 	bl	9d50 <_Balloc>
    8f4e:	4653      	mov	r3, sl
    8f50:	6418      	str	r0, [r3, #64]	; 0x40
    8f52:	2301      	movs	r3, #1
    8f54:	900a      	str	r0, [sp, #40]	; 0x28
    8f56:	9307      	str	r3, [sp, #28]
    8f58:	9323      	str	r3, [sp, #140]	; 0x8c
    8f5a:	930e      	str	r3, [sp, #56]	; 0x38
    8f5c:	f7ff fb07 	bl	856e <_dtoa_r+0x222>
    8f60:	4643      	mov	r3, r8
    8f62:	930c      	str	r3, [sp, #48]	; 0x30
    8f64:	465b      	mov	r3, fp
    8f66:	9a06      	ldr	r2, [sp, #24]
    8f68:	46a8      	mov	r8, r5
    8f6a:	46b3      	mov	fp, r6
    8f6c:	4655      	mov	r5, sl
    8f6e:	9e04      	ldr	r6, [sp, #16]
    8f70:	4691      	mov	r9, r2
    8f72:	46ba      	mov	sl, r7
    8f74:	2b00      	cmp	r3, #0
    8f76:	dd10      	ble.n	8f9a <_dtoa_r+0xc4e>
    8f78:	4659      	mov	r1, fp
    8f7a:	2201      	movs	r2, #1
    8f7c:	0038      	movs	r0, r7
    8f7e:	f001 f905 	bl	a18c <__lshift>
    8f82:	4649      	mov	r1, r9
    8f84:	4683      	mov	fp, r0
    8f86:	f001 f961 	bl	a24c <__mcmp>
    8f8a:	2800      	cmp	r0, #0
    8f8c:	dc00      	bgt.n	8f90 <_dtoa_r+0xc44>
    8f8e:	e157      	b.n	9240 <_dtoa_r+0xef4>
    8f90:	2e39      	cmp	r6, #57	; 0x39
    8f92:	d100      	bne.n	8f96 <_dtoa_r+0xc4a>
    8f94:	e122      	b.n	91dc <_dtoa_r+0xe90>
    8f96:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    8f98:	3631      	adds	r6, #49	; 0x31
    8f9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8f9c:	4647      	mov	r7, r8
    8f9e:	1c6c      	adds	r4, r5, #1
    8fa0:	702e      	strb	r6, [r5, #0]
    8fa2:	4698      	mov	r8, r3
    8fa4:	e6c9      	b.n	8d3a <_dtoa_r+0x9ee>
    8fa6:	2800      	cmp	r0, #0
    8fa8:	d103      	bne.n	8fb2 <_dtoa_r+0xc66>
    8faa:	07f3      	lsls	r3, r6, #31
    8fac:	d501      	bpl.n	8fb2 <_dtoa_r+0xc66>
    8fae:	e6b5      	b.n	8d1c <_dtoa_r+0x9d0>
    8fb0:	001c      	movs	r4, r3
    8fb2:	1e63      	subs	r3, r4, #1
    8fb4:	781a      	ldrb	r2, [r3, #0]
    8fb6:	2a30      	cmp	r2, #48	; 0x30
    8fb8:	d0fa      	beq.n	8fb0 <_dtoa_r+0xc64>
    8fba:	e6be      	b.n	8d3a <_dtoa_r+0x9ee>
    8fbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8fbe:	4699      	mov	r9, r3
    8fc0:	9e10      	ldr	r6, [sp, #64]	; 0x40
    8fc2:	9f11      	ldr	r7, [sp, #68]	; 0x44
    8fc4:	e435      	b.n	8832 <_dtoa_r+0x4e6>
    8fc6:	2501      	movs	r5, #1
    8fc8:	f7ff fab4 	bl	8534 <_dtoa_r+0x1e8>
    8fcc:	9b03      	ldr	r3, [sp, #12]
    8fce:	2b00      	cmp	r3, #0
    8fd0:	d100      	bne.n	8fd4 <_dtoa_r+0xc88>
    8fd2:	e0d4      	b.n	917e <_dtoa_r+0xe32>
    8fd4:	9810      	ldr	r0, [sp, #64]	; 0x40
    8fd6:	9911      	ldr	r1, [sp, #68]	; 0x44
    8fd8:	425c      	negs	r4, r3
    8fda:	230f      	movs	r3, #15
    8fdc:	4a26      	ldr	r2, [pc, #152]	; (9078 <_dtoa_r+0xd2c>)
    8fde:	4023      	ands	r3, r4
    8fe0:	00db      	lsls	r3, r3, #3
    8fe2:	18d3      	adds	r3, r2, r3
    8fe4:	681a      	ldr	r2, [r3, #0]
    8fe6:	685b      	ldr	r3, [r3, #4]
    8fe8:	f7fb fa1a 	bl	4420 <__aeabi_dmul>
    8fec:	1124      	asrs	r4, r4, #4
    8fee:	0006      	movs	r6, r0
    8ff0:	000f      	movs	r7, r1
    8ff2:	2c00      	cmp	r4, #0
    8ff4:	d100      	bne.n	8ff8 <_dtoa_r+0xcac>
    8ff6:	e149      	b.n	928c <_dtoa_r+0xf40>
    8ff8:	2302      	movs	r3, #2
    8ffa:	4698      	mov	r8, r3
    8ffc:	4d1f      	ldr	r5, [pc, #124]	; (907c <_dtoa_r+0xd30>)
    8ffe:	2301      	movs	r3, #1
    9000:	4223      	tst	r3, r4
    9002:	d009      	beq.n	9018 <_dtoa_r+0xccc>
    9004:	469c      	mov	ip, r3
    9006:	682a      	ldr	r2, [r5, #0]
    9008:	686b      	ldr	r3, [r5, #4]
    900a:	0030      	movs	r0, r6
    900c:	0039      	movs	r1, r7
    900e:	44e0      	add	r8, ip
    9010:	f7fb fa06 	bl	4420 <__aeabi_dmul>
    9014:	0006      	movs	r6, r0
    9016:	000f      	movs	r7, r1
    9018:	1064      	asrs	r4, r4, #1
    901a:	3508      	adds	r5, #8
    901c:	2c00      	cmp	r4, #0
    901e:	d1ee      	bne.n	8ffe <_dtoa_r+0xcb2>
    9020:	f7ff fae4 	bl	85ec <_dtoa_r+0x2a0>
    9024:	9b03      	ldr	r3, [sp, #12]
    9026:	2730      	movs	r7, #48	; 0x30
    9028:	3301      	adds	r3, #1
    902a:	9303      	str	r3, [sp, #12]
    902c:	2330      	movs	r3, #48	; 0x30
    902e:	702b      	strb	r3, [r5, #0]
    9030:	e4ac      	b.n	898c <_dtoa_r+0x640>
    9032:	6859      	ldr	r1, [r3, #4]
    9034:	4650      	mov	r0, sl
    9036:	f000 fe8b 	bl	9d50 <_Balloc>
    903a:	4643      	mov	r3, r8
    903c:	4641      	mov	r1, r8
    903e:	0004      	movs	r4, r0
    9040:	691b      	ldr	r3, [r3, #16]
    9042:	310c      	adds	r1, #12
    9044:	1c9a      	adds	r2, r3, #2
    9046:	0092      	lsls	r2, r2, #2
    9048:	300c      	adds	r0, #12
    904a:	f000 fe2f 	bl	9cac <memcpy>
    904e:	2201      	movs	r2, #1
    9050:	0021      	movs	r1, r4
    9052:	4650      	mov	r0, sl
    9054:	f001 f89a 	bl	a18c <__lshift>
    9058:	900c      	str	r0, [sp, #48]	; 0x30
    905a:	e599      	b.n	8b90 <_dtoa_r+0x844>
    905c:	2300      	movs	r3, #0
    905e:	4699      	mov	r9, r3
    9060:	4698      	mov	r8, r3
    9062:	e70c      	b.n	8e7e <_dtoa_r+0xb32>
    9064:	7ff00000 	.word	0x7ff00000
    9068:	40140000 	.word	0x40140000
    906c:	00000433 	.word	0x00000433
    9070:	401c0000 	.word	0x401c0000
    9074:	fcc00000 	.word	0xfcc00000
    9078:	0000ebf0 	.word	0x0000ebf0
    907c:	0000ebc8 	.word	0x0000ebc8
    9080:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9082:	498f      	ldr	r1, [pc, #572]	; (92c0 <_dtoa_r+0xf74>)
    9084:	3b01      	subs	r3, #1
    9086:	00db      	lsls	r3, r3, #3
    9088:	18c9      	adds	r1, r1, r3
    908a:	6808      	ldr	r0, [r1, #0]
    908c:	6849      	ldr	r1, [r1, #4]
    908e:	9a08      	ldr	r2, [sp, #32]
    9090:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9092:	f7fb f9c5 	bl	4420 <__aeabi_dmul>
    9096:	9014      	str	r0, [sp, #80]	; 0x50
    9098:	9115      	str	r1, [sp, #84]	; 0x54
    909a:	0039      	movs	r1, r7
    909c:	0030      	movs	r0, r6
    909e:	f7fb ff55 	bl	4f4c <__aeabi_d2iz>
    90a2:	0005      	movs	r5, r0
    90a4:	f7fb ff86 	bl	4fb4 <__aeabi_i2d>
    90a8:	0002      	movs	r2, r0
    90aa:	000b      	movs	r3, r1
    90ac:	0030      	movs	r0, r6
    90ae:	0039      	movs	r1, r7
    90b0:	f7fb fc36 	bl	4920 <__aeabi_dsub>
    90b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    90b6:	9008      	str	r0, [sp, #32]
    90b8:	9109      	str	r1, [sp, #36]	; 0x24
    90ba:	990a      	ldr	r1, [sp, #40]	; 0x28
    90bc:	001a      	movs	r2, r3
    90be:	468c      	mov	ip, r1
    90c0:	3530      	adds	r5, #48	; 0x30
    90c2:	4462      	add	r2, ip
    90c4:	1c4c      	adds	r4, r1, #1
    90c6:	700d      	strb	r5, [r1, #0]
    90c8:	4690      	mov	r8, r2
    90ca:	2b01      	cmp	r3, #1
    90cc:	d01b      	beq.n	9106 <_dtoa_r+0xdba>
    90ce:	9808      	ldr	r0, [sp, #32]
    90d0:	9909      	ldr	r1, [sp, #36]	; 0x24
    90d2:	0025      	movs	r5, r4
    90d4:	2200      	movs	r2, #0
    90d6:	4b7b      	ldr	r3, [pc, #492]	; (92c4 <_dtoa_r+0xf78>)
    90d8:	f7fb f9a2 	bl	4420 <__aeabi_dmul>
    90dc:	000f      	movs	r7, r1
    90de:	0006      	movs	r6, r0
    90e0:	f7fb ff34 	bl	4f4c <__aeabi_d2iz>
    90e4:	0004      	movs	r4, r0
    90e6:	f7fb ff65 	bl	4fb4 <__aeabi_i2d>
    90ea:	3430      	adds	r4, #48	; 0x30
    90ec:	0002      	movs	r2, r0
    90ee:	000b      	movs	r3, r1
    90f0:	0030      	movs	r0, r6
    90f2:	0039      	movs	r1, r7
    90f4:	f7fb fc14 	bl	4920 <__aeabi_dsub>
    90f8:	702c      	strb	r4, [r5, #0]
    90fa:	3501      	adds	r5, #1
    90fc:	45a8      	cmp	r8, r5
    90fe:	d1e9      	bne.n	90d4 <_dtoa_r+0xd88>
    9100:	4644      	mov	r4, r8
    9102:	9008      	str	r0, [sp, #32]
    9104:	9109      	str	r1, [sp, #36]	; 0x24
    9106:	9814      	ldr	r0, [sp, #80]	; 0x50
    9108:	9915      	ldr	r1, [sp, #84]	; 0x54
    910a:	2200      	movs	r2, #0
    910c:	4b6e      	ldr	r3, [pc, #440]	; (92c8 <_dtoa_r+0xf7c>)
    910e:	f003 fda7 	bl	cc60 <__aeabi_dadd>
    9112:	9a08      	ldr	r2, [sp, #32]
    9114:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9116:	f7fc f82f 	bl	5178 <__aeabi_dcmplt>
    911a:	2800      	cmp	r0, #0
    911c:	d067      	beq.n	91ee <_dtoa_r+0xea2>
    911e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9120:	1e65      	subs	r5, r4, #1
    9122:	9303      	str	r3, [sp, #12]
    9124:	782f      	ldrb	r7, [r5, #0]
    9126:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9128:	e42e      	b.n	8988 <_dtoa_r+0x63c>
    912a:	4643      	mov	r3, r8
    912c:	46b3      	mov	fp, r6
    912e:	930c      	str	r3, [sp, #48]	; 0x30
    9130:	9e04      	ldr	r6, [sp, #16]
    9132:	9b06      	ldr	r3, [sp, #24]
    9134:	46a8      	mov	r8, r5
    9136:	4699      	mov	r9, r3
    9138:	4655      	mov	r5, sl
    913a:	46ba      	mov	sl, r7
    913c:	2e39      	cmp	r6, #57	; 0x39
    913e:	d04d      	beq.n	91dc <_dtoa_r+0xe90>
    9140:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9142:	3601      	adds	r6, #1
    9144:	4647      	mov	r7, r8
    9146:	1c6c      	adds	r4, r5, #1
    9148:	702e      	strb	r6, [r5, #0]
    914a:	4698      	mov	r8, r3
    914c:	e5f5      	b.n	8d3a <_dtoa_r+0x9ee>
    914e:	4642      	mov	r2, r8
    9150:	9b06      	ldr	r3, [sp, #24]
    9152:	46b3      	mov	fp, r6
    9154:	46ba      	mov	sl, r7
    9156:	9e04      	ldr	r6, [sp, #16]
    9158:	4699      	mov	r9, r3
    915a:	002f      	movs	r7, r5
    915c:	4690      	mov	r8, r2
    915e:	e5d1      	b.n	8d04 <_dtoa_r+0x9b8>
    9160:	9b06      	ldr	r3, [sp, #24]
    9162:	9a07      	ldr	r2, [sp, #28]
    9164:	1a9b      	subs	r3, r3, r2
    9166:	9308      	str	r3, [sp, #32]
    9168:	2300      	movs	r3, #0
    916a:	e427      	b.n	89bc <_dtoa_r+0x670>
    916c:	2401      	movs	r4, #1
    916e:	e5c5      	b.n	8cfc <_dtoa_r+0x9b0>
    9170:	2336      	movs	r3, #54	; 0x36
    9172:	9a16      	ldr	r2, [sp, #88]	; 0x58
    9174:	464c      	mov	r4, r9
    9176:	1a9b      	subs	r3, r3, r2
    9178:	9a06      	ldr	r2, [sp, #24]
    917a:	9208      	str	r2, [sp, #32]
    917c:	e41e      	b.n	89bc <_dtoa_r+0x670>
    917e:	2302      	movs	r3, #2
    9180:	9e10      	ldr	r6, [sp, #64]	; 0x40
    9182:	9f11      	ldr	r7, [sp, #68]	; 0x44
    9184:	4698      	mov	r8, r3
    9186:	f7ff fa31 	bl	85ec <_dtoa_r+0x2a0>
    918a:	9b07      	ldr	r3, [sp, #28]
    918c:	2b00      	cmp	r3, #0
    918e:	d100      	bne.n	9192 <_dtoa_r+0xe46>
    9190:	e68e      	b.n	8eb0 <_dtoa_r+0xb64>
    9192:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    9194:	2c00      	cmp	r4, #0
    9196:	dc00      	bgt.n	919a <_dtoa_r+0xe4e>
    9198:	e712      	b.n	8fc0 <_dtoa_r+0xc74>
    919a:	9b03      	ldr	r3, [sp, #12]
    919c:	2200      	movs	r2, #0
    919e:	3b01      	subs	r3, #1
    91a0:	9313      	str	r3, [sp, #76]	; 0x4c
    91a2:	0030      	movs	r0, r6
    91a4:	4b47      	ldr	r3, [pc, #284]	; (92c4 <_dtoa_r+0xf78>)
    91a6:	0039      	movs	r1, r7
    91a8:	f7fb f93a 	bl	4420 <__aeabi_dmul>
    91ac:	0006      	movs	r6, r0
    91ae:	4640      	mov	r0, r8
    91b0:	000f      	movs	r7, r1
    91b2:	3001      	adds	r0, #1
    91b4:	f7fb fefe 	bl	4fb4 <__aeabi_i2d>
    91b8:	0032      	movs	r2, r6
    91ba:	003b      	movs	r3, r7
    91bc:	f7fb f930 	bl	4420 <__aeabi_dmul>
    91c0:	2200      	movs	r2, #0
    91c2:	4b42      	ldr	r3, [pc, #264]	; (92cc <_dtoa_r+0xf80>)
    91c4:	f003 fd4c 	bl	cc60 <__aeabi_dadd>
    91c8:	4a41      	ldr	r2, [pc, #260]	; (92d0 <_dtoa_r+0xf84>)
    91ca:	000b      	movs	r3, r1
    91cc:	4694      	mov	ip, r2
    91ce:	4463      	add	r3, ip
    91d0:	9008      	str	r0, [sp, #32]
    91d2:	9109      	str	r1, [sp, #36]	; 0x24
    91d4:	9412      	str	r4, [sp, #72]	; 0x48
    91d6:	9309      	str	r3, [sp, #36]	; 0x24
    91d8:	f7ff fa30 	bl	863c <_dtoa_r+0x2f0>
    91dc:	2339      	movs	r3, #57	; 0x39
    91de:	702b      	strb	r3, [r5, #0]
    91e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    91e2:	4647      	mov	r7, r8
    91e4:	1c6c      	adds	r4, r5, #1
    91e6:	4698      	mov	r8, r3
    91e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    91ea:	2339      	movs	r3, #57	; 0x39
    91ec:	e5a1      	b.n	8d32 <_dtoa_r+0x9e6>
    91ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
    91f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
    91f2:	2000      	movs	r0, #0
    91f4:	4934      	ldr	r1, [pc, #208]	; (92c8 <_dtoa_r+0xf7c>)
    91f6:	f7fb fb93 	bl	4920 <__aeabi_dsub>
    91fa:	9a08      	ldr	r2, [sp, #32]
    91fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    91fe:	f7fb ffcf 	bl	51a0 <__aeabi_dcmpgt>
    9202:	2800      	cmp	r0, #0
    9204:	d101      	bne.n	920a <_dtoa_r+0xebe>
    9206:	e6db      	b.n	8fc0 <_dtoa_r+0xc74>
    9208:	001c      	movs	r4, r3
    920a:	1e63      	subs	r3, r4, #1
    920c:	781a      	ldrb	r2, [r3, #0]
    920e:	2a30      	cmp	r2, #48	; 0x30
    9210:	d0fa      	beq.n	9208 <_dtoa_r+0xebc>
    9212:	f7ff fac8 	bl	87a6 <_dtoa_r+0x45a>
    9216:	4643      	mov	r3, r8
    9218:	46b3      	mov	fp, r6
    921a:	930c      	str	r3, [sp, #48]	; 0x30
    921c:	9e04      	ldr	r6, [sp, #16]
    921e:	9b06      	ldr	r3, [sp, #24]
    9220:	46a8      	mov	r8, r5
    9222:	4699      	mov	r9, r3
    9224:	4655      	mov	r5, sl
    9226:	46ba      	mov	sl, r7
    9228:	2e39      	cmp	r6, #57	; 0x39
    922a:	d0d7      	beq.n	91dc <_dtoa_r+0xe90>
    922c:	2c00      	cmp	r4, #0
    922e:	dd00      	ble.n	9232 <_dtoa_r+0xee6>
    9230:	e6b1      	b.n	8f96 <_dtoa_r+0xc4a>
    9232:	e6b2      	b.n	8f9a <_dtoa_r+0xc4e>
    9234:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    9236:	464d      	mov	r5, r9
    9238:	9203      	str	r2, [sp, #12]
    923a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    923c:	f7ff fba4 	bl	8988 <_dtoa_r+0x63c>
    9240:	2800      	cmp	r0, #0
    9242:	d000      	beq.n	9246 <_dtoa_r+0xefa>
    9244:	e6a9      	b.n	8f9a <_dtoa_r+0xc4e>
    9246:	07f3      	lsls	r3, r6, #31
    9248:	d400      	bmi.n	924c <_dtoa_r+0xf00>
    924a:	e6a6      	b.n	8f9a <_dtoa_r+0xc4e>
    924c:	e6a0      	b.n	8f90 <_dtoa_r+0xc44>
    924e:	2300      	movs	r3, #0
    9250:	4641      	mov	r1, r8
    9252:	220a      	movs	r2, #10
    9254:	4650      	mov	r0, sl
    9256:	f000 fdad 	bl	9db4 <__multadd>
    925a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    925c:	4680      	mov	r8, r0
    925e:	2b00      	cmp	r3, #0
    9260:	dd01      	ble.n	9266 <_dtoa_r+0xf1a>
    9262:	9307      	str	r3, [sp, #28]
    9264:	e486      	b.n	8b74 <_dtoa_r+0x828>
    9266:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9268:	2b02      	cmp	r3, #2
    926a:	dc1f      	bgt.n	92ac <_dtoa_r+0xf60>
    926c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    926e:	9307      	str	r3, [sp, #28]
    9270:	e480      	b.n	8b74 <_dtoa_r+0x828>
    9272:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9274:	2b02      	cmp	r3, #2
    9276:	dc19      	bgt.n	92ac <_dtoa_r+0xf60>
    9278:	4649      	mov	r1, r9
    927a:	f7fe ffbd 	bl	81f8 <quorem>
    927e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9280:	3030      	adds	r0, #48	; 0x30
    9282:	7018      	strb	r0, [r3, #0]
    9284:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9286:	0006      	movs	r6, r0
    9288:	9307      	str	r3, [sp, #28]
    928a:	e533      	b.n	8cf4 <_dtoa_r+0x9a8>
    928c:	2302      	movs	r3, #2
    928e:	4698      	mov	r8, r3
    9290:	f7ff f9ac 	bl	85ec <_dtoa_r+0x2a0>
    9294:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9296:	9c14      	ldr	r4, [sp, #80]	; 0x50
    9298:	9303      	str	r3, [sp, #12]
    929a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    929c:	001d      	movs	r5, r3
    929e:	f7ff fb73 	bl	8988 <_dtoa_r+0x63c>
    92a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    92a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
    92a6:	9303      	str	r3, [sp, #12]
    92a8:	f7ff fa7f 	bl	87aa <_dtoa_r+0x45e>
    92ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    92ae:	9307      	str	r3, [sp, #28]
    92b0:	e5d6      	b.n	8e60 <_dtoa_r+0xb14>
    92b2:	2b04      	cmp	r3, #4
    92b4:	d100      	bne.n	92b8 <_dtoa_r+0xf6c>
    92b6:	e43f      	b.n	8b38 <_dtoa_r+0x7ec>
    92b8:	233c      	movs	r3, #60	; 0x3c
    92ba:	1a18      	subs	r0, r3, r0
    92bc:	e4d7      	b.n	8c6e <_dtoa_r+0x922>
    92be:	46c0      	nop			; (mov r8, r8)
    92c0:	0000ebf0 	.word	0x0000ebf0
    92c4:	40240000 	.word	0x40240000
    92c8:	3fe00000 	.word	0x3fe00000
    92cc:	401c0000 	.word	0x401c0000
    92d0:	fcc00000 	.word	0xfcc00000

000092d4 <__libc_fini_array>:
    92d4:	b570      	push	{r4, r5, r6, lr}
    92d6:	4b09      	ldr	r3, [pc, #36]	; (92fc <__libc_fini_array+0x28>)
    92d8:	4c09      	ldr	r4, [pc, #36]	; (9300 <__libc_fini_array+0x2c>)
    92da:	1ae4      	subs	r4, r4, r3
    92dc:	10a4      	asrs	r4, r4, #2
    92de:	d009      	beq.n	92f4 <__libc_fini_array+0x20>
    92e0:	4a08      	ldr	r2, [pc, #32]	; (9304 <__libc_fini_array+0x30>)
    92e2:	18a5      	adds	r5, r4, r2
    92e4:	00ad      	lsls	r5, r5, #2
    92e6:	18ed      	adds	r5, r5, r3
    92e8:	682b      	ldr	r3, [r5, #0]
    92ea:	3c01      	subs	r4, #1
    92ec:	4798      	blx	r3
    92ee:	3d04      	subs	r5, #4
    92f0:	2c00      	cmp	r4, #0
    92f2:	d1f9      	bne.n	92e8 <__libc_fini_array+0x14>
    92f4:	f005 fe8c 	bl	f010 <_fini>
    92f8:	bd70      	pop	{r4, r5, r6, pc}
    92fa:	46c0      	nop			; (mov r8, r8)
    92fc:	0000f01c 	.word	0x0000f01c
    9300:	0000f020 	.word	0x0000f020
    9304:	3fffffff 	.word	0x3fffffff

00009308 <_malloc_trim_r>:
    9308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    930a:	000c      	movs	r4, r1
    930c:	0006      	movs	r6, r0
    930e:	f000 fd0f 	bl	9d30 <__malloc_lock>
    9312:	4f20      	ldr	r7, [pc, #128]	; (9394 <_malloc_trim_r+0x8c>)
    9314:	68bb      	ldr	r3, [r7, #8]
    9316:	685d      	ldr	r5, [r3, #4]
    9318:	2303      	movs	r3, #3
    931a:	439d      	bics	r5, r3
    931c:	4b1e      	ldr	r3, [pc, #120]	; (9398 <_malloc_trim_r+0x90>)
    931e:	1b2c      	subs	r4, r5, r4
    9320:	469c      	mov	ip, r3
    9322:	4464      	add	r4, ip
    9324:	0b24      	lsrs	r4, r4, #12
    9326:	4b1d      	ldr	r3, [pc, #116]	; (939c <_malloc_trim_r+0x94>)
    9328:	3c01      	subs	r4, #1
    932a:	0324      	lsls	r4, r4, #12
    932c:	429c      	cmp	r4, r3
    932e:	dd07      	ble.n	9340 <_malloc_trim_r+0x38>
    9330:	2100      	movs	r1, #0
    9332:	0030      	movs	r0, r6
    9334:	f001 f9ba 	bl	a6ac <_sbrk_r>
    9338:	68bb      	ldr	r3, [r7, #8]
    933a:	195b      	adds	r3, r3, r5
    933c:	4298      	cmp	r0, r3
    933e:	d004      	beq.n	934a <_malloc_trim_r+0x42>
    9340:	0030      	movs	r0, r6
    9342:	f000 fcfd 	bl	9d40 <__malloc_unlock>
    9346:	2000      	movs	r0, #0
    9348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    934a:	4261      	negs	r1, r4
    934c:	0030      	movs	r0, r6
    934e:	f001 f9ad 	bl	a6ac <_sbrk_r>
    9352:	1c43      	adds	r3, r0, #1
    9354:	d00d      	beq.n	9372 <_malloc_trim_r+0x6a>
    9356:	2201      	movs	r2, #1
    9358:	68bb      	ldr	r3, [r7, #8]
    935a:	1b2d      	subs	r5, r5, r4
    935c:	4315      	orrs	r5, r2
    935e:	605d      	str	r5, [r3, #4]
    9360:	4b0f      	ldr	r3, [pc, #60]	; (93a0 <_malloc_trim_r+0x98>)
    9362:	0030      	movs	r0, r6
    9364:	681a      	ldr	r2, [r3, #0]
    9366:	1b14      	subs	r4, r2, r4
    9368:	601c      	str	r4, [r3, #0]
    936a:	f000 fce9 	bl	9d40 <__malloc_unlock>
    936e:	2001      	movs	r0, #1
    9370:	e7ea      	b.n	9348 <_malloc_trim_r+0x40>
    9372:	2100      	movs	r1, #0
    9374:	0030      	movs	r0, r6
    9376:	f001 f999 	bl	a6ac <_sbrk_r>
    937a:	68ba      	ldr	r2, [r7, #8]
    937c:	1a83      	subs	r3, r0, r2
    937e:	2b0f      	cmp	r3, #15
    9380:	ddde      	ble.n	9340 <_malloc_trim_r+0x38>
    9382:	4908      	ldr	r1, [pc, #32]	; (93a4 <_malloc_trim_r+0x9c>)
    9384:	6809      	ldr	r1, [r1, #0]
    9386:	1a40      	subs	r0, r0, r1
    9388:	4905      	ldr	r1, [pc, #20]	; (93a0 <_malloc_trim_r+0x98>)
    938a:	6008      	str	r0, [r1, #0]
    938c:	2101      	movs	r1, #1
    938e:	430b      	orrs	r3, r1
    9390:	6053      	str	r3, [r2, #4]
    9392:	e7d5      	b.n	9340 <_malloc_trim_r+0x38>
    9394:	20000630 	.word	0x20000630
    9398:	00000fef 	.word	0x00000fef
    939c:	00000fff 	.word	0x00000fff
    93a0:	20000ac0 	.word	0x20000ac0
    93a4:	20000a38 	.word	0x20000a38

000093a8 <_free_r>:
    93a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    93aa:	0004      	movs	r4, r0
    93ac:	1e0d      	subs	r5, r1, #0
    93ae:	d03c      	beq.n	942a <_free_r+0x82>
    93b0:	f000 fcbe 	bl	9d30 <__malloc_lock>
    93b4:	0029      	movs	r1, r5
    93b6:	3908      	subs	r1, #8
    93b8:	6848      	ldr	r0, [r1, #4]
    93ba:	2301      	movs	r3, #1
    93bc:	0005      	movs	r5, r0
    93be:	2603      	movs	r6, #3
    93c0:	439d      	bics	r5, r3
    93c2:	194a      	adds	r2, r1, r5
    93c4:	469c      	mov	ip, r3
    93c6:	4f61      	ldr	r7, [pc, #388]	; (954c <_free_r+0x1a4>)
    93c8:	6853      	ldr	r3, [r2, #4]
    93ca:	43b3      	bics	r3, r6
    93cc:	68be      	ldr	r6, [r7, #8]
    93ce:	42b2      	cmp	r2, r6
    93d0:	d056      	beq.n	9480 <_free_r+0xd8>
    93d2:	4666      	mov	r6, ip
    93d4:	6053      	str	r3, [r2, #4]
    93d6:	4206      	tst	r6, r0
    93d8:	d10a      	bne.n	93f0 <_free_r+0x48>
    93da:	003e      	movs	r6, r7
    93dc:	6808      	ldr	r0, [r1, #0]
    93de:	3608      	adds	r6, #8
    93e0:	1a09      	subs	r1, r1, r0
    93e2:	182d      	adds	r5, r5, r0
    93e4:	6888      	ldr	r0, [r1, #8]
    93e6:	42b0      	cmp	r0, r6
    93e8:	d065      	beq.n	94b6 <_free_r+0x10e>
    93ea:	68ce      	ldr	r6, [r1, #12]
    93ec:	60c6      	str	r6, [r0, #12]
    93ee:	60b0      	str	r0, [r6, #8]
    93f0:	2001      	movs	r0, #1
    93f2:	18d6      	adds	r6, r2, r3
    93f4:	6876      	ldr	r6, [r6, #4]
    93f6:	4206      	tst	r6, r0
    93f8:	d033      	beq.n	9462 <_free_r+0xba>
    93fa:	4b55      	ldr	r3, [pc, #340]	; (9550 <_free_r+0x1a8>)
    93fc:	4328      	orrs	r0, r5
    93fe:	6048      	str	r0, [r1, #4]
    9400:	514d      	str	r5, [r1, r5]
    9402:	429d      	cmp	r5, r3
    9404:	d812      	bhi.n	942c <_free_r+0x84>
    9406:	08ed      	lsrs	r5, r5, #3
    9408:	3bff      	subs	r3, #255	; 0xff
    940a:	10aa      	asrs	r2, r5, #2
    940c:	3bff      	subs	r3, #255	; 0xff
    940e:	4093      	lsls	r3, r2
    9410:	687a      	ldr	r2, [r7, #4]
    9412:	00ed      	lsls	r5, r5, #3
    9414:	4313      	orrs	r3, r2
    9416:	607b      	str	r3, [r7, #4]
    9418:	19ef      	adds	r7, r5, r7
    941a:	68bb      	ldr	r3, [r7, #8]
    941c:	60cf      	str	r7, [r1, #12]
    941e:	608b      	str	r3, [r1, #8]
    9420:	60b9      	str	r1, [r7, #8]
    9422:	60d9      	str	r1, [r3, #12]
    9424:	0020      	movs	r0, r4
    9426:	f000 fc8b 	bl	9d40 <__malloc_unlock>
    942a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    942c:	0a68      	lsrs	r0, r5, #9
    942e:	2804      	cmp	r0, #4
    9430:	d850      	bhi.n	94d4 <_free_r+0x12c>
    9432:	09a8      	lsrs	r0, r5, #6
    9434:	0002      	movs	r2, r0
    9436:	3039      	adds	r0, #57	; 0x39
    9438:	3238      	adds	r2, #56	; 0x38
    943a:	00c0      	lsls	r0, r0, #3
    943c:	1838      	adds	r0, r7, r0
    943e:	3808      	subs	r0, #8
    9440:	6883      	ldr	r3, [r0, #8]
    9442:	2603      	movs	r6, #3
    9444:	4298      	cmp	r0, r3
    9446:	d04c      	beq.n	94e2 <_free_r+0x13a>
    9448:	685a      	ldr	r2, [r3, #4]
    944a:	43b2      	bics	r2, r6
    944c:	4295      	cmp	r5, r2
    944e:	d230      	bcs.n	94b2 <_free_r+0x10a>
    9450:	689b      	ldr	r3, [r3, #8]
    9452:	4298      	cmp	r0, r3
    9454:	d1f8      	bne.n	9448 <_free_r+0xa0>
    9456:	68c3      	ldr	r3, [r0, #12]
    9458:	60cb      	str	r3, [r1, #12]
    945a:	6088      	str	r0, [r1, #8]
    945c:	6099      	str	r1, [r3, #8]
    945e:	60c1      	str	r1, [r0, #12]
    9460:	e7e0      	b.n	9424 <_free_r+0x7c>
    9462:	18ed      	adds	r5, r5, r3
    9464:	4e3b      	ldr	r6, [pc, #236]	; (9554 <_free_r+0x1ac>)
    9466:	6893      	ldr	r3, [r2, #8]
    9468:	42b3      	cmp	r3, r6
    946a:	d042      	beq.n	94f2 <_free_r+0x14a>
    946c:	68d2      	ldr	r2, [r2, #12]
    946e:	4328      	orrs	r0, r5
    9470:	60da      	str	r2, [r3, #12]
    9472:	6093      	str	r3, [r2, #8]
    9474:	4b36      	ldr	r3, [pc, #216]	; (9550 <_free_r+0x1a8>)
    9476:	6048      	str	r0, [r1, #4]
    9478:	514d      	str	r5, [r1, r5]
    947a:	429d      	cmp	r5, r3
    947c:	d8d6      	bhi.n	942c <_free_r+0x84>
    947e:	e7c2      	b.n	9406 <_free_r+0x5e>
    9480:	4662      	mov	r2, ip
    9482:	18eb      	adds	r3, r5, r3
    9484:	4202      	tst	r2, r0
    9486:	d106      	bne.n	9496 <_free_r+0xee>
    9488:	680a      	ldr	r2, [r1, #0]
    948a:	1a89      	subs	r1, r1, r2
    948c:	6888      	ldr	r0, [r1, #8]
    948e:	189b      	adds	r3, r3, r2
    9490:	68ca      	ldr	r2, [r1, #12]
    9492:	60c2      	str	r2, [r0, #12]
    9494:	6090      	str	r0, [r2, #8]
    9496:	2201      	movs	r2, #1
    9498:	431a      	orrs	r2, r3
    949a:	604a      	str	r2, [r1, #4]
    949c:	4a2e      	ldr	r2, [pc, #184]	; (9558 <_free_r+0x1b0>)
    949e:	60b9      	str	r1, [r7, #8]
    94a0:	6812      	ldr	r2, [r2, #0]
    94a2:	4293      	cmp	r3, r2
    94a4:	d3be      	bcc.n	9424 <_free_r+0x7c>
    94a6:	4b2d      	ldr	r3, [pc, #180]	; (955c <_free_r+0x1b4>)
    94a8:	0020      	movs	r0, r4
    94aa:	6819      	ldr	r1, [r3, #0]
    94ac:	f7ff ff2c 	bl	9308 <_malloc_trim_r>
    94b0:	e7b8      	b.n	9424 <_free_r+0x7c>
    94b2:	0018      	movs	r0, r3
    94b4:	e7cf      	b.n	9456 <_free_r+0xae>
    94b6:	4666      	mov	r6, ip
    94b8:	18d0      	adds	r0, r2, r3
    94ba:	6840      	ldr	r0, [r0, #4]
    94bc:	4230      	tst	r0, r6
    94be:	d13f      	bne.n	9540 <_free_r+0x198>
    94c0:	6890      	ldr	r0, [r2, #8]
    94c2:	195d      	adds	r5, r3, r5
    94c4:	68d3      	ldr	r3, [r2, #12]
    94c6:	60c3      	str	r3, [r0, #12]
    94c8:	6098      	str	r0, [r3, #8]
    94ca:	4663      	mov	r3, ip
    94cc:	432b      	orrs	r3, r5
    94ce:	604b      	str	r3, [r1, #4]
    94d0:	514d      	str	r5, [r1, r5]
    94d2:	e7a7      	b.n	9424 <_free_r+0x7c>
    94d4:	2814      	cmp	r0, #20
    94d6:	d814      	bhi.n	9502 <_free_r+0x15a>
    94d8:	0002      	movs	r2, r0
    94da:	305c      	adds	r0, #92	; 0x5c
    94dc:	325b      	adds	r2, #91	; 0x5b
    94de:	00c0      	lsls	r0, r0, #3
    94e0:	e7ac      	b.n	943c <_free_r+0x94>
    94e2:	2301      	movs	r3, #1
    94e4:	1092      	asrs	r2, r2, #2
    94e6:	4093      	lsls	r3, r2
    94e8:	687a      	ldr	r2, [r7, #4]
    94ea:	4313      	orrs	r3, r2
    94ec:	607b      	str	r3, [r7, #4]
    94ee:	0003      	movs	r3, r0
    94f0:	e7b2      	b.n	9458 <_free_r+0xb0>
    94f2:	4328      	orrs	r0, r5
    94f4:	60d9      	str	r1, [r3, #12]
    94f6:	6099      	str	r1, [r3, #8]
    94f8:	60cb      	str	r3, [r1, #12]
    94fa:	608b      	str	r3, [r1, #8]
    94fc:	6048      	str	r0, [r1, #4]
    94fe:	514d      	str	r5, [r1, r5]
    9500:	e790      	b.n	9424 <_free_r+0x7c>
    9502:	2854      	cmp	r0, #84	; 0x54
    9504:	d805      	bhi.n	9512 <_free_r+0x16a>
    9506:	0b28      	lsrs	r0, r5, #12
    9508:	0002      	movs	r2, r0
    950a:	306f      	adds	r0, #111	; 0x6f
    950c:	326e      	adds	r2, #110	; 0x6e
    950e:	00c0      	lsls	r0, r0, #3
    9510:	e794      	b.n	943c <_free_r+0x94>
    9512:	22aa      	movs	r2, #170	; 0xaa
    9514:	0052      	lsls	r2, r2, #1
    9516:	4290      	cmp	r0, r2
    9518:	d805      	bhi.n	9526 <_free_r+0x17e>
    951a:	0be8      	lsrs	r0, r5, #15
    951c:	0002      	movs	r2, r0
    951e:	3078      	adds	r0, #120	; 0x78
    9520:	3277      	adds	r2, #119	; 0x77
    9522:	00c0      	lsls	r0, r0, #3
    9524:	e78a      	b.n	943c <_free_r+0x94>
    9526:	4a0e      	ldr	r2, [pc, #56]	; (9560 <_free_r+0x1b8>)
    9528:	4290      	cmp	r0, r2
    952a:	d805      	bhi.n	9538 <_free_r+0x190>
    952c:	0ca8      	lsrs	r0, r5, #18
    952e:	0002      	movs	r2, r0
    9530:	307d      	adds	r0, #125	; 0x7d
    9532:	327c      	adds	r2, #124	; 0x7c
    9534:	00c0      	lsls	r0, r0, #3
    9536:	e781      	b.n	943c <_free_r+0x94>
    9538:	20fe      	movs	r0, #254	; 0xfe
    953a:	227e      	movs	r2, #126	; 0x7e
    953c:	0080      	lsls	r0, r0, #2
    953e:	e77d      	b.n	943c <_free_r+0x94>
    9540:	4663      	mov	r3, ip
    9542:	432b      	orrs	r3, r5
    9544:	604b      	str	r3, [r1, #4]
    9546:	6015      	str	r5, [r2, #0]
    9548:	e76c      	b.n	9424 <_free_r+0x7c>
    954a:	46c0      	nop			; (mov r8, r8)
    954c:	20000630 	.word	0x20000630
    9550:	000001ff 	.word	0x000001ff
    9554:	20000638 	.word	0x20000638
    9558:	20000a3c 	.word	0x20000a3c
    955c:	20000af0 	.word	0x20000af0
    9560:	00000554 	.word	0x00000554

00009564 <iswspace>:
    9564:	b510      	push	{r4, lr}
    9566:	0004      	movs	r4, r0
    9568:	2000      	movs	r0, #0
    956a:	2cff      	cmp	r4, #255	; 0xff
    956c:	d805      	bhi.n	957a <iswspace+0x16>
    956e:	f000 f819 	bl	95a4 <__locale_ctype_ptr>
    9572:	1904      	adds	r4, r0, r4
    9574:	2008      	movs	r0, #8
    9576:	7863      	ldrb	r3, [r4, #1]
    9578:	4018      	ands	r0, r3
    957a:	bd10      	pop	{r4, pc}

0000957c <__locale_mb_cur_max>:
    957c:	4b05      	ldr	r3, [pc, #20]	; (9594 <__locale_mb_cur_max+0x18>)
    957e:	681b      	ldr	r3, [r3, #0]
    9580:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9582:	2b00      	cmp	r3, #0
    9584:	d003      	beq.n	958e <__locale_mb_cur_max+0x12>
    9586:	2294      	movs	r2, #148	; 0x94
    9588:	0052      	lsls	r2, r2, #1
    958a:	5c98      	ldrb	r0, [r3, r2]
    958c:	4770      	bx	lr
    958e:	4b02      	ldr	r3, [pc, #8]	; (9598 <__locale_mb_cur_max+0x1c>)
    9590:	e7f9      	b.n	9586 <__locale_mb_cur_max+0xa>
    9592:	46c0      	nop			; (mov r8, r8)
    9594:	20000090 	.word	0x20000090
    9598:	200004c4 	.word	0x200004c4

0000959c <__locale_ctype_ptr_l>:
    959c:	23ec      	movs	r3, #236	; 0xec
    959e:	58c0      	ldr	r0, [r0, r3]
    95a0:	4770      	bx	lr
    95a2:	46c0      	nop			; (mov r8, r8)

000095a4 <__locale_ctype_ptr>:
    95a4:	4b04      	ldr	r3, [pc, #16]	; (95b8 <__locale_ctype_ptr+0x14>)
    95a6:	681b      	ldr	r3, [r3, #0]
    95a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    95aa:	2b00      	cmp	r3, #0
    95ac:	d002      	beq.n	95b4 <__locale_ctype_ptr+0x10>
    95ae:	22ec      	movs	r2, #236	; 0xec
    95b0:	5898      	ldr	r0, [r3, r2]
    95b2:	4770      	bx	lr
    95b4:	4b01      	ldr	r3, [pc, #4]	; (95bc <__locale_ctype_ptr+0x18>)
    95b6:	e7fa      	b.n	95ae <__locale_ctype_ptr+0xa>
    95b8:	20000090 	.word	0x20000090
    95bc:	200004c4 	.word	0x200004c4

000095c0 <__localeconv_l>:
    95c0:	30f0      	adds	r0, #240	; 0xf0
    95c2:	4770      	bx	lr

000095c4 <_localeconv_r>:
    95c4:	4b04      	ldr	r3, [pc, #16]	; (95d8 <_localeconv_r+0x14>)
    95c6:	681b      	ldr	r3, [r3, #0]
    95c8:	6b58      	ldr	r0, [r3, #52]	; 0x34
    95ca:	2800      	cmp	r0, #0
    95cc:	d001      	beq.n	95d2 <_localeconv_r+0xe>
    95ce:	30f0      	adds	r0, #240	; 0xf0
    95d0:	4770      	bx	lr
    95d2:	4802      	ldr	r0, [pc, #8]	; (95dc <_localeconv_r+0x18>)
    95d4:	e7fb      	b.n	95ce <_localeconv_r+0xa>
    95d6:	46c0      	nop			; (mov r8, r8)
    95d8:	20000090 	.word	0x20000090
    95dc:	200004c4 	.word	0x200004c4

000095e0 <__retarget_lock_acquire_recursive>:
    95e0:	4770      	bx	lr
    95e2:	46c0      	nop			; (mov r8, r8)

000095e4 <__retarget_lock_release_recursive>:
    95e4:	4770      	bx	lr
    95e6:	46c0      	nop			; (mov r8, r8)

000095e8 <_malloc_r>:
    95e8:	b5f0      	push	{r4, r5, r6, r7, lr}
    95ea:	4657      	mov	r7, sl
    95ec:	4645      	mov	r5, r8
    95ee:	46de      	mov	lr, fp
    95f0:	464e      	mov	r6, r9
    95f2:	b5e0      	push	{r5, r6, r7, lr}
    95f4:	000d      	movs	r5, r1
    95f6:	350b      	adds	r5, #11
    95f8:	b083      	sub	sp, #12
    95fa:	0007      	movs	r7, r0
    95fc:	2d16      	cmp	r5, #22
    95fe:	d800      	bhi.n	9602 <_malloc_r+0x1a>
    9600:	e09f      	b.n	9742 <_malloc_r+0x15a>
    9602:	2307      	movs	r3, #7
    9604:	439d      	bics	r5, r3
    9606:	d500      	bpl.n	960a <_malloc_r+0x22>
    9608:	e0c4      	b.n	9794 <_malloc_r+0x1ac>
    960a:	42a9      	cmp	r1, r5
    960c:	d900      	bls.n	9610 <_malloc_r+0x28>
    960e:	e0c1      	b.n	9794 <_malloc_r+0x1ac>
    9610:	f000 fb8e 	bl	9d30 <__malloc_lock>
    9614:	23f8      	movs	r3, #248	; 0xf8
    9616:	33ff      	adds	r3, #255	; 0xff
    9618:	429d      	cmp	r5, r3
    961a:	d800      	bhi.n	961e <_malloc_r+0x36>
    961c:	e28f      	b.n	9b3e <_malloc_r+0x556>
    961e:	0a68      	lsrs	r0, r5, #9
    9620:	d100      	bne.n	9624 <_malloc_r+0x3c>
    9622:	e0bb      	b.n	979c <_malloc_r+0x1b4>
    9624:	2804      	cmp	r0, #4
    9626:	d900      	bls.n	962a <_malloc_r+0x42>
    9628:	e162      	b.n	98f0 <_malloc_r+0x308>
    962a:	2338      	movs	r3, #56	; 0x38
    962c:	4698      	mov	r8, r3
    962e:	09a8      	lsrs	r0, r5, #6
    9630:	4480      	add	r8, r0
    9632:	3039      	adds	r0, #57	; 0x39
    9634:	00c1      	lsls	r1, r0, #3
    9636:	4ed2      	ldr	r6, [pc, #840]	; (9980 <_malloc_r+0x398>)
    9638:	1871      	adds	r1, r6, r1
    963a:	3908      	subs	r1, #8
    963c:	68cc      	ldr	r4, [r1, #12]
    963e:	42a1      	cmp	r1, r4
    9640:	d019      	beq.n	9676 <_malloc_r+0x8e>
    9642:	2303      	movs	r3, #3
    9644:	6862      	ldr	r2, [r4, #4]
    9646:	439a      	bics	r2, r3
    9648:	0013      	movs	r3, r2
    964a:	1b52      	subs	r2, r2, r5
    964c:	2a0f      	cmp	r2, #15
    964e:	dd00      	ble.n	9652 <_malloc_r+0x6a>
    9650:	e0aa      	b.n	97a8 <_malloc_r+0x1c0>
    9652:	2a00      	cmp	r2, #0
    9654:	db00      	blt.n	9658 <_malloc_r+0x70>
    9656:	e088      	b.n	976a <_malloc_r+0x182>
    9658:	2303      	movs	r3, #3
    965a:	469c      	mov	ip, r3
    965c:	e008      	b.n	9670 <_malloc_r+0x88>
    965e:	4662      	mov	r2, ip
    9660:	6863      	ldr	r3, [r4, #4]
    9662:	4393      	bics	r3, r2
    9664:	1b5a      	subs	r2, r3, r5
    9666:	2a0f      	cmp	r2, #15
    9668:	dd00      	ble.n	966c <_malloc_r+0x84>
    966a:	e09d      	b.n	97a8 <_malloc_r+0x1c0>
    966c:	2a00      	cmp	r2, #0
    966e:	da7c      	bge.n	976a <_malloc_r+0x182>
    9670:	68e4      	ldr	r4, [r4, #12]
    9672:	42a1      	cmp	r1, r4
    9674:	d1f3      	bne.n	965e <_malloc_r+0x76>
    9676:	0032      	movs	r2, r6
    9678:	6934      	ldr	r4, [r6, #16]
    967a:	3208      	adds	r2, #8
    967c:	4294      	cmp	r4, r2
    967e:	d100      	bne.n	9682 <_malloc_r+0x9a>
    9680:	e190      	b.n	99a4 <_malloc_r+0x3bc>
    9682:	2303      	movs	r3, #3
    9684:	6861      	ldr	r1, [r4, #4]
    9686:	4399      	bics	r1, r3
    9688:	4689      	mov	r9, r1
    968a:	1b49      	subs	r1, r1, r5
    968c:	290f      	cmp	r1, #15
    968e:	dd00      	ble.n	9692 <_malloc_r+0xaa>
    9690:	e162      	b.n	9958 <_malloc_r+0x370>
    9692:	6172      	str	r2, [r6, #20]
    9694:	6132      	str	r2, [r6, #16]
    9696:	2900      	cmp	r1, #0
    9698:	db00      	blt.n	969c <_malloc_r+0xb4>
    969a:	e087      	b.n	97ac <_malloc_r+0x1c4>
    969c:	4ab9      	ldr	r2, [pc, #740]	; (9984 <_malloc_r+0x39c>)
    969e:	464b      	mov	r3, r9
    96a0:	4591      	cmp	r9, r2
    96a2:	d900      	bls.n	96a6 <_malloc_r+0xbe>
    96a4:	e130      	b.n	9908 <_malloc_r+0x320>
    96a6:	08db      	lsrs	r3, r3, #3
    96a8:	3aff      	subs	r2, #255	; 0xff
    96aa:	1099      	asrs	r1, r3, #2
    96ac:	3aff      	subs	r2, #255	; 0xff
    96ae:	408a      	lsls	r2, r1
    96b0:	00db      	lsls	r3, r3, #3
    96b2:	6871      	ldr	r1, [r6, #4]
    96b4:	199b      	adds	r3, r3, r6
    96b6:	430a      	orrs	r2, r1
    96b8:	6899      	ldr	r1, [r3, #8]
    96ba:	6072      	str	r2, [r6, #4]
    96bc:	60e3      	str	r3, [r4, #12]
    96be:	60a1      	str	r1, [r4, #8]
    96c0:	609c      	str	r4, [r3, #8]
    96c2:	0013      	movs	r3, r2
    96c4:	60cc      	str	r4, [r1, #12]
    96c6:	2101      	movs	r1, #1
    96c8:	1082      	asrs	r2, r0, #2
    96ca:	4091      	lsls	r1, r2
    96cc:	4299      	cmp	r1, r3
    96ce:	d86f      	bhi.n	97b0 <_malloc_r+0x1c8>
    96d0:	420b      	tst	r3, r1
    96d2:	d105      	bne.n	96e0 <_malloc_r+0xf8>
    96d4:	2203      	movs	r2, #3
    96d6:	4390      	bics	r0, r2
    96d8:	0049      	lsls	r1, r1, #1
    96da:	3004      	adds	r0, #4
    96dc:	420b      	tst	r3, r1
    96de:	d0fb      	beq.n	96d8 <_malloc_r+0xf0>
    96e0:	2303      	movs	r3, #3
    96e2:	4698      	mov	r8, r3
    96e4:	00c3      	lsls	r3, r0, #3
    96e6:	4699      	mov	r9, r3
    96e8:	44b1      	add	r9, r6
    96ea:	46cc      	mov	ip, r9
    96ec:	4682      	mov	sl, r0
    96ee:	4663      	mov	r3, ip
    96f0:	68dc      	ldr	r4, [r3, #12]
    96f2:	45a4      	cmp	ip, r4
    96f4:	d107      	bne.n	9706 <_malloc_r+0x11e>
    96f6:	e157      	b.n	99a8 <_malloc_r+0x3c0>
    96f8:	2a00      	cmp	r2, #0
    96fa:	db00      	blt.n	96fe <_malloc_r+0x116>
    96fc:	e166      	b.n	99cc <_malloc_r+0x3e4>
    96fe:	68e4      	ldr	r4, [r4, #12]
    9700:	45a4      	cmp	ip, r4
    9702:	d100      	bne.n	9706 <_malloc_r+0x11e>
    9704:	e150      	b.n	99a8 <_malloc_r+0x3c0>
    9706:	4642      	mov	r2, r8
    9708:	6863      	ldr	r3, [r4, #4]
    970a:	4393      	bics	r3, r2
    970c:	1b5a      	subs	r2, r3, r5
    970e:	2a0f      	cmp	r2, #15
    9710:	ddf2      	ble.n	96f8 <_malloc_r+0x110>
    9712:	2001      	movs	r0, #1
    9714:	4680      	mov	r8, r0
    9716:	1961      	adds	r1, r4, r5
    9718:	4305      	orrs	r5, r0
    971a:	6065      	str	r5, [r4, #4]
    971c:	68a0      	ldr	r0, [r4, #8]
    971e:	68e5      	ldr	r5, [r4, #12]
    9720:	3608      	adds	r6, #8
    9722:	60c5      	str	r5, [r0, #12]
    9724:	60a8      	str	r0, [r5, #8]
    9726:	4640      	mov	r0, r8
    9728:	60f1      	str	r1, [r6, #12]
    972a:	60b1      	str	r1, [r6, #8]
    972c:	4310      	orrs	r0, r2
    972e:	6048      	str	r0, [r1, #4]
    9730:	60ce      	str	r6, [r1, #12]
    9732:	608e      	str	r6, [r1, #8]
    9734:	0038      	movs	r0, r7
    9736:	50e2      	str	r2, [r4, r3]
    9738:	f000 fb02 	bl	9d40 <__malloc_unlock>
    973c:	0020      	movs	r0, r4
    973e:	3008      	adds	r0, #8
    9740:	e021      	b.n	9786 <_malloc_r+0x19e>
    9742:	2910      	cmp	r1, #16
    9744:	d826      	bhi.n	9794 <_malloc_r+0x1ac>
    9746:	0038      	movs	r0, r7
    9748:	f000 faf2 	bl	9d30 <__malloc_lock>
    974c:	2510      	movs	r5, #16
    974e:	2318      	movs	r3, #24
    9750:	2002      	movs	r0, #2
    9752:	4e8b      	ldr	r6, [pc, #556]	; (9980 <_malloc_r+0x398>)
    9754:	18f3      	adds	r3, r6, r3
    9756:	001a      	movs	r2, r3
    9758:	685c      	ldr	r4, [r3, #4]
    975a:	3a08      	subs	r2, #8
    975c:	4294      	cmp	r4, r2
    975e:	d100      	bne.n	9762 <_malloc_r+0x17a>
    9760:	e12e      	b.n	99c0 <_malloc_r+0x3d8>
    9762:	2303      	movs	r3, #3
    9764:	6862      	ldr	r2, [r4, #4]
    9766:	439a      	bics	r2, r3
    9768:	0013      	movs	r3, r2
    976a:	68e2      	ldr	r2, [r4, #12]
    976c:	68a1      	ldr	r1, [r4, #8]
    976e:	60ca      	str	r2, [r1, #12]
    9770:	6091      	str	r1, [r2, #8]
    9772:	2201      	movs	r2, #1
    9774:	18e3      	adds	r3, r4, r3
    9776:	6859      	ldr	r1, [r3, #4]
    9778:	0038      	movs	r0, r7
    977a:	430a      	orrs	r2, r1
    977c:	605a      	str	r2, [r3, #4]
    977e:	f000 fadf 	bl	9d40 <__malloc_unlock>
    9782:	0020      	movs	r0, r4
    9784:	3008      	adds	r0, #8
    9786:	b003      	add	sp, #12
    9788:	bc3c      	pop	{r2, r3, r4, r5}
    978a:	4690      	mov	r8, r2
    978c:	4699      	mov	r9, r3
    978e:	46a2      	mov	sl, r4
    9790:	46ab      	mov	fp, r5
    9792:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9794:	230c      	movs	r3, #12
    9796:	2000      	movs	r0, #0
    9798:	603b      	str	r3, [r7, #0]
    979a:	e7f4      	b.n	9786 <_malloc_r+0x19e>
    979c:	2180      	movs	r1, #128	; 0x80
    979e:	233f      	movs	r3, #63	; 0x3f
    97a0:	2040      	movs	r0, #64	; 0x40
    97a2:	0089      	lsls	r1, r1, #2
    97a4:	4698      	mov	r8, r3
    97a6:	e746      	b.n	9636 <_malloc_r+0x4e>
    97a8:	4640      	mov	r0, r8
    97aa:	e764      	b.n	9676 <_malloc_r+0x8e>
    97ac:	464b      	mov	r3, r9
    97ae:	e7e0      	b.n	9772 <_malloc_r+0x18a>
    97b0:	2303      	movs	r3, #3
    97b2:	68b4      	ldr	r4, [r6, #8]
    97b4:	6862      	ldr	r2, [r4, #4]
    97b6:	439a      	bics	r2, r3
    97b8:	4690      	mov	r8, r2
    97ba:	42aa      	cmp	r2, r5
    97bc:	d303      	bcc.n	97c6 <_malloc_r+0x1de>
    97be:	1b53      	subs	r3, r2, r5
    97c0:	2b0f      	cmp	r3, #15
    97c2:	dd00      	ble.n	97c6 <_malloc_r+0x1de>
    97c4:	e086      	b.n	98d4 <_malloc_r+0x2ec>
    97c6:	0023      	movs	r3, r4
    97c8:	4443      	add	r3, r8
    97ca:	4a6f      	ldr	r2, [pc, #444]	; (9988 <_malloc_r+0x3a0>)
    97cc:	9301      	str	r3, [sp, #4]
    97ce:	4b6f      	ldr	r3, [pc, #444]	; (998c <_malloc_r+0x3a4>)
    97d0:	4693      	mov	fp, r2
    97d2:	681b      	ldr	r3, [r3, #0]
    97d4:	6812      	ldr	r2, [r2, #0]
    97d6:	18eb      	adds	r3, r5, r3
    97d8:	3201      	adds	r2, #1
    97da:	d100      	bne.n	97de <_malloc_r+0x1f6>
    97dc:	e168      	b.n	9ab0 <_malloc_r+0x4c8>
    97de:	4a6c      	ldr	r2, [pc, #432]	; (9990 <_malloc_r+0x3a8>)
    97e0:	4694      	mov	ip, r2
    97e2:	4463      	add	r3, ip
    97e4:	0b1b      	lsrs	r3, r3, #12
    97e6:	031b      	lsls	r3, r3, #12
    97e8:	9300      	str	r3, [sp, #0]
    97ea:	9900      	ldr	r1, [sp, #0]
    97ec:	0038      	movs	r0, r7
    97ee:	f000 ff5d 	bl	a6ac <_sbrk_r>
    97f2:	0003      	movs	r3, r0
    97f4:	4681      	mov	r9, r0
    97f6:	3301      	adds	r3, #1
    97f8:	d061      	beq.n	98be <_malloc_r+0x2d6>
    97fa:	9b01      	ldr	r3, [sp, #4]
    97fc:	4283      	cmp	r3, r0
    97fe:	d900      	bls.n	9802 <_malloc_r+0x21a>
    9800:	e0ff      	b.n	9a02 <_malloc_r+0x41a>
    9802:	4b64      	ldr	r3, [pc, #400]	; (9994 <_malloc_r+0x3ac>)
    9804:	9a00      	ldr	r2, [sp, #0]
    9806:	469a      	mov	sl, r3
    9808:	681b      	ldr	r3, [r3, #0]
    980a:	469c      	mov	ip, r3
    980c:	4653      	mov	r3, sl
    980e:	4462      	add	r2, ip
    9810:	601a      	str	r2, [r3, #0]
    9812:	9b01      	ldr	r3, [sp, #4]
    9814:	0011      	movs	r1, r2
    9816:	4283      	cmp	r3, r0
    9818:	d100      	bne.n	981c <_malloc_r+0x234>
    981a:	e155      	b.n	9ac8 <_malloc_r+0x4e0>
    981c:	465b      	mov	r3, fp
    981e:	681b      	ldr	r3, [r3, #0]
    9820:	3301      	adds	r3, #1
    9822:	d100      	bne.n	9826 <_malloc_r+0x23e>
    9824:	e16c      	b.n	9b00 <_malloc_r+0x518>
    9826:	464b      	mov	r3, r9
    9828:	9a01      	ldr	r2, [sp, #4]
    982a:	1a9b      	subs	r3, r3, r2
    982c:	1859      	adds	r1, r3, r1
    982e:	4653      	mov	r3, sl
    9830:	6019      	str	r1, [r3, #0]
    9832:	2307      	movs	r3, #7
    9834:	464a      	mov	r2, r9
    9836:	4013      	ands	r3, r2
    9838:	d100      	bne.n	983c <_malloc_r+0x254>
    983a:	e124      	b.n	9a86 <_malloc_r+0x49e>
    983c:	2108      	movs	r1, #8
    983e:	4689      	mov	r9, r1
    9840:	4955      	ldr	r1, [pc, #340]	; (9998 <_malloc_r+0x3b0>)
    9842:	1ad2      	subs	r2, r2, r3
    9844:	4491      	add	r9, r2
    9846:	1acb      	subs	r3, r1, r3
    9848:	9a00      	ldr	r2, [sp, #0]
    984a:	0038      	movs	r0, r7
    984c:	444a      	add	r2, r9
    984e:	0511      	lsls	r1, r2, #20
    9850:	0d09      	lsrs	r1, r1, #20
    9852:	1a5b      	subs	r3, r3, r1
    9854:	0019      	movs	r1, r3
    9856:	469b      	mov	fp, r3
    9858:	f000 ff28 	bl	a6ac <_sbrk_r>
    985c:	1c43      	adds	r3, r0, #1
    985e:	d100      	bne.n	9862 <_malloc_r+0x27a>
    9860:	e142      	b.n	9ae8 <_malloc_r+0x500>
    9862:	464b      	mov	r3, r9
    9864:	1ac0      	subs	r0, r0, r3
    9866:	2301      	movs	r3, #1
    9868:	4458      	add	r0, fp
    986a:	4318      	orrs	r0, r3
    986c:	4653      	mov	r3, sl
    986e:	681b      	ldr	r3, [r3, #0]
    9870:	445b      	add	r3, fp
    9872:	0019      	movs	r1, r3
    9874:	4653      	mov	r3, sl
    9876:	6019      	str	r1, [r3, #0]
    9878:	464b      	mov	r3, r9
    987a:	60b3      	str	r3, [r6, #8]
    987c:	6058      	str	r0, [r3, #4]
    987e:	42b4      	cmp	r4, r6
    9880:	d013      	beq.n	98aa <_malloc_r+0x2c2>
    9882:	4643      	mov	r3, r8
    9884:	2b0f      	cmp	r3, #15
    9886:	d800      	bhi.n	988a <_malloc_r+0x2a2>
    9888:	e0e8      	b.n	9a5c <_malloc_r+0x474>
    988a:	4643      	mov	r3, r8
    988c:	2207      	movs	r2, #7
    988e:	6860      	ldr	r0, [r4, #4]
    9890:	3b0c      	subs	r3, #12
    9892:	4393      	bics	r3, r2
    9894:	3a06      	subs	r2, #6
    9896:	4002      	ands	r2, r0
    9898:	2005      	movs	r0, #5
    989a:	431a      	orrs	r2, r3
    989c:	6062      	str	r2, [r4, #4]
    989e:	18e2      	adds	r2, r4, r3
    98a0:	6050      	str	r0, [r2, #4]
    98a2:	6090      	str	r0, [r2, #8]
    98a4:	2b0f      	cmp	r3, #15
    98a6:	d900      	bls.n	98aa <_malloc_r+0x2c2>
    98a8:	e122      	b.n	9af0 <_malloc_r+0x508>
    98aa:	4b3c      	ldr	r3, [pc, #240]	; (999c <_malloc_r+0x3b4>)
    98ac:	681a      	ldr	r2, [r3, #0]
    98ae:	4291      	cmp	r1, r2
    98b0:	d900      	bls.n	98b4 <_malloc_r+0x2cc>
    98b2:	6019      	str	r1, [r3, #0]
    98b4:	4b3a      	ldr	r3, [pc, #232]	; (99a0 <_malloc_r+0x3b8>)
    98b6:	681a      	ldr	r2, [r3, #0]
    98b8:	4291      	cmp	r1, r2
    98ba:	d900      	bls.n	98be <_malloc_r+0x2d6>
    98bc:	6019      	str	r1, [r3, #0]
    98be:	2303      	movs	r3, #3
    98c0:	68b4      	ldr	r4, [r6, #8]
    98c2:	6862      	ldr	r2, [r4, #4]
    98c4:	439a      	bics	r2, r3
    98c6:	1b53      	subs	r3, r2, r5
    98c8:	4295      	cmp	r5, r2
    98ca:	d900      	bls.n	98ce <_malloc_r+0x2e6>
    98cc:	e0c9      	b.n	9a62 <_malloc_r+0x47a>
    98ce:	2b0f      	cmp	r3, #15
    98d0:	dc00      	bgt.n	98d4 <_malloc_r+0x2ec>
    98d2:	e0c6      	b.n	9a62 <_malloc_r+0x47a>
    98d4:	2201      	movs	r2, #1
    98d6:	0029      	movs	r1, r5
    98d8:	4313      	orrs	r3, r2
    98da:	4311      	orrs	r1, r2
    98dc:	1965      	adds	r5, r4, r5
    98de:	6061      	str	r1, [r4, #4]
    98e0:	0038      	movs	r0, r7
    98e2:	60b5      	str	r5, [r6, #8]
    98e4:	606b      	str	r3, [r5, #4]
    98e6:	f000 fa2b 	bl	9d40 <__malloc_unlock>
    98ea:	0020      	movs	r0, r4
    98ec:	3008      	adds	r0, #8
    98ee:	e74a      	b.n	9786 <_malloc_r+0x19e>
    98f0:	2814      	cmp	r0, #20
    98f2:	d97a      	bls.n	99ea <_malloc_r+0x402>
    98f4:	2854      	cmp	r0, #84	; 0x54
    98f6:	d900      	bls.n	98fa <_malloc_r+0x312>
    98f8:	e0ba      	b.n	9a70 <_malloc_r+0x488>
    98fa:	236e      	movs	r3, #110	; 0x6e
    98fc:	4698      	mov	r8, r3
    98fe:	0b28      	lsrs	r0, r5, #12
    9900:	4480      	add	r8, r0
    9902:	306f      	adds	r0, #111	; 0x6f
    9904:	00c1      	lsls	r1, r0, #3
    9906:	e696      	b.n	9636 <_malloc_r+0x4e>
    9908:	0a5a      	lsrs	r2, r3, #9
    990a:	2a04      	cmp	r2, #4
    990c:	d973      	bls.n	99f6 <_malloc_r+0x40e>
    990e:	2a14      	cmp	r2, #20
    9910:	d900      	bls.n	9914 <_malloc_r+0x32c>
    9912:	e0d0      	b.n	9ab6 <_malloc_r+0x4ce>
    9914:	0011      	movs	r1, r2
    9916:	325c      	adds	r2, #92	; 0x5c
    9918:	315b      	adds	r1, #91	; 0x5b
    991a:	00d2      	lsls	r2, r2, #3
    991c:	2308      	movs	r3, #8
    991e:	425b      	negs	r3, r3
    9920:	469c      	mov	ip, r3
    9922:	18b2      	adds	r2, r6, r2
    9924:	4494      	add	ip, r2
    9926:	4663      	mov	r3, ip
    9928:	689a      	ldr	r2, [r3, #8]
    992a:	2303      	movs	r3, #3
    992c:	4698      	mov	r8, r3
    992e:	4594      	cmp	ip, r2
    9930:	d100      	bne.n	9934 <_malloc_r+0x34c>
    9932:	e0ab      	b.n	9a8c <_malloc_r+0x4a4>
    9934:	4643      	mov	r3, r8
    9936:	6851      	ldr	r1, [r2, #4]
    9938:	4399      	bics	r1, r3
    993a:	4589      	cmp	r9, r1
    993c:	d300      	bcc.n	9940 <_malloc_r+0x358>
    993e:	e095      	b.n	9a6c <_malloc_r+0x484>
    9940:	6892      	ldr	r2, [r2, #8]
    9942:	4594      	cmp	ip, r2
    9944:	d1f6      	bne.n	9934 <_malloc_r+0x34c>
    9946:	4663      	mov	r3, ip
    9948:	68da      	ldr	r2, [r3, #12]
    994a:	6873      	ldr	r3, [r6, #4]
    994c:	4661      	mov	r1, ip
    994e:	60e2      	str	r2, [r4, #12]
    9950:	60a1      	str	r1, [r4, #8]
    9952:	6094      	str	r4, [r2, #8]
    9954:	60cc      	str	r4, [r1, #12]
    9956:	e6b6      	b.n	96c6 <_malloc_r+0xde>
    9958:	2301      	movs	r3, #1
    995a:	1960      	adds	r0, r4, r5
    995c:	431d      	orrs	r5, r3
    995e:	6065      	str	r5, [r4, #4]
    9960:	6170      	str	r0, [r6, #20]
    9962:	6130      	str	r0, [r6, #16]
    9964:	60c2      	str	r2, [r0, #12]
    9966:	6082      	str	r2, [r0, #8]
    9968:	001a      	movs	r2, r3
    996a:	464b      	mov	r3, r9
    996c:	430a      	orrs	r2, r1
    996e:	6042      	str	r2, [r0, #4]
    9970:	0038      	movs	r0, r7
    9972:	50e1      	str	r1, [r4, r3]
    9974:	f000 f9e4 	bl	9d40 <__malloc_unlock>
    9978:	0020      	movs	r0, r4
    997a:	3008      	adds	r0, #8
    997c:	e703      	b.n	9786 <_malloc_r+0x19e>
    997e:	46c0      	nop			; (mov r8, r8)
    9980:	20000630 	.word	0x20000630
    9984:	000001ff 	.word	0x000001ff
    9988:	20000a38 	.word	0x20000a38
    998c:	20000af0 	.word	0x20000af0
    9990:	0000100f 	.word	0x0000100f
    9994:	20000ac0 	.word	0x20000ac0
    9998:	00001008 	.word	0x00001008
    999c:	20000ae8 	.word	0x20000ae8
    99a0:	20000aec 	.word	0x20000aec
    99a4:	6873      	ldr	r3, [r6, #4]
    99a6:	e68e      	b.n	96c6 <_malloc_r+0xde>
    99a8:	2308      	movs	r3, #8
    99aa:	469b      	mov	fp, r3
    99ac:	3b07      	subs	r3, #7
    99ae:	44dc      	add	ip, fp
    99b0:	469b      	mov	fp, r3
    99b2:	44da      	add	sl, fp
    99b4:	4643      	mov	r3, r8
    99b6:	4652      	mov	r2, sl
    99b8:	4213      	tst	r3, r2
    99ba:	d000      	beq.n	99be <_malloc_r+0x3d6>
    99bc:	e697      	b.n	96ee <_malloc_r+0x106>
    99be:	e037      	b.n	9a30 <_malloc_r+0x448>
    99c0:	68dc      	ldr	r4, [r3, #12]
    99c2:	3002      	adds	r0, #2
    99c4:	42a3      	cmp	r3, r4
    99c6:	d100      	bne.n	99ca <_malloc_r+0x3e2>
    99c8:	e655      	b.n	9676 <_malloc_r+0x8e>
    99ca:	e6ca      	b.n	9762 <_malloc_r+0x17a>
    99cc:	2201      	movs	r2, #1
    99ce:	18e3      	adds	r3, r4, r3
    99d0:	6859      	ldr	r1, [r3, #4]
    99d2:	0038      	movs	r0, r7
    99d4:	430a      	orrs	r2, r1
    99d6:	605a      	str	r2, [r3, #4]
    99d8:	68e3      	ldr	r3, [r4, #12]
    99da:	68a2      	ldr	r2, [r4, #8]
    99dc:	60d3      	str	r3, [r2, #12]
    99de:	609a      	str	r2, [r3, #8]
    99e0:	f000 f9ae 	bl	9d40 <__malloc_unlock>
    99e4:	0020      	movs	r0, r4
    99e6:	3008      	adds	r0, #8
    99e8:	e6cd      	b.n	9786 <_malloc_r+0x19e>
    99ea:	235b      	movs	r3, #91	; 0x5b
    99ec:	4698      	mov	r8, r3
    99ee:	4480      	add	r8, r0
    99f0:	305c      	adds	r0, #92	; 0x5c
    99f2:	00c1      	lsls	r1, r0, #3
    99f4:	e61f      	b.n	9636 <_malloc_r+0x4e>
    99f6:	099a      	lsrs	r2, r3, #6
    99f8:	0011      	movs	r1, r2
    99fa:	3239      	adds	r2, #57	; 0x39
    99fc:	3138      	adds	r1, #56	; 0x38
    99fe:	00d2      	lsls	r2, r2, #3
    9a00:	e78c      	b.n	991c <_malloc_r+0x334>
    9a02:	42b4      	cmp	r4, r6
    9a04:	d000      	beq.n	9a08 <_malloc_r+0x420>
    9a06:	e75a      	b.n	98be <_malloc_r+0x2d6>
    9a08:	4b4f      	ldr	r3, [pc, #316]	; (9b48 <_malloc_r+0x560>)
    9a0a:	9a00      	ldr	r2, [sp, #0]
    9a0c:	469a      	mov	sl, r3
    9a0e:	681b      	ldr	r3, [r3, #0]
    9a10:	469c      	mov	ip, r3
    9a12:	4653      	mov	r3, sl
    9a14:	4462      	add	r2, ip
    9a16:	0011      	movs	r1, r2
    9a18:	601a      	str	r2, [r3, #0]
    9a1a:	e6ff      	b.n	981c <_malloc_r+0x234>
    9a1c:	2308      	movs	r3, #8
    9a1e:	425b      	negs	r3, r3
    9a20:	469c      	mov	ip, r3
    9a22:	44e1      	add	r9, ip
    9a24:	464b      	mov	r3, r9
    9a26:	689b      	ldr	r3, [r3, #8]
    9a28:	3801      	subs	r0, #1
    9a2a:	4599      	cmp	r9, r3
    9a2c:	d000      	beq.n	9a30 <_malloc_r+0x448>
    9a2e:	e084      	b.n	9b3a <_malloc_r+0x552>
    9a30:	4643      	mov	r3, r8
    9a32:	4203      	tst	r3, r0
    9a34:	d1f2      	bne.n	9a1c <_malloc_r+0x434>
    9a36:	6873      	ldr	r3, [r6, #4]
    9a38:	438b      	bics	r3, r1
    9a3a:	6073      	str	r3, [r6, #4]
    9a3c:	0049      	lsls	r1, r1, #1
    9a3e:	4299      	cmp	r1, r3
    9a40:	d900      	bls.n	9a44 <_malloc_r+0x45c>
    9a42:	e6b5      	b.n	97b0 <_malloc_r+0x1c8>
    9a44:	2900      	cmp	r1, #0
    9a46:	d100      	bne.n	9a4a <_malloc_r+0x462>
    9a48:	e6b2      	b.n	97b0 <_malloc_r+0x1c8>
    9a4a:	4650      	mov	r0, sl
    9a4c:	420b      	tst	r3, r1
    9a4e:	d000      	beq.n	9a52 <_malloc_r+0x46a>
    9a50:	e648      	b.n	96e4 <_malloc_r+0xfc>
    9a52:	0049      	lsls	r1, r1, #1
    9a54:	3004      	adds	r0, #4
    9a56:	420b      	tst	r3, r1
    9a58:	d0fb      	beq.n	9a52 <_malloc_r+0x46a>
    9a5a:	e643      	b.n	96e4 <_malloc_r+0xfc>
    9a5c:	2301      	movs	r3, #1
    9a5e:	464a      	mov	r2, r9
    9a60:	6053      	str	r3, [r2, #4]
    9a62:	0038      	movs	r0, r7
    9a64:	f000 f96c 	bl	9d40 <__malloc_unlock>
    9a68:	2000      	movs	r0, #0
    9a6a:	e68c      	b.n	9786 <_malloc_r+0x19e>
    9a6c:	4694      	mov	ip, r2
    9a6e:	e76a      	b.n	9946 <_malloc_r+0x35e>
    9a70:	23aa      	movs	r3, #170	; 0xaa
    9a72:	005b      	lsls	r3, r3, #1
    9a74:	4298      	cmp	r0, r3
    9a76:	d811      	bhi.n	9a9c <_malloc_r+0x4b4>
    9a78:	3bdd      	subs	r3, #221	; 0xdd
    9a7a:	4698      	mov	r8, r3
    9a7c:	0be8      	lsrs	r0, r5, #15
    9a7e:	4480      	add	r8, r0
    9a80:	3078      	adds	r0, #120	; 0x78
    9a82:	00c1      	lsls	r1, r0, #3
    9a84:	e5d7      	b.n	9636 <_malloc_r+0x4e>
    9a86:	2380      	movs	r3, #128	; 0x80
    9a88:	015b      	lsls	r3, r3, #5
    9a8a:	e6dd      	b.n	9848 <_malloc_r+0x260>
    9a8c:	1089      	asrs	r1, r1, #2
    9a8e:	3b02      	subs	r3, #2
    9a90:	408b      	lsls	r3, r1
    9a92:	6872      	ldr	r2, [r6, #4]
    9a94:	4313      	orrs	r3, r2
    9a96:	6073      	str	r3, [r6, #4]
    9a98:	4662      	mov	r2, ip
    9a9a:	e757      	b.n	994c <_malloc_r+0x364>
    9a9c:	4b2b      	ldr	r3, [pc, #172]	; (9b4c <_malloc_r+0x564>)
    9a9e:	4298      	cmp	r0, r3
    9aa0:	d81c      	bhi.n	9adc <_malloc_r+0x4f4>
    9aa2:	237c      	movs	r3, #124	; 0x7c
    9aa4:	4698      	mov	r8, r3
    9aa6:	0ca8      	lsrs	r0, r5, #18
    9aa8:	4480      	add	r8, r0
    9aaa:	307d      	adds	r0, #125	; 0x7d
    9aac:	00c1      	lsls	r1, r0, #3
    9aae:	e5c2      	b.n	9636 <_malloc_r+0x4e>
    9ab0:	3310      	adds	r3, #16
    9ab2:	9300      	str	r3, [sp, #0]
    9ab4:	e699      	b.n	97ea <_malloc_r+0x202>
    9ab6:	2a54      	cmp	r2, #84	; 0x54
    9ab8:	d826      	bhi.n	9b08 <_malloc_r+0x520>
    9aba:	464b      	mov	r3, r9
    9abc:	0b1a      	lsrs	r2, r3, #12
    9abe:	0011      	movs	r1, r2
    9ac0:	326f      	adds	r2, #111	; 0x6f
    9ac2:	316e      	adds	r1, #110	; 0x6e
    9ac4:	00d2      	lsls	r2, r2, #3
    9ac6:	e729      	b.n	991c <_malloc_r+0x334>
    9ac8:	051b      	lsls	r3, r3, #20
    9aca:	d000      	beq.n	9ace <_malloc_r+0x4e6>
    9acc:	e6a6      	b.n	981c <_malloc_r+0x234>
    9ace:	2001      	movs	r0, #1
    9ad0:	9b00      	ldr	r3, [sp, #0]
    9ad2:	68b2      	ldr	r2, [r6, #8]
    9ad4:	4443      	add	r3, r8
    9ad6:	4303      	orrs	r3, r0
    9ad8:	6053      	str	r3, [r2, #4]
    9ada:	e6e6      	b.n	98aa <_malloc_r+0x2c2>
    9adc:	21fe      	movs	r1, #254	; 0xfe
    9ade:	237e      	movs	r3, #126	; 0x7e
    9ae0:	207f      	movs	r0, #127	; 0x7f
    9ae2:	0089      	lsls	r1, r1, #2
    9ae4:	4698      	mov	r8, r3
    9ae6:	e5a6      	b.n	9636 <_malloc_r+0x4e>
    9ae8:	2300      	movs	r3, #0
    9aea:	2001      	movs	r0, #1
    9aec:	469b      	mov	fp, r3
    9aee:	e6bd      	b.n	986c <_malloc_r+0x284>
    9af0:	0021      	movs	r1, r4
    9af2:	0038      	movs	r0, r7
    9af4:	3108      	adds	r1, #8
    9af6:	f7ff fc57 	bl	93a8 <_free_r>
    9afa:	4653      	mov	r3, sl
    9afc:	6819      	ldr	r1, [r3, #0]
    9afe:	e6d4      	b.n	98aa <_malloc_r+0x2c2>
    9b00:	465b      	mov	r3, fp
    9b02:	464a      	mov	r2, r9
    9b04:	601a      	str	r2, [r3, #0]
    9b06:	e694      	b.n	9832 <_malloc_r+0x24a>
    9b08:	21aa      	movs	r1, #170	; 0xaa
    9b0a:	0049      	lsls	r1, r1, #1
    9b0c:	428a      	cmp	r2, r1
    9b0e:	d806      	bhi.n	9b1e <_malloc_r+0x536>
    9b10:	464b      	mov	r3, r9
    9b12:	0bda      	lsrs	r2, r3, #15
    9b14:	0011      	movs	r1, r2
    9b16:	3278      	adds	r2, #120	; 0x78
    9b18:	3177      	adds	r1, #119	; 0x77
    9b1a:	00d2      	lsls	r2, r2, #3
    9b1c:	e6fe      	b.n	991c <_malloc_r+0x334>
    9b1e:	490b      	ldr	r1, [pc, #44]	; (9b4c <_malloc_r+0x564>)
    9b20:	428a      	cmp	r2, r1
    9b22:	d806      	bhi.n	9b32 <_malloc_r+0x54a>
    9b24:	464b      	mov	r3, r9
    9b26:	0c9a      	lsrs	r2, r3, #18
    9b28:	0011      	movs	r1, r2
    9b2a:	327d      	adds	r2, #125	; 0x7d
    9b2c:	317c      	adds	r1, #124	; 0x7c
    9b2e:	00d2      	lsls	r2, r2, #3
    9b30:	e6f4      	b.n	991c <_malloc_r+0x334>
    9b32:	22fe      	movs	r2, #254	; 0xfe
    9b34:	217e      	movs	r1, #126	; 0x7e
    9b36:	0092      	lsls	r2, r2, #2
    9b38:	e6f0      	b.n	991c <_malloc_r+0x334>
    9b3a:	6873      	ldr	r3, [r6, #4]
    9b3c:	e77e      	b.n	9a3c <_malloc_r+0x454>
    9b3e:	002b      	movs	r3, r5
    9b40:	08e8      	lsrs	r0, r5, #3
    9b42:	3308      	adds	r3, #8
    9b44:	e605      	b.n	9752 <_malloc_r+0x16a>
    9b46:	46c0      	nop			; (mov r8, r8)
    9b48:	20000ac0 	.word	0x20000ac0
    9b4c:	00000554 	.word	0x00000554

00009b50 <_mbrtowc_r>:
    9b50:	b530      	push	{r4, r5, lr}
    9b52:	0004      	movs	r4, r0
    9b54:	b083      	sub	sp, #12
    9b56:	2a00      	cmp	r2, #0
    9b58:	d013      	beq.n	9b82 <_mbrtowc_r+0x32>
    9b5a:	4813      	ldr	r0, [pc, #76]	; (9ba8 <_mbrtowc_r+0x58>)
    9b5c:	6800      	ldr	r0, [r0, #0]
    9b5e:	6b40      	ldr	r0, [r0, #52]	; 0x34
    9b60:	2800      	cmp	r0, #0
    9b62:	d01d      	beq.n	9ba0 <_mbrtowc_r+0x50>
    9b64:	9d06      	ldr	r5, [sp, #24]
    9b66:	9500      	str	r5, [sp, #0]
    9b68:	25e4      	movs	r5, #228	; 0xe4
    9b6a:	5945      	ldr	r5, [r0, r5]
    9b6c:	0020      	movs	r0, r4
    9b6e:	47a8      	blx	r5
    9b70:	1c43      	adds	r3, r0, #1
    9b72:	d104      	bne.n	9b7e <_mbrtowc_r+0x2e>
    9b74:	2300      	movs	r3, #0
    9b76:	9a06      	ldr	r2, [sp, #24]
    9b78:	6013      	str	r3, [r2, #0]
    9b7a:	338a      	adds	r3, #138	; 0x8a
    9b7c:	6023      	str	r3, [r4, #0]
    9b7e:	b003      	add	sp, #12
    9b80:	bd30      	pop	{r4, r5, pc}
    9b82:	4b09      	ldr	r3, [pc, #36]	; (9ba8 <_mbrtowc_r+0x58>)
    9b84:	681b      	ldr	r3, [r3, #0]
    9b86:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9b88:	2b00      	cmp	r3, #0
    9b8a:	d00b      	beq.n	9ba4 <_mbrtowc_r+0x54>
    9b8c:	9a06      	ldr	r2, [sp, #24]
    9b8e:	2100      	movs	r1, #0
    9b90:	9200      	str	r2, [sp, #0]
    9b92:	22e4      	movs	r2, #228	; 0xe4
    9b94:	0020      	movs	r0, r4
    9b96:	589d      	ldr	r5, [r3, r2]
    9b98:	2301      	movs	r3, #1
    9b9a:	4a04      	ldr	r2, [pc, #16]	; (9bac <_mbrtowc_r+0x5c>)
    9b9c:	47a8      	blx	r5
    9b9e:	e7e7      	b.n	9b70 <_mbrtowc_r+0x20>
    9ba0:	4803      	ldr	r0, [pc, #12]	; (9bb0 <_mbrtowc_r+0x60>)
    9ba2:	e7df      	b.n	9b64 <_mbrtowc_r+0x14>
    9ba4:	4b02      	ldr	r3, [pc, #8]	; (9bb0 <_mbrtowc_r+0x60>)
    9ba6:	e7f1      	b.n	9b8c <_mbrtowc_r+0x3c>
    9ba8:	20000090 	.word	0x20000090
    9bac:	0000e6e0 	.word	0x0000e6e0
    9bb0:	200004c4 	.word	0x200004c4

00009bb4 <__ascii_mbtowc>:
    9bb4:	b082      	sub	sp, #8
    9bb6:	2900      	cmp	r1, #0
    9bb8:	d00a      	beq.n	9bd0 <__ascii_mbtowc+0x1c>
    9bba:	2a00      	cmp	r2, #0
    9bbc:	d00b      	beq.n	9bd6 <__ascii_mbtowc+0x22>
    9bbe:	2b00      	cmp	r3, #0
    9bc0:	d00b      	beq.n	9bda <__ascii_mbtowc+0x26>
    9bc2:	7813      	ldrb	r3, [r2, #0]
    9bc4:	600b      	str	r3, [r1, #0]
    9bc6:	7810      	ldrb	r0, [r2, #0]
    9bc8:	1e43      	subs	r3, r0, #1
    9bca:	4198      	sbcs	r0, r3
    9bcc:	b002      	add	sp, #8
    9bce:	4770      	bx	lr
    9bd0:	a901      	add	r1, sp, #4
    9bd2:	2a00      	cmp	r2, #0
    9bd4:	d1f3      	bne.n	9bbe <__ascii_mbtowc+0xa>
    9bd6:	2000      	movs	r0, #0
    9bd8:	e7f8      	b.n	9bcc <__ascii_mbtowc+0x18>
    9bda:	2002      	movs	r0, #2
    9bdc:	4240      	negs	r0, r0
    9bde:	e7f5      	b.n	9bcc <__ascii_mbtowc+0x18>

00009be0 <memchr>:
    9be0:	b570      	push	{r4, r5, r6, lr}
    9be2:	b2cd      	uxtb	r5, r1
    9be4:	0783      	lsls	r3, r0, #30
    9be6:	d034      	beq.n	9c52 <memchr+0x72>
    9be8:	1e54      	subs	r4, r2, #1
    9bea:	2a00      	cmp	r2, #0
    9bec:	d01b      	beq.n	9c26 <memchr+0x46>
    9bee:	7803      	ldrb	r3, [r0, #0]
    9bf0:	42ab      	cmp	r3, r5
    9bf2:	d019      	beq.n	9c28 <memchr+0x48>
    9bf4:	2203      	movs	r2, #3
    9bf6:	e004      	b.n	9c02 <memchr+0x22>
    9bf8:	3c01      	subs	r4, #1
    9bfa:	d314      	bcc.n	9c26 <memchr+0x46>
    9bfc:	7803      	ldrb	r3, [r0, #0]
    9bfe:	42ab      	cmp	r3, r5
    9c00:	d012      	beq.n	9c28 <memchr+0x48>
    9c02:	3001      	adds	r0, #1
    9c04:	4210      	tst	r0, r2
    9c06:	d1f7      	bne.n	9bf8 <memchr+0x18>
    9c08:	2c03      	cmp	r4, #3
    9c0a:	d80e      	bhi.n	9c2a <memchr+0x4a>
    9c0c:	2c00      	cmp	r4, #0
    9c0e:	d00a      	beq.n	9c26 <memchr+0x46>
    9c10:	7803      	ldrb	r3, [r0, #0]
    9c12:	42ab      	cmp	r3, r5
    9c14:	d008      	beq.n	9c28 <memchr+0x48>
    9c16:	1904      	adds	r4, r0, r4
    9c18:	e002      	b.n	9c20 <memchr+0x40>
    9c1a:	7803      	ldrb	r3, [r0, #0]
    9c1c:	42ab      	cmp	r3, r5
    9c1e:	d003      	beq.n	9c28 <memchr+0x48>
    9c20:	3001      	adds	r0, #1
    9c22:	4284      	cmp	r4, r0
    9c24:	d1f9      	bne.n	9c1a <memchr+0x3a>
    9c26:	2000      	movs	r0, #0
    9c28:	bd70      	pop	{r4, r5, r6, pc}
    9c2a:	22ff      	movs	r2, #255	; 0xff
    9c2c:	060b      	lsls	r3, r1, #24
    9c2e:	0c1b      	lsrs	r3, r3, #16
    9c30:	4011      	ands	r1, r2
    9c32:	4319      	orrs	r1, r3
    9c34:	040b      	lsls	r3, r1, #16
    9c36:	4e08      	ldr	r6, [pc, #32]	; (9c58 <memchr+0x78>)
    9c38:	4319      	orrs	r1, r3
    9c3a:	6803      	ldr	r3, [r0, #0]
    9c3c:	4a07      	ldr	r2, [pc, #28]	; (9c5c <memchr+0x7c>)
    9c3e:	404b      	eors	r3, r1
    9c40:	189a      	adds	r2, r3, r2
    9c42:	439a      	bics	r2, r3
    9c44:	4232      	tst	r2, r6
    9c46:	d1e3      	bne.n	9c10 <memchr+0x30>
    9c48:	3c04      	subs	r4, #4
    9c4a:	3004      	adds	r0, #4
    9c4c:	2c03      	cmp	r4, #3
    9c4e:	d8f4      	bhi.n	9c3a <memchr+0x5a>
    9c50:	e7dc      	b.n	9c0c <memchr+0x2c>
    9c52:	0014      	movs	r4, r2
    9c54:	e7d8      	b.n	9c08 <memchr+0x28>
    9c56:	46c0      	nop			; (mov r8, r8)
    9c58:	80808080 	.word	0x80808080
    9c5c:	fefefeff 	.word	0xfefefeff

00009c60 <memcmp>:
    9c60:	b510      	push	{r4, lr}
    9c62:	2a03      	cmp	r2, #3
    9c64:	d91c      	bls.n	9ca0 <memcmp+0x40>
    9c66:	0003      	movs	r3, r0
    9c68:	430b      	orrs	r3, r1
    9c6a:	079b      	lsls	r3, r3, #30
    9c6c:	d00f      	beq.n	9c8e <memcmp+0x2e>
    9c6e:	7803      	ldrb	r3, [r0, #0]
    9c70:	780c      	ldrb	r4, [r1, #0]
    9c72:	1882      	adds	r2, r0, r2
    9c74:	42a3      	cmp	r3, r4
    9c76:	d004      	beq.n	9c82 <memcmp+0x22>
    9c78:	e015      	b.n	9ca6 <memcmp+0x46>
    9c7a:	7803      	ldrb	r3, [r0, #0]
    9c7c:	780c      	ldrb	r4, [r1, #0]
    9c7e:	42a3      	cmp	r3, r4
    9c80:	d111      	bne.n	9ca6 <memcmp+0x46>
    9c82:	3001      	adds	r0, #1
    9c84:	3101      	adds	r1, #1
    9c86:	4282      	cmp	r2, r0
    9c88:	d1f7      	bne.n	9c7a <memcmp+0x1a>
    9c8a:	2000      	movs	r0, #0
    9c8c:	bd10      	pop	{r4, pc}
    9c8e:	6803      	ldr	r3, [r0, #0]
    9c90:	680c      	ldr	r4, [r1, #0]
    9c92:	42a3      	cmp	r3, r4
    9c94:	d1eb      	bne.n	9c6e <memcmp+0xe>
    9c96:	3a04      	subs	r2, #4
    9c98:	3004      	adds	r0, #4
    9c9a:	3104      	adds	r1, #4
    9c9c:	2a03      	cmp	r2, #3
    9c9e:	d8f6      	bhi.n	9c8e <memcmp+0x2e>
    9ca0:	2a00      	cmp	r2, #0
    9ca2:	d1e4      	bne.n	9c6e <memcmp+0xe>
    9ca4:	e7f1      	b.n	9c8a <memcmp+0x2a>
    9ca6:	1b18      	subs	r0, r3, r4
    9ca8:	e7f0      	b.n	9c8c <memcmp+0x2c>
    9caa:	46c0      	nop			; (mov r8, r8)

00009cac <memcpy>:
    9cac:	b5f0      	push	{r4, r5, r6, r7, lr}
    9cae:	0005      	movs	r5, r0
    9cb0:	2a0f      	cmp	r2, #15
    9cb2:	d92f      	bls.n	9d14 <memcpy+0x68>
    9cb4:	000b      	movs	r3, r1
    9cb6:	4303      	orrs	r3, r0
    9cb8:	079b      	lsls	r3, r3, #30
    9cba:	d134      	bne.n	9d26 <memcpy+0x7a>
    9cbc:	0016      	movs	r6, r2
    9cbe:	000c      	movs	r4, r1
    9cc0:	0003      	movs	r3, r0
    9cc2:	3e10      	subs	r6, #16
    9cc4:	0935      	lsrs	r5, r6, #4
    9cc6:	3501      	adds	r5, #1
    9cc8:	012d      	lsls	r5, r5, #4
    9cca:	1945      	adds	r5, r0, r5
    9ccc:	6827      	ldr	r7, [r4, #0]
    9cce:	601f      	str	r7, [r3, #0]
    9cd0:	6867      	ldr	r7, [r4, #4]
    9cd2:	605f      	str	r7, [r3, #4]
    9cd4:	68a7      	ldr	r7, [r4, #8]
    9cd6:	609f      	str	r7, [r3, #8]
    9cd8:	68e7      	ldr	r7, [r4, #12]
    9cda:	3410      	adds	r4, #16
    9cdc:	60df      	str	r7, [r3, #12]
    9cde:	3310      	adds	r3, #16
    9ce0:	429d      	cmp	r5, r3
    9ce2:	d1f3      	bne.n	9ccc <memcpy+0x20>
    9ce4:	230f      	movs	r3, #15
    9ce6:	439e      	bics	r6, r3
    9ce8:	3610      	adds	r6, #16
    9cea:	1985      	adds	r5, r0, r6
    9cec:	1989      	adds	r1, r1, r6
    9cee:	4013      	ands	r3, r2
    9cf0:	2b03      	cmp	r3, #3
    9cf2:	d91a      	bls.n	9d2a <memcpy+0x7e>
    9cf4:	1f1e      	subs	r6, r3, #4
    9cf6:	2300      	movs	r3, #0
    9cf8:	08b4      	lsrs	r4, r6, #2
    9cfa:	3401      	adds	r4, #1
    9cfc:	00a4      	lsls	r4, r4, #2
    9cfe:	58cf      	ldr	r7, [r1, r3]
    9d00:	50ef      	str	r7, [r5, r3]
    9d02:	3304      	adds	r3, #4
    9d04:	42a3      	cmp	r3, r4
    9d06:	d1fa      	bne.n	9cfe <memcpy+0x52>
    9d08:	2403      	movs	r4, #3
    9d0a:	43a6      	bics	r6, r4
    9d0c:	1d33      	adds	r3, r6, #4
    9d0e:	4022      	ands	r2, r4
    9d10:	18c9      	adds	r1, r1, r3
    9d12:	18ed      	adds	r5, r5, r3
    9d14:	2a00      	cmp	r2, #0
    9d16:	d005      	beq.n	9d24 <memcpy+0x78>
    9d18:	2300      	movs	r3, #0
    9d1a:	5ccc      	ldrb	r4, [r1, r3]
    9d1c:	54ec      	strb	r4, [r5, r3]
    9d1e:	3301      	adds	r3, #1
    9d20:	4293      	cmp	r3, r2
    9d22:	d1fa      	bne.n	9d1a <memcpy+0x6e>
    9d24:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9d26:	0005      	movs	r5, r0
    9d28:	e7f6      	b.n	9d18 <memcpy+0x6c>
    9d2a:	001a      	movs	r2, r3
    9d2c:	e7f2      	b.n	9d14 <memcpy+0x68>
    9d2e:	46c0      	nop			; (mov r8, r8)

00009d30 <__malloc_lock>:
    9d30:	b510      	push	{r4, lr}
    9d32:	4802      	ldr	r0, [pc, #8]	; (9d3c <__malloc_lock+0xc>)
    9d34:	f7ff fc54 	bl	95e0 <__retarget_lock_acquire_recursive>
    9d38:	bd10      	pop	{r4, pc}
    9d3a:	46c0      	nop			; (mov r8, r8)
    9d3c:	20001440 	.word	0x20001440

00009d40 <__malloc_unlock>:
    9d40:	b510      	push	{r4, lr}
    9d42:	4802      	ldr	r0, [pc, #8]	; (9d4c <__malloc_unlock+0xc>)
    9d44:	f7ff fc4e 	bl	95e4 <__retarget_lock_release_recursive>
    9d48:	bd10      	pop	{r4, pc}
    9d4a:	46c0      	nop			; (mov r8, r8)
    9d4c:	20001440 	.word	0x20001440

00009d50 <_Balloc>:
    9d50:	b570      	push	{r4, r5, r6, lr}
    9d52:	0004      	movs	r4, r0
    9d54:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    9d56:	000d      	movs	r5, r1
    9d58:	2800      	cmp	r0, #0
    9d5a:	d00a      	beq.n	9d72 <_Balloc+0x22>
    9d5c:	00ab      	lsls	r3, r5, #2
    9d5e:	18c3      	adds	r3, r0, r3
    9d60:	6818      	ldr	r0, [r3, #0]
    9d62:	2800      	cmp	r0, #0
    9d64:	d00f      	beq.n	9d86 <_Balloc+0x36>
    9d66:	6802      	ldr	r2, [r0, #0]
    9d68:	601a      	str	r2, [r3, #0]
    9d6a:	2300      	movs	r3, #0
    9d6c:	6103      	str	r3, [r0, #16]
    9d6e:	60c3      	str	r3, [r0, #12]
    9d70:	bd70      	pop	{r4, r5, r6, pc}
    9d72:	2221      	movs	r2, #33	; 0x21
    9d74:	2104      	movs	r1, #4
    9d76:	0020      	movs	r0, r4
    9d78:	f002 f91a 	bl	bfb0 <_calloc_r>
    9d7c:	64e0      	str	r0, [r4, #76]	; 0x4c
    9d7e:	2800      	cmp	r0, #0
    9d80:	d1ec      	bne.n	9d5c <_Balloc+0xc>
    9d82:	2000      	movs	r0, #0
    9d84:	e7f4      	b.n	9d70 <_Balloc+0x20>
    9d86:	2601      	movs	r6, #1
    9d88:	40ae      	lsls	r6, r5
    9d8a:	1d72      	adds	r2, r6, #5
    9d8c:	0092      	lsls	r2, r2, #2
    9d8e:	2101      	movs	r1, #1
    9d90:	0020      	movs	r0, r4
    9d92:	f002 f90d 	bl	bfb0 <_calloc_r>
    9d96:	2800      	cmp	r0, #0
    9d98:	d0f3      	beq.n	9d82 <_Balloc+0x32>
    9d9a:	6045      	str	r5, [r0, #4]
    9d9c:	6086      	str	r6, [r0, #8]
    9d9e:	e7e4      	b.n	9d6a <_Balloc+0x1a>

00009da0 <_Bfree>:
    9da0:	2900      	cmp	r1, #0
    9da2:	d006      	beq.n	9db2 <_Bfree+0x12>
    9da4:	684b      	ldr	r3, [r1, #4]
    9da6:	009a      	lsls	r2, r3, #2
    9da8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    9daa:	189b      	adds	r3, r3, r2
    9dac:	681a      	ldr	r2, [r3, #0]
    9dae:	600a      	str	r2, [r1, #0]
    9db0:	6019      	str	r1, [r3, #0]
    9db2:	4770      	bx	lr

00009db4 <__multadd>:
    9db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9db6:	46ce      	mov	lr, r9
    9db8:	4647      	mov	r7, r8
    9dba:	4681      	mov	r9, r0
    9dbc:	0008      	movs	r0, r1
    9dbe:	b580      	push	{r7, lr}
    9dc0:	000d      	movs	r5, r1
    9dc2:	690c      	ldr	r4, [r1, #16]
    9dc4:	001f      	movs	r7, r3
    9dc6:	2100      	movs	r1, #0
    9dc8:	3014      	adds	r0, #20
    9dca:	6803      	ldr	r3, [r0, #0]
    9dcc:	3101      	adds	r1, #1
    9dce:	041e      	lsls	r6, r3, #16
    9dd0:	0c36      	lsrs	r6, r6, #16
    9dd2:	4356      	muls	r6, r2
    9dd4:	0c1b      	lsrs	r3, r3, #16
    9dd6:	4353      	muls	r3, r2
    9dd8:	19f6      	adds	r6, r6, r7
    9dda:	0c37      	lsrs	r7, r6, #16
    9ddc:	19db      	adds	r3, r3, r7
    9dde:	0436      	lsls	r6, r6, #16
    9de0:	0c1f      	lsrs	r7, r3, #16
    9de2:	0c36      	lsrs	r6, r6, #16
    9de4:	041b      	lsls	r3, r3, #16
    9de6:	199b      	adds	r3, r3, r6
    9de8:	c008      	stmia	r0!, {r3}
    9dea:	428c      	cmp	r4, r1
    9dec:	dced      	bgt.n	9dca <__multadd+0x16>
    9dee:	2f00      	cmp	r7, #0
    9df0:	d008      	beq.n	9e04 <__multadd+0x50>
    9df2:	68ab      	ldr	r3, [r5, #8]
    9df4:	429c      	cmp	r4, r3
    9df6:	da0a      	bge.n	9e0e <__multadd+0x5a>
    9df8:	1d23      	adds	r3, r4, #4
    9dfa:	009b      	lsls	r3, r3, #2
    9dfc:	18eb      	adds	r3, r5, r3
    9dfe:	3401      	adds	r4, #1
    9e00:	605f      	str	r7, [r3, #4]
    9e02:	612c      	str	r4, [r5, #16]
    9e04:	0028      	movs	r0, r5
    9e06:	bc0c      	pop	{r2, r3}
    9e08:	4690      	mov	r8, r2
    9e0a:	4699      	mov	r9, r3
    9e0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9e0e:	686b      	ldr	r3, [r5, #4]
    9e10:	4648      	mov	r0, r9
    9e12:	1c59      	adds	r1, r3, #1
    9e14:	f7ff ff9c 	bl	9d50 <_Balloc>
    9e18:	0029      	movs	r1, r5
    9e1a:	692b      	ldr	r3, [r5, #16]
    9e1c:	4680      	mov	r8, r0
    9e1e:	1c9a      	adds	r2, r3, #2
    9e20:	0092      	lsls	r2, r2, #2
    9e22:	310c      	adds	r1, #12
    9e24:	300c      	adds	r0, #12
    9e26:	f7ff ff41 	bl	9cac <memcpy>
    9e2a:	686b      	ldr	r3, [r5, #4]
    9e2c:	009a      	lsls	r2, r3, #2
    9e2e:	464b      	mov	r3, r9
    9e30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    9e32:	189b      	adds	r3, r3, r2
    9e34:	681a      	ldr	r2, [r3, #0]
    9e36:	602a      	str	r2, [r5, #0]
    9e38:	601d      	str	r5, [r3, #0]
    9e3a:	4645      	mov	r5, r8
    9e3c:	e7dc      	b.n	9df8 <__multadd+0x44>
    9e3e:	46c0      	nop			; (mov r8, r8)

00009e40 <__s2b>:
    9e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9e42:	4647      	mov	r7, r8
    9e44:	46ce      	mov	lr, r9
    9e46:	0006      	movs	r6, r0
    9e48:	0018      	movs	r0, r3
    9e4a:	b580      	push	{r7, lr}
    9e4c:	000d      	movs	r5, r1
    9e4e:	3008      	adds	r0, #8
    9e50:	2109      	movs	r1, #9
    9e52:	4690      	mov	r8, r2
    9e54:	001f      	movs	r7, r3
    9e56:	f7f9 fc71 	bl	373c <__divsi3>
    9e5a:	2801      	cmp	r0, #1
    9e5c:	dd38      	ble.n	9ed0 <__s2b+0x90>
    9e5e:	2201      	movs	r2, #1
    9e60:	2100      	movs	r1, #0
    9e62:	0052      	lsls	r2, r2, #1
    9e64:	3101      	adds	r1, #1
    9e66:	4290      	cmp	r0, r2
    9e68:	dcfb      	bgt.n	9e62 <__s2b+0x22>
    9e6a:	0030      	movs	r0, r6
    9e6c:	f7ff ff70 	bl	9d50 <_Balloc>
    9e70:	9b08      	ldr	r3, [sp, #32]
    9e72:	6143      	str	r3, [r0, #20]
    9e74:	2301      	movs	r3, #1
    9e76:	6103      	str	r3, [r0, #16]
    9e78:	4643      	mov	r3, r8
    9e7a:	2b09      	cmp	r3, #9
    9e7c:	dd24      	ble.n	9ec8 <__s2b+0x88>
    9e7e:	2309      	movs	r3, #9
    9e80:	4699      	mov	r9, r3
    9e82:	44a9      	add	r9, r5
    9e84:	464c      	mov	r4, r9
    9e86:	4445      	add	r5, r8
    9e88:	7823      	ldrb	r3, [r4, #0]
    9e8a:	0001      	movs	r1, r0
    9e8c:	3b30      	subs	r3, #48	; 0x30
    9e8e:	220a      	movs	r2, #10
    9e90:	0030      	movs	r0, r6
    9e92:	3401      	adds	r4, #1
    9e94:	f7ff ff8e 	bl	9db4 <__multadd>
    9e98:	42ac      	cmp	r4, r5
    9e9a:	d1f5      	bne.n	9e88 <__s2b+0x48>
    9e9c:	4645      	mov	r5, r8
    9e9e:	3d08      	subs	r5, #8
    9ea0:	444d      	add	r5, r9
    9ea2:	4547      	cmp	r7, r8
    9ea4:	dd0c      	ble.n	9ec0 <__s2b+0x80>
    9ea6:	4643      	mov	r3, r8
    9ea8:	1aff      	subs	r7, r7, r3
    9eaa:	19ef      	adds	r7, r5, r7
    9eac:	782b      	ldrb	r3, [r5, #0]
    9eae:	0001      	movs	r1, r0
    9eb0:	3b30      	subs	r3, #48	; 0x30
    9eb2:	220a      	movs	r2, #10
    9eb4:	0030      	movs	r0, r6
    9eb6:	3501      	adds	r5, #1
    9eb8:	f7ff ff7c 	bl	9db4 <__multadd>
    9ebc:	42bd      	cmp	r5, r7
    9ebe:	d1f5      	bne.n	9eac <__s2b+0x6c>
    9ec0:	bc0c      	pop	{r2, r3}
    9ec2:	4690      	mov	r8, r2
    9ec4:	4699      	mov	r9, r3
    9ec6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9ec8:	2309      	movs	r3, #9
    9eca:	350a      	adds	r5, #10
    9ecc:	4698      	mov	r8, r3
    9ece:	e7e8      	b.n	9ea2 <__s2b+0x62>
    9ed0:	2100      	movs	r1, #0
    9ed2:	e7ca      	b.n	9e6a <__s2b+0x2a>

00009ed4 <__hi0bits>:
    9ed4:	0003      	movs	r3, r0
    9ed6:	0c02      	lsrs	r2, r0, #16
    9ed8:	2000      	movs	r0, #0
    9eda:	2a00      	cmp	r2, #0
    9edc:	d101      	bne.n	9ee2 <__hi0bits+0xe>
    9ede:	041b      	lsls	r3, r3, #16
    9ee0:	3010      	adds	r0, #16
    9ee2:	0e1a      	lsrs	r2, r3, #24
    9ee4:	d101      	bne.n	9eea <__hi0bits+0x16>
    9ee6:	3008      	adds	r0, #8
    9ee8:	021b      	lsls	r3, r3, #8
    9eea:	0f1a      	lsrs	r2, r3, #28
    9eec:	d101      	bne.n	9ef2 <__hi0bits+0x1e>
    9eee:	3004      	adds	r0, #4
    9ef0:	011b      	lsls	r3, r3, #4
    9ef2:	0f9a      	lsrs	r2, r3, #30
    9ef4:	d101      	bne.n	9efa <__hi0bits+0x26>
    9ef6:	3002      	adds	r0, #2
    9ef8:	009b      	lsls	r3, r3, #2
    9efa:	2b00      	cmp	r3, #0
    9efc:	db03      	blt.n	9f06 <__hi0bits+0x32>
    9efe:	3001      	adds	r0, #1
    9f00:	005b      	lsls	r3, r3, #1
    9f02:	d400      	bmi.n	9f06 <__hi0bits+0x32>
    9f04:	2020      	movs	r0, #32
    9f06:	4770      	bx	lr

00009f08 <__lo0bits>:
    9f08:	6803      	ldr	r3, [r0, #0]
    9f0a:	075a      	lsls	r2, r3, #29
    9f0c:	d009      	beq.n	9f22 <__lo0bits+0x1a>
    9f0e:	2200      	movs	r2, #0
    9f10:	07d9      	lsls	r1, r3, #31
    9f12:	d404      	bmi.n	9f1e <__lo0bits+0x16>
    9f14:	079a      	lsls	r2, r3, #30
    9f16:	d420      	bmi.n	9f5a <__lo0bits+0x52>
    9f18:	2202      	movs	r2, #2
    9f1a:	089b      	lsrs	r3, r3, #2
    9f1c:	6003      	str	r3, [r0, #0]
    9f1e:	0010      	movs	r0, r2
    9f20:	4770      	bx	lr
    9f22:	0419      	lsls	r1, r3, #16
    9f24:	2200      	movs	r2, #0
    9f26:	2900      	cmp	r1, #0
    9f28:	d101      	bne.n	9f2e <__lo0bits+0x26>
    9f2a:	0c1b      	lsrs	r3, r3, #16
    9f2c:	3210      	adds	r2, #16
    9f2e:	21ff      	movs	r1, #255	; 0xff
    9f30:	4219      	tst	r1, r3
    9f32:	d101      	bne.n	9f38 <__lo0bits+0x30>
    9f34:	3208      	adds	r2, #8
    9f36:	0a1b      	lsrs	r3, r3, #8
    9f38:	0719      	lsls	r1, r3, #28
    9f3a:	d101      	bne.n	9f40 <__lo0bits+0x38>
    9f3c:	3204      	adds	r2, #4
    9f3e:	091b      	lsrs	r3, r3, #4
    9f40:	0799      	lsls	r1, r3, #30
    9f42:	d101      	bne.n	9f48 <__lo0bits+0x40>
    9f44:	3202      	adds	r2, #2
    9f46:	089b      	lsrs	r3, r3, #2
    9f48:	07d9      	lsls	r1, r3, #31
    9f4a:	d404      	bmi.n	9f56 <__lo0bits+0x4e>
    9f4c:	085b      	lsrs	r3, r3, #1
    9f4e:	d101      	bne.n	9f54 <__lo0bits+0x4c>
    9f50:	2220      	movs	r2, #32
    9f52:	e7e4      	b.n	9f1e <__lo0bits+0x16>
    9f54:	3201      	adds	r2, #1
    9f56:	6003      	str	r3, [r0, #0]
    9f58:	e7e1      	b.n	9f1e <__lo0bits+0x16>
    9f5a:	085b      	lsrs	r3, r3, #1
    9f5c:	6003      	str	r3, [r0, #0]
    9f5e:	2201      	movs	r2, #1
    9f60:	e7dd      	b.n	9f1e <__lo0bits+0x16>
    9f62:	46c0      	nop			; (mov r8, r8)

00009f64 <__i2b>:
    9f64:	b510      	push	{r4, lr}
    9f66:	000c      	movs	r4, r1
    9f68:	2101      	movs	r1, #1
    9f6a:	f7ff fef1 	bl	9d50 <_Balloc>
    9f6e:	2301      	movs	r3, #1
    9f70:	6144      	str	r4, [r0, #20]
    9f72:	6103      	str	r3, [r0, #16]
    9f74:	bd10      	pop	{r4, pc}
    9f76:	46c0      	nop			; (mov r8, r8)

00009f78 <__multiply>:
    9f78:	b5f0      	push	{r4, r5, r6, r7, lr}
    9f7a:	4657      	mov	r7, sl
    9f7c:	464e      	mov	r6, r9
    9f7e:	4645      	mov	r5, r8
    9f80:	46de      	mov	lr, fp
    9f82:	b5e0      	push	{r5, r6, r7, lr}
    9f84:	6914      	ldr	r4, [r2, #16]
    9f86:	690e      	ldr	r6, [r1, #16]
    9f88:	b085      	sub	sp, #20
    9f8a:	000f      	movs	r7, r1
    9f8c:	0015      	movs	r5, r2
    9f8e:	42a6      	cmp	r6, r4
    9f90:	da04      	bge.n	9f9c <__multiply+0x24>
    9f92:	0033      	movs	r3, r6
    9f94:	0017      	movs	r7, r2
    9f96:	0026      	movs	r6, r4
    9f98:	000d      	movs	r5, r1
    9f9a:	001c      	movs	r4, r3
    9f9c:	1933      	adds	r3, r6, r4
    9f9e:	4698      	mov	r8, r3
    9fa0:	68bb      	ldr	r3, [r7, #8]
    9fa2:	6879      	ldr	r1, [r7, #4]
    9fa4:	4598      	cmp	r8, r3
    9fa6:	dd00      	ble.n	9faa <__multiply+0x32>
    9fa8:	3101      	adds	r1, #1
    9faa:	f7ff fed1 	bl	9d50 <_Balloc>
    9fae:	2214      	movs	r2, #20
    9fb0:	0003      	movs	r3, r0
    9fb2:	4694      	mov	ip, r2
    9fb4:	4463      	add	r3, ip
    9fb6:	469b      	mov	fp, r3
    9fb8:	4643      	mov	r3, r8
    9fba:	009b      	lsls	r3, r3, #2
    9fbc:	445b      	add	r3, fp
    9fbe:	0019      	movs	r1, r3
    9fc0:	9302      	str	r3, [sp, #8]
    9fc2:	9003      	str	r0, [sp, #12]
    9fc4:	465b      	mov	r3, fp
    9fc6:	2200      	movs	r2, #0
    9fc8:	458b      	cmp	fp, r1
    9fca:	d203      	bcs.n	9fd4 <__multiply+0x5c>
    9fcc:	9902      	ldr	r1, [sp, #8]
    9fce:	c304      	stmia	r3!, {r2}
    9fd0:	4299      	cmp	r1, r3
    9fd2:	d8fc      	bhi.n	9fce <__multiply+0x56>
    9fd4:	2314      	movs	r3, #20
    9fd6:	00a4      	lsls	r4, r4, #2
    9fd8:	469a      	mov	sl, r3
    9fda:	3714      	adds	r7, #20
    9fdc:	0023      	movs	r3, r4
    9fde:	46bc      	mov	ip, r7
    9fe0:	44aa      	add	sl, r5
    9fe2:	00b6      	lsls	r6, r6, #2
    9fe4:	4453      	add	r3, sl
    9fe6:	9700      	str	r7, [sp, #0]
    9fe8:	44b4      	add	ip, r6
    9fea:	9301      	str	r3, [sp, #4]
    9fec:	459a      	cmp	sl, r3
    9fee:	d24f      	bcs.n	a090 <__multiply+0x118>
    9ff0:	4653      	mov	r3, sl
    9ff2:	681b      	ldr	r3, [r3, #0]
    9ff4:	041e      	lsls	r6, r3, #16
    9ff6:	0c36      	lsrs	r6, r6, #16
    9ff8:	d020      	beq.n	a03c <__multiply+0xc4>
    9ffa:	465c      	mov	r4, fp
    9ffc:	2700      	movs	r7, #0
    9ffe:	9d00      	ldr	r5, [sp, #0]
    a000:	0021      	movs	r1, r4
    a002:	cc08      	ldmia	r4!, {r3}
    a004:	cd04      	ldmia	r5!, {r2}
    a006:	4699      	mov	r9, r3
    a008:	4648      	mov	r0, r9
    a00a:	0413      	lsls	r3, r2, #16
    a00c:	0c1b      	lsrs	r3, r3, #16
    a00e:	4373      	muls	r3, r6
    a010:	0400      	lsls	r0, r0, #16
    a012:	0c00      	lsrs	r0, r0, #16
    a014:	181b      	adds	r3, r3, r0
    a016:	19d8      	adds	r0, r3, r7
    a018:	0c13      	lsrs	r3, r2, #16
    a01a:	464a      	mov	r2, r9
    a01c:	4373      	muls	r3, r6
    a01e:	0c12      	lsrs	r2, r2, #16
    a020:	189b      	adds	r3, r3, r2
    a022:	0c02      	lsrs	r2, r0, #16
    a024:	189b      	adds	r3, r3, r2
    a026:	0402      	lsls	r2, r0, #16
    a028:	0c1f      	lsrs	r7, r3, #16
    a02a:	0c12      	lsrs	r2, r2, #16
    a02c:	041b      	lsls	r3, r3, #16
    a02e:	4313      	orrs	r3, r2
    a030:	600b      	str	r3, [r1, #0]
    a032:	45ac      	cmp	ip, r5
    a034:	d8e4      	bhi.n	a000 <__multiply+0x88>
    a036:	4653      	mov	r3, sl
    a038:	6027      	str	r7, [r4, #0]
    a03a:	681b      	ldr	r3, [r3, #0]
    a03c:	0c1e      	lsrs	r6, r3, #16
    a03e:	d020      	beq.n	a082 <__multiply+0x10a>
    a040:	465b      	mov	r3, fp
    a042:	2100      	movs	r1, #0
    a044:	681b      	ldr	r3, [r3, #0]
    a046:	465c      	mov	r4, fp
    a048:	0018      	movs	r0, r3
    a04a:	000f      	movs	r7, r1
    a04c:	4662      	mov	r2, ip
    a04e:	9d00      	ldr	r5, [sp, #0]
    a050:	8829      	ldrh	r1, [r5, #0]
    a052:	0c00      	lsrs	r0, r0, #16
    a054:	4371      	muls	r1, r6
    a056:	1809      	adds	r1, r1, r0
    a058:	19c9      	adds	r1, r1, r7
    a05a:	041b      	lsls	r3, r3, #16
    a05c:	0408      	lsls	r0, r1, #16
    a05e:	0c1b      	lsrs	r3, r3, #16
    a060:	4303      	orrs	r3, r0
    a062:	6023      	str	r3, [r4, #0]
    a064:	cd08      	ldmia	r5!, {r3}
    a066:	6860      	ldr	r0, [r4, #4]
    a068:	0c1b      	lsrs	r3, r3, #16
    a06a:	4373      	muls	r3, r6
    a06c:	0407      	lsls	r7, r0, #16
    a06e:	0c3f      	lsrs	r7, r7, #16
    a070:	19db      	adds	r3, r3, r7
    a072:	0c09      	lsrs	r1, r1, #16
    a074:	185b      	adds	r3, r3, r1
    a076:	0c1f      	lsrs	r7, r3, #16
    a078:	3404      	adds	r4, #4
    a07a:	42aa      	cmp	r2, r5
    a07c:	d8e8      	bhi.n	a050 <__multiply+0xd8>
    a07e:	4694      	mov	ip, r2
    a080:	6023      	str	r3, [r4, #0]
    a082:	2304      	movs	r3, #4
    a084:	4699      	mov	r9, r3
    a086:	9b01      	ldr	r3, [sp, #4]
    a088:	44ca      	add	sl, r9
    a08a:	44cb      	add	fp, r9
    a08c:	4553      	cmp	r3, sl
    a08e:	d8af      	bhi.n	9ff0 <__multiply+0x78>
    a090:	4643      	mov	r3, r8
    a092:	2b00      	cmp	r3, #0
    a094:	dd0e      	ble.n	a0b4 <__multiply+0x13c>
    a096:	9b02      	ldr	r3, [sp, #8]
    a098:	3b04      	subs	r3, #4
    a09a:	681a      	ldr	r2, [r3, #0]
    a09c:	2a00      	cmp	r2, #0
    a09e:	d109      	bne.n	a0b4 <__multiply+0x13c>
    a0a0:	4642      	mov	r2, r8
    a0a2:	e003      	b.n	a0ac <__multiply+0x134>
    a0a4:	3b04      	subs	r3, #4
    a0a6:	6819      	ldr	r1, [r3, #0]
    a0a8:	2900      	cmp	r1, #0
    a0aa:	d102      	bne.n	a0b2 <__multiply+0x13a>
    a0ac:	3a01      	subs	r2, #1
    a0ae:	2a00      	cmp	r2, #0
    a0b0:	d1f8      	bne.n	a0a4 <__multiply+0x12c>
    a0b2:	4690      	mov	r8, r2
    a0b4:	9b03      	ldr	r3, [sp, #12]
    a0b6:	4642      	mov	r2, r8
    a0b8:	0018      	movs	r0, r3
    a0ba:	611a      	str	r2, [r3, #16]
    a0bc:	b005      	add	sp, #20
    a0be:	bc3c      	pop	{r2, r3, r4, r5}
    a0c0:	4690      	mov	r8, r2
    a0c2:	4699      	mov	r9, r3
    a0c4:	46a2      	mov	sl, r4
    a0c6:	46ab      	mov	fp, r5
    a0c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a0ca:	46c0      	nop			; (mov r8, r8)

0000a0cc <__pow5mult>:
    a0cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a0ce:	4647      	mov	r7, r8
    a0d0:	46ce      	mov	lr, r9
    a0d2:	2303      	movs	r3, #3
    a0d4:	b580      	push	{r7, lr}
    a0d6:	4680      	mov	r8, r0
    a0d8:	000f      	movs	r7, r1
    a0da:	0014      	movs	r4, r2
    a0dc:	4013      	ands	r3, r2
    a0de:	d13a      	bne.n	a156 <__pow5mult+0x8a>
    a0e0:	10a4      	asrs	r4, r4, #2
    a0e2:	003e      	movs	r6, r7
    a0e4:	2c00      	cmp	r4, #0
    a0e6:	d025      	beq.n	a134 <__pow5mult+0x68>
    a0e8:	4643      	mov	r3, r8
    a0ea:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    a0ec:	2d00      	cmp	r5, #0
    a0ee:	d03b      	beq.n	a168 <__pow5mult+0x9c>
    a0f0:	003e      	movs	r6, r7
    a0f2:	2300      	movs	r3, #0
    a0f4:	2701      	movs	r7, #1
    a0f6:	4699      	mov	r9, r3
    a0f8:	4227      	tst	r7, r4
    a0fa:	d107      	bne.n	a10c <__pow5mult+0x40>
    a0fc:	1064      	asrs	r4, r4, #1
    a0fe:	d019      	beq.n	a134 <__pow5mult+0x68>
    a100:	6828      	ldr	r0, [r5, #0]
    a102:	2800      	cmp	r0, #0
    a104:	d01b      	beq.n	a13e <__pow5mult+0x72>
    a106:	0005      	movs	r5, r0
    a108:	4227      	tst	r7, r4
    a10a:	d0f7      	beq.n	a0fc <__pow5mult+0x30>
    a10c:	002a      	movs	r2, r5
    a10e:	0031      	movs	r1, r6
    a110:	4640      	mov	r0, r8
    a112:	f7ff ff31 	bl	9f78 <__multiply>
    a116:	2e00      	cmp	r6, #0
    a118:	d01b      	beq.n	a152 <__pow5mult+0x86>
    a11a:	4642      	mov	r2, r8
    a11c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    a11e:	6873      	ldr	r3, [r6, #4]
    a120:	4694      	mov	ip, r2
    a122:	009b      	lsls	r3, r3, #2
    a124:	4463      	add	r3, ip
    a126:	681a      	ldr	r2, [r3, #0]
    a128:	1064      	asrs	r4, r4, #1
    a12a:	6032      	str	r2, [r6, #0]
    a12c:	601e      	str	r6, [r3, #0]
    a12e:	0006      	movs	r6, r0
    a130:	2c00      	cmp	r4, #0
    a132:	d1e5      	bne.n	a100 <__pow5mult+0x34>
    a134:	0030      	movs	r0, r6
    a136:	bc0c      	pop	{r2, r3}
    a138:	4690      	mov	r8, r2
    a13a:	4699      	mov	r9, r3
    a13c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a13e:	002a      	movs	r2, r5
    a140:	0029      	movs	r1, r5
    a142:	4640      	mov	r0, r8
    a144:	f7ff ff18 	bl	9f78 <__multiply>
    a148:	464b      	mov	r3, r9
    a14a:	6028      	str	r0, [r5, #0]
    a14c:	6003      	str	r3, [r0, #0]
    a14e:	0005      	movs	r5, r0
    a150:	e7da      	b.n	a108 <__pow5mult+0x3c>
    a152:	0006      	movs	r6, r0
    a154:	e7d2      	b.n	a0fc <__pow5mult+0x30>
    a156:	4a0b      	ldr	r2, [pc, #44]	; (a184 <__pow5mult+0xb8>)
    a158:	3b01      	subs	r3, #1
    a15a:	009b      	lsls	r3, r3, #2
    a15c:	589a      	ldr	r2, [r3, r2]
    a15e:	2300      	movs	r3, #0
    a160:	f7ff fe28 	bl	9db4 <__multadd>
    a164:	0007      	movs	r7, r0
    a166:	e7bb      	b.n	a0e0 <__pow5mult+0x14>
    a168:	2101      	movs	r1, #1
    a16a:	4640      	mov	r0, r8
    a16c:	f7ff fdf0 	bl	9d50 <_Balloc>
    a170:	4b05      	ldr	r3, [pc, #20]	; (a188 <__pow5mult+0xbc>)
    a172:	0005      	movs	r5, r0
    a174:	6143      	str	r3, [r0, #20]
    a176:	2301      	movs	r3, #1
    a178:	6103      	str	r3, [r0, #16]
    a17a:	4643      	mov	r3, r8
    a17c:	6498      	str	r0, [r3, #72]	; 0x48
    a17e:	2300      	movs	r3, #0
    a180:	6003      	str	r3, [r0, #0]
    a182:	e7b5      	b.n	a0f0 <__pow5mult+0x24>
    a184:	0000ecb8 	.word	0x0000ecb8
    a188:	00000271 	.word	0x00000271

0000a18c <__lshift>:
    a18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a18e:	464e      	mov	r6, r9
    a190:	4645      	mov	r5, r8
    a192:	46de      	mov	lr, fp
    a194:	4657      	mov	r7, sl
    a196:	b5e0      	push	{r5, r6, r7, lr}
    a198:	000e      	movs	r6, r1
    a19a:	6933      	ldr	r3, [r6, #16]
    a19c:	1154      	asrs	r4, r2, #5
    a19e:	4698      	mov	r8, r3
    a1a0:	44a0      	add	r8, r4
    a1a2:	4643      	mov	r3, r8
    a1a4:	1c5d      	adds	r5, r3, #1
    a1a6:	68b3      	ldr	r3, [r6, #8]
    a1a8:	4683      	mov	fp, r0
    a1aa:	4691      	mov	r9, r2
    a1ac:	6849      	ldr	r1, [r1, #4]
    a1ae:	429d      	cmp	r5, r3
    a1b0:	dd03      	ble.n	a1ba <__lshift+0x2e>
    a1b2:	3101      	adds	r1, #1
    a1b4:	005b      	lsls	r3, r3, #1
    a1b6:	429d      	cmp	r5, r3
    a1b8:	dcfb      	bgt.n	a1b2 <__lshift+0x26>
    a1ba:	4658      	mov	r0, fp
    a1bc:	f7ff fdc8 	bl	9d50 <_Balloc>
    a1c0:	0003      	movs	r3, r0
    a1c2:	4684      	mov	ip, r0
    a1c4:	3314      	adds	r3, #20
    a1c6:	2c00      	cmp	r4, #0
    a1c8:	dd06      	ble.n	a1d8 <__lshift+0x4c>
    a1ca:	2100      	movs	r1, #0
    a1cc:	00a4      	lsls	r4, r4, #2
    a1ce:	001a      	movs	r2, r3
    a1d0:	191b      	adds	r3, r3, r4
    a1d2:	c202      	stmia	r2!, {r1}
    a1d4:	4293      	cmp	r3, r2
    a1d6:	d1fc      	bne.n	a1d2 <__lshift+0x46>
    a1d8:	6932      	ldr	r2, [r6, #16]
    a1da:	4648      	mov	r0, r9
    a1dc:	0097      	lsls	r7, r2, #2
    a1de:	0031      	movs	r1, r6
    a1e0:	221f      	movs	r2, #31
    a1e2:	3114      	adds	r1, #20
    a1e4:	4010      	ands	r0, r2
    a1e6:	19cf      	adds	r7, r1, r7
    a1e8:	4681      	mov	r9, r0
    a1ea:	2800      	cmp	r0, #0
    a1ec:	d025      	beq.n	a23a <__lshift+0xae>
    a1ee:	2220      	movs	r2, #32
    a1f0:	1a12      	subs	r2, r2, r0
    a1f2:	4692      	mov	sl, r2
    a1f4:	2200      	movs	r2, #0
    a1f6:	4648      	mov	r0, r9
    a1f8:	680c      	ldr	r4, [r1, #0]
    a1fa:	4084      	lsls	r4, r0
    a1fc:	4650      	mov	r0, sl
    a1fe:	4314      	orrs	r4, r2
    a200:	601c      	str	r4, [r3, #0]
    a202:	c904      	ldmia	r1!, {r2}
    a204:	3304      	adds	r3, #4
    a206:	40c2      	lsrs	r2, r0
    a208:	428f      	cmp	r7, r1
    a20a:	d8f4      	bhi.n	a1f6 <__lshift+0x6a>
    a20c:	601a      	str	r2, [r3, #0]
    a20e:	2a00      	cmp	r2, #0
    a210:	d001      	beq.n	a216 <__lshift+0x8a>
    a212:	4645      	mov	r5, r8
    a214:	3502      	adds	r5, #2
    a216:	4663      	mov	r3, ip
    a218:	3d01      	subs	r5, #1
    a21a:	611d      	str	r5, [r3, #16]
    a21c:	6873      	ldr	r3, [r6, #4]
    a21e:	4660      	mov	r0, ip
    a220:	009a      	lsls	r2, r3, #2
    a222:	465b      	mov	r3, fp
    a224:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    a226:	189b      	adds	r3, r3, r2
    a228:	681a      	ldr	r2, [r3, #0]
    a22a:	6032      	str	r2, [r6, #0]
    a22c:	601e      	str	r6, [r3, #0]
    a22e:	bc3c      	pop	{r2, r3, r4, r5}
    a230:	4690      	mov	r8, r2
    a232:	4699      	mov	r9, r3
    a234:	46a2      	mov	sl, r4
    a236:	46ab      	mov	fp, r5
    a238:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a23a:	c904      	ldmia	r1!, {r2}
    a23c:	c304      	stmia	r3!, {r2}
    a23e:	428f      	cmp	r7, r1
    a240:	d9e9      	bls.n	a216 <__lshift+0x8a>
    a242:	c904      	ldmia	r1!, {r2}
    a244:	c304      	stmia	r3!, {r2}
    a246:	428f      	cmp	r7, r1
    a248:	d8f7      	bhi.n	a23a <__lshift+0xae>
    a24a:	e7e4      	b.n	a216 <__lshift+0x8a>

0000a24c <__mcmp>:
    a24c:	690a      	ldr	r2, [r1, #16]
    a24e:	6903      	ldr	r3, [r0, #16]
    a250:	b530      	push	{r4, r5, lr}
    a252:	0005      	movs	r5, r0
    a254:	1a98      	subs	r0, r3, r2
    a256:	d111      	bne.n	a27c <__mcmp+0x30>
    a258:	0092      	lsls	r2, r2, #2
    a25a:	3514      	adds	r5, #20
    a25c:	3114      	adds	r1, #20
    a25e:	18ab      	adds	r3, r5, r2
    a260:	1889      	adds	r1, r1, r2
    a262:	e001      	b.n	a268 <__mcmp+0x1c>
    a264:	429d      	cmp	r5, r3
    a266:	d209      	bcs.n	a27c <__mcmp+0x30>
    a268:	3b04      	subs	r3, #4
    a26a:	3904      	subs	r1, #4
    a26c:	681c      	ldr	r4, [r3, #0]
    a26e:	680a      	ldr	r2, [r1, #0]
    a270:	4294      	cmp	r4, r2
    a272:	d0f7      	beq.n	a264 <__mcmp+0x18>
    a274:	4294      	cmp	r4, r2
    a276:	4180      	sbcs	r0, r0
    a278:	2201      	movs	r2, #1
    a27a:	4310      	orrs	r0, r2
    a27c:	bd30      	pop	{r4, r5, pc}
    a27e:	46c0      	nop			; (mov r8, r8)

0000a280 <__mdiff>:
    a280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a282:	4645      	mov	r5, r8
    a284:	46de      	mov	lr, fp
    a286:	4657      	mov	r7, sl
    a288:	464e      	mov	r6, r9
    a28a:	0014      	movs	r4, r2
    a28c:	690b      	ldr	r3, [r1, #16]
    a28e:	6912      	ldr	r2, [r2, #16]
    a290:	b5e0      	push	{r5, r6, r7, lr}
    a292:	4688      	mov	r8, r1
    a294:	1a9d      	subs	r5, r3, r2
    a296:	d11a      	bne.n	a2ce <__mdiff+0x4e>
    a298:	000f      	movs	r7, r1
    a29a:	2114      	movs	r1, #20
    a29c:	468c      	mov	ip, r1
    a29e:	0092      	lsls	r2, r2, #2
    a2a0:	3714      	adds	r7, #20
    a2a2:	44a4      	add	ip, r4
    a2a4:	18bb      	adds	r3, r7, r2
    a2a6:	4462      	add	r2, ip
    a2a8:	e002      	b.n	a2b0 <__mdiff+0x30>
    a2aa:	429f      	cmp	r7, r3
    a2ac:	d300      	bcc.n	a2b0 <__mdiff+0x30>
    a2ae:	e070      	b.n	a392 <__mdiff+0x112>
    a2b0:	3b04      	subs	r3, #4
    a2b2:	3a04      	subs	r2, #4
    a2b4:	681e      	ldr	r6, [r3, #0]
    a2b6:	6811      	ldr	r1, [r2, #0]
    a2b8:	428e      	cmp	r6, r1
    a2ba:	d0f6      	beq.n	a2aa <__mdiff+0x2a>
    a2bc:	d300      	bcc.n	a2c0 <__mdiff+0x40>
    a2be:	e071      	b.n	a3a4 <__mdiff+0x124>
    a2c0:	4643      	mov	r3, r8
    a2c2:	003e      	movs	r6, r7
    a2c4:	46a0      	mov	r8, r4
    a2c6:	4667      	mov	r7, ip
    a2c8:	001c      	movs	r4, r3
    a2ca:	2501      	movs	r5, #1
    a2cc:	e006      	b.n	a2dc <__mdiff+0x5c>
    a2ce:	2d00      	cmp	r5, #0
    a2d0:	db6a      	blt.n	a3a8 <__mdiff+0x128>
    a2d2:	4647      	mov	r7, r8
    a2d4:	0026      	movs	r6, r4
    a2d6:	2500      	movs	r5, #0
    a2d8:	3714      	adds	r7, #20
    a2da:	3614      	adds	r6, #20
    a2dc:	4643      	mov	r3, r8
    a2de:	6859      	ldr	r1, [r3, #4]
    a2e0:	f7ff fd36 	bl	9d50 <_Balloc>
    a2e4:	4643      	mov	r3, r8
    a2e6:	4681      	mov	r9, r0
    a2e8:	60c5      	str	r5, [r0, #12]
    a2ea:	6918      	ldr	r0, [r3, #16]
    a2ec:	464d      	mov	r5, r9
    a2ee:	0083      	lsls	r3, r0, #2
    a2f0:	469c      	mov	ip, r3
    a2f2:	6923      	ldr	r3, [r4, #16]
    a2f4:	44bc      	add	ip, r7
    a2f6:	009b      	lsls	r3, r3, #2
    a2f8:	4698      	mov	r8, r3
    a2fa:	2300      	movs	r3, #0
    a2fc:	44b0      	add	r8, r6
    a2fe:	3514      	adds	r5, #20
    a300:	469a      	mov	sl, r3
    a302:	e000      	b.n	a306 <__mdiff+0x86>
    a304:	0027      	movs	r7, r4
    a306:	ce04      	ldmia	r6!, {r2}
    a308:	003c      	movs	r4, r7
    a30a:	4693      	mov	fp, r2
    a30c:	4659      	mov	r1, fp
    a30e:	cc08      	ldmia	r4!, {r3}
    a310:	0409      	lsls	r1, r1, #16
    a312:	041a      	lsls	r2, r3, #16
    a314:	0c12      	lsrs	r2, r2, #16
    a316:	4452      	add	r2, sl
    a318:	0c09      	lsrs	r1, r1, #16
    a31a:	1a52      	subs	r2, r2, r1
    a31c:	0c19      	lsrs	r1, r3, #16
    a31e:	465b      	mov	r3, fp
    a320:	0c1b      	lsrs	r3, r3, #16
    a322:	1acb      	subs	r3, r1, r3
    a324:	1411      	asrs	r1, r2, #16
    a326:	185b      	adds	r3, r3, r1
    a328:	0412      	lsls	r2, r2, #16
    a32a:	1419      	asrs	r1, r3, #16
    a32c:	0c12      	lsrs	r2, r2, #16
    a32e:	041b      	lsls	r3, r3, #16
    a330:	468a      	mov	sl, r1
    a332:	4313      	orrs	r3, r2
    a334:	1d29      	adds	r1, r5, #4
    a336:	602b      	str	r3, [r5, #0]
    a338:	000d      	movs	r5, r1
    a33a:	45b0      	cmp	r8, r6
    a33c:	d8e2      	bhi.n	a304 <__mdiff+0x84>
    a33e:	45a4      	cmp	ip, r4
    a340:	d916      	bls.n	a370 <__mdiff+0xf0>
    a342:	cc08      	ldmia	r4!, {r3}
    a344:	041a      	lsls	r2, r3, #16
    a346:	0c12      	lsrs	r2, r2, #16
    a348:	4452      	add	r2, sl
    a34a:	1416      	asrs	r6, r2, #16
    a34c:	0c1b      	lsrs	r3, r3, #16
    a34e:	199b      	adds	r3, r3, r6
    a350:	0412      	lsls	r2, r2, #16
    a352:	141e      	asrs	r6, r3, #16
    a354:	0c12      	lsrs	r2, r2, #16
    a356:	041b      	lsls	r3, r3, #16
    a358:	4313      	orrs	r3, r2
    a35a:	46b2      	mov	sl, r6
    a35c:	c508      	stmia	r5!, {r3}
    a35e:	45a4      	cmp	ip, r4
    a360:	d8ef      	bhi.n	a342 <__mdiff+0xc2>
    a362:	4662      	mov	r2, ip
    a364:	2403      	movs	r4, #3
    a366:	1bd2      	subs	r2, r2, r7
    a368:	3a05      	subs	r2, #5
    a36a:	43a2      	bics	r2, r4
    a36c:	3204      	adds	r2, #4
    a36e:	1889      	adds	r1, r1, r2
    a370:	3904      	subs	r1, #4
    a372:	2b00      	cmp	r3, #0
    a374:	d104      	bne.n	a380 <__mdiff+0x100>
    a376:	3904      	subs	r1, #4
    a378:	680b      	ldr	r3, [r1, #0]
    a37a:	3801      	subs	r0, #1
    a37c:	2b00      	cmp	r3, #0
    a37e:	d0fa      	beq.n	a376 <__mdiff+0xf6>
    a380:	464b      	mov	r3, r9
    a382:	6118      	str	r0, [r3, #16]
    a384:	4648      	mov	r0, r9
    a386:	bc3c      	pop	{r2, r3, r4, r5}
    a388:	4690      	mov	r8, r2
    a38a:	4699      	mov	r9, r3
    a38c:	46a2      	mov	sl, r4
    a38e:	46ab      	mov	fp, r5
    a390:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a392:	2100      	movs	r1, #0
    a394:	f7ff fcdc 	bl	9d50 <_Balloc>
    a398:	2301      	movs	r3, #1
    a39a:	6103      	str	r3, [r0, #16]
    a39c:	2300      	movs	r3, #0
    a39e:	4681      	mov	r9, r0
    a3a0:	6143      	str	r3, [r0, #20]
    a3a2:	e7ef      	b.n	a384 <__mdiff+0x104>
    a3a4:	4666      	mov	r6, ip
    a3a6:	e799      	b.n	a2dc <__mdiff+0x5c>
    a3a8:	0027      	movs	r7, r4
    a3aa:	000e      	movs	r6, r1
    a3ac:	46a0      	mov	r8, r4
    a3ae:	3714      	adds	r7, #20
    a3b0:	3614      	adds	r6, #20
    a3b2:	000c      	movs	r4, r1
    a3b4:	2501      	movs	r5, #1
    a3b6:	e791      	b.n	a2dc <__mdiff+0x5c>

0000a3b8 <__ulp>:
    a3b8:	4b10      	ldr	r3, [pc, #64]	; (a3fc <__ulp+0x44>)
    a3ba:	b510      	push	{r4, lr}
    a3bc:	4019      	ands	r1, r3
    a3be:	4b10      	ldr	r3, [pc, #64]	; (a400 <__ulp+0x48>)
    a3c0:	469c      	mov	ip, r3
    a3c2:	4461      	add	r1, ip
    a3c4:	2900      	cmp	r1, #0
    a3c6:	dd04      	ble.n	a3d2 <__ulp+0x1a>
    a3c8:	2200      	movs	r2, #0
    a3ca:	000b      	movs	r3, r1
    a3cc:	0010      	movs	r0, r2
    a3ce:	0019      	movs	r1, r3
    a3d0:	bd10      	pop	{r4, pc}
    a3d2:	4249      	negs	r1, r1
    a3d4:	1509      	asrs	r1, r1, #20
    a3d6:	2200      	movs	r2, #0
    a3d8:	2300      	movs	r3, #0
    a3da:	2913      	cmp	r1, #19
    a3dc:	dd08      	ble.n	a3f0 <__ulp+0x38>
    a3de:	3914      	subs	r1, #20
    a3e0:	2001      	movs	r0, #1
    a3e2:	291e      	cmp	r1, #30
    a3e4:	dc02      	bgt.n	a3ec <__ulp+0x34>
    a3e6:	241f      	movs	r4, #31
    a3e8:	1a61      	subs	r1, r4, r1
    a3ea:	4088      	lsls	r0, r1
    a3ec:	0002      	movs	r2, r0
    a3ee:	e7ed      	b.n	a3cc <__ulp+0x14>
    a3f0:	2080      	movs	r0, #128	; 0x80
    a3f2:	0300      	lsls	r0, r0, #12
    a3f4:	4108      	asrs	r0, r1
    a3f6:	0003      	movs	r3, r0
    a3f8:	e7e8      	b.n	a3cc <__ulp+0x14>
    a3fa:	46c0      	nop			; (mov r8, r8)
    a3fc:	7ff00000 	.word	0x7ff00000
    a400:	fcc00000 	.word	0xfcc00000

0000a404 <__b2d>:
    a404:	b5f0      	push	{r4, r5, r6, r7, lr}
    a406:	464f      	mov	r7, r9
    a408:	4646      	mov	r6, r8
    a40a:	46d6      	mov	lr, sl
    a40c:	6904      	ldr	r4, [r0, #16]
    a40e:	b5c0      	push	{r6, r7, lr}
    a410:	00a4      	lsls	r4, r4, #2
    a412:	0006      	movs	r6, r0
    a414:	46a1      	mov	r9, r4
    a416:	3614      	adds	r6, #20
    a418:	44b1      	add	r9, r6
    a41a:	464b      	mov	r3, r9
    a41c:	4688      	mov	r8, r1
    a41e:	1f1f      	subs	r7, r3, #4
    a420:	683d      	ldr	r5, [r7, #0]
    a422:	0028      	movs	r0, r5
    a424:	f7ff fd56 	bl	9ed4 <__hi0bits>
    a428:	2120      	movs	r1, #32
    a42a:	4643      	mov	r3, r8
    a42c:	1a0a      	subs	r2, r1, r0
    a42e:	601a      	str	r2, [r3, #0]
    a430:	280a      	cmp	r0, #10
    a432:	dc20      	bgt.n	a476 <__b2d+0x72>
    a434:	3915      	subs	r1, #21
    a436:	1a0b      	subs	r3, r1, r0
    a438:	469a      	mov	sl, r3
    a43a:	002b      	movs	r3, r5
    a43c:	4652      	mov	r2, sl
    a43e:	4926      	ldr	r1, [pc, #152]	; (a4d8 <__b2d+0xd4>)
    a440:	40d3      	lsrs	r3, r2
    a442:	4688      	mov	r8, r1
    a444:	0019      	movs	r1, r3
    a446:	4644      	mov	r4, r8
    a448:	4321      	orrs	r1, r4
    a44a:	000b      	movs	r3, r1
    a44c:	2100      	movs	r1, #0
    a44e:	468c      	mov	ip, r1
    a450:	42be      	cmp	r6, r7
    a452:	d204      	bcs.n	a45e <__b2d+0x5a>
    a454:	464c      	mov	r4, r9
    a456:	3c08      	subs	r4, #8
    a458:	6824      	ldr	r4, [r4, #0]
    a45a:	40d4      	lsrs	r4, r2
    a45c:	46a4      	mov	ip, r4
    a45e:	3015      	adds	r0, #21
    a460:	4085      	lsls	r5, r0
    a462:	4661      	mov	r1, ip
    a464:	4329      	orrs	r1, r5
    a466:	000a      	movs	r2, r1
    a468:	0010      	movs	r0, r2
    a46a:	0019      	movs	r1, r3
    a46c:	bc1c      	pop	{r2, r3, r4}
    a46e:	4690      	mov	r8, r2
    a470:	4699      	mov	r9, r3
    a472:	46a2      	mov	sl, r4
    a474:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a476:	42be      	cmp	r6, r7
    a478:	d21b      	bcs.n	a4b2 <__b2d+0xae>
    a47a:	2308      	movs	r3, #8
    a47c:	425b      	negs	r3, r3
    a47e:	469c      	mov	ip, r3
    a480:	44cc      	add	ip, r9
    a482:	4663      	mov	r3, ip
    a484:	380b      	subs	r0, #11
    a486:	681f      	ldr	r7, [r3, #0]
    a488:	2800      	cmp	r0, #0
    a48a:	d016      	beq.n	a4ba <__b2d+0xb6>
    a48c:	4085      	lsls	r5, r0
    a48e:	4b12      	ldr	r3, [pc, #72]	; (a4d8 <__b2d+0xd4>)
    a490:	1a09      	subs	r1, r1, r0
    a492:	431d      	orrs	r5, r3
    a494:	003b      	movs	r3, r7
    a496:	40cb      	lsrs	r3, r1
    a498:	001c      	movs	r4, r3
    a49a:	432c      	orrs	r4, r5
    a49c:	0023      	movs	r3, r4
    a49e:	4566      	cmp	r6, ip
    a4a0:	d217      	bcs.n	a4d2 <__b2d+0xce>
    a4a2:	464c      	mov	r4, r9
    a4a4:	3c0c      	subs	r4, #12
    a4a6:	6824      	ldr	r4, [r4, #0]
    a4a8:	4087      	lsls	r7, r0
    a4aa:	40cc      	lsrs	r4, r1
    a4ac:	4327      	orrs	r7, r4
    a4ae:	003a      	movs	r2, r7
    a4b0:	e7da      	b.n	a468 <__b2d+0x64>
    a4b2:	380b      	subs	r0, #11
    a4b4:	2700      	movs	r7, #0
    a4b6:	2800      	cmp	r0, #0
    a4b8:	d104      	bne.n	a4c4 <__b2d+0xc0>
    a4ba:	4907      	ldr	r1, [pc, #28]	; (a4d8 <__b2d+0xd4>)
    a4bc:	003a      	movs	r2, r7
    a4be:	4329      	orrs	r1, r5
    a4c0:	000b      	movs	r3, r1
    a4c2:	e7d1      	b.n	a468 <__b2d+0x64>
    a4c4:	4085      	lsls	r5, r0
    a4c6:	2700      	movs	r7, #0
    a4c8:	4903      	ldr	r1, [pc, #12]	; (a4d8 <__b2d+0xd4>)
    a4ca:	003a      	movs	r2, r7
    a4cc:	4329      	orrs	r1, r5
    a4ce:	000b      	movs	r3, r1
    a4d0:	e7ca      	b.n	a468 <__b2d+0x64>
    a4d2:	4087      	lsls	r7, r0
    a4d4:	003a      	movs	r2, r7
    a4d6:	e7c7      	b.n	a468 <__b2d+0x64>
    a4d8:	3ff00000 	.word	0x3ff00000

0000a4dc <__d2b>:
    a4dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    a4de:	2101      	movs	r1, #1
    a4e0:	001c      	movs	r4, r3
    a4e2:	b083      	sub	sp, #12
    a4e4:	9e08      	ldr	r6, [sp, #32]
    a4e6:	0015      	movs	r5, r2
    a4e8:	f7ff fc32 	bl	9d50 <_Balloc>
    a4ec:	0323      	lsls	r3, r4, #12
    a4ee:	0064      	lsls	r4, r4, #1
    a4f0:	0007      	movs	r7, r0
    a4f2:	0b1b      	lsrs	r3, r3, #12
    a4f4:	0d64      	lsrs	r4, r4, #21
    a4f6:	d002      	beq.n	a4fe <__d2b+0x22>
    a4f8:	2280      	movs	r2, #128	; 0x80
    a4fa:	0352      	lsls	r2, r2, #13
    a4fc:	4313      	orrs	r3, r2
    a4fe:	9301      	str	r3, [sp, #4]
    a500:	2d00      	cmp	r5, #0
    a502:	d019      	beq.n	a538 <__d2b+0x5c>
    a504:	4668      	mov	r0, sp
    a506:	9500      	str	r5, [sp, #0]
    a508:	f7ff fcfe 	bl	9f08 <__lo0bits>
    a50c:	2800      	cmp	r0, #0
    a50e:	d130      	bne.n	a572 <__d2b+0x96>
    a510:	9b00      	ldr	r3, [sp, #0]
    a512:	617b      	str	r3, [r7, #20]
    a514:	9b01      	ldr	r3, [sp, #4]
    a516:	61bb      	str	r3, [r7, #24]
    a518:	1e5a      	subs	r2, r3, #1
    a51a:	4193      	sbcs	r3, r2
    a51c:	1c5d      	adds	r5, r3, #1
    a51e:	613d      	str	r5, [r7, #16]
    a520:	2c00      	cmp	r4, #0
    a522:	d014      	beq.n	a54e <__d2b+0x72>
    a524:	4b19      	ldr	r3, [pc, #100]	; (a58c <__d2b+0xb0>)
    a526:	469c      	mov	ip, r3
    a528:	2335      	movs	r3, #53	; 0x35
    a52a:	4464      	add	r4, ip
    a52c:	1824      	adds	r4, r4, r0
    a52e:	1a18      	subs	r0, r3, r0
    a530:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a532:	6034      	str	r4, [r6, #0]
    a534:	6018      	str	r0, [r3, #0]
    a536:	e019      	b.n	a56c <__d2b+0x90>
    a538:	a801      	add	r0, sp, #4
    a53a:	f7ff fce5 	bl	9f08 <__lo0bits>
    a53e:	9b01      	ldr	r3, [sp, #4]
    a540:	3020      	adds	r0, #32
    a542:	617b      	str	r3, [r7, #20]
    a544:	2301      	movs	r3, #1
    a546:	2501      	movs	r5, #1
    a548:	613b      	str	r3, [r7, #16]
    a54a:	2c00      	cmp	r4, #0
    a54c:	d1ea      	bne.n	a524 <__d2b+0x48>
    a54e:	4b10      	ldr	r3, [pc, #64]	; (a590 <__d2b+0xb4>)
    a550:	469c      	mov	ip, r3
    a552:	4b10      	ldr	r3, [pc, #64]	; (a594 <__d2b+0xb8>)
    a554:	4460      	add	r0, ip
    a556:	18eb      	adds	r3, r5, r3
    a558:	009b      	lsls	r3, r3, #2
    a55a:	18fb      	adds	r3, r7, r3
    a55c:	6030      	str	r0, [r6, #0]
    a55e:	6958      	ldr	r0, [r3, #20]
    a560:	f7ff fcb8 	bl	9ed4 <__hi0bits>
    a564:	016b      	lsls	r3, r5, #5
    a566:	1a18      	subs	r0, r3, r0
    a568:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a56a:	6018      	str	r0, [r3, #0]
    a56c:	0038      	movs	r0, r7
    a56e:	b003      	add	sp, #12
    a570:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a572:	9b01      	ldr	r3, [sp, #4]
    a574:	2220      	movs	r2, #32
    a576:	0019      	movs	r1, r3
    a578:	1a12      	subs	r2, r2, r0
    a57a:	4091      	lsls	r1, r2
    a57c:	000a      	movs	r2, r1
    a57e:	40c3      	lsrs	r3, r0
    a580:	9900      	ldr	r1, [sp, #0]
    a582:	9301      	str	r3, [sp, #4]
    a584:	430a      	orrs	r2, r1
    a586:	617a      	str	r2, [r7, #20]
    a588:	e7c5      	b.n	a516 <__d2b+0x3a>
    a58a:	46c0      	nop			; (mov r8, r8)
    a58c:	fffffbcd 	.word	0xfffffbcd
    a590:	fffffbce 	.word	0xfffffbce
    a594:	3fffffff 	.word	0x3fffffff

0000a598 <__ratio>:
    a598:	b5f0      	push	{r4, r5, r6, r7, lr}
    a59a:	46ce      	mov	lr, r9
    a59c:	4647      	mov	r7, r8
    a59e:	b580      	push	{r7, lr}
    a5a0:	b085      	sub	sp, #20
    a5a2:	4688      	mov	r8, r1
    a5a4:	a902      	add	r1, sp, #8
    a5a6:	4681      	mov	r9, r0
    a5a8:	f7ff ff2c 	bl	a404 <__b2d>
    a5ac:	0006      	movs	r6, r0
    a5ae:	000f      	movs	r7, r1
    a5b0:	4640      	mov	r0, r8
    a5b2:	a903      	add	r1, sp, #12
    a5b4:	f7ff ff26 	bl	a404 <__b2d>
    a5b8:	464b      	mov	r3, r9
    a5ba:	691b      	ldr	r3, [r3, #16]
    a5bc:	9000      	str	r0, [sp, #0]
    a5be:	9101      	str	r1, [sp, #4]
    a5c0:	469c      	mov	ip, r3
    a5c2:	4643      	mov	r3, r8
    a5c4:	691b      	ldr	r3, [r3, #16]
    a5c6:	4698      	mov	r8, r3
    a5c8:	4663      	mov	r3, ip
    a5ca:	4642      	mov	r2, r8
    a5cc:	1a9b      	subs	r3, r3, r2
    a5ce:	015b      	lsls	r3, r3, #5
    a5d0:	469c      	mov	ip, r3
    a5d2:	9a03      	ldr	r2, [sp, #12]
    a5d4:	9b02      	ldr	r3, [sp, #8]
    a5d6:	1a9b      	subs	r3, r3, r2
    a5d8:	4698      	mov	r8, r3
    a5da:	44c4      	add	ip, r8
    a5dc:	4663      	mov	r3, ip
    a5de:	2b00      	cmp	r3, #0
    a5e0:	dd0d      	ble.n	a5fe <__ratio+0x66>
    a5e2:	051b      	lsls	r3, r3, #20
    a5e4:	19dd      	adds	r5, r3, r7
    a5e6:	002f      	movs	r7, r5
    a5e8:	0002      	movs	r2, r0
    a5ea:	000b      	movs	r3, r1
    a5ec:	0030      	movs	r0, r6
    a5ee:	0039      	movs	r1, r7
    a5f0:	f7f9 fbe2 	bl	3db8 <__aeabi_ddiv>
    a5f4:	b005      	add	sp, #20
    a5f6:	bc0c      	pop	{r2, r3}
    a5f8:	4690      	mov	r8, r2
    a5fa:	4699      	mov	r9, r3
    a5fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a5fe:	4663      	mov	r3, ip
    a600:	0518      	lsls	r0, r3, #20
    a602:	1a0b      	subs	r3, r1, r0
    a604:	9301      	str	r3, [sp, #4]
    a606:	9800      	ldr	r0, [sp, #0]
    a608:	9901      	ldr	r1, [sp, #4]
    a60a:	e7ed      	b.n	a5e8 <__ratio+0x50>

0000a60c <__copybits>:
    a60c:	0013      	movs	r3, r2
    a60e:	b570      	push	{r4, r5, r6, lr}
    a610:	1e4c      	subs	r4, r1, #1
    a612:	6911      	ldr	r1, [r2, #16]
    a614:	1164      	asrs	r4, r4, #5
    a616:	3401      	adds	r4, #1
    a618:	3314      	adds	r3, #20
    a61a:	0089      	lsls	r1, r1, #2
    a61c:	00a4      	lsls	r4, r4, #2
    a61e:	1859      	adds	r1, r3, r1
    a620:	1904      	adds	r4, r0, r4
    a622:	428b      	cmp	r3, r1
    a624:	d20b      	bcs.n	a63e <__copybits+0x32>
    a626:	0005      	movs	r5, r0
    a628:	cb40      	ldmia	r3!, {r6}
    a62a:	c540      	stmia	r5!, {r6}
    a62c:	4299      	cmp	r1, r3
    a62e:	d8fb      	bhi.n	a628 <__copybits+0x1c>
    a630:	2303      	movs	r3, #3
    a632:	3218      	adds	r2, #24
    a634:	1a9a      	subs	r2, r3, r2
    a636:	1889      	adds	r1, r1, r2
    a638:	4399      	bics	r1, r3
    a63a:	3104      	adds	r1, #4
    a63c:	1840      	adds	r0, r0, r1
    a63e:	2300      	movs	r3, #0
    a640:	4284      	cmp	r4, r0
    a642:	d902      	bls.n	a64a <__copybits+0x3e>
    a644:	c008      	stmia	r0!, {r3}
    a646:	4284      	cmp	r4, r0
    a648:	d8fc      	bhi.n	a644 <__copybits+0x38>
    a64a:	bd70      	pop	{r4, r5, r6, pc}

0000a64c <__any_on>:
    a64c:	0002      	movs	r2, r0
    a64e:	6903      	ldr	r3, [r0, #16]
    a650:	b510      	push	{r4, lr}
    a652:	3214      	adds	r2, #20
    a654:	1148      	asrs	r0, r1, #5
    a656:	4283      	cmp	r3, r0
    a658:	da0f      	bge.n	a67a <__any_on+0x2e>
    a65a:	009b      	lsls	r3, r3, #2
    a65c:	18d3      	adds	r3, r2, r3
    a65e:	429a      	cmp	r2, r3
    a660:	d221      	bcs.n	a6a6 <__any_on+0x5a>
    a662:	3b04      	subs	r3, #4
    a664:	6818      	ldr	r0, [r3, #0]
    a666:	2800      	cmp	r0, #0
    a668:	d004      	beq.n	a674 <__any_on+0x28>
    a66a:	e01a      	b.n	a6a2 <__any_on+0x56>
    a66c:	3b04      	subs	r3, #4
    a66e:	6819      	ldr	r1, [r3, #0]
    a670:	2900      	cmp	r1, #0
    a672:	d116      	bne.n	a6a2 <__any_on+0x56>
    a674:	429a      	cmp	r2, r3
    a676:	d3f9      	bcc.n	a66c <__any_on+0x20>
    a678:	bd10      	pop	{r4, pc}
    a67a:	4283      	cmp	r3, r0
    a67c:	dd0e      	ble.n	a69c <__any_on+0x50>
    a67e:	231f      	movs	r3, #31
    a680:	4019      	ands	r1, r3
    a682:	0083      	lsls	r3, r0, #2
    a684:	18d3      	adds	r3, r2, r3
    a686:	2900      	cmp	r1, #0
    a688:	d0e9      	beq.n	a65e <__any_on+0x12>
    a68a:	681c      	ldr	r4, [r3, #0]
    a68c:	0020      	movs	r0, r4
    a68e:	40c8      	lsrs	r0, r1
    a690:	4088      	lsls	r0, r1
    a692:	0001      	movs	r1, r0
    a694:	2001      	movs	r0, #1
    a696:	428c      	cmp	r4, r1
    a698:	d1ee      	bne.n	a678 <__any_on+0x2c>
    a69a:	e7e0      	b.n	a65e <__any_on+0x12>
    a69c:	0083      	lsls	r3, r0, #2
    a69e:	18d3      	adds	r3, r2, r3
    a6a0:	e7dd      	b.n	a65e <__any_on+0x12>
    a6a2:	2001      	movs	r0, #1
    a6a4:	e7e8      	b.n	a678 <__any_on+0x2c>
    a6a6:	2000      	movs	r0, #0
    a6a8:	e7e6      	b.n	a678 <__any_on+0x2c>
    a6aa:	46c0      	nop			; (mov r8, r8)

0000a6ac <_sbrk_r>:
    a6ac:	2300      	movs	r3, #0
    a6ae:	b570      	push	{r4, r5, r6, lr}
    a6b0:	4c06      	ldr	r4, [pc, #24]	; (a6cc <_sbrk_r+0x20>)
    a6b2:	0005      	movs	r5, r0
    a6b4:	0008      	movs	r0, r1
    a6b6:	6023      	str	r3, [r4, #0]
    a6b8:	f7f6 f94e 	bl	958 <_sbrk>
    a6bc:	1c43      	adds	r3, r0, #1
    a6be:	d000      	beq.n	a6c2 <_sbrk_r+0x16>
    a6c0:	bd70      	pop	{r4, r5, r6, pc}
    a6c2:	6823      	ldr	r3, [r4, #0]
    a6c4:	2b00      	cmp	r3, #0
    a6c6:	d0fb      	beq.n	a6c0 <_sbrk_r+0x14>
    a6c8:	602b      	str	r3, [r5, #0]
    a6ca:	e7f9      	b.n	a6c0 <_sbrk_r+0x14>
    a6cc:	20001454 	.word	0x20001454

0000a6d0 <__sccl>:
    a6d0:	b570      	push	{r4, r5, r6, lr}
    a6d2:	780c      	ldrb	r4, [r1, #0]
    a6d4:	2c5e      	cmp	r4, #94	; 0x5e
    a6d6:	d028      	beq.n	a72a <__sccl+0x5a>
    a6d8:	1c4e      	adds	r6, r1, #1
    a6da:	2500      	movs	r5, #0
    a6dc:	2100      	movs	r1, #0
    a6de:	0003      	movs	r3, r0
    a6e0:	1c42      	adds	r2, r0, #1
    a6e2:	32ff      	adds	r2, #255	; 0xff
    a6e4:	7019      	strb	r1, [r3, #0]
    a6e6:	3301      	adds	r3, #1
    a6e8:	429a      	cmp	r2, r3
    a6ea:	d1fb      	bne.n	a6e4 <__sccl+0x14>
    a6ec:	1e71      	subs	r1, r6, #1
    a6ee:	2c00      	cmp	r4, #0
    a6f0:	d00e      	beq.n	a710 <__sccl+0x40>
    a6f2:	2301      	movs	r3, #1
    a6f4:	406b      	eors	r3, r5
    a6f6:	5503      	strb	r3, [r0, r4]
    a6f8:	7832      	ldrb	r2, [r6, #0]
    a6fa:	1c71      	adds	r1, r6, #1
    a6fc:	2a2d      	cmp	r2, #45	; 0x2d
    a6fe:	d009      	beq.n	a714 <__sccl+0x44>
    a700:	2a5d      	cmp	r2, #93	; 0x5d
    a702:	d005      	beq.n	a710 <__sccl+0x40>
    a704:	2a00      	cmp	r2, #0
    a706:	d002      	beq.n	a70e <__sccl+0x3e>
    a708:	0014      	movs	r4, r2
    a70a:	000e      	movs	r6, r1
    a70c:	e7f3      	b.n	a6f6 <__sccl+0x26>
    a70e:	0031      	movs	r1, r6
    a710:	0008      	movs	r0, r1
    a712:	bd70      	pop	{r4, r5, r6, pc}
    a714:	7872      	ldrb	r2, [r6, #1]
    a716:	2a5d      	cmp	r2, #93	; 0x5d
    a718:	d00c      	beq.n	a734 <__sccl+0x64>
    a71a:	4294      	cmp	r4, r2
    a71c:	dc0a      	bgt.n	a734 <__sccl+0x64>
    a71e:	3602      	adds	r6, #2
    a720:	3401      	adds	r4, #1
    a722:	5503      	strb	r3, [r0, r4]
    a724:	42a2      	cmp	r2, r4
    a726:	dcfb      	bgt.n	a720 <__sccl+0x50>
    a728:	e7e6      	b.n	a6f8 <__sccl+0x28>
    a72a:	1c8e      	adds	r6, r1, #2
    a72c:	784c      	ldrb	r4, [r1, #1]
    a72e:	2501      	movs	r5, #1
    a730:	2101      	movs	r1, #1
    a732:	e7d4      	b.n	a6de <__sccl+0xe>
    a734:	242d      	movs	r4, #45	; 0x2d
    a736:	000e      	movs	r6, r1
    a738:	e7dd      	b.n	a6f6 <__sccl+0x26>
    a73a:	46c0      	nop			; (mov r8, r8)

0000a73c <nanf>:
    a73c:	4800      	ldr	r0, [pc, #0]	; (a740 <nanf+0x4>)
    a73e:	4770      	bx	lr
    a740:	7fc00000 	.word	0x7fc00000

0000a744 <sprintf>:
    a744:	b40e      	push	{r1, r2, r3}
    a746:	b510      	push	{r4, lr}
    a748:	b09d      	sub	sp, #116	; 0x74
    a74a:	a902      	add	r1, sp, #8
    a74c:	9002      	str	r0, [sp, #8]
    a74e:	6108      	str	r0, [r1, #16]
    a750:	480b      	ldr	r0, [pc, #44]	; (a780 <sprintf+0x3c>)
    a752:	2482      	movs	r4, #130	; 0x82
    a754:	6088      	str	r0, [r1, #8]
    a756:	6148      	str	r0, [r1, #20]
    a758:	2001      	movs	r0, #1
    a75a:	4240      	negs	r0, r0
    a75c:	ab1f      	add	r3, sp, #124	; 0x7c
    a75e:	81c8      	strh	r0, [r1, #14]
    a760:	4808      	ldr	r0, [pc, #32]	; (a784 <sprintf+0x40>)
    a762:	cb04      	ldmia	r3!, {r2}
    a764:	00a4      	lsls	r4, r4, #2
    a766:	6800      	ldr	r0, [r0, #0]
    a768:	9301      	str	r3, [sp, #4]
    a76a:	818c      	strh	r4, [r1, #12]
    a76c:	f7fb fb44 	bl	5df8 <_svfprintf_r>
    a770:	2300      	movs	r3, #0
    a772:	9a02      	ldr	r2, [sp, #8]
    a774:	7013      	strb	r3, [r2, #0]
    a776:	b01d      	add	sp, #116	; 0x74
    a778:	bc10      	pop	{r4}
    a77a:	bc08      	pop	{r3}
    a77c:	b003      	add	sp, #12
    a77e:	4718      	bx	r3
    a780:	7fffffff 	.word	0x7fffffff
    a784:	20000090 	.word	0x20000090

0000a788 <sulp>:
    a788:	b570      	push	{r4, r5, r6, lr}
    a78a:	0016      	movs	r6, r2
    a78c:	000d      	movs	r5, r1
    a78e:	f7ff fe13 	bl	a3b8 <__ulp>
    a792:	2e00      	cmp	r6, #0
    a794:	d00d      	beq.n	a7b2 <sulp+0x2a>
    a796:	236b      	movs	r3, #107	; 0x6b
    a798:	006a      	lsls	r2, r5, #1
    a79a:	0d52      	lsrs	r2, r2, #21
    a79c:	1a9b      	subs	r3, r3, r2
    a79e:	2b00      	cmp	r3, #0
    a7a0:	dd07      	ble.n	a7b2 <sulp+0x2a>
    a7a2:	2400      	movs	r4, #0
    a7a4:	4a03      	ldr	r2, [pc, #12]	; (a7b4 <sulp+0x2c>)
    a7a6:	051b      	lsls	r3, r3, #20
    a7a8:	189d      	adds	r5, r3, r2
    a7aa:	002b      	movs	r3, r5
    a7ac:	0022      	movs	r2, r4
    a7ae:	f7f9 fe37 	bl	4420 <__aeabi_dmul>
    a7b2:	bd70      	pop	{r4, r5, r6, pc}
    a7b4:	3ff00000 	.word	0x3ff00000

0000a7b8 <_strtod_l>:
    a7b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    a7ba:	46de      	mov	lr, fp
    a7bc:	4657      	mov	r7, sl
    a7be:	464e      	mov	r6, r9
    a7c0:	4645      	mov	r5, r8
    a7c2:	b5e0      	push	{r5, r6, r7, lr}
    a7c4:	001d      	movs	r5, r3
    a7c6:	2300      	movs	r3, #0
    a7c8:	b0a3      	sub	sp, #140	; 0x8c
    a7ca:	9009      	str	r0, [sp, #36]	; 0x24
    a7cc:	0028      	movs	r0, r5
    a7ce:	000e      	movs	r6, r1
    a7d0:	931e      	str	r3, [sp, #120]	; 0x78
    a7d2:	4693      	mov	fp, r2
    a7d4:	f7fe fef4 	bl	95c0 <__localeconv_l>
    a7d8:	0007      	movs	r7, r0
    a7da:	6800      	ldr	r0, [r0, #0]
    a7dc:	f7fa ffca 	bl	5774 <strlen>
    a7e0:	2400      	movs	r4, #0
    a7e2:	2300      	movs	r3, #0
    a7e4:	9304      	str	r3, [sp, #16]
    a7e6:	9405      	str	r4, [sp, #20]
    a7e8:	0033      	movs	r3, r6
    a7ea:	961d      	str	r6, [sp, #116]	; 0x74
    a7ec:	781c      	ldrb	r4, [r3, #0]
    a7ee:	9008      	str	r0, [sp, #32]
    a7f0:	49c4      	ldr	r1, [pc, #784]	; (ab04 <_strtod_l+0x34c>)
    a7f2:	2c2d      	cmp	r4, #45	; 0x2d
    a7f4:	d900      	bls.n	a7f8 <_strtod_l+0x40>
    a7f6:	e070      	b.n	a8da <_strtod_l+0x122>
    a7f8:	00a2      	lsls	r2, r4, #2
    a7fa:	588a      	ldr	r2, [r1, r2]
    a7fc:	4697      	mov	pc, r2
    a7fe:	4689      	mov	r9, r1
    a800:	0014      	movs	r4, r2
    a802:	6839      	ldr	r1, [r7, #0]
    a804:	9a08      	ldr	r2, [sp, #32]
    a806:	4698      	mov	r8, r3
    a808:	f002 f9e0 	bl	cbcc <strncmp>
    a80c:	2800      	cmp	r0, #0
    a80e:	d100      	bne.n	a812 <_strtod_l+0x5a>
    a810:	e084      	b.n	a91c <_strtod_l+0x164>
    a812:	2200      	movs	r2, #0
    a814:	2300      	movs	r3, #0
    a816:	2000      	movs	r0, #0
    a818:	950a      	str	r5, [sp, #40]	; 0x28
    a81a:	9208      	str	r2, [sp, #32]
    a81c:	2220      	movs	r2, #32
    a81e:	0021      	movs	r1, r4
    a820:	4391      	bics	r1, r2
    a822:	2200      	movs	r2, #0
    a824:	2945      	cmp	r1, #69	; 0x45
    a826:	d100      	bne.n	a82a <_strtod_l+0x72>
    a828:	e0a6      	b.n	a978 <_strtod_l+0x1c0>
    a82a:	2d00      	cmp	r5, #0
    a82c:	d000      	beq.n	a830 <_strtod_l+0x78>
    a82e:	e104      	b.n	aa3a <_strtod_l+0x282>
    a830:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a832:	4313      	orrs	r3, r2
    a834:	d000      	beq.n	a838 <_strtod_l+0x80>
    a836:	e0f8      	b.n	aa2a <_strtod_l+0x272>
    a838:	9b08      	ldr	r3, [sp, #32]
    a83a:	2b00      	cmp	r3, #0
    a83c:	d100      	bne.n	a840 <_strtod_l+0x88>
    a83e:	e13d      	b.n	aabc <_strtod_l+0x304>
    a840:	465b      	mov	r3, fp
    a842:	2400      	movs	r4, #0
    a844:	2500      	movs	r5, #0
    a846:	2b00      	cmp	r3, #0
    a848:	d006      	beq.n	a858 <_strtod_l+0xa0>
    a84a:	2300      	movs	r3, #0
    a84c:	9307      	str	r3, [sp, #28]
    a84e:	465b      	mov	r3, fp
    a850:	601e      	str	r6, [r3, #0]
    a852:	9b07      	ldr	r3, [sp, #28]
    a854:	2b00      	cmp	r3, #0
    a856:	d108      	bne.n	a86a <_strtod_l+0xb2>
    a858:	0020      	movs	r0, r4
    a85a:	0029      	movs	r1, r5
    a85c:	b023      	add	sp, #140	; 0x8c
    a85e:	bc3c      	pop	{r2, r3, r4, r5}
    a860:	4690      	mov	r8, r2
    a862:	4699      	mov	r9, r3
    a864:	46a2      	mov	sl, r4
    a866:	46ab      	mov	fp, r5
    a868:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a86a:	2180      	movs	r1, #128	; 0x80
    a86c:	0609      	lsls	r1, r1, #24
    a86e:	186b      	adds	r3, r5, r1
    a870:	001d      	movs	r5, r3
    a872:	e7f1      	b.n	a858 <_strtod_l+0xa0>
    a874:	2200      	movs	r2, #0
    a876:	9207      	str	r2, [sp, #28]
    a878:	1c5a      	adds	r2, r3, #1
    a87a:	921d      	str	r2, [sp, #116]	; 0x74
    a87c:	785c      	ldrb	r4, [r3, #1]
    a87e:	4692      	mov	sl, r2
    a880:	2c00      	cmp	r4, #0
    a882:	d0dd      	beq.n	a840 <_strtod_l+0x88>
    a884:	2300      	movs	r3, #0
    a886:	930c      	str	r3, [sp, #48]	; 0x30
    a888:	2c30      	cmp	r4, #48	; 0x30
    a88a:	d02d      	beq.n	a8e8 <_strtod_l+0x130>
    a88c:	0023      	movs	r3, r4
    a88e:	3b30      	subs	r3, #48	; 0x30
    a890:	2b09      	cmp	r3, #9
    a892:	d900      	bls.n	a896 <_strtod_l+0xde>
    a894:	e38c      	b.n	afb0 <_strtod_l+0x7f8>
    a896:	2300      	movs	r3, #0
    a898:	4650      	mov	r0, sl
    a89a:	2500      	movs	r5, #0
    a89c:	0019      	movs	r1, r3
    a89e:	0022      	movs	r2, r4
    a8a0:	e00c      	b.n	a8bc <_strtod_l+0x104>
    a8a2:	009c      	lsls	r4, r3, #2
    a8a4:	18e3      	adds	r3, r4, r3
    a8a6:	005b      	lsls	r3, r3, #1
    a8a8:	189b      	adds	r3, r3, r2
    a8aa:	3b30      	subs	r3, #48	; 0x30
    a8ac:	3001      	adds	r0, #1
    a8ae:	901d      	str	r0, [sp, #116]	; 0x74
    a8b0:	7802      	ldrb	r2, [r0, #0]
    a8b2:	3501      	adds	r5, #1
    a8b4:	0014      	movs	r4, r2
    a8b6:	3c30      	subs	r4, #48	; 0x30
    a8b8:	2c09      	cmp	r4, #9
    a8ba:	d8a0      	bhi.n	a7fe <_strtod_l+0x46>
    a8bc:	2d08      	cmp	r5, #8
    a8be:	ddf0      	ble.n	a8a2 <_strtod_l+0xea>
    a8c0:	008c      	lsls	r4, r1, #2
    a8c2:	1864      	adds	r4, r4, r1
    a8c4:	0064      	lsls	r4, r4, #1
    a8c6:	18a4      	adds	r4, r4, r2
    a8c8:	0021      	movs	r1, r4
    a8ca:	3930      	subs	r1, #48	; 0x30
    a8cc:	e7ee      	b.n	a8ac <_strtod_l+0xf4>
    a8ce:	3301      	adds	r3, #1
    a8d0:	931d      	str	r3, [sp, #116]	; 0x74
    a8d2:	781c      	ldrb	r4, [r3, #0]
    a8d4:	2c2d      	cmp	r4, #45	; 0x2d
    a8d6:	d800      	bhi.n	a8da <_strtod_l+0x122>
    a8d8:	e78e      	b.n	a7f8 <_strtod_l+0x40>
    a8da:	469a      	mov	sl, r3
    a8dc:	2300      	movs	r3, #0
    a8de:	9307      	str	r3, [sp, #28]
    a8e0:	2300      	movs	r3, #0
    a8e2:	930c      	str	r3, [sp, #48]	; 0x30
    a8e4:	2c30      	cmp	r4, #48	; 0x30
    a8e6:	d1d1      	bne.n	a88c <_strtod_l+0xd4>
    a8e8:	4653      	mov	r3, sl
    a8ea:	785b      	ldrb	r3, [r3, #1]
    a8ec:	2b58      	cmp	r3, #88	; 0x58
    a8ee:	d100      	bne.n	a8f2 <_strtod_l+0x13a>
    a8f0:	e334      	b.n	af5c <_strtod_l+0x7a4>
    a8f2:	2b78      	cmp	r3, #120	; 0x78
    a8f4:	d100      	bne.n	a8f8 <_strtod_l+0x140>
    a8f6:	e331      	b.n	af5c <_strtod_l+0x7a4>
    a8f8:	4653      	mov	r3, sl
    a8fa:	3301      	adds	r3, #1
    a8fc:	001a      	movs	r2, r3
    a8fe:	931d      	str	r3, [sp, #116]	; 0x74
    a900:	7814      	ldrb	r4, [r2, #0]
    a902:	3301      	adds	r3, #1
    a904:	2c30      	cmp	r4, #48	; 0x30
    a906:	d0f9      	beq.n	a8fc <_strtod_l+0x144>
    a908:	4692      	mov	sl, r2
    a90a:	2c00      	cmp	r4, #0
    a90c:	d100      	bne.n	a910 <_strtod_l+0x158>
    a90e:	e08c      	b.n	aa2a <_strtod_l+0x272>
    a910:	2301      	movs	r3, #1
    a912:	930c      	str	r3, [sp, #48]	; 0x30
    a914:	e7ba      	b.n	a88c <_strtod_l+0xd4>
    a916:	2201      	movs	r2, #1
    a918:	9207      	str	r2, [sp, #28]
    a91a:	e7ad      	b.n	a878 <_strtod_l+0xc0>
    a91c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    a91e:	9b08      	ldr	r3, [sp, #32]
    a920:	4694      	mov	ip, r2
    a922:	4463      	add	r3, ip
    a924:	931d      	str	r3, [sp, #116]	; 0x74
    a926:	781c      	ldrb	r4, [r3, #0]
    a928:	2300      	movs	r3, #0
    a92a:	950a      	str	r5, [sp, #40]	; 0x28
    a92c:	0022      	movs	r2, r4
    a92e:	3a30      	subs	r2, #48	; 0x30
    a930:	2a09      	cmp	r2, #9
    a932:	d900      	bls.n	a936 <_strtod_l+0x17e>
    a934:	e0e2      	b.n	aafc <_strtod_l+0x344>
    a936:	1c5c      	adds	r4, r3, #1
    a938:	4694      	mov	ip, r2
    a93a:	2a00      	cmp	r2, #0
    a93c:	d101      	bne.n	a942 <_strtod_l+0x18a>
    a93e:	f000 fe76 	bl	b62e <_strtod_l+0xe76>
    a942:	1900      	adds	r0, r0, r4
    a944:	195b      	adds	r3, r3, r5
    a946:	2c01      	cmp	r4, #1
    a948:	d101      	bne.n	a94e <_strtod_l+0x196>
    a94a:	f000 fe6c 	bl	b626 <_strtod_l+0xe6e>
    a94e:	4644      	mov	r4, r8
    a950:	e007      	b.n	a962 <_strtod_l+0x1aa>
    a952:	00a1      	lsls	r1, r4, #2
    a954:	190c      	adds	r4, r1, r4
    a956:	0064      	lsls	r4, r4, #1
    a958:	429f      	cmp	r7, r3
    a95a:	d101      	bne.n	a960 <_strtod_l+0x1a8>
    a95c:	f000 fbef 	bl	b13e <_strtod_l+0x986>
    a960:	003d      	movs	r5, r7
    a962:	1c6f      	adds	r7, r5, #1
    a964:	2d08      	cmp	r5, #8
    a966:	ddf4      	ble.n	a952 <_strtod_l+0x19a>
    a968:	2f10      	cmp	r7, #16
    a96a:	dcf5      	bgt.n	a958 <_strtod_l+0x1a0>
    a96c:	4649      	mov	r1, r9
    a96e:	0089      	lsls	r1, r1, #2
    a970:	4449      	add	r1, r9
    a972:	0049      	lsls	r1, r1, #1
    a974:	4689      	mov	r9, r1
    a976:	e7ef      	b.n	a958 <_strtod_l+0x1a0>
    a978:	002a      	movs	r2, r5
    a97a:	990c      	ldr	r1, [sp, #48]	; 0x30
    a97c:	431a      	orrs	r2, r3
    a97e:	430a      	orrs	r2, r1
    a980:	d100      	bne.n	a984 <_strtod_l+0x1cc>
    a982:	e75d      	b.n	a840 <_strtod_l+0x88>
    a984:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    a986:	1c72      	adds	r2, r6, #1
    a988:	921d      	str	r2, [sp, #116]	; 0x74
    a98a:	7874      	ldrb	r4, [r6, #1]
    a98c:	2c2b      	cmp	r4, #43	; 0x2b
    a98e:	d100      	bne.n	a992 <_strtod_l+0x1da>
    a990:	e39a      	b.n	b0c8 <_strtod_l+0x910>
    a992:	2c2d      	cmp	r4, #45	; 0x2d
    a994:	d100      	bne.n	a998 <_strtod_l+0x1e0>
    a996:	e230      	b.n	adfa <_strtod_l+0x642>
    a998:	2200      	movs	r2, #0
    a99a:	920d      	str	r2, [sp, #52]	; 0x34
    a99c:	0022      	movs	r2, r4
    a99e:	3a30      	subs	r2, #48	; 0x30
    a9a0:	2a09      	cmp	r2, #9
    a9a2:	d900      	bls.n	a9a6 <_strtod_l+0x1ee>
    a9a4:	e2f5      	b.n	af92 <_strtod_l+0x7da>
    a9a6:	2c30      	cmp	r4, #48	; 0x30
    a9a8:	d106      	bne.n	a9b8 <_strtod_l+0x200>
    a9aa:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    a9ac:	3201      	adds	r2, #1
    a9ae:	921d      	str	r2, [sp, #116]	; 0x74
    a9b0:	7814      	ldrb	r4, [r2, #0]
    a9b2:	3201      	adds	r2, #1
    a9b4:	2c30      	cmp	r4, #48	; 0x30
    a9b6:	d0fa      	beq.n	a9ae <_strtod_l+0x1f6>
    a9b8:	0021      	movs	r1, r4
    a9ba:	3931      	subs	r1, #49	; 0x31
    a9bc:	2200      	movs	r2, #0
    a9be:	2908      	cmp	r1, #8
    a9c0:	d900      	bls.n	a9c4 <_strtod_l+0x20c>
    a9c2:	e732      	b.n	a82a <_strtod_l+0x72>
    a9c4:	991d      	ldr	r1, [sp, #116]	; 0x74
    a9c6:	0022      	movs	r2, r4
    a9c8:	1c4c      	adds	r4, r1, #1
    a9ca:	941d      	str	r4, [sp, #116]	; 0x74
    a9cc:	46a4      	mov	ip, r4
    a9ce:	784c      	ldrb	r4, [r1, #1]
    a9d0:	000f      	movs	r7, r1
    a9d2:	910e      	str	r1, [sp, #56]	; 0x38
    a9d4:	0021      	movs	r1, r4
    a9d6:	3930      	subs	r1, #48	; 0x30
    a9d8:	3a30      	subs	r2, #48	; 0x30
    a9da:	2909      	cmp	r1, #9
    a9dc:	d815      	bhi.n	aa0a <_strtod_l+0x252>
    a9de:	0039      	movs	r1, r7
    a9e0:	469c      	mov	ip, r3
    a9e2:	0027      	movs	r7, r4
    a9e4:	3102      	adds	r1, #2
    a9e6:	0094      	lsls	r4, r2, #2
    a9e8:	18a4      	adds	r4, r4, r2
    a9ea:	911d      	str	r1, [sp, #116]	; 0x74
    a9ec:	0064      	lsls	r4, r4, #1
    a9ee:	19e4      	adds	r4, r4, r7
    a9f0:	780f      	ldrb	r7, [r1, #0]
    a9f2:	0022      	movs	r2, r4
    a9f4:	003c      	movs	r4, r7
    a9f6:	3c30      	subs	r4, #48	; 0x30
    a9f8:	000b      	movs	r3, r1
    a9fa:	3a30      	subs	r2, #48	; 0x30
    a9fc:	3101      	adds	r1, #1
    a9fe:	2c09      	cmp	r4, #9
    aa00:	d9f1      	bls.n	a9e6 <_strtod_l+0x22e>
    aa02:	0019      	movs	r1, r3
    aa04:	003c      	movs	r4, r7
    aa06:	4663      	mov	r3, ip
    aa08:	468c      	mov	ip, r1
    aa0a:	4661      	mov	r1, ip
    aa0c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    aa0e:	1bc9      	subs	r1, r1, r7
    aa10:	2908      	cmp	r1, #8
    aa12:	dd00      	ble.n	aa16 <_strtod_l+0x25e>
    aa14:	e256      	b.n	aec4 <_strtod_l+0x70c>
    aa16:	493c      	ldr	r1, [pc, #240]	; (ab08 <_strtod_l+0x350>)
    aa18:	428a      	cmp	r2, r1
    aa1a:	dd00      	ble.n	aa1e <_strtod_l+0x266>
    aa1c:	e252      	b.n	aec4 <_strtod_l+0x70c>
    aa1e:	990d      	ldr	r1, [sp, #52]	; 0x34
    aa20:	2900      	cmp	r1, #0
    aa22:	d100      	bne.n	aa26 <_strtod_l+0x26e>
    aa24:	e701      	b.n	a82a <_strtod_l+0x72>
    aa26:	4252      	negs	r2, r2
    aa28:	e6ff      	b.n	a82a <_strtod_l+0x72>
    aa2a:	2400      	movs	r4, #0
    aa2c:	2500      	movs	r5, #0
    aa2e:	465b      	mov	r3, fp
    aa30:	2b00      	cmp	r3, #0
    aa32:	d100      	bne.n	aa36 <_strtod_l+0x27e>
    aa34:	e70d      	b.n	a852 <_strtod_l+0x9a>
    aa36:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    aa38:	e709      	b.n	a84e <_strtod_l+0x96>
    aa3a:	1a13      	subs	r3, r2, r0
    aa3c:	9308      	str	r3, [sp, #32]
    aa3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    aa40:	2b00      	cmp	r3, #0
    aa42:	d100      	bne.n	aa46 <_strtod_l+0x28e>
    aa44:	950a      	str	r5, [sp, #40]	; 0x28
    aa46:	002c      	movs	r4, r5
    aa48:	2d10      	cmp	r5, #16
    aa4a:	dd00      	ble.n	aa4e <_strtod_l+0x296>
    aa4c:	2410      	movs	r4, #16
    aa4e:	4640      	mov	r0, r8
    aa50:	f7fa faf2 	bl	5038 <__aeabi_ui2d>
    aa54:	9004      	str	r0, [sp, #16]
    aa56:	9105      	str	r1, [sp, #20]
    aa58:	2c09      	cmp	r4, #9
    aa5a:	dd15      	ble.n	aa88 <_strtod_l+0x2d0>
    aa5c:	0022      	movs	r2, r4
    aa5e:	4b2b      	ldr	r3, [pc, #172]	; (ab0c <_strtod_l+0x354>)
    aa60:	3a09      	subs	r2, #9
    aa62:	00d2      	lsls	r2, r2, #3
    aa64:	189b      	adds	r3, r3, r2
    aa66:	681a      	ldr	r2, [r3, #0]
    aa68:	685b      	ldr	r3, [r3, #4]
    aa6a:	f7f9 fcd9 	bl	4420 <__aeabi_dmul>
    aa6e:	0006      	movs	r6, r0
    aa70:	4648      	mov	r0, r9
    aa72:	000f      	movs	r7, r1
    aa74:	f7fa fae0 	bl	5038 <__aeabi_ui2d>
    aa78:	0002      	movs	r2, r0
    aa7a:	000b      	movs	r3, r1
    aa7c:	0030      	movs	r0, r6
    aa7e:	0039      	movs	r1, r7
    aa80:	f002 f8ee 	bl	cc60 <__aeabi_dadd>
    aa84:	9004      	str	r0, [sp, #16]
    aa86:	9105      	str	r1, [sp, #20]
    aa88:	2d0f      	cmp	r5, #15
    aa8a:	dc45      	bgt.n	ab18 <_strtod_l+0x360>
    aa8c:	9b08      	ldr	r3, [sp, #32]
    aa8e:	2b00      	cmp	r3, #0
    aa90:	d031      	beq.n	aaf6 <_strtod_l+0x33e>
    aa92:	9b08      	ldr	r3, [sp, #32]
    aa94:	2b00      	cmp	r3, #0
    aa96:	dc01      	bgt.n	aa9c <_strtod_l+0x2e4>
    aa98:	f000 fc69 	bl	b36e <_strtod_l+0xbb6>
    aa9c:	2b16      	cmp	r3, #22
    aa9e:	dd01      	ble.n	aaa4 <_strtod_l+0x2ec>
    aaa0:	f000 fc15 	bl	b2ce <_strtod_l+0xb16>
    aaa4:	4919      	ldr	r1, [pc, #100]	; (ab0c <_strtod_l+0x354>)
    aaa6:	00da      	lsls	r2, r3, #3
    aaa8:	1889      	adds	r1, r1, r2
    aaaa:	6808      	ldr	r0, [r1, #0]
    aaac:	6849      	ldr	r1, [r1, #4]
    aaae:	9a04      	ldr	r2, [sp, #16]
    aab0:	9b05      	ldr	r3, [sp, #20]
    aab2:	f7f9 fcb5 	bl	4420 <__aeabi_dmul>
    aab6:	0004      	movs	r4, r0
    aab8:	000d      	movs	r5, r1
    aaba:	e7b8      	b.n	aa2e <_strtod_l+0x276>
    aabc:	2c4e      	cmp	r4, #78	; 0x4e
    aabe:	d009      	beq.n	aad4 <_strtod_l+0x31c>
    aac0:	dc01      	bgt.n	aac6 <_strtod_l+0x30e>
    aac2:	f000 fc2b 	bl	b31c <_strtod_l+0xb64>
    aac6:	2c69      	cmp	r4, #105	; 0x69
    aac8:	d101      	bne.n	aace <_strtod_l+0x316>
    aaca:	f000 fc2b 	bl	b324 <_strtod_l+0xb6c>
    aace:	2c6e      	cmp	r4, #110	; 0x6e
    aad0:	d000      	beq.n	aad4 <_strtod_l+0x31c>
    aad2:	e6b5      	b.n	a840 <_strtod_l+0x88>
    aad4:	490e      	ldr	r1, [pc, #56]	; (ab10 <_strtod_l+0x358>)
    aad6:	a81d      	add	r0, sp, #116	; 0x74
    aad8:	f001 fd80 	bl	c5dc <__match>
    aadc:	2800      	cmp	r0, #0
    aade:	d100      	bne.n	aae2 <_strtod_l+0x32a>
    aae0:	e6ae      	b.n	a840 <_strtod_l+0x88>
    aae2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    aae4:	781b      	ldrb	r3, [r3, #0]
    aae6:	2b28      	cmp	r3, #40	; 0x28
    aae8:	d101      	bne.n	aaee <_strtod_l+0x336>
    aaea:	f000 fd0d 	bl	b508 <_strtod_l+0xd50>
    aaee:	4b09      	ldr	r3, [pc, #36]	; (ab14 <_strtod_l+0x35c>)
    aaf0:	9305      	str	r3, [sp, #20]
    aaf2:	2300      	movs	r3, #0
    aaf4:	9304      	str	r3, [sp, #16]
    aaf6:	9c04      	ldr	r4, [sp, #16]
    aaf8:	9d05      	ldr	r5, [sp, #20]
    aafa:	e798      	b.n	aa2e <_strtod_l+0x276>
    aafc:	2201      	movs	r2, #1
    aafe:	9208      	str	r2, [sp, #32]
    ab00:	e68c      	b.n	a81c <_strtod_l+0x64>
    ab02:	46c0      	nop			; (mov r8, r8)
    ab04:	0000ecc4 	.word	0x0000ecc4
    ab08:	00004e1f 	.word	0x00004e1f
    ab0c:	0000ebf0 	.word	0x0000ebf0
    ab10:	0000eda0 	.word	0x0000eda0
    ab14:	fff80000 	.word	0xfff80000
    ab18:	9b08      	ldr	r3, [sp, #32]
    ab1a:	1b2c      	subs	r4, r5, r4
    ab1c:	469c      	mov	ip, r3
    ab1e:	4464      	add	r4, ip
    ab20:	2c00      	cmp	r4, #0
    ab22:	dc00      	bgt.n	ab26 <_strtod_l+0x36e>
    ab24:	e31f      	b.n	b166 <_strtod_l+0x9ae>
    ab26:	230f      	movs	r3, #15
    ab28:	4023      	ands	r3, r4
    ab2a:	d00a      	beq.n	ab42 <_strtod_l+0x38a>
    ab2c:	49d9      	ldr	r1, [pc, #868]	; (ae94 <_strtod_l+0x6dc>)
    ab2e:	00db      	lsls	r3, r3, #3
    ab30:	18c9      	adds	r1, r1, r3
    ab32:	6808      	ldr	r0, [r1, #0]
    ab34:	6849      	ldr	r1, [r1, #4]
    ab36:	9a04      	ldr	r2, [sp, #16]
    ab38:	9b05      	ldr	r3, [sp, #20]
    ab3a:	f7f9 fc71 	bl	4420 <__aeabi_dmul>
    ab3e:	9004      	str	r0, [sp, #16]
    ab40:	9105      	str	r1, [sp, #20]
    ab42:	230f      	movs	r3, #15
    ab44:	439c      	bics	r4, r3
    ab46:	d000      	beq.n	ab4a <_strtod_l+0x392>
    ab48:	e15d      	b.n	ae06 <_strtod_l+0x64e>
    ab4a:	2300      	movs	r3, #0
    ab4c:	930c      	str	r3, [sp, #48]	; 0x30
    ab4e:	4643      	mov	r3, r8
    ab50:	9300      	str	r3, [sp, #0]
    ab52:	002b      	movs	r3, r5
    ab54:	9d09      	ldr	r5, [sp, #36]	; 0x24
    ab56:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ab58:	4651      	mov	r1, sl
    ab5a:	0028      	movs	r0, r5
    ab5c:	f7ff f970 	bl	9e40 <__s2b>
    ab60:	2800      	cmp	r0, #0
    ab62:	d100      	bne.n	ab66 <_strtod_l+0x3ae>
    ab64:	e255      	b.n	b012 <_strtod_l+0x85a>
    ab66:	9908      	ldr	r1, [sp, #32]
    ab68:	424b      	negs	r3, r1
    ab6a:	17ca      	asrs	r2, r1, #31
    ab6c:	401a      	ands	r2, r3
    ab6e:	920e      	str	r2, [sp, #56]	; 0x38
    ab70:	43ca      	mvns	r2, r1
    ab72:	000b      	movs	r3, r1
    ab74:	17d2      	asrs	r2, r2, #31
    ab76:	4013      	ands	r3, r2
    ab78:	930d      	str	r3, [sp, #52]	; 0x34
    ab7a:	2300      	movs	r3, #0
    ab7c:	4699      	mov	r9, r3
    ab7e:	4698      	mov	r8, r3
    ab80:	465b      	mov	r3, fp
    ab82:	4683      	mov	fp, r0
    ab84:	9315      	str	r3, [sp, #84]	; 0x54
    ab86:	e0f4      	b.n	ad72 <_strtod_l+0x5ba>
    ab88:	1ac9      	subs	r1, r1, r3
    ab8a:	1a52      	subs	r2, r2, r1
    ab8c:	291f      	cmp	r1, #31
    ab8e:	dd00      	ble.n	ab92 <_strtod_l+0x3da>
    ab90:	e1b5      	b.n	aefe <_strtod_l+0x746>
    ab92:	2301      	movs	r3, #1
    ab94:	408b      	lsls	r3, r1
    ab96:	9310      	str	r3, [sp, #64]	; 0x40
    ab98:	2300      	movs	r3, #0
    ab9a:	9311      	str	r3, [sp, #68]	; 0x44
    ab9c:	18bb      	adds	r3, r7, r2
    ab9e:	469a      	mov	sl, r3
    aba0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    aba2:	18b6      	adds	r6, r6, r2
    aba4:	469c      	mov	ip, r3
    aba6:	003b      	movs	r3, r7
    aba8:	4466      	add	r6, ip
    abaa:	4557      	cmp	r7, sl
    abac:	dd00      	ble.n	abb0 <_strtod_l+0x3f8>
    abae:	4653      	mov	r3, sl
    abb0:	42b3      	cmp	r3, r6
    abb2:	dd00      	ble.n	abb6 <_strtod_l+0x3fe>
    abb4:	0033      	movs	r3, r6
    abb6:	2b00      	cmp	r3, #0
    abb8:	dd04      	ble.n	abc4 <_strtod_l+0x40c>
    abba:	4652      	mov	r2, sl
    abbc:	1ad2      	subs	r2, r2, r3
    abbe:	4692      	mov	sl, r2
    abc0:	1af6      	subs	r6, r6, r3
    abc2:	1aff      	subs	r7, r7, r3
    abc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    abc6:	2b00      	cmp	r3, #0
    abc8:	d015      	beq.n	abf6 <_strtod_l+0x43e>
    abca:	4641      	mov	r1, r8
    abcc:	001a      	movs	r2, r3
    abce:	0028      	movs	r0, r5
    abd0:	f7ff fa7c 	bl	a0cc <__pow5mult>
    abd4:	4680      	mov	r8, r0
    abd6:	2800      	cmp	r0, #0
    abd8:	d100      	bne.n	abdc <_strtod_l+0x424>
    abda:	e252      	b.n	b082 <_strtod_l+0x8ca>
    abdc:	0001      	movs	r1, r0
    abde:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    abe0:	0028      	movs	r0, r5
    abe2:	f7ff f9c9 	bl	9f78 <__multiply>
    abe6:	1e04      	subs	r4, r0, #0
    abe8:	d100      	bne.n	abec <_strtod_l+0x434>
    abea:	e24a      	b.n	b082 <_strtod_l+0x8ca>
    abec:	991e      	ldr	r1, [sp, #120]	; 0x78
    abee:	0028      	movs	r0, r5
    abf0:	f7ff f8d6 	bl	9da0 <_Bfree>
    abf4:	941e      	str	r4, [sp, #120]	; 0x78
    abf6:	4653      	mov	r3, sl
    abf8:	2b00      	cmp	r3, #0
    abfa:	dd08      	ble.n	ac0e <_strtod_l+0x456>
    abfc:	4652      	mov	r2, sl
    abfe:	991e      	ldr	r1, [sp, #120]	; 0x78
    ac00:	0028      	movs	r0, r5
    ac02:	f7ff fac3 	bl	a18c <__lshift>
    ac06:	901e      	str	r0, [sp, #120]	; 0x78
    ac08:	2800      	cmp	r0, #0
    ac0a:	d100      	bne.n	ac0e <_strtod_l+0x456>
    ac0c:	e3c2      	b.n	b394 <_strtod_l+0xbdc>
    ac0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ac10:	2b00      	cmp	r3, #0
    ac12:	d008      	beq.n	ac26 <_strtod_l+0x46e>
    ac14:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    ac16:	9908      	ldr	r1, [sp, #32]
    ac18:	0028      	movs	r0, r5
    ac1a:	f7ff fa57 	bl	a0cc <__pow5mult>
    ac1e:	9008      	str	r0, [sp, #32]
    ac20:	2800      	cmp	r0, #0
    ac22:	d100      	bne.n	ac26 <_strtod_l+0x46e>
    ac24:	e22d      	b.n	b082 <_strtod_l+0x8ca>
    ac26:	2e00      	cmp	r6, #0
    ac28:	dd08      	ble.n	ac3c <_strtod_l+0x484>
    ac2a:	0032      	movs	r2, r6
    ac2c:	9908      	ldr	r1, [sp, #32]
    ac2e:	0028      	movs	r0, r5
    ac30:	f7ff faac 	bl	a18c <__lshift>
    ac34:	9008      	str	r0, [sp, #32]
    ac36:	2800      	cmp	r0, #0
    ac38:	d100      	bne.n	ac3c <_strtod_l+0x484>
    ac3a:	e222      	b.n	b082 <_strtod_l+0x8ca>
    ac3c:	2f00      	cmp	r7, #0
    ac3e:	dd08      	ble.n	ac52 <_strtod_l+0x49a>
    ac40:	4641      	mov	r1, r8
    ac42:	003a      	movs	r2, r7
    ac44:	0028      	movs	r0, r5
    ac46:	f7ff faa1 	bl	a18c <__lshift>
    ac4a:	4680      	mov	r8, r0
    ac4c:	2800      	cmp	r0, #0
    ac4e:	d100      	bne.n	ac52 <_strtod_l+0x49a>
    ac50:	e217      	b.n	b082 <_strtod_l+0x8ca>
    ac52:	9a08      	ldr	r2, [sp, #32]
    ac54:	991e      	ldr	r1, [sp, #120]	; 0x78
    ac56:	0028      	movs	r0, r5
    ac58:	f7ff fb12 	bl	a280 <__mdiff>
    ac5c:	4681      	mov	r9, r0
    ac5e:	2800      	cmp	r0, #0
    ac60:	d100      	bne.n	ac64 <_strtod_l+0x4ac>
    ac62:	e20e      	b.n	b082 <_strtod_l+0x8ca>
    ac64:	68c3      	ldr	r3, [r0, #12]
    ac66:	4641      	mov	r1, r8
    ac68:	930f      	str	r3, [sp, #60]	; 0x3c
    ac6a:	2300      	movs	r3, #0
    ac6c:	60c3      	str	r3, [r0, #12]
    ac6e:	f7ff faed 	bl	a24c <__mcmp>
    ac72:	2800      	cmp	r0, #0
    ac74:	da01      	bge.n	ac7a <_strtod_l+0x4c2>
    ac76:	f000 fbd8 	bl	b42a <_strtod_l+0xc72>
    ac7a:	d100      	bne.n	ac7e <_strtod_l+0x4c6>
    ac7c:	e38e      	b.n	b39c <_strtod_l+0xbe4>
    ac7e:	4641      	mov	r1, r8
    ac80:	4648      	mov	r0, r9
    ac82:	f7ff fc89 	bl	a598 <__ratio>
    ac86:	2380      	movs	r3, #128	; 0x80
    ac88:	2200      	movs	r2, #0
    ac8a:	05db      	lsls	r3, r3, #23
    ac8c:	0006      	movs	r6, r0
    ac8e:	000f      	movs	r7, r1
    ac90:	f7fa fa7c 	bl	518c <__aeabi_dcmple>
    ac94:	2800      	cmp	r0, #0
    ac96:	d100      	bne.n	ac9a <_strtod_l+0x4e2>
    ac98:	e116      	b.n	aec8 <_strtod_l+0x710>
    ac9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ac9c:	2b00      	cmp	r3, #0
    ac9e:	d100      	bne.n	aca2 <_strtod_l+0x4ea>
    aca0:	e135      	b.n	af0e <_strtod_l+0x756>
    aca2:	9b05      	ldr	r3, [sp, #20]
    aca4:	2600      	movs	r6, #0
    aca6:	9310      	str	r3, [sp, #64]	; 0x40
    aca8:	2300      	movs	r3, #0
    acaa:	9311      	str	r3, [sp, #68]	; 0x44
    acac:	4b7a      	ldr	r3, [pc, #488]	; (ae98 <_strtod_l+0x6e0>)
    acae:	4f7a      	ldr	r7, [pc, #488]	; (ae98 <_strtod_l+0x6e0>)
    acb0:	9314      	str	r3, [sp, #80]	; 0x50
    acb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
    acb4:	4a79      	ldr	r2, [pc, #484]	; (ae9c <_strtod_l+0x6e4>)
    acb6:	4013      	ands	r3, r2
    acb8:	469a      	mov	sl, r3
    acba:	4b79      	ldr	r3, [pc, #484]	; (aea0 <_strtod_l+0x6e8>)
    acbc:	459a      	cmp	sl, r3
    acbe:	d100      	bne.n	acc2 <_strtod_l+0x50a>
    acc0:	e1af      	b.n	b022 <_strtod_l+0x86a>
    acc2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    acc4:	2b00      	cmp	r3, #0
    acc6:	d02a      	beq.n	ad1e <_strtod_l+0x566>
    acc8:	23d4      	movs	r3, #212	; 0xd4
    acca:	04db      	lsls	r3, r3, #19
    accc:	459a      	cmp	sl, r3
    acce:	d826      	bhi.n	ad1e <_strtod_l+0x566>
    acd0:	9c14      	ldr	r4, [sp, #80]	; 0x50
    acd2:	4a74      	ldr	r2, [pc, #464]	; (aea4 <_strtod_l+0x6ec>)
    acd4:	4b74      	ldr	r3, [pc, #464]	; (aea8 <_strtod_l+0x6f0>)
    acd6:	9811      	ldr	r0, [sp, #68]	; 0x44
    acd8:	0021      	movs	r1, r4
    acda:	f7fa fa57 	bl	518c <__aeabi_dcmple>
    acde:	2800      	cmp	r0, #0
    ace0:	d018      	beq.n	ad14 <_strtod_l+0x55c>
    ace2:	9811      	ldr	r0, [sp, #68]	; 0x44
    ace4:	0021      	movs	r1, r4
    ace6:	f7f8 fe69 	bl	39bc <__aeabi_d2uiz>
    acea:	2800      	cmp	r0, #0
    acec:	d100      	bne.n	acf0 <_strtod_l+0x538>
    acee:	e310      	b.n	b312 <_strtod_l+0xb5a>
    acf0:	f7fa f9a2 	bl	5038 <__aeabi_ui2d>
    acf4:	9011      	str	r0, [sp, #68]	; 0x44
    acf6:	9114      	str	r1, [sp, #80]	; 0x50
    acf8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    acfa:	2b00      	cmp	r3, #0
    acfc:	d000      	beq.n	ad00 <_strtod_l+0x548>
    acfe:	e303      	b.n	b308 <_strtod_l+0xb50>
    ad00:	2280      	movs	r2, #128	; 0x80
    ad02:	0612      	lsls	r2, r2, #24
    ad04:	4694      	mov	ip, r2
    ad06:	9b11      	ldr	r3, [sp, #68]	; 0x44
    ad08:	9318      	str	r3, [sp, #96]	; 0x60
    ad0a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    ad0c:	4463      	add	r3, ip
    ad0e:	9319      	str	r3, [sp, #100]	; 0x64
    ad10:	9e18      	ldr	r6, [sp, #96]	; 0x60
    ad12:	9f19      	ldr	r7, [sp, #100]	; 0x64
    ad14:	23d6      	movs	r3, #214	; 0xd6
    ad16:	4652      	mov	r2, sl
    ad18:	04db      	lsls	r3, r3, #19
    ad1a:	18fb      	adds	r3, r7, r3
    ad1c:	1a9f      	subs	r7, r3, r2
    ad1e:	980a      	ldr	r0, [sp, #40]	; 0x28
    ad20:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ad22:	f7ff fb49 	bl	a3b8 <__ulp>
    ad26:	0002      	movs	r2, r0
    ad28:	000b      	movs	r3, r1
    ad2a:	0030      	movs	r0, r6
    ad2c:	0039      	movs	r1, r7
    ad2e:	f7f9 fb77 	bl	4420 <__aeabi_dmul>
    ad32:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ad34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ad36:	f001 ff93 	bl	cc60 <__aeabi_dadd>
    ad3a:	0003      	movs	r3, r0
    ad3c:	000c      	movs	r4, r1
    ad3e:	9304      	str	r3, [sp, #16]
    ad40:	9405      	str	r4, [sp, #20]
    ad42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ad44:	2b00      	cmp	r3, #0
    ad46:	d104      	bne.n	ad52 <_strtod_l+0x59a>
    ad48:	4b54      	ldr	r3, [pc, #336]	; (ae9c <_strtod_l+0x6e4>)
    ad4a:	4023      	ands	r3, r4
    ad4c:	459a      	cmp	sl, r3
    ad4e:	d100      	bne.n	ad52 <_strtod_l+0x59a>
    ad50:	e1bd      	b.n	b0ce <_strtod_l+0x916>
    ad52:	991e      	ldr	r1, [sp, #120]	; 0x78
    ad54:	0028      	movs	r0, r5
    ad56:	f7ff f823 	bl	9da0 <_Bfree>
    ad5a:	9908      	ldr	r1, [sp, #32]
    ad5c:	0028      	movs	r0, r5
    ad5e:	f7ff f81f 	bl	9da0 <_Bfree>
    ad62:	4641      	mov	r1, r8
    ad64:	0028      	movs	r0, r5
    ad66:	f7ff f81b 	bl	9da0 <_Bfree>
    ad6a:	4649      	mov	r1, r9
    ad6c:	0028      	movs	r0, r5
    ad6e:	f7ff f817 	bl	9da0 <_Bfree>
    ad72:	465b      	mov	r3, fp
    ad74:	0028      	movs	r0, r5
    ad76:	6859      	ldr	r1, [r3, #4]
    ad78:	f7fe ffea 	bl	9d50 <_Balloc>
    ad7c:	9008      	str	r0, [sp, #32]
    ad7e:	2800      	cmp	r0, #0
    ad80:	d100      	bne.n	ad84 <_strtod_l+0x5cc>
    ad82:	e17e      	b.n	b082 <_strtod_l+0x8ca>
    ad84:	465a      	mov	r2, fp
    ad86:	4659      	mov	r1, fp
    ad88:	6912      	ldr	r2, [r2, #16]
    ad8a:	310c      	adds	r1, #12
    ad8c:	3202      	adds	r2, #2
    ad8e:	0092      	lsls	r2, r2, #2
    ad90:	300c      	adds	r0, #12
    ad92:	f7fe ff8b 	bl	9cac <memcpy>
    ad96:	9b04      	ldr	r3, [sp, #16]
    ad98:	9c05      	ldr	r4, [sp, #20]
    ad9a:	0019      	movs	r1, r3
    ad9c:	0022      	movs	r2, r4
    ad9e:	ab20      	add	r3, sp, #128	; 0x80
    ada0:	9301      	str	r3, [sp, #4]
    ada2:	ab1f      	add	r3, sp, #124	; 0x7c
    ada4:	910a      	str	r1, [sp, #40]	; 0x28
    ada6:	920b      	str	r2, [sp, #44]	; 0x2c
    ada8:	9300      	str	r3, [sp, #0]
    adaa:	000a      	movs	r2, r1
    adac:	0023      	movs	r3, r4
    adae:	0028      	movs	r0, r5
    adb0:	f7ff fb94 	bl	a4dc <__d2b>
    adb4:	901e      	str	r0, [sp, #120]	; 0x78
    adb6:	2800      	cmp	r0, #0
    adb8:	d100      	bne.n	adbc <_strtod_l+0x604>
    adba:	e2eb      	b.n	b394 <_strtod_l+0xbdc>
    adbc:	2101      	movs	r1, #1
    adbe:	0028      	movs	r0, r5
    adc0:	f7ff f8d0 	bl	9f64 <__i2b>
    adc4:	4680      	mov	r8, r0
    adc6:	2800      	cmp	r0, #0
    adc8:	d100      	bne.n	adcc <_strtod_l+0x614>
    adca:	e15a      	b.n	b082 <_strtod_l+0x8ca>
    adcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    adce:	2b00      	cmp	r3, #0
    add0:	da00      	bge.n	add4 <_strtod_l+0x61c>
    add2:	e090      	b.n	aef6 <_strtod_l+0x73e>
    add4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    add6:	9e0d      	ldr	r6, [sp, #52]	; 0x34
    add8:	18d7      	adds	r7, r2, r3
    adda:	990c      	ldr	r1, [sp, #48]	; 0x30
    addc:	9a20      	ldr	r2, [sp, #128]	; 0x80
    adde:	1a5b      	subs	r3, r3, r1
    ade0:	2136      	movs	r1, #54	; 0x36
    ade2:	189b      	adds	r3, r3, r2
    ade4:	1a8a      	subs	r2, r1, r2
    ade6:	4931      	ldr	r1, [pc, #196]	; (aeac <_strtod_l+0x6f4>)
    ade8:	3b01      	subs	r3, #1
    adea:	428b      	cmp	r3, r1
    adec:	da00      	bge.n	adf0 <_strtod_l+0x638>
    adee:	e6cb      	b.n	ab88 <_strtod_l+0x3d0>
    adf0:	2300      	movs	r3, #0
    adf2:	9311      	str	r3, [sp, #68]	; 0x44
    adf4:	3301      	adds	r3, #1
    adf6:	9310      	str	r3, [sp, #64]	; 0x40
    adf8:	e6d0      	b.n	ab9c <_strtod_l+0x3e4>
    adfa:	2201      	movs	r2, #1
    adfc:	920d      	str	r2, [sp, #52]	; 0x34
    adfe:	1cb2      	adds	r2, r6, #2
    ae00:	921d      	str	r2, [sp, #116]	; 0x74
    ae02:	78b4      	ldrb	r4, [r6, #2]
    ae04:	e5ca      	b.n	a99c <_strtod_l+0x1e4>
    ae06:	239a      	movs	r3, #154	; 0x9a
    ae08:	005b      	lsls	r3, r3, #1
    ae0a:	429c      	cmp	r4, r3
    ae0c:	dd00      	ble.n	ae10 <_strtod_l+0x658>
    ae0e:	e100      	b.n	b012 <_strtod_l+0x85a>
    ae10:	1124      	asrs	r4, r4, #4
    ae12:	2c01      	cmp	r4, #1
    ae14:	dc00      	bgt.n	ae18 <_strtod_l+0x660>
    ae16:	e361      	b.n	b4dc <_strtod_l+0xd24>
    ae18:	9804      	ldr	r0, [sp, #16]
    ae1a:	9905      	ldr	r1, [sp, #20]
    ae1c:	2201      	movs	r2, #1
    ae1e:	4b24      	ldr	r3, [pc, #144]	; (aeb0 <_strtod_l+0x6f8>)
    ae20:	2700      	movs	r7, #0
    ae22:	930c      	str	r3, [sp, #48]	; 0x30
    ae24:	001e      	movs	r6, r3
    ae26:	4691      	mov	r9, r2
    ae28:	2300      	movs	r3, #0
    ae2a:	464a      	mov	r2, r9
    ae2c:	4222      	tst	r2, r4
    ae2e:	d004      	beq.n	ae3a <_strtod_l+0x682>
    ae30:	6832      	ldr	r2, [r6, #0]
    ae32:	6873      	ldr	r3, [r6, #4]
    ae34:	f7f9 faf4 	bl	4420 <__aeabi_dmul>
    ae38:	2301      	movs	r3, #1
    ae3a:	3701      	adds	r7, #1
    ae3c:	1064      	asrs	r4, r4, #1
    ae3e:	3608      	adds	r6, #8
    ae40:	2c01      	cmp	r4, #1
    ae42:	d1f2      	bne.n	ae2a <_strtod_l+0x672>
    ae44:	2b00      	cmp	r3, #0
    ae46:	d001      	beq.n	ae4c <_strtod_l+0x694>
    ae48:	f000 fbf4 	bl	b634 <_strtod_l+0xe7c>
    ae4c:	4a19      	ldr	r2, [pc, #100]	; (aeb4 <_strtod_l+0x6fc>)
    ae4e:	9b05      	ldr	r3, [sp, #20]
    ae50:	4694      	mov	ip, r2
    ae52:	4463      	add	r3, ip
    ae54:	9305      	str	r3, [sp, #20]
    ae56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ae58:	00ff      	lsls	r7, r7, #3
    ae5a:	469c      	mov	ip, r3
    ae5c:	9a04      	ldr	r2, [sp, #16]
    ae5e:	9b05      	ldr	r3, [sp, #20]
    ae60:	4467      	add	r7, ip
    ae62:	6838      	ldr	r0, [r7, #0]
    ae64:	6879      	ldr	r1, [r7, #4]
    ae66:	f7f9 fadb 	bl	4420 <__aeabi_dmul>
    ae6a:	000a      	movs	r2, r1
    ae6c:	0003      	movs	r3, r0
    ae6e:	0014      	movs	r4, r2
    ae70:	9304      	str	r3, [sp, #16]
    ae72:	9405      	str	r4, [sp, #20]
    ae74:	4b09      	ldr	r3, [pc, #36]	; (ae9c <_strtod_l+0x6e4>)
    ae76:	4013      	ands	r3, r2
    ae78:	4a0f      	ldr	r2, [pc, #60]	; (aeb8 <_strtod_l+0x700>)
    ae7a:	4293      	cmp	r3, r2
    ae7c:	d900      	bls.n	ae80 <_strtod_l+0x6c8>
    ae7e:	e0c8      	b.n	b012 <_strtod_l+0x85a>
    ae80:	4a0e      	ldr	r2, [pc, #56]	; (aebc <_strtod_l+0x704>)
    ae82:	4293      	cmp	r3, r2
    ae84:	d800      	bhi.n	ae88 <_strtod_l+0x6d0>
    ae86:	e308      	b.n	b49a <_strtod_l+0xce2>
    ae88:	4b0d      	ldr	r3, [pc, #52]	; (aec0 <_strtod_l+0x708>)
    ae8a:	9305      	str	r3, [sp, #20]
    ae8c:	2301      	movs	r3, #1
    ae8e:	425b      	negs	r3, r3
    ae90:	9304      	str	r3, [sp, #16]
    ae92:	e65a      	b.n	ab4a <_strtod_l+0x392>
    ae94:	0000ebf0 	.word	0x0000ebf0
    ae98:	3ff00000 	.word	0x3ff00000
    ae9c:	7ff00000 	.word	0x7ff00000
    aea0:	7fe00000 	.word	0x7fe00000
    aea4:	ffc00000 	.word	0xffc00000
    aea8:	41dfffff 	.word	0x41dfffff
    aeac:	fffffc02 	.word	0xfffffc02
    aeb0:	0000ebc8 	.word	0x0000ebc8
    aeb4:	fcb00000 	.word	0xfcb00000
    aeb8:	7ca00000 	.word	0x7ca00000
    aebc:	7c900000 	.word	0x7c900000
    aec0:	7fefffff 	.word	0x7fefffff
    aec4:	4ace      	ldr	r2, [pc, #824]	; (b200 <_strtod_l+0xa48>)
    aec6:	e5aa      	b.n	aa1e <_strtod_l+0x266>
    aec8:	4bce      	ldr	r3, [pc, #824]	; (b204 <_strtod_l+0xa4c>)
    aeca:	2200      	movs	r2, #0
    aecc:	0030      	movs	r0, r6
    aece:	0039      	movs	r1, r7
    aed0:	f7f9 faa6 	bl	4420 <__aeabi_dmul>
    aed4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    aed6:	9011      	str	r0, [sp, #68]	; 0x44
    aed8:	9114      	str	r1, [sp, #80]	; 0x50
    aeda:	2b00      	cmp	r3, #0
    aedc:	d139      	bne.n	af52 <_strtod_l+0x79a>
    aede:	2280      	movs	r2, #128	; 0x80
    aee0:	0612      	lsls	r2, r2, #24
    aee2:	000b      	movs	r3, r1
    aee4:	4694      	mov	ip, r2
    aee6:	4463      	add	r3, ip
    aee8:	9012      	str	r0, [sp, #72]	; 0x48
    aeea:	9313      	str	r3, [sp, #76]	; 0x4c
    aeec:	9b05      	ldr	r3, [sp, #20]
    aeee:	9e12      	ldr	r6, [sp, #72]	; 0x48
    aef0:	9f13      	ldr	r7, [sp, #76]	; 0x4c
    aef2:	9310      	str	r3, [sp, #64]	; 0x40
    aef4:	e6dd      	b.n	acb2 <_strtod_l+0x4fa>
    aef6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    aef8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    aefa:	1ad6      	subs	r6, r2, r3
    aefc:	e76d      	b.n	adda <_strtod_l+0x622>
    aefe:	49c2      	ldr	r1, [pc, #776]	; (b208 <_strtod_l+0xa50>)
    af00:	1acb      	subs	r3, r1, r3
    af02:	2101      	movs	r1, #1
    af04:	4099      	lsls	r1, r3
    af06:	2301      	movs	r3, #1
    af08:	9111      	str	r1, [sp, #68]	; 0x44
    af0a:	9310      	str	r3, [sp, #64]	; 0x40
    af0c:	e646      	b.n	ab9c <_strtod_l+0x3e4>
    af0e:	9904      	ldr	r1, [sp, #16]
    af10:	9a05      	ldr	r2, [sp, #20]
    af12:	2900      	cmp	r1, #0
    af14:	d140      	bne.n	af98 <_strtod_l+0x7e0>
    af16:	9210      	str	r2, [sp, #64]	; 0x40
    af18:	0313      	lsls	r3, r2, #12
    af1a:	d142      	bne.n	afa2 <_strtod_l+0x7ea>
    af1c:	2200      	movs	r2, #0
    af1e:	4bbb      	ldr	r3, [pc, #748]	; (b20c <_strtod_l+0xa54>)
    af20:	0030      	movs	r0, r6
    af22:	0039      	movs	r1, r7
    af24:	f7fa f928 	bl	5178 <__aeabi_dcmplt>
    af28:	2800      	cmp	r0, #0
    af2a:	d000      	beq.n	af2e <_strtod_l+0x776>
    af2c:	e2bf      	b.n	b4ae <_strtod_l+0xcf6>
    af2e:	2200      	movs	r2, #0
    af30:	4bb4      	ldr	r3, [pc, #720]	; (b204 <_strtod_l+0xa4c>)
    af32:	0030      	movs	r0, r6
    af34:	0039      	movs	r1, r7
    af36:	f7f9 fa73 	bl	4420 <__aeabi_dmul>
    af3a:	2280      	movs	r2, #128	; 0x80
    af3c:	0612      	lsls	r2, r2, #24
    af3e:	000b      	movs	r3, r1
    af40:	4694      	mov	ip, r2
    af42:	4463      	add	r3, ip
    af44:	9011      	str	r0, [sp, #68]	; 0x44
    af46:	9114      	str	r1, [sp, #80]	; 0x50
    af48:	901a      	str	r0, [sp, #104]	; 0x68
    af4a:	931b      	str	r3, [sp, #108]	; 0x6c
    af4c:	9e1a      	ldr	r6, [sp, #104]	; 0x68
    af4e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
    af50:	e6af      	b.n	acb2 <_strtod_l+0x4fa>
    af52:	9a11      	ldr	r2, [sp, #68]	; 0x44
    af54:	9b14      	ldr	r3, [sp, #80]	; 0x50
    af56:	9212      	str	r2, [sp, #72]	; 0x48
    af58:	9313      	str	r3, [sp, #76]	; 0x4c
    af5a:	e7c7      	b.n	aeec <_strtod_l+0x734>
    af5c:	9b07      	ldr	r3, [sp, #28]
    af5e:	9502      	str	r5, [sp, #8]
    af60:	9301      	str	r3, [sp, #4]
    af62:	ab1e      	add	r3, sp, #120	; 0x78
    af64:	9300      	str	r3, [sp, #0]
    af66:	4aaa      	ldr	r2, [pc, #680]	; (b210 <_strtod_l+0xa58>)
    af68:	ab1f      	add	r3, sp, #124	; 0x7c
    af6a:	a91d      	add	r1, sp, #116	; 0x74
    af6c:	9809      	ldr	r0, [sp, #36]	; 0x24
    af6e:	f001 f8a1 	bl	c0b4 <__gethex>
    af72:	2407      	movs	r4, #7
    af74:	0005      	movs	r5, r0
    af76:	4004      	ands	r4, r0
    af78:	d100      	bne.n	af7c <_strtod_l+0x7c4>
    af7a:	e556      	b.n	aa2a <_strtod_l+0x272>
    af7c:	2c06      	cmp	r4, #6
    af7e:	d000      	beq.n	af82 <_strtod_l+0x7ca>
    af80:	e15e      	b.n	b240 <_strtod_l+0xa88>
    af82:	4653      	mov	r3, sl
    af84:	3301      	adds	r3, #1
    af86:	931d      	str	r3, [sp, #116]	; 0x74
    af88:	2300      	movs	r3, #0
    af8a:	2400      	movs	r4, #0
    af8c:	2500      	movs	r5, #0
    af8e:	9307      	str	r3, [sp, #28]
    af90:	e54d      	b.n	aa2e <_strtod_l+0x276>
    af92:	961d      	str	r6, [sp, #116]	; 0x74
    af94:	2200      	movs	r2, #0
    af96:	e448      	b.n	a82a <_strtod_l+0x72>
    af98:	2901      	cmp	r1, #1
    af9a:	d100      	bne.n	af9e <_strtod_l+0x7e6>
    af9c:	e1d8      	b.n	b350 <_strtod_l+0xb98>
    af9e:	9b05      	ldr	r3, [sp, #20]
    afa0:	9310      	str	r3, [sp, #64]	; 0x40
    afa2:	2300      	movs	r3, #0
    afa4:	9311      	str	r3, [sp, #68]	; 0x44
    afa6:	4b99      	ldr	r3, [pc, #612]	; (b20c <_strtod_l+0xa54>)
    afa8:	2600      	movs	r6, #0
    afaa:	4f9a      	ldr	r7, [pc, #616]	; (b214 <_strtod_l+0xa5c>)
    afac:	9314      	str	r3, [sp, #80]	; 0x50
    afae:	e680      	b.n	acb2 <_strtod_l+0x4fa>
    afb0:	6839      	ldr	r1, [r7, #0]
    afb2:	9a08      	ldr	r2, [sp, #32]
    afb4:	4650      	mov	r0, sl
    afb6:	f001 fe09 	bl	cbcc <strncmp>
    afba:	900a      	str	r0, [sp, #40]	; 0x28
    afbc:	2800      	cmp	r0, #0
    afbe:	d009      	beq.n	afd4 <_strtod_l+0x81c>
    afc0:	2300      	movs	r3, #0
    afc2:	2200      	movs	r2, #0
    afc4:	930a      	str	r3, [sp, #40]	; 0x28
    afc6:	4699      	mov	r9, r3
    afc8:	4698      	mov	r8, r3
    afca:	2000      	movs	r0, #0
    afcc:	2500      	movs	r5, #0
    afce:	9208      	str	r2, [sp, #32]
    afd0:	f7ff fc24 	bl	a81c <_strtod_l+0x64>
    afd4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    afd6:	9b08      	ldr	r3, [sp, #32]
    afd8:	4694      	mov	ip, r2
    afda:	4463      	add	r3, ip
    afdc:	931d      	str	r3, [sp, #116]	; 0x74
    afde:	781c      	ldrb	r4, [r3, #0]
    afe0:	0019      	movs	r1, r3
    afe2:	1c5a      	adds	r2, r3, #1
    afe4:	2300      	movs	r3, #0
    afe6:	2c30      	cmp	r4, #48	; 0x30
    afe8:	d105      	bne.n	aff6 <_strtod_l+0x83e>
    afea:	921d      	str	r2, [sp, #116]	; 0x74
    afec:	7814      	ldrb	r4, [r2, #0]
    afee:	1a53      	subs	r3, r2, r1
    aff0:	3201      	adds	r2, #1
    aff2:	2c30      	cmp	r4, #48	; 0x30
    aff4:	d0f9      	beq.n	afea <_strtod_l+0x832>
    aff6:	0022      	movs	r2, r4
    aff8:	3a31      	subs	r2, #49	; 0x31
    affa:	2a08      	cmp	r2, #8
    affc:	d800      	bhi.n	b000 <_strtod_l+0x848>
    affe:	e153      	b.n	b2a8 <_strtod_l+0xaf0>
    b000:	2200      	movs	r2, #0
    b002:	4691      	mov	r9, r2
    b004:	4690      	mov	r8, r2
    b006:	3201      	adds	r2, #1
    b008:	2000      	movs	r0, #0
    b00a:	2500      	movs	r5, #0
    b00c:	9208      	str	r2, [sp, #32]
    b00e:	f7ff fc05 	bl	a81c <_strtod_l+0x64>
    b012:	2322      	movs	r3, #34	; 0x22
    b014:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b016:	6013      	str	r3, [r2, #0]
    b018:	4b7f      	ldr	r3, [pc, #508]	; (b218 <_strtod_l+0xa60>)
    b01a:	9305      	str	r3, [sp, #20]
    b01c:	2300      	movs	r3, #0
    b01e:	9304      	str	r3, [sp, #16]
    b020:	e569      	b.n	aaf6 <_strtod_l+0x33e>
    b022:	497e      	ldr	r1, [pc, #504]	; (b21c <_strtod_l+0xa64>)
    b024:	9a10      	ldr	r2, [sp, #64]	; 0x40
    b026:	468c      	mov	ip, r1
    b028:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b02a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    b02c:	4462      	add	r2, ip
    b02e:	9205      	str	r2, [sp, #20]
    b030:	960a      	str	r6, [sp, #40]	; 0x28
    b032:	970b      	str	r7, [sp, #44]	; 0x2c
    b034:	9e04      	ldr	r6, [sp, #16]
    b036:	9f05      	ldr	r7, [sp, #20]
    b038:	0030      	movs	r0, r6
    b03a:	0039      	movs	r1, r7
    b03c:	9316      	str	r3, [sp, #88]	; 0x58
    b03e:	9417      	str	r4, [sp, #92]	; 0x5c
    b040:	f7ff f9ba 	bl	a3b8 <__ulp>
    b044:	0002      	movs	r2, r0
    b046:	000b      	movs	r3, r1
    b048:	980a      	ldr	r0, [sp, #40]	; 0x28
    b04a:	990b      	ldr	r1, [sp, #44]	; 0x2c
    b04c:	f7f9 f9e8 	bl	4420 <__aeabi_dmul>
    b050:	0032      	movs	r2, r6
    b052:	003b      	movs	r3, r7
    b054:	f001 fe04 	bl	cc60 <__aeabi_dadd>
    b058:	4b6f      	ldr	r3, [pc, #444]	; (b218 <_strtod_l+0xa60>)
    b05a:	4a71      	ldr	r2, [pc, #452]	; (b220 <_strtod_l+0xa68>)
    b05c:	9004      	str	r0, [sp, #16]
    b05e:	9105      	str	r1, [sp, #20]
    b060:	400b      	ands	r3, r1
    b062:	4293      	cmp	r3, r2
    b064:	d800      	bhi.n	b068 <_strtod_l+0x8b0>
    b066:	e0c6      	b.n	b1f6 <_strtod_l+0xa3e>
    b068:	4b6e      	ldr	r3, [pc, #440]	; (b224 <_strtod_l+0xa6c>)
    b06a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    b06c:	429a      	cmp	r2, r3
    b06e:	d005      	beq.n	b07c <_strtod_l+0x8c4>
    b070:	4b6c      	ldr	r3, [pc, #432]	; (b224 <_strtod_l+0xa6c>)
    b072:	9305      	str	r3, [sp, #20]
    b074:	2301      	movs	r3, #1
    b076:	425b      	negs	r3, r3
    b078:	9304      	str	r3, [sp, #16]
    b07a:	e66a      	b.n	ad52 <_strtod_l+0x59a>
    b07c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    b07e:	3301      	adds	r3, #1
    b080:	d1f6      	bne.n	b070 <_strtod_l+0x8b8>
    b082:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b084:	46da      	mov	sl, fp
    b086:	469b      	mov	fp, r3
    b088:	981e      	ldr	r0, [sp, #120]	; 0x78
    b08a:	2322      	movs	r3, #34	; 0x22
    b08c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b08e:	6013      	str	r3, [r2, #0]
    b090:	4b61      	ldr	r3, [pc, #388]	; (b218 <_strtod_l+0xa60>)
    b092:	9305      	str	r3, [sp, #20]
    b094:	2300      	movs	r3, #0
    b096:	9304      	str	r3, [sp, #16]
    b098:	9c04      	ldr	r4, [sp, #16]
    b09a:	9d05      	ldr	r5, [sp, #20]
    b09c:	9e09      	ldr	r6, [sp, #36]	; 0x24
    b09e:	0001      	movs	r1, r0
    b0a0:	0030      	movs	r0, r6
    b0a2:	f7fe fe7d 	bl	9da0 <_Bfree>
    b0a6:	9908      	ldr	r1, [sp, #32]
    b0a8:	0030      	movs	r0, r6
    b0aa:	f7fe fe79 	bl	9da0 <_Bfree>
    b0ae:	4641      	mov	r1, r8
    b0b0:	0030      	movs	r0, r6
    b0b2:	f7fe fe75 	bl	9da0 <_Bfree>
    b0b6:	4651      	mov	r1, sl
    b0b8:	0030      	movs	r0, r6
    b0ba:	f7fe fe71 	bl	9da0 <_Bfree>
    b0be:	4649      	mov	r1, r9
    b0c0:	0030      	movs	r0, r6
    b0c2:	f7fe fe6d 	bl	9da0 <_Bfree>
    b0c6:	e4b2      	b.n	aa2e <_strtod_l+0x276>
    b0c8:	2200      	movs	r2, #0
    b0ca:	920d      	str	r2, [sp, #52]	; 0x34
    b0cc:	e697      	b.n	adfe <_strtod_l+0x646>
    b0ce:	9f11      	ldr	r7, [sp, #68]	; 0x44
    b0d0:	9e14      	ldr	r6, [sp, #80]	; 0x50
    b0d2:	0038      	movs	r0, r7
    b0d4:	0031      	movs	r1, r6
    b0d6:	f7f9 ff39 	bl	4f4c <__aeabi_d2iz>
    b0da:	f7f9 ff6b 	bl	4fb4 <__aeabi_i2d>
    b0de:	000b      	movs	r3, r1
    b0e0:	0002      	movs	r2, r0
    b0e2:	0031      	movs	r1, r6
    b0e4:	0038      	movs	r0, r7
    b0e6:	f7f9 fc1b 	bl	4920 <__aeabi_dsub>
    b0ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b0ec:	0006      	movs	r6, r0
    b0ee:	000f      	movs	r7, r1
    b0f0:	2b00      	cmp	r3, #0
    b0f2:	d112      	bne.n	b11a <_strtod_l+0x962>
    b0f4:	9b04      	ldr	r3, [sp, #16]
    b0f6:	2b00      	cmp	r3, #0
    b0f8:	d10f      	bne.n	b11a <_strtod_l+0x962>
    b0fa:	0324      	lsls	r4, r4, #12
    b0fc:	d10d      	bne.n	b11a <_strtod_l+0x962>
    b0fe:	4a4a      	ldr	r2, [pc, #296]	; (b228 <_strtod_l+0xa70>)
    b100:	4b4a      	ldr	r3, [pc, #296]	; (b22c <_strtod_l+0xa74>)
    b102:	f7fa f839 	bl	5178 <__aeabi_dcmplt>
    b106:	2800      	cmp	r0, #0
    b108:	d100      	bne.n	b10c <_strtod_l+0x954>
    b10a:	e622      	b.n	ad52 <_strtod_l+0x59a>
    b10c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b10e:	46da      	mov	sl, fp
    b110:	9c04      	ldr	r4, [sp, #16]
    b112:	9d05      	ldr	r5, [sp, #20]
    b114:	469b      	mov	fp, r3
    b116:	981e      	ldr	r0, [sp, #120]	; 0x78
    b118:	e7c0      	b.n	b09c <_strtod_l+0x8e4>
    b11a:	4a43      	ldr	r2, [pc, #268]	; (b228 <_strtod_l+0xa70>)
    b11c:	4b44      	ldr	r3, [pc, #272]	; (b230 <_strtod_l+0xa78>)
    b11e:	0030      	movs	r0, r6
    b120:	0039      	movs	r1, r7
    b122:	f7fa f829 	bl	5178 <__aeabi_dcmplt>
    b126:	2800      	cmp	r0, #0
    b128:	d1f0      	bne.n	b10c <_strtod_l+0x954>
    b12a:	4a42      	ldr	r2, [pc, #264]	; (b234 <_strtod_l+0xa7c>)
    b12c:	4b35      	ldr	r3, [pc, #212]	; (b204 <_strtod_l+0xa4c>)
    b12e:	0030      	movs	r0, r6
    b130:	0039      	movs	r1, r7
    b132:	f7fa f835 	bl	51a0 <__aeabi_dcmpgt>
    b136:	2800      	cmp	r0, #0
    b138:	d100      	bne.n	b13c <_strtod_l+0x984>
    b13a:	e60a      	b.n	ad52 <_strtod_l+0x59a>
    b13c:	e7e6      	b.n	b10c <_strtod_l+0x954>
    b13e:	46a0      	mov	r8, r4
    b140:	991d      	ldr	r1, [sp, #116]	; 0x74
    b142:	3502      	adds	r5, #2
    b144:	2f08      	cmp	r7, #8
    b146:	dc00      	bgt.n	b14a <_strtod_l+0x992>
    b148:	e0b9      	b.n	b2be <_strtod_l+0xb06>
    b14a:	2300      	movs	r3, #0
    b14c:	2d10      	cmp	r5, #16
    b14e:	dc05      	bgt.n	b15c <_strtod_l+0x9a4>
    b150:	464c      	mov	r4, r9
    b152:	00a4      	lsls	r4, r4, #2
    b154:	444c      	add	r4, r9
    b156:	4691      	mov	r9, r2
    b158:	0064      	lsls	r4, r4, #1
    b15a:	44a1      	add	r9, r4
    b15c:	1c4a      	adds	r2, r1, #1
    b15e:	921d      	str	r2, [sp, #116]	; 0x74
    b160:	784c      	ldrb	r4, [r1, #1]
    b162:	f7ff fbe3 	bl	a92c <_strtod_l+0x174>
    b166:	2c00      	cmp	r4, #0
    b168:	d100      	bne.n	b16c <_strtod_l+0x9b4>
    b16a:	e4ee      	b.n	ab4a <_strtod_l+0x392>
    b16c:	230f      	movs	r3, #15
    b16e:	4264      	negs	r4, r4
    b170:	4023      	ands	r3, r4
    b172:	d00a      	beq.n	b18a <_strtod_l+0x9d2>
    b174:	9804      	ldr	r0, [sp, #16]
    b176:	9905      	ldr	r1, [sp, #20]
    b178:	4a2f      	ldr	r2, [pc, #188]	; (b238 <_strtod_l+0xa80>)
    b17a:	00db      	lsls	r3, r3, #3
    b17c:	18d3      	adds	r3, r2, r3
    b17e:	681a      	ldr	r2, [r3, #0]
    b180:	685b      	ldr	r3, [r3, #4]
    b182:	f7f8 fe19 	bl	3db8 <__aeabi_ddiv>
    b186:	9004      	str	r0, [sp, #16]
    b188:	9105      	str	r1, [sp, #20]
    b18a:	1124      	asrs	r4, r4, #4
    b18c:	d100      	bne.n	b190 <_strtod_l+0x9d8>
    b18e:	e4dc      	b.n	ab4a <_strtod_l+0x392>
    b190:	2c1f      	cmp	r4, #31
    b192:	dc29      	bgt.n	b1e8 <_strtod_l+0xa30>
    b194:	2310      	movs	r3, #16
    b196:	4023      	ands	r3, r4
    b198:	930c      	str	r3, [sp, #48]	; 0x30
    b19a:	d100      	bne.n	b19e <_strtod_l+0x9e6>
    b19c:	e1c5      	b.n	b52a <_strtod_l+0xd72>
    b19e:	236a      	movs	r3, #106	; 0x6a
    b1a0:	930c      	str	r3, [sp, #48]	; 0x30
    b1a2:	2c00      	cmp	r4, #0
    b1a4:	dc00      	bgt.n	b1a8 <_strtod_l+0x9f0>
    b1a6:	e1c4      	b.n	b532 <_strtod_l+0xd7a>
    b1a8:	9804      	ldr	r0, [sp, #16]
    b1aa:	9905      	ldr	r1, [sp, #20]
    b1ac:	2300      	movs	r3, #0
    b1ae:	2701      	movs	r7, #1
    b1b0:	4e22      	ldr	r6, [pc, #136]	; (b23c <_strtod_l+0xa84>)
    b1b2:	4227      	tst	r7, r4
    b1b4:	d004      	beq.n	b1c0 <_strtod_l+0xa08>
    b1b6:	6832      	ldr	r2, [r6, #0]
    b1b8:	6873      	ldr	r3, [r6, #4]
    b1ba:	f7f9 f931 	bl	4420 <__aeabi_dmul>
    b1be:	2301      	movs	r3, #1
    b1c0:	1064      	asrs	r4, r4, #1
    b1c2:	3608      	adds	r6, #8
    b1c4:	2c00      	cmp	r4, #0
    b1c6:	d1f4      	bne.n	b1b2 <_strtod_l+0x9fa>
    b1c8:	2b00      	cmp	r3, #0
    b1ca:	d000      	beq.n	b1ce <_strtod_l+0xa16>
    b1cc:	e221      	b.n	b612 <_strtod_l+0xe5a>
    b1ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b1d0:	2b00      	cmp	r3, #0
    b1d2:	d000      	beq.n	b1d6 <_strtod_l+0xa1e>
    b1d4:	e1ad      	b.n	b532 <_strtod_l+0xd7a>
    b1d6:	9804      	ldr	r0, [sp, #16]
    b1d8:	9905      	ldr	r1, [sp, #20]
    b1da:	2200      	movs	r2, #0
    b1dc:	2300      	movs	r3, #0
    b1de:	f7f9 ffc5 	bl	516c <__aeabi_dcmpeq>
    b1e2:	2800      	cmp	r0, #0
    b1e4:	d100      	bne.n	b1e8 <_strtod_l+0xa30>
    b1e6:	e4b2      	b.n	ab4e <_strtod_l+0x396>
    b1e8:	2322      	movs	r3, #34	; 0x22
    b1ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b1ec:	2400      	movs	r4, #0
    b1ee:	6013      	str	r3, [r2, #0]
    b1f0:	2500      	movs	r5, #0
    b1f2:	f7ff fc1c 	bl	aa2e <_strtod_l+0x276>
    b1f6:	23d4      	movs	r3, #212	; 0xd4
    b1f8:	049b      	lsls	r3, r3, #18
    b1fa:	18cc      	adds	r4, r1, r3
    b1fc:	9405      	str	r4, [sp, #20]
    b1fe:	e5a0      	b.n	ad42 <_strtod_l+0x58a>
    b200:	00004e1f 	.word	0x00004e1f
    b204:	3fe00000 	.word	0x3fe00000
    b208:	fffffbe2 	.word	0xfffffbe2
    b20c:	3ff00000 	.word	0x3ff00000
    b210:	0000eda4 	.word	0x0000eda4
    b214:	bff00000 	.word	0xbff00000
    b218:	7ff00000 	.word	0x7ff00000
    b21c:	fcb00000 	.word	0xfcb00000
    b220:	7c9fffff 	.word	0x7c9fffff
    b224:	7fefffff 	.word	0x7fefffff
    b228:	94a03595 	.word	0x94a03595
    b22c:	3fcfffff 	.word	0x3fcfffff
    b230:	3fdfffff 	.word	0x3fdfffff
    b234:	35afe535 	.word	0x35afe535
    b238:	0000ebf0 	.word	0x0000ebf0
    b23c:	0000edd0 	.word	0x0000edd0
    b240:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    b242:	2a00      	cmp	r2, #0
    b244:	d007      	beq.n	b256 <_strtod_l+0xa9e>
    b246:	2135      	movs	r1, #53	; 0x35
    b248:	a820      	add	r0, sp, #128	; 0x80
    b24a:	f7ff f9df 	bl	a60c <__copybits>
    b24e:	991e      	ldr	r1, [sp, #120]	; 0x78
    b250:	9809      	ldr	r0, [sp, #36]	; 0x24
    b252:	f7fe fda5 	bl	9da0 <_Bfree>
    b256:	2c05      	cmp	r4, #5
    b258:	d808      	bhi.n	b26c <_strtod_l+0xab4>
    b25a:	4bd1      	ldr	r3, [pc, #836]	; (b5a0 <_strtod_l+0xde8>)
    b25c:	00a4      	lsls	r4, r4, #2
    b25e:	591b      	ldr	r3, [r3, r4]
    b260:	469f      	mov	pc, r3
    b262:	4bd0      	ldr	r3, [pc, #832]	; (b5a4 <_strtod_l+0xdec>)
    b264:	9305      	str	r3, [sp, #20]
    b266:	2301      	movs	r3, #1
    b268:	425b      	negs	r3, r3
    b26a:	9304      	str	r3, [sp, #16]
    b26c:	072b      	lsls	r3, r5, #28
    b26e:	d400      	bmi.n	b272 <_strtod_l+0xaba>
    b270:	e441      	b.n	aaf6 <_strtod_l+0x33e>
    b272:	2380      	movs	r3, #128	; 0x80
    b274:	9a05      	ldr	r2, [sp, #20]
    b276:	061b      	lsls	r3, r3, #24
    b278:	431a      	orrs	r2, r3
    b27a:	9205      	str	r2, [sp, #20]
    b27c:	e43b      	b.n	aaf6 <_strtod_l+0x33e>
    b27e:	4bca      	ldr	r3, [pc, #808]	; (b5a8 <_strtod_l+0xdf0>)
    b280:	9305      	str	r3, [sp, #20]
    b282:	e7f3      	b.n	b26c <_strtod_l+0xab4>
    b284:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b286:	9304      	str	r3, [sp, #16]
    b288:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b28a:	9305      	str	r3, [sp, #20]
    b28c:	e7ee      	b.n	b26c <_strtod_l+0xab4>
    b28e:	49c7      	ldr	r1, [pc, #796]	; (b5ac <_strtod_l+0xdf4>)
    b290:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b292:	468c      	mov	ip, r1
    b294:	9304      	str	r3, [sp, #16]
    b296:	4ac6      	ldr	r2, [pc, #792]	; (b5b0 <_strtod_l+0xdf8>)
    b298:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b29a:	401a      	ands	r2, r3
    b29c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b29e:	4463      	add	r3, ip
    b2a0:	051b      	lsls	r3, r3, #20
    b2a2:	431a      	orrs	r2, r3
    b2a4:	9205      	str	r2, [sp, #20]
    b2a6:	e7e1      	b.n	b26c <_strtod_l+0xab4>
    b2a8:	2230      	movs	r2, #48	; 0x30
    b2aa:	1c58      	adds	r0, r3, #1
    b2ac:	2300      	movs	r3, #0
    b2ae:	991d      	ldr	r1, [sp, #116]	; 0x74
    b2b0:	4252      	negs	r2, r2
    b2b2:	4694      	mov	ip, r2
    b2b4:	468a      	mov	sl, r1
    b2b6:	4698      	mov	r8, r3
    b2b8:	2501      	movs	r5, #1
    b2ba:	4699      	mov	r9, r3
    b2bc:	44a4      	add	ip, r4
    b2be:	4643      	mov	r3, r8
    b2c0:	009c      	lsls	r4, r3, #2
    b2c2:	4444      	add	r4, r8
    b2c4:	0064      	lsls	r4, r4, #1
    b2c6:	4464      	add	r4, ip
    b2c8:	46a0      	mov	r8, r4
    b2ca:	2300      	movs	r3, #0
    b2cc:	e746      	b.n	b15c <_strtod_l+0x9a4>
    b2ce:	2325      	movs	r3, #37	; 0x25
    b2d0:	9e08      	ldr	r6, [sp, #32]
    b2d2:	1b5b      	subs	r3, r3, r5
    b2d4:	429e      	cmp	r6, r3
    b2d6:	dd01      	ble.n	b2dc <_strtod_l+0xb24>
    b2d8:	f7ff fc1e 	bl	ab18 <_strtod_l+0x360>
    b2dc:	230f      	movs	r3, #15
    b2de:	4cb5      	ldr	r4, [pc, #724]	; (b5b4 <_strtod_l+0xdfc>)
    b2e0:	1b5d      	subs	r5, r3, r5
    b2e2:	00e9      	lsls	r1, r5, #3
    b2e4:	1b75      	subs	r5, r6, r5
    b2e6:	1861      	adds	r1, r4, r1
    b2e8:	00ed      	lsls	r5, r5, #3
    b2ea:	1964      	adds	r4, r4, r5
    b2ec:	9a04      	ldr	r2, [sp, #16]
    b2ee:	9b05      	ldr	r3, [sp, #20]
    b2f0:	6808      	ldr	r0, [r1, #0]
    b2f2:	6849      	ldr	r1, [r1, #4]
    b2f4:	f7f9 f894 	bl	4420 <__aeabi_dmul>
    b2f8:	6822      	ldr	r2, [r4, #0]
    b2fa:	6863      	ldr	r3, [r4, #4]
    b2fc:	f7f9 f890 	bl	4420 <__aeabi_dmul>
    b300:	0004      	movs	r4, r0
    b302:	000d      	movs	r5, r1
    b304:	f7ff fb93 	bl	aa2e <_strtod_l+0x276>
    b308:	9a11      	ldr	r2, [sp, #68]	; 0x44
    b30a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b30c:	9218      	str	r2, [sp, #96]	; 0x60
    b30e:	9319      	str	r3, [sp, #100]	; 0x64
    b310:	e4fe      	b.n	ad10 <_strtod_l+0x558>
    b312:	2300      	movs	r3, #0
    b314:	9311      	str	r3, [sp, #68]	; 0x44
    b316:	4ba8      	ldr	r3, [pc, #672]	; (b5b8 <_strtod_l+0xe00>)
    b318:	9314      	str	r3, [sp, #80]	; 0x50
    b31a:	e4ed      	b.n	acf8 <_strtod_l+0x540>
    b31c:	2c49      	cmp	r4, #73	; 0x49
    b31e:	d001      	beq.n	b324 <_strtod_l+0xb6c>
    b320:	f7ff fa8e 	bl	a840 <_strtod_l+0x88>
    b324:	49a5      	ldr	r1, [pc, #660]	; (b5bc <_strtod_l+0xe04>)
    b326:	a81d      	add	r0, sp, #116	; 0x74
    b328:	f001 f958 	bl	c5dc <__match>
    b32c:	2800      	cmp	r0, #0
    b32e:	d101      	bne.n	b334 <_strtod_l+0xb7c>
    b330:	f7ff fa86 	bl	a840 <_strtod_l+0x88>
    b334:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b336:	49a2      	ldr	r1, [pc, #648]	; (b5c0 <_strtod_l+0xe08>)
    b338:	3b01      	subs	r3, #1
    b33a:	a81d      	add	r0, sp, #116	; 0x74
    b33c:	931d      	str	r3, [sp, #116]	; 0x74
    b33e:	f001 f94d 	bl	c5dc <__match>
    b342:	2800      	cmp	r0, #0
    b344:	d000      	beq.n	b348 <_strtod_l+0xb90>
    b346:	e667      	b.n	b018 <_strtod_l+0x860>
    b348:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b34a:	3301      	adds	r3, #1
    b34c:	931d      	str	r3, [sp, #116]	; 0x74
    b34e:	e663      	b.n	b018 <_strtod_l+0x860>
    b350:	9b05      	ldr	r3, [sp, #20]
    b352:	9310      	str	r3, [sp, #64]	; 0x40
    b354:	2b00      	cmp	r3, #0
    b356:	d000      	beq.n	b35a <_strtod_l+0xba2>
    b358:	e623      	b.n	afa2 <_strtod_l+0x7ea>
    b35a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b35c:	46da      	mov	sl, fp
    b35e:	469b      	mov	fp, r3
    b360:	2322      	movs	r3, #34	; 0x22
    b362:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b364:	981e      	ldr	r0, [sp, #120]	; 0x78
    b366:	6013      	str	r3, [r2, #0]
    b368:	2400      	movs	r4, #0
    b36a:	2500      	movs	r5, #0
    b36c:	e696      	b.n	b09c <_strtod_l+0x8e4>
    b36e:	9a08      	ldr	r2, [sp, #32]
    b370:	0013      	movs	r3, r2
    b372:	3316      	adds	r3, #22
    b374:	da01      	bge.n	b37a <_strtod_l+0xbc2>
    b376:	f7ff fbcf 	bl	ab18 <_strtod_l+0x360>
    b37a:	00d0      	lsls	r0, r2, #3
    b37c:	4a8d      	ldr	r2, [pc, #564]	; (b5b4 <_strtod_l+0xdfc>)
    b37e:	1a12      	subs	r2, r2, r0
    b380:	6853      	ldr	r3, [r2, #4]
    b382:	6812      	ldr	r2, [r2, #0]
    b384:	9804      	ldr	r0, [sp, #16]
    b386:	9905      	ldr	r1, [sp, #20]
    b388:	f7f8 fd16 	bl	3db8 <__aeabi_ddiv>
    b38c:	0004      	movs	r4, r0
    b38e:	000d      	movs	r5, r1
    b390:	f7ff fb4d 	bl	aa2e <_strtod_l+0x276>
    b394:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b396:	46da      	mov	sl, fp
    b398:	469b      	mov	fp, r3
    b39a:	e676      	b.n	b08a <_strtod_l+0x8d2>
    b39c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b39e:	46da      	mov	sl, fp
    b3a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    b3a2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    b3a4:	469b      	mov	fp, r3
    b3a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b3a8:	2b00      	cmp	r3, #0
    b3aa:	d100      	bne.n	b3ae <_strtod_l+0xbf6>
    b3ac:	e08d      	b.n	b4ca <_strtod_l+0xd12>
    b3ae:	9804      	ldr	r0, [sp, #16]
    b3b0:	9905      	ldr	r1, [sp, #20]
    b3b2:	030b      	lsls	r3, r1, #12
    b3b4:	000a      	movs	r2, r1
    b3b6:	4983      	ldr	r1, [pc, #524]	; (b5c4 <_strtod_l+0xe0c>)
    b3b8:	0b1b      	lsrs	r3, r3, #12
    b3ba:	428b      	cmp	r3, r1
    b3bc:	d100      	bne.n	b3c0 <_strtod_l+0xc08>
    b3be:	e0cc      	b.n	b55a <_strtod_l+0xda2>
    b3c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b3c2:	2b00      	cmp	r3, #0
    b3c4:	d100      	bne.n	b3c8 <_strtod_l+0xc10>
    b3c6:	e07b      	b.n	b4c0 <_strtod_l+0xd08>
    b3c8:	9a05      	ldr	r2, [sp, #20]
    b3ca:	4213      	tst	r3, r2
    b3cc:	d010      	beq.n	b3f0 <_strtod_l+0xc38>
    b3ce:	9804      	ldr	r0, [sp, #16]
    b3d0:	9905      	ldr	r1, [sp, #20]
    b3d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b3d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    b3d6:	2b00      	cmp	r3, #0
    b3d8:	d100      	bne.n	b3dc <_strtod_l+0xc24>
    b3da:	e083      	b.n	b4e4 <_strtod_l+0xd2c>
    b3dc:	f7ff f9d4 	bl	a788 <sulp>
    b3e0:	0002      	movs	r2, r0
    b3e2:	000b      	movs	r3, r1
    b3e4:	0020      	movs	r0, r4
    b3e6:	0029      	movs	r1, r5
    b3e8:	f001 fc3a 	bl	cc60 <__aeabi_dadd>
    b3ec:	0004      	movs	r4, r0
    b3ee:	000d      	movs	r5, r1
    b3f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b3f2:	2b00      	cmp	r3, #0
    b3f4:	d017      	beq.n	b426 <_strtod_l+0xc6e>
    b3f6:	4b74      	ldr	r3, [pc, #464]	; (b5c8 <_strtod_l+0xe10>)
    b3f8:	0020      	movs	r0, r4
    b3fa:	9317      	str	r3, [sp, #92]	; 0x5c
    b3fc:	2300      	movs	r3, #0
    b3fe:	9316      	str	r3, [sp, #88]	; 0x58
    b400:	9a16      	ldr	r2, [sp, #88]	; 0x58
    b402:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    b404:	0029      	movs	r1, r5
    b406:	f7f9 f80b 	bl	4420 <__aeabi_dmul>
    b40a:	0002      	movs	r2, r0
    b40c:	000b      	movs	r3, r1
    b40e:	0004      	movs	r4, r0
    b410:	000d      	movs	r5, r1
    b412:	9204      	str	r2, [sp, #16]
    b414:	9305      	str	r3, [sp, #20]
    b416:	2900      	cmp	r1, #0
    b418:	d105      	bne.n	b426 <_strtod_l+0xc6e>
    b41a:	9b04      	ldr	r3, [sp, #16]
    b41c:	2b00      	cmp	r3, #0
    b41e:	d102      	bne.n	b426 <_strtod_l+0xc6e>
    b420:	2322      	movs	r3, #34	; 0x22
    b422:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b424:	6013      	str	r3, [r2, #0]
    b426:	981e      	ldr	r0, [sp, #120]	; 0x78
    b428:	e638      	b.n	b09c <_strtod_l+0x8e4>
    b42a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b42c:	46da      	mov	sl, fp
    b42e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    b430:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    b432:	469b      	mov	fp, r3
    b434:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b436:	2b00      	cmp	r3, #0
    b438:	d1da      	bne.n	b3f0 <_strtod_l+0xc38>
    b43a:	9904      	ldr	r1, [sp, #16]
    b43c:	9a05      	ldr	r2, [sp, #20]
    b43e:	2900      	cmp	r1, #0
    b440:	d1d6      	bne.n	b3f0 <_strtod_l+0xc38>
    b442:	0313      	lsls	r3, r2, #12
    b444:	d1d4      	bne.n	b3f0 <_strtod_l+0xc38>
    b446:	4b58      	ldr	r3, [pc, #352]	; (b5a8 <_strtod_l+0xdf0>)
    b448:	4013      	ands	r3, r2
    b44a:	22d6      	movs	r2, #214	; 0xd6
    b44c:	04d2      	lsls	r2, r2, #19
    b44e:	4293      	cmp	r3, r2
    b450:	d9ce      	bls.n	b3f0 <_strtod_l+0xc38>
    b452:	464b      	mov	r3, r9
    b454:	695b      	ldr	r3, [r3, #20]
    b456:	2b00      	cmp	r3, #0
    b458:	d103      	bne.n	b462 <_strtod_l+0xcaa>
    b45a:	464b      	mov	r3, r9
    b45c:	691b      	ldr	r3, [r3, #16]
    b45e:	2b01      	cmp	r3, #1
    b460:	ddc6      	ble.n	b3f0 <_strtod_l+0xc38>
    b462:	4649      	mov	r1, r9
    b464:	2201      	movs	r2, #1
    b466:	9809      	ldr	r0, [sp, #36]	; 0x24
    b468:	f7fe fe90 	bl	a18c <__lshift>
    b46c:	4641      	mov	r1, r8
    b46e:	4681      	mov	r9, r0
    b470:	f7fe feec 	bl	a24c <__mcmp>
    b474:	2800      	cmp	r0, #0
    b476:	ddbb      	ble.n	b3f0 <_strtod_l+0xc38>
    b478:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b47a:	2b00      	cmp	r3, #0
    b47c:	d100      	bne.n	b480 <_strtod_l+0xcc8>
    b47e:	e0b2      	b.n	b5e6 <_strtod_l+0xe2e>
    b480:	9a05      	ldr	r2, [sp, #20]
    b482:	4b49      	ldr	r3, [pc, #292]	; (b5a8 <_strtod_l+0xdf0>)
    b484:	4013      	ands	r3, r2
    b486:	22d6      	movs	r2, #214	; 0xd6
    b488:	04d2      	lsls	r2, r2, #19
    b48a:	4293      	cmp	r3, r2
    b48c:	dd00      	ble.n	b490 <_strtod_l+0xcd8>
    b48e:	e0aa      	b.n	b5e6 <_strtod_l+0xe2e>
    b490:	22dc      	movs	r2, #220	; 0xdc
    b492:	0492      	lsls	r2, r2, #18
    b494:	4293      	cmp	r3, r2
    b496:	dcae      	bgt.n	b3f6 <_strtod_l+0xc3e>
    b498:	e762      	b.n	b360 <_strtod_l+0xba8>
    b49a:	22d4      	movs	r2, #212	; 0xd4
    b49c:	0492      	lsls	r2, r2, #18
    b49e:	0023      	movs	r3, r4
    b4a0:	4694      	mov	ip, r2
    b4a2:	4463      	add	r3, ip
    b4a4:	9305      	str	r3, [sp, #20]
    b4a6:	2300      	movs	r3, #0
    b4a8:	930c      	str	r3, [sp, #48]	; 0x30
    b4aa:	f7ff fb50 	bl	ab4e <_strtod_l+0x396>
    b4ae:	2300      	movs	r3, #0
    b4b0:	4c46      	ldr	r4, [pc, #280]	; (b5cc <_strtod_l+0xe14>)
    b4b2:	931a      	str	r3, [sp, #104]	; 0x68
    b4b4:	941b      	str	r4, [sp, #108]	; 0x6c
    b4b6:	2300      	movs	r3, #0
    b4b8:	9311      	str	r3, [sp, #68]	; 0x44
    b4ba:	4b45      	ldr	r3, [pc, #276]	; (b5d0 <_strtod_l+0xe18>)
    b4bc:	9314      	str	r3, [sp, #80]	; 0x50
    b4be:	e545      	b.n	af4c <_strtod_l+0x794>
    b4c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b4c2:	9a04      	ldr	r2, [sp, #16]
    b4c4:	4213      	tst	r3, r2
    b4c6:	d093      	beq.n	b3f0 <_strtod_l+0xc38>
    b4c8:	e781      	b.n	b3ce <_strtod_l+0xc16>
    b4ca:	9904      	ldr	r1, [sp, #16]
    b4cc:	9a05      	ldr	r2, [sp, #20]
    b4ce:	0313      	lsls	r3, r2, #12
    b4d0:	d000      	beq.n	b4d4 <_strtod_l+0xd1c>
    b4d2:	e775      	b.n	b3c0 <_strtod_l+0xc08>
    b4d4:	2900      	cmp	r1, #0
    b4d6:	d000      	beq.n	b4da <_strtod_l+0xd22>
    b4d8:	e772      	b.n	b3c0 <_strtod_l+0xc08>
    b4da:	e7cd      	b.n	b478 <_strtod_l+0xcc0>
    b4dc:	4b3d      	ldr	r3, [pc, #244]	; (b5d4 <_strtod_l+0xe1c>)
    b4de:	2700      	movs	r7, #0
    b4e0:	930c      	str	r3, [sp, #48]	; 0x30
    b4e2:	e4b3      	b.n	ae4c <_strtod_l+0x694>
    b4e4:	f7ff f950 	bl	a788 <sulp>
    b4e8:	0002      	movs	r2, r0
    b4ea:	000b      	movs	r3, r1
    b4ec:	0020      	movs	r0, r4
    b4ee:	0029      	movs	r1, r5
    b4f0:	f7f9 fa16 	bl	4920 <__aeabi_dsub>
    b4f4:	2200      	movs	r2, #0
    b4f6:	2300      	movs	r3, #0
    b4f8:	0004      	movs	r4, r0
    b4fa:	000d      	movs	r5, r1
    b4fc:	f7f9 fe36 	bl	516c <__aeabi_dcmpeq>
    b500:	2800      	cmp	r0, #0
    b502:	d000      	beq.n	b506 <_strtod_l+0xd4e>
    b504:	e72c      	b.n	b360 <_strtod_l+0xba8>
    b506:	e773      	b.n	b3f0 <_strtod_l+0xc38>
    b508:	aa20      	add	r2, sp, #128	; 0x80
    b50a:	4933      	ldr	r1, [pc, #204]	; (b5d8 <_strtod_l+0xe20>)
    b50c:	a81d      	add	r0, sp, #116	; 0x74
    b50e:	f001 f87b 	bl	c608 <__hexnan>
    b512:	2805      	cmp	r0, #5
    b514:	d001      	beq.n	b51a <_strtod_l+0xd62>
    b516:	f7ff faea 	bl	aaee <_strtod_l+0x336>
    b51a:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b51c:	4a22      	ldr	r2, [pc, #136]	; (b5a8 <_strtod_l+0xdf0>)
    b51e:	431a      	orrs	r2, r3
    b520:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b522:	9205      	str	r2, [sp, #20]
    b524:	9304      	str	r3, [sp, #16]
    b526:	f7ff fae6 	bl	aaf6 <_strtod_l+0x33e>
    b52a:	2c00      	cmp	r4, #0
    b52c:	dd00      	ble.n	b530 <_strtod_l+0xd78>
    b52e:	e63b      	b.n	b1a8 <_strtod_l+0x9f0>
    b530:	e651      	b.n	b1d6 <_strtod_l+0xa1e>
    b532:	9b04      	ldr	r3, [sp, #16]
    b534:	9c05      	ldr	r4, [sp, #20]
    b536:	236b      	movs	r3, #107	; 0x6b
    b538:	0061      	lsls	r1, r4, #1
    b53a:	0d49      	lsrs	r1, r1, #21
    b53c:	0022      	movs	r2, r4
    b53e:	1a5b      	subs	r3, r3, r1
    b540:	2b00      	cmp	r3, #0
    b542:	dc00      	bgt.n	b546 <_strtod_l+0xd8e>
    b544:	e647      	b.n	b1d6 <_strtod_l+0xa1e>
    b546:	2b1f      	cmp	r3, #31
    b548:	dd5c      	ble.n	b604 <_strtod_l+0xe4c>
    b54a:	2100      	movs	r1, #0
    b54c:	9104      	str	r1, [sp, #16]
    b54e:	2b34      	cmp	r3, #52	; 0x34
    b550:	dd62      	ble.n	b618 <_strtod_l+0xe60>
    b552:	23dc      	movs	r3, #220	; 0xdc
    b554:	049b      	lsls	r3, r3, #18
    b556:	9305      	str	r3, [sp, #20]
    b558:	e63d      	b.n	b1d6 <_strtod_l+0xa1e>
    b55a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b55c:	9904      	ldr	r1, [sp, #16]
    b55e:	2b00      	cmp	r3, #0
    b560:	d03e      	beq.n	b5e0 <_strtod_l+0xe28>
    b562:	20d4      	movs	r0, #212	; 0xd4
    b564:	4b10      	ldr	r3, [pc, #64]	; (b5a8 <_strtod_l+0xdf0>)
    b566:	04c0      	lsls	r0, r0, #19
    b568:	4013      	ands	r3, r2
    b56a:	4283      	cmp	r3, r0
    b56c:	d838      	bhi.n	b5e0 <_strtod_l+0xe28>
    b56e:	206b      	movs	r0, #107	; 0x6b
    b570:	0d1b      	lsrs	r3, r3, #20
    b572:	1ac0      	subs	r0, r0, r3
    b574:	2301      	movs	r3, #1
    b576:	425b      	negs	r3, r3
    b578:	4083      	lsls	r3, r0
    b57a:	428b      	cmp	r3, r1
    b57c:	d000      	beq.n	b580 <_strtod_l+0xdc8>
    b57e:	e71f      	b.n	b3c0 <_strtod_l+0xc08>
    b580:	4916      	ldr	r1, [pc, #88]	; (b5dc <_strtod_l+0xe24>)
    b582:	428a      	cmp	r2, r1
    b584:	d05a      	beq.n	b63c <_strtod_l+0xe84>
    b586:	2180      	movs	r1, #128	; 0x80
    b588:	4b07      	ldr	r3, [pc, #28]	; (b5a8 <_strtod_l+0xdf0>)
    b58a:	0349      	lsls	r1, r1, #13
    b58c:	401a      	ands	r2, r3
    b58e:	0013      	movs	r3, r2
    b590:	468c      	mov	ip, r1
    b592:	4463      	add	r3, ip
    b594:	9305      	str	r3, [sp, #20]
    b596:	2300      	movs	r3, #0
    b598:	9304      	str	r3, [sp, #16]
    b59a:	9c04      	ldr	r4, [sp, #16]
    b59c:	9d05      	ldr	r5, [sp, #20]
    b59e:	e727      	b.n	b3f0 <_strtod_l+0xc38>
    b5a0:	0000ed7c 	.word	0x0000ed7c
    b5a4:	7fffffff 	.word	0x7fffffff
    b5a8:	7ff00000 	.word	0x7ff00000
    b5ac:	00000433 	.word	0x00000433
    b5b0:	ffefffff 	.word	0xffefffff
    b5b4:	0000ebf0 	.word	0x0000ebf0
    b5b8:	3ff00000 	.word	0x3ff00000
    b5bc:	0000ed94 	.word	0x0000ed94
    b5c0:	0000ed98 	.word	0x0000ed98
    b5c4:	000fffff 	.word	0x000fffff
    b5c8:	39500000 	.word	0x39500000
    b5cc:	bfe00000 	.word	0xbfe00000
    b5d0:	3fe00000 	.word	0x3fe00000
    b5d4:	0000ebc8 	.word	0x0000ebc8
    b5d8:	0000edb8 	.word	0x0000edb8
    b5dc:	7fefffff 	.word	0x7fefffff
    b5e0:	2301      	movs	r3, #1
    b5e2:	425b      	negs	r3, r3
    b5e4:	e7c9      	b.n	b57a <_strtod_l+0xdc2>
    b5e6:	9a05      	ldr	r2, [sp, #20]
    b5e8:	4b16      	ldr	r3, [pc, #88]	; (b644 <_strtod_l+0xe8c>)
    b5ea:	4013      	ands	r3, r2
    b5ec:	4a16      	ldr	r2, [pc, #88]	; (b648 <_strtod_l+0xe90>)
    b5ee:	4694      	mov	ip, r2
    b5f0:	4a16      	ldr	r2, [pc, #88]	; (b64c <_strtod_l+0xe94>)
    b5f2:	4463      	add	r3, ip
    b5f4:	431a      	orrs	r2, r3
    b5f6:	2301      	movs	r3, #1
    b5f8:	425b      	negs	r3, r3
    b5fa:	9205      	str	r2, [sp, #20]
    b5fc:	9304      	str	r3, [sp, #16]
    b5fe:	9c04      	ldr	r4, [sp, #16]
    b600:	9d05      	ldr	r5, [sp, #20]
    b602:	e6f5      	b.n	b3f0 <_strtod_l+0xc38>
    b604:	2201      	movs	r2, #1
    b606:	4252      	negs	r2, r2
    b608:	409a      	lsls	r2, r3
    b60a:	9b04      	ldr	r3, [sp, #16]
    b60c:	4013      	ands	r3, r2
    b60e:	9304      	str	r3, [sp, #16]
    b610:	e5e1      	b.n	b1d6 <_strtod_l+0xa1e>
    b612:	9004      	str	r0, [sp, #16]
    b614:	9105      	str	r1, [sp, #20]
    b616:	e5da      	b.n	b1ce <_strtod_l+0xa16>
    b618:	2101      	movs	r1, #1
    b61a:	3b20      	subs	r3, #32
    b61c:	4249      	negs	r1, r1
    b61e:	4099      	lsls	r1, r3
    b620:	400a      	ands	r2, r1
    b622:	9205      	str	r2, [sp, #20]
    b624:	e5d7      	b.n	b1d6 <_strtod_l+0xa1e>
    b626:	002f      	movs	r7, r5
    b628:	991d      	ldr	r1, [sp, #116]	; 0x74
    b62a:	3501      	adds	r5, #1
    b62c:	e58a      	b.n	b144 <_strtod_l+0x98c>
    b62e:	991d      	ldr	r1, [sp, #116]	; 0x74
    b630:	0023      	movs	r3, r4
    b632:	e593      	b.n	b15c <_strtod_l+0x9a4>
    b634:	9004      	str	r0, [sp, #16]
    b636:	9105      	str	r1, [sp, #20]
    b638:	f7ff fc08 	bl	ae4c <_strtod_l+0x694>
    b63c:	3301      	adds	r3, #1
    b63e:	d1a2      	bne.n	b586 <_strtod_l+0xdce>
    b640:	e522      	b.n	b088 <_strtod_l+0x8d0>
    b642:	46c0      	nop			; (mov r8, r8)
    b644:	7ff00000 	.word	0x7ff00000
    b648:	fff00000 	.word	0xfff00000
    b64c:	000fffff 	.word	0x000fffff

0000b650 <_strtod_r>:
    b650:	4b05      	ldr	r3, [pc, #20]	; (b668 <_strtod_r+0x18>)
    b652:	b510      	push	{r4, lr}
    b654:	681b      	ldr	r3, [r3, #0]
    b656:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    b658:	2b00      	cmp	r3, #0
    b65a:	d002      	beq.n	b662 <_strtod_r+0x12>
    b65c:	f7ff f8ac 	bl	a7b8 <_strtod_l>
    b660:	bd10      	pop	{r4, pc}
    b662:	4b02      	ldr	r3, [pc, #8]	; (b66c <_strtod_r+0x1c>)
    b664:	e7fa      	b.n	b65c <_strtod_r+0xc>
    b666:	46c0      	nop			; (mov r8, r8)
    b668:	20000090 	.word	0x20000090
    b66c:	200004c4 	.word	0x200004c4

0000b670 <_strtoll_l.isra.0>:
    b670:	b5f0      	push	{r4, r5, r6, r7, lr}
    b672:	46de      	mov	lr, fp
    b674:	4657      	mov	r7, sl
    b676:	464e      	mov	r6, r9
    b678:	4645      	mov	r5, r8
    b67a:	b5e0      	push	{r5, r6, r7, lr}
    b67c:	001f      	movs	r7, r3
    b67e:	2308      	movs	r3, #8
    b680:	b089      	sub	sp, #36	; 0x24
    b682:	9007      	str	r0, [sp, #28]
    b684:	9106      	str	r1, [sp, #24]
    b686:	4693      	mov	fp, r2
    b688:	000e      	movs	r6, r1
    b68a:	4698      	mov	r8, r3
    b68c:	e000      	b.n	b690 <_strtoll_l.isra.0+0x20>
    b68e:	002e      	movs	r6, r5
    b690:	9812      	ldr	r0, [sp, #72]	; 0x48
    b692:	7834      	ldrb	r4, [r6, #0]
    b694:	f7fd ff82 	bl	959c <__locale_ctype_ptr_l>
    b698:	4642      	mov	r2, r8
    b69a:	1900      	adds	r0, r0, r4
    b69c:	7843      	ldrb	r3, [r0, #1]
    b69e:	1c75      	adds	r5, r6, #1
    b6a0:	421a      	tst	r2, r3
    b6a2:	d1f4      	bne.n	b68e <_strtoll_l.isra.0+0x1e>
    b6a4:	2c2d      	cmp	r4, #45	; 0x2d
    b6a6:	d100      	bne.n	b6aa <_strtoll_l.isra.0+0x3a>
    b6a8:	e087      	b.n	b7ba <_strtoll_l.isra.0+0x14a>
    b6aa:	2300      	movs	r3, #0
    b6ac:	9303      	str	r3, [sp, #12]
    b6ae:	2c2b      	cmp	r4, #43	; 0x2b
    b6b0:	d100      	bne.n	b6b4 <_strtoll_l.isra.0+0x44>
    b6b2:	e094      	b.n	b7de <_strtoll_l.isra.0+0x16e>
    b6b4:	2f00      	cmp	r7, #0
    b6b6:	d00e      	beq.n	b6d6 <_strtoll_l.isra.0+0x66>
    b6b8:	2f10      	cmp	r7, #16
    b6ba:	d100      	bne.n	b6be <_strtoll_l.isra.0+0x4e>
    b6bc:	e092      	b.n	b7e4 <_strtoll_l.isra.0+0x174>
    b6be:	17fb      	asrs	r3, r7, #31
    b6c0:	4699      	mov	r9, r3
    b6c2:	9b03      	ldr	r3, [sp, #12]
    b6c4:	46ba      	mov	sl, r7
    b6c6:	2b00      	cmp	r3, #0
    b6c8:	d110      	bne.n	b6ec <_strtoll_l.isra.0+0x7c>
    b6ca:	2301      	movs	r3, #1
    b6cc:	425b      	negs	r3, r3
    b6ce:	9304      	str	r3, [sp, #16]
    b6d0:	4b55      	ldr	r3, [pc, #340]	; (b828 <_strtoll_l.isra.0+0x1b8>)
    b6d2:	9305      	str	r3, [sp, #20]
    b6d4:	e00f      	b.n	b6f6 <_strtoll_l.isra.0+0x86>
    b6d6:	2c30      	cmp	r4, #48	; 0x30
    b6d8:	d100      	bne.n	b6dc <_strtoll_l.isra.0+0x6c>
    b6da:	e092      	b.n	b802 <_strtoll_l.isra.0+0x192>
    b6dc:	230a      	movs	r3, #10
    b6de:	469a      	mov	sl, r3
    b6e0:	2300      	movs	r3, #0
    b6e2:	270a      	movs	r7, #10
    b6e4:	4699      	mov	r9, r3
    b6e6:	9b03      	ldr	r3, [sp, #12]
    b6e8:	2b00      	cmp	r3, #0
    b6ea:	d0ee      	beq.n	b6ca <_strtoll_l.isra.0+0x5a>
    b6ec:	2300      	movs	r3, #0
    b6ee:	9304      	str	r3, [sp, #16]
    b6f0:	2380      	movs	r3, #128	; 0x80
    b6f2:	061b      	lsls	r3, r3, #24
    b6f4:	9305      	str	r3, [sp, #20]
    b6f6:	9904      	ldr	r1, [sp, #16]
    b6f8:	9e05      	ldr	r6, [sp, #20]
    b6fa:	4688      	mov	r8, r1
    b6fc:	0008      	movs	r0, r1
    b6fe:	4652      	mov	r2, sl
    b700:	0031      	movs	r1, r6
    b702:	464b      	mov	r3, r9
    b704:	f7f8 f906 	bl	3914 <__aeabi_uldivmod>
    b708:	4640      	mov	r0, r8
    b70a:	9202      	str	r2, [sp, #8]
    b70c:	0031      	movs	r1, r6
    b70e:	4652      	mov	r2, sl
    b710:	464b      	mov	r3, r9
    b712:	f7f8 f8ff 	bl	3914 <__aeabi_uldivmod>
    b716:	2200      	movs	r2, #0
    b718:	4680      	mov	r8, r0
    b71a:	000e      	movs	r6, r1
    b71c:	2000      	movs	r0, #0
    b71e:	2100      	movs	r1, #0
    b720:	e019      	b.n	b756 <_strtoll_l.isra.0+0xe6>
    b722:	001c      	movs	r4, r3
    b724:	42a7      	cmp	r7, r4
    b726:	dd21      	ble.n	b76c <_strtoll_l.isra.0+0xfc>
    b728:	1c53      	adds	r3, r2, #1
    b72a:	d012      	beq.n	b752 <_strtoll_l.isra.0+0xe2>
    b72c:	42b1      	cmp	r1, r6
    b72e:	d83b      	bhi.n	b7a8 <_strtoll_l.isra.0+0x138>
    b730:	d101      	bne.n	b736 <_strtoll_l.isra.0+0xc6>
    b732:	4540      	cmp	r0, r8
    b734:	d838      	bhi.n	b7a8 <_strtoll_l.isra.0+0x138>
    b736:	4580      	cmp	r8, r0
    b738:	d031      	beq.n	b79e <_strtoll_l.isra.0+0x12e>
    b73a:	4652      	mov	r2, sl
    b73c:	464b      	mov	r3, r9
    b73e:	f7f8 f909 	bl	3954 <__aeabi_lmul>
    b742:	17e3      	asrs	r3, r4, #31
    b744:	9400      	str	r4, [sp, #0]
    b746:	9301      	str	r3, [sp, #4]
    b748:	9b00      	ldr	r3, [sp, #0]
    b74a:	9c01      	ldr	r4, [sp, #4]
    b74c:	2201      	movs	r2, #1
    b74e:	18c0      	adds	r0, r0, r3
    b750:	4161      	adcs	r1, r4
    b752:	782c      	ldrb	r4, [r5, #0]
    b754:	3501      	adds	r5, #1
    b756:	0023      	movs	r3, r4
    b758:	3b30      	subs	r3, #48	; 0x30
    b75a:	2b09      	cmp	r3, #9
    b75c:	d9e1      	bls.n	b722 <_strtoll_l.isra.0+0xb2>
    b75e:	0023      	movs	r3, r4
    b760:	3b41      	subs	r3, #65	; 0x41
    b762:	2b19      	cmp	r3, #25
    b764:	d823      	bhi.n	b7ae <_strtoll_l.isra.0+0x13e>
    b766:	3c37      	subs	r4, #55	; 0x37
    b768:	42a7      	cmp	r7, r4
    b76a:	dcdd      	bgt.n	b728 <_strtoll_l.isra.0+0xb8>
    b76c:	1c53      	adds	r3, r2, #1
    b76e:	d029      	beq.n	b7c4 <_strtoll_l.isra.0+0x154>
    b770:	9b03      	ldr	r3, [sp, #12]
    b772:	2b00      	cmp	r3, #0
    b774:	d004      	beq.n	b780 <_strtoll_l.isra.0+0x110>
    b776:	0003      	movs	r3, r0
    b778:	000c      	movs	r4, r1
    b77a:	2100      	movs	r1, #0
    b77c:	4258      	negs	r0, r3
    b77e:	41a1      	sbcs	r1, r4
    b780:	465b      	mov	r3, fp
    b782:	2b00      	cmp	r3, #0
    b784:	d004      	beq.n	b790 <_strtoll_l.isra.0+0x120>
    b786:	9b06      	ldr	r3, [sp, #24]
    b788:	2a00      	cmp	r2, #0
    b78a:	d125      	bne.n	b7d8 <_strtoll_l.isra.0+0x168>
    b78c:	465a      	mov	r2, fp
    b78e:	6013      	str	r3, [r2, #0]
    b790:	b009      	add	sp, #36	; 0x24
    b792:	bc3c      	pop	{r2, r3, r4, r5}
    b794:	4690      	mov	r8, r2
    b796:	4699      	mov	r9, r3
    b798:	46a2      	mov	sl, r4
    b79a:	46ab      	mov	fp, r5
    b79c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b79e:	428e      	cmp	r6, r1
    b7a0:	d1cb      	bne.n	b73a <_strtoll_l.isra.0+0xca>
    b7a2:	9b02      	ldr	r3, [sp, #8]
    b7a4:	42a3      	cmp	r3, r4
    b7a6:	dac8      	bge.n	b73a <_strtoll_l.isra.0+0xca>
    b7a8:	2201      	movs	r2, #1
    b7aa:	4252      	negs	r2, r2
    b7ac:	e7d1      	b.n	b752 <_strtoll_l.isra.0+0xe2>
    b7ae:	0023      	movs	r3, r4
    b7b0:	3b61      	subs	r3, #97	; 0x61
    b7b2:	2b19      	cmp	r3, #25
    b7b4:	d8da      	bhi.n	b76c <_strtoll_l.isra.0+0xfc>
    b7b6:	3c57      	subs	r4, #87	; 0x57
    b7b8:	e7b4      	b.n	b724 <_strtoll_l.isra.0+0xb4>
    b7ba:	2301      	movs	r3, #1
    b7bc:	782c      	ldrb	r4, [r5, #0]
    b7be:	9303      	str	r3, [sp, #12]
    b7c0:	1cb5      	adds	r5, r6, #2
    b7c2:	e777      	b.n	b6b4 <_strtoll_l.isra.0+0x44>
    b7c4:	2322      	movs	r3, #34	; 0x22
    b7c6:	9a07      	ldr	r2, [sp, #28]
    b7c8:	6013      	str	r3, [r2, #0]
    b7ca:	465b      	mov	r3, fp
    b7cc:	2b00      	cmp	r3, #0
    b7ce:	d028      	beq.n	b822 <_strtoll_l.isra.0+0x1b2>
    b7d0:	1e6b      	subs	r3, r5, #1
    b7d2:	9804      	ldr	r0, [sp, #16]
    b7d4:	9905      	ldr	r1, [sp, #20]
    b7d6:	e7d9      	b.n	b78c <_strtoll_l.isra.0+0x11c>
    b7d8:	9004      	str	r0, [sp, #16]
    b7da:	9105      	str	r1, [sp, #20]
    b7dc:	e7f8      	b.n	b7d0 <_strtoll_l.isra.0+0x160>
    b7de:	782c      	ldrb	r4, [r5, #0]
    b7e0:	1cb5      	adds	r5, r6, #2
    b7e2:	e767      	b.n	b6b4 <_strtoll_l.isra.0+0x44>
    b7e4:	2c30      	cmp	r4, #48	; 0x30
    b7e6:	d117      	bne.n	b818 <_strtoll_l.isra.0+0x1a8>
    b7e8:	2220      	movs	r2, #32
    b7ea:	782b      	ldrb	r3, [r5, #0]
    b7ec:	4393      	bics	r3, r2
    b7ee:	2b58      	cmp	r3, #88	; 0x58
    b7f0:	d112      	bne.n	b818 <_strtoll_l.isra.0+0x1a8>
    b7f2:	2310      	movs	r3, #16
    b7f4:	469a      	mov	sl, r3
    b7f6:	2300      	movs	r3, #0
    b7f8:	786c      	ldrb	r4, [r5, #1]
    b7fa:	4699      	mov	r9, r3
    b7fc:	3502      	adds	r5, #2
    b7fe:	2710      	movs	r7, #16
    b800:	e771      	b.n	b6e6 <_strtoll_l.isra.0+0x76>
    b802:	2220      	movs	r2, #32
    b804:	782b      	ldrb	r3, [r5, #0]
    b806:	4393      	bics	r3, r2
    b808:	2b58      	cmp	r3, #88	; 0x58
    b80a:	d0f2      	beq.n	b7f2 <_strtoll_l.isra.0+0x182>
    b80c:	2308      	movs	r3, #8
    b80e:	469a      	mov	sl, r3
    b810:	2300      	movs	r3, #0
    b812:	2708      	movs	r7, #8
    b814:	4699      	mov	r9, r3
    b816:	e766      	b.n	b6e6 <_strtoll_l.isra.0+0x76>
    b818:	2310      	movs	r3, #16
    b81a:	469a      	mov	sl, r3
    b81c:	2300      	movs	r3, #0
    b81e:	4699      	mov	r9, r3
    b820:	e761      	b.n	b6e6 <_strtoll_l.isra.0+0x76>
    b822:	9804      	ldr	r0, [sp, #16]
    b824:	9905      	ldr	r1, [sp, #20]
    b826:	e7b3      	b.n	b790 <_strtoll_l.isra.0+0x120>
    b828:	7fffffff 	.word	0x7fffffff

0000b82c <_strtoll_r>:
    b82c:	b510      	push	{r4, lr}
    b82e:	4c06      	ldr	r4, [pc, #24]	; (b848 <_strtoll_r+0x1c>)
    b830:	b082      	sub	sp, #8
    b832:	6824      	ldr	r4, [r4, #0]
    b834:	6b64      	ldr	r4, [r4, #52]	; 0x34
    b836:	2c00      	cmp	r4, #0
    b838:	d004      	beq.n	b844 <_strtoll_r+0x18>
    b83a:	9400      	str	r4, [sp, #0]
    b83c:	f7ff ff18 	bl	b670 <_strtoll_l.isra.0>
    b840:	b002      	add	sp, #8
    b842:	bd10      	pop	{r4, pc}
    b844:	4c01      	ldr	r4, [pc, #4]	; (b84c <_strtoll_r+0x20>)
    b846:	e7f8      	b.n	b83a <_strtoll_r+0xe>
    b848:	20000090 	.word	0x20000090
    b84c:	200004c4 	.word	0x200004c4

0000b850 <_strtoul_l.isra.0>:
    b850:	b5f0      	push	{r4, r5, r6, r7, lr}
    b852:	4657      	mov	r7, sl
    b854:	464e      	mov	r6, r9
    b856:	46de      	mov	lr, fp
    b858:	4645      	mov	r5, r8
    b85a:	b5e0      	push	{r5, r6, r7, lr}
    b85c:	001e      	movs	r6, r3
    b85e:	2308      	movs	r3, #8
    b860:	b083      	sub	sp, #12
    b862:	4683      	mov	fp, r0
    b864:	4689      	mov	r9, r1
    b866:	4692      	mov	sl, r2
    b868:	000f      	movs	r7, r1
    b86a:	4698      	mov	r8, r3
    b86c:	e000      	b.n	b870 <_strtoul_l.isra.0+0x20>
    b86e:	002f      	movs	r7, r5
    b870:	980c      	ldr	r0, [sp, #48]	; 0x30
    b872:	783c      	ldrb	r4, [r7, #0]
    b874:	f7fd fe92 	bl	959c <__locale_ctype_ptr_l>
    b878:	4642      	mov	r2, r8
    b87a:	1900      	adds	r0, r0, r4
    b87c:	7843      	ldrb	r3, [r0, #1]
    b87e:	1c7d      	adds	r5, r7, #1
    b880:	421a      	tst	r2, r3
    b882:	d1f4      	bne.n	b86e <_strtoul_l.isra.0+0x1e>
    b884:	2c2d      	cmp	r4, #45	; 0x2d
    b886:	d05b      	beq.n	b940 <_strtoul_l.isra.0+0xf0>
    b888:	2300      	movs	r3, #0
    b88a:	9301      	str	r3, [sp, #4]
    b88c:	2c2b      	cmp	r4, #43	; 0x2b
    b88e:	d05c      	beq.n	b94a <_strtoul_l.isra.0+0xfa>
    b890:	2e00      	cmp	r6, #0
    b892:	d00e      	beq.n	b8b2 <_strtoul_l.isra.0+0x62>
    b894:	2e10      	cmp	r6, #16
    b896:	d05b      	beq.n	b950 <_strtoul_l.isra.0+0x100>
    b898:	2001      	movs	r0, #1
    b89a:	0031      	movs	r1, r6
    b89c:	4240      	negs	r0, r0
    b89e:	f7f7 fec3 	bl	3628 <__udivsi3>
    b8a2:	0007      	movs	r7, r0
    b8a4:	2001      	movs	r0, #1
    b8a6:	0031      	movs	r1, r6
    b8a8:	4240      	negs	r0, r0
    b8aa:	46b0      	mov	r8, r6
    b8ac:	f7f7 ff42 	bl	3734 <__aeabi_uidivmod>
    b8b0:	e006      	b.n	b8c0 <_strtoul_l.isra.0+0x70>
    b8b2:	2c30      	cmp	r4, #48	; 0x30
    b8b4:	d05b      	beq.n	b96e <_strtoul_l.isra.0+0x11e>
    b8b6:	230a      	movs	r3, #10
    b8b8:	2105      	movs	r1, #5
    b8ba:	4698      	mov	r8, r3
    b8bc:	260a      	movs	r6, #10
    b8be:	4f34      	ldr	r7, [pc, #208]	; (b990 <_strtoul_l.isra.0+0x140>)
    b8c0:	2200      	movs	r2, #0
    b8c2:	2000      	movs	r0, #0
    b8c4:	0023      	movs	r3, r4
    b8c6:	3b30      	subs	r3, #48	; 0x30
    b8c8:	2b09      	cmp	r3, #9
    b8ca:	d907      	bls.n	b8dc <_strtoul_l.isra.0+0x8c>
    b8cc:	3b11      	subs	r3, #17
    b8ce:	2b19      	cmp	r3, #25
    b8d0:	d903      	bls.n	b8da <_strtoul_l.isra.0+0x8a>
    b8d2:	0023      	movs	r3, r4
    b8d4:	3b61      	subs	r3, #97	; 0x61
    b8d6:	2b19      	cmp	r3, #25
    b8d8:	d80e      	bhi.n	b8f8 <_strtoul_l.isra.0+0xa8>
    b8da:	330a      	adds	r3, #10
    b8dc:	429e      	cmp	r6, r3
    b8de:	dd0b      	ble.n	b8f8 <_strtoul_l.isra.0+0xa8>
    b8e0:	2a00      	cmp	r2, #0
    b8e2:	db20      	blt.n	b926 <_strtoul_l.isra.0+0xd6>
    b8e4:	42b8      	cmp	r0, r7
    b8e6:	d81e      	bhi.n	b926 <_strtoul_l.isra.0+0xd6>
    b8e8:	d01b      	beq.n	b922 <_strtoul_l.isra.0+0xd2>
    b8ea:	4642      	mov	r2, r8
    b8ec:	4350      	muls	r0, r2
    b8ee:	2201      	movs	r2, #1
    b8f0:	1818      	adds	r0, r3, r0
    b8f2:	782c      	ldrb	r4, [r5, #0]
    b8f4:	3501      	adds	r5, #1
    b8f6:	e7e5      	b.n	b8c4 <_strtoul_l.isra.0+0x74>
    b8f8:	2a00      	cmp	r2, #0
    b8fa:	db17      	blt.n	b92c <_strtoul_l.isra.0+0xdc>
    b8fc:	9b01      	ldr	r3, [sp, #4]
    b8fe:	2b00      	cmp	r3, #0
    b900:	d000      	beq.n	b904 <_strtoul_l.isra.0+0xb4>
    b902:	4240      	negs	r0, r0
    b904:	4653      	mov	r3, sl
    b906:	2b00      	cmp	r3, #0
    b908:	d004      	beq.n	b914 <_strtoul_l.isra.0+0xc4>
    b90a:	464b      	mov	r3, r9
    b90c:	2a00      	cmp	r2, #0
    b90e:	d115      	bne.n	b93c <_strtoul_l.isra.0+0xec>
    b910:	4652      	mov	r2, sl
    b912:	6013      	str	r3, [r2, #0]
    b914:	b003      	add	sp, #12
    b916:	bc3c      	pop	{r2, r3, r4, r5}
    b918:	4690      	mov	r8, r2
    b91a:	4699      	mov	r9, r3
    b91c:	46a2      	mov	sl, r4
    b91e:	46ab      	mov	fp, r5
    b920:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b922:	428b      	cmp	r3, r1
    b924:	dde1      	ble.n	b8ea <_strtoul_l.isra.0+0x9a>
    b926:	2201      	movs	r2, #1
    b928:	4252      	negs	r2, r2
    b92a:	e7e2      	b.n	b8f2 <_strtoul_l.isra.0+0xa2>
    b92c:	2322      	movs	r3, #34	; 0x22
    b92e:	465a      	mov	r2, fp
    b930:	2001      	movs	r0, #1
    b932:	6013      	str	r3, [r2, #0]
    b934:	4653      	mov	r3, sl
    b936:	4240      	negs	r0, r0
    b938:	2b00      	cmp	r3, #0
    b93a:	d0eb      	beq.n	b914 <_strtoul_l.isra.0+0xc4>
    b93c:	1e6b      	subs	r3, r5, #1
    b93e:	e7e7      	b.n	b910 <_strtoul_l.isra.0+0xc0>
    b940:	2301      	movs	r3, #1
    b942:	782c      	ldrb	r4, [r5, #0]
    b944:	9301      	str	r3, [sp, #4]
    b946:	1cbd      	adds	r5, r7, #2
    b948:	e7a2      	b.n	b890 <_strtoul_l.isra.0+0x40>
    b94a:	782c      	ldrb	r4, [r5, #0]
    b94c:	1cbd      	adds	r5, r7, #2
    b94e:	e79f      	b.n	b890 <_strtoul_l.isra.0+0x40>
    b950:	2c30      	cmp	r4, #48	; 0x30
    b952:	d117      	bne.n	b984 <_strtoul_l.isra.0+0x134>
    b954:	2220      	movs	r2, #32
    b956:	782b      	ldrb	r3, [r5, #0]
    b958:	4393      	bics	r3, r2
    b95a:	2b58      	cmp	r3, #88	; 0x58
    b95c:	d112      	bne.n	b984 <_strtoul_l.isra.0+0x134>
    b95e:	2310      	movs	r3, #16
    b960:	786c      	ldrb	r4, [r5, #1]
    b962:	210f      	movs	r1, #15
    b964:	3502      	adds	r5, #2
    b966:	4f0b      	ldr	r7, [pc, #44]	; (b994 <_strtoul_l.isra.0+0x144>)
    b968:	4698      	mov	r8, r3
    b96a:	2610      	movs	r6, #16
    b96c:	e7a8      	b.n	b8c0 <_strtoul_l.isra.0+0x70>
    b96e:	2220      	movs	r2, #32
    b970:	782b      	ldrb	r3, [r5, #0]
    b972:	4393      	bics	r3, r2
    b974:	2b58      	cmp	r3, #88	; 0x58
    b976:	d0f2      	beq.n	b95e <_strtoul_l.isra.0+0x10e>
    b978:	2308      	movs	r3, #8
    b97a:	2107      	movs	r1, #7
    b97c:	4f06      	ldr	r7, [pc, #24]	; (b998 <_strtoul_l.isra.0+0x148>)
    b97e:	4698      	mov	r8, r3
    b980:	2608      	movs	r6, #8
    b982:	e79d      	b.n	b8c0 <_strtoul_l.isra.0+0x70>
    b984:	2310      	movs	r3, #16
    b986:	210f      	movs	r1, #15
    b988:	4f02      	ldr	r7, [pc, #8]	; (b994 <_strtoul_l.isra.0+0x144>)
    b98a:	4698      	mov	r8, r3
    b98c:	e798      	b.n	b8c0 <_strtoul_l.isra.0+0x70>
    b98e:	46c0      	nop			; (mov r8, r8)
    b990:	19999999 	.word	0x19999999
    b994:	0fffffff 	.word	0x0fffffff
    b998:	1fffffff 	.word	0x1fffffff

0000b99c <_strtoul_r>:
    b99c:	b510      	push	{r4, lr}
    b99e:	4c06      	ldr	r4, [pc, #24]	; (b9b8 <_strtoul_r+0x1c>)
    b9a0:	b082      	sub	sp, #8
    b9a2:	6824      	ldr	r4, [r4, #0]
    b9a4:	6b64      	ldr	r4, [r4, #52]	; 0x34
    b9a6:	2c00      	cmp	r4, #0
    b9a8:	d004      	beq.n	b9b4 <_strtoul_r+0x18>
    b9aa:	9400      	str	r4, [sp, #0]
    b9ac:	f7ff ff50 	bl	b850 <_strtoul_l.isra.0>
    b9b0:	b002      	add	sp, #8
    b9b2:	bd10      	pop	{r4, pc}
    b9b4:	4c01      	ldr	r4, [pc, #4]	; (b9bc <_strtoul_r+0x20>)
    b9b6:	e7f8      	b.n	b9aa <_strtoul_r+0xe>
    b9b8:	20000090 	.word	0x20000090
    b9bc:	200004c4 	.word	0x200004c4

0000b9c0 <_strtoull_l.isra.0>:
    b9c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    b9c2:	46de      	mov	lr, fp
    b9c4:	4657      	mov	r7, sl
    b9c6:	464e      	mov	r6, r9
    b9c8:	4645      	mov	r5, r8
    b9ca:	b5e0      	push	{r5, r6, r7, lr}
    b9cc:	001e      	movs	r6, r3
    b9ce:	2308      	movs	r3, #8
    b9d0:	b087      	sub	sp, #28
    b9d2:	9005      	str	r0, [sp, #20]
    b9d4:	9104      	str	r1, [sp, #16]
    b9d6:	4693      	mov	fp, r2
    b9d8:	000f      	movs	r7, r1
    b9da:	4698      	mov	r8, r3
    b9dc:	e000      	b.n	b9e0 <_strtoull_l.isra.0+0x20>
    b9de:	002f      	movs	r7, r5
    b9e0:	9810      	ldr	r0, [sp, #64]	; 0x40
    b9e2:	783c      	ldrb	r4, [r7, #0]
    b9e4:	f7fd fdda 	bl	959c <__locale_ctype_ptr_l>
    b9e8:	4642      	mov	r2, r8
    b9ea:	1900      	adds	r0, r0, r4
    b9ec:	7843      	ldrb	r3, [r0, #1]
    b9ee:	1c7d      	adds	r5, r7, #1
    b9f0:	421a      	tst	r2, r3
    b9f2:	d1f4      	bne.n	b9de <_strtoull_l.isra.0+0x1e>
    b9f4:	2c2d      	cmp	r4, #45	; 0x2d
    b9f6:	d100      	bne.n	b9fa <_strtoull_l.isra.0+0x3a>
    b9f8:	e085      	b.n	bb06 <_strtoull_l.isra.0+0x146>
    b9fa:	2300      	movs	r3, #0
    b9fc:	9303      	str	r3, [sp, #12]
    b9fe:	2c2b      	cmp	r4, #43	; 0x2b
    ba00:	d100      	bne.n	ba04 <_strtoull_l.isra.0+0x44>
    ba02:	e085      	b.n	bb10 <_strtoull_l.isra.0+0x150>
    ba04:	2e00      	cmp	r6, #0
    ba06:	d016      	beq.n	ba36 <_strtoull_l.isra.0+0x76>
    ba08:	2e10      	cmp	r6, #16
    ba0a:	d100      	bne.n	ba0e <_strtoull_l.isra.0+0x4e>
    ba0c:	e083      	b.n	bb16 <_strtoull_l.isra.0+0x156>
    ba0e:	17f3      	asrs	r3, r6, #31
    ba10:	0032      	movs	r2, r6
    ba12:	2001      	movs	r0, #1
    ba14:	4240      	negs	r0, r0
    ba16:	17c1      	asrs	r1, r0, #31
    ba18:	4699      	mov	r9, r3
    ba1a:	f7f7 ff7b 	bl	3914 <__aeabi_uldivmod>
    ba1e:	0032      	movs	r2, r6
    ba20:	4680      	mov	r8, r0
    ba22:	000f      	movs	r7, r1
    ba24:	464b      	mov	r3, r9
    ba26:	2001      	movs	r0, #1
    ba28:	4240      	negs	r0, r0
    ba2a:	17c1      	asrs	r1, r0, #31
    ba2c:	f7f7 ff72 	bl	3914 <__aeabi_uldivmod>
    ba30:	46b2      	mov	sl, r6
    ba32:	9202      	str	r2, [sp, #8]
    ba34:	e00c      	b.n	ba50 <_strtoull_l.isra.0+0x90>
    ba36:	2c30      	cmp	r4, #48	; 0x30
    ba38:	d100      	bne.n	ba3c <_strtoull_l.isra.0+0x7c>
    ba3a:	e080      	b.n	bb3e <_strtoull_l.isra.0+0x17e>
    ba3c:	2305      	movs	r3, #5
    ba3e:	9302      	str	r3, [sp, #8]
    ba40:	4b4c      	ldr	r3, [pc, #304]	; (bb74 <_strtoull_l.isra.0+0x1b4>)
    ba42:	260a      	movs	r6, #10
    ba44:	4698      	mov	r8, r3
    ba46:	230a      	movs	r3, #10
    ba48:	469a      	mov	sl, r3
    ba4a:	2300      	movs	r3, #0
    ba4c:	4699      	mov	r9, r3
    ba4e:	4f4a      	ldr	r7, [pc, #296]	; (bb78 <_strtoull_l.isra.0+0x1b8>)
    ba50:	2200      	movs	r2, #0
    ba52:	2000      	movs	r0, #0
    ba54:	2100      	movs	r1, #0
    ba56:	e019      	b.n	ba8c <_strtoull_l.isra.0+0xcc>
    ba58:	001c      	movs	r4, r3
    ba5a:	42a6      	cmp	r6, r4
    ba5c:	dd21      	ble.n	baa2 <_strtoull_l.isra.0+0xe2>
    ba5e:	2a00      	cmp	r2, #0
    ba60:	db3d      	blt.n	bade <_strtoull_l.isra.0+0x11e>
    ba62:	42b9      	cmp	r1, r7
    ba64:	d83b      	bhi.n	bade <_strtoull_l.isra.0+0x11e>
    ba66:	d101      	bne.n	ba6c <_strtoull_l.isra.0+0xac>
    ba68:	4540      	cmp	r0, r8
    ba6a:	d838      	bhi.n	bade <_strtoull_l.isra.0+0x11e>
    ba6c:	4540      	cmp	r0, r8
    ba6e:	d031      	beq.n	bad4 <_strtoull_l.isra.0+0x114>
    ba70:	4652      	mov	r2, sl
    ba72:	464b      	mov	r3, r9
    ba74:	f7f7 ff6e 	bl	3954 <__aeabi_lmul>
    ba78:	17e3      	asrs	r3, r4, #31
    ba7a:	9400      	str	r4, [sp, #0]
    ba7c:	9301      	str	r3, [sp, #4]
    ba7e:	9b00      	ldr	r3, [sp, #0]
    ba80:	9c01      	ldr	r4, [sp, #4]
    ba82:	2201      	movs	r2, #1
    ba84:	18c0      	adds	r0, r0, r3
    ba86:	4161      	adcs	r1, r4
    ba88:	782c      	ldrb	r4, [r5, #0]
    ba8a:	3501      	adds	r5, #1
    ba8c:	0023      	movs	r3, r4
    ba8e:	3b30      	subs	r3, #48	; 0x30
    ba90:	2b09      	cmp	r3, #9
    ba92:	d9e1      	bls.n	ba58 <_strtoull_l.isra.0+0x98>
    ba94:	0023      	movs	r3, r4
    ba96:	3b41      	subs	r3, #65	; 0x41
    ba98:	2b19      	cmp	r3, #25
    ba9a:	d823      	bhi.n	bae4 <_strtoull_l.isra.0+0x124>
    ba9c:	3c37      	subs	r4, #55	; 0x37
    ba9e:	42a6      	cmp	r6, r4
    baa0:	dcdd      	bgt.n	ba5e <_strtoull_l.isra.0+0x9e>
    baa2:	2a00      	cmp	r2, #0
    baa4:	db24      	blt.n	baf0 <_strtoull_l.isra.0+0x130>
    baa6:	9b03      	ldr	r3, [sp, #12]
    baa8:	2b00      	cmp	r3, #0
    baaa:	d004      	beq.n	bab6 <_strtoull_l.isra.0+0xf6>
    baac:	0003      	movs	r3, r0
    baae:	000c      	movs	r4, r1
    bab0:	2100      	movs	r1, #0
    bab2:	4258      	negs	r0, r3
    bab4:	41a1      	sbcs	r1, r4
    bab6:	465b      	mov	r3, fp
    bab8:	2b00      	cmp	r3, #0
    baba:	d004      	beq.n	bac6 <_strtoull_l.isra.0+0x106>
    babc:	9b04      	ldr	r3, [sp, #16]
    babe:	2a00      	cmp	r2, #0
    bac0:	d11f      	bne.n	bb02 <_strtoull_l.isra.0+0x142>
    bac2:	465a      	mov	r2, fp
    bac4:	6013      	str	r3, [r2, #0]
    bac6:	b007      	add	sp, #28
    bac8:	bc3c      	pop	{r2, r3, r4, r5}
    baca:	4690      	mov	r8, r2
    bacc:	4699      	mov	r9, r3
    bace:	46a2      	mov	sl, r4
    bad0:	46ab      	mov	fp, r5
    bad2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bad4:	42b9      	cmp	r1, r7
    bad6:	d1cb      	bne.n	ba70 <_strtoull_l.isra.0+0xb0>
    bad8:	9b02      	ldr	r3, [sp, #8]
    bada:	429c      	cmp	r4, r3
    badc:	ddc8      	ble.n	ba70 <_strtoull_l.isra.0+0xb0>
    bade:	2201      	movs	r2, #1
    bae0:	4252      	negs	r2, r2
    bae2:	e7d1      	b.n	ba88 <_strtoull_l.isra.0+0xc8>
    bae4:	0023      	movs	r3, r4
    bae6:	3b61      	subs	r3, #97	; 0x61
    bae8:	2b19      	cmp	r3, #25
    baea:	d8da      	bhi.n	baa2 <_strtoull_l.isra.0+0xe2>
    baec:	3c57      	subs	r4, #87	; 0x57
    baee:	e7b4      	b.n	ba5a <_strtoull_l.isra.0+0x9a>
    baf0:	2322      	movs	r3, #34	; 0x22
    baf2:	9a05      	ldr	r2, [sp, #20]
    baf4:	2001      	movs	r0, #1
    baf6:	4240      	negs	r0, r0
    baf8:	17c1      	asrs	r1, r0, #31
    bafa:	6013      	str	r3, [r2, #0]
    bafc:	465b      	mov	r3, fp
    bafe:	2b00      	cmp	r3, #0
    bb00:	d0e1      	beq.n	bac6 <_strtoull_l.isra.0+0x106>
    bb02:	1e6b      	subs	r3, r5, #1
    bb04:	e7dd      	b.n	bac2 <_strtoull_l.isra.0+0x102>
    bb06:	2301      	movs	r3, #1
    bb08:	782c      	ldrb	r4, [r5, #0]
    bb0a:	9303      	str	r3, [sp, #12]
    bb0c:	1cbd      	adds	r5, r7, #2
    bb0e:	e779      	b.n	ba04 <_strtoull_l.isra.0+0x44>
    bb10:	782c      	ldrb	r4, [r5, #0]
    bb12:	1cbd      	adds	r5, r7, #2
    bb14:	e776      	b.n	ba04 <_strtoull_l.isra.0+0x44>
    bb16:	2c30      	cmp	r4, #48	; 0x30
    bb18:	d121      	bne.n	bb5e <_strtoull_l.isra.0+0x19e>
    bb1a:	2220      	movs	r2, #32
    bb1c:	782b      	ldrb	r3, [r5, #0]
    bb1e:	4393      	bics	r3, r2
    bb20:	2b58      	cmp	r3, #88	; 0x58
    bb22:	d11c      	bne.n	bb5e <_strtoull_l.isra.0+0x19e>
    bb24:	230f      	movs	r3, #15
    bb26:	9302      	str	r3, [sp, #8]
    bb28:	3b10      	subs	r3, #16
    bb2a:	4698      	mov	r8, r3
    bb2c:	3311      	adds	r3, #17
    bb2e:	469a      	mov	sl, r3
    bb30:	2300      	movs	r3, #0
    bb32:	786c      	ldrb	r4, [r5, #1]
    bb34:	4f11      	ldr	r7, [pc, #68]	; (bb7c <_strtoull_l.isra.0+0x1bc>)
    bb36:	3502      	adds	r5, #2
    bb38:	4699      	mov	r9, r3
    bb3a:	2610      	movs	r6, #16
    bb3c:	e788      	b.n	ba50 <_strtoull_l.isra.0+0x90>
    bb3e:	2220      	movs	r2, #32
    bb40:	782b      	ldrb	r3, [r5, #0]
    bb42:	4393      	bics	r3, r2
    bb44:	2b58      	cmp	r3, #88	; 0x58
    bb46:	d0ed      	beq.n	bb24 <_strtoull_l.isra.0+0x164>
    bb48:	2307      	movs	r3, #7
    bb4a:	9302      	str	r3, [sp, #8]
    bb4c:	3b08      	subs	r3, #8
    bb4e:	4698      	mov	r8, r3
    bb50:	3309      	adds	r3, #9
    bb52:	469a      	mov	sl, r3
    bb54:	2300      	movs	r3, #0
    bb56:	4f0a      	ldr	r7, [pc, #40]	; (bb80 <_strtoull_l.isra.0+0x1c0>)
    bb58:	4699      	mov	r9, r3
    bb5a:	2608      	movs	r6, #8
    bb5c:	e778      	b.n	ba50 <_strtoull_l.isra.0+0x90>
    bb5e:	230f      	movs	r3, #15
    bb60:	9302      	str	r3, [sp, #8]
    bb62:	3b10      	subs	r3, #16
    bb64:	4698      	mov	r8, r3
    bb66:	3311      	adds	r3, #17
    bb68:	469a      	mov	sl, r3
    bb6a:	2300      	movs	r3, #0
    bb6c:	4f03      	ldr	r7, [pc, #12]	; (bb7c <_strtoull_l.isra.0+0x1bc>)
    bb6e:	4699      	mov	r9, r3
    bb70:	e76e      	b.n	ba50 <_strtoull_l.isra.0+0x90>
    bb72:	46c0      	nop			; (mov r8, r8)
    bb74:	99999999 	.word	0x99999999
    bb78:	19999999 	.word	0x19999999
    bb7c:	0fffffff 	.word	0x0fffffff
    bb80:	1fffffff 	.word	0x1fffffff

0000bb84 <_strtoull_r>:
    bb84:	b510      	push	{r4, lr}
    bb86:	4c06      	ldr	r4, [pc, #24]	; (bba0 <_strtoull_r+0x1c>)
    bb88:	b082      	sub	sp, #8
    bb8a:	6824      	ldr	r4, [r4, #0]
    bb8c:	6b64      	ldr	r4, [r4, #52]	; 0x34
    bb8e:	2c00      	cmp	r4, #0
    bb90:	d004      	beq.n	bb9c <_strtoull_r+0x18>
    bb92:	9400      	str	r4, [sp, #0]
    bb94:	f7ff ff14 	bl	b9c0 <_strtoull_l.isra.0>
    bb98:	b002      	add	sp, #8
    bb9a:	bd10      	pop	{r4, pc}
    bb9c:	4c01      	ldr	r4, [pc, #4]	; (bba4 <_strtoull_r+0x20>)
    bb9e:	e7f8      	b.n	bb92 <_strtoull_r+0xe>
    bba0:	20000090 	.word	0x20000090
    bba4:	200004c4 	.word	0x200004c4

0000bba8 <__ssprint_r>:
    bba8:	b5f0      	push	{r4, r5, r6, r7, lr}
    bbaa:	4657      	mov	r7, sl
    bbac:	464e      	mov	r6, r9
    bbae:	46de      	mov	lr, fp
    bbb0:	4645      	mov	r5, r8
    bbb2:	b5e0      	push	{r5, r6, r7, lr}
    bbb4:	6893      	ldr	r3, [r2, #8]
    bbb6:	b083      	sub	sp, #12
    bbb8:	9001      	str	r0, [sp, #4]
    bbba:	000e      	movs	r6, r1
    bbbc:	4692      	mov	sl, r2
    bbbe:	2b00      	cmp	r3, #0
    bbc0:	d070      	beq.n	bca4 <__ssprint_r+0xfc>
    bbc2:	688d      	ldr	r5, [r1, #8]
    bbc4:	6813      	ldr	r3, [r2, #0]
    bbc6:	002c      	movs	r4, r5
    bbc8:	6808      	ldr	r0, [r1, #0]
    bbca:	001d      	movs	r5, r3
    bbcc:	e046      	b.n	bc5c <__ssprint_r+0xb4>
    bbce:	2290      	movs	r2, #144	; 0x90
    bbd0:	89b3      	ldrh	r3, [r6, #12]
    bbd2:	00d2      	lsls	r2, r2, #3
    bbd4:	4213      	tst	r3, r2
    bbd6:	d030      	beq.n	bc3a <__ssprint_r+0x92>
    bbd8:	6931      	ldr	r1, [r6, #16]
    bbda:	1a42      	subs	r2, r0, r1
    bbdc:	4693      	mov	fp, r2
    bbde:	6970      	ldr	r0, [r6, #20]
    bbe0:	0042      	lsls	r2, r0, #1
    bbe2:	1812      	adds	r2, r2, r0
    bbe4:	0fd0      	lsrs	r0, r2, #31
    bbe6:	1882      	adds	r2, r0, r2
    bbe8:	1052      	asrs	r2, r2, #1
    bbea:	4690      	mov	r8, r2
    bbec:	465a      	mov	r2, fp
    bbee:	1c50      	adds	r0, r2, #1
    bbf0:	19c0      	adds	r0, r0, r7
    bbf2:	4642      	mov	r2, r8
    bbf4:	4540      	cmp	r0, r8
    bbf6:	d901      	bls.n	bbfc <__ssprint_r+0x54>
    bbf8:	4680      	mov	r8, r0
    bbfa:	0002      	movs	r2, r0
    bbfc:	2080      	movs	r0, #128	; 0x80
    bbfe:	00c0      	lsls	r0, r0, #3
    bc00:	4203      	tst	r3, r0
    bc02:	d038      	beq.n	bc76 <__ssprint_r+0xce>
    bc04:	0011      	movs	r1, r2
    bc06:	9801      	ldr	r0, [sp, #4]
    bc08:	f7fd fcee 	bl	95e8 <_malloc_r>
    bc0c:	1e04      	subs	r4, r0, #0
    bc0e:	d054      	beq.n	bcba <__ssprint_r+0x112>
    bc10:	465a      	mov	r2, fp
    bc12:	6931      	ldr	r1, [r6, #16]
    bc14:	f7fe f84a 	bl	9cac <memcpy>
    bc18:	89b3      	ldrh	r3, [r6, #12]
    bc1a:	4a2a      	ldr	r2, [pc, #168]	; (bcc4 <__ssprint_r+0x11c>)
    bc1c:	4013      	ands	r3, r2
    bc1e:	2280      	movs	r2, #128	; 0x80
    bc20:	4313      	orrs	r3, r2
    bc22:	81b3      	strh	r3, [r6, #12]
    bc24:	4643      	mov	r3, r8
    bc26:	0020      	movs	r0, r4
    bc28:	465a      	mov	r2, fp
    bc2a:	6134      	str	r4, [r6, #16]
    bc2c:	46b8      	mov	r8, r7
    bc2e:	003c      	movs	r4, r7
    bc30:	4458      	add	r0, fp
    bc32:	6173      	str	r3, [r6, #20]
    bc34:	1a9b      	subs	r3, r3, r2
    bc36:	6030      	str	r0, [r6, #0]
    bc38:	60b3      	str	r3, [r6, #8]
    bc3a:	4642      	mov	r2, r8
    bc3c:	4649      	mov	r1, r9
    bc3e:	f000 fdb7 	bl	c7b0 <memmove>
    bc42:	68b3      	ldr	r3, [r6, #8]
    bc44:	1b1c      	subs	r4, r3, r4
    bc46:	6833      	ldr	r3, [r6, #0]
    bc48:	60b4      	str	r4, [r6, #8]
    bc4a:	4443      	add	r3, r8
    bc4c:	6033      	str	r3, [r6, #0]
    bc4e:	0018      	movs	r0, r3
    bc50:	4653      	mov	r3, sl
    bc52:	689b      	ldr	r3, [r3, #8]
    bc54:	1bdf      	subs	r7, r3, r7
    bc56:	4653      	mov	r3, sl
    bc58:	609f      	str	r7, [r3, #8]
    bc5a:	d023      	beq.n	bca4 <__ssprint_r+0xfc>
    bc5c:	686f      	ldr	r7, [r5, #4]
    bc5e:	002b      	movs	r3, r5
    bc60:	3508      	adds	r5, #8
    bc62:	2f00      	cmp	r7, #0
    bc64:	d0fa      	beq.n	bc5c <__ssprint_r+0xb4>
    bc66:	681b      	ldr	r3, [r3, #0]
    bc68:	46a0      	mov	r8, r4
    bc6a:	4699      	mov	r9, r3
    bc6c:	42a7      	cmp	r7, r4
    bc6e:	d2ae      	bcs.n	bbce <__ssprint_r+0x26>
    bc70:	003c      	movs	r4, r7
    bc72:	46b8      	mov	r8, r7
    bc74:	e7e1      	b.n	bc3a <__ssprint_r+0x92>
    bc76:	9801      	ldr	r0, [sp, #4]
    bc78:	f000 fdea 	bl	c850 <_realloc_r>
    bc7c:	1e04      	subs	r4, r0, #0
    bc7e:	d1d1      	bne.n	bc24 <__ssprint_r+0x7c>
    bc80:	9c01      	ldr	r4, [sp, #4]
    bc82:	6931      	ldr	r1, [r6, #16]
    bc84:	0020      	movs	r0, r4
    bc86:	f7fd fb8f 	bl	93a8 <_free_r>
    bc8a:	230c      	movs	r3, #12
    bc8c:	6023      	str	r3, [r4, #0]
    bc8e:	2240      	movs	r2, #64	; 0x40
    bc90:	89b3      	ldrh	r3, [r6, #12]
    bc92:	2001      	movs	r0, #1
    bc94:	4313      	orrs	r3, r2
    bc96:	81b3      	strh	r3, [r6, #12]
    bc98:	4652      	mov	r2, sl
    bc9a:	2300      	movs	r3, #0
    bc9c:	4240      	negs	r0, r0
    bc9e:	6093      	str	r3, [r2, #8]
    bca0:	6053      	str	r3, [r2, #4]
    bca2:	e003      	b.n	bcac <__ssprint_r+0x104>
    bca4:	2300      	movs	r3, #0
    bca6:	4652      	mov	r2, sl
    bca8:	2000      	movs	r0, #0
    bcaa:	6053      	str	r3, [r2, #4]
    bcac:	b003      	add	sp, #12
    bcae:	bc3c      	pop	{r2, r3, r4, r5}
    bcb0:	4690      	mov	r8, r2
    bcb2:	4699      	mov	r9, r3
    bcb4:	46a2      	mov	sl, r4
    bcb6:	46ab      	mov	fp, r5
    bcb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bcba:	230c      	movs	r3, #12
    bcbc:	9a01      	ldr	r2, [sp, #4]
    bcbe:	6013      	str	r3, [r2, #0]
    bcc0:	e7e5      	b.n	bc8e <__ssprint_r+0xe6>
    bcc2:	46c0      	nop			; (mov r8, r8)
    bcc4:	fffffb7f 	.word	0xfffffb7f

0000bcc8 <_sungetc_r>:
    bcc8:	b570      	push	{r4, r5, r6, lr}
    bcca:	0014      	movs	r4, r2
    bccc:	1c4b      	adds	r3, r1, #1
    bcce:	d01b      	beq.n	bd08 <_sungetc_r+0x40>
    bcd0:	8993      	ldrh	r3, [r2, #12]
    bcd2:	2220      	movs	r2, #32
    bcd4:	25ff      	movs	r5, #255	; 0xff
    bcd6:	4393      	bics	r3, r2
    bcd8:	81a3      	strh	r3, [r4, #12]
    bcda:	6b23      	ldr	r3, [r4, #48]	; 0x30
    bcdc:	b2ce      	uxtb	r6, r1
    bcde:	400d      	ands	r5, r1
    bce0:	2b00      	cmp	r3, #0
    bce2:	d014      	beq.n	bd0e <_sungetc_r+0x46>
    bce4:	6863      	ldr	r3, [r4, #4]
    bce6:	6b62      	ldr	r2, [r4, #52]	; 0x34
    bce8:	4293      	cmp	r3, r2
    bcea:	da08      	bge.n	bcfe <_sungetc_r+0x36>
    bcec:	6823      	ldr	r3, [r4, #0]
    bcee:	3b01      	subs	r3, #1
    bcf0:	6023      	str	r3, [r4, #0]
    bcf2:	701e      	strb	r6, [r3, #0]
    bcf4:	6863      	ldr	r3, [r4, #4]
    bcf6:	3301      	adds	r3, #1
    bcf8:	6063      	str	r3, [r4, #4]
    bcfa:	0028      	movs	r0, r5
    bcfc:	bd70      	pop	{r4, r5, r6, pc}
    bcfe:	0021      	movs	r1, r4
    bd00:	f000 f88c 	bl	be1c <__submore>
    bd04:	2800      	cmp	r0, #0
    bd06:	d0f1      	beq.n	bcec <_sungetc_r+0x24>
    bd08:	2501      	movs	r5, #1
    bd0a:	426d      	negs	r5, r5
    bd0c:	e7f5      	b.n	bcfa <_sungetc_r+0x32>
    bd0e:	6922      	ldr	r2, [r4, #16]
    bd10:	6823      	ldr	r3, [r4, #0]
    bd12:	2a00      	cmp	r2, #0
    bd14:	d005      	beq.n	bd22 <_sungetc_r+0x5a>
    bd16:	429a      	cmp	r2, r3
    bd18:	d203      	bcs.n	bd22 <_sungetc_r+0x5a>
    bd1a:	1e5a      	subs	r2, r3, #1
    bd1c:	7811      	ldrb	r1, [r2, #0]
    bd1e:	428d      	cmp	r5, r1
    bd20:	d00f      	beq.n	bd42 <_sungetc_r+0x7a>
    bd22:	63a3      	str	r3, [r4, #56]	; 0x38
    bd24:	0023      	movs	r3, r4
    bd26:	3340      	adds	r3, #64	; 0x40
    bd28:	6323      	str	r3, [r4, #48]	; 0x30
    bd2a:	2303      	movs	r3, #3
    bd2c:	6862      	ldr	r2, [r4, #4]
    bd2e:	6363      	str	r3, [r4, #52]	; 0x34
    bd30:	333f      	adds	r3, #63	; 0x3f
    bd32:	63e2      	str	r2, [r4, #60]	; 0x3c
    bd34:	54e6      	strb	r6, [r4, r3]
    bd36:	0023      	movs	r3, r4
    bd38:	3342      	adds	r3, #66	; 0x42
    bd3a:	6023      	str	r3, [r4, #0]
    bd3c:	2301      	movs	r3, #1
    bd3e:	6063      	str	r3, [r4, #4]
    bd40:	e7db      	b.n	bcfa <_sungetc_r+0x32>
    bd42:	6863      	ldr	r3, [r4, #4]
    bd44:	6022      	str	r2, [r4, #0]
    bd46:	3301      	adds	r3, #1
    bd48:	6063      	str	r3, [r4, #4]
    bd4a:	e7d6      	b.n	bcfa <_sungetc_r+0x32>

0000bd4c <__ssrefill_r>:
    bd4c:	b510      	push	{r4, lr}
    bd4e:	000c      	movs	r4, r1
    bd50:	6b09      	ldr	r1, [r1, #48]	; 0x30
    bd52:	2900      	cmp	r1, #0
    bd54:	d00f      	beq.n	bd76 <__ssrefill_r+0x2a>
    bd56:	0023      	movs	r3, r4
    bd58:	3340      	adds	r3, #64	; 0x40
    bd5a:	4299      	cmp	r1, r3
    bd5c:	d001      	beq.n	bd62 <__ssrefill_r+0x16>
    bd5e:	f7fd fb23 	bl	93a8 <_free_r>
    bd62:	2300      	movs	r3, #0
    bd64:	6323      	str	r3, [r4, #48]	; 0x30
    bd66:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    bd68:	6063      	str	r3, [r4, #4]
    bd6a:	2b00      	cmp	r3, #0
    bd6c:	d003      	beq.n	bd76 <__ssrefill_r+0x2a>
    bd6e:	2000      	movs	r0, #0
    bd70:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    bd72:	6023      	str	r3, [r4, #0]
    bd74:	bd10      	pop	{r4, pc}
    bd76:	6923      	ldr	r3, [r4, #16]
    bd78:	2220      	movs	r2, #32
    bd7a:	6023      	str	r3, [r4, #0]
    bd7c:	2300      	movs	r3, #0
    bd7e:	2001      	movs	r0, #1
    bd80:	6063      	str	r3, [r4, #4]
    bd82:	89a3      	ldrh	r3, [r4, #12]
    bd84:	4240      	negs	r0, r0
    bd86:	4313      	orrs	r3, r2
    bd88:	81a3      	strh	r3, [r4, #12]
    bd8a:	e7f3      	b.n	bd74 <__ssrefill_r+0x28>

0000bd8c <_sfread_r>:
    bd8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    bd8e:	46de      	mov	lr, fp
    bd90:	4657      	mov	r7, sl
    bd92:	4645      	mov	r5, r8
    bd94:	464e      	mov	r6, r9
    bd96:	469b      	mov	fp, r3
    bd98:	b5e0      	push	{r5, r6, r7, lr}
    bd9a:	b083      	sub	sp, #12
    bd9c:	0013      	movs	r3, r2
    bd9e:	9201      	str	r2, [sp, #4]
    bda0:	465a      	mov	r2, fp
    bda2:	4353      	muls	r3, r2
    bda4:	4680      	mov	r8, r0
    bda6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    bda8:	469a      	mov	sl, r3
    bdaa:	2b00      	cmp	r3, #0
    bdac:	d026      	beq.n	bdfc <_sfread_r+0x70>
    bdae:	001f      	movs	r7, r3
    bdb0:	2300      	movs	r3, #0
    bdb2:	000e      	movs	r6, r1
    bdb4:	4699      	mov	r9, r3
    bdb6:	e011      	b.n	bddc <_sfread_r+0x50>
    bdb8:	6821      	ldr	r1, [r4, #0]
    bdba:	0030      	movs	r0, r6
    bdbc:	002a      	movs	r2, r5
    bdbe:	f7fd ff75 	bl	9cac <memcpy>
    bdc2:	6823      	ldr	r3, [r4, #0]
    bdc4:	0021      	movs	r1, r4
    bdc6:	195b      	adds	r3, r3, r5
    bdc8:	6023      	str	r3, [r4, #0]
    bdca:	464b      	mov	r3, r9
    bdcc:	4640      	mov	r0, r8
    bdce:	6063      	str	r3, [r4, #4]
    bdd0:	1976      	adds	r6, r6, r5
    bdd2:	1b7f      	subs	r7, r7, r5
    bdd4:	f7ff ffba 	bl	bd4c <__ssrefill_r>
    bdd8:	2800      	cmp	r0, #0
    bdda:	d117      	bne.n	be0c <_sfread_r+0x80>
    bddc:	6865      	ldr	r5, [r4, #4]
    bdde:	42af      	cmp	r7, r5
    bde0:	d8ea      	bhi.n	bdb8 <_sfread_r+0x2c>
    bde2:	003a      	movs	r2, r7
    bde4:	6821      	ldr	r1, [r4, #0]
    bde6:	0030      	movs	r0, r6
    bde8:	f7fd ff60 	bl	9cac <memcpy>
    bdec:	6863      	ldr	r3, [r4, #4]
    bdee:	46da      	mov	sl, fp
    bdf0:	1bdb      	subs	r3, r3, r7
    bdf2:	6063      	str	r3, [r4, #4]
    bdf4:	6823      	ldr	r3, [r4, #0]
    bdf6:	469c      	mov	ip, r3
    bdf8:	4467      	add	r7, ip
    bdfa:	6027      	str	r7, [r4, #0]
    bdfc:	4650      	mov	r0, sl
    bdfe:	b003      	add	sp, #12
    be00:	bc3c      	pop	{r2, r3, r4, r5}
    be02:	4690      	mov	r8, r2
    be04:	4699      	mov	r9, r3
    be06:	46a2      	mov	sl, r4
    be08:	46ab      	mov	fp, r5
    be0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    be0c:	4653      	mov	r3, sl
    be0e:	9901      	ldr	r1, [sp, #4]
    be10:	1bd8      	subs	r0, r3, r7
    be12:	f7f7 fc09 	bl	3628 <__udivsi3>
    be16:	4682      	mov	sl, r0
    be18:	e7f0      	b.n	bdfc <_sfread_r+0x70>
    be1a:	46c0      	nop			; (mov r8, r8)

0000be1c <__submore>:
    be1c:	b5f0      	push	{r4, r5, r6, r7, lr}
    be1e:	000c      	movs	r4, r1
    be20:	0023      	movs	r3, r4
    be22:	46c6      	mov	lr, r8
    be24:	6b09      	ldr	r1, [r1, #48]	; 0x30
    be26:	3340      	adds	r3, #64	; 0x40
    be28:	b500      	push	{lr}
    be2a:	4299      	cmp	r1, r3
    be2c:	d015      	beq.n	be5a <__submore+0x3e>
    be2e:	6b66      	ldr	r6, [r4, #52]	; 0x34
    be30:	0077      	lsls	r7, r6, #1
    be32:	003a      	movs	r2, r7
    be34:	f000 fd0c 	bl	c850 <_realloc_r>
    be38:	1e05      	subs	r5, r0, #0
    be3a:	d028      	beq.n	be8e <__submore+0x72>
    be3c:	1983      	adds	r3, r0, r6
    be3e:	4698      	mov	r8, r3
    be40:	0001      	movs	r1, r0
    be42:	0032      	movs	r2, r6
    be44:	0018      	movs	r0, r3
    be46:	f7fd ff31 	bl	9cac <memcpy>
    be4a:	4643      	mov	r3, r8
    be4c:	2000      	movs	r0, #0
    be4e:	6023      	str	r3, [r4, #0]
    be50:	6325      	str	r5, [r4, #48]	; 0x30
    be52:	6367      	str	r7, [r4, #52]	; 0x34
    be54:	bc04      	pop	{r2}
    be56:	4690      	mov	r8, r2
    be58:	bdf0      	pop	{r4, r5, r6, r7, pc}
    be5a:	2580      	movs	r5, #128	; 0x80
    be5c:	00ed      	lsls	r5, r5, #3
    be5e:	0029      	movs	r1, r5
    be60:	f7fd fbc2 	bl	95e8 <_malloc_r>
    be64:	2800      	cmp	r0, #0
    be66:	d012      	beq.n	be8e <__submore+0x72>
    be68:	2342      	movs	r3, #66	; 0x42
    be6a:	6320      	str	r0, [r4, #48]	; 0x30
    be6c:	6365      	str	r5, [r4, #52]	; 0x34
    be6e:	5ce2      	ldrb	r2, [r4, r3]
    be70:	4b08      	ldr	r3, [pc, #32]	; (be94 <__submore+0x78>)
    be72:	54c2      	strb	r2, [r0, r3]
    be74:	2341      	movs	r3, #65	; 0x41
    be76:	5ce2      	ldrb	r2, [r4, r3]
    be78:	4b07      	ldr	r3, [pc, #28]	; (be98 <__submore+0x7c>)
    be7a:	54c2      	strb	r2, [r0, r3]
    be7c:	2340      	movs	r3, #64	; 0x40
    be7e:	5ce2      	ldrb	r2, [r4, r3]
    be80:	4b06      	ldr	r3, [pc, #24]	; (be9c <__submore+0x80>)
    be82:	469c      	mov	ip, r3
    be84:	54c2      	strb	r2, [r0, r3]
    be86:	4460      	add	r0, ip
    be88:	6020      	str	r0, [r4, #0]
    be8a:	2000      	movs	r0, #0
    be8c:	e7e2      	b.n	be54 <__submore+0x38>
    be8e:	2001      	movs	r0, #1
    be90:	4240      	negs	r0, r0
    be92:	e7df      	b.n	be54 <__submore+0x38>
    be94:	000003ff 	.word	0x000003ff
    be98:	000003fe 	.word	0x000003fe
    be9c:	000003fd 	.word	0x000003fd

0000bea0 <__ascii_wctomb>:
    bea0:	2900      	cmp	r1, #0
    bea2:	d004      	beq.n	beae <__ascii_wctomb+0xe>
    bea4:	2aff      	cmp	r2, #255	; 0xff
    bea6:	d804      	bhi.n	beb2 <__ascii_wctomb+0x12>
    bea8:	2001      	movs	r0, #1
    beaa:	700a      	strb	r2, [r1, #0]
    beac:	4770      	bx	lr
    beae:	2000      	movs	r0, #0
    beb0:	e7fc      	b.n	beac <__ascii_wctomb+0xc>
    beb2:	238a      	movs	r3, #138	; 0x8a
    beb4:	6003      	str	r3, [r0, #0]
    beb6:	2001      	movs	r0, #1
    beb8:	4240      	negs	r0, r0
    beba:	e7f7      	b.n	beac <__ascii_wctomb+0xc>

0000bebc <__register_exitproc>:
    bebc:	b5f0      	push	{r4, r5, r6, r7, lr}
    bebe:	464e      	mov	r6, r9
    bec0:	4645      	mov	r5, r8
    bec2:	46de      	mov	lr, fp
    bec4:	4657      	mov	r7, sl
    bec6:	b5e0      	push	{r5, r6, r7, lr}
    bec8:	4d36      	ldr	r5, [pc, #216]	; (bfa4 <__register_exitproc+0xe8>)
    beca:	b083      	sub	sp, #12
    becc:	0006      	movs	r6, r0
    bece:	6828      	ldr	r0, [r5, #0]
    bed0:	4698      	mov	r8, r3
    bed2:	000f      	movs	r7, r1
    bed4:	4691      	mov	r9, r2
    bed6:	f7fd fb83 	bl	95e0 <__retarget_lock_acquire_recursive>
    beda:	4b33      	ldr	r3, [pc, #204]	; (bfa8 <__register_exitproc+0xec>)
    bedc:	681c      	ldr	r4, [r3, #0]
    bede:	23a4      	movs	r3, #164	; 0xa4
    bee0:	005b      	lsls	r3, r3, #1
    bee2:	58e0      	ldr	r0, [r4, r3]
    bee4:	2800      	cmp	r0, #0
    bee6:	d052      	beq.n	bf8e <__register_exitproc+0xd2>
    bee8:	6843      	ldr	r3, [r0, #4]
    beea:	2b1f      	cmp	r3, #31
    beec:	dc13      	bgt.n	bf16 <__register_exitproc+0x5a>
    beee:	1c5a      	adds	r2, r3, #1
    bef0:	9201      	str	r2, [sp, #4]
    bef2:	2e00      	cmp	r6, #0
    bef4:	d128      	bne.n	bf48 <__register_exitproc+0x8c>
    bef6:	9a01      	ldr	r2, [sp, #4]
    bef8:	3302      	adds	r3, #2
    befa:	009b      	lsls	r3, r3, #2
    befc:	6042      	str	r2, [r0, #4]
    befe:	501f      	str	r7, [r3, r0]
    bf00:	6828      	ldr	r0, [r5, #0]
    bf02:	f7fd fb6f 	bl	95e4 <__retarget_lock_release_recursive>
    bf06:	2000      	movs	r0, #0
    bf08:	b003      	add	sp, #12
    bf0a:	bc3c      	pop	{r2, r3, r4, r5}
    bf0c:	4690      	mov	r8, r2
    bf0e:	4699      	mov	r9, r3
    bf10:	46a2      	mov	sl, r4
    bf12:	46ab      	mov	fp, r5
    bf14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bf16:	4b25      	ldr	r3, [pc, #148]	; (bfac <__register_exitproc+0xf0>)
    bf18:	2b00      	cmp	r3, #0
    bf1a:	d03d      	beq.n	bf98 <__register_exitproc+0xdc>
    bf1c:	20c8      	movs	r0, #200	; 0xc8
    bf1e:	0040      	lsls	r0, r0, #1
    bf20:	e000      	b.n	bf24 <__register_exitproc+0x68>
    bf22:	bf00      	nop
    bf24:	2800      	cmp	r0, #0
    bf26:	d037      	beq.n	bf98 <__register_exitproc+0xdc>
    bf28:	22a4      	movs	r2, #164	; 0xa4
    bf2a:	2300      	movs	r3, #0
    bf2c:	0052      	lsls	r2, r2, #1
    bf2e:	58a1      	ldr	r1, [r4, r2]
    bf30:	6043      	str	r3, [r0, #4]
    bf32:	6001      	str	r1, [r0, #0]
    bf34:	50a0      	str	r0, [r4, r2]
    bf36:	3240      	adds	r2, #64	; 0x40
    bf38:	5083      	str	r3, [r0, r2]
    bf3a:	3204      	adds	r2, #4
    bf3c:	5083      	str	r3, [r0, r2]
    bf3e:	3301      	adds	r3, #1
    bf40:	9301      	str	r3, [sp, #4]
    bf42:	2300      	movs	r3, #0
    bf44:	2e00      	cmp	r6, #0
    bf46:	d0d6      	beq.n	bef6 <__register_exitproc+0x3a>
    bf48:	009a      	lsls	r2, r3, #2
    bf4a:	4692      	mov	sl, r2
    bf4c:	4482      	add	sl, r0
    bf4e:	464a      	mov	r2, r9
    bf50:	2188      	movs	r1, #136	; 0x88
    bf52:	4654      	mov	r4, sl
    bf54:	5062      	str	r2, [r4, r1]
    bf56:	22c4      	movs	r2, #196	; 0xc4
    bf58:	0052      	lsls	r2, r2, #1
    bf5a:	4691      	mov	r9, r2
    bf5c:	4481      	add	r9, r0
    bf5e:	464a      	mov	r2, r9
    bf60:	3987      	subs	r1, #135	; 0x87
    bf62:	4099      	lsls	r1, r3
    bf64:	6812      	ldr	r2, [r2, #0]
    bf66:	468b      	mov	fp, r1
    bf68:	430a      	orrs	r2, r1
    bf6a:	4694      	mov	ip, r2
    bf6c:	464a      	mov	r2, r9
    bf6e:	4661      	mov	r1, ip
    bf70:	6011      	str	r1, [r2, #0]
    bf72:	2284      	movs	r2, #132	; 0x84
    bf74:	4641      	mov	r1, r8
    bf76:	0052      	lsls	r2, r2, #1
    bf78:	50a1      	str	r1, [r4, r2]
    bf7a:	2e02      	cmp	r6, #2
    bf7c:	d1bb      	bne.n	bef6 <__register_exitproc+0x3a>
    bf7e:	0002      	movs	r2, r0
    bf80:	465c      	mov	r4, fp
    bf82:	328d      	adds	r2, #141	; 0x8d
    bf84:	32ff      	adds	r2, #255	; 0xff
    bf86:	6811      	ldr	r1, [r2, #0]
    bf88:	430c      	orrs	r4, r1
    bf8a:	6014      	str	r4, [r2, #0]
    bf8c:	e7b3      	b.n	bef6 <__register_exitproc+0x3a>
    bf8e:	0020      	movs	r0, r4
    bf90:	304d      	adds	r0, #77	; 0x4d
    bf92:	30ff      	adds	r0, #255	; 0xff
    bf94:	50e0      	str	r0, [r4, r3]
    bf96:	e7a7      	b.n	bee8 <__register_exitproc+0x2c>
    bf98:	6828      	ldr	r0, [r5, #0]
    bf9a:	f7fd fb23 	bl	95e4 <__retarget_lock_release_recursive>
    bf9e:	2001      	movs	r0, #1
    bfa0:	4240      	negs	r0, r0
    bfa2:	e7b1      	b.n	bf08 <__register_exitproc+0x4c>
    bfa4:	200004c0 	.word	0x200004c0
    bfa8:	0000e558 	.word	0x0000e558
    bfac:	00000000 	.word	0x00000000

0000bfb0 <_calloc_r>:
    bfb0:	b510      	push	{r4, lr}
    bfb2:	4351      	muls	r1, r2
    bfb4:	f7fd fb18 	bl	95e8 <_malloc_r>
    bfb8:	1e04      	subs	r4, r0, #0
    bfba:	d01c      	beq.n	bff6 <_calloc_r+0x46>
    bfbc:	0003      	movs	r3, r0
    bfbe:	3b08      	subs	r3, #8
    bfc0:	685a      	ldr	r2, [r3, #4]
    bfc2:	2303      	movs	r3, #3
    bfc4:	439a      	bics	r2, r3
    bfc6:	3a04      	subs	r2, #4
    bfc8:	2a24      	cmp	r2, #36	; 0x24
    bfca:	d816      	bhi.n	bffa <_calloc_r+0x4a>
    bfcc:	0003      	movs	r3, r0
    bfce:	2a13      	cmp	r2, #19
    bfd0:	d90d      	bls.n	bfee <_calloc_r+0x3e>
    bfd2:	2100      	movs	r1, #0
    bfd4:	3308      	adds	r3, #8
    bfd6:	6001      	str	r1, [r0, #0]
    bfd8:	6041      	str	r1, [r0, #4]
    bfda:	2a1b      	cmp	r2, #27
    bfdc:	d907      	bls.n	bfee <_calloc_r+0x3e>
    bfde:	6081      	str	r1, [r0, #8]
    bfe0:	60c1      	str	r1, [r0, #12]
    bfe2:	2a24      	cmp	r2, #36	; 0x24
    bfe4:	d10d      	bne.n	c002 <_calloc_r+0x52>
    bfe6:	0003      	movs	r3, r0
    bfe8:	6101      	str	r1, [r0, #16]
    bfea:	3318      	adds	r3, #24
    bfec:	6141      	str	r1, [r0, #20]
    bfee:	2200      	movs	r2, #0
    bff0:	601a      	str	r2, [r3, #0]
    bff2:	605a      	str	r2, [r3, #4]
    bff4:	609a      	str	r2, [r3, #8]
    bff6:	0020      	movs	r0, r4
    bff8:	bd10      	pop	{r4, pc}
    bffa:	2100      	movs	r1, #0
    bffc:	f7f9 fa52 	bl	54a4 <memset>
    c000:	e7f9      	b.n	bff6 <_calloc_r+0x46>
    c002:	0003      	movs	r3, r0
    c004:	3310      	adds	r3, #16
    c006:	e7f2      	b.n	bfee <_calloc_r+0x3e>

0000c008 <rshift>:
    c008:	b5f0      	push	{r4, r5, r6, r7, lr}
    c00a:	46ce      	mov	lr, r9
    c00c:	4647      	mov	r7, r8
    c00e:	0005      	movs	r5, r0
    c010:	6902      	ldr	r2, [r0, #16]
    c012:	b580      	push	{r7, lr}
    c014:	3514      	adds	r5, #20
    c016:	114c      	asrs	r4, r1, #5
    c018:	4294      	cmp	r4, r2
    c01a:	da2c      	bge.n	c076 <rshift+0x6e>
    c01c:	0092      	lsls	r2, r2, #2
    c01e:	18af      	adds	r7, r5, r2
    c020:	231f      	movs	r3, #31
    c022:	00a2      	lsls	r2, r4, #2
    c024:	4691      	mov	r9, r2
    c026:	400b      	ands	r3, r1
    c028:	44a9      	add	r9, r5
    c02a:	469c      	mov	ip, r3
    c02c:	2b00      	cmp	r3, #0
    c02e:	d02a      	beq.n	c086 <rshift+0x7e>
    c030:	4662      	mov	r2, ip
    c032:	2320      	movs	r3, #32
    c034:	1a9b      	subs	r3, r3, r2
    c036:	4698      	mov	r8, r3
    c038:	464b      	mov	r3, r9
    c03a:	681e      	ldr	r6, [r3, #0]
    c03c:	1d1c      	adds	r4, r3, #4
    c03e:	40d6      	lsrs	r6, r2
    c040:	42a7      	cmp	r7, r4
    c042:	d935      	bls.n	c0b0 <rshift+0xa8>
    c044:	0029      	movs	r1, r5
    c046:	4642      	mov	r2, r8
    c048:	6823      	ldr	r3, [r4, #0]
    c04a:	4093      	lsls	r3, r2
    c04c:	4333      	orrs	r3, r6
    c04e:	c108      	stmia	r1!, {r3}
    c050:	4663      	mov	r3, ip
    c052:	cc40      	ldmia	r4!, {r6}
    c054:	40de      	lsrs	r6, r3
    c056:	42a7      	cmp	r7, r4
    c058:	d8f5      	bhi.n	c046 <rshift+0x3e>
    c05a:	464b      	mov	r3, r9
    c05c:	1afa      	subs	r2, r7, r3
    c05e:	2303      	movs	r3, #3
    c060:	3a05      	subs	r2, #5
    c062:	439a      	bics	r2, r3
    c064:	3204      	adds	r2, #4
    c066:	18aa      	adds	r2, r5, r2
    c068:	6016      	str	r6, [r2, #0]
    c06a:	2e00      	cmp	r6, #0
    c06c:	d01d      	beq.n	c0aa <rshift+0xa2>
    c06e:	1d13      	adds	r3, r2, #4
    c070:	1b5b      	subs	r3, r3, r5
    c072:	109b      	asrs	r3, r3, #2
    c074:	e015      	b.n	c0a2 <rshift+0x9a>
    c076:	2300      	movs	r3, #0
    c078:	6103      	str	r3, [r0, #16]
    c07a:	2300      	movs	r3, #0
    c07c:	6143      	str	r3, [r0, #20]
    c07e:	bc0c      	pop	{r2, r3}
    c080:	4690      	mov	r8, r2
    c082:	4699      	mov	r9, r3
    c084:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c086:	4649      	mov	r1, r9
    c088:	454f      	cmp	r7, r9
    c08a:	d9f4      	bls.n	c076 <rshift+0x6e>
    c08c:	c910      	ldmia	r1!, {r4}
    c08e:	c510      	stmia	r5!, {r4}
    c090:	428f      	cmp	r7, r1
    c092:	d8fb      	bhi.n	c08c <rshift+0x84>
    c094:	464b      	mov	r3, r9
    c096:	43db      	mvns	r3, r3
    c098:	2203      	movs	r2, #3
    c09a:	19db      	adds	r3, r3, r7
    c09c:	4393      	bics	r3, r2
    c09e:	3304      	adds	r3, #4
    c0a0:	109b      	asrs	r3, r3, #2
    c0a2:	6103      	str	r3, [r0, #16]
    c0a4:	2b00      	cmp	r3, #0
    c0a6:	d1ea      	bne.n	c07e <rshift+0x76>
    c0a8:	e7e7      	b.n	c07a <rshift+0x72>
    c0aa:	1b53      	subs	r3, r2, r5
    c0ac:	109b      	asrs	r3, r3, #2
    c0ae:	e7f8      	b.n	c0a2 <rshift+0x9a>
    c0b0:	002a      	movs	r2, r5
    c0b2:	e7d9      	b.n	c068 <rshift+0x60>

0000c0b4 <__gethex>:
    c0b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    c0b6:	46de      	mov	lr, fp
    c0b8:	464e      	mov	r6, r9
    c0ba:	4657      	mov	r7, sl
    c0bc:	4645      	mov	r5, r8
    c0be:	b5e0      	push	{r5, r6, r7, lr}
    c0c0:	b08b      	sub	sp, #44	; 0x2c
    c0c2:	9006      	str	r0, [sp, #24]
    c0c4:	9816      	ldr	r0, [sp, #88]	; 0x58
    c0c6:	4689      	mov	r9, r1
    c0c8:	4693      	mov	fp, r2
    c0ca:	9309      	str	r3, [sp, #36]	; 0x24
    c0cc:	f7fd fa78 	bl	95c0 <__localeconv_l>
    c0d0:	6803      	ldr	r3, [r0, #0]
    c0d2:	0018      	movs	r0, r3
    c0d4:	001c      	movs	r4, r3
    c0d6:	9304      	str	r3, [sp, #16]
    c0d8:	f7f9 fb4c 	bl	5774 <strlen>
    c0dc:	46a4      	mov	ip, r4
    c0de:	0002      	movs	r2, r0
    c0e0:	4462      	add	r2, ip
    c0e2:	0013      	movs	r3, r2
    c0e4:	3b01      	subs	r3, #1
    c0e6:	781b      	ldrb	r3, [r3, #0]
    c0e8:	9002      	str	r0, [sp, #8]
    c0ea:	9301      	str	r3, [sp, #4]
    c0ec:	464b      	mov	r3, r9
    c0ee:	681c      	ldr	r4, [r3, #0]
    c0f0:	78a2      	ldrb	r2, [r4, #2]
    c0f2:	2a30      	cmp	r2, #48	; 0x30
    c0f4:	d000      	beq.n	c0f8 <__gethex+0x44>
    c0f6:	e1c4      	b.n	c482 <__gethex+0x3ce>
    c0f8:	2102      	movs	r1, #2
    c0fa:	4249      	negs	r1, r1
    c0fc:	1ce3      	adds	r3, r4, #3
    c0fe:	1b09      	subs	r1, r1, r4
    c100:	18c8      	adds	r0, r1, r3
    c102:	001c      	movs	r4, r3
    c104:	3301      	adds	r3, #1
    c106:	1e5a      	subs	r2, r3, #1
    c108:	7812      	ldrb	r2, [r2, #0]
    c10a:	2a30      	cmp	r2, #48	; 0x30
    c10c:	d0f8      	beq.n	c100 <__gethex+0x4c>
    c10e:	4680      	mov	r8, r0
    c110:	4fbf      	ldr	r7, [pc, #764]	; (c410 <__gethex+0x35c>)
    c112:	5cbb      	ldrb	r3, [r7, r2]
    c114:	2b00      	cmp	r3, #0
    c116:	d100      	bne.n	c11a <__gethex+0x66>
    c118:	e0b0      	b.n	c27c <__gethex+0x1c8>
    c11a:	2200      	movs	r2, #0
    c11c:	2600      	movs	r6, #0
    c11e:	4692      	mov	sl, r2
    c120:	7823      	ldrb	r3, [r4, #0]
    c122:	5cfb      	ldrb	r3, [r7, r3]
    c124:	0025      	movs	r5, r4
    c126:	2b00      	cmp	r3, #0
    c128:	d004      	beq.n	c134 <__gethex+0x80>
    c12a:	3501      	adds	r5, #1
    c12c:	782b      	ldrb	r3, [r5, #0]
    c12e:	5cfb      	ldrb	r3, [r7, r3]
    c130:	2b00      	cmp	r3, #0
    c132:	d1fa      	bne.n	c12a <__gethex+0x76>
    c134:	9a02      	ldr	r2, [sp, #8]
    c136:	9904      	ldr	r1, [sp, #16]
    c138:	0028      	movs	r0, r5
    c13a:	f000 fd47 	bl	cbcc <strncmp>
    c13e:	2800      	cmp	r0, #0
    c140:	d100      	bne.n	c144 <__gethex+0x90>
    c142:	e08b      	b.n	c25c <__gethex+0x1a8>
    c144:	782b      	ldrb	r3, [r5, #0]
    c146:	2e00      	cmp	r6, #0
    c148:	d100      	bne.n	c14c <__gethex+0x98>
    c14a:	e189      	b.n	c460 <__gethex+0x3ac>
    c14c:	1b76      	subs	r6, r6, r5
    c14e:	00b2      	lsls	r2, r6, #2
    c150:	9203      	str	r2, [sp, #12]
    c152:	2b50      	cmp	r3, #80	; 0x50
    c154:	d100      	bne.n	c158 <__gethex+0xa4>
    c156:	e0b4      	b.n	c2c2 <__gethex+0x20e>
    c158:	002e      	movs	r6, r5
    c15a:	2b70      	cmp	r3, #112	; 0x70
    c15c:	d100      	bne.n	c160 <__gethex+0xac>
    c15e:	e0b0      	b.n	c2c2 <__gethex+0x20e>
    c160:	464b      	mov	r3, r9
    c162:	601d      	str	r5, [r3, #0]
    c164:	4653      	mov	r3, sl
    c166:	2b00      	cmp	r3, #0
    c168:	d000      	beq.n	c16c <__gethex+0xb8>
    c16a:	e098      	b.n	c29e <__gethex+0x1ea>
    c16c:	1b33      	subs	r3, r6, r4
    c16e:	3b01      	subs	r3, #1
    c170:	2100      	movs	r1, #0
    c172:	2b07      	cmp	r3, #7
    c174:	dd03      	ble.n	c17e <__gethex+0xca>
    c176:	3101      	adds	r1, #1
    c178:	105b      	asrs	r3, r3, #1
    c17a:	2b07      	cmp	r3, #7
    c17c:	dcfb      	bgt.n	c176 <__gethex+0xc2>
    c17e:	9806      	ldr	r0, [sp, #24]
    c180:	f7fd fde6 	bl	9d50 <_Balloc>
    c184:	0003      	movs	r3, r0
    c186:	3314      	adds	r3, #20
    c188:	9005      	str	r0, [sp, #20]
    c18a:	9308      	str	r3, [sp, #32]
    c18c:	42b4      	cmp	r4, r6
    c18e:	d300      	bcc.n	c192 <__gethex+0xde>
    c190:	e1c3      	b.n	c51a <__gethex+0x466>
    c192:	469a      	mov	sl, r3
    c194:	2300      	movs	r3, #0
    c196:	9a02      	ldr	r2, [sp, #8]
    c198:	4698      	mov	r8, r3
    c19a:	4699      	mov	r9, r3
    c19c:	3301      	adds	r3, #1
    c19e:	1a9b      	subs	r3, r3, r2
    c1a0:	9307      	str	r3, [sp, #28]
    c1a2:	0023      	movs	r3, r4
    c1a4:	4644      	mov	r4, r8
    c1a6:	4698      	mov	r8, r3
    c1a8:	e00e      	b.n	c1c8 <__gethex+0x114>
    c1aa:	2c20      	cmp	r4, #32
    c1ac:	d05b      	beq.n	c266 <__gethex+0x1b2>
    c1ae:	0022      	movs	r2, r4
    c1b0:	3404      	adds	r4, #4
    c1b2:	210f      	movs	r1, #15
    c1b4:	782b      	ldrb	r3, [r5, #0]
    c1b6:	002e      	movs	r6, r5
    c1b8:	5cfb      	ldrb	r3, [r7, r3]
    c1ba:	400b      	ands	r3, r1
    c1bc:	4093      	lsls	r3, r2
    c1be:	464a      	mov	r2, r9
    c1c0:	431a      	orrs	r2, r3
    c1c2:	4691      	mov	r9, r2
    c1c4:	4546      	cmp	r6, r8
    c1c6:	d911      	bls.n	c1ec <__gethex+0x138>
    c1c8:	1e75      	subs	r5, r6, #1
    c1ca:	782b      	ldrb	r3, [r5, #0]
    c1cc:	9a01      	ldr	r2, [sp, #4]
    c1ce:	4293      	cmp	r3, r2
    c1d0:	d1eb      	bne.n	c1aa <__gethex+0xf6>
    c1d2:	9b07      	ldr	r3, [sp, #28]
    c1d4:	18ee      	adds	r6, r5, r3
    c1d6:	4546      	cmp	r6, r8
    c1d8:	d3e7      	bcc.n	c1aa <__gethex+0xf6>
    c1da:	9a02      	ldr	r2, [sp, #8]
    c1dc:	9904      	ldr	r1, [sp, #16]
    c1de:	0030      	movs	r0, r6
    c1e0:	f000 fcf4 	bl	cbcc <strncmp>
    c1e4:	2800      	cmp	r0, #0
    c1e6:	d1e0      	bne.n	c1aa <__gethex+0xf6>
    c1e8:	4546      	cmp	r6, r8
    c1ea:	d8ed      	bhi.n	c1c8 <__gethex+0x114>
    c1ec:	4653      	mov	r3, sl
    c1ee:	464a      	mov	r2, r9
    c1f0:	c304      	stmia	r3!, {r2}
    c1f2:	9a08      	ldr	r2, [sp, #32]
    c1f4:	4648      	mov	r0, r9
    c1f6:	1a9b      	subs	r3, r3, r2
    c1f8:	9a05      	ldr	r2, [sp, #20]
    c1fa:	109b      	asrs	r3, r3, #2
    c1fc:	6113      	str	r3, [r2, #16]
    c1fe:	015c      	lsls	r4, r3, #5
    c200:	f7fd fe68 	bl	9ed4 <__hi0bits>
    c204:	465b      	mov	r3, fp
    c206:	681d      	ldr	r5, [r3, #0]
    c208:	1a24      	subs	r4, r4, r0
    c20a:	42ac      	cmp	r4, r5
    c20c:	dd00      	ble.n	c210 <__gethex+0x15c>
    c20e:	e101      	b.n	c414 <__gethex+0x360>
    c210:	2600      	movs	r6, #0
    c212:	42ac      	cmp	r4, r5
    c214:	da00      	bge.n	c218 <__gethex+0x164>
    c216:	e126      	b.n	c466 <__gethex+0x3b2>
    c218:	465b      	mov	r3, fp
    c21a:	9a03      	ldr	r2, [sp, #12]
    c21c:	689b      	ldr	r3, [r3, #8]
    c21e:	429a      	cmp	r2, r3
    c220:	dd00      	ble.n	c224 <__gethex+0x170>
    c222:	e0ba      	b.n	c39a <__gethex+0x2e6>
    c224:	465b      	mov	r3, fp
    c226:	9903      	ldr	r1, [sp, #12]
    c228:	685b      	ldr	r3, [r3, #4]
    c22a:	4299      	cmp	r1, r3
    c22c:	da00      	bge.n	c230 <__gethex+0x17c>
    c22e:	e0d5      	b.n	c3dc <__gethex+0x328>
    c230:	2401      	movs	r4, #1
    c232:	2e00      	cmp	r6, #0
    c234:	d00b      	beq.n	c24e <__gethex+0x19a>
    c236:	465b      	mov	r3, fp
    c238:	68db      	ldr	r3, [r3, #12]
    c23a:	2b02      	cmp	r3, #2
    c23c:	d100      	bne.n	c240 <__gethex+0x18c>
    c23e:	e152      	b.n	c4e6 <__gethex+0x432>
    c240:	2b03      	cmp	r3, #3
    c242:	d100      	bne.n	c246 <__gethex+0x192>
    c244:	e153      	b.n	c4ee <__gethex+0x43a>
    c246:	2b01      	cmp	r3, #1
    c248:	d069      	beq.n	c31e <__gethex+0x26a>
    c24a:	2310      	movs	r3, #16
    c24c:	431c      	orrs	r4, r3
    c24e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    c250:	9a05      	ldr	r2, [sp, #20]
    c252:	601a      	str	r2, [r3, #0]
    c254:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c256:	9a03      	ldr	r2, [sp, #12]
    c258:	601a      	str	r2, [r3, #0]
    c25a:	e026      	b.n	c2aa <__gethex+0x1f6>
    c25c:	2e00      	cmp	r6, #0
    c25e:	d100      	bne.n	c262 <__gethex+0x1ae>
    c260:	e133      	b.n	c4ca <__gethex+0x416>
    c262:	782b      	ldrb	r3, [r5, #0]
    c264:	e772      	b.n	c14c <__gethex+0x98>
    c266:	4653      	mov	r3, sl
    c268:	464a      	mov	r2, r9
    c26a:	601a      	str	r2, [r3, #0]
    c26c:	2304      	movs	r3, #4
    c26e:	469c      	mov	ip, r3
    c270:	2300      	movs	r3, #0
    c272:	44e2      	add	sl, ip
    c274:	2200      	movs	r2, #0
    c276:	2404      	movs	r4, #4
    c278:	4699      	mov	r9, r3
    c27a:	e79a      	b.n	c1b2 <__gethex+0xfe>
    c27c:	9d02      	ldr	r5, [sp, #8]
    c27e:	9904      	ldr	r1, [sp, #16]
    c280:	002a      	movs	r2, r5
    c282:	0020      	movs	r0, r4
    c284:	f000 fca2 	bl	cbcc <strncmp>
    c288:	2800      	cmp	r0, #0
    c28a:	d100      	bne.n	c28e <__gethex+0x1da>
    c28c:	e091      	b.n	c3b2 <__gethex+0x2fe>
    c28e:	0025      	movs	r5, r4
    c290:	7822      	ldrb	r2, [r4, #0]
    c292:	2a50      	cmp	r2, #80	; 0x50
    c294:	d011      	beq.n	c2ba <__gethex+0x206>
    c296:	2a70      	cmp	r2, #112	; 0x70
    c298:	d00f      	beq.n	c2ba <__gethex+0x206>
    c29a:	464b      	mov	r3, r9
    c29c:	601d      	str	r5, [r3, #0]
    c29e:	4643      	mov	r3, r8
    c2a0:	425a      	negs	r2, r3
    c2a2:	4153      	adcs	r3, r2
    c2a4:	2406      	movs	r4, #6
    c2a6:	425b      	negs	r3, r3
    c2a8:	401c      	ands	r4, r3
    c2aa:	0020      	movs	r0, r4
    c2ac:	b00b      	add	sp, #44	; 0x2c
    c2ae:	bc3c      	pop	{r2, r3, r4, r5}
    c2b0:	4690      	mov	r8, r2
    c2b2:	4699      	mov	r9, r3
    c2b4:	46a2      	mov	sl, r4
    c2b6:	46ab      	mov	fp, r5
    c2b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c2ba:	2300      	movs	r3, #0
    c2bc:	9303      	str	r3, [sp, #12]
    c2be:	3301      	adds	r3, #1
    c2c0:	469a      	mov	sl, r3
    c2c2:	786b      	ldrb	r3, [r5, #1]
    c2c4:	2b2b      	cmp	r3, #43	; 0x2b
    c2c6:	d100      	bne.n	c2ca <__gethex+0x216>
    c2c8:	e09f      	b.n	c40a <__gethex+0x356>
    c2ca:	2101      	movs	r1, #1
    c2cc:	2b2d      	cmp	r3, #45	; 0x2d
    c2ce:	d16d      	bne.n	c3ac <__gethex+0x2f8>
    c2d0:	78ab      	ldrb	r3, [r5, #2]
    c2d2:	1ca8      	adds	r0, r5, #2
    c2d4:	5cfb      	ldrb	r3, [r7, r3]
    c2d6:	002e      	movs	r6, r5
    c2d8:	1e5a      	subs	r2, r3, #1
    c2da:	2a18      	cmp	r2, #24
    c2dc:	d900      	bls.n	c2e0 <__gethex+0x22c>
    c2de:	e73f      	b.n	c160 <__gethex+0xac>
    c2e0:	1c42      	adds	r2, r0, #1
    c2e2:	7840      	ldrb	r0, [r0, #1]
    c2e4:	3b10      	subs	r3, #16
    c2e6:	5c38      	ldrb	r0, [r7, r0]
    c2e8:	1e46      	subs	r6, r0, #1
    c2ea:	2e18      	cmp	r6, #24
    c2ec:	d80c      	bhi.n	c308 <__gethex+0x254>
    c2ee:	0006      	movs	r6, r0
    c2f0:	0098      	lsls	r0, r3, #2
    c2f2:	18c0      	adds	r0, r0, r3
    c2f4:	0040      	lsls	r0, r0, #1
    c2f6:	1980      	adds	r0, r0, r6
    c2f8:	0003      	movs	r3, r0
    c2fa:	3201      	adds	r2, #1
    c2fc:	7810      	ldrb	r0, [r2, #0]
    c2fe:	3b10      	subs	r3, #16
    c300:	5c3e      	ldrb	r6, [r7, r0]
    c302:	1e70      	subs	r0, r6, #1
    c304:	2818      	cmp	r0, #24
    c306:	d9f3      	bls.n	c2f0 <__gethex+0x23c>
    c308:	2900      	cmp	r1, #0
    c30a:	d000      	beq.n	c30e <__gethex+0x25a>
    c30c:	425b      	negs	r3, r3
    c30e:	9903      	ldr	r1, [sp, #12]
    c310:	002e      	movs	r6, r5
    c312:	468c      	mov	ip, r1
    c314:	449c      	add	ip, r3
    c316:	4663      	mov	r3, ip
    c318:	0015      	movs	r5, r2
    c31a:	9303      	str	r3, [sp, #12]
    c31c:	e720      	b.n	c160 <__gethex+0xac>
    c31e:	07b2      	lsls	r2, r6, #30
    c320:	d593      	bpl.n	c24a <__gethex+0x196>
    c322:	9a08      	ldr	r2, [sp, #32]
    c324:	6812      	ldr	r2, [r2, #0]
    c326:	4316      	orrs	r6, r2
    c328:	9201      	str	r2, [sp, #4]
    c32a:	4233      	tst	r3, r6
    c32c:	d100      	bne.n	c330 <__gethex+0x27c>
    c32e:	e78c      	b.n	c24a <__gethex+0x196>
    c330:	9b05      	ldr	r3, [sp, #20]
    c332:	691f      	ldr	r7, [r3, #16]
    c334:	9b08      	ldr	r3, [sp, #32]
    c336:	00b9      	lsls	r1, r7, #2
    c338:	4688      	mov	r8, r1
    c33a:	001a      	movs	r2, r3
    c33c:	4442      	add	r2, r8
    c33e:	0016      	movs	r6, r2
    c340:	2100      	movs	r1, #0
    c342:	469c      	mov	ip, r3
    c344:	e003      	b.n	c34e <__gethex+0x29a>
    c346:	c302      	stmia	r3!, {r1}
    c348:	429e      	cmp	r6, r3
    c34a:	d800      	bhi.n	c34e <__gethex+0x29a>
    c34c:	e0ff      	b.n	c54e <__gethex+0x49a>
    c34e:	681a      	ldr	r2, [r3, #0]
    c350:	1c50      	adds	r0, r2, #1
    c352:	d0f8      	beq.n	c346 <__gethex+0x292>
    c354:	3201      	adds	r2, #1
    c356:	4660      	mov	r0, ip
    c358:	601a      	str	r2, [r3, #0]
    c35a:	2c02      	cmp	r4, #2
    c35c:	d100      	bne.n	c360 <__gethex+0x2ac>
    c35e:	e10c      	b.n	c57a <__gethex+0x4c6>
    c360:	231f      	movs	r3, #31
    c362:	2421      	movs	r4, #33	; 0x21
    c364:	401d      	ands	r5, r3
    c366:	d100      	bne.n	c36a <__gethex+0x2b6>
    c368:	e771      	b.n	c24e <__gethex+0x19a>
    c36a:	4440      	add	r0, r8
    c36c:	3804      	subs	r0, #4
    c36e:	6800      	ldr	r0, [r0, #0]
    c370:	f7fd fdb0 	bl	9ed4 <__hi0bits>
    c374:	2320      	movs	r3, #32
    c376:	1b5d      	subs	r5, r3, r5
    c378:	42a8      	cmp	r0, r5
    c37a:	db00      	blt.n	c37e <__gethex+0x2ca>
    c37c:	e767      	b.n	c24e <__gethex+0x19a>
    c37e:	2101      	movs	r1, #1
    c380:	9805      	ldr	r0, [sp, #20]
    c382:	f7ff fe41 	bl	c008 <rshift>
    c386:	9b03      	ldr	r3, [sp, #12]
    c388:	2421      	movs	r4, #33	; 0x21
    c38a:	3301      	adds	r3, #1
    c38c:	001a      	movs	r2, r3
    c38e:	9303      	str	r3, [sp, #12]
    c390:	465b      	mov	r3, fp
    c392:	689b      	ldr	r3, [r3, #8]
    c394:	429a      	cmp	r2, r3
    c396:	dc00      	bgt.n	c39a <__gethex+0x2e6>
    c398:	e759      	b.n	c24e <__gethex+0x19a>
    c39a:	9905      	ldr	r1, [sp, #20]
    c39c:	9806      	ldr	r0, [sp, #24]
    c39e:	f7fd fcff 	bl	9da0 <_Bfree>
    c3a2:	2300      	movs	r3, #0
    c3a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
    c3a6:	24a3      	movs	r4, #163	; 0xa3
    c3a8:	6013      	str	r3, [r2, #0]
    c3aa:	e77e      	b.n	c2aa <__gethex+0x1f6>
    c3ac:	1c68      	adds	r0, r5, #1
    c3ae:	2100      	movs	r1, #0
    c3b0:	e790      	b.n	c2d4 <__gethex+0x220>
    c3b2:	1965      	adds	r5, r4, r5
    c3b4:	782a      	ldrb	r2, [r5, #0]
    c3b6:	5cbb      	ldrb	r3, [r7, r2]
    c3b8:	2b00      	cmp	r3, #0
    c3ba:	d100      	bne.n	c3be <__gethex+0x30a>
    c3bc:	e769      	b.n	c292 <__gethex+0x1de>
    c3be:	002c      	movs	r4, r5
    c3c0:	2a30      	cmp	r2, #48	; 0x30
    c3c2:	d104      	bne.n	c3ce <__gethex+0x31a>
    c3c4:	3401      	adds	r4, #1
    c3c6:	7823      	ldrb	r3, [r4, #0]
    c3c8:	2b30      	cmp	r3, #48	; 0x30
    c3ca:	d0fb      	beq.n	c3c4 <__gethex+0x310>
    c3cc:	5cfb      	ldrb	r3, [r7, r3]
    c3ce:	4259      	negs	r1, r3
    c3d0:	4159      	adcs	r1, r3
    c3d2:	2201      	movs	r2, #1
    c3d4:	468a      	mov	sl, r1
    c3d6:	002e      	movs	r6, r5
    c3d8:	4690      	mov	r8, r2
    c3da:	e6a3      	b.n	c124 <__gethex+0x70>
    c3dc:	1a5c      	subs	r4, r3, r1
    c3de:	42a5      	cmp	r5, r4
    c3e0:	dc53      	bgt.n	c48a <__gethex+0x3d6>
    c3e2:	465a      	mov	r2, fp
    c3e4:	68d2      	ldr	r2, [r2, #12]
    c3e6:	2a02      	cmp	r2, #2
    c3e8:	d100      	bne.n	c3ec <__gethex+0x338>
    c3ea:	e0ac      	b.n	c546 <__gethex+0x492>
    c3ec:	2a03      	cmp	r2, #3
    c3ee:	d100      	bne.n	c3f2 <__gethex+0x33e>
    c3f0:	e084      	b.n	c4fc <__gethex+0x448>
    c3f2:	2a01      	cmp	r2, #1
    c3f4:	d100      	bne.n	c3f8 <__gethex+0x344>
    c3f6:	e097      	b.n	c528 <__gethex+0x474>
    c3f8:	9905      	ldr	r1, [sp, #20]
    c3fa:	9806      	ldr	r0, [sp, #24]
    c3fc:	f7fd fcd0 	bl	9da0 <_Bfree>
    c400:	2300      	movs	r3, #0
    c402:	9a14      	ldr	r2, [sp, #80]	; 0x50
    c404:	2450      	movs	r4, #80	; 0x50
    c406:	6013      	str	r3, [r2, #0]
    c408:	e74f      	b.n	c2aa <__gethex+0x1f6>
    c40a:	2100      	movs	r1, #0
    c40c:	e760      	b.n	c2d0 <__gethex+0x21c>
    c40e:	46c0      	nop			; (mov r8, r8)
    c410:	0000eefc 	.word	0x0000eefc
    c414:	1b64      	subs	r4, r4, r5
    c416:	0021      	movs	r1, r4
    c418:	9805      	ldr	r0, [sp, #20]
    c41a:	f7fe f917 	bl	a64c <__any_on>
    c41e:	1e06      	subs	r6, r0, #0
    c420:	d014      	beq.n	c44c <__gethex+0x398>
    c422:	211f      	movs	r1, #31
    c424:	2301      	movs	r3, #1
    c426:	1e60      	subs	r0, r4, #1
    c428:	4001      	ands	r1, r0
    c42a:	408b      	lsls	r3, r1
    c42c:	1142      	asrs	r2, r0, #5
    c42e:	9908      	ldr	r1, [sp, #32]
    c430:	0092      	lsls	r2, r2, #2
    c432:	588a      	ldr	r2, [r1, r2]
    c434:	2601      	movs	r6, #1
    c436:	421a      	tst	r2, r3
    c438:	d008      	beq.n	c44c <__gethex+0x398>
    c43a:	2801      	cmp	r0, #1
    c43c:	dd72      	ble.n	c524 <__gethex+0x470>
    c43e:	1ea1      	subs	r1, r4, #2
    c440:	9805      	ldr	r0, [sp, #20]
    c442:	f7fe f903 	bl	a64c <__any_on>
    c446:	2800      	cmp	r0, #0
    c448:	d06c      	beq.n	c524 <__gethex+0x470>
    c44a:	2603      	movs	r6, #3
    c44c:	0021      	movs	r1, r4
    c44e:	9805      	ldr	r0, [sp, #20]
    c450:	f7ff fdda 	bl	c008 <rshift>
    c454:	9b03      	ldr	r3, [sp, #12]
    c456:	469c      	mov	ip, r3
    c458:	44a4      	add	ip, r4
    c45a:	4663      	mov	r3, ip
    c45c:	9303      	str	r3, [sp, #12]
    c45e:	e6db      	b.n	c218 <__gethex+0x164>
    c460:	2200      	movs	r2, #0
    c462:	9203      	str	r2, [sp, #12]
    c464:	e675      	b.n	c152 <__gethex+0x9e>
    c466:	1b2c      	subs	r4, r5, r4
    c468:	0022      	movs	r2, r4
    c46a:	9905      	ldr	r1, [sp, #20]
    c46c:	9806      	ldr	r0, [sp, #24]
    c46e:	f7fd fe8d 	bl	a18c <__lshift>
    c472:	0003      	movs	r3, r0
    c474:	9a03      	ldr	r2, [sp, #12]
    c476:	3314      	adds	r3, #20
    c478:	1b12      	subs	r2, r2, r4
    c47a:	9005      	str	r0, [sp, #20]
    c47c:	9203      	str	r2, [sp, #12]
    c47e:	9308      	str	r3, [sp, #32]
    c480:	e6ca      	b.n	c218 <__gethex+0x164>
    c482:	2300      	movs	r3, #0
    c484:	3402      	adds	r4, #2
    c486:	4698      	mov	r8, r3
    c488:	e642      	b.n	c110 <__gethex+0x5c>
    c48a:	1e67      	subs	r7, r4, #1
    c48c:	2e00      	cmp	r6, #0
    c48e:	d133      	bne.n	c4f8 <__gethex+0x444>
    c490:	2f00      	cmp	r7, #0
    c492:	d004      	beq.n	c49e <__gethex+0x3ea>
    c494:	0039      	movs	r1, r7
    c496:	9805      	ldr	r0, [sp, #20]
    c498:	f7fe f8d8 	bl	a64c <__any_on>
    c49c:	0006      	movs	r6, r0
    c49e:	231f      	movs	r3, #31
    c4a0:	117a      	asrs	r2, r7, #5
    c4a2:	401f      	ands	r7, r3
    c4a4:	3b1e      	subs	r3, #30
    c4a6:	40bb      	lsls	r3, r7
    c4a8:	9908      	ldr	r1, [sp, #32]
    c4aa:	0092      	lsls	r2, r2, #2
    c4ac:	588a      	ldr	r2, [r1, r2]
    c4ae:	421a      	tst	r2, r3
    c4b0:	d001      	beq.n	c4b6 <__gethex+0x402>
    c4b2:	2302      	movs	r3, #2
    c4b4:	431e      	orrs	r6, r3
    c4b6:	0021      	movs	r1, r4
    c4b8:	9805      	ldr	r0, [sp, #20]
    c4ba:	f7ff fda5 	bl	c008 <rshift>
    c4be:	465b      	mov	r3, fp
    c4c0:	685b      	ldr	r3, [r3, #4]
    c4c2:	1b2d      	subs	r5, r5, r4
    c4c4:	9303      	str	r3, [sp, #12]
    c4c6:	2402      	movs	r4, #2
    c4c8:	e6b3      	b.n	c232 <__gethex+0x17e>
    c4ca:	9b02      	ldr	r3, [sp, #8]
    c4cc:	18ee      	adds	r6, r5, r3
    c4ce:	7833      	ldrb	r3, [r6, #0]
    c4d0:	0035      	movs	r5, r6
    c4d2:	5cfa      	ldrb	r2, [r7, r3]
    c4d4:	2a00      	cmp	r2, #0
    c4d6:	d100      	bne.n	c4da <__gethex+0x426>
    c4d8:	e638      	b.n	c14c <__gethex+0x98>
    c4da:	3501      	adds	r5, #1
    c4dc:	782b      	ldrb	r3, [r5, #0]
    c4de:	5cfa      	ldrb	r2, [r7, r3]
    c4e0:	2a00      	cmp	r2, #0
    c4e2:	d1fa      	bne.n	c4da <__gethex+0x426>
    c4e4:	e632      	b.n	c14c <__gethex+0x98>
    c4e6:	2301      	movs	r3, #1
    c4e8:	9a15      	ldr	r2, [sp, #84]	; 0x54
    c4ea:	1a9b      	subs	r3, r3, r2
    c4ec:	9315      	str	r3, [sp, #84]	; 0x54
    c4ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
    c4f0:	2b00      	cmp	r3, #0
    c4f2:	d100      	bne.n	c4f6 <__gethex+0x442>
    c4f4:	e6a9      	b.n	c24a <__gethex+0x196>
    c4f6:	e71b      	b.n	c330 <__gethex+0x27c>
    c4f8:	2601      	movs	r6, #1
    c4fa:	e7d0      	b.n	c49e <__gethex+0x3ea>
    c4fc:	9a15      	ldr	r2, [sp, #84]	; 0x54
    c4fe:	2a00      	cmp	r2, #0
    c500:	d100      	bne.n	c504 <__gethex+0x450>
    c502:	e779      	b.n	c3f8 <__gethex+0x344>
    c504:	9a09      	ldr	r2, [sp, #36]	; 0x24
    c506:	9908      	ldr	r1, [sp, #32]
    c508:	6013      	str	r3, [r2, #0]
    c50a:	2301      	movs	r3, #1
    c50c:	9a05      	ldr	r2, [sp, #20]
    c50e:	2462      	movs	r4, #98	; 0x62
    c510:	6113      	str	r3, [r2, #16]
    c512:	600b      	str	r3, [r1, #0]
    c514:	9b14      	ldr	r3, [sp, #80]	; 0x50
    c516:	601a      	str	r2, [r3, #0]
    c518:	e6c7      	b.n	c2aa <__gethex+0x1f6>
    c51a:	9b08      	ldr	r3, [sp, #32]
    c51c:	469a      	mov	sl, r3
    c51e:	2300      	movs	r3, #0
    c520:	4699      	mov	r9, r3
    c522:	e663      	b.n	c1ec <__gethex+0x138>
    c524:	2602      	movs	r6, #2
    c526:	e791      	b.n	c44c <__gethex+0x398>
    c528:	42a5      	cmp	r5, r4
    c52a:	d000      	beq.n	c52e <__gethex+0x47a>
    c52c:	e764      	b.n	c3f8 <__gethex+0x344>
    c52e:	2d01      	cmp	r5, #1
    c530:	dde8      	ble.n	c504 <__gethex+0x450>
    c532:	1e69      	subs	r1, r5, #1
    c534:	9805      	ldr	r0, [sp, #20]
    c536:	f7fe f889 	bl	a64c <__any_on>
    c53a:	2800      	cmp	r0, #0
    c53c:	d100      	bne.n	c540 <__gethex+0x48c>
    c53e:	e75b      	b.n	c3f8 <__gethex+0x344>
    c540:	465b      	mov	r3, fp
    c542:	685b      	ldr	r3, [r3, #4]
    c544:	e7de      	b.n	c504 <__gethex+0x450>
    c546:	9a15      	ldr	r2, [sp, #84]	; 0x54
    c548:	2a00      	cmp	r2, #0
    c54a:	d0db      	beq.n	c504 <__gethex+0x450>
    c54c:	e754      	b.n	c3f8 <__gethex+0x344>
    c54e:	9b05      	ldr	r3, [sp, #20]
    c550:	689b      	ldr	r3, [r3, #8]
    c552:	9301      	str	r3, [sp, #4]
    c554:	429f      	cmp	r7, r3
    c556:	da23      	bge.n	c5a0 <__gethex+0x4ec>
    c558:	003b      	movs	r3, r7
    c55a:	9808      	ldr	r0, [sp, #32]
    c55c:	9905      	ldr	r1, [sp, #20]
    c55e:	1c5a      	adds	r2, r3, #1
    c560:	468c      	mov	ip, r1
    c562:	610a      	str	r2, [r1, #16]
    c564:	2101      	movs	r1, #1
    c566:	3304      	adds	r3, #4
    c568:	009b      	lsls	r3, r3, #2
    c56a:	4463      	add	r3, ip
    c56c:	6059      	str	r1, [r3, #4]
    c56e:	2c02      	cmp	r4, #2
    c570:	d003      	beq.n	c57a <__gethex+0x4c6>
    c572:	4297      	cmp	r7, r2
    c574:	da00      	bge.n	c578 <__gethex+0x4c4>
    c576:	e702      	b.n	c37e <__gethex+0x2ca>
    c578:	e6f2      	b.n	c360 <__gethex+0x2ac>
    c57a:	465b      	mov	r3, fp
    c57c:	681b      	ldr	r3, [r3, #0]
    c57e:	2422      	movs	r4, #34	; 0x22
    c580:	3b01      	subs	r3, #1
    c582:	429d      	cmp	r5, r3
    c584:	d000      	beq.n	c588 <__gethex+0x4d4>
    c586:	e662      	b.n	c24e <__gethex+0x19a>
    c588:	231f      	movs	r3, #31
    c58a:	116a      	asrs	r2, r5, #5
    c58c:	401d      	ands	r5, r3
    c58e:	3b1e      	subs	r3, #30
    c590:	40ab      	lsls	r3, r5
    c592:	0092      	lsls	r2, r2, #2
    c594:	5814      	ldr	r4, [r2, r0]
    c596:	4023      	ands	r3, r4
    c598:	425c      	negs	r4, r3
    c59a:	415c      	adcs	r4, r3
    c59c:	3421      	adds	r4, #33	; 0x21
    c59e:	e656      	b.n	c24e <__gethex+0x19a>
    c5a0:	9b05      	ldr	r3, [sp, #20]
    c5a2:	685a      	ldr	r2, [r3, #4]
    c5a4:	9b06      	ldr	r3, [sp, #24]
    c5a6:	1c51      	adds	r1, r2, #1
    c5a8:	0018      	movs	r0, r3
    c5aa:	4699      	mov	r9, r3
    c5ac:	9201      	str	r2, [sp, #4]
    c5ae:	f7fd fbcf 	bl	9d50 <_Balloc>
    c5b2:	0006      	movs	r6, r0
    c5b4:	9b05      	ldr	r3, [sp, #20]
    c5b6:	300c      	adds	r0, #12
    c5b8:	691a      	ldr	r2, [r3, #16]
    c5ba:	330c      	adds	r3, #12
    c5bc:	9201      	str	r2, [sp, #4]
    c5be:	3202      	adds	r2, #2
    c5c0:	0019      	movs	r1, r3
    c5c2:	0092      	lsls	r2, r2, #2
    c5c4:	f7fd fb72 	bl	9cac <memcpy>
    c5c8:	4648      	mov	r0, r9
    c5ca:	9905      	ldr	r1, [sp, #20]
    c5cc:	f7fd fbe8 	bl	9da0 <_Bfree>
    c5d0:	0030      	movs	r0, r6
    c5d2:	6933      	ldr	r3, [r6, #16]
    c5d4:	3014      	adds	r0, #20
    c5d6:	9605      	str	r6, [sp, #20]
    c5d8:	e7c0      	b.n	c55c <__gethex+0x4a8>
    c5da:	46c0      	nop			; (mov r8, r8)

0000c5dc <__match>:
    c5dc:	b530      	push	{r4, r5, lr}
    c5de:	6802      	ldr	r2, [r0, #0]
    c5e0:	e008      	b.n	c5f4 <__match+0x18>
    c5e2:	7813      	ldrb	r3, [r2, #0]
    c5e4:	001d      	movs	r5, r3
    c5e6:	3d41      	subs	r5, #65	; 0x41
    c5e8:	2d19      	cmp	r5, #25
    c5ea:	d800      	bhi.n	c5ee <__match+0x12>
    c5ec:	3320      	adds	r3, #32
    c5ee:	3101      	adds	r1, #1
    c5f0:	42a3      	cmp	r3, r4
    c5f2:	d106      	bne.n	c602 <__match+0x26>
    c5f4:	780c      	ldrb	r4, [r1, #0]
    c5f6:	3201      	adds	r2, #1
    c5f8:	2c00      	cmp	r4, #0
    c5fa:	d1f2      	bne.n	c5e2 <__match+0x6>
    c5fc:	6002      	str	r2, [r0, #0]
    c5fe:	2001      	movs	r0, #1
    c600:	bd30      	pop	{r4, r5, pc}
    c602:	2000      	movs	r0, #0
    c604:	e7fc      	b.n	c600 <__match+0x24>
    c606:	46c0      	nop			; (mov r8, r8)

0000c608 <__hexnan>:
    c608:	b5f0      	push	{r4, r5, r6, r7, lr}
    c60a:	4657      	mov	r7, sl
    c60c:	46de      	mov	lr, fp
    c60e:	464e      	mov	r6, r9
    c610:	4645      	mov	r5, r8
    c612:	4692      	mov	sl, r2
    c614:	680a      	ldr	r2, [r1, #0]
    c616:	211f      	movs	r1, #31
    c618:	b5e0      	push	{r5, r6, r7, lr}
    c61a:	1153      	asrs	r3, r2, #5
    c61c:	b085      	sub	sp, #20
    c61e:	009b      	lsls	r3, r3, #2
    c620:	4011      	ands	r1, r2
    c622:	9001      	str	r0, [sp, #4]
    c624:	4453      	add	r3, sl
    c626:	9103      	str	r1, [sp, #12]
    c628:	2900      	cmp	r1, #0
    c62a:	d000      	beq.n	c62e <__hexnan+0x26>
    c62c:	3304      	adds	r3, #4
    c62e:	3b04      	subs	r3, #4
    c630:	469b      	mov	fp, r3
    c632:	2300      	movs	r3, #0
    c634:	465a      	mov	r2, fp
    c636:	6013      	str	r3, [r2, #0]
    c638:	9b01      	ldr	r3, [sp, #4]
    c63a:	465c      	mov	r4, fp
    c63c:	6818      	ldr	r0, [r3, #0]
    c63e:	2300      	movs	r3, #0
    c640:	7841      	ldrb	r1, [r0, #1]
    c642:	9300      	str	r3, [sp, #0]
    c644:	4b59      	ldr	r3, [pc, #356]	; (c7ac <__hexnan+0x1a4>)
    c646:	46d8      	mov	r8, fp
    c648:	2500      	movs	r5, #0
    c64a:	2200      	movs	r2, #0
    c64c:	4699      	mov	r9, r3
    c64e:	9402      	str	r4, [sp, #8]
    c650:	1c46      	adds	r6, r0, #1
    c652:	2900      	cmp	r1, #0
    c654:	d036      	beq.n	c6c4 <__hexnan+0xbc>
    c656:	464b      	mov	r3, r9
    c658:	5c5b      	ldrb	r3, [r3, r1]
    c65a:	2b00      	cmp	r3, #0
    c65c:	d158      	bne.n	c710 <__hexnan+0x108>
    c65e:	2920      	cmp	r1, #32
    c660:	d868      	bhi.n	c734 <__hexnan+0x12c>
    c662:	9b00      	ldr	r3, [sp, #0]
    c664:	429a      	cmp	r2, r3
    c666:	dd28      	ble.n	c6ba <__hexnan+0xb2>
    c668:	4544      	cmp	r4, r8
    c66a:	d21c      	bcs.n	c6a6 <__hexnan+0x9e>
    c66c:	2d07      	cmp	r5, #7
    c66e:	dc1a      	bgt.n	c6a6 <__hexnan+0x9e>
    c670:	2308      	movs	r3, #8
    c672:	1b5d      	subs	r5, r3, r5
    c674:	00ad      	lsls	r5, r5, #2
    c676:	3318      	adds	r3, #24
    c678:	1b5b      	subs	r3, r3, r5
    c67a:	469c      	mov	ip, r3
    c67c:	4661      	mov	r1, ip
    c67e:	6823      	ldr	r3, [r4, #0]
    c680:	0020      	movs	r0, r4
    c682:	4647      	mov	r7, r8
    c684:	4694      	mov	ip, r2
    c686:	46a0      	mov	r8, r4
    c688:	000a      	movs	r2, r1
    c68a:	001c      	movs	r4, r3
    c68c:	6841      	ldr	r1, [r0, #4]
    c68e:	000b      	movs	r3, r1
    c690:	4093      	lsls	r3, r2
    c692:	40e9      	lsrs	r1, r5
    c694:	4323      	orrs	r3, r4
    c696:	c008      	stmia	r0!, {r3}
    c698:	000c      	movs	r4, r1
    c69a:	6001      	str	r1, [r0, #0]
    c69c:	4287      	cmp	r7, r0
    c69e:	d8f5      	bhi.n	c68c <__hexnan+0x84>
    c6a0:	4644      	mov	r4, r8
    c6a2:	4662      	mov	r2, ip
    c6a4:	46b8      	mov	r8, r7
    c6a6:	2508      	movs	r5, #8
    c6a8:	4554      	cmp	r4, sl
    c6aa:	d906      	bls.n	c6ba <__hexnan+0xb2>
    c6ac:	1f23      	subs	r3, r4, #4
    c6ae:	2100      	movs	r1, #0
    c6b0:	4698      	mov	r8, r3
    c6b2:	001c      	movs	r4, r3
    c6b4:	2500      	movs	r5, #0
    c6b6:	6019      	str	r1, [r3, #0]
    c6b8:	9200      	str	r2, [sp, #0]
    c6ba:	0030      	movs	r0, r6
    c6bc:	7841      	ldrb	r1, [r0, #1]
    c6be:	1c46      	adds	r6, r0, #1
    c6c0:	2900      	cmp	r1, #0
    c6c2:	d1c8      	bne.n	c656 <__hexnan+0x4e>
    c6c4:	9b02      	ldr	r3, [sp, #8]
    c6c6:	469c      	mov	ip, r3
    c6c8:	2a00      	cmp	r2, #0
    c6ca:	d037      	beq.n	c73c <__hexnan+0x134>
    c6cc:	4544      	cmp	r4, r8
    c6ce:	d201      	bcs.n	c6d4 <__hexnan+0xcc>
    c6d0:	2d07      	cmp	r5, #7
    c6d2:	dd57      	ble.n	c784 <__hexnan+0x17c>
    c6d4:	4554      	cmp	r4, sl
    c6d6:	d939      	bls.n	c74c <__hexnan+0x144>
    c6d8:	4653      	mov	r3, sl
    c6da:	4659      	mov	r1, fp
    c6dc:	cc04      	ldmia	r4!, {r2}
    c6de:	601a      	str	r2, [r3, #0]
    c6e0:	3304      	adds	r3, #4
    c6e2:	42a1      	cmp	r1, r4
    c6e4:	d2fa      	bcs.n	c6dc <__hexnan+0xd4>
    c6e6:	2200      	movs	r2, #0
    c6e8:	c304      	stmia	r3!, {r2}
    c6ea:	4299      	cmp	r1, r3
    c6ec:	d2fc      	bcs.n	c6e8 <__hexnan+0xe0>
    c6ee:	468b      	mov	fp, r1
    c6f0:	680b      	ldr	r3, [r1, #0]
    c6f2:	2b00      	cmp	r3, #0
    c6f4:	d10a      	bne.n	c70c <__hexnan+0x104>
    c6f6:	4663      	mov	r3, ip
    c6f8:	4652      	mov	r2, sl
    c6fa:	45da      	cmp	sl, fp
    c6fc:	d102      	bne.n	c704 <__hexnan+0xfc>
    c6fe:	e035      	b.n	c76c <__hexnan+0x164>
    c700:	429a      	cmp	r2, r3
    c702:	d032      	beq.n	c76a <__hexnan+0x162>
    c704:	3b04      	subs	r3, #4
    c706:	6819      	ldr	r1, [r3, #0]
    c708:	2900      	cmp	r1, #0
    c70a:	d0f9      	beq.n	c700 <__hexnan+0xf8>
    c70c:	2005      	movs	r0, #5
    c70e:	e016      	b.n	c73e <__hexnan+0x136>
    c710:	3501      	adds	r5, #1
    c712:	3201      	adds	r2, #1
    c714:	2d08      	cmp	r5, #8
    c716:	dd05      	ble.n	c724 <__hexnan+0x11c>
    c718:	4554      	cmp	r4, sl
    c71a:	d9ce      	bls.n	c6ba <__hexnan+0xb2>
    c71c:	2100      	movs	r1, #0
    c71e:	2501      	movs	r5, #1
    c720:	3c04      	subs	r4, #4
    c722:	6021      	str	r1, [r4, #0]
    c724:	200f      	movs	r0, #15
    c726:	6821      	ldr	r1, [r4, #0]
    c728:	4003      	ands	r3, r0
    c72a:	0109      	lsls	r1, r1, #4
    c72c:	430b      	orrs	r3, r1
    c72e:	6023      	str	r3, [r4, #0]
    c730:	0030      	movs	r0, r6
    c732:	e7c3      	b.n	c6bc <__hexnan+0xb4>
    c734:	9b02      	ldr	r3, [sp, #8]
    c736:	469c      	mov	ip, r3
    c738:	2929      	cmp	r1, #41	; 0x29
    c73a:	d01f      	beq.n	c77c <__hexnan+0x174>
    c73c:	2004      	movs	r0, #4
    c73e:	b005      	add	sp, #20
    c740:	bc3c      	pop	{r2, r3, r4, r5}
    c742:	4690      	mov	r8, r2
    c744:	4699      	mov	r9, r3
    c746:	46a2      	mov	sl, r4
    c748:	46ab      	mov	fp, r5
    c74a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c74c:	9b03      	ldr	r3, [sp, #12]
    c74e:	2b00      	cmp	r3, #0
    c750:	d011      	beq.n	c776 <__hexnan+0x16e>
    c752:	2220      	movs	r2, #32
    c754:	9b03      	ldr	r3, [sp, #12]
    c756:	1ad2      	subs	r2, r2, r3
    c758:	2301      	movs	r3, #1
    c75a:	425b      	negs	r3, r3
    c75c:	40d3      	lsrs	r3, r2
    c75e:	465a      	mov	r2, fp
    c760:	6812      	ldr	r2, [r2, #0]
    c762:	4013      	ands	r3, r2
    c764:	465a      	mov	r2, fp
    c766:	6013      	str	r3, [r2, #0]
    c768:	e7c3      	b.n	c6f2 <__hexnan+0xea>
    c76a:	4692      	mov	sl, r2
    c76c:	2301      	movs	r3, #1
    c76e:	4652      	mov	r2, sl
    c770:	2005      	movs	r0, #5
    c772:	6013      	str	r3, [r2, #0]
    c774:	e7e3      	b.n	c73e <__hexnan+0x136>
    c776:	465b      	mov	r3, fp
    c778:	681b      	ldr	r3, [r3, #0]
    c77a:	e7ba      	b.n	c6f2 <__hexnan+0xea>
    c77c:	9b01      	ldr	r3, [sp, #4]
    c77e:	3002      	adds	r0, #2
    c780:	6018      	str	r0, [r3, #0]
    c782:	e7a1      	b.n	c6c8 <__hexnan+0xc0>
    c784:	2308      	movs	r3, #8
    c786:	1b5d      	subs	r5, r3, r5
    c788:	6823      	ldr	r3, [r4, #0]
    c78a:	2620      	movs	r6, #32
    c78c:	0021      	movs	r1, r4
    c78e:	4647      	mov	r7, r8
    c790:	001a      	movs	r2, r3
    c792:	00ad      	lsls	r5, r5, #2
    c794:	1b76      	subs	r6, r6, r5
    c796:	6848      	ldr	r0, [r1, #4]
    c798:	0003      	movs	r3, r0
    c79a:	40b3      	lsls	r3, r6
    c79c:	4313      	orrs	r3, r2
    c79e:	0002      	movs	r2, r0
    c7a0:	40ea      	lsrs	r2, r5
    c7a2:	c108      	stmia	r1!, {r3}
    c7a4:	600a      	str	r2, [r1, #0]
    c7a6:	428f      	cmp	r7, r1
    c7a8:	d8f5      	bhi.n	c796 <__hexnan+0x18e>
    c7aa:	e793      	b.n	c6d4 <__hexnan+0xcc>
    c7ac:	0000eefc 	.word	0x0000eefc

0000c7b0 <memmove>:
    c7b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    c7b2:	4288      	cmp	r0, r1
    c7b4:	d90a      	bls.n	c7cc <memmove+0x1c>
    c7b6:	188b      	adds	r3, r1, r2
    c7b8:	4298      	cmp	r0, r3
    c7ba:	d207      	bcs.n	c7cc <memmove+0x1c>
    c7bc:	1e53      	subs	r3, r2, #1
    c7be:	2a00      	cmp	r2, #0
    c7c0:	d003      	beq.n	c7ca <memmove+0x1a>
    c7c2:	5cca      	ldrb	r2, [r1, r3]
    c7c4:	54c2      	strb	r2, [r0, r3]
    c7c6:	3b01      	subs	r3, #1
    c7c8:	d2fb      	bcs.n	c7c2 <memmove+0x12>
    c7ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c7cc:	0005      	movs	r5, r0
    c7ce:	2a0f      	cmp	r2, #15
    c7d0:	d808      	bhi.n	c7e4 <memmove+0x34>
    c7d2:	2a00      	cmp	r2, #0
    c7d4:	d0f9      	beq.n	c7ca <memmove+0x1a>
    c7d6:	2300      	movs	r3, #0
    c7d8:	5ccc      	ldrb	r4, [r1, r3]
    c7da:	54ec      	strb	r4, [r5, r3]
    c7dc:	3301      	adds	r3, #1
    c7de:	4293      	cmp	r3, r2
    c7e0:	d1fa      	bne.n	c7d8 <memmove+0x28>
    c7e2:	e7f2      	b.n	c7ca <memmove+0x1a>
    c7e4:	000b      	movs	r3, r1
    c7e6:	4303      	orrs	r3, r0
    c7e8:	079b      	lsls	r3, r3, #30
    c7ea:	d12d      	bne.n	c848 <memmove+0x98>
    c7ec:	0015      	movs	r5, r2
    c7ee:	000c      	movs	r4, r1
    c7f0:	0003      	movs	r3, r0
    c7f2:	3d10      	subs	r5, #16
    c7f4:	092f      	lsrs	r7, r5, #4
    c7f6:	3701      	adds	r7, #1
    c7f8:	013f      	lsls	r7, r7, #4
    c7fa:	19c7      	adds	r7, r0, r7
    c7fc:	6826      	ldr	r6, [r4, #0]
    c7fe:	601e      	str	r6, [r3, #0]
    c800:	6866      	ldr	r6, [r4, #4]
    c802:	605e      	str	r6, [r3, #4]
    c804:	68a6      	ldr	r6, [r4, #8]
    c806:	609e      	str	r6, [r3, #8]
    c808:	68e6      	ldr	r6, [r4, #12]
    c80a:	3410      	adds	r4, #16
    c80c:	60de      	str	r6, [r3, #12]
    c80e:	3310      	adds	r3, #16
    c810:	429f      	cmp	r7, r3
    c812:	d1f3      	bne.n	c7fc <memmove+0x4c>
    c814:	240f      	movs	r4, #15
    c816:	43a5      	bics	r5, r4
    c818:	3510      	adds	r5, #16
    c81a:	1949      	adds	r1, r1, r5
    c81c:	4014      	ands	r4, r2
    c81e:	1945      	adds	r5, r0, r5
    c820:	2c03      	cmp	r4, #3
    c822:	d913      	bls.n	c84c <memmove+0x9c>
    c824:	2300      	movs	r3, #0
    c826:	1f27      	subs	r7, r4, #4
    c828:	08be      	lsrs	r6, r7, #2
    c82a:	3601      	adds	r6, #1
    c82c:	00b6      	lsls	r6, r6, #2
    c82e:	58cc      	ldr	r4, [r1, r3]
    c830:	50ec      	str	r4, [r5, r3]
    c832:	3304      	adds	r3, #4
    c834:	42b3      	cmp	r3, r6
    c836:	d1fa      	bne.n	c82e <memmove+0x7e>
    c838:	2603      	movs	r6, #3
    c83a:	43b7      	bics	r7, r6
    c83c:	1d3c      	adds	r4, r7, #4
    c83e:	1909      	adds	r1, r1, r4
    c840:	192d      	adds	r5, r5, r4
    c842:	4032      	ands	r2, r6
    c844:	d1c7      	bne.n	c7d6 <memmove+0x26>
    c846:	e7c0      	b.n	c7ca <memmove+0x1a>
    c848:	0005      	movs	r5, r0
    c84a:	e7c4      	b.n	c7d6 <memmove+0x26>
    c84c:	0022      	movs	r2, r4
    c84e:	e7c0      	b.n	c7d2 <memmove+0x22>

0000c850 <_realloc_r>:
    c850:	b5f0      	push	{r4, r5, r6, r7, lr}
    c852:	464e      	mov	r6, r9
    c854:	4645      	mov	r5, r8
    c856:	46de      	mov	lr, fp
    c858:	4657      	mov	r7, sl
    c85a:	b5e0      	push	{r5, r6, r7, lr}
    c85c:	b085      	sub	sp, #20
    c85e:	9001      	str	r0, [sp, #4]
    c860:	000e      	movs	r6, r1
    c862:	0015      	movs	r5, r2
    c864:	2900      	cmp	r1, #0
    c866:	d100      	bne.n	c86a <_realloc_r+0x1a>
    c868:	e09e      	b.n	c9a8 <_realloc_r+0x158>
    c86a:	0037      	movs	r7, r6
    c86c:	9801      	ldr	r0, [sp, #4]
    c86e:	3f08      	subs	r7, #8
    c870:	f7fd fa5e 	bl	9d30 <__malloc_lock>
    c874:	687a      	ldr	r2, [r7, #4]
    c876:	2303      	movs	r3, #3
    c878:	0014      	movs	r4, r2
    c87a:	439c      	bics	r4, r3
    c87c:	002b      	movs	r3, r5
    c87e:	330b      	adds	r3, #11
    c880:	46b9      	mov	r9, r7
    c882:	2b16      	cmp	r3, #22
    c884:	d847      	bhi.n	c916 <_realloc_r+0xc6>
    c886:	2110      	movs	r1, #16
    c888:	2310      	movs	r3, #16
    c88a:	4688      	mov	r8, r1
    c88c:	4545      	cmp	r5, r8
    c88e:	d846      	bhi.n	c91e <_realloc_r+0xce>
    c890:	429c      	cmp	r4, r3
    c892:	da49      	bge.n	c928 <_realloc_r+0xd8>
    c894:	49cc      	ldr	r1, [pc, #816]	; (cbc8 <_realloc_r+0x378>)
    c896:	1938      	adds	r0, r7, r4
    c898:	468b      	mov	fp, r1
    c89a:	6889      	ldr	r1, [r1, #8]
    c89c:	9002      	str	r0, [sp, #8]
    c89e:	4288      	cmp	r0, r1
    c8a0:	d100      	bne.n	c8a4 <_realloc_r+0x54>
    c8a2:	e0c2      	b.n	ca2a <_realloc_r+0x1da>
    c8a4:	2101      	movs	r1, #1
    c8a6:	468a      	mov	sl, r1
    c8a8:	6840      	ldr	r0, [r0, #4]
    c8aa:	0001      	movs	r1, r0
    c8ac:	9003      	str	r0, [sp, #12]
    c8ae:	4650      	mov	r0, sl
    c8b0:	4381      	bics	r1, r0
    c8b2:	468c      	mov	ip, r1
    c8b4:	9902      	ldr	r1, [sp, #8]
    c8b6:	468b      	mov	fp, r1
    c8b8:	44dc      	add	ip, fp
    c8ba:	4661      	mov	r1, ip
    c8bc:	6849      	ldr	r1, [r1, #4]
    c8be:	4201      	tst	r1, r0
    c8c0:	d04d      	beq.n	c95e <_realloc_r+0x10e>
    c8c2:	4210      	tst	r0, r2
    c8c4:	d100      	bne.n	c8c8 <_realloc_r+0x78>
    c8c6:	e0a2      	b.n	ca0e <_realloc_r+0x1be>
    c8c8:	0029      	movs	r1, r5
    c8ca:	9801      	ldr	r0, [sp, #4]
    c8cc:	f7fc fe8c 	bl	95e8 <_malloc_r>
    c8d0:	1e05      	subs	r5, r0, #0
    c8d2:	d039      	beq.n	c948 <_realloc_r+0xf8>
    c8d4:	2301      	movs	r3, #1
    c8d6:	0002      	movs	r2, r0
    c8d8:	6879      	ldr	r1, [r7, #4]
    c8da:	3a08      	subs	r2, #8
    c8dc:	4399      	bics	r1, r3
    c8de:	187f      	adds	r7, r7, r1
    c8e0:	42ba      	cmp	r2, r7
    c8e2:	d100      	bne.n	c8e6 <_realloc_r+0x96>
    c8e4:	e12e      	b.n	cb44 <_realloc_r+0x2f4>
    c8e6:	1f22      	subs	r2, r4, #4
    c8e8:	2a24      	cmp	r2, #36	; 0x24
    c8ea:	d900      	bls.n	c8ee <_realloc_r+0x9e>
    c8ec:	e114      	b.n	cb18 <_realloc_r+0x2c8>
    c8ee:	2a13      	cmp	r2, #19
    c8f0:	d900      	bls.n	c8f4 <_realloc_r+0xa4>
    c8f2:	e0e8      	b.n	cac6 <_realloc_r+0x276>
    c8f4:	0003      	movs	r3, r0
    c8f6:	0032      	movs	r2, r6
    c8f8:	6811      	ldr	r1, [r2, #0]
    c8fa:	6019      	str	r1, [r3, #0]
    c8fc:	6851      	ldr	r1, [r2, #4]
    c8fe:	6059      	str	r1, [r3, #4]
    c900:	6892      	ldr	r2, [r2, #8]
    c902:	609a      	str	r2, [r3, #8]
    c904:	9c01      	ldr	r4, [sp, #4]
    c906:	0031      	movs	r1, r6
    c908:	0020      	movs	r0, r4
    c90a:	f7fc fd4d 	bl	93a8 <_free_r>
    c90e:	0020      	movs	r0, r4
    c910:	f7fd fa16 	bl	9d40 <__malloc_unlock>
    c914:	e01b      	b.n	c94e <_realloc_r+0xfe>
    c916:	2107      	movs	r1, #7
    c918:	438b      	bics	r3, r1
    c91a:	4698      	mov	r8, r3
    c91c:	d5b6      	bpl.n	c88c <_realloc_r+0x3c>
    c91e:	230c      	movs	r3, #12
    c920:	9a01      	ldr	r2, [sp, #4]
    c922:	2500      	movs	r5, #0
    c924:	6013      	str	r3, [r2, #0]
    c926:	e012      	b.n	c94e <_realloc_r+0xfe>
    c928:	0035      	movs	r5, r6
    c92a:	4643      	mov	r3, r8
    c92c:	1ae3      	subs	r3, r4, r3
    c92e:	2b0f      	cmp	r3, #15
    c930:	d825      	bhi.n	c97e <_realloc_r+0x12e>
    c932:	464b      	mov	r3, r9
    c934:	2201      	movs	r2, #1
    c936:	4649      	mov	r1, r9
    c938:	685b      	ldr	r3, [r3, #4]
    c93a:	4013      	ands	r3, r2
    c93c:	4323      	orrs	r3, r4
    c93e:	604b      	str	r3, [r1, #4]
    c940:	444c      	add	r4, r9
    c942:	6863      	ldr	r3, [r4, #4]
    c944:	431a      	orrs	r2, r3
    c946:	6062      	str	r2, [r4, #4]
    c948:	9801      	ldr	r0, [sp, #4]
    c94a:	f7fd f9f9 	bl	9d40 <__malloc_unlock>
    c94e:	0028      	movs	r0, r5
    c950:	b005      	add	sp, #20
    c952:	bc3c      	pop	{r2, r3, r4, r5}
    c954:	4690      	mov	r8, r2
    c956:	4699      	mov	r9, r3
    c958:	46a2      	mov	sl, r4
    c95a:	46ab      	mov	fp, r5
    c95c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c95e:	2103      	movs	r1, #3
    c960:	9803      	ldr	r0, [sp, #12]
    c962:	468c      	mov	ip, r1
    c964:	4388      	bics	r0, r1
    c966:	1821      	adds	r1, r4, r0
    c968:	468b      	mov	fp, r1
    c96a:	4299      	cmp	r1, r3
    c96c:	db21      	blt.n	c9b2 <_realloc_r+0x162>
    c96e:	9a02      	ldr	r2, [sp, #8]
    c970:	0035      	movs	r5, r6
    c972:	68d3      	ldr	r3, [r2, #12]
    c974:	6892      	ldr	r2, [r2, #8]
    c976:	465c      	mov	r4, fp
    c978:	60d3      	str	r3, [r2, #12]
    c97a:	609a      	str	r2, [r3, #8]
    c97c:	e7d5      	b.n	c92a <_realloc_r+0xda>
    c97e:	464a      	mov	r2, r9
    c980:	2001      	movs	r0, #1
    c982:	4646      	mov	r6, r8
    c984:	6852      	ldr	r2, [r2, #4]
    c986:	4649      	mov	r1, r9
    c988:	4002      	ands	r2, r0
    c98a:	4332      	orrs	r2, r6
    c98c:	464e      	mov	r6, r9
    c98e:	4441      	add	r1, r8
    c990:	4303      	orrs	r3, r0
    c992:	6072      	str	r2, [r6, #4]
    c994:	444c      	add	r4, r9
    c996:	604b      	str	r3, [r1, #4]
    c998:	6863      	ldr	r3, [r4, #4]
    c99a:	3108      	adds	r1, #8
    c99c:	4318      	orrs	r0, r3
    c99e:	6060      	str	r0, [r4, #4]
    c9a0:	9801      	ldr	r0, [sp, #4]
    c9a2:	f7fc fd01 	bl	93a8 <_free_r>
    c9a6:	e7cf      	b.n	c948 <_realloc_r+0xf8>
    c9a8:	0011      	movs	r1, r2
    c9aa:	f7fc fe1d 	bl	95e8 <_malloc_r>
    c9ae:	0005      	movs	r5, r0
    c9b0:	e7cd      	b.n	c94e <_realloc_r+0xfe>
    c9b2:	4651      	mov	r1, sl
    c9b4:	4211      	tst	r1, r2
    c9b6:	d000      	beq.n	c9ba <_realloc_r+0x16a>
    c9b8:	e786      	b.n	c8c8 <_realloc_r+0x78>
    c9ba:	4661      	mov	r1, ip
    c9bc:	683a      	ldr	r2, [r7, #0]
    c9be:	1aba      	subs	r2, r7, r2
    c9c0:	4692      	mov	sl, r2
    c9c2:	6852      	ldr	r2, [r2, #4]
    c9c4:	438a      	bics	r2, r1
    c9c6:	1880      	adds	r0, r0, r2
    c9c8:	4683      	mov	fp, r0
    c9ca:	44a3      	add	fp, r4
    c9cc:	459b      	cmp	fp, r3
    c9ce:	db26      	blt.n	ca1e <_realloc_r+0x1ce>
    c9d0:	9a02      	ldr	r2, [sp, #8]
    c9d2:	68d3      	ldr	r3, [r2, #12]
    c9d4:	6892      	ldr	r2, [r2, #8]
    c9d6:	60d3      	str	r3, [r2, #12]
    c9d8:	609a      	str	r2, [r3, #8]
    c9da:	4653      	mov	r3, sl
    c9dc:	4652      	mov	r2, sl
    c9de:	4655      	mov	r5, sl
    c9e0:	6892      	ldr	r2, [r2, #8]
    c9e2:	68db      	ldr	r3, [r3, #12]
    c9e4:	3508      	adds	r5, #8
    c9e6:	60d3      	str	r3, [r2, #12]
    c9e8:	609a      	str	r2, [r3, #8]
    c9ea:	1f22      	subs	r2, r4, #4
    c9ec:	2a24      	cmp	r2, #36	; 0x24
    c9ee:	d900      	bls.n	c9f2 <_realloc_r+0x1a2>
    c9f0:	e096      	b.n	cb20 <_realloc_r+0x2d0>
    c9f2:	2a13      	cmp	r2, #19
    c9f4:	d972      	bls.n	cadc <_realloc_r+0x28c>
    c9f6:	4653      	mov	r3, sl
    c9f8:	6831      	ldr	r1, [r6, #0]
    c9fa:	6099      	str	r1, [r3, #8]
    c9fc:	6871      	ldr	r1, [r6, #4]
    c9fe:	60d9      	str	r1, [r3, #12]
    ca00:	2a1b      	cmp	r2, #27
    ca02:	d900      	bls.n	ca06 <_realloc_r+0x1b6>
    ca04:	e0a4      	b.n	cb50 <_realloc_r+0x300>
    ca06:	0032      	movs	r2, r6
    ca08:	3310      	adds	r3, #16
    ca0a:	3208      	adds	r2, #8
    ca0c:	e068      	b.n	cae0 <_realloc_r+0x290>
    ca0e:	683a      	ldr	r2, [r7, #0]
    ca10:	1aba      	subs	r2, r7, r2
    ca12:	4692      	mov	sl, r2
    ca14:	4651      	mov	r1, sl
    ca16:	2203      	movs	r2, #3
    ca18:	6849      	ldr	r1, [r1, #4]
    ca1a:	4391      	bics	r1, r2
    ca1c:	000a      	movs	r2, r1
    ca1e:	4693      	mov	fp, r2
    ca20:	44a3      	add	fp, r4
    ca22:	459b      	cmp	fp, r3
    ca24:	da00      	bge.n	ca28 <_realloc_r+0x1d8>
    ca26:	e74f      	b.n	c8c8 <_realloc_r+0x78>
    ca28:	e7d7      	b.n	c9da <_realloc_r+0x18a>
    ca2a:	2003      	movs	r0, #3
    ca2c:	9902      	ldr	r1, [sp, #8]
    ca2e:	4684      	mov	ip, r0
    ca30:	6849      	ldr	r1, [r1, #4]
    ca32:	4381      	bics	r1, r0
    ca34:	4640      	mov	r0, r8
    ca36:	1909      	adds	r1, r1, r4
    ca38:	3010      	adds	r0, #16
    ca3a:	9002      	str	r0, [sp, #8]
    ca3c:	4281      	cmp	r1, r0
    ca3e:	da58      	bge.n	caf2 <_realloc_r+0x2a2>
    ca40:	07d2      	lsls	r2, r2, #31
    ca42:	d500      	bpl.n	ca46 <_realloc_r+0x1f6>
    ca44:	e740      	b.n	c8c8 <_realloc_r+0x78>
    ca46:	4660      	mov	r0, ip
    ca48:	683a      	ldr	r2, [r7, #0]
    ca4a:	1aba      	subs	r2, r7, r2
    ca4c:	4692      	mov	sl, r2
    ca4e:	6852      	ldr	r2, [r2, #4]
    ca50:	4382      	bics	r2, r0
    ca52:	9802      	ldr	r0, [sp, #8]
    ca54:	1851      	adds	r1, r2, r1
    ca56:	9103      	str	r1, [sp, #12]
    ca58:	4288      	cmp	r0, r1
    ca5a:	dce0      	bgt.n	ca1e <_realloc_r+0x1ce>
    ca5c:	4653      	mov	r3, sl
    ca5e:	4652      	mov	r2, sl
    ca60:	4655      	mov	r5, sl
    ca62:	6892      	ldr	r2, [r2, #8]
    ca64:	68db      	ldr	r3, [r3, #12]
    ca66:	3508      	adds	r5, #8
    ca68:	60d3      	str	r3, [r2, #12]
    ca6a:	609a      	str	r2, [r3, #8]
    ca6c:	1f22      	subs	r2, r4, #4
    ca6e:	2a24      	cmp	r2, #36	; 0x24
    ca70:	d900      	bls.n	ca74 <_realloc_r+0x224>
    ca72:	e08e      	b.n	cb92 <_realloc_r+0x342>
    ca74:	2a13      	cmp	r2, #19
    ca76:	d800      	bhi.n	ca7a <_realloc_r+0x22a>
    ca78:	e088      	b.n	cb8c <_realloc_r+0x33c>
    ca7a:	4653      	mov	r3, sl
    ca7c:	6831      	ldr	r1, [r6, #0]
    ca7e:	6099      	str	r1, [r3, #8]
    ca80:	6871      	ldr	r1, [r6, #4]
    ca82:	60d9      	str	r1, [r3, #12]
    ca84:	2a1b      	cmp	r2, #27
    ca86:	d900      	bls.n	ca8a <_realloc_r+0x23a>
    ca88:	e088      	b.n	cb9c <_realloc_r+0x34c>
    ca8a:	0032      	movs	r2, r6
    ca8c:	3310      	adds	r3, #16
    ca8e:	3208      	adds	r2, #8
    ca90:	6811      	ldr	r1, [r2, #0]
    ca92:	6019      	str	r1, [r3, #0]
    ca94:	6851      	ldr	r1, [r2, #4]
    ca96:	6059      	str	r1, [r3, #4]
    ca98:	6892      	ldr	r2, [r2, #8]
    ca9a:	609a      	str	r2, [r3, #8]
    ca9c:	4651      	mov	r1, sl
    ca9e:	465b      	mov	r3, fp
    caa0:	4642      	mov	r2, r8
    caa2:	4441      	add	r1, r8
    caa4:	6099      	str	r1, [r3, #8]
    caa6:	9b03      	ldr	r3, [sp, #12]
    caa8:	9801      	ldr	r0, [sp, #4]
    caaa:	1a9a      	subs	r2, r3, r2
    caac:	2301      	movs	r3, #1
    caae:	431a      	orrs	r2, r3
    cab0:	604a      	str	r2, [r1, #4]
    cab2:	4652      	mov	r2, sl
    cab4:	6852      	ldr	r2, [r2, #4]
    cab6:	4013      	ands	r3, r2
    cab8:	4642      	mov	r2, r8
    caba:	4313      	orrs	r3, r2
    cabc:	4652      	mov	r2, sl
    cabe:	6053      	str	r3, [r2, #4]
    cac0:	f7fd f93e 	bl	9d40 <__malloc_unlock>
    cac4:	e743      	b.n	c94e <_realloc_r+0xfe>
    cac6:	6833      	ldr	r3, [r6, #0]
    cac8:	6003      	str	r3, [r0, #0]
    caca:	6873      	ldr	r3, [r6, #4]
    cacc:	6043      	str	r3, [r0, #4]
    cace:	2a1b      	cmp	r2, #27
    cad0:	d82d      	bhi.n	cb2e <_realloc_r+0x2de>
    cad2:	0003      	movs	r3, r0
    cad4:	0032      	movs	r2, r6
    cad6:	3308      	adds	r3, #8
    cad8:	3208      	adds	r2, #8
    cada:	e70d      	b.n	c8f8 <_realloc_r+0xa8>
    cadc:	002b      	movs	r3, r5
    cade:	0032      	movs	r2, r6
    cae0:	6811      	ldr	r1, [r2, #0]
    cae2:	465c      	mov	r4, fp
    cae4:	6019      	str	r1, [r3, #0]
    cae6:	6851      	ldr	r1, [r2, #4]
    cae8:	46d1      	mov	r9, sl
    caea:	6059      	str	r1, [r3, #4]
    caec:	6892      	ldr	r2, [r2, #8]
    caee:	609a      	str	r2, [r3, #8]
    caf0:	e71b      	b.n	c92a <_realloc_r+0xda>
    caf2:	4643      	mov	r3, r8
    caf4:	18fa      	adds	r2, r7, r3
    caf6:	465b      	mov	r3, fp
    caf8:	609a      	str	r2, [r3, #8]
    cafa:	4643      	mov	r3, r8
    cafc:	1ac9      	subs	r1, r1, r3
    cafe:	2301      	movs	r3, #1
    cb00:	4319      	orrs	r1, r3
    cb02:	6051      	str	r1, [r2, #4]
    cb04:	687a      	ldr	r2, [r7, #4]
    cb06:	9801      	ldr	r0, [sp, #4]
    cb08:	4013      	ands	r3, r2
    cb0a:	4642      	mov	r2, r8
    cb0c:	4313      	orrs	r3, r2
    cb0e:	607b      	str	r3, [r7, #4]
    cb10:	f7fd f916 	bl	9d40 <__malloc_unlock>
    cb14:	0035      	movs	r5, r6
    cb16:	e71a      	b.n	c94e <_realloc_r+0xfe>
    cb18:	0031      	movs	r1, r6
    cb1a:	f7ff fe49 	bl	c7b0 <memmove>
    cb1e:	e6f1      	b.n	c904 <_realloc_r+0xb4>
    cb20:	0031      	movs	r1, r6
    cb22:	0028      	movs	r0, r5
    cb24:	f7ff fe44 	bl	c7b0 <memmove>
    cb28:	465c      	mov	r4, fp
    cb2a:	46d1      	mov	r9, sl
    cb2c:	e6fd      	b.n	c92a <_realloc_r+0xda>
    cb2e:	68b3      	ldr	r3, [r6, #8]
    cb30:	6083      	str	r3, [r0, #8]
    cb32:	68f3      	ldr	r3, [r6, #12]
    cb34:	60c3      	str	r3, [r0, #12]
    cb36:	2a24      	cmp	r2, #36	; 0x24
    cb38:	d015      	beq.n	cb66 <_realloc_r+0x316>
    cb3a:	0003      	movs	r3, r0
    cb3c:	0032      	movs	r2, r6
    cb3e:	3310      	adds	r3, #16
    cb40:	3210      	adds	r2, #16
    cb42:	e6d9      	b.n	c8f8 <_realloc_r+0xa8>
    cb44:	6853      	ldr	r3, [r2, #4]
    cb46:	2203      	movs	r2, #3
    cb48:	4393      	bics	r3, r2
    cb4a:	18e4      	adds	r4, r4, r3
    cb4c:	0035      	movs	r5, r6
    cb4e:	e6ec      	b.n	c92a <_realloc_r+0xda>
    cb50:	4653      	mov	r3, sl
    cb52:	68b1      	ldr	r1, [r6, #8]
    cb54:	6119      	str	r1, [r3, #16]
    cb56:	68f1      	ldr	r1, [r6, #12]
    cb58:	6159      	str	r1, [r3, #20]
    cb5a:	2a24      	cmp	r2, #36	; 0x24
    cb5c:	d00c      	beq.n	cb78 <_realloc_r+0x328>
    cb5e:	0032      	movs	r2, r6
    cb60:	3318      	adds	r3, #24
    cb62:	3210      	adds	r2, #16
    cb64:	e7bc      	b.n	cae0 <_realloc_r+0x290>
    cb66:	6933      	ldr	r3, [r6, #16]
    cb68:	0032      	movs	r2, r6
    cb6a:	6103      	str	r3, [r0, #16]
    cb6c:	0003      	movs	r3, r0
    cb6e:	6971      	ldr	r1, [r6, #20]
    cb70:	3318      	adds	r3, #24
    cb72:	3218      	adds	r2, #24
    cb74:	6141      	str	r1, [r0, #20]
    cb76:	e6bf      	b.n	c8f8 <_realloc_r+0xa8>
    cb78:	4653      	mov	r3, sl
    cb7a:	6932      	ldr	r2, [r6, #16]
    cb7c:	4651      	mov	r1, sl
    cb7e:	619a      	str	r2, [r3, #24]
    cb80:	0032      	movs	r2, r6
    cb82:	6970      	ldr	r0, [r6, #20]
    cb84:	3320      	adds	r3, #32
    cb86:	3218      	adds	r2, #24
    cb88:	61c8      	str	r0, [r1, #28]
    cb8a:	e7a9      	b.n	cae0 <_realloc_r+0x290>
    cb8c:	002b      	movs	r3, r5
    cb8e:	0032      	movs	r2, r6
    cb90:	e77e      	b.n	ca90 <_realloc_r+0x240>
    cb92:	0031      	movs	r1, r6
    cb94:	0028      	movs	r0, r5
    cb96:	f7ff fe0b 	bl	c7b0 <memmove>
    cb9a:	e77f      	b.n	ca9c <_realloc_r+0x24c>
    cb9c:	4653      	mov	r3, sl
    cb9e:	68b1      	ldr	r1, [r6, #8]
    cba0:	6119      	str	r1, [r3, #16]
    cba2:	68f1      	ldr	r1, [r6, #12]
    cba4:	6159      	str	r1, [r3, #20]
    cba6:	2a24      	cmp	r2, #36	; 0x24
    cba8:	d003      	beq.n	cbb2 <_realloc_r+0x362>
    cbaa:	0032      	movs	r2, r6
    cbac:	3318      	adds	r3, #24
    cbae:	3210      	adds	r2, #16
    cbb0:	e76e      	b.n	ca90 <_realloc_r+0x240>
    cbb2:	4653      	mov	r3, sl
    cbb4:	6932      	ldr	r2, [r6, #16]
    cbb6:	4651      	mov	r1, sl
    cbb8:	619a      	str	r2, [r3, #24]
    cbba:	0032      	movs	r2, r6
    cbbc:	6970      	ldr	r0, [r6, #20]
    cbbe:	3320      	adds	r3, #32
    cbc0:	3218      	adds	r2, #24
    cbc2:	61c8      	str	r0, [r1, #28]
    cbc4:	e764      	b.n	ca90 <_realloc_r+0x240>
    cbc6:	46c0      	nop			; (mov r8, r8)
    cbc8:	20000630 	.word	0x20000630

0000cbcc <strncmp>:
    cbcc:	b530      	push	{r4, r5, lr}
    cbce:	2400      	movs	r4, #0
    cbd0:	2a00      	cmp	r2, #0
    cbd2:	d039      	beq.n	cc48 <strncmp+0x7c>
    cbd4:	0003      	movs	r3, r0
    cbd6:	430b      	orrs	r3, r1
    cbd8:	079b      	lsls	r3, r3, #30
    cbda:	d120      	bne.n	cc1e <strncmp+0x52>
    cbdc:	2a03      	cmp	r2, #3
    cbde:	d91e      	bls.n	cc1e <strncmp+0x52>
    cbe0:	6803      	ldr	r3, [r0, #0]
    cbe2:	680d      	ldr	r5, [r1, #0]
    cbe4:	42ab      	cmp	r3, r5
    cbe6:	d11a      	bne.n	cc1e <strncmp+0x52>
    cbe8:	3a04      	subs	r2, #4
    cbea:	2a00      	cmp	r2, #0
    cbec:	d02c      	beq.n	cc48 <strncmp+0x7c>
    cbee:	4d1a      	ldr	r5, [pc, #104]	; (cc58 <strncmp+0x8c>)
    cbf0:	195d      	adds	r5, r3, r5
    cbf2:	439d      	bics	r5, r3
    cbf4:	002b      	movs	r3, r5
    cbf6:	4d19      	ldr	r5, [pc, #100]	; (cc5c <strncmp+0x90>)
    cbf8:	422b      	tst	r3, r5
    cbfa:	d00c      	beq.n	cc16 <strncmp+0x4a>
    cbfc:	e024      	b.n	cc48 <strncmp+0x7c>
    cbfe:	6803      	ldr	r3, [r0, #0]
    cc00:	680c      	ldr	r4, [r1, #0]
    cc02:	42a3      	cmp	r3, r4
    cc04:	d10b      	bne.n	cc1e <strncmp+0x52>
    cc06:	3a04      	subs	r2, #4
    cc08:	2a00      	cmp	r2, #0
    cc0a:	d01f      	beq.n	cc4c <strncmp+0x80>
    cc0c:	4c12      	ldr	r4, [pc, #72]	; (cc58 <strncmp+0x8c>)
    cc0e:	191c      	adds	r4, r3, r4
    cc10:	439c      	bics	r4, r3
    cc12:	422c      	tst	r4, r5
    cc14:	d11a      	bne.n	cc4c <strncmp+0x80>
    cc16:	3004      	adds	r0, #4
    cc18:	3104      	adds	r1, #4
    cc1a:	2a03      	cmp	r2, #3
    cc1c:	d8ef      	bhi.n	cbfe <strncmp+0x32>
    cc1e:	7803      	ldrb	r3, [r0, #0]
    cc20:	780d      	ldrb	r5, [r1, #0]
    cc22:	3a01      	subs	r2, #1
    cc24:	429d      	cmp	r5, r3
    cc26:	d113      	bne.n	cc50 <strncmp+0x84>
    cc28:	2a00      	cmp	r2, #0
    cc2a:	d00f      	beq.n	cc4c <strncmp+0x80>
    cc2c:	2d00      	cmp	r5, #0
    cc2e:	d00d      	beq.n	cc4c <strncmp+0x80>
    cc30:	2301      	movs	r3, #1
    cc32:	e004      	b.n	cc3e <strncmp+0x72>
    cc34:	429a      	cmp	r2, r3
    cc36:	d009      	beq.n	cc4c <strncmp+0x80>
    cc38:	3301      	adds	r3, #1
    cc3a:	2c00      	cmp	r4, #0
    cc3c:	d006      	beq.n	cc4c <strncmp+0x80>
    cc3e:	5cc4      	ldrb	r4, [r0, r3]
    cc40:	5ccd      	ldrb	r5, [r1, r3]
    cc42:	42ac      	cmp	r4, r5
    cc44:	d0f6      	beq.n	cc34 <strncmp+0x68>
    cc46:	1b64      	subs	r4, r4, r5
    cc48:	0020      	movs	r0, r4
    cc4a:	bd30      	pop	{r4, r5, pc}
    cc4c:	2400      	movs	r4, #0
    cc4e:	e7fb      	b.n	cc48 <strncmp+0x7c>
    cc50:	001c      	movs	r4, r3
    cc52:	1b64      	subs	r4, r4, r5
    cc54:	e7f8      	b.n	cc48 <strncmp+0x7c>
    cc56:	46c0      	nop			; (mov r8, r8)
    cc58:	fefefeff 	.word	0xfefefeff
    cc5c:	80808080 	.word	0x80808080

0000cc60 <__aeabi_dadd>:
    cc60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    cc62:	4645      	mov	r5, r8
    cc64:	46de      	mov	lr, fp
    cc66:	4657      	mov	r7, sl
    cc68:	464e      	mov	r6, r9
    cc6a:	030c      	lsls	r4, r1, #12
    cc6c:	b5e0      	push	{r5, r6, r7, lr}
    cc6e:	004e      	lsls	r6, r1, #1
    cc70:	0fc9      	lsrs	r1, r1, #31
    cc72:	4688      	mov	r8, r1
    cc74:	000d      	movs	r5, r1
    cc76:	0a61      	lsrs	r1, r4, #9
    cc78:	0f44      	lsrs	r4, r0, #29
    cc7a:	430c      	orrs	r4, r1
    cc7c:	00c7      	lsls	r7, r0, #3
    cc7e:	0319      	lsls	r1, r3, #12
    cc80:	0058      	lsls	r0, r3, #1
    cc82:	0fdb      	lsrs	r3, r3, #31
    cc84:	469b      	mov	fp, r3
    cc86:	0a4b      	lsrs	r3, r1, #9
    cc88:	0f51      	lsrs	r1, r2, #29
    cc8a:	430b      	orrs	r3, r1
    cc8c:	0d76      	lsrs	r6, r6, #21
    cc8e:	0d40      	lsrs	r0, r0, #21
    cc90:	0019      	movs	r1, r3
    cc92:	00d2      	lsls	r2, r2, #3
    cc94:	45d8      	cmp	r8, fp
    cc96:	d100      	bne.n	cc9a <__aeabi_dadd+0x3a>
    cc98:	e0ae      	b.n	cdf8 <__aeabi_dadd+0x198>
    cc9a:	1a35      	subs	r5, r6, r0
    cc9c:	2d00      	cmp	r5, #0
    cc9e:	dc00      	bgt.n	cca2 <__aeabi_dadd+0x42>
    cca0:	e0f6      	b.n	ce90 <__aeabi_dadd+0x230>
    cca2:	2800      	cmp	r0, #0
    cca4:	d10f      	bne.n	ccc6 <__aeabi_dadd+0x66>
    cca6:	4313      	orrs	r3, r2
    cca8:	d100      	bne.n	ccac <__aeabi_dadd+0x4c>
    ccaa:	e0db      	b.n	ce64 <__aeabi_dadd+0x204>
    ccac:	1e6b      	subs	r3, r5, #1
    ccae:	2b00      	cmp	r3, #0
    ccb0:	d000      	beq.n	ccb4 <__aeabi_dadd+0x54>
    ccb2:	e137      	b.n	cf24 <__aeabi_dadd+0x2c4>
    ccb4:	1aba      	subs	r2, r7, r2
    ccb6:	4297      	cmp	r7, r2
    ccb8:	41bf      	sbcs	r7, r7
    ccba:	1a64      	subs	r4, r4, r1
    ccbc:	427f      	negs	r7, r7
    ccbe:	1be4      	subs	r4, r4, r7
    ccc0:	2601      	movs	r6, #1
    ccc2:	0017      	movs	r7, r2
    ccc4:	e024      	b.n	cd10 <__aeabi_dadd+0xb0>
    ccc6:	4bc6      	ldr	r3, [pc, #792]	; (cfe0 <__aeabi_dadd+0x380>)
    ccc8:	429e      	cmp	r6, r3
    ccca:	d04d      	beq.n	cd68 <__aeabi_dadd+0x108>
    cccc:	2380      	movs	r3, #128	; 0x80
    ccce:	041b      	lsls	r3, r3, #16
    ccd0:	4319      	orrs	r1, r3
    ccd2:	2d38      	cmp	r5, #56	; 0x38
    ccd4:	dd00      	ble.n	ccd8 <__aeabi_dadd+0x78>
    ccd6:	e107      	b.n	cee8 <__aeabi_dadd+0x288>
    ccd8:	2d1f      	cmp	r5, #31
    ccda:	dd00      	ble.n	ccde <__aeabi_dadd+0x7e>
    ccdc:	e138      	b.n	cf50 <__aeabi_dadd+0x2f0>
    ccde:	2020      	movs	r0, #32
    cce0:	1b43      	subs	r3, r0, r5
    cce2:	469a      	mov	sl, r3
    cce4:	000b      	movs	r3, r1
    cce6:	4650      	mov	r0, sl
    cce8:	4083      	lsls	r3, r0
    ccea:	4699      	mov	r9, r3
    ccec:	0013      	movs	r3, r2
    ccee:	4648      	mov	r0, r9
    ccf0:	40eb      	lsrs	r3, r5
    ccf2:	4318      	orrs	r0, r3
    ccf4:	0003      	movs	r3, r0
    ccf6:	4650      	mov	r0, sl
    ccf8:	4082      	lsls	r2, r0
    ccfa:	1e50      	subs	r0, r2, #1
    ccfc:	4182      	sbcs	r2, r0
    ccfe:	40e9      	lsrs	r1, r5
    cd00:	431a      	orrs	r2, r3
    cd02:	1aba      	subs	r2, r7, r2
    cd04:	1a61      	subs	r1, r4, r1
    cd06:	4297      	cmp	r7, r2
    cd08:	41a4      	sbcs	r4, r4
    cd0a:	0017      	movs	r7, r2
    cd0c:	4264      	negs	r4, r4
    cd0e:	1b0c      	subs	r4, r1, r4
    cd10:	0223      	lsls	r3, r4, #8
    cd12:	d562      	bpl.n	cdda <__aeabi_dadd+0x17a>
    cd14:	0264      	lsls	r4, r4, #9
    cd16:	0a65      	lsrs	r5, r4, #9
    cd18:	2d00      	cmp	r5, #0
    cd1a:	d100      	bne.n	cd1e <__aeabi_dadd+0xbe>
    cd1c:	e0df      	b.n	cede <__aeabi_dadd+0x27e>
    cd1e:	0028      	movs	r0, r5
    cd20:	f7f8 fa52 	bl	51c8 <__clzsi2>
    cd24:	0003      	movs	r3, r0
    cd26:	3b08      	subs	r3, #8
    cd28:	2b1f      	cmp	r3, #31
    cd2a:	dd00      	ble.n	cd2e <__aeabi_dadd+0xce>
    cd2c:	e0d2      	b.n	ced4 <__aeabi_dadd+0x274>
    cd2e:	2220      	movs	r2, #32
    cd30:	003c      	movs	r4, r7
    cd32:	1ad2      	subs	r2, r2, r3
    cd34:	409d      	lsls	r5, r3
    cd36:	40d4      	lsrs	r4, r2
    cd38:	409f      	lsls	r7, r3
    cd3a:	4325      	orrs	r5, r4
    cd3c:	429e      	cmp	r6, r3
    cd3e:	dd00      	ble.n	cd42 <__aeabi_dadd+0xe2>
    cd40:	e0c4      	b.n	cecc <__aeabi_dadd+0x26c>
    cd42:	1b9e      	subs	r6, r3, r6
    cd44:	1c73      	adds	r3, r6, #1
    cd46:	2b1f      	cmp	r3, #31
    cd48:	dd00      	ble.n	cd4c <__aeabi_dadd+0xec>
    cd4a:	e0f1      	b.n	cf30 <__aeabi_dadd+0x2d0>
    cd4c:	2220      	movs	r2, #32
    cd4e:	0038      	movs	r0, r7
    cd50:	0029      	movs	r1, r5
    cd52:	1ad2      	subs	r2, r2, r3
    cd54:	40d8      	lsrs	r0, r3
    cd56:	4091      	lsls	r1, r2
    cd58:	4097      	lsls	r7, r2
    cd5a:	002c      	movs	r4, r5
    cd5c:	4301      	orrs	r1, r0
    cd5e:	1e78      	subs	r0, r7, #1
    cd60:	4187      	sbcs	r7, r0
    cd62:	40dc      	lsrs	r4, r3
    cd64:	2600      	movs	r6, #0
    cd66:	430f      	orrs	r7, r1
    cd68:	077b      	lsls	r3, r7, #29
    cd6a:	d009      	beq.n	cd80 <__aeabi_dadd+0x120>
    cd6c:	230f      	movs	r3, #15
    cd6e:	403b      	ands	r3, r7
    cd70:	2b04      	cmp	r3, #4
    cd72:	d005      	beq.n	cd80 <__aeabi_dadd+0x120>
    cd74:	1d3b      	adds	r3, r7, #4
    cd76:	42bb      	cmp	r3, r7
    cd78:	41bf      	sbcs	r7, r7
    cd7a:	427f      	negs	r7, r7
    cd7c:	19e4      	adds	r4, r4, r7
    cd7e:	001f      	movs	r7, r3
    cd80:	0223      	lsls	r3, r4, #8
    cd82:	d52c      	bpl.n	cdde <__aeabi_dadd+0x17e>
    cd84:	4b96      	ldr	r3, [pc, #600]	; (cfe0 <__aeabi_dadd+0x380>)
    cd86:	3601      	adds	r6, #1
    cd88:	429e      	cmp	r6, r3
    cd8a:	d100      	bne.n	cd8e <__aeabi_dadd+0x12e>
    cd8c:	e09a      	b.n	cec4 <__aeabi_dadd+0x264>
    cd8e:	4645      	mov	r5, r8
    cd90:	4b94      	ldr	r3, [pc, #592]	; (cfe4 <__aeabi_dadd+0x384>)
    cd92:	08ff      	lsrs	r7, r7, #3
    cd94:	401c      	ands	r4, r3
    cd96:	0760      	lsls	r0, r4, #29
    cd98:	0576      	lsls	r6, r6, #21
    cd9a:	0264      	lsls	r4, r4, #9
    cd9c:	4307      	orrs	r7, r0
    cd9e:	0b24      	lsrs	r4, r4, #12
    cda0:	0d76      	lsrs	r6, r6, #21
    cda2:	2100      	movs	r1, #0
    cda4:	0324      	lsls	r4, r4, #12
    cda6:	0b23      	lsrs	r3, r4, #12
    cda8:	0d0c      	lsrs	r4, r1, #20
    cdaa:	4a8f      	ldr	r2, [pc, #572]	; (cfe8 <__aeabi_dadd+0x388>)
    cdac:	0524      	lsls	r4, r4, #20
    cdae:	431c      	orrs	r4, r3
    cdb0:	4014      	ands	r4, r2
    cdb2:	0533      	lsls	r3, r6, #20
    cdb4:	4323      	orrs	r3, r4
    cdb6:	005b      	lsls	r3, r3, #1
    cdb8:	07ed      	lsls	r5, r5, #31
    cdba:	085b      	lsrs	r3, r3, #1
    cdbc:	432b      	orrs	r3, r5
    cdbe:	0038      	movs	r0, r7
    cdc0:	0019      	movs	r1, r3
    cdc2:	bc3c      	pop	{r2, r3, r4, r5}
    cdc4:	4690      	mov	r8, r2
    cdc6:	4699      	mov	r9, r3
    cdc8:	46a2      	mov	sl, r4
    cdca:	46ab      	mov	fp, r5
    cdcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    cdce:	4664      	mov	r4, ip
    cdd0:	4304      	orrs	r4, r0
    cdd2:	d100      	bne.n	cdd6 <__aeabi_dadd+0x176>
    cdd4:	e211      	b.n	d1fa <__aeabi_dadd+0x59a>
    cdd6:	0004      	movs	r4, r0
    cdd8:	4667      	mov	r7, ip
    cdda:	077b      	lsls	r3, r7, #29
    cddc:	d1c6      	bne.n	cd6c <__aeabi_dadd+0x10c>
    cdde:	4645      	mov	r5, r8
    cde0:	0760      	lsls	r0, r4, #29
    cde2:	08ff      	lsrs	r7, r7, #3
    cde4:	4307      	orrs	r7, r0
    cde6:	08e4      	lsrs	r4, r4, #3
    cde8:	4b7d      	ldr	r3, [pc, #500]	; (cfe0 <__aeabi_dadd+0x380>)
    cdea:	429e      	cmp	r6, r3
    cdec:	d030      	beq.n	ce50 <__aeabi_dadd+0x1f0>
    cdee:	0324      	lsls	r4, r4, #12
    cdf0:	0576      	lsls	r6, r6, #21
    cdf2:	0b24      	lsrs	r4, r4, #12
    cdf4:	0d76      	lsrs	r6, r6, #21
    cdf6:	e7d4      	b.n	cda2 <__aeabi_dadd+0x142>
    cdf8:	1a33      	subs	r3, r6, r0
    cdfa:	469a      	mov	sl, r3
    cdfc:	2b00      	cmp	r3, #0
    cdfe:	dd78      	ble.n	cef2 <__aeabi_dadd+0x292>
    ce00:	2800      	cmp	r0, #0
    ce02:	d031      	beq.n	ce68 <__aeabi_dadd+0x208>
    ce04:	4876      	ldr	r0, [pc, #472]	; (cfe0 <__aeabi_dadd+0x380>)
    ce06:	4286      	cmp	r6, r0
    ce08:	d0ae      	beq.n	cd68 <__aeabi_dadd+0x108>
    ce0a:	2080      	movs	r0, #128	; 0x80
    ce0c:	0400      	lsls	r0, r0, #16
    ce0e:	4301      	orrs	r1, r0
    ce10:	4653      	mov	r3, sl
    ce12:	2b38      	cmp	r3, #56	; 0x38
    ce14:	dc00      	bgt.n	ce18 <__aeabi_dadd+0x1b8>
    ce16:	e0e9      	b.n	cfec <__aeabi_dadd+0x38c>
    ce18:	430a      	orrs	r2, r1
    ce1a:	1e51      	subs	r1, r2, #1
    ce1c:	418a      	sbcs	r2, r1
    ce1e:	2100      	movs	r1, #0
    ce20:	19d2      	adds	r2, r2, r7
    ce22:	42ba      	cmp	r2, r7
    ce24:	41bf      	sbcs	r7, r7
    ce26:	1909      	adds	r1, r1, r4
    ce28:	427c      	negs	r4, r7
    ce2a:	0017      	movs	r7, r2
    ce2c:	190c      	adds	r4, r1, r4
    ce2e:	0223      	lsls	r3, r4, #8
    ce30:	d5d3      	bpl.n	cdda <__aeabi_dadd+0x17a>
    ce32:	4b6b      	ldr	r3, [pc, #428]	; (cfe0 <__aeabi_dadd+0x380>)
    ce34:	3601      	adds	r6, #1
    ce36:	429e      	cmp	r6, r3
    ce38:	d100      	bne.n	ce3c <__aeabi_dadd+0x1dc>
    ce3a:	e13a      	b.n	d0b2 <__aeabi_dadd+0x452>
    ce3c:	2001      	movs	r0, #1
    ce3e:	4b69      	ldr	r3, [pc, #420]	; (cfe4 <__aeabi_dadd+0x384>)
    ce40:	401c      	ands	r4, r3
    ce42:	087b      	lsrs	r3, r7, #1
    ce44:	4007      	ands	r7, r0
    ce46:	431f      	orrs	r7, r3
    ce48:	07e0      	lsls	r0, r4, #31
    ce4a:	4307      	orrs	r7, r0
    ce4c:	0864      	lsrs	r4, r4, #1
    ce4e:	e78b      	b.n	cd68 <__aeabi_dadd+0x108>
    ce50:	0023      	movs	r3, r4
    ce52:	433b      	orrs	r3, r7
    ce54:	d100      	bne.n	ce58 <__aeabi_dadd+0x1f8>
    ce56:	e1cb      	b.n	d1f0 <__aeabi_dadd+0x590>
    ce58:	2280      	movs	r2, #128	; 0x80
    ce5a:	0312      	lsls	r2, r2, #12
    ce5c:	4314      	orrs	r4, r2
    ce5e:	0324      	lsls	r4, r4, #12
    ce60:	0b24      	lsrs	r4, r4, #12
    ce62:	e79e      	b.n	cda2 <__aeabi_dadd+0x142>
    ce64:	002e      	movs	r6, r5
    ce66:	e77f      	b.n	cd68 <__aeabi_dadd+0x108>
    ce68:	0008      	movs	r0, r1
    ce6a:	4310      	orrs	r0, r2
    ce6c:	d100      	bne.n	ce70 <__aeabi_dadd+0x210>
    ce6e:	e0b4      	b.n	cfda <__aeabi_dadd+0x37a>
    ce70:	1e58      	subs	r0, r3, #1
    ce72:	2800      	cmp	r0, #0
    ce74:	d000      	beq.n	ce78 <__aeabi_dadd+0x218>
    ce76:	e0de      	b.n	d036 <__aeabi_dadd+0x3d6>
    ce78:	18ba      	adds	r2, r7, r2
    ce7a:	42ba      	cmp	r2, r7
    ce7c:	419b      	sbcs	r3, r3
    ce7e:	1864      	adds	r4, r4, r1
    ce80:	425b      	negs	r3, r3
    ce82:	18e4      	adds	r4, r4, r3
    ce84:	0017      	movs	r7, r2
    ce86:	2601      	movs	r6, #1
    ce88:	0223      	lsls	r3, r4, #8
    ce8a:	d5a6      	bpl.n	cdda <__aeabi_dadd+0x17a>
    ce8c:	2602      	movs	r6, #2
    ce8e:	e7d5      	b.n	ce3c <__aeabi_dadd+0x1dc>
    ce90:	2d00      	cmp	r5, #0
    ce92:	d16e      	bne.n	cf72 <__aeabi_dadd+0x312>
    ce94:	1c70      	adds	r0, r6, #1
    ce96:	0540      	lsls	r0, r0, #21
    ce98:	0d40      	lsrs	r0, r0, #21
    ce9a:	2801      	cmp	r0, #1
    ce9c:	dc00      	bgt.n	cea0 <__aeabi_dadd+0x240>
    ce9e:	e0f9      	b.n	d094 <__aeabi_dadd+0x434>
    cea0:	1ab8      	subs	r0, r7, r2
    cea2:	4684      	mov	ip, r0
    cea4:	4287      	cmp	r7, r0
    cea6:	4180      	sbcs	r0, r0
    cea8:	1ae5      	subs	r5, r4, r3
    ceaa:	4240      	negs	r0, r0
    ceac:	1a2d      	subs	r5, r5, r0
    ceae:	0228      	lsls	r0, r5, #8
    ceb0:	d400      	bmi.n	ceb4 <__aeabi_dadd+0x254>
    ceb2:	e089      	b.n	cfc8 <__aeabi_dadd+0x368>
    ceb4:	1bd7      	subs	r7, r2, r7
    ceb6:	42ba      	cmp	r2, r7
    ceb8:	4192      	sbcs	r2, r2
    ceba:	1b1c      	subs	r4, r3, r4
    cebc:	4252      	negs	r2, r2
    cebe:	1aa5      	subs	r5, r4, r2
    cec0:	46d8      	mov	r8, fp
    cec2:	e729      	b.n	cd18 <__aeabi_dadd+0xb8>
    cec4:	4645      	mov	r5, r8
    cec6:	2400      	movs	r4, #0
    cec8:	2700      	movs	r7, #0
    ceca:	e76a      	b.n	cda2 <__aeabi_dadd+0x142>
    cecc:	4c45      	ldr	r4, [pc, #276]	; (cfe4 <__aeabi_dadd+0x384>)
    cece:	1af6      	subs	r6, r6, r3
    ced0:	402c      	ands	r4, r5
    ced2:	e749      	b.n	cd68 <__aeabi_dadd+0x108>
    ced4:	003d      	movs	r5, r7
    ced6:	3828      	subs	r0, #40	; 0x28
    ced8:	4085      	lsls	r5, r0
    ceda:	2700      	movs	r7, #0
    cedc:	e72e      	b.n	cd3c <__aeabi_dadd+0xdc>
    cede:	0038      	movs	r0, r7
    cee0:	f7f8 f972 	bl	51c8 <__clzsi2>
    cee4:	3020      	adds	r0, #32
    cee6:	e71d      	b.n	cd24 <__aeabi_dadd+0xc4>
    cee8:	430a      	orrs	r2, r1
    ceea:	1e51      	subs	r1, r2, #1
    ceec:	418a      	sbcs	r2, r1
    ceee:	2100      	movs	r1, #0
    cef0:	e707      	b.n	cd02 <__aeabi_dadd+0xa2>
    cef2:	2b00      	cmp	r3, #0
    cef4:	d000      	beq.n	cef8 <__aeabi_dadd+0x298>
    cef6:	e0f3      	b.n	d0e0 <__aeabi_dadd+0x480>
    cef8:	1c70      	adds	r0, r6, #1
    cefa:	0543      	lsls	r3, r0, #21
    cefc:	0d5b      	lsrs	r3, r3, #21
    cefe:	2b01      	cmp	r3, #1
    cf00:	dc00      	bgt.n	cf04 <__aeabi_dadd+0x2a4>
    cf02:	e0ad      	b.n	d060 <__aeabi_dadd+0x400>
    cf04:	4b36      	ldr	r3, [pc, #216]	; (cfe0 <__aeabi_dadd+0x380>)
    cf06:	4298      	cmp	r0, r3
    cf08:	d100      	bne.n	cf0c <__aeabi_dadd+0x2ac>
    cf0a:	e0d1      	b.n	d0b0 <__aeabi_dadd+0x450>
    cf0c:	18ba      	adds	r2, r7, r2
    cf0e:	42ba      	cmp	r2, r7
    cf10:	41bf      	sbcs	r7, r7
    cf12:	1864      	adds	r4, r4, r1
    cf14:	427f      	negs	r7, r7
    cf16:	19e4      	adds	r4, r4, r7
    cf18:	07e7      	lsls	r7, r4, #31
    cf1a:	0852      	lsrs	r2, r2, #1
    cf1c:	4317      	orrs	r7, r2
    cf1e:	0864      	lsrs	r4, r4, #1
    cf20:	0006      	movs	r6, r0
    cf22:	e721      	b.n	cd68 <__aeabi_dadd+0x108>
    cf24:	482e      	ldr	r0, [pc, #184]	; (cfe0 <__aeabi_dadd+0x380>)
    cf26:	4285      	cmp	r5, r0
    cf28:	d100      	bne.n	cf2c <__aeabi_dadd+0x2cc>
    cf2a:	e093      	b.n	d054 <__aeabi_dadd+0x3f4>
    cf2c:	001d      	movs	r5, r3
    cf2e:	e6d0      	b.n	ccd2 <__aeabi_dadd+0x72>
    cf30:	0029      	movs	r1, r5
    cf32:	3e1f      	subs	r6, #31
    cf34:	40f1      	lsrs	r1, r6
    cf36:	2b20      	cmp	r3, #32
    cf38:	d100      	bne.n	cf3c <__aeabi_dadd+0x2dc>
    cf3a:	e08d      	b.n	d058 <__aeabi_dadd+0x3f8>
    cf3c:	2240      	movs	r2, #64	; 0x40
    cf3e:	1ad3      	subs	r3, r2, r3
    cf40:	409d      	lsls	r5, r3
    cf42:	432f      	orrs	r7, r5
    cf44:	1e7d      	subs	r5, r7, #1
    cf46:	41af      	sbcs	r7, r5
    cf48:	2400      	movs	r4, #0
    cf4a:	430f      	orrs	r7, r1
    cf4c:	2600      	movs	r6, #0
    cf4e:	e744      	b.n	cdda <__aeabi_dadd+0x17a>
    cf50:	002b      	movs	r3, r5
    cf52:	0008      	movs	r0, r1
    cf54:	3b20      	subs	r3, #32
    cf56:	40d8      	lsrs	r0, r3
    cf58:	0003      	movs	r3, r0
    cf5a:	2d20      	cmp	r5, #32
    cf5c:	d100      	bne.n	cf60 <__aeabi_dadd+0x300>
    cf5e:	e07d      	b.n	d05c <__aeabi_dadd+0x3fc>
    cf60:	2040      	movs	r0, #64	; 0x40
    cf62:	1b45      	subs	r5, r0, r5
    cf64:	40a9      	lsls	r1, r5
    cf66:	430a      	orrs	r2, r1
    cf68:	1e51      	subs	r1, r2, #1
    cf6a:	418a      	sbcs	r2, r1
    cf6c:	2100      	movs	r1, #0
    cf6e:	431a      	orrs	r2, r3
    cf70:	e6c7      	b.n	cd02 <__aeabi_dadd+0xa2>
    cf72:	2e00      	cmp	r6, #0
    cf74:	d050      	beq.n	d018 <__aeabi_dadd+0x3b8>
    cf76:	4e1a      	ldr	r6, [pc, #104]	; (cfe0 <__aeabi_dadd+0x380>)
    cf78:	42b0      	cmp	r0, r6
    cf7a:	d057      	beq.n	d02c <__aeabi_dadd+0x3cc>
    cf7c:	2680      	movs	r6, #128	; 0x80
    cf7e:	426b      	negs	r3, r5
    cf80:	4699      	mov	r9, r3
    cf82:	0436      	lsls	r6, r6, #16
    cf84:	4334      	orrs	r4, r6
    cf86:	464b      	mov	r3, r9
    cf88:	2b38      	cmp	r3, #56	; 0x38
    cf8a:	dd00      	ble.n	cf8e <__aeabi_dadd+0x32e>
    cf8c:	e0d6      	b.n	d13c <__aeabi_dadd+0x4dc>
    cf8e:	2b1f      	cmp	r3, #31
    cf90:	dd00      	ble.n	cf94 <__aeabi_dadd+0x334>
    cf92:	e135      	b.n	d200 <__aeabi_dadd+0x5a0>
    cf94:	2620      	movs	r6, #32
    cf96:	1af5      	subs	r5, r6, r3
    cf98:	0026      	movs	r6, r4
    cf9a:	40ae      	lsls	r6, r5
    cf9c:	46b2      	mov	sl, r6
    cf9e:	003e      	movs	r6, r7
    cfa0:	40de      	lsrs	r6, r3
    cfa2:	46ac      	mov	ip, r5
    cfa4:	0035      	movs	r5, r6
    cfa6:	4656      	mov	r6, sl
    cfa8:	432e      	orrs	r6, r5
    cfaa:	4665      	mov	r5, ip
    cfac:	40af      	lsls	r7, r5
    cfae:	1e7d      	subs	r5, r7, #1
    cfb0:	41af      	sbcs	r7, r5
    cfb2:	40dc      	lsrs	r4, r3
    cfb4:	4337      	orrs	r7, r6
    cfb6:	1bd7      	subs	r7, r2, r7
    cfb8:	42ba      	cmp	r2, r7
    cfba:	4192      	sbcs	r2, r2
    cfbc:	1b0c      	subs	r4, r1, r4
    cfbe:	4252      	negs	r2, r2
    cfc0:	1aa4      	subs	r4, r4, r2
    cfc2:	0006      	movs	r6, r0
    cfc4:	46d8      	mov	r8, fp
    cfc6:	e6a3      	b.n	cd10 <__aeabi_dadd+0xb0>
    cfc8:	4664      	mov	r4, ip
    cfca:	4667      	mov	r7, ip
    cfcc:	432c      	orrs	r4, r5
    cfce:	d000      	beq.n	cfd2 <__aeabi_dadd+0x372>
    cfd0:	e6a2      	b.n	cd18 <__aeabi_dadd+0xb8>
    cfd2:	2500      	movs	r5, #0
    cfd4:	2600      	movs	r6, #0
    cfd6:	2700      	movs	r7, #0
    cfd8:	e706      	b.n	cde8 <__aeabi_dadd+0x188>
    cfda:	001e      	movs	r6, r3
    cfdc:	e6c4      	b.n	cd68 <__aeabi_dadd+0x108>
    cfde:	46c0      	nop			; (mov r8, r8)
    cfe0:	000007ff 	.word	0x000007ff
    cfe4:	ff7fffff 	.word	0xff7fffff
    cfe8:	800fffff 	.word	0x800fffff
    cfec:	2b1f      	cmp	r3, #31
    cfee:	dc63      	bgt.n	d0b8 <__aeabi_dadd+0x458>
    cff0:	2020      	movs	r0, #32
    cff2:	1ac3      	subs	r3, r0, r3
    cff4:	0008      	movs	r0, r1
    cff6:	4098      	lsls	r0, r3
    cff8:	469c      	mov	ip, r3
    cffa:	4683      	mov	fp, r0
    cffc:	4653      	mov	r3, sl
    cffe:	0010      	movs	r0, r2
    d000:	40d8      	lsrs	r0, r3
    d002:	0003      	movs	r3, r0
    d004:	4658      	mov	r0, fp
    d006:	4318      	orrs	r0, r3
    d008:	4663      	mov	r3, ip
    d00a:	409a      	lsls	r2, r3
    d00c:	1e53      	subs	r3, r2, #1
    d00e:	419a      	sbcs	r2, r3
    d010:	4653      	mov	r3, sl
    d012:	4302      	orrs	r2, r0
    d014:	40d9      	lsrs	r1, r3
    d016:	e703      	b.n	ce20 <__aeabi_dadd+0x1c0>
    d018:	0026      	movs	r6, r4
    d01a:	433e      	orrs	r6, r7
    d01c:	d006      	beq.n	d02c <__aeabi_dadd+0x3cc>
    d01e:	43eb      	mvns	r3, r5
    d020:	4699      	mov	r9, r3
    d022:	2b00      	cmp	r3, #0
    d024:	d0c7      	beq.n	cfb6 <__aeabi_dadd+0x356>
    d026:	4e94      	ldr	r6, [pc, #592]	; (d278 <__aeabi_dadd+0x618>)
    d028:	42b0      	cmp	r0, r6
    d02a:	d1ac      	bne.n	cf86 <__aeabi_dadd+0x326>
    d02c:	000c      	movs	r4, r1
    d02e:	0017      	movs	r7, r2
    d030:	0006      	movs	r6, r0
    d032:	46d8      	mov	r8, fp
    d034:	e698      	b.n	cd68 <__aeabi_dadd+0x108>
    d036:	4b90      	ldr	r3, [pc, #576]	; (d278 <__aeabi_dadd+0x618>)
    d038:	459a      	cmp	sl, r3
    d03a:	d00b      	beq.n	d054 <__aeabi_dadd+0x3f4>
    d03c:	4682      	mov	sl, r0
    d03e:	e6e7      	b.n	ce10 <__aeabi_dadd+0x1b0>
    d040:	2800      	cmp	r0, #0
    d042:	d000      	beq.n	d046 <__aeabi_dadd+0x3e6>
    d044:	e09e      	b.n	d184 <__aeabi_dadd+0x524>
    d046:	0018      	movs	r0, r3
    d048:	4310      	orrs	r0, r2
    d04a:	d100      	bne.n	d04e <__aeabi_dadd+0x3ee>
    d04c:	e0e9      	b.n	d222 <__aeabi_dadd+0x5c2>
    d04e:	001c      	movs	r4, r3
    d050:	0017      	movs	r7, r2
    d052:	46d8      	mov	r8, fp
    d054:	4e88      	ldr	r6, [pc, #544]	; (d278 <__aeabi_dadd+0x618>)
    d056:	e687      	b.n	cd68 <__aeabi_dadd+0x108>
    d058:	2500      	movs	r5, #0
    d05a:	e772      	b.n	cf42 <__aeabi_dadd+0x2e2>
    d05c:	2100      	movs	r1, #0
    d05e:	e782      	b.n	cf66 <__aeabi_dadd+0x306>
    d060:	0023      	movs	r3, r4
    d062:	433b      	orrs	r3, r7
    d064:	2e00      	cmp	r6, #0
    d066:	d000      	beq.n	d06a <__aeabi_dadd+0x40a>
    d068:	e0ab      	b.n	d1c2 <__aeabi_dadd+0x562>
    d06a:	2b00      	cmp	r3, #0
    d06c:	d100      	bne.n	d070 <__aeabi_dadd+0x410>
    d06e:	e0e7      	b.n	d240 <__aeabi_dadd+0x5e0>
    d070:	000b      	movs	r3, r1
    d072:	4313      	orrs	r3, r2
    d074:	d100      	bne.n	d078 <__aeabi_dadd+0x418>
    d076:	e677      	b.n	cd68 <__aeabi_dadd+0x108>
    d078:	18ba      	adds	r2, r7, r2
    d07a:	42ba      	cmp	r2, r7
    d07c:	41bf      	sbcs	r7, r7
    d07e:	1864      	adds	r4, r4, r1
    d080:	427f      	negs	r7, r7
    d082:	19e4      	adds	r4, r4, r7
    d084:	0223      	lsls	r3, r4, #8
    d086:	d400      	bmi.n	d08a <__aeabi_dadd+0x42a>
    d088:	e0f2      	b.n	d270 <__aeabi_dadd+0x610>
    d08a:	4b7c      	ldr	r3, [pc, #496]	; (d27c <__aeabi_dadd+0x61c>)
    d08c:	0017      	movs	r7, r2
    d08e:	401c      	ands	r4, r3
    d090:	0006      	movs	r6, r0
    d092:	e669      	b.n	cd68 <__aeabi_dadd+0x108>
    d094:	0020      	movs	r0, r4
    d096:	4338      	orrs	r0, r7
    d098:	2e00      	cmp	r6, #0
    d09a:	d1d1      	bne.n	d040 <__aeabi_dadd+0x3e0>
    d09c:	2800      	cmp	r0, #0
    d09e:	d15b      	bne.n	d158 <__aeabi_dadd+0x4f8>
    d0a0:	001c      	movs	r4, r3
    d0a2:	4314      	orrs	r4, r2
    d0a4:	d100      	bne.n	d0a8 <__aeabi_dadd+0x448>
    d0a6:	e0a8      	b.n	d1fa <__aeabi_dadd+0x59a>
    d0a8:	001c      	movs	r4, r3
    d0aa:	0017      	movs	r7, r2
    d0ac:	46d8      	mov	r8, fp
    d0ae:	e65b      	b.n	cd68 <__aeabi_dadd+0x108>
    d0b0:	0006      	movs	r6, r0
    d0b2:	2400      	movs	r4, #0
    d0b4:	2700      	movs	r7, #0
    d0b6:	e697      	b.n	cde8 <__aeabi_dadd+0x188>
    d0b8:	4650      	mov	r0, sl
    d0ba:	000b      	movs	r3, r1
    d0bc:	3820      	subs	r0, #32
    d0be:	40c3      	lsrs	r3, r0
    d0c0:	4699      	mov	r9, r3
    d0c2:	4653      	mov	r3, sl
    d0c4:	2b20      	cmp	r3, #32
    d0c6:	d100      	bne.n	d0ca <__aeabi_dadd+0x46a>
    d0c8:	e095      	b.n	d1f6 <__aeabi_dadd+0x596>
    d0ca:	2340      	movs	r3, #64	; 0x40
    d0cc:	4650      	mov	r0, sl
    d0ce:	1a1b      	subs	r3, r3, r0
    d0d0:	4099      	lsls	r1, r3
    d0d2:	430a      	orrs	r2, r1
    d0d4:	1e51      	subs	r1, r2, #1
    d0d6:	418a      	sbcs	r2, r1
    d0d8:	464b      	mov	r3, r9
    d0da:	2100      	movs	r1, #0
    d0dc:	431a      	orrs	r2, r3
    d0de:	e69f      	b.n	ce20 <__aeabi_dadd+0x1c0>
    d0e0:	2e00      	cmp	r6, #0
    d0e2:	d130      	bne.n	d146 <__aeabi_dadd+0x4e6>
    d0e4:	0026      	movs	r6, r4
    d0e6:	433e      	orrs	r6, r7
    d0e8:	d067      	beq.n	d1ba <__aeabi_dadd+0x55a>
    d0ea:	43db      	mvns	r3, r3
    d0ec:	469a      	mov	sl, r3
    d0ee:	2b00      	cmp	r3, #0
    d0f0:	d01c      	beq.n	d12c <__aeabi_dadd+0x4cc>
    d0f2:	4e61      	ldr	r6, [pc, #388]	; (d278 <__aeabi_dadd+0x618>)
    d0f4:	42b0      	cmp	r0, r6
    d0f6:	d060      	beq.n	d1ba <__aeabi_dadd+0x55a>
    d0f8:	4653      	mov	r3, sl
    d0fa:	2b38      	cmp	r3, #56	; 0x38
    d0fc:	dd00      	ble.n	d100 <__aeabi_dadd+0x4a0>
    d0fe:	e096      	b.n	d22e <__aeabi_dadd+0x5ce>
    d100:	2b1f      	cmp	r3, #31
    d102:	dd00      	ble.n	d106 <__aeabi_dadd+0x4a6>
    d104:	e09f      	b.n	d246 <__aeabi_dadd+0x5e6>
    d106:	2620      	movs	r6, #32
    d108:	1af3      	subs	r3, r6, r3
    d10a:	0026      	movs	r6, r4
    d10c:	409e      	lsls	r6, r3
    d10e:	469c      	mov	ip, r3
    d110:	46b3      	mov	fp, r6
    d112:	4653      	mov	r3, sl
    d114:	003e      	movs	r6, r7
    d116:	40de      	lsrs	r6, r3
    d118:	0033      	movs	r3, r6
    d11a:	465e      	mov	r6, fp
    d11c:	431e      	orrs	r6, r3
    d11e:	4663      	mov	r3, ip
    d120:	409f      	lsls	r7, r3
    d122:	1e7b      	subs	r3, r7, #1
    d124:	419f      	sbcs	r7, r3
    d126:	4653      	mov	r3, sl
    d128:	40dc      	lsrs	r4, r3
    d12a:	4337      	orrs	r7, r6
    d12c:	18bf      	adds	r7, r7, r2
    d12e:	4297      	cmp	r7, r2
    d130:	4192      	sbcs	r2, r2
    d132:	1864      	adds	r4, r4, r1
    d134:	4252      	negs	r2, r2
    d136:	18a4      	adds	r4, r4, r2
    d138:	0006      	movs	r6, r0
    d13a:	e678      	b.n	ce2e <__aeabi_dadd+0x1ce>
    d13c:	4327      	orrs	r7, r4
    d13e:	1e7c      	subs	r4, r7, #1
    d140:	41a7      	sbcs	r7, r4
    d142:	2400      	movs	r4, #0
    d144:	e737      	b.n	cfb6 <__aeabi_dadd+0x356>
    d146:	4e4c      	ldr	r6, [pc, #304]	; (d278 <__aeabi_dadd+0x618>)
    d148:	42b0      	cmp	r0, r6
    d14a:	d036      	beq.n	d1ba <__aeabi_dadd+0x55a>
    d14c:	2680      	movs	r6, #128	; 0x80
    d14e:	425b      	negs	r3, r3
    d150:	0436      	lsls	r6, r6, #16
    d152:	469a      	mov	sl, r3
    d154:	4334      	orrs	r4, r6
    d156:	e7cf      	b.n	d0f8 <__aeabi_dadd+0x498>
    d158:	0018      	movs	r0, r3
    d15a:	4310      	orrs	r0, r2
    d15c:	d100      	bne.n	d160 <__aeabi_dadd+0x500>
    d15e:	e603      	b.n	cd68 <__aeabi_dadd+0x108>
    d160:	1ab8      	subs	r0, r7, r2
    d162:	4684      	mov	ip, r0
    d164:	4567      	cmp	r7, ip
    d166:	41ad      	sbcs	r5, r5
    d168:	1ae0      	subs	r0, r4, r3
    d16a:	426d      	negs	r5, r5
    d16c:	1b40      	subs	r0, r0, r5
    d16e:	0205      	lsls	r5, r0, #8
    d170:	d400      	bmi.n	d174 <__aeabi_dadd+0x514>
    d172:	e62c      	b.n	cdce <__aeabi_dadd+0x16e>
    d174:	1bd7      	subs	r7, r2, r7
    d176:	42ba      	cmp	r2, r7
    d178:	4192      	sbcs	r2, r2
    d17a:	1b1c      	subs	r4, r3, r4
    d17c:	4252      	negs	r2, r2
    d17e:	1aa4      	subs	r4, r4, r2
    d180:	46d8      	mov	r8, fp
    d182:	e5f1      	b.n	cd68 <__aeabi_dadd+0x108>
    d184:	0018      	movs	r0, r3
    d186:	4310      	orrs	r0, r2
    d188:	d100      	bne.n	d18c <__aeabi_dadd+0x52c>
    d18a:	e763      	b.n	d054 <__aeabi_dadd+0x3f4>
    d18c:	08f8      	lsrs	r0, r7, #3
    d18e:	0767      	lsls	r7, r4, #29
    d190:	4307      	orrs	r7, r0
    d192:	2080      	movs	r0, #128	; 0x80
    d194:	08e4      	lsrs	r4, r4, #3
    d196:	0300      	lsls	r0, r0, #12
    d198:	4204      	tst	r4, r0
    d19a:	d008      	beq.n	d1ae <__aeabi_dadd+0x54e>
    d19c:	08dd      	lsrs	r5, r3, #3
    d19e:	4205      	tst	r5, r0
    d1a0:	d105      	bne.n	d1ae <__aeabi_dadd+0x54e>
    d1a2:	08d2      	lsrs	r2, r2, #3
    d1a4:	0759      	lsls	r1, r3, #29
    d1a6:	4311      	orrs	r1, r2
    d1a8:	000f      	movs	r7, r1
    d1aa:	002c      	movs	r4, r5
    d1ac:	46d8      	mov	r8, fp
    d1ae:	0f7b      	lsrs	r3, r7, #29
    d1b0:	00e4      	lsls	r4, r4, #3
    d1b2:	431c      	orrs	r4, r3
    d1b4:	00ff      	lsls	r7, r7, #3
    d1b6:	4e30      	ldr	r6, [pc, #192]	; (d278 <__aeabi_dadd+0x618>)
    d1b8:	e5d6      	b.n	cd68 <__aeabi_dadd+0x108>
    d1ba:	000c      	movs	r4, r1
    d1bc:	0017      	movs	r7, r2
    d1be:	0006      	movs	r6, r0
    d1c0:	e5d2      	b.n	cd68 <__aeabi_dadd+0x108>
    d1c2:	2b00      	cmp	r3, #0
    d1c4:	d038      	beq.n	d238 <__aeabi_dadd+0x5d8>
    d1c6:	000b      	movs	r3, r1
    d1c8:	4313      	orrs	r3, r2
    d1ca:	d100      	bne.n	d1ce <__aeabi_dadd+0x56e>
    d1cc:	e742      	b.n	d054 <__aeabi_dadd+0x3f4>
    d1ce:	08f8      	lsrs	r0, r7, #3
    d1d0:	0767      	lsls	r7, r4, #29
    d1d2:	4307      	orrs	r7, r0
    d1d4:	2080      	movs	r0, #128	; 0x80
    d1d6:	08e4      	lsrs	r4, r4, #3
    d1d8:	0300      	lsls	r0, r0, #12
    d1da:	4204      	tst	r4, r0
    d1dc:	d0e7      	beq.n	d1ae <__aeabi_dadd+0x54e>
    d1de:	08cb      	lsrs	r3, r1, #3
    d1e0:	4203      	tst	r3, r0
    d1e2:	d1e4      	bne.n	d1ae <__aeabi_dadd+0x54e>
    d1e4:	08d2      	lsrs	r2, r2, #3
    d1e6:	0749      	lsls	r1, r1, #29
    d1e8:	4311      	orrs	r1, r2
    d1ea:	000f      	movs	r7, r1
    d1ec:	001c      	movs	r4, r3
    d1ee:	e7de      	b.n	d1ae <__aeabi_dadd+0x54e>
    d1f0:	2700      	movs	r7, #0
    d1f2:	2400      	movs	r4, #0
    d1f4:	e5d5      	b.n	cda2 <__aeabi_dadd+0x142>
    d1f6:	2100      	movs	r1, #0
    d1f8:	e76b      	b.n	d0d2 <__aeabi_dadd+0x472>
    d1fa:	2500      	movs	r5, #0
    d1fc:	2700      	movs	r7, #0
    d1fe:	e5f3      	b.n	cde8 <__aeabi_dadd+0x188>
    d200:	464e      	mov	r6, r9
    d202:	0025      	movs	r5, r4
    d204:	3e20      	subs	r6, #32
    d206:	40f5      	lsrs	r5, r6
    d208:	464b      	mov	r3, r9
    d20a:	002e      	movs	r6, r5
    d20c:	2b20      	cmp	r3, #32
    d20e:	d02d      	beq.n	d26c <__aeabi_dadd+0x60c>
    d210:	2540      	movs	r5, #64	; 0x40
    d212:	1aed      	subs	r5, r5, r3
    d214:	40ac      	lsls	r4, r5
    d216:	4327      	orrs	r7, r4
    d218:	1e7c      	subs	r4, r7, #1
    d21a:	41a7      	sbcs	r7, r4
    d21c:	2400      	movs	r4, #0
    d21e:	4337      	orrs	r7, r6
    d220:	e6c9      	b.n	cfb6 <__aeabi_dadd+0x356>
    d222:	2480      	movs	r4, #128	; 0x80
    d224:	2500      	movs	r5, #0
    d226:	0324      	lsls	r4, r4, #12
    d228:	4e13      	ldr	r6, [pc, #76]	; (d278 <__aeabi_dadd+0x618>)
    d22a:	2700      	movs	r7, #0
    d22c:	e5dc      	b.n	cde8 <__aeabi_dadd+0x188>
    d22e:	4327      	orrs	r7, r4
    d230:	1e7c      	subs	r4, r7, #1
    d232:	41a7      	sbcs	r7, r4
    d234:	2400      	movs	r4, #0
    d236:	e779      	b.n	d12c <__aeabi_dadd+0x4cc>
    d238:	000c      	movs	r4, r1
    d23a:	0017      	movs	r7, r2
    d23c:	4e0e      	ldr	r6, [pc, #56]	; (d278 <__aeabi_dadd+0x618>)
    d23e:	e593      	b.n	cd68 <__aeabi_dadd+0x108>
    d240:	000c      	movs	r4, r1
    d242:	0017      	movs	r7, r2
    d244:	e590      	b.n	cd68 <__aeabi_dadd+0x108>
    d246:	4656      	mov	r6, sl
    d248:	0023      	movs	r3, r4
    d24a:	3e20      	subs	r6, #32
    d24c:	40f3      	lsrs	r3, r6
    d24e:	4699      	mov	r9, r3
    d250:	4653      	mov	r3, sl
    d252:	2b20      	cmp	r3, #32
    d254:	d00e      	beq.n	d274 <__aeabi_dadd+0x614>
    d256:	2340      	movs	r3, #64	; 0x40
    d258:	4656      	mov	r6, sl
    d25a:	1b9b      	subs	r3, r3, r6
    d25c:	409c      	lsls	r4, r3
    d25e:	4327      	orrs	r7, r4
    d260:	1e7c      	subs	r4, r7, #1
    d262:	41a7      	sbcs	r7, r4
    d264:	464b      	mov	r3, r9
    d266:	2400      	movs	r4, #0
    d268:	431f      	orrs	r7, r3
    d26a:	e75f      	b.n	d12c <__aeabi_dadd+0x4cc>
    d26c:	2400      	movs	r4, #0
    d26e:	e7d2      	b.n	d216 <__aeabi_dadd+0x5b6>
    d270:	0017      	movs	r7, r2
    d272:	e5b2      	b.n	cdda <__aeabi_dadd+0x17a>
    d274:	2400      	movs	r4, #0
    d276:	e7f2      	b.n	d25e <__aeabi_dadd+0x5fe>
    d278:	000007ff 	.word	0x000007ff
    d27c:	ff7fffff 	.word	0xff7fffff

0000d280 <__aeabi_dcmpun>:
    d280:	b570      	push	{r4, r5, r6, lr}
    d282:	4e0e      	ldr	r6, [pc, #56]	; (d2bc <__aeabi_dcmpun+0x3c>)
    d284:	030d      	lsls	r5, r1, #12
    d286:	031c      	lsls	r4, r3, #12
    d288:	0049      	lsls	r1, r1, #1
    d28a:	005b      	lsls	r3, r3, #1
    d28c:	0b2d      	lsrs	r5, r5, #12
    d28e:	0d49      	lsrs	r1, r1, #21
    d290:	0b24      	lsrs	r4, r4, #12
    d292:	0d5b      	lsrs	r3, r3, #21
    d294:	42b1      	cmp	r1, r6
    d296:	d004      	beq.n	d2a2 <__aeabi_dcmpun+0x22>
    d298:	4908      	ldr	r1, [pc, #32]	; (d2bc <__aeabi_dcmpun+0x3c>)
    d29a:	2000      	movs	r0, #0
    d29c:	428b      	cmp	r3, r1
    d29e:	d008      	beq.n	d2b2 <__aeabi_dcmpun+0x32>
    d2a0:	bd70      	pop	{r4, r5, r6, pc}
    d2a2:	4305      	orrs	r5, r0
    d2a4:	2001      	movs	r0, #1
    d2a6:	2d00      	cmp	r5, #0
    d2a8:	d1fa      	bne.n	d2a0 <__aeabi_dcmpun+0x20>
    d2aa:	4904      	ldr	r1, [pc, #16]	; (d2bc <__aeabi_dcmpun+0x3c>)
    d2ac:	2000      	movs	r0, #0
    d2ae:	428b      	cmp	r3, r1
    d2b0:	d1f6      	bne.n	d2a0 <__aeabi_dcmpun+0x20>
    d2b2:	4314      	orrs	r4, r2
    d2b4:	0020      	movs	r0, r4
    d2b6:	1e44      	subs	r4, r0, #1
    d2b8:	41a0      	sbcs	r0, r4
    d2ba:	e7f1      	b.n	d2a0 <__aeabi_dcmpun+0x20>
    d2bc:	000007ff 	.word	0x000007ff

0000d2c0 <__aeabi_d2f>:
    d2c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    d2c2:	004c      	lsls	r4, r1, #1
    d2c4:	0d64      	lsrs	r4, r4, #21
    d2c6:	030b      	lsls	r3, r1, #12
    d2c8:	1c62      	adds	r2, r4, #1
    d2ca:	0f45      	lsrs	r5, r0, #29
    d2cc:	0a5b      	lsrs	r3, r3, #9
    d2ce:	0552      	lsls	r2, r2, #21
    d2d0:	432b      	orrs	r3, r5
    d2d2:	0fc9      	lsrs	r1, r1, #31
    d2d4:	00c5      	lsls	r5, r0, #3
    d2d6:	0d52      	lsrs	r2, r2, #21
    d2d8:	2a01      	cmp	r2, #1
    d2da:	dd28      	ble.n	d32e <__aeabi_d2f+0x6e>
    d2dc:	4a3a      	ldr	r2, [pc, #232]	; (d3c8 <__aeabi_d2f+0x108>)
    d2de:	18a6      	adds	r6, r4, r2
    d2e0:	2efe      	cmp	r6, #254	; 0xfe
    d2e2:	dc1b      	bgt.n	d31c <__aeabi_d2f+0x5c>
    d2e4:	2e00      	cmp	r6, #0
    d2e6:	dd3e      	ble.n	d366 <__aeabi_d2f+0xa6>
    d2e8:	0180      	lsls	r0, r0, #6
    d2ea:	0002      	movs	r2, r0
    d2ec:	1e50      	subs	r0, r2, #1
    d2ee:	4182      	sbcs	r2, r0
    d2f0:	0f6d      	lsrs	r5, r5, #29
    d2f2:	432a      	orrs	r2, r5
    d2f4:	00db      	lsls	r3, r3, #3
    d2f6:	4313      	orrs	r3, r2
    d2f8:	075a      	lsls	r2, r3, #29
    d2fa:	d004      	beq.n	d306 <__aeabi_d2f+0x46>
    d2fc:	220f      	movs	r2, #15
    d2fe:	401a      	ands	r2, r3
    d300:	2a04      	cmp	r2, #4
    d302:	d000      	beq.n	d306 <__aeabi_d2f+0x46>
    d304:	3304      	adds	r3, #4
    d306:	2280      	movs	r2, #128	; 0x80
    d308:	04d2      	lsls	r2, r2, #19
    d30a:	401a      	ands	r2, r3
    d30c:	d05a      	beq.n	d3c4 <__aeabi_d2f+0x104>
    d30e:	3601      	adds	r6, #1
    d310:	2eff      	cmp	r6, #255	; 0xff
    d312:	d003      	beq.n	d31c <__aeabi_d2f+0x5c>
    d314:	019b      	lsls	r3, r3, #6
    d316:	0a5b      	lsrs	r3, r3, #9
    d318:	b2f4      	uxtb	r4, r6
    d31a:	e001      	b.n	d320 <__aeabi_d2f+0x60>
    d31c:	24ff      	movs	r4, #255	; 0xff
    d31e:	2300      	movs	r3, #0
    d320:	0258      	lsls	r0, r3, #9
    d322:	05e4      	lsls	r4, r4, #23
    d324:	0a40      	lsrs	r0, r0, #9
    d326:	07c9      	lsls	r1, r1, #31
    d328:	4320      	orrs	r0, r4
    d32a:	4308      	orrs	r0, r1
    d32c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d32e:	2c00      	cmp	r4, #0
    d330:	d007      	beq.n	d342 <__aeabi_d2f+0x82>
    d332:	431d      	orrs	r5, r3
    d334:	d0f2      	beq.n	d31c <__aeabi_d2f+0x5c>
    d336:	2080      	movs	r0, #128	; 0x80
    d338:	00db      	lsls	r3, r3, #3
    d33a:	0480      	lsls	r0, r0, #18
    d33c:	4303      	orrs	r3, r0
    d33e:	26ff      	movs	r6, #255	; 0xff
    d340:	e7da      	b.n	d2f8 <__aeabi_d2f+0x38>
    d342:	432b      	orrs	r3, r5
    d344:	d003      	beq.n	d34e <__aeabi_d2f+0x8e>
    d346:	2305      	movs	r3, #5
    d348:	08db      	lsrs	r3, r3, #3
    d34a:	2cff      	cmp	r4, #255	; 0xff
    d34c:	d003      	beq.n	d356 <__aeabi_d2f+0x96>
    d34e:	025b      	lsls	r3, r3, #9
    d350:	0a5b      	lsrs	r3, r3, #9
    d352:	b2e4      	uxtb	r4, r4
    d354:	e7e4      	b.n	d320 <__aeabi_d2f+0x60>
    d356:	2b00      	cmp	r3, #0
    d358:	d032      	beq.n	d3c0 <__aeabi_d2f+0x100>
    d35a:	2080      	movs	r0, #128	; 0x80
    d35c:	03c0      	lsls	r0, r0, #15
    d35e:	4303      	orrs	r3, r0
    d360:	025b      	lsls	r3, r3, #9
    d362:	0a5b      	lsrs	r3, r3, #9
    d364:	e7dc      	b.n	d320 <__aeabi_d2f+0x60>
    d366:	0032      	movs	r2, r6
    d368:	3217      	adds	r2, #23
    d36a:	db14      	blt.n	d396 <__aeabi_d2f+0xd6>
    d36c:	2280      	movs	r2, #128	; 0x80
    d36e:	271e      	movs	r7, #30
    d370:	0412      	lsls	r2, r2, #16
    d372:	4313      	orrs	r3, r2
    d374:	1bbf      	subs	r7, r7, r6
    d376:	2f1f      	cmp	r7, #31
    d378:	dc0f      	bgt.n	d39a <__aeabi_d2f+0xda>
    d37a:	4a14      	ldr	r2, [pc, #80]	; (d3cc <__aeabi_d2f+0x10c>)
    d37c:	4694      	mov	ip, r2
    d37e:	4464      	add	r4, ip
    d380:	002a      	movs	r2, r5
    d382:	40a5      	lsls	r5, r4
    d384:	002e      	movs	r6, r5
    d386:	40a3      	lsls	r3, r4
    d388:	1e75      	subs	r5, r6, #1
    d38a:	41ae      	sbcs	r6, r5
    d38c:	40fa      	lsrs	r2, r7
    d38e:	4333      	orrs	r3, r6
    d390:	4313      	orrs	r3, r2
    d392:	2600      	movs	r6, #0
    d394:	e7b0      	b.n	d2f8 <__aeabi_d2f+0x38>
    d396:	2400      	movs	r4, #0
    d398:	e7d5      	b.n	d346 <__aeabi_d2f+0x86>
    d39a:	2202      	movs	r2, #2
    d39c:	4252      	negs	r2, r2
    d39e:	1b96      	subs	r6, r2, r6
    d3a0:	001a      	movs	r2, r3
    d3a2:	40f2      	lsrs	r2, r6
    d3a4:	2f20      	cmp	r7, #32
    d3a6:	d009      	beq.n	d3bc <__aeabi_d2f+0xfc>
    d3a8:	4809      	ldr	r0, [pc, #36]	; (d3d0 <__aeabi_d2f+0x110>)
    d3aa:	4684      	mov	ip, r0
    d3ac:	4464      	add	r4, ip
    d3ae:	40a3      	lsls	r3, r4
    d3b0:	432b      	orrs	r3, r5
    d3b2:	1e5d      	subs	r5, r3, #1
    d3b4:	41ab      	sbcs	r3, r5
    d3b6:	2600      	movs	r6, #0
    d3b8:	4313      	orrs	r3, r2
    d3ba:	e79d      	b.n	d2f8 <__aeabi_d2f+0x38>
    d3bc:	2300      	movs	r3, #0
    d3be:	e7f7      	b.n	d3b0 <__aeabi_d2f+0xf0>
    d3c0:	2300      	movs	r3, #0
    d3c2:	e7ad      	b.n	d320 <__aeabi_d2f+0x60>
    d3c4:	0034      	movs	r4, r6
    d3c6:	e7bf      	b.n	d348 <__aeabi_d2f+0x88>
    d3c8:	fffffc80 	.word	0xfffffc80
    d3cc:	fffffc82 	.word	0xfffffc82
    d3d0:	fffffca2 	.word	0xfffffca2
    d3d4:	682f2e2e 	.word	0x682f2e2e
    d3d8:	732f6c61 	.word	0x732f6c61
    d3dc:	682f6372 	.word	0x682f6372
    d3e0:	695f6c61 	.word	0x695f6c61
    d3e4:	6d5f6332 	.word	0x6d5f6332
    d3e8:	6e79735f 	.word	0x6e79735f
    d3ec:	00632e63 	.word	0x00632e63
    d3f0:	682f2e2e 	.word	0x682f2e2e
    d3f4:	732f6c61 	.word	0x732f6c61
    d3f8:	682f6372 	.word	0x682f6372
    d3fc:	695f6c61 	.word	0x695f6c61
    d400:	00632e6f 	.word	0x00632e6f
    d404:	682f2e2e 	.word	0x682f2e2e
    d408:	732f6c61 	.word	0x732f6c61
    d40c:	682f6372 	.word	0x682f6372
    d410:	705f6c61 	.word	0x705f6c61
    d414:	632e6d77 	.word	0x632e6d77
    d418:	00000000 	.word	0x00000000
    d41c:	682f2e2e 	.word	0x682f2e2e
    d420:	732f6c61 	.word	0x732f6c61
    d424:	682f6372 	.word	0x682f6372
    d428:	735f6c61 	.word	0x735f6c61
    d42c:	6d5f6970 	.word	0x6d5f6970
    d430:	6e79735f 	.word	0x6e79735f
    d434:	00632e63 	.word	0x00632e63
    d438:	682f2e2e 	.word	0x682f2e2e
    d43c:	732f6c61 	.word	0x732f6c61
    d440:	682f6372 	.word	0x682f6372
    d444:	745f6c61 	.word	0x745f6c61
    d448:	72656d69 	.word	0x72656d69
    d44c:	0000632e 	.word	0x0000632e
    d450:	682f2e2e 	.word	0x682f2e2e
    d454:	732f6c61 	.word	0x732f6c61
    d458:	682f6372 	.word	0x682f6372
    d45c:	755f6c61 	.word	0x755f6c61
    d460:	74726173 	.word	0x74726173
    d464:	6e79735f 	.word	0x6e79735f
    d468:	00632e63 	.word	0x00632e63
    d46c:	682f2e2e 	.word	0x682f2e2e
    d470:	752f6c61 	.word	0x752f6c61
    d474:	736c6974 	.word	0x736c6974
    d478:	6372732f 	.word	0x6372732f
    d47c:	6974752f 	.word	0x6974752f
    d480:	6c5f736c 	.word	0x6c5f736c
    d484:	2e747369 	.word	0x2e747369
    d488:	00000063 	.word	0x00000063
    d48c:	682f2e2e 	.word	0x682f2e2e
    d490:	652f6c70 	.word	0x652f6c70
    d494:	682f6369 	.word	0x682f6369
    d498:	655f6c70 	.word	0x655f6c70
    d49c:	632e6369 	.word	0x632e6369
    d4a0:	00000000 	.word	0x00000000

0000d4a4 <_map>:
    d4a4:	00000008 00000028 682f2e2e 722f6c70     ....(...../hpl/r
    d4b4:	682f6374 725f6c70 632e6374 00000000     tc/hpl_rtc.c....
    d4c4:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
    d4d4:	65735f6c 6d6f6372 0000632e              l_sercom.c..

0000d4e0 <_i2cms>:
    d4e0:	00000002 00200014 00000100 000000ea     ...... .........
    d4f0:	000000d7 02dc6c00                       .....l..

0000d4f8 <_usarts>:
    d4f8:	00000004 40010004 00030000 0000ff2e     .......@........

0000d508 <sercomspi_regs>:
    d508:	0020000c 00020000 00000000 000000fe     .. .............
    d518:	0020000c 00020000 00000000 030000fe     .. .............
    d528:	682f2e2e 742f6c70 70682f63 63745f6c     ../hpl/tc/hpl_tc
    d538:	0000632e 000029e2 000029f6 00002a0e     .c...)...)...*..
    d548:	00002a26 00002a50 00002a6a 00002b28     &*..P*..j*..(+..
    d558:	00002a94 00002ab8 00002ac2 00002acc     .*...*...*...*..
    d568:	00002ae4 00002b0a 00003208 00003212     .*...+...2...2..
    d578:	0000321c 00003224 0000322e 00003238     .2..$2...2..82..
    d588:	20544547 0000202f 20544547 7465732f     GET / ..GET /set
    d598:	6c61765f 00000073 3d706d61 76266625     _vals...amp=%f&v
    d5a8:	3d746c6f 00006625 50545448 312e312f     olt=%f..HTTP/1.1
    d5b8:	30303220 0d4b4f20 6e6f430a 746e6574      200 OK..Content
    d5c8:	7079542d 61203a65 696c7070 69746163     -Type: applicati
    d5d8:	6a2f6e6f 0d6e6f73 7b0a0d0a 63757322     on/json....{"suc
    d5e8:	73736563 72743a22 007d6575 20544547     cess":true}.GET 
    d5f8:	6e6f632f 6c6f7274 00000000 69766564     /control....devi
    d608:	253d6563 5d265e5b 74636126 3d6e6f69     ce=%[^&]&action=
    d618:	00007325 006e6166 00006e6f 0066666f     %s..fan.on..off.
    d628:	00757370 20544547 7465672f 6c61765f     psu.GET /get_val
    d638:	00000073 50545448 312e312f 30303220     s...HTTP/1.1 200
    d648:	0d4b4f20 6e6f430a 746e6574 7079542d      OK..Content-Typ
    d658:	61203a65 696c7070 69746163 6a2f6e6f     e: application/j
    d668:	0d6e6f73 7b0a0d0a 706d6122 2e253a22     son....{"amp":%.
    d678:	222c6632 746c6f76 2e253a22 222c6632     2f,"volt":%.2f,"
    d688:	74746177 2e253a22 007d6632              watt":%.2f}.

0000d694 <psu_page>:
    d694:	50545448 312e312f 30303220 0d4b4f20     HTTP/1.1 200 OK.
    d6a4:	6e6f430a 746e6574 7079542d 74203a65     .Content-Type: t
    d6b4:	2f747865 6c6d7468 0a0d0a0d 4f44213c     ext/html....<!DO
    d6c4:	50595443 74682045 3c3e6c6d 6c6d7468     CTYPE html><html
    d6d4:	6e616c20 65223d67 3c3e226e 64616568      lang="en"><head
    d6e4:	656d3c3e 63206174 73726168 223d7465     ><meta charset="
    d6f4:	2d465455 3c3e2238 6c746974 6f503e65     UTF-8"><title>Po
    d704:	20726577 70707553 4320796c 72746e6f     wer Supply Contr
    d714:	2f3c6c6f 6c746974 733c3e65 656c7974     ol</title><style
    d724:	646f623e 6f667b79 662d746e 6c696d61     >body{font-famil
    d734:	72413a79 2c6c6169 736e6173 7265732d     y:Arial,sans-ser
    d744:	643b6669 6c707369 663a7961 3b78656c     if;display:flex;
    d754:	78656c66 7269642d 69746365 633a6e6f     flex-direction:c
    d764:	6d756c6f 6c613b6e 2d6e6769 6d657469     olumn;align-item
    d774:	65633a73 7265746e 6461703b 676e6964     s:center;padding
    d784:	7030323a 61623b78 72676b63 646e756f     :20px;background
    d794:	3066233a 30663066 632e7d3b 61746e6f     :#f0f0f0;}.conta
    d7a4:	72656e69 78616d7b 6469772d 343a6874     iner{max-width:4
    d7b4:	78703030 6469773b 313a6874 3b253030     00px;width:100%;
    d7c4:	6b636162 756f7267 773a646e 65746968     background:white
    d7d4:	6461703b 676e6964 7030323a 6f623b78     ;padding:20px;bo
    d7e4:	72656472 6461722d 3a737569 78703031     rder-radius:10px
    d7f4:	786f623b 6168732d 3a776f64 20302030     ;box-shadow:0 0 
    d804:	78703031 62677220 2c302861 2c302c30     10px rgba(0,0,0,
    d814:	29312e30 742e7d3b 656c7469 7865747b     0.1);}.title{tex
    d824:	6c612d74 3a6e6769 746e6563 6d3b7265     t-align:center;m
    d834:	69677261 6f622d6e 6d6f7474 7030323a     argin-bottom:20p
    d844:	2e7d3b78 7b776f72 70736964 3a79616c     x;}.row{display:
    d854:	78656c66 73756a3b 79666974 6e6f632d     flex;justify-con
    d864:	746e6574 6170733a 622d6563 65777465     tent:space-betwe
    d874:	6d3b6e65 69677261 6f622d6e 6d6f7474     en;margin-bottom
    d884:	7030313a 2e7d3b78 20776f72 6562616c     :10px;}.row labe
    d894:	69777b6c 3a687464 3b253034 6f722e7d     l{width:40%;}.ro
    d8a4:	6e692077 7b747570 74646977 35353a68     w input{width:55
    d8b4:	65743b25 612d7478 6e67696c 6769723a     %;text-align:rig
    d8c4:	7d3b7468 7475622e 2d6e6f74 7b776f72     ht;}.button-row{
    d8d4:	70736964 3a79616c 78656c66 73756a3b     display:flex;jus
    d8e4:	79666974 6e6f632d 746e6574 6170733a     tify-content:spa
    d8f4:	622d6563 65777465 6d3b6e65 69677261     ce-between;margi
    d904:	6f742d6e 30323a70 7d3b7870 7475622e     n-top:20px;}.but
    d914:	2d6e6f74 20776f72 74747562 777b6e6f     ton-row button{w
    d924:	68746469 2538343a 6461703b 676e6964     idth:48%;padding
    d934:	7030313a 61623b78 72676b63 646e756f     :10px;background
    d944:	3030233a 66666237 6c6f633b 773a726f     :#007bff;color:w
    d954:	65746968 726f623b 3a726564 656e6f6e     hite;border:none
    d964:	726f623b 2d726564 69646172 353a7375     ;border-radius:5
    d974:	633b7870 6f737275 6f703a72 65746e69     px;cursor:pointe
    d984:	2e7d3b72 74747562 722d6e6f 6220776f     r;}.button-row b
    d994:	6f747475 6f683a6e 7b726576 6b636162     utton:hover{back
    d9a4:	756f7267 233a646e 36353030 7d3b3362     ground:#0056b3;}
    d9b4:	6572702e 2d746573 7b776f72 70736964     .preset-row{disp
    d9c4:	3a79616c 78656c66 73756a3b 79666974     lay:flex;justify
    d9d4:	6e6f632d 746e6574 6170733a 622d6563     -content:space-b
    d9e4:	65777465 6d3b6e65 69677261 6f742d6e     etween;margin-to
    d9f4:	30323a70 7d3b7870 6572702e 2d746573     p:20px;}.preset-
    da04:	20776f72 74747562 777b6e6f 68746469     row button{width
    da14:	2532333a 6461703b 676e6964 7030313a     :32%;padding:10p
    da24:	61623b78 72676b63 646e756f 3832233a     x;background:#28
    da34:	35343761 6c6f633b 773a726f 65746968     a745;color:white
    da44:	726f623b 3a726564 656e6f6e 726f623b     ;border:none;bor
    da54:	2d726564 69646172 353a7375 633b7870     der-radius:5px;c
    da64:	6f737275 6f703a72 65746e69 2e7d3b72     ursor:pointer;}.
    da74:	73657270 722d7465 6220776f 6f747475     preset-row butto
    da84:	6f683a6e 7b726576 6b636162 756f7267     n:hover{backgrou
    da94:	233a646e 38383132 7d3b3833 74732f3c     nd:#218838;}</st
    daa4:	3e656c79 65682f3c 3c3e6461 79646f62     yle></head><body
    dab4:	69643c3e 6c632076 3d737361 6e6f6322     ><div class="con
    dac4:	6e696174 3e227265 2031683c 73616c63     tainer"><h1 clas
    dad4:	74223d73 656c7469 6f503e22 20726577     s="title">Power 
    dae4:	70707553 4320796c 72746e6f 2f3c6c6f     Supply Control</
    daf4:	3c3e3168 20766964 73616c63 72223d73     h1><div class="r
    db04:	3e22776f 62616c3c 66206c65 223d726f     ow"><label for="
    db14:	2d706d61 70736964 2279616c 706d413e     amp-display">Amp
    db24:	6c2f3c3a 6c656261 6e693c3e 20747570     :</label><input 
    db34:	65707974 6574223d 20227478 223d6469     type="text" id="
    db44:	2d706d61 70736964 2279616c 61657220     amp-display" rea
    db54:	6c6e6f64 2f3c3e79 3e766964 7669643c     donly></div><div
    db64:	616c6320 223d7373 22776f72 616c3c3e      class="row"><la
    db74:	206c6562 3d726f66 6c6f7622 69642d74     bel for="volt-di
    db84:	616c7073 563e2279 3a746c6f 616c2f3c     splay">Volt:</la
    db94:	3e6c6562 706e693c 74207475 3d657079     bel><input type=
    dba4:	78657422 69202274 76223d64 2d746c6f     "text" id="volt-
    dbb4:	70736964 2279616c 61657220 6c6e6f64     display" readonl
    dbc4:	2f3c3e79 3e766964 7669643c 616c6320     y></div><div cla
    dbd4:	223d7373 22776f72 616c3c3e 206c6562     ss="row"><label 
    dbe4:	3d726f66 74617722 69642d74 616c7073     for="watt-displa
    dbf4:	573e2279 3a747461 616c2f3c 3e6c6562     y">Watt:</label>
    dc04:	706e693c 74207475 3d657079 78657422     <input type="tex
    dc14:	69202274 77223d64 2d747461 70736964     t" id="watt-disp
    dc24:	2279616c 61657220 6c6e6f64 2f3c3e79     lay" readonly></
    dc34:	3e766964 7669643c 616c6320 223d7373     div><div class="
    dc44:	22776f72 616c3c3e 206c6562 3d726f66     row"><label for=
    dc54:	706d6122 706e692d 3e227475 20746553     "amp-input">Set 
    dc64:	3a706d41 616c2f3c 3e6c6562 706e693c     Amp:</label><inp
    dc74:	74207475 3d657079 78657422 69202274     ut type="text" i
    dc84:	61223d64 692d706d 7475706e 2f3c3e22     d="amp-input"></
    dc94:	3e766964 7669643c 616c6320 223d7373     div><div class="
    dca4:	22776f72 616c3c3e 206c6562 3d726f66     row"><label for=
    dcb4:	6c6f7622 6e692d74 22747570 7465533e     "volt-input">Set
    dcc4:	6c6f5620 2f3c3a74 6562616c 693c3e6c      Volt:</label><i
    dcd4:	7475706e 70797420 74223d65 22747865     nput type="text"
    dce4:	3d646920 6c6f7622 6e692d74 22747570      id="volt-input"
    dcf4:	642f3c3e 3c3e7669 20766964 73616c63     ></div><div clas
    dd04:	62223d73 6f747475 6f722d6e 3c3e2277     s="button-row"><
    dd14:	74747562 6f206e6f 696c636e 223d6b63     button onclick="
    dd24:	56746573 65756c61 22292873 7465533e     setValues()">Set
    dd34:	6c615620 3c736575 7475622f 3e6e6f74      Values</button>
    dd44:	7475623c 206e6f74 6c636e6f 3d6b6369     <button onclick=
    dd54:	6e6f6322 6c6f7274 69766544 27286563     "controlDevice('
    dd64:	27757370 6e6f272c 3e222927 6e727554     psu','on')">Turn
    dd74:	55535020 3c6e4f20 7475622f 3e6e6f74      PSU On</button>
    dd84:	69642f3c 643c3e76 63207669 7373616c     </div><div class
    dd94:	7562223d 6e6f7474 776f722d 623c3e22     ="button-row"><b
    dda4:	6f747475 6e6f206e 63696c63 63223d6b     utton onclick="c
    ddb4:	72746e6f 65446c6f 65636976 73702728     ontrolDevice('ps
    ddc4:	272c2775 2766666f 543e2229 206e7275     u','off')">Turn 
    ddd4:	20555350 3c66664f 7475622f 3e6e6f74     PSU Off</button>
    dde4:	7475623c 206e6f74 6c636e6f 3d6b6369     <button onclick=
    ddf4:	6e6f6322 6c6f7274 69766544 27286563     "controlDevice('
    de04:	276e6166 6e6f272c 3e222927 6e727554     fan','on')">Turn
    de14:	6e614620 3c6e4f20 7475622f 3e6e6f74      Fan On</button>
    de24:	69642f3c 643c3e76 63207669 7373616c     </div><div class
    de34:	7562223d 6e6f7474 776f722d 623c3e22     ="button-row"><b
    de44:	6f747475 6e6f206e 63696c63 63223d6b     utton onclick="c
    de54:	72746e6f 65446c6f 65636976 61662728     ontrolDevice('fa
    de64:	272c276e 2766666f 543e2229 206e7275     n','off')">Turn 
    de74:	206e6146 3c66664f 7475622f 3e6e6f74     Fan Off</button>
    de84:	69642f3c 643c3e76 63207669 7373616c     </div><div class
    de94:	7270223d 74657365 776f722d 623c3e22     ="preset-row"><b
    dea4:	6f747475 6e6f206e 63696c63 73223d6b     utton onclick="s
    deb4:	72507465 74657365 22293128 2056353e     etPreset(1)">5V 
    dec4:	2f3c4131 74747562 3c3e6e6f 74747562     1A</button><butt
    ded4:	6f206e6f 696c636e 223d6b63 50746573     on onclick="setP
    dee4:	65736572 29322874 32313e22 41322056     reset(2)">12V 2A
    def4:	75622f3c 6e6f7474 75623c3e 6e6f7474     </button><button
    df04:	636e6f20 6b63696c 6573223d 65725074      onclick="setPre
    df14:	28746573 3e222933 20563432 2f3c4132     set(3)">24V 2A</
    df24:	74747562 3c3e6e6f 7669642f 642f3c3e     button></div></d
    df34:	3c3e7669 69726373 663e7470 74636e75     iv><script>funct
    df44:	206e6f69 63746566 6c615668 28736575     ion fetchValues(
    df54:	65667b29 28686374 65672f27 61765f74     ){fetch('/get_va
    df64:	2927736c 6568742e 6572286e 6e6f7073     ls').then(respon
    df74:	3e3d6573 70736572 65736e6f 6f736a2e     se=>response.jso
    df84:	2929286e 6568742e 6164286e 3e3d6174     n()).then(data=>
    df94:	636f647b 6e656d75 65672e74 656c4574     {document.getEle
    dfa4:	746e656d 64497942 6d612728 69642d70     mentById('amp-di
    dfb4:	616c7073 2e292779 756c6176 61643d65     splay').value=da
    dfc4:	612e6174 742e706d 7869466f 32286465     ta.amp.toFixed(2
    dfd4:	6f643b29 656d7563 672e746e 6c457465     );document.getEl
    dfe4:	6e656d65 49794274 76272864 2d746c6f     ementById('volt-
    dff4:	70736964 2779616c 61762e29 3d65756c     display').value=
    e004:	61746164 6c6f762e 6f742e74 65786946     data.volt.toFixe
    e014:	29322864 636f643b 6e656d75 65672e74     d(2);document.ge
    e024:	656c4574 746e656d 64497942 61772728     tElementById('wa
    e034:	642d7474 6c707369 29277961 6c61762e     tt-display').val
    e044:	643d6575 2e617461 74746177 466f742e     ue=data.watt.toF
    e054:	64657869 3b293228 632e297d 68637461     ixed(2);}).catch
    e064:	72726528 3e3d726f 736e6f63 2e656c6f     (error=>console.
    e074:	6f727265 45272872 726f7272 74656620     error('Error fet
    e084:	6e696863 61762067 7365756c 652c273a     ching values:',e
    e094:	726f7272 7d3b2929 636e7566 6e6f6974     rror));}function
    e0a4:	74657320 756c6156 29287365 6e6f637b      setValues(){con
    e0b4:	61207473 703d706d 65737261 616f6c46     st amp=parseFloa
    e0c4:	6f642874 656d7563 672e746e 6c457465     t(document.getEl
    e0d4:	6e656d65 49794274 61272864 692d706d     ementById('amp-i
    e0e4:	7475706e 762e2927 65756c61 6f633b29     nput').value);co
    e0f4:	2074736e 746c6f76 7261703d 6c466573     nst volt=parseFl
    e104:	2874616f 75636f64 746e656d 7465672e     oat(document.get
    e114:	6d656c45 42746e65 28644979 6c6f7627     ElementById('vol
    e124:	6e692d74 27747570 61762e29 2965756c     t-input').value)
    e134:	7465663b 60286863 7465732f 6c61765f     ;fetch(`/set_val
    e144:	6d613f73 7b243d70 7d706d61 6c6f7626     s?amp=${amp}&vol
    e154:	7b243d74 746c6f76 2e29607d 6e656874     t=${volt}`).then
    e164:	73657228 736e6f70 723e3d65 6f707365     (response=>respo
    e174:	2e65736e 6e6f736a 2e292928 6e656874     nse.json()).then
    e184:	74616428 7b3e3d61 64286669 2e617461     (data=>{if(data.
    e194:	63637573 29737365 7465667b 61566863     success){fetchVa
    e1a4:	7365756c 7d3b2928 65736c65 656c617b     lues();}else{ale
    e1b4:	27287472 6f727245 65732072 6e697474     rt('Error settin
    e1c4:	61762067 7365756c 7d3b2927 632e297d     g values');}}).c
    e1d4:	68637461 72726528 3e3d726f 736e6f63     atch(error=>cons
    e1e4:	2e656c6f 6f727265 45272872 726f7272     ole.error('Error
    e1f4:	74657320 676e6974 6c617620 3a736575      setting values:
    e204:	72652c27 29726f72 667d3b29 74636e75     ',error));}funct
    e214:	206e6f69 746e6f63 446c6f72 63697665     ion controlDevic
    e224:	65642865 65636976 7463612c 296e6f69     e(device,action)
    e234:	7465667b 60286863 6e6f632f 6c6f7274     {fetch(`/control
    e244:	7665643f 3d656369 65647b24 65636976     ?device=${device
    e254:	6361267d 6e6f6974 617b243d 6f697463     }&action=${actio
    e264:	29607d6e 6568742e 6572286e 6e6f7073     n}`).then(respon
    e274:	3e3d6573 70736572 65736e6f 6f736a2e     se=>response.jso
    e284:	2929286e 6568742e 6164286e 3e3d6174     n()).then(data=>
    e294:	2866697b 61746164 6375732e 73736563     {if(data.success
    e2a4:	6c617b29 28747265 647b2460 63697665     ){alert(`${devic
    e2b4:	6f742e65 65707055 73614372 7d292865     e.toUpperCase()}
    e2c4:	617b2420 6f697463 6f742e6e 65707055      ${action.toUppe
    e2d4:	73614372 7d292865 63755320 73736563     rCase()} Success
    e2e4:	606c7566 657d3b29 7b65736c 72656c61     ful`);}else{aler
    e2f4:	45602874 726f7272 617b2420 6f697463     t(`Error ${actio
    e304:	6e697d6e 7b242067 69766564 607d6563     n}ing ${device}`
    e314:	7d7d3b29 61632e29 28686374 6f727265     );}}).catch(erro
    e324:	633e3d72 6f736e6f 652e656c 726f7272     r=>console.error
    e334:	72456028 20726f72 63617b24 6e6f6974     (`Error ${action
    e344:	676e697d 647b2420 63697665 603a7d65     }ing ${device}:`
    e354:	7272652c 2929726f 75667d3b 6974636e     ,error));}functi
    e364:	73206e6f 72507465 74657365 65727028     on setPreset(pre
    e374:	29746573 74656c7b 706d6120 6c6f762c     set){let amp,vol
    e384:	66693b74 65727028 3d746573 7b29313d     t;if(preset==1){
    e394:	3d706d61 35322e31 6c6f763b 2e353d74     amp=1.25;volt=5.
    e3a4:	657d3b33 2065736c 70286669 65736572     3;}else if(prese
    e3b4:	323d3d74 6d617b29 2e323d70 6f763b30     t==2){amp=2.0;vo
    e3c4:	313d746c 3b302e32 736c657d 66692065     lt=12.0;}else if
    e3d4:	65727028 3d746573 7b29333d 3d706d61     (preset==3){amp=
    e3e4:	3b302e32 746c6f76 2e34323d 647d3b30     2.0;volt=24.0;}d
    e3f4:	6d75636f 2e746e65 45746567 656d656c     ocument.getEleme
    e404:	7942746e 27286449 2d706d61 75706e69     ntById('amp-inpu
    e414:	2e292774 756c6176 6d613d65 6f643b70     t').value=amp;do
    e424:	656d7563 672e746e 6c457465 6e656d65     cument.getElemen
    e434:	49794274 76272864 2d746c6f 75706e69     tById('volt-inpu
    e444:	2e292774 756c6176 6f763d65 733b746c     t').value=volt;s
    e454:	61567465 7365756c 7d3b2928 49746573     etValues();}setI
    e464:	7265746e 286c6176 63746566 6c615668     nterval(fetchVal
    e474:	2c736575 30303031 2f3c3b29 69726373     ues,1000);</scri
    e484:	3c3e7470 646f622f 2f3c3e79 6c6d7468     pt></body></html
    e494:	0000003e 00003ca4 00003bf4 00003bf4     >....<...;...;..
    e4a4:	00003bf2 00003c96 00003c96 00003c8c     .;...<...<...<..
    e4b4:	00003bf2 00003c96 00003c8c 00003c96     .;...<...<...<..
    e4c4:	00003bf2 00003c9c 00003c9c 00003c9c     .;...<...<...<..
    e4d4:	00003d2c 00003fb0 00003f92 00003f4c     ,=...?...?..L?..
    e4e4:	00003e6a 00003f4c 00003f84 00003f4c     j>..L?...?..L?..
    e4f4:	00003e6a 00003f92 00003f92 00003f84     j>...?...?...?..
    e504:	00003e6a 00003e62 00003e62 00003e62     j>..b>..b>..b>..
    e514:	000041c8 00004610 000044d0 000044d0     .A...F...D...D..
    e524:	000044cc 000045e8 000045e8 000045da     .D...E...E...E..
    e534:	000044cc 000045e8 000045da 000045e8     .D...E...E...E..
    e544:	000044cc 000045f0 000045f0 000045f0     .D...E...E...E..
    e554:	000047f4                                .G..

0000e558 <_global_impure_ptr>:
    e558:	20000098 00006454 000064c8 000064c8     ... Td...d...d..
    e568:	00006438 000064c8 000064c8 000064c8     8d...d...d...d..
    e578:	000064c8 000064c8 000064c8 00006440     .d...d...d..@d..
    e588:	00005f22 000064c8 00005edc 00005f2c     "_...d...^..,_..
    e598:	000064c8 00005f78 00006162 00006162     .d..x_..ba..ba..
    e5a8:	00006162 00006162 00006162 00006162     ba..ba..ba..ba..
    e5b8:	00006162 00006162 00006162 000064c8     ba..ba..ba...d..
    e5c8:	000064c8 000064c8 000064c8 000064c8     .d...d...d...d..
    e5d8:	000064c8 000064c8 000064c8 000064c8     .d...d...d...d..
    e5e8:	000064c8 00005f80 000060c8 000064c8     .d..._...`...d..
    e5f8:	000060c8 000064c8 000064c8 000064c8     .`...d...d...d..
    e608:	000064c8 00006192 000064c8 000064c8     .d...a...d...d..
    e618:	0000619a 000064c8 000064c8 000064c8     .a...d...d...d..
    e628:	000064c8 000064c8 0000623c 000064c8     .d...d..<b...d..
    e638:	000064c8 0000626e 000064c8 000064c8     .d..nb...d...d..
    e648:	000064c8 000064c8 000064c8 000064c8     .d...d...d...d..
    e658:	000064c8 000064c8 000064c8 000064c8     .d...d...d...d..
    e668:	00006368 0000639c 000060c8 000060c8     hc...c...`...`..
    e678:	000060c8 000063ae 0000639c 000064c8     .`...c...c...d..
    e688:	000064c8 000063b6 000064c8 000062d0     .d...c...d...b..
    e698:	00006496 0000640c 00006306 000064c8     .d...d...c...d..
    e6a8:	0000630e 000064c8 00006464 000064c8     .c...d..dd...d..
    e6b8:	000064c8 000063c6 00464e49 00666e69     .d...c..INF.inf.
    e6c8:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    e6d8:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    e6e8:	37363534 62613938 66656463 00000000     456789abcdef....
    e6f8:	6c756e28 0000296c 00000030              (null)..0...

0000e704 <blanks.7223>:
    e704:	20202020 20202020 20202020 20202020                     

0000e714 <zeroes.7224>:
    e714:	30303030 30303030 30303030 30303030     0000000000000000
    e724:	00007540 00007680 00007680 00007680     @u...v...v...v..
    e734:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e744:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e754:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e764:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e774:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e784:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e794:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e7a4:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e7b4:	00007680 000074dc 00007680 00007680     .v...t...v...v..
    e7c4:	00007680 00007680 0000778a 00007680     .v...v...w...v..
    e7d4:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e7e4:	0000776e 0000776e 0000776e 0000776e     nw..nw..nw..nw..
    e7f4:	0000776e 0000776e 0000776e 0000776e     nw..nw..nw..nw..
    e804:	0000776e 0000776e 00007680 00007680     nw..nw...v...v..
    e814:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e824:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e834:	00007760 0000773e 00007680 0000773e     `w..>w...v..>w..
    e844:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e854:	00007738 00007680 00007680 0000772c     8w...v...v..,w..
    e864:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e874:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e884:	00007726 00007680 00007680 0000770a     &w...v...v...w..
    e894:	00007680 00007680 00007680 00007680     .v...v...v...v..
    e8a4:	00007680 00007680 00007680 000076fa     .v...v...v...v..
    e8b4:	000076f4 0000773e 0000773e 0000773e     .v..>w..>w..>w..
    e8c4:	000076e4 00007548 00007680 00007680     .v..Hu...v...v..
    e8d4:	0000765c 00007680 000076aa 0000769a     \v...v...v...v..
    e8e4:	00007642 00007680 00007680 0000763a     Bv...v...v..:v..
    e8f4:	00007680 00007598 00007680 00007680     .v...u...v...v..
    e904:	00007726 0000780a 000079e0 0000780a     &w...x...y...x..
    e914:	000079e0 000079e0 000077ce 00007792     .y...y...w...w..
    e924:	00007792 00007792 00007792 00007792     .w...w...w...w..
    e934:	00007792 00007792 00007792 00007792     .w...w...w...w..
    e944:	000079e0 000079e0 000079e0 000079e0     .y...y...y...y..
    e954:	000079e0 000079e0 000079e0 000079c4     .y...y...y...y..
    e964:	000079e0 000079e0 000079e0 0000797a     .y...y...y..zy..
    e974:	0000796c 000079e0 000079e0 00007854     ly...y...y..Tx..
    e984:	000079e0 000079e0 000079e0 000079e0     .y...y...y...y..
    e994:	00007824 000079e0 000079e0 000079e0     $x...y...y...y..
    e9a4:	000079e0 000079e0 00007818 000079e0     .y...y...x...y..
    e9b4:	000079e0 000079e0 000079e0 000079d2     .y...y...y...y..
    e9c4:	000079e0 000079e0 000079e0 000079e0     .y...y...y...y..
    e9d4:	000079e0 000079e0 000079e0 000079c4     .y...y...y...y..
    e9e4:	000079e0 000079e0 000079e0 0000797a     .y...y...y..zy..
    e9f4:	0000796c 000079e0 000079e0 00007854     ly...y...y..Tx..
    ea04:	000079e0 000079e0 000079e0 000079e0     .y...y...y...y..
    ea14:	00007824 000079e0 000079e0 000079e0     $x...y...y...y..
    ea24:	000079e0 000079e0 00007818 000079e0     .y...y...x...y..
    ea34:	000079e0 000079e0 000079e0 000079d2     .y...y...y...y..
    ea44:	00007c0a 00007b62 00007c0a 00007b62     .|..b{...|..b{..
    ea54:	00007b62 00007bae 00007b9e 00007b9e     b{...{...{...{..
    ea64:	00007b9e 00007b9e 00007b9e 00007b9e     .{...{...{...{..
    ea74:	00007b9e 00007bfa 00007bfa 00007b62     .{...{...{..b{..
    ea84:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    ea94:	00007b62 00007b62 00007b92 00007b92     b{..b{...{...{..
    eaa4:	00007b92 00007b92 00007b92 00007b92     .{...{...{...{..
    eab4:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    eac4:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    ead4:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    eae4:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    eaf4:	00007b62 00007b2e 00007b62 00007b62     b{...{..b{..b{..
    eb04:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    eb14:	00007b62 00007b62 00007b92 00007b92     b{..b{...{...{..
    eb24:	00007b92 00007b92 00007b92 00007b92     .{...{...{...{..
    eb34:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    eb44:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    eb54:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    eb64:	00007b62 00007b62 00007b62 00007b62     b{..b{..b{..b{..
    eb74:	00007b62 00007b2e 646c2565 00000000     b{...{..e%ld....

0000eb84 <basefix.7294>:
    eb84:	0001000a 00030002 00050004 00070006     ................
    eb94:	00090008 000b000a 000d000c 000f000e     ................
    eba4:	00000010 69666e49 7974696e 00000000     ....Infinity....
    ebb4:	004e614e 00000043 49534f50 00000058     NaN.C...POSIX...
    ebc4:	0000002e                                ....

0000ebc8 <__mprec_bigtens>:
    ebc8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    ebd8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    ebe8:	7f73bf3c 75154fdd                       <.s..O.u

0000ebf0 <__mprec_tens>:
    ebf0:	00000000 3ff00000 00000000 40240000     .......?......$@
    ec00:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    ec10:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    ec20:	00000000 412e8480 00000000 416312d0     .......A......cA
    ec30:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    ec40:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    ec50:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    ec60:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    ec70:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    ec80:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    ec90:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    eca0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    ecb0:	79d99db4 44ea7843                       ...yCx.D

0000ecb8 <p05.6055>:
    ecb8:	00000005 00000019 0000007d 0000a840     ........}...@...
    ecc8:	0000a8da 0000a8da 0000a8da 0000a8da     ................
    ecd8:	0000a8da 0000a8da 0000a8da 0000a8da     ................
    ece8:	0000a8ce 0000a8ce 0000a8ce 0000a8ce     ................
    ecf8:	0000a8ce 0000a8da 0000a8da 0000a8da     ................
    ed08:	0000a8da 0000a8da 0000a8da 0000a8da     ................
    ed18:	0000a8da 0000a8da 0000a8da 0000a8da     ................
    ed28:	0000a8da 0000a8da 0000a8da 0000a8da     ................
    ed38:	0000a8da 0000a8da 0000a8da 0000a8ce     ................
    ed48:	0000a8da 0000a8da 0000a8da 0000a8da     ................
    ed58:	0000a8da 0000a8da 0000a8da 0000a8da     ................
    ed68:	0000a8da 0000a8da 0000a874 0000a8da     ........t.......
    ed78:	0000a916 0000b26c 0000b28e 0000b284     ....l...........
    ed88:	0000b27e 0000b262 0000b28e 0000666e     ~...b.......nf..
    ed98:	74696e69 00000079 00006e61              inity...an..

0000eda4 <fpi.6141>:
    eda4:	00000035 fffffbce 000003cb 00000001     5...............
    edb4:	00000000                                ....

0000edb8 <fpinan.6177>:
    edb8:	00000034 fffffbce 000003cb 00000001     4...............
	...

0000edd0 <tinytens>:
    edd0:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    ede0:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    edf0:	64ac6f43 11680628                       Co.d(.h.

0000edf8 <_ctype_>:
    edf8:	20202000 20202020 28282020 20282828     .         ((((( 
    ee08:	20202020 20202020 20202020 20202020                     
    ee18:	10108820 10101010 10101010 10101010      ...............
    ee28:	04040410 04040404 10040404 10101010     ................
    ee38:	41411010 41414141 01010101 01010101     ..AAAAAA........
    ee48:	01010101 01010101 01010101 10101010     ................
    ee58:	42421010 42424242 02020202 02020202     ..BBBBBB........
    ee68:	02020202 02020202 02020202 10101010     ................
    ee78:	00000020 00000000 00000000 00000000      ...............
	...

0000eefc <__hexdig>:
	...
    ef2c:	13121110 17161514 00001918 00000000     ................
    ef3c:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
    ef5c:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

0000effc <_init>:
    effc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    effe:	46c0      	nop			; (mov r8, r8)
    f000:	bcf8      	pop	{r3, r4, r5, r6, r7}
    f002:	bc08      	pop	{r3}
    f004:	469e      	mov	lr, r3
    f006:	4770      	bx	lr

0000f008 <__init_array_start>:
    f008:	000081d1 	.word	0x000081d1

0000f00c <__frame_dummy_init_array_entry>:
    f00c:	000000cd                                ....

0000f010 <_fini>:
    f010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f012:	46c0      	nop			; (mov r8, r8)
    f014:	bcf8      	pop	{r3, r4, r5, r6, r7}
    f016:	bc08      	pop	{r3}
    f018:	469e      	mov	lr, r3
    f01a:	4770      	bx	lr

0000f01c <__fini_array_start>:
    f01c:	000000a5 	.word	0x000000a5
