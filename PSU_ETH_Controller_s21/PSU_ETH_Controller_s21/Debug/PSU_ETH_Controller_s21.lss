
PSU_ETH_Controller_s21.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00010b78  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00010b78  00010b78  00020b78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a48  20000000  00010b80  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000b3c  20000a48  000115c8  00030a48  2**2
                  ALLOC
  4 .stack        00002004  20001584  00012104  00030a48  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00030a48  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00030a72  2**0
                  CONTENTS, READONLY
  7 .debug_info   00035a77  00000000  00000000  00030acb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000490f  00000000  00000000  00066542  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00015389  00000000  00000000  0006ae51  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00001090  00000000  00000000  000801da  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001108  00000000  00000000  0008126a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00008ee4  00000000  00000000  00082372  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001337c  00000000  00000000  0008b256  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005e7bb  00000000  00000000  0009e5d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00004038  00000000  00000000  000fcd90  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
	PWM_1_PORT_init();
	pwm_init(&PWM_1, TC7, _tc_get_pwm());
}

void system_init(void)
{
       0:	88 35 00 20 09 01 00 00 05 01 00 00 05 01 00 00     .5. ............
	...
                                                    bool value)
{
	uint8_t tmp;
	PORT_CRITICAL_SECTION_ENTER();
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
	tmp &= ~PORT_PINCFG_PMUXEN;
      2c:	05 01 00 00 00 00 00 00 00 00 00 00 05 01 00 00     ................

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      3c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      4c:	49 0d 00 00 3d 0b 00 00 05 01 00 00 05 01 00 00     I...=...........
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      5c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      6c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
      7c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
      8c:	35 19 00 00 45 19 00 00 05 01 00 00 05 01 00 00     5...E...........
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
      9c:	05 01 00 00 05 01 00 00                             ........

000000a4 <__do_global_dtors_aux>:
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      a4:	b510      	push	{r4, lr}
      a6:	4c06      	ldr	r4, [pc, #24]	; (c0 <__do_global_dtors_aux+0x1c>)
      a8:	7823      	ldrb	r3, [r4, #0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      aa:	2b00      	cmp	r3, #0
      ac:	d107      	bne.n	be <__do_global_dtors_aux+0x1a>
      ae:	4b05      	ldr	r3, [pc, #20]	; (c4 <__do_global_dtors_aux+0x20>)
	tmp &= ~PORT_PINCFG_PMUXEN;
      b0:	2b00      	cmp	r3, #0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      b2:	d002      	beq.n	ba <__do_global_dtors_aux+0x16>
      b4:	4804      	ldr	r0, [pc, #16]	; (c8 <__do_global_dtors_aux+0x24>)
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
      b6:	e000      	b.n	ba <__do_global_dtors_aux+0x16>
      b8:	bf00      	nop
      ba:	2301      	movs	r3, #1
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      bc:	7023      	strb	r3, [r4, #0]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      be:	bd10      	pop	{r4, pc}
      c0:	20000a48 	.word	0x20000a48
      c4:	00000000 	.word	0x00000000
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      c8:	00010b80 	.word	0x00010b80

000000cc <frame_dummy>:
      cc:	4b08      	ldr	r3, [pc, #32]	; (f0 <frame_dummy+0x24>)
	tmp &= ~PORT_PINCFG_PMUXEN;
      ce:	b510      	push	{r4, lr}
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      d0:	2b00      	cmp	r3, #0
      d2:	d003      	beq.n	dc <frame_dummy+0x10>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
      d4:	4907      	ldr	r1, [pc, #28]	; (f4 <frame_dummy+0x28>)
      d6:	4808      	ldr	r0, [pc, #32]	; (f8 <frame_dummy+0x2c>)
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      d8:	e000      	b.n	dc <frame_dummy+0x10>
      da:	bf00      	nop
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      dc:	4807      	ldr	r0, [pc, #28]	; (fc <frame_dummy+0x30>)
      de:	6803      	ldr	r3, [r0, #0]
      e0:	2b00      	cmp	r3, #0
      e2:	d100      	bne.n	e6 <frame_dummy+0x1a>
      e4:	bd10      	pop	{r4, pc}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      e6:	4b06      	ldr	r3, [pc, #24]	; (100 <frame_dummy+0x34>)
      e8:	2b00      	cmp	r3, #0
	tmp &= ~PORT_PINCFG_PMUXEN;
      ea:	d0fb      	beq.n	e4 <frame_dummy+0x18>
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      ec:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
      ee:	e7f9      	b.n	e4 <frame_dummy+0x18>
      f0:	00000000 	.word	0x00000000
      f4:	20000a4c 	.word	0x20000a4c
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      f8:	00010b80 	.word	0x00010b80
      fc:	00010b80 	.word	0x00010b80
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     100:	00000000 	.word	0x00000000

00000104 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     104:	e7fe      	b.n	104 <Dummy_Handler>
	...

00000108 <Reset_Handler>:
{
     108:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     10a:	4a12      	ldr	r2, [pc, #72]	; (154 <Reset_Handler+0x4c>)
     10c:	4b12      	ldr	r3, [pc, #72]	; (158 <Reset_Handler+0x50>)
     10e:	429a      	cmp	r2, r3
     110:	d009      	beq.n	126 <Reset_Handler+0x1e>
     112:	4b11      	ldr	r3, [pc, #68]	; (158 <Reset_Handler+0x50>)
     114:	4a0f      	ldr	r2, [pc, #60]	; (154 <Reset_Handler+0x4c>)
     116:	e003      	b.n	120 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     118:	6811      	ldr	r1, [r2, #0]
     11a:	6019      	str	r1, [r3, #0]
     11c:	3304      	adds	r3, #4
     11e:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     120:	490e      	ldr	r1, [pc, #56]	; (15c <Reset_Handler+0x54>)
     122:	428b      	cmp	r3, r1
     124:	d3f8      	bcc.n	118 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     126:	4b0e      	ldr	r3, [pc, #56]	; (160 <Reset_Handler+0x58>)
     128:	e002      	b.n	130 <Reset_Handler+0x28>
                *pDest++ = 0;
     12a:	2200      	movs	r2, #0
     12c:	601a      	str	r2, [r3, #0]
     12e:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     130:	4a0c      	ldr	r2, [pc, #48]	; (164 <Reset_Handler+0x5c>)
     132:	4293      	cmp	r3, r2
     134:	d3f9      	bcc.n	12a <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     136:	4a0c      	ldr	r2, [pc, #48]	; (168 <Reset_Handler+0x60>)
     138:	21ff      	movs	r1, #255	; 0xff
     13a:	4b0c      	ldr	r3, [pc, #48]	; (16c <Reset_Handler+0x64>)
     13c:	438b      	bics	r3, r1
     13e:	6093      	str	r3, [r2, #8]
        NVMCTRL->CTRLB.bit.MANW = 1;
     140:	4a0b      	ldr	r2, [pc, #44]	; (170 <Reset_Handler+0x68>)
     142:	6851      	ldr	r1, [r2, #4]
     144:	2380      	movs	r3, #128	; 0x80
     146:	430b      	orrs	r3, r1
     148:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     14a:	f005 fcd1 	bl	5af0 <__libc_init_array>
        main();
     14e:	f003 f9e1 	bl	3514 <main>
     152:	e7fe      	b.n	152 <Reset_Handler+0x4a>
     154:	00010b80 	.word	0x00010b80
     158:	20000000 	.word	0x20000000
     15c:	20000a48 	.word	0x20000a48
     160:	20000a48 	.word	0x20000a48
     164:	20001584 	.word	0x20001584
     168:	e000ed00 	.word	0xe000ed00
     16c:	00000000 	.word	0x00000000
     170:	41004000 	.word	0x41004000

00000174 <atomic_enter_critical>:
	TIMER_0_init();

	PWM_0_init();

	PWM_1_init();
}
     174:	f3ef 8310 	mrs	r3, PRIMASK
     178:	6003      	str	r3, [r0, #0]
     17a:	b672      	cpsid	i
     17c:	f3bf 8f5f 	dmb	sy
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
	__disable_irq();
	__DMB();
}
     180:	4770      	bx	lr

00000182 <atomic_leave_critical>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     182:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     186:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     188:	f383 8810 	msr	PRIMASK, r3
}
     18c:	4770      	bx	lr
	...

00000190 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     190:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     192:	4b04      	ldr	r3, [pc, #16]	; (1a4 <delay_ms+0x14>)
     194:	681c      	ldr	r4, [r3, #0]
     196:	f000 fc3f 	bl	a18 <_get_cycles_for_ms>
     19a:	0001      	movs	r1, r0
     19c:	0020      	movs	r0, r4
     19e:	f000 fc46 	bl	a2e <_delay_cycles>
}
     1a2:	bd10      	pop	{r4, pc}
     1a4:	20000a64 	.word	0x20000a64

000001a8 <process_ext_irq>:
 * \brief Interrupt processing routine
 *
 * \param[in] pin The pin which triggered the interrupt
 */
static void process_ext_irq(const uint32_t pin)
{
     1a8:	b570      	push	{r4, r5, r6, lr}
	uint8_t lower = 0, middle, upper = EXT_IRQ_AMOUNT;
     1aa:	2501      	movs	r5, #1
     1ac:	2400      	movs	r4, #0

	while (upper >= lower) {
     1ae:	e007      	b.n	1c0 <process_ext_irq+0x18>
		if (middle >= EXT_IRQ_AMOUNT) {
			return;
		}

		if (ext_irqs[middle].pin == pin) {
			if (ext_irqs[middle].cb) {
     1b0:	4a0d      	ldr	r2, [pc, #52]	; (1e8 <process_ext_irq+0x40>)
     1b2:	58b3      	ldr	r3, [r6, r2]
     1b4:	2b00      	cmp	r3, #0
     1b6:	d000      	beq.n	1ba <process_ext_irq+0x12>
				ext_irqs[middle].cb();
     1b8:	4798      	blx	r3
			lower = middle + 1;
		} else {
			upper = middle - 1;
		}
	}
}
     1ba:	bd70      	pop	{r4, r5, r6, pc}
			upper = middle - 1;
     1bc:	3a01      	subs	r2, #1
     1be:	b2d5      	uxtb	r5, r2
	while (upper >= lower) {
     1c0:	42ac      	cmp	r4, r5
     1c2:	d8fa      	bhi.n	1ba <process_ext_irq+0x12>
		middle = (upper + lower) >> 1;
     1c4:	192b      	adds	r3, r5, r4
     1c6:	105b      	asrs	r3, r3, #1
     1c8:	b2da      	uxtb	r2, r3
		if (middle >= EXT_IRQ_AMOUNT) {
     1ca:	2a00      	cmp	r2, #0
     1cc:	d1f5      	bne.n	1ba <process_ext_irq+0x12>
     1ce:	21ff      	movs	r1, #255	; 0xff
     1d0:	400b      	ands	r3, r1
		if (ext_irqs[middle].pin == pin) {
     1d2:	00de      	lsls	r6, r3, #3
     1d4:	4904      	ldr	r1, [pc, #16]	; (1e8 <process_ext_irq+0x40>)
     1d6:	1989      	adds	r1, r1, r6
     1d8:	6849      	ldr	r1, [r1, #4]
     1da:	4281      	cmp	r1, r0
     1dc:	d0e8      	beq.n	1b0 <process_ext_irq+0x8>
		if (ext_irqs[middle].pin < pin) {
     1de:	d2ed      	bcs.n	1bc <process_ext_irq+0x14>
			lower = middle + 1;
     1e0:	3201      	adds	r2, #1
     1e2:	b2d4      	uxtb	r4, r2
     1e4:	e7ec      	b.n	1c0 <process_ext_irq+0x18>
     1e6:	46c0      	nop			; (mov r8, r8)
     1e8:	20000a68 	.word	0x20000a68

000001ec <ext_irq_init>:
{
     1ec:	b510      	push	{r4, lr}
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     1ee:	2300      	movs	r3, #0
     1f0:	2b00      	cmp	r3, #0
     1f2:	d003      	beq.n	1fc <ext_irq_init+0x10>
	return _ext_irq_init(process_ext_irq);
     1f4:	4807      	ldr	r0, [pc, #28]	; (214 <ext_irq_init+0x28>)
     1f6:	f000 fc33 	bl	a60 <_ext_irq_init>
}
     1fa:	bd10      	pop	{r4, pc}
		ext_irqs[i].pin = 0xFFFFFFFF;
     1fc:	4a06      	ldr	r2, [pc, #24]	; (218 <ext_irq_init+0x2c>)
     1fe:	00d9      	lsls	r1, r3, #3
     200:	1850      	adds	r0, r2, r1
     202:	2401      	movs	r4, #1
     204:	4264      	negs	r4, r4
     206:	6044      	str	r4, [r0, #4]
		ext_irqs[i].cb  = NULL;
     208:	2000      	movs	r0, #0
     20a:	5088      	str	r0, [r1, r2]
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     20c:	3301      	adds	r3, #1
     20e:	b29b      	uxth	r3, r3
     210:	e7ee      	b.n	1f0 <ext_irq_init+0x4>
     212:	46c0      	nop			; (mov r8, r8)
     214:	000001a9 	.word	0x000001a9
     218:	20000a68 	.word	0x20000a68

0000021c <ext_irq_register>:
{
     21c:	b5f0      	push	{r4, r5, r6, r7, lr}
     21e:	46c6      	mov	lr, r8
     220:	b500      	push	{lr}
     222:	b084      	sub	sp, #16
     224:	9001      	str	r0, [sp, #4]
	uint8_t i = 0, j = 0;
     226:	2300      	movs	r3, #0
	for (; i < EXT_IRQ_AMOUNT; i++) {
     228:	2b00      	cmp	r3, #0
     22a:	d010      	beq.n	24e <ext_irq_register+0x32>
	bool    found = false;
     22c:	2300      	movs	r3, #0
     22e:	4698      	mov	r8, r3
	if (NULL == cb) {
     230:	2900      	cmp	r1, #0
     232:	d01b      	beq.n	26c <ext_irq_register+0x50>
	if (!found) {
     234:	4643      	mov	r3, r8
     236:	2b00      	cmp	r3, #0
     238:	d146      	bne.n	2c8 <ext_irq_register+0xac>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     23a:	2b00      	cmp	r3, #0
     23c:	d124      	bne.n	288 <ext_irq_register+0x6c>
			if (NULL == ext_irqs[i].cb) {
     23e:	00da      	lsls	r2, r3, #3
     240:	4c2a      	ldr	r4, [pc, #168]	; (2ec <ext_irq_register+0xd0>)
     242:	5912      	ldr	r2, [r2, r4]
     244:	2a00      	cmp	r2, #0
     246:	d018      	beq.n	27a <ext_irq_register+0x5e>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     248:	3301      	adds	r3, #1
     24a:	b2db      	uxtb	r3, r3
     24c:	e7f5      	b.n	23a <ext_irq_register+0x1e>
		if (ext_irqs[i].pin == pin) {
     24e:	00dc      	lsls	r4, r3, #3
     250:	4a26      	ldr	r2, [pc, #152]	; (2ec <ext_irq_register+0xd0>)
     252:	1912      	adds	r2, r2, r4
     254:	6852      	ldr	r2, [r2, #4]
     256:	9801      	ldr	r0, [sp, #4]
     258:	4282      	cmp	r2, r0
     25a:	d002      	beq.n	262 <ext_irq_register+0x46>
	for (; i < EXT_IRQ_AMOUNT; i++) {
     25c:	3301      	adds	r3, #1
     25e:	b2db      	uxtb	r3, r3
     260:	e7e2      	b.n	228 <ext_irq_register+0xc>
			ext_irqs[i].cb = cb;
     262:	4b22      	ldr	r3, [pc, #136]	; (2ec <ext_irq_register+0xd0>)
     264:	50e1      	str	r1, [r4, r3]
			found          = true;
     266:	2301      	movs	r3, #1
     268:	4698      	mov	r8, r3
			break;
     26a:	e7e1      	b.n	230 <ext_irq_register+0x14>
		if (!found) {
     26c:	4643      	mov	r3, r8
     26e:	2b00      	cmp	r3, #0
     270:	d035      	beq.n	2de <ext_irq_register+0xc2>
		return _ext_irq_enable(pin, false);
     272:	9801      	ldr	r0, [sp, #4]
     274:	f000 fc3c 	bl	af0 <_ext_irq_enable>
     278:	e02d      	b.n	2d6 <ext_irq_register+0xba>
				ext_irqs[i].cb  = cb;
     27a:	00dd      	lsls	r5, r3, #3
     27c:	5129      	str	r1, [r5, r4]
				ext_irqs[i].pin = pin;
     27e:	1965      	adds	r5, r4, r5
     280:	9a01      	ldr	r2, [sp, #4]
     282:	606a      	str	r2, [r5, #4]
				found           = true;
     284:	2201      	movs	r2, #1
     286:	4690      	mov	r8, r2
     288:	2200      	movs	r2, #0
     28a:	e001      	b.n	290 <ext_irq_register+0x74>
		for (; (j < EXT_IRQ_AMOUNT) && (i < EXT_IRQ_AMOUNT); j++) {
     28c:	3201      	adds	r2, #1
     28e:	b2d2      	uxtb	r2, r2
     290:	0019      	movs	r1, r3
     292:	4311      	orrs	r1, r2
     294:	d118      	bne.n	2c8 <ext_irq_register+0xac>
			if ((ext_irqs[i].pin < ext_irqs[j].pin) && (ext_irqs[j].pin != 0xFFFFFFFF)) {
     296:	4915      	ldr	r1, [pc, #84]	; (2ec <ext_irq_register+0xd0>)
     298:	00dc      	lsls	r4, r3, #3
     29a:	190c      	adds	r4, r1, r4
     29c:	6867      	ldr	r7, [r4, #4]
     29e:	00d4      	lsls	r4, r2, #3
     2a0:	1909      	adds	r1, r1, r4
     2a2:	6849      	ldr	r1, [r1, #4]
     2a4:	428f      	cmp	r7, r1
     2a6:	d2f1      	bcs.n	28c <ext_irq_register+0x70>
     2a8:	1c4c      	adds	r4, r1, #1
     2aa:	d0ef      	beq.n	28c <ext_irq_register+0x70>
				struct ext_irq tmp = ext_irqs[j];
     2ac:	a902      	add	r1, sp, #8
     2ae:	468c      	mov	ip, r1
     2b0:	4f0e      	ldr	r7, [pc, #56]	; (2ec <ext_irq_register+0xd0>)
     2b2:	00d1      	lsls	r1, r2, #3
     2b4:	1879      	adds	r1, r7, r1
     2b6:	4664      	mov	r4, ip
     2b8:	c941      	ldmia	r1!, {r0, r6}
     2ba:	c441      	stmia	r4!, {r0, r6}
				ext_irqs[i] = tmp;
     2bc:	00dd      	lsls	r5, r3, #3
     2be:	197d      	adds	r5, r7, r5
     2c0:	4661      	mov	r1, ip
     2c2:	c911      	ldmia	r1!, {r0, r4}
     2c4:	c511      	stmia	r5!, {r0, r4}
     2c6:	e7e1      	b.n	28c <ext_irq_register+0x70>
	if (!found) {
     2c8:	4643      	mov	r3, r8
     2ca:	2b00      	cmp	r3, #0
     2cc:	d00a      	beq.n	2e4 <ext_irq_register+0xc8>
	return _ext_irq_enable(pin, true);
     2ce:	2101      	movs	r1, #1
     2d0:	9801      	ldr	r0, [sp, #4]
     2d2:	f000 fc0d 	bl	af0 <_ext_irq_enable>
}
     2d6:	b004      	add	sp, #16
     2d8:	bc04      	pop	{r2}
     2da:	4690      	mov	r8, r2
     2dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return ERR_INVALID_ARG;
     2de:	200d      	movs	r0, #13
     2e0:	4240      	negs	r0, r0
     2e2:	e7f8      	b.n	2d6 <ext_irq_register+0xba>
		return ERR_INVALID_ARG;
     2e4:	200d      	movs	r0, #13
     2e6:	4240      	negs	r0, r0
     2e8:	e7f5      	b.n	2d6 <ext_irq_register+0xba>
     2ea:	46c0      	nop			; (mov r8, r8)
     2ec:	20000a68 	.word	0x20000a68

000002f0 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     2f0:	b510      	push	{r4, lr}
     2f2:	b084      	sub	sp, #16
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     2f4:	3814      	subs	r0, #20
     2f6:	8b84      	ldrh	r4, [r0, #28]
     2f8:	ab01      	add	r3, sp, #4
     2fa:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     2fc:	0014      	movs	r4, r2
     2fe:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP;
     300:	4a06      	ldr	r2, [pc, #24]	; (31c <i2c_m_sync_write+0x2c>)
     302:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     304:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     306:	0019      	movs	r1, r3
     308:	f000 ff3a 	bl	1180 <_i2c_m_sync_transfer>

	if (ret) {
     30c:	2800      	cmp	r0, #0
     30e:	d102      	bne.n	316 <i2c_m_sync_write+0x26>
		return ret;
	}

	return n;
}
     310:	0020      	movs	r0, r4
     312:	b004      	add	sp, #16
     314:	bd10      	pop	{r4, pc}
		return ret;
     316:	0004      	movs	r4, r0
     318:	e7fa      	b.n	310 <i2c_m_sync_write+0x20>
     31a:	46c0      	nop			; (mov r8, r8)
     31c:	ffff8000 	.word	0xffff8000

00000320 <i2c_m_sync_read>:
{
     320:	b510      	push	{r4, lr}
     322:	b084      	sub	sp, #16
	msg.addr   = i2c->slave_addr;
     324:	3814      	subs	r0, #20
     326:	8b84      	ldrh	r4, [r0, #28]
     328:	ab01      	add	r3, sp, #4
     32a:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     32c:	0014      	movs	r4, r2
     32e:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     330:	4a06      	ldr	r2, [pc, #24]	; (34c <i2c_m_sync_read+0x2c>)
     332:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     334:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     336:	0019      	movs	r1, r3
     338:	f000 ff22 	bl	1180 <_i2c_m_sync_transfer>
	if (ret) {
     33c:	2800      	cmp	r0, #0
     33e:	d102      	bne.n	346 <i2c_m_sync_read+0x26>
}
     340:	0020      	movs	r0, r4
     342:	b004      	add	sp, #16
     344:	bd10      	pop	{r4, pc}
		return ret;
     346:	0004      	movs	r4, r0
     348:	e7fa      	b.n	340 <i2c_m_sync_read+0x20>
     34a:	46c0      	nop			; (mov r8, r8)
     34c:	ffff8001 	.word	0xffff8001

00000350 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     350:	b570      	push	{r4, r5, r6, lr}
     352:	0004      	movs	r4, r0
     354:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     356:	1e43      	subs	r3, r0, #1
     358:	4198      	sbcs	r0, r3
     35a:	b2c0      	uxtb	r0, r0
     35c:	225e      	movs	r2, #94	; 0x5e
     35e:	4907      	ldr	r1, [pc, #28]	; (37c <i2c_m_sync_init+0x2c>)
     360:	f000 fb18 	bl	994 <assert>

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     364:	0029      	movs	r1, r5
     366:	0020      	movs	r0, r4
     368:	f000 fe7e 	bl	1068 <_i2c_m_sync_init>
	if (init_status) {
     36c:	2800      	cmp	r0, #0
     36e:	d103      	bne.n	378 <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     370:	4b03      	ldr	r3, [pc, #12]	; (380 <i2c_m_sync_init+0x30>)
     372:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     374:	4b03      	ldr	r3, [pc, #12]	; (384 <i2c_m_sync_init+0x34>)
     376:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     378:	bd70      	pop	{r4, r5, r6, pc}
     37a:	46c0      	nop			; (mov r8, r8)
     37c:	0000d954 	.word	0x0000d954
     380:	00000321 	.word	0x00000321
     384:	000002f1 	.word	0x000002f1

00000388 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     388:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     38a:	f000 febf 	bl	110c <_i2c_m_sync_enable>
}
     38e:	bd10      	pop	{r4, pc}

00000390 <i2c_m_sync_set_slaveaddr>:
/**
 * \brief Sync version of i2c set slave address
 */
int32_t i2c_m_sync_set_slaveaddr(struct i2c_m_sync_desc *i2c, int16_t addr, int32_t addr_len)
{
	return i2c->slave_addr = (addr & 0x3ff) | (addr_len & I2C_M_TEN);
     390:	0589      	lsls	r1, r1, #22
     392:	0d89      	lsrs	r1, r1, #22
     394:	2380      	movs	r3, #128	; 0x80
     396:	00db      	lsls	r3, r3, #3
     398:	401a      	ands	r2, r3
     39a:	430a      	orrs	r2, r1
     39c:	8382      	strh	r2, [r0, #28]
}
     39e:	0010      	movs	r0, r2
     3a0:	4770      	bx	lr
	...

000003a4 <i2c_m_sync_cmd_write>:

/**
 * \brief Sync version of i2c write command
 */
int32_t i2c_m_sync_cmd_write(struct i2c_m_sync_desc *i2c, uint8_t reg, uint8_t *buffer, uint8_t length)
{
     3a4:	b570      	push	{r4, r5, r6, lr}
     3a6:	b086      	sub	sp, #24
     3a8:	0004      	movs	r4, r0
     3aa:	0016      	movs	r6, r2
     3ac:	001d      	movs	r5, r3
     3ae:	466b      	mov	r3, sp
     3b0:	71d9      	strb	r1, [r3, #7]
     3b2:	3307      	adds	r3, #7
	struct _i2c_m_msg msg;
	int32_t           ret;

	msg.addr   = i2c->slave_addr;
     3b4:	8b82      	ldrh	r2, [r0, #28]
     3b6:	a903      	add	r1, sp, #12
     3b8:	800a      	strh	r2, [r1, #0]
	msg.len    = 1;
     3ba:	2201      	movs	r2, #1
     3bc:	604a      	str	r2, [r1, #4]
	msg.flags  = 0;
     3be:	2200      	movs	r2, #0
     3c0:	804a      	strh	r2, [r1, #2]
	msg.buffer = &reg;
     3c2:	608b      	str	r3, [r1, #8]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     3c4:	f000 fedc 	bl	1180 <_i2c_m_sync_transfer>

	if (ret != 0) {
     3c8:	2800      	cmp	r0, #0
     3ca:	d001      	beq.n	3d0 <i2c_m_sync_cmd_write+0x2c>
		/* error occurred */
		return ret;
	}

	return ERR_NONE;
}
     3cc:	b006      	add	sp, #24
     3ce:	bd70      	pop	{r4, r5, r6, pc}
	msg.flags  = I2C_M_STOP;
     3d0:	a903      	add	r1, sp, #12
     3d2:	4b04      	ldr	r3, [pc, #16]	; (3e4 <i2c_m_sync_cmd_write+0x40>)
     3d4:	804b      	strh	r3, [r1, #2]
	msg.buffer = buffer;
     3d6:	608e      	str	r6, [r1, #8]
	msg.len    = length;
     3d8:	604d      	str	r5, [r1, #4]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     3da:	0020      	movs	r0, r4
     3dc:	f000 fed0 	bl	1180 <_i2c_m_sync_transfer>
     3e0:	e7f4      	b.n	3cc <i2c_m_sync_cmd_write+0x28>
     3e2:	46c0      	nop			; (mov r8, r8)
     3e4:	ffff8000 	.word	0xffff8000

000003e8 <i2c_m_sync_cmd_read>:

/**
 * \brief Sync version of i2c read command
 */
int32_t i2c_m_sync_cmd_read(struct i2c_m_sync_desc *i2c, uint8_t reg, uint8_t *buffer, uint8_t length)
{
     3e8:	b570      	push	{r4, r5, r6, lr}
     3ea:	b086      	sub	sp, #24
     3ec:	0004      	movs	r4, r0
     3ee:	0016      	movs	r6, r2
     3f0:	001d      	movs	r5, r3
     3f2:	466b      	mov	r3, sp
     3f4:	71d9      	strb	r1, [r3, #7]
     3f6:	3307      	adds	r3, #7
	struct _i2c_m_msg msg;
	int32_t           ret;

	msg.addr   = i2c->slave_addr;
     3f8:	8b82      	ldrh	r2, [r0, #28]
     3fa:	a903      	add	r1, sp, #12
     3fc:	800a      	strh	r2, [r1, #0]
	msg.len    = 1;
     3fe:	2201      	movs	r2, #1
     400:	604a      	str	r2, [r1, #4]
	msg.flags  = 0;
     402:	2200      	movs	r2, #0
     404:	804a      	strh	r2, [r1, #2]
	msg.buffer = &reg;
     406:	608b      	str	r3, [r1, #8]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     408:	f000 feba 	bl	1180 <_i2c_m_sync_transfer>

	if (ret != 0) {
     40c:	2800      	cmp	r0, #0
     40e:	d001      	beq.n	414 <i2c_m_sync_cmd_read+0x2c>
		/* error occurred */
		return ret;
	}

	return ERR_NONE;
}
     410:	b006      	add	sp, #24
     412:	bd70      	pop	{r4, r5, r6, pc}
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     414:	a903      	add	r1, sp, #12
     416:	4b04      	ldr	r3, [pc, #16]	; (428 <i2c_m_sync_cmd_read+0x40>)
     418:	804b      	strh	r3, [r1, #2]
	msg.buffer = buffer;
     41a:	608e      	str	r6, [r1, #8]
	msg.len    = length;
     41c:	604d      	str	r5, [r1, #4]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     41e:	0020      	movs	r0, r4
     420:	f000 feae 	bl	1180 <_i2c_m_sync_transfer>
     424:	e7f4      	b.n	410 <i2c_m_sync_cmd_read+0x28>
     426:	46c0      	nop			; (mov r8, r8)
     428:	ffff8001 	.word	0xffff8001

0000042c <i2c_m_sync_get_io_descriptor>:
/**
 * \brief Retrieve I/O descriptor
 */
int32_t i2c_m_sync_get_io_descriptor(struct i2c_m_sync_desc *const i2c, struct io_descriptor **io)
{
	*io = &i2c->io;
     42c:	3014      	adds	r0, #20
     42e:	6008      	str	r0, [r1, #0]
	return ERR_NONE;
}
     430:	2000      	movs	r0, #0
     432:	4770      	bx	lr

00000434 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     434:	b570      	push	{r4, r5, r6, lr}
     436:	0004      	movs	r4, r0
     438:	000d      	movs	r5, r1
     43a:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     43c:	2800      	cmp	r0, #0
     43e:	d00e      	beq.n	45e <io_write+0x2a>
     440:	2900      	cmp	r1, #0
     442:	d00a      	beq.n	45a <io_write+0x26>
     444:	2001      	movs	r0, #1
     446:	2234      	movs	r2, #52	; 0x34
     448:	4906      	ldr	r1, [pc, #24]	; (464 <io_write+0x30>)
     44a:	f000 faa3 	bl	994 <assert>
	return io_descr->write(io_descr, buf, length);
     44e:	6823      	ldr	r3, [r4, #0]
     450:	0032      	movs	r2, r6
     452:	0029      	movs	r1, r5
     454:	0020      	movs	r0, r4
     456:	4798      	blx	r3
}
     458:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     45a:	2000      	movs	r0, #0
     45c:	e7f3      	b.n	446 <io_write+0x12>
     45e:	2000      	movs	r0, #0
     460:	e7f1      	b.n	446 <io_write+0x12>
     462:	46c0      	nop			; (mov r8, r8)
     464:	0000d970 	.word	0x0000d970

00000468 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     468:	b570      	push	{r4, r5, r6, lr}
     46a:	0004      	movs	r4, r0
     46c:	000d      	movs	r5, r1
     46e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     470:	2800      	cmp	r0, #0
     472:	d00e      	beq.n	492 <io_read+0x2a>
     474:	2900      	cmp	r1, #0
     476:	d00a      	beq.n	48e <io_read+0x26>
     478:	2001      	movs	r0, #1
     47a:	223d      	movs	r2, #61	; 0x3d
     47c:	4906      	ldr	r1, [pc, #24]	; (498 <io_read+0x30>)
     47e:	f000 fa89 	bl	994 <assert>
	return io_descr->read(io_descr, buf, length);
     482:	6863      	ldr	r3, [r4, #4]
     484:	0032      	movs	r2, r6
     486:	0029      	movs	r1, r5
     488:	0020      	movs	r0, r4
     48a:	4798      	blx	r3
}
     48c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     48e:	2000      	movs	r0, #0
     490:	e7f3      	b.n	47a <io_read+0x12>
     492:	2000      	movs	r0, #0
     494:	e7f1      	b.n	47a <io_read+0x12>
     496:	46c0      	nop			; (mov r8, r8)
     498:	0000d970 	.word	0x0000d970

0000049c <pwm_period_expired>:

/**
 * \internal Process interrupts caused by period experied
 */
static void pwm_period_expired(struct _pwm_device *device)
{
     49c:	b510      	push	{r4, lr}
	struct pwm_descriptor *const descr = CONTAINER_OF(device, struct pwm_descriptor, device);

	if (descr->pwm_cb.period) {
     49e:	6943      	ldr	r3, [r0, #20]
     4a0:	2b00      	cmp	r3, #0
     4a2:	d000      	beq.n	4a6 <pwm_period_expired+0xa>
		descr->pwm_cb.period(descr);
     4a4:	4798      	blx	r3
	}
}
     4a6:	bd10      	pop	{r4, pc}

000004a8 <pwm_detect_fault>:

/**
 * \internal Process interrupts caused by pwm fault
 */
static void pwm_detect_fault(struct _pwm_device *device)
{
     4a8:	b510      	push	{r4, lr}
	struct pwm_descriptor *const descr = CONTAINER_OF(device, struct pwm_descriptor, device);

	if (descr->pwm_cb.error) {
     4aa:	6983      	ldr	r3, [r0, #24]
     4ac:	2b00      	cmp	r3, #0
     4ae:	d000      	beq.n	4b2 <pwm_detect_fault+0xa>
		descr->pwm_cb.error(descr);
     4b0:	4798      	blx	r3
	}
}
     4b2:	bd10      	pop	{r4, pc}

000004b4 <pwm_init>:
{
     4b4:	b570      	push	{r4, r5, r6, lr}
     4b6:	0004      	movs	r4, r0
     4b8:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     4ba:	2800      	cmp	r0, #0
     4bc:	d012      	beq.n	4e4 <pwm_init+0x30>
     4be:	2900      	cmp	r1, #0
     4c0:	d00e      	beq.n	4e0 <pwm_init+0x2c>
     4c2:	2001      	movs	r0, #1
     4c4:	2233      	movs	r2, #51	; 0x33
     4c6:	4908      	ldr	r1, [pc, #32]	; (4e8 <pwm_init+0x34>)
     4c8:	f000 fa64 	bl	994 <assert>
	_pwm_init(&descr->device, hw);
     4cc:	0029      	movs	r1, r5
     4ce:	0020      	movs	r0, r4
     4d0:	f001 f982 	bl	17d8 <_pwm_init>
	descr->device.callback.pwm_period_cb = pwm_period_expired;
     4d4:	4b05      	ldr	r3, [pc, #20]	; (4ec <pwm_init+0x38>)
     4d6:	6023      	str	r3, [r4, #0]
	descr->device.callback.pwm_error_cb  = pwm_detect_fault;
     4d8:	4b05      	ldr	r3, [pc, #20]	; (4f0 <pwm_init+0x3c>)
     4da:	6063      	str	r3, [r4, #4]
}
     4dc:	2000      	movs	r0, #0
     4de:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     4e0:	2000      	movs	r0, #0
     4e2:	e7ef      	b.n	4c4 <pwm_init+0x10>
     4e4:	2000      	movs	r0, #0
     4e6:	e7ed      	b.n	4c4 <pwm_init+0x10>
     4e8:	0000d984 	.word	0x0000d984
     4ec:	0000049d 	.word	0x0000049d
     4f0:	000004a9 	.word	0x000004a9

000004f4 <pwm_enable>:
{
     4f4:	b510      	push	{r4, lr}
     4f6:	0004      	movs	r4, r0
	ASSERT(descr);
     4f8:	1e43      	subs	r3, r0, #1
     4fa:	4198      	sbcs	r0, r3
     4fc:	b2c0      	uxtb	r0, r0
     4fe:	224a      	movs	r2, #74	; 0x4a
     500:	4907      	ldr	r1, [pc, #28]	; (520 <pwm_enable+0x2c>)
     502:	f000 fa47 	bl	994 <assert>
	if (_pwm_is_enabled(&descr->device)) {
     506:	0020      	movs	r0, r4
     508:	f001 fa0c 	bl	1924 <_pwm_is_enabled>
     50c:	2800      	cmp	r0, #0
     50e:	d104      	bne.n	51a <pwm_enable+0x26>
	_pwm_enable(&descr->device);
     510:	0020      	movs	r0, r4
     512:	f001 f9d5 	bl	18c0 <_pwm_enable>
	return ERR_NONE;
     516:	2000      	movs	r0, #0
}
     518:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     51a:	2011      	movs	r0, #17
     51c:	4240      	negs	r0, r0
     51e:	e7fb      	b.n	518 <pwm_enable+0x24>
     520:	0000d984 	.word	0x0000d984

00000524 <pwm_set_parameters>:
{
     524:	b570      	push	{r4, r5, r6, lr}
     526:	0004      	movs	r4, r0
     528:	000d      	movs	r5, r1
     52a:	0016      	movs	r6, r2
	ASSERT(descr);
     52c:	1e43      	subs	r3, r0, #1
     52e:	4198      	sbcs	r0, r3
     530:	b2c0      	uxtb	r0, r0
     532:	227c      	movs	r2, #124	; 0x7c
     534:	4904      	ldr	r1, [pc, #16]	; (548 <pwm_set_parameters+0x24>)
     536:	f000 fa2d 	bl	994 <assert>
	_pwm_set_param(&descr->device, period, duty_cycle);
     53a:	0032      	movs	r2, r6
     53c:	0029      	movs	r1, r5
     53e:	0020      	movs	r0, r4
     540:	f001 f9c6 	bl	18d0 <_pwm_set_param>
}
     544:	2000      	movs	r0, #0
     546:	bd70      	pop	{r4, r5, r6, pc}
     548:	0000d984 	.word	0x0000d984

0000054c <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
     54c:	b570      	push	{r4, r5, r6, lr}
     54e:	0004      	movs	r4, r0
     550:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
     552:	2800      	cmp	r0, #0
     554:	d017      	beq.n	586 <spi_m_sync_init+0x3a>
     556:	2900      	cmp	r1, #0
     558:	d013      	beq.n	582 <spi_m_sync_init+0x36>
     55a:	2001      	movs	r0, #1
     55c:	2240      	movs	r2, #64	; 0x40
     55e:	490b      	ldr	r1, [pc, #44]	; (58c <spi_m_sync_init+0x40>)
     560:	f000 fa18 	bl	994 <assert>
	spi->dev.prvt = (void *)hw;
     564:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
     566:	1d20      	adds	r0, r4, #4
     568:	0029      	movs	r1, r5
     56a:	f000 ff15 	bl	1398 <_spi_m_sync_init>

	if (rc < 0) {
     56e:	2800      	cmp	r0, #0
     570:	db06      	blt.n	580 <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
     572:	4b07      	ldr	r3, [pc, #28]	; (590 <spi_m_sync_init+0x44>)
     574:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
     576:	4b07      	ldr	r3, [pc, #28]	; (594 <spi_m_sync_init+0x48>)
     578:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
     57a:	4b07      	ldr	r3, [pc, #28]	; (598 <spi_m_sync_init+0x4c>)
     57c:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
     57e:	2000      	movs	r0, #0
}
     580:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
     582:	2000      	movs	r0, #0
     584:	e7ea      	b.n	55c <spi_m_sync_init+0x10>
     586:	2000      	movs	r0, #0
     588:	e7e8      	b.n	55c <spi_m_sync_init+0x10>
     58a:	46c0      	nop			; (mov r8, r8)
     58c:	0000d99c 	.word	0x0000d99c
     590:	ffff8000 	.word	0xffff8000
     594:	00000631 	.word	0x00000631
     598:	000005fd 	.word	0x000005fd

0000059c <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
     59c:	b510      	push	{r4, lr}
     59e:	0004      	movs	r4, r0
	ASSERT(spi);
     5a0:	1e43      	subs	r3, r0, #1
     5a2:	4198      	sbcs	r0, r3
     5a4:	b2c0      	uxtb	r0, r0
     5a6:	2257      	movs	r2, #87	; 0x57
     5a8:	4903      	ldr	r1, [pc, #12]	; (5b8 <spi_m_sync_enable+0x1c>)
     5aa:	f000 f9f3 	bl	994 <assert>
	_spi_m_sync_enable(&spi->dev);
     5ae:	1d20      	adds	r0, r4, #4
     5b0:	f000 ffcc 	bl	154c <_spi_m_sync_enable>
}
     5b4:	bd10      	pop	{r4, pc}
     5b6:	46c0      	nop			; (mov r8, r8)
     5b8:	0000d99c 	.word	0x0000d99c

000005bc <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
     5bc:	b530      	push	{r4, r5, lr}
     5be:	b087      	sub	sp, #28
     5c0:	0004      	movs	r4, r0
     5c2:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
     5c4:	2800      	cmp	r0, #0
     5c6:	d015      	beq.n	5f4 <spi_m_sync_transfer+0x38>
     5c8:	2900      	cmp	r1, #0
     5ca:	d011      	beq.n	5f0 <spi_m_sync_transfer+0x34>
     5cc:	2001      	movs	r0, #1
     5ce:	22b3      	movs	r2, #179	; 0xb3
     5d0:	4909      	ldr	r1, [pc, #36]	; (5f8 <spi_m_sync_transfer+0x3c>)
     5d2:	f000 f9df 	bl	994 <assert>

	msg.txbuf = p_xfer->txbuf;
     5d6:	682b      	ldr	r3, [r5, #0]
     5d8:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
     5da:	686b      	ldr	r3, [r5, #4]
     5dc:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
     5de:	68ab      	ldr	r3, [r5, #8]
     5e0:	9301      	str	r3, [sp, #4]
     5e2:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
     5e4:	1d20      	adds	r0, r4, #4
     5e6:	a903      	add	r1, sp, #12
     5e8:	f000 ffc8 	bl	157c <_spi_m_sync_trans>
}
     5ec:	b007      	add	sp, #28
     5ee:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
     5f0:	2000      	movs	r0, #0
     5f2:	e7ec      	b.n	5ce <spi_m_sync_transfer+0x12>
     5f4:	2000      	movs	r0, #0
     5f6:	e7ea      	b.n	5ce <spi_m_sync_transfer+0x12>
     5f8:	0000d99c 	.word	0x0000d99c

000005fc <_spi_m_sync_io_write>:
{
     5fc:	b570      	push	{r4, r5, r6, lr}
     5fe:	b084      	sub	sp, #16
     600:	0004      	movs	r4, r0
     602:	000e      	movs	r6, r1
     604:	0015      	movs	r5, r2
	ASSERT(io);
     606:	1e43      	subs	r3, r0, #1
     608:	4198      	sbcs	r0, r3
     60a:	b2c0      	uxtb	r0, r0
     60c:	22a3      	movs	r2, #163	; 0xa3
     60e:	4907      	ldr	r1, [pc, #28]	; (62c <_spi_m_sync_io_write+0x30>)
     610:	f000 f9c0 	bl	994 <assert>
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     614:	0020      	movs	r0, r4
     616:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
     618:	2300      	movs	r3, #0
     61a:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
     61c:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
     61e:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     620:	a901      	add	r1, sp, #4
     622:	f7ff ffcb 	bl	5bc <spi_m_sync_transfer>
}
     626:	b004      	add	sp, #16
     628:	bd70      	pop	{r4, r5, r6, pc}
     62a:	46c0      	nop			; (mov r8, r8)
     62c:	0000d99c 	.word	0x0000d99c

00000630 <_spi_m_sync_io_read>:
{
     630:	b570      	push	{r4, r5, r6, lr}
     632:	b084      	sub	sp, #16
     634:	0004      	movs	r4, r0
     636:	000e      	movs	r6, r1
     638:	0015      	movs	r5, r2
	ASSERT(io);
     63a:	1e43      	subs	r3, r0, #1
     63c:	4198      	sbcs	r0, r3
     63e:	b2c0      	uxtb	r0, r0
     640:	2287      	movs	r2, #135	; 0x87
     642:	4907      	ldr	r1, [pc, #28]	; (660 <_spi_m_sync_io_read+0x30>)
     644:	f000 f9a6 	bl	994 <assert>
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     648:	0020      	movs	r0, r4
     64a:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
     64c:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
     64e:	2300      	movs	r3, #0
     650:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
     652:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     654:	a901      	add	r1, sp, #4
     656:	f7ff ffb1 	bl	5bc <spi_m_sync_transfer>
}
     65a:	b004      	add	sp, #16
     65c:	bd70      	pop	{r4, r5, r6, pc}
     65e:	46c0      	nop			; (mov r8, r8)
     660:	0000d99c 	.word	0x0000d99c

00000664 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
     664:	b570      	push	{r4, r5, r6, lr}
     666:	0004      	movs	r4, r0
     668:	000d      	movs	r5, r1
	ASSERT(spi && io);
     66a:	2800      	cmp	r0, #0
     66c:	d00c      	beq.n	688 <spi_m_sync_get_io_descriptor+0x24>
     66e:	2900      	cmp	r1, #0
     670:	d008      	beq.n	684 <spi_m_sync_get_io_descriptor+0x20>
     672:	2001      	movs	r0, #1
     674:	22bd      	movs	r2, #189	; 0xbd
     676:	4905      	ldr	r1, [pc, #20]	; (68c <spi_m_sync_get_io_descriptor+0x28>)
     678:	f000 f98c 	bl	994 <assert>
	*io = &spi->io;
     67c:	340c      	adds	r4, #12
     67e:	602c      	str	r4, [r5, #0]
	return 0;
}
     680:	2000      	movs	r0, #0
     682:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
     684:	2000      	movs	r0, #0
     686:	e7f5      	b.n	674 <spi_m_sync_get_io_descriptor+0x10>
     688:	2000      	movs	r0, #0
     68a:	e7f3      	b.n	674 <spi_m_sync_get_io_descriptor+0x10>
     68c:	0000d99c 	.word	0x0000d99c

00000690 <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     692:	6806      	ldr	r6, [r0, #0]
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     694:	2e00      	cmp	r6, #0
     696:	d002      	beq.n	69e <timer_add_timer_task+0xe>
     698:	0033      	movs	r3, r6
     69a:	2500      	movs	r5, #0
     69c:	e00c      	b.n	6b8 <timer_add_timer_task+0x28>
		list_insert_as_head(list, new_task);
     69e:	f000 f989 	bl	9b4 <list_insert_as_head>
		return;
     6a2:	e018      	b.n	6d6 <timer_add_timer_task+0x46>
		uint32_t time_left;

		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     6a4:	689f      	ldr	r7, [r3, #8]
     6a6:	46bc      	mov	ip, r7
     6a8:	4464      	add	r4, ip
     6aa:	1aa4      	subs	r4, r4, r2
     6ac:	3401      	adds	r4, #1
		}
		if (time_left >= new_task->interval)
     6ae:	688f      	ldr	r7, [r1, #8]
     6b0:	42bc      	cmp	r4, r7
     6b2:	d20b      	bcs.n	6cc <timer_add_timer_task+0x3c>
			break;
		prev = it;
     6b4:	001d      	movs	r5, r3
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     6b6:	681b      	ldr	r3, [r3, #0]
     6b8:	2b00      	cmp	r3, #0
     6ba:	d007      	beq.n	6cc <timer_add_timer_task+0x3c>
		if (it->time_label <= time) {
     6bc:	685c      	ldr	r4, [r3, #4]
     6be:	4294      	cmp	r4, r2
     6c0:	d8f0      	bhi.n	6a4 <timer_add_timer_task+0x14>
			time_left = it->interval - (time - it->time_label);
     6c2:	1aa4      	subs	r4, r4, r2
     6c4:	689f      	ldr	r7, [r3, #8]
     6c6:	46bc      	mov	ip, r7
     6c8:	4464      	add	r4, ip
     6ca:	e7f0      	b.n	6ae <timer_add_timer_task+0x1e>
	}

	if (it == head) {
     6cc:	42b3      	cmp	r3, r6
     6ce:	d003      	beq.n	6d8 <timer_add_timer_task+0x48>
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     6d0:	0028      	movs	r0, r5
     6d2:	f000 f981 	bl	9d8 <list_insert_after>
	}
}
     6d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     6d8:	f000 f96c 	bl	9b4 <list_insert_as_head>
     6dc:	e7fb      	b.n	6d6 <timer_add_timer_task+0x46>

000006de <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     6de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     6e0:	0005      	movs	r5, r0
     6e2:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     6e4:	6903      	ldr	r3, [r0, #16]
     6e6:	1c5e      	adds	r6, r3, #1
     6e8:	6106      	str	r6, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     6ea:	7e03      	ldrb	r3, [r0, #24]
     6ec:	07db      	lsls	r3, r3, #31
     6ee:	d402      	bmi.n	6f6 <timer_process_counted+0x18>
     6f0:	7e03      	ldrb	r3, [r0, #24]
     6f2:	079b      	lsls	r3, r3, #30
     6f4:	d50a      	bpl.n	70c <timer_process_counted+0x2e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     6f6:	7e2b      	ldrb	r3, [r5, #24]
     6f8:	2202      	movs	r2, #2
     6fa:	4313      	orrs	r3, r2
     6fc:	b2db      	uxtb	r3, r3
     6fe:	762b      	strb	r3, [r5, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     700:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     702:	696f      	ldr	r7, [r5, #20]
		tmp->cb(tmp);
     704:	68e3      	ldr	r3, [r4, #12]
     706:	0020      	movs	r0, r4
     708:	4798      	blx	r3
		it = (struct timer_task *)list_get_head(&timer->tasks);
     70a:	003c      	movs	r4, r7
	while (it && ((time - it->time_label) >= it->interval)) {
     70c:	2c00      	cmp	r4, #0
     70e:	d0f7      	beq.n	700 <timer_process_counted+0x22>
     710:	6863      	ldr	r3, [r4, #4]
     712:	1af3      	subs	r3, r6, r3
     714:	68a2      	ldr	r2, [r4, #8]
     716:	4293      	cmp	r3, r2
     718:	d3f2      	bcc.n	700 <timer_process_counted+0x22>
		list_remove_head(&timer->tasks);
     71a:	002f      	movs	r7, r5
     71c:	3714      	adds	r7, #20
     71e:	0038      	movs	r0, r7
     720:	f000 f95e 	bl	9e0 <list_remove_head>
		if (TIMER_TASK_REPEAT == tmp->mode) {
     724:	7c23      	ldrb	r3, [r4, #16]
     726:	2b01      	cmp	r3, #1
     728:	d1eb      	bne.n	702 <timer_process_counted+0x24>
			tmp->time_label = time;
     72a:	6066      	str	r6, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     72c:	0032      	movs	r2, r6
     72e:	0021      	movs	r1, r4
     730:	0038      	movs	r0, r7
     732:	f7ff ffad 	bl	690 <timer_add_timer_task>
     736:	e7e4      	b.n	702 <timer_process_counted+0x24>

00000738 <timer_init>:
{
     738:	b570      	push	{r4, r5, r6, lr}
     73a:	0004      	movs	r4, r0
     73c:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     73e:	2800      	cmp	r0, #0
     740:	d012      	beq.n	768 <timer_init+0x30>
     742:	2900      	cmp	r1, #0
     744:	d00e      	beq.n	764 <timer_init+0x2c>
     746:	2001      	movs	r0, #1
     748:	223b      	movs	r2, #59	; 0x3b
     74a:	4908      	ldr	r1, [pc, #32]	; (76c <timer_init+0x34>)
     74c:	f000 f922 	bl	994 <assert>
	_timer_init(&descr->device, hw);
     750:	0029      	movs	r1, r5
     752:	0020      	movs	r0, r4
     754:	f000 fa96 	bl	c84 <_timer_init>
	descr->time                           = 0;
     758:	2300      	movs	r3, #0
     75a:	6123      	str	r3, [r4, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     75c:	4b04      	ldr	r3, [pc, #16]	; (770 <timer_init+0x38>)
     75e:	6023      	str	r3, [r4, #0]
}
     760:	2000      	movs	r0, #0
     762:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     764:	2000      	movs	r0, #0
     766:	e7ef      	b.n	748 <timer_init+0x10>
     768:	2000      	movs	r0, #0
     76a:	e7ed      	b.n	748 <timer_init+0x10>
     76c:	0000d9b8 	.word	0x0000d9b8
     770:	000006df 	.word	0x000006df

00000774 <timer_start>:
{
     774:	b510      	push	{r4, lr}
     776:	0004      	movs	r4, r0
	ASSERT(descr);
     778:	1e43      	subs	r3, r0, #1
     77a:	4198      	sbcs	r0, r3
     77c:	b2c0      	uxtb	r0, r0
     77e:	2253      	movs	r2, #83	; 0x53
     780:	4907      	ldr	r1, [pc, #28]	; (7a0 <timer_start+0x2c>)
     782:	f000 f907 	bl	994 <assert>
	if (_timer_is_started(&descr->device)) {
     786:	0020      	movs	r0, r4
     788:	f000 fad2 	bl	d30 <_timer_is_started>
     78c:	2800      	cmp	r0, #0
     78e:	d104      	bne.n	79a <timer_start+0x26>
	_timer_start(&descr->device);
     790:	0020      	movs	r0, r4
     792:	f000 faa3 	bl	cdc <_timer_start>
	return ERR_NONE;
     796:	2000      	movs	r0, #0
}
     798:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     79a:	2011      	movs	r0, #17
     79c:	4240      	negs	r0, r0
     79e:	e7fb      	b.n	798 <timer_start+0x24>
     7a0:	0000d9b8 	.word	0x0000d9b8

000007a4 <timer_add_task>:
{
     7a4:	b570      	push	{r4, r5, r6, lr}
     7a6:	b082      	sub	sp, #8
     7a8:	0004      	movs	r4, r0
     7aa:	000d      	movs	r5, r1
	ASSERT(descr && task);
     7ac:	2800      	cmp	r0, #0
     7ae:	d026      	beq.n	7fe <timer_add_task+0x5a>
     7b0:	2900      	cmp	r1, #0
     7b2:	d022      	beq.n	7fa <timer_add_task+0x56>
     7b4:	2001      	movs	r0, #1
     7b6:	227a      	movs	r2, #122	; 0x7a
     7b8:	491f      	ldr	r1, [pc, #124]	; (838 <timer_add_task+0x94>)
     7ba:	f000 f8eb 	bl	994 <assert>
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     7be:	7e23      	ldrb	r3, [r4, #24]
     7c0:	2201      	movs	r2, #1
     7c2:	4313      	orrs	r3, r2
     7c4:	b2db      	uxtb	r3, r3
     7c6:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     7c8:	0026      	movs	r6, r4
     7ca:	3614      	adds	r6, #20
     7cc:	0029      	movs	r1, r5
     7ce:	0030      	movs	r0, r6
     7d0:	f000 f8e4 	bl	99c <is_list_element>
     7d4:	2800      	cmp	r0, #0
     7d6:	d114      	bne.n	802 <timer_add_task+0x5e>
	task->time_label = descr->time;
     7d8:	6923      	ldr	r3, [r4, #16]
     7da:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     7dc:	6922      	ldr	r2, [r4, #16]
     7de:	0029      	movs	r1, r5
     7e0:	0030      	movs	r0, r6
     7e2:	f7ff ff55 	bl	690 <timer_add_timer_task>
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     7e6:	7e23      	ldrb	r3, [r4, #24]
     7e8:	2201      	movs	r2, #1
     7ea:	4393      	bics	r3, r2
     7ec:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     7ee:	7e23      	ldrb	r3, [r4, #24]
     7f0:	079b      	lsls	r3, r3, #30
     7f2:	d412      	bmi.n	81a <timer_add_task+0x76>
	return ERR_NONE;
     7f4:	2000      	movs	r0, #0
}
     7f6:	b002      	add	sp, #8
     7f8:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && task);
     7fa:	2000      	movs	r0, #0
     7fc:	e7db      	b.n	7b6 <timer_add_task+0x12>
     7fe:	2000      	movs	r0, #0
     800:	e7d9      	b.n	7b6 <timer_add_task+0x12>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     802:	7e23      	ldrb	r3, [r4, #24]
     804:	2201      	movs	r2, #1
     806:	4393      	bics	r3, r2
     808:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     80a:	327e      	adds	r2, #126	; 0x7e
     80c:	490a      	ldr	r1, [pc, #40]	; (838 <timer_add_task+0x94>)
     80e:	2000      	movs	r0, #0
     810:	f000 f8c0 	bl	994 <assert>
		return ERR_ALREADY_INITIALIZED;
     814:	2012      	movs	r0, #18
     816:	4240      	negs	r0, r0
     818:	e7ed      	b.n	7f6 <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     81a:	a801      	add	r0, sp, #4
     81c:	f7ff fcaa 	bl	174 <atomic_enter_critical>
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     820:	7e23      	ldrb	r3, [r4, #24]
     822:	2202      	movs	r2, #2
     824:	4393      	bics	r3, r2
     826:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     828:	0020      	movs	r0, r4
     82a:	f000 fa8a 	bl	d42 <_timer_set_irq>
		CRITICAL_SECTION_LEAVE()
     82e:	a801      	add	r0, sp, #4
     830:	f7ff fca7 	bl	182 <atomic_leave_critical>
	return ERR_NONE;
     834:	2000      	movs	r0, #0
     836:	e7de      	b.n	7f6 <timer_add_task+0x52>
     838:	0000d9b8 	.word	0x0000d9b8

0000083c <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     83c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     83e:	0005      	movs	r5, r0
     840:	000e      	movs	r6, r1
     842:	0017      	movs	r7, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     844:	2800      	cmp	r0, #0
     846:	d023      	beq.n	890 <usart_sync_write+0x54>
     848:	2900      	cmp	r1, #0
     84a:	d023      	beq.n	894 <usart_sync_write+0x58>
     84c:	2a00      	cmp	r2, #0
     84e:	d123      	bne.n	898 <usart_sync_write+0x5c>
     850:	2000      	movs	r0, #0
     852:	22f1      	movs	r2, #241	; 0xf1
     854:	4911      	ldr	r1, [pc, #68]	; (89c <usart_sync_write+0x60>)
     856:	f000 f89d 	bl	994 <assert>
	while (!_usart_sync_is_ready_to_send(&descr->device))
     85a:	002c      	movs	r4, r5
     85c:	3408      	adds	r4, #8
     85e:	0020      	movs	r0, r4
     860:	f000 fbf1 	bl	1046 <_usart_sync_is_ready_to_send>
     864:	2800      	cmp	r0, #0
     866:	d0f8      	beq.n	85a <usart_sync_write+0x1e>
     868:	2500      	movs	r5, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     86a:	5d71      	ldrb	r1, [r6, r5]
     86c:	0020      	movs	r0, r4
     86e:	f000 fbe2 	bl	1036 <_usart_sync_write_byte>
		while (!_usart_sync_is_ready_to_send(&descr->device))
     872:	0020      	movs	r0, r4
     874:	f000 fbe7 	bl	1046 <_usart_sync_is_ready_to_send>
     878:	2800      	cmp	r0, #0
     87a:	d0fa      	beq.n	872 <usart_sync_write+0x36>
			;
	} while (++offset < length);
     87c:	3501      	adds	r5, #1
     87e:	42bd      	cmp	r5, r7
     880:	d3f3      	bcc.n	86a <usart_sync_write+0x2e>
	while (!_usart_sync_is_transmit_done(&descr->device))
     882:	0020      	movs	r0, r4
     884:	f000 fbe4 	bl	1050 <_usart_sync_is_transmit_done>
     888:	2800      	cmp	r0, #0
     88a:	d0fa      	beq.n	882 <usart_sync_write+0x46>
		;
	return (int32_t)offset;
}
     88c:	0028      	movs	r0, r5
     88e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     890:	2000      	movs	r0, #0
     892:	e7de      	b.n	852 <usart_sync_write+0x16>
     894:	2000      	movs	r0, #0
     896:	e7dc      	b.n	852 <usart_sync_write+0x16>
     898:	2001      	movs	r0, #1
     89a:	e7da      	b.n	852 <usart_sync_write+0x16>
     89c:	0000d9d0 	.word	0x0000d9d0

000008a0 <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     8a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     8a2:	46ce      	mov	lr, r9
     8a4:	4647      	mov	r7, r8
     8a6:	b580      	push	{r7, lr}
     8a8:	1e05      	subs	r5, r0, #0
     8aa:	4688      	mov	r8, r1
     8ac:	4691      	mov	r9, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     8ae:	d01f      	beq.n	8f0 <usart_sync_read+0x50>
     8b0:	2900      	cmp	r1, #0
     8b2:	d01f      	beq.n	8f4 <usart_sync_read+0x54>
     8b4:	2a00      	cmp	r2, #0
     8b6:	d11f      	bne.n	8f8 <usart_sync_read+0x58>
     8b8:	2000      	movs	r0, #0
     8ba:	2286      	movs	r2, #134	; 0x86
     8bc:	0052      	lsls	r2, r2, #1
     8be:	490f      	ldr	r1, [pc, #60]	; (8fc <usart_sync_read+0x5c>)
     8c0:	f000 f868 	bl	994 <assert>
	uint32_t                      offset = 0;
     8c4:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     8c6:	002c      	movs	r4, r5
     8c8:	3408      	adds	r4, #8
     8ca:	0020      	movs	r0, r4
     8cc:	f000 fbc6 	bl	105c <_usart_sync_is_byte_received>
     8d0:	2800      	cmp	r0, #0
     8d2:	d0f8      	beq.n	8c6 <usart_sync_read+0x26>
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     8d4:	4643      	mov	r3, r8
     8d6:	199f      	adds	r7, r3, r6
     8d8:	0020      	movs	r0, r4
     8da:	f000 fbb0 	bl	103e <_usart_sync_read_byte>
     8de:	7038      	strb	r0, [r7, #0]
	} while (++offset < length);
     8e0:	3601      	adds	r6, #1
     8e2:	454e      	cmp	r6, r9
     8e4:	d3ef      	bcc.n	8c6 <usart_sync_read+0x26>

	return (int32_t)offset;
}
     8e6:	0030      	movs	r0, r6
     8e8:	bc0c      	pop	{r2, r3}
     8ea:	4690      	mov	r8, r2
     8ec:	4699      	mov	r9, r3
     8ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     8f0:	2000      	movs	r0, #0
     8f2:	e7e2      	b.n	8ba <usart_sync_read+0x1a>
     8f4:	2000      	movs	r0, #0
     8f6:	e7e0      	b.n	8ba <usart_sync_read+0x1a>
     8f8:	2001      	movs	r0, #1
     8fa:	e7de      	b.n	8ba <usart_sync_read+0x1a>
     8fc:	0000d9d0 	.word	0x0000d9d0

00000900 <usart_sync_init>:
{
     900:	b570      	push	{r4, r5, r6, lr}
     902:	0004      	movs	r4, r0
     904:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     906:	2800      	cmp	r0, #0
     908:	d014      	beq.n	934 <usart_sync_init+0x34>
     90a:	2900      	cmp	r1, #0
     90c:	d010      	beq.n	930 <usart_sync_init+0x30>
     90e:	2001      	movs	r0, #1
     910:	2234      	movs	r2, #52	; 0x34
     912:	4909      	ldr	r1, [pc, #36]	; (938 <usart_sync_init+0x38>)
     914:	f000 f83e 	bl	994 <assert>
	init_status = _usart_sync_init(&descr->device, hw);
     918:	0020      	movs	r0, r4
     91a:	3008      	adds	r0, #8
     91c:	0029      	movs	r1, r5
     91e:	f000 fb6f 	bl	1000 <_usart_sync_init>
	if (init_status) {
     922:	2800      	cmp	r0, #0
     924:	d103      	bne.n	92e <usart_sync_init+0x2e>
	descr->io.read  = usart_sync_read;
     926:	4b05      	ldr	r3, [pc, #20]	; (93c <usart_sync_init+0x3c>)
     928:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_sync_write;
     92a:	4b05      	ldr	r3, [pc, #20]	; (940 <usart_sync_init+0x40>)
     92c:	6023      	str	r3, [r4, #0]
}
     92e:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     930:	2000      	movs	r0, #0
     932:	e7ed      	b.n	910 <usart_sync_init+0x10>
     934:	2000      	movs	r0, #0
     936:	e7eb      	b.n	910 <usart_sync_init+0x10>
     938:	0000d9d0 	.word	0x0000d9d0
     93c:	000008a1 	.word	0x000008a1
     940:	0000083d 	.word	0x0000083d

00000944 <usart_sync_enable>:
{
     944:	b510      	push	{r4, lr}
     946:	0004      	movs	r4, r0
	ASSERT(descr);
     948:	1e43      	subs	r3, r0, #1
     94a:	4198      	sbcs	r0, r3
     94c:	b2c0      	uxtb	r0, r0
     94e:	2253      	movs	r2, #83	; 0x53
     950:	4904      	ldr	r1, [pc, #16]	; (964 <usart_sync_enable+0x20>)
     952:	f000 f81f 	bl	994 <assert>
	_usart_sync_enable(&descr->device);
     956:	0020      	movs	r0, r4
     958:	3008      	adds	r0, #8
     95a:	f000 fb63 	bl	1024 <_usart_sync_enable>
}
     95e:	2000      	movs	r0, #0
     960:	bd10      	pop	{r4, pc}
     962:	46c0      	nop			; (mov r8, r8)
     964:	0000d9d0 	.word	0x0000d9d0

00000968 <usart_sync_get_io_descriptor>:
{
     968:	b570      	push	{r4, r5, r6, lr}
     96a:	0004      	movs	r4, r0
     96c:	000d      	movs	r5, r1
	ASSERT(descr && io);
     96e:	2800      	cmp	r0, #0
     970:	d00b      	beq.n	98a <usart_sync_get_io_descriptor+0x22>
     972:	2900      	cmp	r1, #0
     974:	d007      	beq.n	986 <usart_sync_get_io_descriptor+0x1e>
     976:	2001      	movs	r0, #1
     978:	2269      	movs	r2, #105	; 0x69
     97a:	4905      	ldr	r1, [pc, #20]	; (990 <usart_sync_get_io_descriptor+0x28>)
     97c:	f000 f80a 	bl	994 <assert>
	*io = &descr->io;
     980:	602c      	str	r4, [r5, #0]
}
     982:	2000      	movs	r0, #0
     984:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && io);
     986:	2000      	movs	r0, #0
     988:	e7f6      	b.n	978 <usart_sync_get_io_descriptor+0x10>
     98a:	2000      	movs	r0, #0
     98c:	e7f4      	b.n	978 <usart_sync_get_io_descriptor+0x10>
     98e:	46c0      	nop			; (mov r8, r8)
     990:	0000d9d0 	.word	0x0000d9d0

00000994 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     994:	2800      	cmp	r0, #0
     996:	d100      	bne.n	99a <assert+0x6>
		__asm("BKPT #0");
     998:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     99a:	4770      	bx	lr

0000099c <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
     99c:	6803      	ldr	r3, [r0, #0]
     99e:	2b00      	cmp	r3, #0
     9a0:	d003      	beq.n	9aa <is_list_element+0xe>
		if (it == element) {
     9a2:	428b      	cmp	r3, r1
     9a4:	d003      	beq.n	9ae <is_list_element+0x12>
	for (it = list->head; it; it = it->next) {
     9a6:	681b      	ldr	r3, [r3, #0]
     9a8:	e7f9      	b.n	99e <is_list_element+0x2>
			return true;
		}
	}

	return false;
     9aa:	2000      	movs	r0, #0
}
     9ac:	4770      	bx	lr
			return true;
     9ae:	2001      	movs	r0, #1
     9b0:	e7fc      	b.n	9ac <is_list_element+0x10>
	...

000009b4 <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
     9b4:	b570      	push	{r4, r5, r6, lr}
     9b6:	0004      	movs	r4, r0
     9b8:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
     9ba:	f7ff ffef 	bl	99c <is_list_element>
     9be:	2301      	movs	r3, #1
     9c0:	4058      	eors	r0, r3
     9c2:	b2c0      	uxtb	r0, r0
     9c4:	2239      	movs	r2, #57	; 0x39
     9c6:	4903      	ldr	r1, [pc, #12]	; (9d4 <list_insert_as_head+0x20>)
     9c8:	f7ff ffe4 	bl	994 <assert>

	((struct list_element *)element)->next = list->head;
     9cc:	6823      	ldr	r3, [r4, #0]
     9ce:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
     9d0:	6025      	str	r5, [r4, #0]
}
     9d2:	bd70      	pop	{r4, r5, r6, pc}
     9d4:	0000d9ec 	.word	0x0000d9ec

000009d8 <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
     9d8:	6803      	ldr	r3, [r0, #0]
     9da:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
     9dc:	6001      	str	r1, [r0, #0]
}
     9de:	4770      	bx	lr

000009e0 <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
     9e0:	6803      	ldr	r3, [r0, #0]
     9e2:	2b00      	cmp	r3, #0
     9e4:	d003      	beq.n	9ee <list_remove_head+0xe>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
     9e6:	681a      	ldr	r2, [r3, #0]
     9e8:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
     9ea:	0018      	movs	r0, r3
	}

	return NULL;
}
     9ec:	4770      	bx	lr
	return NULL;
     9ee:	2000      	movs	r0, #0
     9f0:	e7fc      	b.n	9ec <list_remove_head+0xc>
	...

000009f4 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     9f4:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     9f6:	4a06      	ldr	r2, [pc, #24]	; (a10 <_sbrk+0x1c>)
     9f8:	6812      	ldr	r2, [r2, #0]
     9fa:	2a00      	cmp	r2, #0
     9fc:	d004      	beq.n	a08 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     9fe:	4a04      	ldr	r2, [pc, #16]	; (a10 <_sbrk+0x1c>)
     a00:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     a02:	18c3      	adds	r3, r0, r3
     a04:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     a06:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     a08:	4902      	ldr	r1, [pc, #8]	; (a14 <_sbrk+0x20>)
     a0a:	4a01      	ldr	r2, [pc, #4]	; (a10 <_sbrk+0x1c>)
     a0c:	6011      	str	r1, [r2, #0]
     a0e:	e7f6      	b.n	9fe <_sbrk+0xa>
     a10:	20000a70 	.word	0x20000a70
     a14:	20003588 	.word	0x20003588

00000a18 <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
     a18:	b510      	push	{r4, lr}
		return (ms * (freq / 100000) + 2) / 3 * 100;
     a1a:	0103      	lsls	r3, r0, #4
     a1c:	1a1b      	subs	r3, r3, r0
     a1e:	0158      	lsls	r0, r3, #5
     a20:	3002      	adds	r0, #2
     a22:	2103      	movs	r1, #3
     a24:	f003 f870 	bl	3b08 <__udivsi3>
     a28:	2364      	movs	r3, #100	; 0x64
     a2a:	4358      	muls	r0, r3
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     a2c:	bd10      	pop	{r4, pc}

00000a2e <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
     a2e:	3901      	subs	r1, #1
     a30:	d8fd      	bhi.n	a2e <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
     a32:	4770      	bx	lr

00000a34 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     a34:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     a36:	4a09      	ldr	r2, [pc, #36]	; (a5c <_init_chip+0x28>)
     a38:	6853      	ldr	r3, [r2, #4]
     a3a:	2106      	movs	r1, #6
     a3c:	430b      	orrs	r3, r1
     a3e:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
     a40:	f000 f902 	bl	c48 <_pm_init>
	_sysctrl_init_sources();
     a44:	f000 fe0c 	bl	1660 <_sysctrl_init_sources>
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
     a48:	2008      	movs	r0, #8
     a4a:	f000 f8cf 	bl	bec <_gclk_init_generators_by_fref>
#endif
	_sysctrl_init_referenced_generators();
     a4e:	f000 fe2d 	bl	16ac <_sysctrl_init_referenced_generators>
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     a52:	20f7      	movs	r0, #247	; 0xf7
     a54:	f000 f8ca 	bl	bec <_gclk_init_generators_by_fref>
}
     a58:	bd10      	pop	{r4, pc}
     a5a:	46c0      	nop			; (mov r8, r8)
     a5c:	41004000 	.word	0x41004000

00000a60 <_ext_irq_init>:
typedef uint8_t  hri_eic_nmiflag_reg_t;
typedef uint8_t  hri_eic_status_reg_t;

static inline void hri_eic_wait_for_sync(const void *const hw)
{
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     a60:	4b20      	ldr	r3, [pc, #128]	; (ae4 <_ext_irq_init+0x84>)
     a62:	785b      	ldrb	r3, [r3, #1]
     a64:	09db      	lsrs	r3, r3, #7
     a66:	d1fb      	bne.n	a60 <_ext_irq_init>
     a68:	4b1e      	ldr	r3, [pc, #120]	; (ae4 <_ext_irq_init+0x84>)
     a6a:	785b      	ldrb	r3, [r3, #1]
     a6c:	09db      	lsrs	r3, r3, #7
     a6e:	d1fb      	bne.n	a68 <_ext_irq_init+0x8>

static inline hri_eic_ctrl_reg_t hri_eic_get_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t mask)
{
	uint8_t tmp;
	hri_eic_wait_for_sync(hw);
	tmp = ((Eic *)hw)->CTRL.reg;
     a70:	4b1c      	ldr	r3, [pc, #112]	; (ae4 <_ext_irq_init+0x84>)
     a72:	781b      	ldrb	r3, [r3, #0]
 * \brief Initialize external interrupt module
 */
int32_t _ext_irq_init(void (*cb)(const uint32_t pin))
{
	hri_eic_wait_for_sync(EIC);
	if (hri_eic_get_CTRL_reg(EIC, EIC_CTRL_ENABLE)) {
     a74:	079b      	lsls	r3, r3, #30
     a76:	d50a      	bpl.n	a8e <_ext_irq_init+0x2e>
}

static inline void hri_eic_write_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CTRL.reg = data;
     a78:	2200      	movs	r2, #0
     a7a:	4b1a      	ldr	r3, [pc, #104]	; (ae4 <_ext_irq_init+0x84>)
     a7c:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     a7e:	4b19      	ldr	r3, [pc, #100]	; (ae4 <_ext_irq_init+0x84>)
     a80:	785b      	ldrb	r3, [r3, #1]
     a82:	09db      	lsrs	r3, r3, #7
     a84:	d1fb      	bne.n	a7e <_ext_irq_init+0x1e>
     a86:	4b17      	ldr	r3, [pc, #92]	; (ae4 <_ext_irq_init+0x84>)
     a88:	785b      	ldrb	r3, [r3, #1]
     a8a:	09db      	lsrs	r3, r3, #7
     a8c:	d1fb      	bne.n	a86 <_ext_irq_init+0x26>
	((Eic *)hw)->CTRL.reg = data;
     a8e:	2201      	movs	r2, #1
     a90:	4b14      	ldr	r3, [pc, #80]	; (ae4 <_ext_irq_init+0x84>)
     a92:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     a94:	4b13      	ldr	r3, [pc, #76]	; (ae4 <_ext_irq_init+0x84>)
     a96:	785b      	ldrb	r3, [r3, #1]
     a98:	09db      	lsrs	r3, r3, #7
     a9a:	d1fb      	bne.n	a94 <_ext_irq_init+0x34>
     a9c:	4b11      	ldr	r3, [pc, #68]	; (ae4 <_ext_irq_init+0x84>)
     a9e:	785b      	ldrb	r3, [r3, #1]
     aa0:	09db      	lsrs	r3, r3, #7
     aa2:	d1fb      	bne.n	a9c <_ext_irq_init+0x3c>
}

static inline void hri_eic_write_NMICTRL_reg(const void *const hw, hri_eic_nmictrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->NMICTRL.reg = data;
     aa4:	4b0f      	ldr	r3, [pc, #60]	; (ae4 <_ext_irq_init+0x84>)
     aa6:	2200      	movs	r2, #0
     aa8:	709a      	strb	r2, [r3, #2]
}

static inline void hri_eic_write_EVCTRL_reg(const void *const hw, hri_eic_evctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->EVCTRL.reg = data;
     aaa:	605a      	str	r2, [r3, #4]
}

static inline void hri_eic_write_WAKEUP_reg(const void *const hw, hri_eic_wakeup_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->WAKEUP.reg = data;
     aac:	615a      	str	r2, [r3, #20]
}

static inline void hri_eic_write_CONFIG_reg(const void *const hw, uint8_t index, hri_eic_config_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CONFIG[index].reg = data;
     aae:	619a      	str	r2, [r3, #24]
     ab0:	61da      	str	r2, [r3, #28]
	((Eic *)hw)->CTRL.reg |= EIC_CTRL_ENABLE;
     ab2:	781a      	ldrb	r2, [r3, #0]
     ab4:	2102      	movs	r1, #2
     ab6:	430a      	orrs	r2, r1
     ab8:	b2d2      	uxtb	r2, r2
     aba:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     abc:	4b09      	ldr	r3, [pc, #36]	; (ae4 <_ext_irq_init+0x84>)
     abe:	785b      	ldrb	r3, [r3, #1]
     ac0:	09db      	lsrs	r3, r3, #7
     ac2:	d1fb      	bne.n	abc <_ext_irq_init+0x5c>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     ac4:	4b08      	ldr	r3, [pc, #32]	; (ae8 <_ext_irq_init+0x88>)
     ac6:	2210      	movs	r2, #16
     ac8:	2180      	movs	r1, #128	; 0x80
     aca:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
     acc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
     ad0:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     ad4:	3101      	adds	r1, #1
     ad6:	31ff      	adds	r1, #255	; 0xff
     ad8:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     ada:	601a      	str	r2, [r3, #0]

	NVIC_DisableIRQ(EIC_IRQn);
	NVIC_ClearPendingIRQ(EIC_IRQn);
	NVIC_EnableIRQ(EIC_IRQn);

	callback = cb;
     adc:	4b03      	ldr	r3, [pc, #12]	; (aec <_ext_irq_init+0x8c>)
     ade:	6018      	str	r0, [r3, #0]

	return ERR_NONE;
}
     ae0:	2000      	movs	r0, #0
     ae2:	4770      	bx	lr
     ae4:	40001800 	.word	0x40001800
     ae8:	e000e100 	.word	0xe000e100
     aec:	20000a74 	.word	0x20000a74

00000af0 <_ext_irq_enable>:
 * \brief Enable / disable external irq
 */
int32_t _ext_irq_enable(const uint32_t pin, const bool enable)
{
	uint8_t extint = INVALID_EXTINT_NUMBER;
	uint8_t i      = 0;
     af0:	2300      	movs	r3, #0

	for (; i < ARRAY_SIZE(_map); i++) {
     af2:	2b00      	cmp	r3, #0
     af4:	d00b      	beq.n	b0e <_ext_irq_enable+0x1e>
	uint8_t extint = INVALID_EXTINT_NUMBER;
     af6:	22ff      	movs	r2, #255	; 0xff
		if (_map[i].pin == pin) {
			extint = _map[i].extint;
			break;
		}
	}
	if (INVALID_EXTINT_NUMBER == extint) {
     af8:	2aff      	cmp	r2, #255	; 0xff
     afa:	d017      	beq.n	b2c <_ext_irq_enable+0x3c>
		return ERR_INVALID_ARG;
	}

	if (enable) {
     afc:	2900      	cmp	r1, #0
     afe:	d10f      	bne.n	b20 <_ext_irq_enable+0x30>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
	} else {
		hri_eic_clear_INTEN_reg(EIC, 1ul << extint);
     b00:	2301      	movs	r3, #1
     b02:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENCLR.reg = mask;
     b04:	4a0b      	ldr	r2, [pc, #44]	; (b34 <_ext_irq_enable+0x44>)
     b06:	6093      	str	r3, [r2, #8]
	((Eic *)hw)->INTFLAG.reg = mask;
     b08:	6113      	str	r3, [r2, #16]
		hri_eic_clear_INTFLAG_reg(EIC, 1ul << extint);
	}

	return ERR_NONE;
     b0a:	2000      	movs	r0, #0
}
     b0c:	4770      	bx	lr
		if (_map[i].pin == pin) {
     b0e:	2828      	cmp	r0, #40	; 0x28
     b10:	d002      	beq.n	b18 <_ext_irq_enable+0x28>
	for (; i < ARRAY_SIZE(_map); i++) {
     b12:	3301      	adds	r3, #1
     b14:	b2db      	uxtb	r3, r3
     b16:	e7ec      	b.n	af2 <_ext_irq_enable+0x2>
			extint = _map[i].extint;
     b18:	00da      	lsls	r2, r3, #3
     b1a:	4b07      	ldr	r3, [pc, #28]	; (b38 <_ext_irq_enable+0x48>)
     b1c:	5cd2      	ldrb	r2, [r2, r3]
			break;
     b1e:	e7eb      	b.n	af8 <_ext_irq_enable+0x8>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
     b20:	2301      	movs	r3, #1
     b22:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENSET.reg = mask;
     b24:	4a03      	ldr	r2, [pc, #12]	; (b34 <_ext_irq_enable+0x44>)
     b26:	60d3      	str	r3, [r2, #12]
	return ERR_NONE;
     b28:	2000      	movs	r0, #0
     b2a:	e7ef      	b.n	b0c <_ext_irq_enable+0x1c>
		return ERR_INVALID_ARG;
     b2c:	200d      	movs	r0, #13
     b2e:	4240      	negs	r0, r0
     b30:	e7ec      	b.n	b0c <_ext_irq_enable+0x1c>
     b32:	46c0      	nop			; (mov r8, r8)
     b34:	40001800 	.word	0x40001800
     b38:	0000da24 	.word	0x0000da24

00000b3c <EIC_Handler>:

/**
 * \brief EIC interrupt handler
 */
void EIC_Handler(void)
{
     b3c:	b570      	push	{r4, r5, r6, lr}
     b3e:	b082      	sub	sp, #8
	return ((Eic *)hw)->INTFLAG.reg;
     b40:	4b26      	ldr	r3, [pc, #152]	; (bdc <EIC_Handler+0xa0>)
     b42:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     b44:	68d9      	ldr	r1, [r3, #12]
	volatile uint32_t flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     b46:	400a      	ands	r2, r1
     b48:	9201      	str	r2, [sp, #4]
	int8_t            pos;
	uint32_t          pin = INVALID_PIN_NUMBER;

	hri_eic_clear_INTFLAG_reg(EIC, flags);
     b4a:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     b4c:	611a      	str	r2, [r3, #16]

	ASSERT(callback);
     b4e:	4b24      	ldr	r3, [pc, #144]	; (be0 <EIC_Handler+0xa4>)
     b50:	6818      	ldr	r0, [r3, #0]
     b52:	1e43      	subs	r3, r0, #1
     b54:	4198      	sbcs	r0, r3
     b56:	b2c0      	uxtb	r0, r0
     b58:	22d2      	movs	r2, #210	; 0xd2
     b5a:	4922      	ldr	r1, [pc, #136]	; (be4 <EIC_Handler+0xa8>)
     b5c:	f7ff ff1a 	bl	994 <assert>
	uint32_t          pin = INVALID_PIN_NUMBER;
     b60:	2501      	movs	r5, #1
     b62:	426d      	negs	r5, r5

	while (flags) {
     b64:	e02e      	b.n	bc4 <EIC_Handler+0x88>
					break;
				}
				if (_map[middle].extint < pos) {
					lower = middle + 1;
				} else {
					upper = middle - 1;
     b66:	3901      	subs	r1, #1
     b68:	b2ce      	uxtb	r6, r1
			while (upper >= lower) {
     b6a:	42b0      	cmp	r0, r6
     b6c:	d80e      	bhi.n	b8c <EIC_Handler+0x50>
				middle = (upper + lower) >> 1;
     b6e:	1832      	adds	r2, r6, r0
     b70:	1052      	asrs	r2, r2, #1
     b72:	b2d1      	uxtb	r1, r2
				if (_map[middle].extint == pos) {
     b74:	23ff      	movs	r3, #255	; 0xff
     b76:	4013      	ands	r3, r2
     b78:	00db      	lsls	r3, r3, #3
     b7a:	4a1b      	ldr	r2, [pc, #108]	; (be8 <EIC_Handler+0xac>)
     b7c:	5c9b      	ldrb	r3, [r3, r2]
     b7e:	42a3      	cmp	r3, r4
     b80:	d003      	beq.n	b8a <EIC_Handler+0x4e>
				if (_map[middle].extint < pos) {
     b82:	daf0      	bge.n	b66 <EIC_Handler+0x2a>
					lower = middle + 1;
     b84:	3101      	adds	r1, #1
     b86:	b2c8      	uxtb	r0, r1
     b88:	e7ef      	b.n	b6a <EIC_Handler+0x2e>
					pin = _map[middle].pin;
     b8a:	2528      	movs	r5, #40	; 0x28
				}
			}

			if (INVALID_PIN_NUMBER != pin) {
     b8c:	1c6b      	adds	r3, r5, #1
     b8e:	d003      	beq.n	b98 <EIC_Handler+0x5c>
				callback(pin);
     b90:	4b13      	ldr	r3, [pc, #76]	; (be0 <EIC_Handler+0xa4>)
     b92:	681b      	ldr	r3, [r3, #0]
     b94:	0028      	movs	r0, r5
     b96:	4798      	blx	r3
			}
			flags &= ~(1ul << pos);
     b98:	2201      	movs	r2, #1
     b9a:	40a2      	lsls	r2, r4
     b9c:	9b01      	ldr	r3, [sp, #4]
     b9e:	4393      	bics	r3, r2
     ba0:	9301      	str	r3, [sp, #4]
			pos = ffs(flags) - 1;
     ba2:	9801      	ldr	r0, [sp, #4]
     ba4:	f003 f970 	bl	3e88 <__ffssi2>
     ba8:	3801      	subs	r0, #1
     baa:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     bac:	1c63      	adds	r3, r4, #1
     bae:	d002      	beq.n	bb6 <EIC_Handler+0x7a>
     bb0:	2601      	movs	r6, #1
     bb2:	2000      	movs	r0, #0
     bb4:	e7d9      	b.n	b6a <EIC_Handler+0x2e>
	return ((Eic *)hw)->INTFLAG.reg;
     bb6:	4b09      	ldr	r3, [pc, #36]	; (bdc <EIC_Handler+0xa0>)
     bb8:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     bba:	68d9      	ldr	r1, [r3, #12]
		}
		flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     bbc:	400a      	ands	r2, r1
     bbe:	9201      	str	r2, [sp, #4]
		hri_eic_clear_INTFLAG_reg(EIC, flags);
     bc0:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     bc2:	611a      	str	r2, [r3, #16]
	while (flags) {
     bc4:	9b01      	ldr	r3, [sp, #4]
     bc6:	2b00      	cmp	r3, #0
     bc8:	d005      	beq.n	bd6 <EIC_Handler+0x9a>
		pos = ffs(flags) - 1;
     bca:	9801      	ldr	r0, [sp, #4]
     bcc:	f003 f95c 	bl	3e88 <__ffssi2>
     bd0:	3801      	subs	r0, #1
     bd2:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     bd4:	e7ea      	b.n	bac <EIC_Handler+0x70>
	}
}
     bd6:	b002      	add	sp, #8
     bd8:	bd70      	pop	{r4, r5, r6, pc}
     bda:	46c0      	nop			; (mov r8, r8)
     bdc:	40001800 	.word	0x40001800
     be0:	20000a74 	.word	0x20000a74
     be4:	0000da0c 	.word	0x0000da0c
     be8:	0000da24 	.word	0x0000da24

00000bec <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     bec:	07c3      	lsls	r3, r0, #31
     bee:	d509      	bpl.n	c04 <_gclk_init_generators_by_fref+0x18>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
     bf0:	4b11      	ldr	r3, [pc, #68]	; (c38 <_gclk_init_generators_by_fref+0x4c>)
     bf2:	2280      	movs	r2, #128	; 0x80
     bf4:	0052      	lsls	r2, r2, #1
     bf6:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     bf8:	4a10      	ldr	r2, [pc, #64]	; (c3c <_gclk_init_generators_by_fref+0x50>)
     bfa:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     bfc:	4b0e      	ldr	r3, [pc, #56]	; (c38 <_gclk_init_generators_by_fref+0x4c>)
     bfe:	785b      	ldrb	r3, [r3, #1]
     c00:	09db      	lsrs	r3, r3, #7
     c02:	d1fb      	bne.n	bfc <_gclk_init_generators_by_fref+0x10>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SRC | GCLK_GENCTRL_ID(0));
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
     c04:	0783      	lsls	r3, r0, #30
     c06:	d509      	bpl.n	c1c <_gclk_init_generators_by_fref+0x30>
	((Gclk *)hw)->GENDIV.reg = data;
     c08:	4b0b      	ldr	r3, [pc, #44]	; (c38 <_gclk_init_generators_by_fref+0x4c>)
     c0a:	2202      	movs	r2, #2
     c0c:	32ff      	adds	r2, #255	; 0xff
     c0e:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     c10:	4a0b      	ldr	r2, [pc, #44]	; (c40 <_gclk_init_generators_by_fref+0x54>)
     c12:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     c14:	4b08      	ldr	r3, [pc, #32]	; (c38 <_gclk_init_generators_by_fref+0x4c>)
     c16:	785b      	ldrb	r3, [r3, #1]
     c18:	09db      	lsrs	r3, r3, #7
     c1a:	d1fb      	bne.n	c14 <_gclk_init_generators_by_fref+0x28>
		        | (CONF_GCLK_GENERATOR_2_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_2_SRC | GCLK_GENCTRL_ID(2));
	}
#endif

#if CONF_GCLK_GENERATOR_3_CONFIG == 1
	if (bm & (1ul << 3)) {
     c1c:	0703      	lsls	r3, r0, #28
     c1e:	d509      	bpl.n	c34 <_gclk_init_generators_by_fref+0x48>
	((Gclk *)hw)->GENDIV.reg = data;
     c20:	4b05      	ldr	r3, [pc, #20]	; (c38 <_gclk_init_generators_by_fref+0x4c>)
     c22:	2204      	movs	r2, #4
     c24:	32ff      	adds	r2, #255	; 0xff
     c26:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     c28:	4a06      	ldr	r2, [pc, #24]	; (c44 <_gclk_init_generators_by_fref+0x58>)
     c2a:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     c2c:	4b02      	ldr	r3, [pc, #8]	; (c38 <_gclk_init_generators_by_fref+0x4c>)
     c2e:	785b      	ldrb	r3, [r3, #1]
     c30:	09db      	lsrs	r3, r3, #7
     c32:	d1fb      	bne.n	c2c <_gclk_init_generators_by_fref+0x40>
		        | (CONF_GCLK_GEN_7_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_7_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_7_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_7_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_7_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_7_SRC | GCLK_GENCTRL_ID(7));
	}
#endif
}
     c34:	4770      	bx	lr
     c36:	46c0      	nop			; (mov r8, r8)
     c38:	40000c00 	.word	0x40000c00
     c3c:	00010700 	.word	0x00010700
     c40:	00010601 	.word	0x00010601
     c44:	00010303 	.word	0x00010303

00000c48 <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
     c48:	4b06      	ldr	r3, [pc, #24]	; (c64 <_pm_init+0x1c>)
     c4a:	7a1a      	ldrb	r2, [r3, #8]
     c4c:	b2d2      	uxtb	r2, r2
     c4e:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
     c50:	7a5a      	ldrb	r2, [r3, #9]
     c52:	b2d2      	uxtb	r2, r2
     c54:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
     c56:	7a9a      	ldrb	r2, [r3, #10]
     c58:	b2d2      	uxtb	r2, r2
     c5a:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
     c5c:	7ada      	ldrb	r2, [r3, #11]
     c5e:	b2d2      	uxtb	r2, r2
     c60:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
     c62:	4770      	bx	lr
     c64:	40000400 	.word	0x40000400

00000c68 <_rtc_timer_interrupt_handler>:
 * \brief RTC Timer interrupt handler
 *
 * \param[in] p The pointer to calendar device struct
 */
static void _rtc_timer_interrupt_handler(struct _timer_device *dev)
{
     c68:	b510      	push	{r4, lr}
     c6a:	0004      	movs	r4, r0
	return tmp;
}

static inline hri_rtcmode0_intflag_reg_t hri_rtcmode0_read_INTFLAG_reg(const void *const hw)
{
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
     c6c:	68c3      	ldr	r3, [r0, #12]
     c6e:	7a1b      	ldrb	r3, [r3, #8]
	/* Read and mask interrupt flag register */
	uint16_t flag = hri_rtcmode0_read_INTFLAG_reg(dev->hw);

	if (flag & RTC_MODE0_INTFLAG_CMP0) {
     c70:	07db      	lsls	r3, r3, #31
     c72:	d506      	bpl.n	c82 <_rtc_timer_interrupt_handler+0x1a>
		if (dev->timer_cb.period_expired) {
     c74:	6803      	ldr	r3, [r0, #0]
     c76:	2b00      	cmp	r3, #0
     c78:	d000      	beq.n	c7c <_rtc_timer_interrupt_handler+0x14>
			dev->timer_cb.period_expired(dev);
     c7a:	4798      	blx	r3
		}

		/* Clear interrupt flag */
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
     c7c:	68e3      	ldr	r3, [r4, #12]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
     c7e:	2201      	movs	r2, #1
     c80:	721a      	strb	r2, [r3, #8]
	}
}
     c82:	bd10      	pop	{r4, pc}

00000c84 <_timer_init>:
{
     c84:	b570      	push	{r4, r5, r6, lr}
     c86:	0004      	movs	r4, r0
     c88:	000d      	movs	r5, r1
	ASSERT(dev);
     c8a:	1e43      	subs	r3, r0, #1
     c8c:	4198      	sbcs	r0, r3
     c8e:	b2c0      	uxtb	r0, r0
     c90:	2230      	movs	r2, #48	; 0x30
     c92:	4910      	ldr	r1, [pc, #64]	; (cd4 <_timer_init+0x50>)
     c94:	f7ff fe7e 	bl	994 <assert>
	dev->hw = hw;
     c98:	60e5      	str	r5, [r4, #12]
}

static inline void hri_rtcmode0_write_CTRL_reg(const void *const hw, hri_rtcmode0_ctrl_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     c9a:	2301      	movs	r3, #1
     c9c:	802b      	strh	r3, [r5, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c9e:	7aab      	ldrb	r3, [r5, #10]
     ca0:	09db      	lsrs	r3, r3, #7
     ca2:	d1fc      	bne.n	c9e <_timer_init+0x1a>
	hri_rtcmode0_wait_for_sync(dev->hw);
     ca4:	68e2      	ldr	r2, [r4, #12]
     ca6:	7a93      	ldrb	r3, [r2, #10]
     ca8:	09db      	lsrs	r3, r3, #7
     caa:	d1fc      	bne.n	ca6 <_timer_init+0x22>
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     cac:	3380      	adds	r3, #128	; 0x80
     cae:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     cb0:	7a93      	ldrb	r3, [r2, #10]
     cb2:	09db      	lsrs	r3, r3, #7
     cb4:	d1fc      	bne.n	cb0 <_timer_init+0x2c>
	hri_rtcmode0_write_COMP_COMP_bf(dev->hw, 0, CONF_RTC_COMP_VAL);
     cb6:	68e2      	ldr	r2, [r4, #12]

static inline void hri_rtcmode0_write_COMP_COMP_bf(const void *const hw, uint8_t index, hri_rtcmode0_comp_reg_t data)
{
	uint32_t tmp;
	RTC_CRITICAL_SECTION_ENTER();
	tmp = ((Rtc *)hw)->MODE0.COMP[index].reg;
     cb8:	6993      	ldr	r3, [r2, #24]
	tmp &= ~RTC_MODE0_COMP_COMP_Msk;
	tmp |= RTC_MODE0_COMP_COMP(data);
	((Rtc *)hw)->MODE0.COMP[index].reg = tmp;
     cba:	2301      	movs	r3, #1
     cbc:	6193      	str	r3, [r2, #24]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     cbe:	7a93      	ldrb	r3, [r2, #10]
     cc0:	09db      	lsrs	r3, r3, #7
     cc2:	d1fc      	bne.n	cbe <_timer_init+0x3a>
	((Rtc *)hw)->MODE0.INTENSET.reg = RTC_MODE0_INTENSET_CMP0;
     cc4:	3301      	adds	r3, #1
     cc6:	68e2      	ldr	r2, [r4, #12]
     cc8:	71d3      	strb	r3, [r2, #7]
	_rtc_dev = dev;
     cca:	4b03      	ldr	r3, [pc, #12]	; (cd8 <_timer_init+0x54>)
     ccc:	601c      	str	r4, [r3, #0]
}
     cce:	2000      	movs	r0, #0
     cd0:	bd70      	pop	{r4, r5, r6, pc}
     cd2:	46c0      	nop			; (mov r8, r8)
     cd4:	0000da2c 	.word	0x0000da2c
     cd8:	20000a78 	.word	0x20000a78

00000cdc <_timer_start>:
{
     cdc:	b510      	push	{r4, lr}
     cde:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->hw);
     ce0:	d020      	beq.n	d24 <_timer_start+0x48>
     ce2:	68c3      	ldr	r3, [r0, #12]
     ce4:	2b00      	cmp	r3, #0
     ce6:	d01b      	beq.n	d20 <_timer_start+0x44>
     ce8:	2001      	movs	r0, #1
     cea:	2267      	movs	r2, #103	; 0x67
     cec:	490e      	ldr	r1, [pc, #56]	; (d28 <_timer_start+0x4c>)
     cee:	f7ff fe51 	bl	994 <assert>
     cf2:	2208      	movs	r2, #8
     cf4:	4b0d      	ldr	r3, [pc, #52]	; (d2c <_timer_start+0x50>)
     cf6:	601a      	str	r2, [r3, #0]
	hri_rtcmode0_write_COUNT_COUNT_bf(dev->hw, 0);
     cf8:	68e2      	ldr	r2, [r4, #12]
	tmp = ((Rtc *)hw)->MODE0.COUNT.reg;
     cfa:	6913      	ldr	r3, [r2, #16]
	((Rtc *)hw)->MODE0.COUNT.reg = tmp;
     cfc:	2300      	movs	r3, #0
     cfe:	6113      	str	r3, [r2, #16]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     d00:	7a93      	ldrb	r3, [r2, #10]
     d02:	09db      	lsrs	r3, r3, #7
     d04:	d1fc      	bne.n	d00 <_timer_start+0x24>
	hri_rtcmode0_wait_for_sync(dev->hw);
     d06:	68e2      	ldr	r2, [r4, #12]
     d08:	7a93      	ldrb	r3, [r2, #10]
     d0a:	09db      	lsrs	r3, r3, #7
     d0c:	d1fc      	bne.n	d08 <_timer_start+0x2c>
	((Rtc *)hw)->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
     d0e:	8813      	ldrh	r3, [r2, #0]
     d10:	2102      	movs	r1, #2
     d12:	430b      	orrs	r3, r1
     d14:	b29b      	uxth	r3, r3
     d16:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     d18:	7a93      	ldrb	r3, [r2, #10]
     d1a:	09db      	lsrs	r3, r3, #7
     d1c:	d1fc      	bne.n	d18 <_timer_start+0x3c>
}
     d1e:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->hw);
     d20:	2000      	movs	r0, #0
     d22:	e7e2      	b.n	cea <_timer_start+0xe>
     d24:	2000      	movs	r0, #0
     d26:	e7e0      	b.n	cea <_timer_start+0xe>
     d28:	0000da2c 	.word	0x0000da2c
     d2c:	e000e100 	.word	0xe000e100

00000d30 <_timer_is_started>:
	return hri_rtcmode0_get_CTRL_ENABLE_bit(dev->hw);
     d30:	68c2      	ldr	r2, [r0, #12]
     d32:	7a93      	ldrb	r3, [r2, #10]
     d34:	09db      	lsrs	r3, r3, #7
     d36:	d1fc      	bne.n	d32 <_timer_is_started+0x2>
	tmp = ((Rtc *)hw)->MODE0.CTRL.reg;
     d38:	8813      	ldrh	r3, [r2, #0]
	tmp = (tmp & RTC_MODE0_CTRL_ENABLE) >> RTC_MODE0_CTRL_ENABLE_Pos;
     d3a:	085b      	lsrs	r3, r3, #1
	return (bool)tmp;
     d3c:	2001      	movs	r0, #1
     d3e:	4018      	ands	r0, r3
}
     d40:	4770      	bx	lr

00000d42 <_timer_set_irq>:
}
     d42:	4770      	bx	lr

00000d44 <_rtc_get_timer>:
 * \brief Retrieve timer helper functions
 */
struct _timer_hpl_interface *_rtc_get_timer(void)
{
	return NULL;
}
     d44:	2000      	movs	r0, #0
     d46:	4770      	bx	lr

00000d48 <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
     d48:	b510      	push	{r4, lr}
	_rtc_timer_interrupt_handler(_rtc_dev);
     d4a:	4b02      	ldr	r3, [pc, #8]	; (d54 <RTC_Handler+0xc>)
     d4c:	6818      	ldr	r0, [r3, #0]
     d4e:	f7ff ff8b 	bl	c68 <_rtc_timer_interrupt_handler>
}
     d52:	bd10      	pop	{r4, pc}
     d54:	20000a78 	.word	0x20000a78

00000d58 <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
     d58:	4b02      	ldr	r3, [pc, #8]	; (d64 <_sercom_get_hardware_index+0xc>)
     d5a:	469c      	mov	ip, r3
     d5c:	4460      	add	r0, ip
     d5e:	0a80      	lsrs	r0, r0, #10
     d60:	b2c0      	uxtb	r0, r0
}
     d62:	4770      	bx	lr
     d64:	bdfff800 	.word	0xbdfff800

00000d68 <_spi_sync_enable>:
		;
}

static inline bool hri_sercomspi_is_syncing(const void *const hw)
{
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
     d68:	8a03      	ldrh	r3, [r0, #16]
     d6a:	0bdb      	lsrs	r3, r3, #15
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw)) {
     d6c:	d108      	bne.n	d80 <_spi_sync_enable+0x18>
}

static inline void hri_sercomspi_set_CTRLA_ENABLE_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
     d6e:	6803      	ldr	r3, [r0, #0]
     d70:	2202      	movs	r2, #2
     d72:	4313      	orrs	r3, r2
     d74:	6003      	str	r3, [r0, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     d76:	8a03      	ldrh	r3, [r0, #16]
     d78:	0bdb      	lsrs	r3, r3, #15
     d7a:	d1fc      	bne.n	d76 <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
     d7c:	2000      	movs	r0, #0
}
     d7e:	4770      	bx	lr
		return ERR_BUSY;
     d80:	2004      	movs	r0, #4
     d82:	4240      	negs	r0, r0
     d84:	e7fb      	b.n	d7e <_spi_sync_enable+0x16>
	...

00000d88 <_get_sercom_index>:
{
     d88:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     d8a:	f7ff ffe5 	bl	d58 <_sercom_get_hardware_index>
     d8e:	0003      	movs	r3, r0
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     d90:	2000      	movs	r0, #0
     d92:	2800      	cmp	r0, #0
     d94:	d006      	beq.n	da4 <_get_sercom_index+0x1c>
	ASSERT(false);
     d96:	4a07      	ldr	r2, [pc, #28]	; (db4 <_get_sercom_index+0x2c>)
     d98:	4907      	ldr	r1, [pc, #28]	; (db8 <_get_sercom_index+0x30>)
     d9a:	2000      	movs	r0, #0
     d9c:	f7ff fdfa 	bl	994 <assert>
	return 0;
     da0:	2000      	movs	r0, #0
}
     da2:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
     da4:	0102      	lsls	r2, r0, #4
     da6:	4905      	ldr	r1, [pc, #20]	; (dbc <_get_sercom_index+0x34>)
     da8:	5c52      	ldrb	r2, [r2, r1]
     daa:	4293      	cmp	r3, r2
     dac:	d0f9      	beq.n	da2 <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     dae:	3001      	adds	r0, #1
     db0:	b2c0      	uxtb	r0, r0
     db2:	e7ee      	b.n	d92 <_get_sercom_index+0xa>
     db4:	0000022a 	.word	0x0000022a
     db8:	0000da44 	.word	0x0000da44
     dbc:	0000da78 	.word	0x0000da78

00000dc0 <_usart_init>:
{
     dc0:	b510      	push	{r4, lr}
     dc2:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
     dc4:	f7ff ffe0 	bl	d88 <_get_sercom_index>
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     dc8:	8a23      	ldrh	r3, [r4, #16]
     dca:	0bdb      	lsrs	r3, r3, #15
     dcc:	d1fc      	bne.n	dc8 <_usart_init+0x8>
     dce:	8a23      	ldrh	r3, [r4, #16]
     dd0:	0bdb      	lsrs	r3, r3, #15
     dd2:	d1fc      	bne.n	dce <_usart_init+0xe>
static inline hri_sercomusart_ctrla_reg_t hri_sercomusart_get_CTRLA_reg(const void *const           hw,
                                                                        hri_sercomusart_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomusart_wait_for_sync(hw);
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
     dd4:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
     dd6:	079b      	lsls	r3, r3, #30
     dd8:	d507      	bpl.n	dea <_usart_init+0x2a>
}

static inline void hri_sercomusart_write_CTRLA_reg(const void *const hw, hri_sercomusart_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLA.reg = data;
     dda:	2300      	movs	r3, #0
     ddc:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     dde:	8a23      	ldrh	r3, [r4, #16]
     de0:	0bdb      	lsrs	r3, r3, #15
     de2:	d1fc      	bne.n	dde <_usart_init+0x1e>
     de4:	8a23      	ldrh	r3, [r4, #16]
     de6:	0bdb      	lsrs	r3, r3, #15
     de8:	d1fc      	bne.n	de4 <_usart_init+0x24>
	((Sercom *)hw)->USART.CTRLA.reg = data;
     dea:	2301      	movs	r3, #1
     dec:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     dee:	8a23      	ldrh	r3, [r4, #16]
     df0:	0bdb      	lsrs	r3, r3, #15
     df2:	d1fc      	bne.n	dee <_usart_init+0x2e>
     df4:	8a23      	ldrh	r3, [r4, #16]
     df6:	0bdb      	lsrs	r3, r3, #15
     df8:	d1fc      	bne.n	df4 <_usart_init+0x34>
	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
     dfa:	0102      	lsls	r2, r0, #4
     dfc:	4b0b      	ldr	r3, [pc, #44]	; (e2c <_usart_init+0x6c>)
     dfe:	189b      	adds	r3, r3, r2
     e00:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
     e02:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     e04:	8a23      	ldrh	r3, [r4, #16]
     e06:	0bdb      	lsrs	r3, r3, #15
     e08:	d1fc      	bne.n	e04 <_usart_init+0x44>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
     e0a:	0102      	lsls	r2, r0, #4
     e0c:	4b07      	ldr	r3, [pc, #28]	; (e2c <_usart_init+0x6c>)
     e0e:	189b      	adds	r3, r3, r2
     e10:	689b      	ldr	r3, [r3, #8]
}

static inline void hri_sercomusart_write_CTRLB_reg(const void *const hw, hri_sercomusart_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLB.reg = data;
     e12:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     e14:	8a23      	ldrh	r3, [r4, #16]
     e16:	0bdb      	lsrs	r3, r3, #15
     e18:	d1fc      	bne.n	e14 <_usart_init+0x54>
	hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
     e1a:	0100      	lsls	r0, r0, #4
     e1c:	4b03      	ldr	r3, [pc, #12]	; (e2c <_usart_init+0x6c>)
     e1e:	1818      	adds	r0, r3, r0
     e20:	8983      	ldrh	r3, [r0, #12]
}

static inline void hri_sercomusart_write_BAUD_reg(const void *const hw, hri_sercomusart_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.BAUD.reg = data;
     e22:	8163      	strh	r3, [r4, #10]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
     e24:	7b83      	ldrb	r3, [r0, #14]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
     e26:	7223      	strb	r3, [r4, #8]
}
     e28:	2000      	movs	r0, #0
     e2a:	bd10      	pop	{r4, pc}
     e2c:	0000da78 	.word	0x0000da78

00000e30 <_get_i2cm_index>:
{
     e30:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     e32:	f7ff ff91 	bl	d58 <_sercom_get_hardware_index>
     e36:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     e38:	2000      	movs	r0, #0
     e3a:	2800      	cmp	r0, #0
     e3c:	d006      	beq.n	e4c <_get_i2cm_index+0x1c>
	ASSERT(false);
     e3e:	4a08      	ldr	r2, [pc, #32]	; (e60 <_get_i2cm_index+0x30>)
     e40:	4908      	ldr	r1, [pc, #32]	; (e64 <_get_i2cm_index+0x34>)
     e42:	2000      	movs	r0, #0
     e44:	f7ff fda6 	bl	994 <assert>
	return 0;
     e48:	2000      	movs	r0, #0
}
     e4a:	bd10      	pop	{r4, pc}
		if (_i2cms[i].number == sercom_offset) {
     e4c:	0043      	lsls	r3, r0, #1
     e4e:	181b      	adds	r3, r3, r0
     e50:	00d9      	lsls	r1, r3, #3
     e52:	4b05      	ldr	r3, [pc, #20]	; (e68 <_get_i2cm_index+0x38>)
     e54:	5ccb      	ldrb	r3, [r1, r3]
     e56:	429a      	cmp	r2, r3
     e58:	d0f7      	beq.n	e4a <_get_i2cm_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     e5a:	3001      	adds	r0, #1
     e5c:	b2c0      	uxtb	r0, r0
     e5e:	e7ec      	b.n	e3a <_get_i2cm_index+0xa>
     e60:	00000366 	.word	0x00000366
     e64:	0000da44 	.word	0x0000da44
     e68:	0000da60 	.word	0x0000da60

00000e6c <_sercom_i2c_sync_send_address>:
{
     e6c:	b570      	push	{r4, r5, r6, lr}
     e6e:	0005      	movs	r5, r0
	void *             hw  = i2c_dev->hw;
     e70:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
     e72:	1e43      	subs	r3, r0, #1
     e74:	4198      	sbcs	r0, r3
     e76:	b2c0      	uxtb	r0, r0
     e78:	4a5c      	ldr	r2, [pc, #368]	; (fec <_sercom_i2c_sync_send_address+0x180>)
     e7a:	495d      	ldr	r1, [pc, #372]	; (ff0 <_sercom_i2c_sync_send_address+0x184>)
     e7c:	f7ff fd8a 	bl	994 <assert>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     e80:	6863      	ldr	r3, [r4, #4]
     e82:	4a5c      	ldr	r2, [pc, #368]	; (ff4 <_sercom_i2c_sync_send_address+0x188>)
     e84:	4013      	ands	r3, r2
     e86:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e88:	8a23      	ldrh	r3, [r4, #16]
     e8a:	0bdb      	lsrs	r3, r3, #15
     e8c:	d1fc      	bne.n	e88 <_sercom_i2c_sync_send_address+0x1c>
	hri_sercomi2cm_write_ADDR_reg(hw, ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0));
     e8e:	882a      	ldrh	r2, [r5, #0]
     e90:	0052      	lsls	r2, r2, #1
     e92:	886b      	ldrh	r3, [r5, #2]
     e94:	2101      	movs	r1, #1
     e96:	400b      	ands	r3, r1
     e98:	4313      	orrs	r3, r2
     e9a:	b2db      	uxtb	r3, r3
}

static inline void hri_sercomi2cm_write_ADDR_reg(const void *const hw, hri_sercomi2cm_addr_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.ADDR.reg = data;
     e9c:	7523      	strb	r3, [r4, #20]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e9e:	8a23      	ldrh	r3, [r4, #16]
     ea0:	0bdb      	lsrs	r3, r3, #15
     ea2:	d1fc      	bne.n	e9e <_sercom_i2c_sync_send_address+0x32>
	void *   hw      = i2c_dev->hw;
     ea4:	692e      	ldr	r6, [r5, #16]
	uint32_t timeout = 65535;
     ea6:	4a54      	ldr	r2, [pc, #336]	; (ff8 <_sercom_i2c_sync_send_address+0x18c>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
     ea8:	7bb3      	ldrb	r3, [r6, #14]
     eaa:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
     eac:	0018      	movs	r0, r3
		if (timeout-- == 0) {
     eae:	1e51      	subs	r1, r2, #1
     eb0:	2a00      	cmp	r2, #0
     eb2:	d002      	beq.n	eba <_sercom_i2c_sync_send_address+0x4e>
     eb4:	000a      	movs	r2, r1
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
     eb6:	079b      	lsls	r3, r3, #30
     eb8:	d0f6      	beq.n	ea8 <_sercom_i2c_sync_send_address+0x3c>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     eba:	8a23      	ldrh	r3, [r4, #16]
     ebc:	0bdb      	lsrs	r3, r3, #15
     ebe:	d1fc      	bne.n	eba <_sercom_i2c_sync_send_address+0x4e>
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_reg(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw);
	return ((Sercom *)hw)->I2CM.STATUS.reg;
     ec0:	8a23      	ldrh	r3, [r4, #16]
     ec2:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
     ec4:	07c2      	lsls	r2, r0, #31
     ec6:	d550      	bpl.n	f6a <_sercom_i2c_sync_send_address+0xfe>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
     ec8:	079a      	lsls	r2, r3, #30
     eca:	d510      	bpl.n	eee <_sercom_i2c_sync_send_address+0x82>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
     ecc:	2201      	movs	r2, #1
     ece:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
     ed0:	886a      	ldrh	r2, [r5, #2]
     ed2:	2180      	movs	r1, #128	; 0x80
     ed4:	0149      	lsls	r1, r1, #5
     ed6:	430a      	orrs	r2, r1
     ed8:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
     eda:	886a      	ldrh	r2, [r5, #2]
     edc:	4947      	ldr	r1, [pc, #284]	; (ffc <_sercom_i2c_sync_send_address+0x190>)
     ede:	400a      	ands	r2, r1
     ee0:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
     ee2:	07db      	lsls	r3, r3, #31
     ee4:	d400      	bmi.n	ee8 <_sercom_i2c_sync_send_address+0x7c>
     ee6:	e07c      	b.n	fe2 <_sercom_i2c_sync_send_address+0x176>
				return I2C_ERR_BUS;
     ee8:	2005      	movs	r0, #5
     eea:	4240      	negs	r0, r0
     eec:	e063      	b.n	fb6 <_sercom_i2c_sync_send_address+0x14a>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
     eee:	075b      	lsls	r3, r3, #29
     ef0:	d40b      	bmi.n	f0a <_sercom_i2c_sync_send_address+0x9e>
			if (msg->len == 0) {
     ef2:	6868      	ldr	r0, [r5, #4]
     ef4:	2800      	cmp	r0, #0
     ef6:	d12d      	bne.n	f54 <_sercom_i2c_sync_send_address+0xe8>
				if (msg->flags & I2C_M_STOP) {
     ef8:	886b      	ldrh	r3, [r5, #2]
     efa:	b21b      	sxth	r3, r3
     efc:	2b00      	cmp	r3, #0
     efe:	db20      	blt.n	f42 <_sercom_i2c_sync_send_address+0xd6>
				msg->flags &= ~I2C_M_BUSY;
     f00:	886b      	ldrh	r3, [r5, #2]
     f02:	4a3e      	ldr	r2, [pc, #248]	; (ffc <_sercom_i2c_sync_send_address+0x190>)
     f04:	4013      	ands	r3, r2
     f06:	806b      	strh	r3, [r5, #2]
     f08:	e055      	b.n	fb6 <_sercom_i2c_sync_send_address+0x14a>
				if (msg->len > 0) {
     f0a:	686b      	ldr	r3, [r5, #4]
     f0c:	2b00      	cmp	r3, #0
     f0e:	dd04      	ble.n	f1a <_sercom_i2c_sync_send_address+0xae>
					msg->flags |= I2C_M_FAIL;
     f10:	886b      	ldrh	r3, [r5, #2]
     f12:	2280      	movs	r2, #128	; 0x80
     f14:	0152      	lsls	r2, r2, #5
     f16:	4313      	orrs	r3, r2
     f18:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
     f1a:	886b      	ldrh	r3, [r5, #2]
     f1c:	b21b      	sxth	r3, r3
     f1e:	2b00      	cmp	r3, #0
     f20:	db06      	blt.n	f30 <_sercom_i2c_sync_send_address+0xc4>
				msg->flags &= ~I2C_M_BUSY;
     f22:	886b      	ldrh	r3, [r5, #2]
     f24:	4a35      	ldr	r2, [pc, #212]	; (ffc <_sercom_i2c_sync_send_address+0x190>)
     f26:	4013      	ands	r3, r2
     f28:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
     f2a:	2002      	movs	r0, #2
     f2c:	4240      	negs	r0, r0
     f2e:	e042      	b.n	fb6 <_sercom_i2c_sync_send_address+0x14a>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     f30:	6862      	ldr	r2, [r4, #4]
     f32:	23c0      	movs	r3, #192	; 0xc0
     f34:	029b      	lsls	r3, r3, #10
     f36:	4313      	orrs	r3, r2
     f38:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     f3a:	8a23      	ldrh	r3, [r4, #16]
     f3c:	0bdb      	lsrs	r3, r3, #15
     f3e:	d1fc      	bne.n	f3a <_sercom_i2c_sync_send_address+0xce>
     f40:	e7ef      	b.n	f22 <_sercom_i2c_sync_send_address+0xb6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     f42:	6862      	ldr	r2, [r4, #4]
     f44:	23c0      	movs	r3, #192	; 0xc0
     f46:	029b      	lsls	r3, r3, #10
     f48:	4313      	orrs	r3, r2
     f4a:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     f4c:	8a23      	ldrh	r3, [r4, #16]
     f4e:	0bdb      	lsrs	r3, r3, #15
     f50:	d1fc      	bne.n	f4c <_sercom_i2c_sync_send_address+0xe0>
     f52:	e7d5      	b.n	f00 <_sercom_i2c_sync_send_address+0x94>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
     f54:	68ab      	ldr	r3, [r5, #8]
     f56:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
     f58:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
     f5a:	68ab      	ldr	r3, [r5, #8]
     f5c:	3301      	adds	r3, #1
     f5e:	60ab      	str	r3, [r5, #8]
				msg->len--;
     f60:	686b      	ldr	r3, [r5, #4]
     f62:	3b01      	subs	r3, #1
     f64:	606b      	str	r3, [r5, #4]
			return I2C_OK;
     f66:	2000      	movs	r0, #0
     f68:	e025      	b.n	fb6 <_sercom_i2c_sync_send_address+0x14a>
	} else if (flags & SB_FLAG) {
     f6a:	0782      	lsls	r2, r0, #30
     f6c:	d53c      	bpl.n	fe8 <_sercom_i2c_sync_send_address+0x17c>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
     f6e:	686a      	ldr	r2, [r5, #4]
     f70:	2a00      	cmp	r2, #0
     f72:	d031      	beq.n	fd8 <_sercom_i2c_sync_send_address+0x16c>
     f74:	075b      	lsls	r3, r3, #29
     f76:	d42f      	bmi.n	fd8 <_sercom_i2c_sync_send_address+0x16c>
			msg->len--;
     f78:	3a01      	subs	r2, #1
     f7a:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
     f7c:	2a00      	cmp	r2, #0
     f7e:	d107      	bne.n	f90 <_sercom_i2c_sync_send_address+0x124>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     f80:	6862      	ldr	r2, [r4, #4]
     f82:	2380      	movs	r3, #128	; 0x80
     f84:	02db      	lsls	r3, r3, #11
     f86:	4313      	orrs	r3, r2
     f88:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     f8a:	8a23      	ldrh	r3, [r4, #16]
     f8c:	0bdb      	lsrs	r3, r3, #15
     f8e:	d1fc      	bne.n	f8a <_sercom_i2c_sync_send_address+0x11e>
			if (msg->len == 0) {
     f90:	686b      	ldr	r3, [r5, #4]
     f92:	2b00      	cmp	r3, #0
     f94:	d107      	bne.n	fa6 <_sercom_i2c_sync_send_address+0x13a>
				if (msg->flags & I2C_M_STOP) {
     f96:	886b      	ldrh	r3, [r5, #2]
     f98:	b21b      	sxth	r3, r3
     f9a:	2b00      	cmp	r3, #0
     f9c:	db0c      	blt.n	fb8 <_sercom_i2c_sync_send_address+0x14c>
				msg->flags &= ~I2C_M_BUSY;
     f9e:	886b      	ldrh	r3, [r5, #2]
     fa0:	4a16      	ldr	r2, [pc, #88]	; (ffc <_sercom_i2c_sync_send_address+0x190>)
     fa2:	4013      	ands	r3, r2
     fa4:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
     fa6:	68ab      	ldr	r3, [r5, #8]
     fa8:	1c5a      	adds	r2, r3, #1
     faa:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
     fac:	7e22      	ldrb	r2, [r4, #24]
     fae:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     fb0:	2302      	movs	r3, #2
     fb2:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
     fb4:	2000      	movs	r0, #0
}
     fb6:	bd70      	pop	{r4, r5, r6, pc}
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
     fb8:	6863      	ldr	r3, [r4, #4]
     fba:	4a10      	ldr	r2, [pc, #64]	; (ffc <_sercom_i2c_sync_send_address+0x190>)
     fbc:	4013      	ands	r3, r2
     fbe:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     fc0:	8a23      	ldrh	r3, [r4, #16]
     fc2:	0bdb      	lsrs	r3, r3, #15
     fc4:	d1fc      	bne.n	fc0 <_sercom_i2c_sync_send_address+0x154>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     fc6:	6862      	ldr	r2, [r4, #4]
     fc8:	23c0      	movs	r3, #192	; 0xc0
     fca:	029b      	lsls	r3, r3, #10
     fcc:	4313      	orrs	r3, r2
     fce:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     fd0:	8a23      	ldrh	r3, [r4, #16]
     fd2:	0bdb      	lsrs	r3, r3, #15
     fd4:	d1fc      	bne.n	fd0 <_sercom_i2c_sync_send_address+0x164>
     fd6:	e7e2      	b.n	f9e <_sercom_i2c_sync_send_address+0x132>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     fd8:	2302      	movs	r3, #2
     fda:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
     fdc:	2002      	movs	r0, #2
     fde:	4240      	negs	r0, r0
     fe0:	e7e9      	b.n	fb6 <_sercom_i2c_sync_send_address+0x14a>
			return I2C_ERR_BAD_ADDRESS;
     fe2:	2004      	movs	r0, #4
     fe4:	4240      	negs	r0, r0
     fe6:	e7e6      	b.n	fb6 <_sercom_i2c_sync_send_address+0x14a>
	return I2C_OK;
     fe8:	2000      	movs	r0, #0
	return _sercom_i2c_sync_analyse_flags(hw, flags, msg);
     fea:	e7e4      	b.n	fb6 <_sercom_i2c_sync_send_address+0x14a>
     fec:	00000581 	.word	0x00000581
     ff0:	0000da44 	.word	0x0000da44
     ff4:	fffbffff 	.word	0xfffbffff
     ff8:	0000ffff 	.word	0x0000ffff
     ffc:	fffffeff 	.word	0xfffffeff

00001000 <_usart_sync_init>:
{
    1000:	b570      	push	{r4, r5, r6, lr}
    1002:	0005      	movs	r5, r0
    1004:	000c      	movs	r4, r1
	ASSERT(device);
    1006:	1e43      	subs	r3, r0, #1
    1008:	4198      	sbcs	r0, r3
    100a:	b2c0      	uxtb	r0, r0
    100c:	22a1      	movs	r2, #161	; 0xa1
    100e:	4904      	ldr	r1, [pc, #16]	; (1020 <_usart_sync_init+0x20>)
    1010:	f7ff fcc0 	bl	994 <assert>
	device->hw = hw;
    1014:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
    1016:	0020      	movs	r0, r4
    1018:	f7ff fed2 	bl	dc0 <_usart_init>
}
    101c:	bd70      	pop	{r4, r5, r6, pc}
    101e:	46c0      	nop			; (mov r8, r8)
    1020:	0000da44 	.word	0x0000da44

00001024 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
    1024:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1026:	6813      	ldr	r3, [r2, #0]
    1028:	2102      	movs	r1, #2
    102a:	430b      	orrs	r3, r1
    102c:	6013      	str	r3, [r2, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
    102e:	8a13      	ldrh	r3, [r2, #16]
    1030:	0bdb      	lsrs	r3, r3, #15
    1032:	d1fc      	bne.n	102e <_usart_sync_enable+0xa>
}
    1034:	4770      	bx	lr

00001036 <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
    1036:	6803      	ldr	r3, [r0, #0]
    1038:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
    103a:	8319      	strh	r1, [r3, #24]
}
    103c:	4770      	bx	lr

0000103e <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
    103e:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
    1040:	8b18      	ldrh	r0, [r3, #24]
    1042:	b2c0      	uxtb	r0, r0
}
    1044:	4770      	bx	lr

00001046 <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
    1046:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
    1048:	7b98      	ldrb	r0, [r3, #14]
    104a:	2301      	movs	r3, #1
    104c:	4018      	ands	r0, r3
}
    104e:	4770      	bx	lr

00001050 <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
    1050:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
    1052:	7b9b      	ldrb	r3, [r3, #14]
    1054:	085b      	lsrs	r3, r3, #1
    1056:	2001      	movs	r0, #1
    1058:	4018      	ands	r0, r3
}
    105a:	4770      	bx	lr

0000105c <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
    105c:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
    105e:	7b9b      	ldrb	r3, [r3, #14]
    1060:	089b      	lsrs	r3, r3, #2
    1062:	2001      	movs	r0, #1
    1064:	4018      	ands	r0, r3
}
    1066:	4770      	bx	lr

00001068 <_i2c_m_sync_init>:
{
    1068:	b570      	push	{r4, r5, r6, lr}
    106a:	0006      	movs	r6, r0
    106c:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
    106e:	0008      	movs	r0, r1
    1070:	f7ff fede 	bl	e30 <_get_i2cm_index>
    1074:	0005      	movs	r5, r0
	ASSERT(i2c_dev);
    1076:	0030      	movs	r0, r6
    1078:	1e43      	subs	r3, r0, #1
    107a:	4198      	sbcs	r0, r3
    107c:	b2c0      	uxtb	r0, r0
    107e:	4a20      	ldr	r2, [pc, #128]	; (1100 <_i2c_m_sync_init+0x98>)
    1080:	4920      	ldr	r1, [pc, #128]	; (1104 <_i2c_m_sync_init+0x9c>)
    1082:	f7ff fc87 	bl	994 <assert>
	i2c_dev->hw = hw;
    1086:	6134      	str	r4, [r6, #16]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1088:	8a23      	ldrh	r3, [r4, #16]
    108a:	0bdb      	lsrs	r3, r3, #15
    108c:	d1fc      	bne.n	1088 <_i2c_m_sync_init+0x20>
    108e:	8a23      	ldrh	r3, [r4, #16]
    1090:	0bdb      	lsrs	r3, r3, #15
    1092:	d1fc      	bne.n	108e <_i2c_m_sync_init+0x26>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
    1094:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
    1096:	079b      	lsls	r3, r3, #30
    1098:	d507      	bpl.n	10aa <_i2c_m_sync_init+0x42>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    109a:	2300      	movs	r3, #0
    109c:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    109e:	8a23      	ldrh	r3, [r4, #16]
    10a0:	0bdb      	lsrs	r3, r3, #15
    10a2:	d1fc      	bne.n	109e <_i2c_m_sync_init+0x36>
    10a4:	8a23      	ldrh	r3, [r4, #16]
    10a6:	0bdb      	lsrs	r3, r3, #15
    10a8:	d1fc      	bne.n	10a4 <_i2c_m_sync_init+0x3c>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    10aa:	2301      	movs	r3, #1
    10ac:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    10ae:	8a23      	ldrh	r3, [r4, #16]
    10b0:	0bdb      	lsrs	r3, r3, #15
    10b2:	d1fc      	bne.n	10ae <_i2c_m_sync_init+0x46>
    10b4:	8a23      	ldrh	r3, [r4, #16]
    10b6:	0bdb      	lsrs	r3, r3, #15
    10b8:	d1fc      	bne.n	10b4 <_i2c_m_sync_init+0x4c>
	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a & ~SERCOM_I2CM_CTRLA_ENABLE);
    10ba:	006b      	lsls	r3, r5, #1
    10bc:	195b      	adds	r3, r3, r5
    10be:	00da      	lsls	r2, r3, #3
    10c0:	4b11      	ldr	r3, [pc, #68]	; (1108 <_i2c_m_sync_init+0xa0>)
    10c2:	189b      	adds	r3, r3, r2
    10c4:	685b      	ldr	r3, [r3, #4]
    10c6:	2202      	movs	r2, #2
    10c8:	4393      	bics	r3, r2
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    10ca:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    10cc:	8a23      	ldrh	r3, [r4, #16]
    10ce:	0bdb      	lsrs	r3, r3, #15
    10d0:	d1fc      	bne.n	10cc <_i2c_m_sync_init+0x64>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
    10d2:	006b      	lsls	r3, r5, #1
    10d4:	195b      	adds	r3, r3, r5
    10d6:	00da      	lsls	r2, r3, #3
    10d8:	4b0b      	ldr	r3, [pc, #44]	; (1108 <_i2c_m_sync_init+0xa0>)
    10da:	189b      	adds	r3, r3, r2
    10dc:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
    10de:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    10e0:	8a23      	ldrh	r3, [r4, #16]
    10e2:	0bdb      	lsrs	r3, r3, #15
    10e4:	d1fc      	bne.n	10e0 <_i2c_m_sync_init+0x78>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
    10e6:	4a08      	ldr	r2, [pc, #32]	; (1108 <_i2c_m_sync_init+0xa0>)
    10e8:	006b      	lsls	r3, r5, #1
    10ea:	1958      	adds	r0, r3, r5
    10ec:	00c1      	lsls	r1, r0, #3
    10ee:	0008      	movs	r0, r1
    10f0:	1851      	adds	r1, r2, r1
    10f2:	8989      	ldrh	r1, [r1, #12]
	((Sercom *)hw)->I2CM.BAUD.reg = data;
    10f4:	8161      	strh	r1, [r4, #10]
	i2c_dev->service.trise = _i2cms[i].trise;
    10f6:	1812      	adds	r2, r2, r0
    10f8:	8a13      	ldrh	r3, [r2, #16]
    10fa:	81f3      	strh	r3, [r6, #14]
}
    10fc:	2000      	movs	r0, #0
    10fe:	bd70      	pop	{r4, r5, r6, pc}
    1100:	000004d7 	.word	0x000004d7
    1104:	0000da44 	.word	0x0000da44
    1108:	0000da60 	.word	0x0000da60

0000110c <_i2c_m_sync_enable>:
{
    110c:	b570      	push	{r4, r5, r6, lr}
    110e:	0006      	movs	r6, r0
	void *hw              = i2c_dev->hw;
    1110:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    1112:	4d18      	ldr	r5, [pc, #96]	; (1174 <_i2c_m_sync_enable+0x68>)
    1114:	1e43      	subs	r3, r0, #1
    1116:	4198      	sbcs	r0, r3
    1118:	b2c0      	uxtb	r0, r0
    111a:	22a1      	movs	r2, #161	; 0xa1
    111c:	00d2      	lsls	r2, r2, #3
    111e:	0029      	movs	r1, r5
    1120:	f7ff fc38 	bl	994 <assert>
	ASSERT(i2c_dev->hw);
    1124:	6930      	ldr	r0, [r6, #16]
    1126:	1e43      	subs	r3, r0, #1
    1128:	4198      	sbcs	r0, r3
    112a:	b2c0      	uxtb	r0, r0
    112c:	4a12      	ldr	r2, [pc, #72]	; (1178 <_i2c_m_sync_enable+0x6c>)
    112e:	0029      	movs	r1, r5
    1130:	f7ff fc30 	bl	994 <assert>
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    1134:	6823      	ldr	r3, [r4, #0]
    1136:	2202      	movs	r2, #2
    1138:	4313      	orrs	r3, r2
    113a:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    113c:	8a23      	ldrh	r3, [r4, #16]
    113e:	0bdb      	lsrs	r3, r3, #15
    1140:	d1fc      	bne.n	113c <_i2c_m_sync_enable+0x30>
    1142:	2004      	movs	r0, #4
    1144:	490d      	ldr	r1, [pc, #52]	; (117c <_i2c_m_sync_enable+0x70>)
    1146:	8a23      	ldrh	r3, [r4, #16]
    1148:	0bdb      	lsrs	r3, r3, #15
    114a:	d1fc      	bne.n	1146 <_i2c_m_sync_enable+0x3a>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    114c:	8a22      	ldrh	r2, [r4, #16]
    114e:	0912      	lsrs	r2, r2, #4
    1150:	3303      	adds	r3, #3
    1152:	4013      	ands	r3, r2
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
    1154:	2b01      	cmp	r3, #1
    1156:	d008      	beq.n	116a <_i2c_m_sync_enable+0x5e>
		timeout--;
    1158:	3901      	subs	r1, #1
		if (timeout <= 0) {
    115a:	2900      	cmp	r1, #0
    115c:	dcf3      	bgt.n	1146 <_i2c_m_sync_enable+0x3a>
			if (--timeout_attempt)
    115e:	3801      	subs	r0, #1
    1160:	2800      	cmp	r0, #0
    1162:	d004      	beq.n	116e <_i2c_m_sync_enable+0x62>
			((Sercom *)hw)->I2CM.STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(I2C_IDLE);
    1164:	2310      	movs	r3, #16
    1166:	8223      	strh	r3, [r4, #16]
    1168:	e7ec      	b.n	1144 <_i2c_m_sync_enable+0x38>
	return ERR_NONE;
    116a:	2000      	movs	r0, #0
}
    116c:	bd70      	pop	{r4, r5, r6, pc}
				return I2C_ERR_BUSY;
    116e:	2006      	movs	r0, #6
    1170:	4240      	negs	r0, r0
    1172:	e7fb      	b.n	116c <_i2c_m_sync_enable+0x60>
    1174:	0000da44 	.word	0x0000da44
    1178:	00000509 	.word	0x00000509
    117c:	0000ffff 	.word	0x0000ffff

00001180 <_i2c_m_sync_transfer>:
{
    1180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1182:	0005      	movs	r5, r0
    1184:	000e      	movs	r6, r1
	void *   hw = i2c_dev->hw;
    1186:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    1188:	4f7d      	ldr	r7, [pc, #500]	; (1380 <_i2c_m_sync_transfer+0x200>)
    118a:	1e43      	subs	r3, r0, #1
    118c:	4198      	sbcs	r0, r3
    118e:	b2c0      	uxtb	r0, r0
    1190:	4a7c      	ldr	r2, [pc, #496]	; (1384 <_i2c_m_sync_transfer+0x204>)
    1192:	0039      	movs	r1, r7
    1194:	f7ff fbfe 	bl	994 <assert>
	ASSERT(i2c_dev->hw);
    1198:	6928      	ldr	r0, [r5, #16]
    119a:	1e43      	subs	r3, r0, #1
    119c:	4198      	sbcs	r0, r3
    119e:	b2c0      	uxtb	r0, r0
    11a0:	4a79      	ldr	r2, [pc, #484]	; (1388 <_i2c_m_sync_transfer+0x208>)
    11a2:	0039      	movs	r1, r7
    11a4:	f7ff fbf6 	bl	994 <assert>
	ASSERT(msg);
    11a8:	0030      	movs	r0, r6
    11aa:	1e43      	subs	r3, r0, #1
    11ac:	4198      	sbcs	r0, r3
    11ae:	b2c0      	uxtb	r0, r0
    11b0:	4a76      	ldr	r2, [pc, #472]	; (138c <_i2c_m_sync_transfer+0x20c>)
    11b2:	0039      	movs	r1, r7
    11b4:	f7ff fbee 	bl	994 <assert>
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    11b8:	886b      	ldrh	r3, [r5, #2]
    11ba:	05db      	lsls	r3, r3, #23
    11bc:	d500      	bpl.n	11c0 <_i2c_m_sync_transfer+0x40>
    11be:	e0dc      	b.n	137a <_i2c_m_sync_transfer+0x1fa>
	msg->flags |= I2C_M_BUSY;
    11c0:	8872      	ldrh	r2, [r6, #2]
    11c2:	2380      	movs	r3, #128	; 0x80
    11c4:	005b      	lsls	r3, r3, #1
    11c6:	469c      	mov	ip, r3
    11c8:	431a      	orrs	r2, r3
    11ca:	8072      	strh	r2, [r6, #2]
	i2c_dev->service.msg = *msg;
    11cc:	002a      	movs	r2, r5
    11ce:	0031      	movs	r1, r6
    11d0:	c989      	ldmia	r1!, {r0, r3, r7}
    11d2:	c289      	stmia	r2!, {r0, r3, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    11d4:	6862      	ldr	r2, [r4, #4]
    11d6:	4663      	mov	r3, ip
    11d8:	4313      	orrs	r3, r2
    11da:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    11dc:	8a23      	ldrh	r3, [r4, #16]
    11de:	0bdb      	lsrs	r3, r3, #15
    11e0:	d1fc      	bne.n	11dc <_i2c_m_sync_transfer+0x5c>
	ret = _sercom_i2c_sync_send_address(i2c_dev);
    11e2:	0028      	movs	r0, r5
    11e4:	f7ff fe42 	bl	e6c <_sercom_i2c_sync_send_address>
	if (ret) {
    11e8:	2800      	cmp	r0, #0
    11ea:	d100      	bne.n	11ee <_i2c_m_sync_transfer+0x6e>
    11ec:	e07d      	b.n	12ea <_i2c_m_sync_transfer+0x16a>
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    11ee:	886b      	ldrh	r3, [r5, #2]
    11f0:	4a67      	ldr	r2, [pc, #412]	; (1390 <_i2c_m_sync_transfer+0x210>)
    11f2:	4013      	ands	r3, r2
    11f4:	806b      	strh	r3, [r5, #2]
}
    11f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return I2C_ERR_BUS;
    11f8:	2005      	movs	r0, #5
    11fa:	4240      	negs	r0, r0
    11fc:	e086      	b.n	130c <_i2c_m_sync_transfer+0x18c>
			if (msg->flags & I2C_M_STOP) {
    11fe:	8873      	ldrh	r3, [r6, #2]
    1200:	b21b      	sxth	r3, r3
    1202:	2b00      	cmp	r3, #0
    1204:	db04      	blt.n	1210 <_i2c_m_sync_transfer+0x90>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    1206:	886b      	ldrh	r3, [r5, #2]
    1208:	4a61      	ldr	r2, [pc, #388]	; (1390 <_i2c_m_sync_transfer+0x210>)
    120a:	4013      	ands	r3, r2
    120c:	806b      	strh	r3, [r5, #2]
			return ret;
    120e:	e7f2      	b.n	11f6 <_i2c_m_sync_transfer+0x76>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1210:	6862      	ldr	r2, [r4, #4]
    1212:	23c0      	movs	r3, #192	; 0xc0
    1214:	029b      	lsls	r3, r3, #10
    1216:	4313      	orrs	r3, r2
    1218:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    121a:	8a23      	ldrh	r3, [r4, #16]
    121c:	0bdb      	lsrs	r3, r3, #15
    121e:	d1fc      	bne.n	121a <_i2c_m_sync_transfer+0x9a>
    1220:	e7f1      	b.n	1206 <_i2c_m_sync_transfer+0x86>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    1222:	075b      	lsls	r3, r3, #29
    1224:	d40b      	bmi.n	123e <_i2c_m_sync_transfer+0xbe>
			if (msg->len == 0) {
    1226:	6868      	ldr	r0, [r5, #4]
    1228:	2800      	cmp	r0, #0
    122a:	d12d      	bne.n	1288 <_i2c_m_sync_transfer+0x108>
				if (msg->flags & I2C_M_STOP) {
    122c:	886b      	ldrh	r3, [r5, #2]
    122e:	b21b      	sxth	r3, r3
    1230:	2b00      	cmp	r3, #0
    1232:	db20      	blt.n	1276 <_i2c_m_sync_transfer+0xf6>
				msg->flags &= ~I2C_M_BUSY;
    1234:	886b      	ldrh	r3, [r5, #2]
    1236:	4a56      	ldr	r2, [pc, #344]	; (1390 <_i2c_m_sync_transfer+0x210>)
    1238:	4013      	ands	r3, r2
    123a:	806b      	strh	r3, [r5, #2]
    123c:	e055      	b.n	12ea <_i2c_m_sync_transfer+0x16a>
				if (msg->len > 0) {
    123e:	686b      	ldr	r3, [r5, #4]
    1240:	2b00      	cmp	r3, #0
    1242:	dd04      	ble.n	124e <_i2c_m_sync_transfer+0xce>
					msg->flags |= I2C_M_FAIL;
    1244:	886b      	ldrh	r3, [r5, #2]
    1246:	2280      	movs	r2, #128	; 0x80
    1248:	0152      	lsls	r2, r2, #5
    124a:	4313      	orrs	r3, r2
    124c:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    124e:	886b      	ldrh	r3, [r5, #2]
    1250:	b21b      	sxth	r3, r3
    1252:	2b00      	cmp	r3, #0
    1254:	db06      	blt.n	1264 <_i2c_m_sync_transfer+0xe4>
				msg->flags &= ~I2C_M_BUSY;
    1256:	886b      	ldrh	r3, [r5, #2]
    1258:	4a4d      	ldr	r2, [pc, #308]	; (1390 <_i2c_m_sync_transfer+0x210>)
    125a:	4013      	ands	r3, r2
    125c:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    125e:	2002      	movs	r0, #2
    1260:	4240      	negs	r0, r0
    1262:	e042      	b.n	12ea <_i2c_m_sync_transfer+0x16a>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1264:	6862      	ldr	r2, [r4, #4]
    1266:	23c0      	movs	r3, #192	; 0xc0
    1268:	029b      	lsls	r3, r3, #10
    126a:	4313      	orrs	r3, r2
    126c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    126e:	8a23      	ldrh	r3, [r4, #16]
    1270:	0bdb      	lsrs	r3, r3, #15
    1272:	d1fc      	bne.n	126e <_i2c_m_sync_transfer+0xee>
    1274:	e7ef      	b.n	1256 <_i2c_m_sync_transfer+0xd6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1276:	6862      	ldr	r2, [r4, #4]
    1278:	23c0      	movs	r3, #192	; 0xc0
    127a:	029b      	lsls	r3, r3, #10
    127c:	4313      	orrs	r3, r2
    127e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1280:	8a23      	ldrh	r3, [r4, #16]
    1282:	0bdb      	lsrs	r3, r3, #15
    1284:	d1fc      	bne.n	1280 <_i2c_m_sync_transfer+0x100>
    1286:	e7d5      	b.n	1234 <_i2c_m_sync_transfer+0xb4>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    1288:	68ab      	ldr	r3, [r5, #8]
    128a:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    128c:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
    128e:	68ab      	ldr	r3, [r5, #8]
    1290:	3301      	adds	r3, #1
    1292:	60ab      	str	r3, [r5, #8]
				msg->len--;
    1294:	686b      	ldr	r3, [r5, #4]
    1296:	3b01      	subs	r3, #1
    1298:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    129a:	2000      	movs	r0, #0
    129c:	e025      	b.n	12ea <_i2c_m_sync_transfer+0x16a>
	} else if (flags & SB_FLAG) {
    129e:	078a      	lsls	r2, r1, #30
    12a0:	d569      	bpl.n	1376 <_i2c_m_sync_transfer+0x1f6>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    12a2:	686a      	ldr	r2, [r5, #4]
    12a4:	2a00      	cmp	r2, #0
    12a6:	d05e      	beq.n	1366 <_i2c_m_sync_transfer+0x1e6>
    12a8:	075b      	lsls	r3, r3, #29
    12aa:	d45c      	bmi.n	1366 <_i2c_m_sync_transfer+0x1e6>
			msg->len--;
    12ac:	3a01      	subs	r2, #1
    12ae:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
    12b0:	2a00      	cmp	r2, #0
    12b2:	d107      	bne.n	12c4 <_i2c_m_sync_transfer+0x144>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    12b4:	6862      	ldr	r2, [r4, #4]
    12b6:	2380      	movs	r3, #128	; 0x80
    12b8:	02db      	lsls	r3, r3, #11
    12ba:	4313      	orrs	r3, r2
    12bc:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    12be:	8a23      	ldrh	r3, [r4, #16]
    12c0:	0bdb      	lsrs	r3, r3, #15
    12c2:	d1fc      	bne.n	12be <_i2c_m_sync_transfer+0x13e>
			if (msg->len == 0) {
    12c4:	686b      	ldr	r3, [r5, #4]
    12c6:	2b00      	cmp	r3, #0
    12c8:	d107      	bne.n	12da <_i2c_m_sync_transfer+0x15a>
				if (msg->flags & I2C_M_STOP) {
    12ca:	886b      	ldrh	r3, [r5, #2]
    12cc:	b21b      	sxth	r3, r3
    12ce:	2b00      	cmp	r3, #0
    12d0:	db39      	blt.n	1346 <_i2c_m_sync_transfer+0x1c6>
				msg->flags &= ~I2C_M_BUSY;
    12d2:	886b      	ldrh	r3, [r5, #2]
    12d4:	4a2e      	ldr	r2, [pc, #184]	; (1390 <_i2c_m_sync_transfer+0x210>)
    12d6:	4013      	ands	r3, r2
    12d8:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    12da:	68ab      	ldr	r3, [r5, #8]
    12dc:	1c5a      	adds	r2, r3, #1
    12de:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
    12e0:	7e22      	ldrb	r2, [r4, #24]
    12e2:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    12e4:	2302      	movs	r3, #2
    12e6:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
    12e8:	2000      	movs	r0, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    12ea:	886b      	ldrh	r3, [r5, #2]
    12ec:	05db      	lsls	r3, r3, #23
    12ee:	d400      	bmi.n	12f2 <_i2c_m_sync_transfer+0x172>
    12f0:	e781      	b.n	11f6 <_i2c_m_sync_transfer+0x76>
	void *   hw      = i2c_dev->hw;
    12f2:	692f      	ldr	r7, [r5, #16]
	uint32_t timeout = 65535;
    12f4:	4a27      	ldr	r2, [pc, #156]	; (1394 <_i2c_m_sync_transfer+0x214>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    12f6:	7bbb      	ldrb	r3, [r7, #14]
    12f8:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
    12fa:	0019      	movs	r1, r3
		if (timeout-- == 0) {
    12fc:	1e50      	subs	r0, r2, #1
    12fe:	2a00      	cmp	r2, #0
    1300:	d100      	bne.n	1304 <_i2c_m_sync_transfer+0x184>
    1302:	e779      	b.n	11f8 <_i2c_m_sync_transfer+0x78>
    1304:	0002      	movs	r2, r0
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    1306:	079b      	lsls	r3, r3, #30
    1308:	d0f5      	beq.n	12f6 <_i2c_m_sync_transfer+0x176>
	return I2C_OK;
    130a:	2000      	movs	r0, #0
		if (ret) {
    130c:	2800      	cmp	r0, #0
    130e:	d000      	beq.n	1312 <_i2c_m_sync_transfer+0x192>
    1310:	e775      	b.n	11fe <_i2c_m_sync_transfer+0x7e>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1312:	8a23      	ldrh	r3, [r4, #16]
    1314:	0bdb      	lsrs	r3, r3, #15
    1316:	d1fc      	bne.n	1312 <_i2c_m_sync_transfer+0x192>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    1318:	8a23      	ldrh	r3, [r4, #16]
    131a:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
    131c:	07ca      	lsls	r2, r1, #31
    131e:	d5be      	bpl.n	129e <_i2c_m_sync_transfer+0x11e>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    1320:	079a      	lsls	r2, r3, #30
    1322:	d400      	bmi.n	1326 <_i2c_m_sync_transfer+0x1a6>
    1324:	e77d      	b.n	1222 <_i2c_m_sync_transfer+0xa2>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    1326:	2201      	movs	r2, #1
    1328:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
    132a:	886a      	ldrh	r2, [r5, #2]
    132c:	2180      	movs	r1, #128	; 0x80
    132e:	0149      	lsls	r1, r1, #5
    1330:	430a      	orrs	r2, r1
    1332:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1334:	886a      	ldrh	r2, [r5, #2]
    1336:	4916      	ldr	r1, [pc, #88]	; (1390 <_i2c_m_sync_transfer+0x210>)
    1338:	400a      	ands	r2, r1
    133a:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    133c:	07db      	lsls	r3, r3, #31
    133e:	d517      	bpl.n	1370 <_i2c_m_sync_transfer+0x1f0>
				return I2C_ERR_BUS;
    1340:	2005      	movs	r0, #5
    1342:	4240      	negs	r0, r0
    1344:	e7d1      	b.n	12ea <_i2c_m_sync_transfer+0x16a>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    1346:	6863      	ldr	r3, [r4, #4]
    1348:	4a11      	ldr	r2, [pc, #68]	; (1390 <_i2c_m_sync_transfer+0x210>)
    134a:	4013      	ands	r3, r2
    134c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    134e:	8a23      	ldrh	r3, [r4, #16]
    1350:	0bdb      	lsrs	r3, r3, #15
    1352:	d1fc      	bne.n	134e <_i2c_m_sync_transfer+0x1ce>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1354:	6862      	ldr	r2, [r4, #4]
    1356:	23c0      	movs	r3, #192	; 0xc0
    1358:	029b      	lsls	r3, r3, #10
    135a:	4313      	orrs	r3, r2
    135c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    135e:	8a23      	ldrh	r3, [r4, #16]
    1360:	0bdb      	lsrs	r3, r3, #15
    1362:	d1fc      	bne.n	135e <_i2c_m_sync_transfer+0x1de>
    1364:	e7b5      	b.n	12d2 <_i2c_m_sync_transfer+0x152>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1366:	2302      	movs	r3, #2
    1368:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
    136a:	2002      	movs	r0, #2
    136c:	4240      	negs	r0, r0
    136e:	e7bc      	b.n	12ea <_i2c_m_sync_transfer+0x16a>
			return I2C_ERR_BAD_ADDRESS;
    1370:	2004      	movs	r0, #4
    1372:	4240      	negs	r0, r0
    1374:	e7b9      	b.n	12ea <_i2c_m_sync_transfer+0x16a>
	return I2C_OK;
    1376:	2000      	movs	r0, #0
    1378:	e7b7      	b.n	12ea <_i2c_m_sync_transfer+0x16a>
		return I2C_ERR_BUSY;
    137a:	2006      	movs	r0, #6
    137c:	4240      	negs	r0, r0
    137e:	e73a      	b.n	11f6 <_i2c_m_sync_transfer+0x76>
    1380:	0000da44 	.word	0x0000da44
    1384:	0000059b 	.word	0x0000059b
    1388:	0000059c 	.word	0x0000059c
    138c:	0000059d 	.word	0x0000059d
    1390:	fffffeff 	.word	0xfffffeff
    1394:	0000ffff 	.word	0x0000ffff

00001398 <_spi_m_sync_init>:

	return NULL;
}

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    1398:	b570      	push	{r4, r5, r6, lr}
    139a:	0006      	movs	r6, r0
    139c:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
    139e:	0008      	movs	r0, r1
    13a0:	f7ff fcda 	bl	d58 <_sercom_get_hardware_index>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    13a4:	2300      	movs	r3, #0
    13a6:	2b01      	cmp	r3, #1
    13a8:	d80b      	bhi.n	13c2 <_spi_m_sync_init+0x2a>
		if (sercomspi_regs[i].n == n) {
    13aa:	0119      	lsls	r1, r3, #4
    13ac:	4a5f      	ldr	r2, [pc, #380]	; (152c <_spi_m_sync_init+0x194>)
    13ae:	1852      	adds	r2, r2, r1
    13b0:	7bd2      	ldrb	r2, [r2, #15]
    13b2:	4290      	cmp	r0, r2
    13b4:	d002      	beq.n	13bc <_spi_m_sync_init+0x24>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    13b6:	3301      	adds	r3, #1
    13b8:	b2db      	uxtb	r3, r3
    13ba:	e7f4      	b.n	13a6 <_spi_m_sync_init+0xe>
			return &sercomspi_regs[i];
    13bc:	4b5b      	ldr	r3, [pc, #364]	; (152c <_spi_m_sync_init+0x194>)
    13be:	185d      	adds	r5, r3, r1
    13c0:	e000      	b.n	13c4 <_spi_m_sync_init+0x2c>
	return NULL;
    13c2:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    13c4:	2e00      	cmp	r6, #0
    13c6:	d100      	bne.n	13ca <_spi_m_sync_init+0x32>
    13c8:	e06a      	b.n	14a0 <_spi_m_sync_init+0x108>
    13ca:	2c00      	cmp	r4, #0
    13cc:	d100      	bne.n	13d0 <_spi_m_sync_init+0x38>
    13ce:	e065      	b.n	149c <_spi_m_sync_init+0x104>
    13d0:	2001      	movs	r0, #1
    13d2:	4a57      	ldr	r2, [pc, #348]	; (1530 <_spi_m_sync_init+0x198>)
    13d4:	4957      	ldr	r1, [pc, #348]	; (1534 <_spi_m_sync_init+0x19c>)
    13d6:	f7ff fadd 	bl	994 <assert>

	if (regs == NULL) {
    13da:	2d00      	cmp	r5, #0
    13dc:	d100      	bne.n	13e0 <_spi_m_sync_init+0x48>
    13de:	e0a2      	b.n	1526 <_spi_m_sync_init+0x18e>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    13e0:	8a23      	ldrh	r3, [r4, #16]
    13e2:	0bdb      	lsrs	r3, r3, #15
    13e4:	d1fc      	bne.n	13e0 <_spi_m_sync_init+0x48>
    13e6:	8a23      	ldrh	r3, [r4, #16]
    13e8:	0bdb      	lsrs	r3, r3, #15
    13ea:	d1fc      	bne.n	13e6 <_spi_m_sync_init+0x4e>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    13ec:	6823      	ldr	r3, [r4, #0]
		return ERR_INVALID_ARG;
	}

	hri_sercomspi_wait_for_sync(hw);
	if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    13ee:	079b      	lsls	r3, r3, #30
    13f0:	d507      	bpl.n	1402 <_spi_m_sync_init+0x6a>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    13f2:	2300      	movs	r3, #0
    13f4:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    13f6:	8a23      	ldrh	r3, [r4, #16]
    13f8:	0bdb      	lsrs	r3, r3, #15
    13fa:	d1fc      	bne.n	13f6 <_spi_m_sync_init+0x5e>
    13fc:	8a23      	ldrh	r3, [r4, #16]
    13fe:	0bdb      	lsrs	r3, r3, #15
    1400:	d1fc      	bne.n	13fc <_spi_m_sync_init+0x64>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1402:	2301      	movs	r3, #1
    1404:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1406:	8a23      	ldrh	r3, [r4, #16]
    1408:	0bdb      	lsrs	r3, r3, #15
    140a:	d1fc      	bne.n	1406 <_spi_m_sync_init+0x6e>
    140c:	8a23      	ldrh	r3, [r4, #16]
    140e:	0bdb      	lsrs	r3, r3, #15
    1410:	d1fc      	bne.n	140c <_spi_m_sync_init+0x74>
		hri_sercomspi_wait_for_sync(hw);
	}
	hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST);
	hri_sercomspi_wait_for_sync(hw);

	dev->prvt = hw;
    1412:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
    1414:	782b      	ldrb	r3, [r5, #0]
    1416:	786a      	ldrb	r2, [r5, #1]
    1418:	0212      	lsls	r2, r2, #8
    141a:	431a      	orrs	r2, r3
    141c:	78ab      	ldrb	r3, [r5, #2]
    141e:	041b      	lsls	r3, r3, #16
    1420:	431a      	orrs	r2, r3
    1422:	78eb      	ldrb	r3, [r5, #3]
    1424:	061b      	lsls	r3, r3, #24
    1426:	4313      	orrs	r3, r2
    1428:	221c      	movs	r2, #28
    142a:	4013      	ands	r3, r2
    142c:	2b08      	cmp	r3, #8
    142e:	d039      	beq.n	14a4 <_spi_m_sync_init+0x10c>
	ASSERT(hw && regs);
    1430:	2c00      	cmp	r4, #0
    1432:	d100      	bne.n	1436 <_spi_m_sync_init+0x9e>
    1434:	e073      	b.n	151e <_spi_m_sync_init+0x186>
    1436:	2d00      	cmp	r5, #0
    1438:	d100      	bne.n	143c <_spi_m_sync_init+0xa4>
    143a:	e06e      	b.n	151a <_spi_m_sync_init+0x182>
    143c:	2001      	movs	r0, #1
    143e:	4a3e      	ldr	r2, [pc, #248]	; (1538 <_spi_m_sync_init+0x1a0>)
    1440:	493c      	ldr	r1, [pc, #240]	; (1534 <_spi_m_sync_init+0x19c>)
    1442:	f7ff faa7 	bl	994 <assert>
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    1446:	782b      	ldrb	r3, [r5, #0]
    1448:	786a      	ldrb	r2, [r5, #1]
    144a:	0212      	lsls	r2, r2, #8
    144c:	431a      	orrs	r2, r3
    144e:	78ab      	ldrb	r3, [r5, #2]
    1450:	041b      	lsls	r3, r3, #16
    1452:	431a      	orrs	r2, r3
    1454:	78eb      	ldrb	r3, [r5, #3]
    1456:	061b      	lsls	r3, r3, #24
    1458:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    145a:	4a38      	ldr	r2, [pc, #224]	; (153c <_spi_m_sync_init+0x1a4>)
    145c:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    145e:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1460:	8a23      	ldrh	r3, [r4, #16]
    1462:	0bdb      	lsrs	r3, r3, #15
    1464:	d1fc      	bne.n	1460 <_spi_m_sync_init+0xc8>
	    hw, (regs->ctrlb & ~(SERCOM_SPI_CTRLB_AMODE_Msk | SERCOM_SPI_CTRLB_PLOADEN)) | (SERCOM_SPI_CTRLB_RXEN));
    1466:	792b      	ldrb	r3, [r5, #4]
    1468:	796a      	ldrb	r2, [r5, #5]
    146a:	0212      	lsls	r2, r2, #8
    146c:	431a      	orrs	r2, r3
    146e:	79ab      	ldrb	r3, [r5, #6]
    1470:	041b      	lsls	r3, r3, #16
    1472:	431a      	orrs	r2, r3
    1474:	79eb      	ldrb	r3, [r5, #7]
    1476:	061b      	lsls	r3, r3, #24
    1478:	4313      	orrs	r3, r2
    147a:	4a31      	ldr	r2, [pc, #196]	; (1540 <_spi_m_sync_init+0x1a8>)
    147c:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
    147e:	2280      	movs	r2, #128	; 0x80
    1480:	0292      	lsls	r2, r2, #10
    1482:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    1484:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
    1486:	7b2b      	ldrb	r3, [r5, #12]
	((Sercom *)hw)->SPI.BAUD.reg = data;
    1488:	72a3      	strb	r3, [r4, #10]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    148a:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    148c:	7223      	strb	r3, [r4, #8]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    148e:	792b      	ldrb	r3, [r5, #4]
    1490:	075b      	lsls	r3, r3, #29
    1492:	d146      	bne.n	1522 <_spi_m_sync_init+0x18a>
    1494:	2301      	movs	r3, #1
    1496:	7133      	strb	r3, [r6, #4]

	return ERR_NONE;
    1498:	2000      	movs	r0, #0
}
    149a:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(dev && hw);
    149c:	2000      	movs	r0, #0
    149e:	e798      	b.n	13d2 <_spi_m_sync_init+0x3a>
    14a0:	2000      	movs	r0, #0
    14a2:	e796      	b.n	13d2 <_spi_m_sync_init+0x3a>
	ASSERT(hw && regs);
    14a4:	2c00      	cmp	r4, #0
    14a6:	d036      	beq.n	1516 <_spi_m_sync_init+0x17e>
    14a8:	2d00      	cmp	r5, #0
    14aa:	d032      	beq.n	1512 <_spi_m_sync_init+0x17a>
    14ac:	2001      	movs	r0, #1
    14ae:	4a25      	ldr	r2, [pc, #148]	; (1544 <_spi_m_sync_init+0x1ac>)
    14b0:	4920      	ldr	r1, [pc, #128]	; (1534 <_spi_m_sync_init+0x19c>)
    14b2:	f7ff fa6f 	bl	994 <assert>
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    14b6:	782b      	ldrb	r3, [r5, #0]
    14b8:	786a      	ldrb	r2, [r5, #1]
    14ba:	0212      	lsls	r2, r2, #8
    14bc:	431a      	orrs	r2, r3
    14be:	78ab      	ldrb	r3, [r5, #2]
    14c0:	041b      	lsls	r3, r3, #16
    14c2:	431a      	orrs	r2, r3
    14c4:	78eb      	ldrb	r3, [r5, #3]
    14c6:	061b      	lsls	r3, r3, #24
    14c8:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    14ca:	4a1c      	ldr	r2, [pc, #112]	; (153c <_spi_m_sync_init+0x1a4>)
    14cc:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    14ce:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    14d0:	8a23      	ldrh	r3, [r4, #16]
    14d2:	0bdb      	lsrs	r3, r3, #15
    14d4:	d1fc      	bne.n	14d0 <_spi_m_sync_init+0x138>
	hri_sercomspi_write_CTRLB_reg(hw, regs->ctrlb | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_PLOADEN));
    14d6:	792b      	ldrb	r3, [r5, #4]
    14d8:	796a      	ldrb	r2, [r5, #5]
    14da:	0212      	lsls	r2, r2, #8
    14dc:	431a      	orrs	r2, r3
    14de:	79ab      	ldrb	r3, [r5, #6]
    14e0:	041b      	lsls	r3, r3, #16
    14e2:	431a      	orrs	r2, r3
    14e4:	79eb      	ldrb	r3, [r5, #7]
    14e6:	061b      	lsls	r3, r3, #24
    14e8:	4313      	orrs	r3, r2
    14ea:	4a17      	ldr	r2, [pc, #92]	; (1548 <_spi_m_sync_init+0x1b0>)
    14ec:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    14ee:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
    14f0:	7a2b      	ldrb	r3, [r5, #8]
    14f2:	7a6a      	ldrb	r2, [r5, #9]
    14f4:	0212      	lsls	r2, r2, #8
    14f6:	431a      	orrs	r2, r3
    14f8:	7aab      	ldrb	r3, [r5, #10]
    14fa:	041b      	lsls	r3, r3, #16
    14fc:	431a      	orrs	r2, r3
    14fe:	7aeb      	ldrb	r3, [r5, #11]
    1500:	061b      	lsls	r3, r3, #24
    1502:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
    1504:	6163      	str	r3, [r4, #20]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    1506:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    1508:	7223      	strb	r3, [r4, #8]
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
    150a:	8a23      	ldrh	r3, [r4, #16]
    150c:	0bdb      	lsrs	r3, r3, #15
	while (hri_sercomspi_is_syncing(hw))
    150e:	d1fc      	bne.n	150a <_spi_m_sync_init+0x172>
    1510:	e7bd      	b.n	148e <_spi_m_sync_init+0xf6>
	ASSERT(hw && regs);
    1512:	2000      	movs	r0, #0
    1514:	e7cb      	b.n	14ae <_spi_m_sync_init+0x116>
    1516:	2000      	movs	r0, #0
    1518:	e7c9      	b.n	14ae <_spi_m_sync_init+0x116>
	ASSERT(hw && regs);
    151a:	2000      	movs	r0, #0
    151c:	e78f      	b.n	143e <_spi_m_sync_init+0xa6>
    151e:	2000      	movs	r0, #0
    1520:	e78d      	b.n	143e <_spi_m_sync_init+0xa6>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    1522:	2302      	movs	r3, #2
    1524:	e7b7      	b.n	1496 <_spi_m_sync_init+0xfe>
		return ERR_INVALID_ARG;
    1526:	200d      	movs	r0, #13
    1528:	4240      	negs	r0, r0
    152a:	e7b6      	b.n	149a <_spi_m_sync_init+0x102>
    152c:	0000da88 	.word	0x0000da88
    1530:	000008a3 	.word	0x000008a3
    1534:	0000da44 	.word	0x0000da44
    1538:	00000872 	.word	0x00000872
    153c:	fffffefc 	.word	0xfffffefc
    1540:	fffd3fbf 	.word	0xfffd3fbf
    1544:	00000883 	.word	0x00000883
    1548:	00020040 	.word	0x00020040

0000154c <_spi_m_sync_enable>:

	return _spi_deinit(hw);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    154c:	b510      	push	{r4, lr}
    154e:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    1550:	d00d      	beq.n	156e <_spi_m_sync_enable+0x22>
    1552:	6803      	ldr	r3, [r0, #0]
    1554:	2b00      	cmp	r3, #0
    1556:	d008      	beq.n	156a <_spi_m_sync_enable+0x1e>
    1558:	2001      	movs	r0, #1
    155a:	4a06      	ldr	r2, [pc, #24]	; (1574 <_spi_m_sync_enable+0x28>)
    155c:	4906      	ldr	r1, [pc, #24]	; (1578 <_spi_m_sync_enable+0x2c>)
    155e:	f7ff fa19 	bl	994 <assert>

	return _spi_sync_enable(dev->prvt);
    1562:	6820      	ldr	r0, [r4, #0]
    1564:	f7ff fc00 	bl	d68 <_spi_sync_enable>
}
    1568:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    156a:	2000      	movs	r0, #0
    156c:	e7f5      	b.n	155a <_spi_m_sync_enable+0xe>
    156e:	2000      	movs	r0, #0
    1570:	e7f3      	b.n	155a <_spi_m_sync_enable+0xe>
    1572:	46c0      	nop			; (mov r8, r8)
    1574:	0000090a 	.word	0x0000090a
    1578:	0000da44 	.word	0x0000da44

0000157c <_spi_m_sync_trans>:
	ctrl->txcnt++;
	hri_sercomspi_write_DATA_reg(hw, data);
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    157c:	b570      	push	{r4, r5, r6, lr}
    157e:	b088      	sub	sp, #32
    1580:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    1582:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    1584:	680b      	ldr	r3, [r1, #0]
    1586:	9303      	str	r3, [sp, #12]
    1588:	684b      	ldr	r3, [r1, #4]
    158a:	9304      	str	r3, [sp, #16]
    158c:	2300      	movs	r3, #0
    158e:	9305      	str	r3, [sp, #20]
    1590:	9306      	str	r3, [sp, #24]
    1592:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    1594:	2800      	cmp	r0, #0
    1596:	d014      	beq.n	15c2 <_spi_m_sync_trans+0x46>
    1598:	2c00      	cmp	r4, #0
    159a:	d010      	beq.n	15be <_spi_m_sync_trans+0x42>
    159c:	2001      	movs	r0, #1
    159e:	4a2d      	ldr	r2, [pc, #180]	; (1654 <_spi_m_sync_trans+0xd8>)
    15a0:	492d      	ldr	r1, [pc, #180]	; (1658 <_spi_m_sync_trans+0xdc>)
    15a2:	f7ff f9f7 	bl	994 <assert>
    15a6:	8a23      	ldrh	r3, [r4, #16]
    15a8:	0bdb      	lsrs	r3, r3, #15

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(hw)) {
    15aa:	d14f      	bne.n	164c <_spi_m_sync_trans+0xd0>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    15ac:	8a23      	ldrh	r3, [r4, #16]
    15ae:	0bdb      	lsrs	r3, r3, #15
    15b0:	d1fc      	bne.n	15ac <_spi_m_sync_trans+0x30>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    15b2:	6823      	ldr	r3, [r4, #0]
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    15b4:	079b      	lsls	r3, r3, #30
    15b6:	d418      	bmi.n	15ea <_spi_m_sync_trans+0x6e>
		return ERR_NOT_INITIALIZED;
    15b8:	2014      	movs	r0, #20
    15ba:	4240      	negs	r0, r0
    15bc:	e044      	b.n	1648 <_spi_m_sync_trans+0xcc>
	ASSERT(dev && hw);
    15be:	2000      	movs	r0, #0
    15c0:	e7ed      	b.n	159e <_spi_m_sync_trans+0x22>
    15c2:	2000      	movs	r0, #0
    15c4:	e7eb      	b.n	159e <_spi_m_sync_trans+0x22>
		return false;
    15c6:	2200      	movs	r2, #0
    15c8:	e026      	b.n	1618 <_spi_m_sync_trans+0x9c>
			data |= (*ctrl->txbuf) << 8;
    15ca:	7858      	ldrb	r0, [r3, #1]
    15cc:	0200      	lsls	r0, r0, #8
    15ce:	4301      	orrs	r1, r0
			ctrl->txbuf++;
    15d0:	3302      	adds	r3, #2
    15d2:	9303      	str	r3, [sp, #12]
	ctrl->txcnt++;
    15d4:	3201      	adds	r2, #1
    15d6:	9205      	str	r2, [sp, #20]
	hri_sercomspi_write_DATA_reg(hw, data);
    15d8:	b289      	uxth	r1, r1
	((Sercom *)hw)->SPI.DATA.reg = data;
    15da:	8321      	strh	r1, [r4, #24]
			if (ctrl.rxcnt >= ctrl.txcnt) {
				_spi_tx_check(hw, iflag, &ctrl);
			}
		}

		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    15dc:	9805      	ldr	r0, [sp, #20]
    15de:	68ab      	ldr	r3, [r5, #8]
    15e0:	4298      	cmp	r0, r3
    15e2:	d302      	bcc.n	15ea <_spi_m_sync_trans+0x6e>
    15e4:	9a06      	ldr	r2, [sp, #24]
    15e6:	4293      	cmp	r3, r2
    15e8:	d929      	bls.n	163e <_spi_m_sync_trans+0xc2>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    15ea:	7ba3      	ldrb	r3, [r4, #14]
    15ec:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    15ee:	075a      	lsls	r2, r3, #29
    15f0:	d5e9      	bpl.n	15c6 <_spi_m_sync_trans+0x4a>
	return ((Sercom *)hw)->SPI.DATA.reg;
    15f2:	8b22      	ldrh	r2, [r4, #24]
    15f4:	b292      	uxth	r2, r2
	if (ctrl->rxbuf) {
    15f6:	9904      	ldr	r1, [sp, #16]
    15f8:	2900      	cmp	r1, #0
    15fa:	d008      	beq.n	160e <_spi_m_sync_trans+0x92>
		*ctrl->rxbuf++ = (uint8_t)data;
    15fc:	1c48      	adds	r0, r1, #1
    15fe:	9004      	str	r0, [sp, #16]
    1600:	700a      	strb	r2, [r1, #0]
		if (ctrl->char_size > 1) {
    1602:	2e01      	cmp	r6, #1
    1604:	d903      	bls.n	160e <_spi_m_sync_trans+0x92>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    1606:	1c88      	adds	r0, r1, #2
    1608:	9004      	str	r0, [sp, #16]
    160a:	0a12      	lsrs	r2, r2, #8
    160c:	704a      	strb	r2, [r1, #1]
	ctrl->rxcnt++;
    160e:	9a06      	ldr	r2, [sp, #24]
    1610:	9201      	str	r2, [sp, #4]
    1612:	3201      	adds	r2, #1
    1614:	9206      	str	r2, [sp, #24]
	return true;
    1616:	2201      	movs	r2, #1
		if (!_spi_rx_check(hw, iflag, &ctrl)) {
    1618:	2a00      	cmp	r2, #0
    161a:	d1df      	bne.n	15dc <_spi_m_sync_trans+0x60>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    161c:	9906      	ldr	r1, [sp, #24]
    161e:	9a05      	ldr	r2, [sp, #20]
    1620:	4291      	cmp	r1, r2
    1622:	d3db      	bcc.n	15dc <_spi_m_sync_trans+0x60>
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    1624:	07db      	lsls	r3, r3, #31
    1626:	d5d9      	bpl.n	15dc <_spi_m_sync_trans+0x60>
	if (ctrl->txbuf) {
    1628:	9b03      	ldr	r3, [sp, #12]
    162a:	2b00      	cmp	r3, #0
    162c:	d005      	beq.n	163a <_spi_m_sync_trans+0xbe>
		data = *ctrl->txbuf++;
    162e:	1c59      	adds	r1, r3, #1
    1630:	9103      	str	r1, [sp, #12]
    1632:	7819      	ldrb	r1, [r3, #0]
		if (ctrl->char_size > 1) {
    1634:	2e01      	cmp	r6, #1
    1636:	d8c8      	bhi.n	15ca <_spi_m_sync_trans+0x4e>
    1638:	e7cc      	b.n	15d4 <_spi_m_sync_trans+0x58>
		data = SPI_DUMMY_CHAR;
    163a:	4908      	ldr	r1, [pc, #32]	; (165c <_spi_m_sync_trans+0xe0>)
    163c:	e7ca      	b.n	15d4 <_spi_m_sync_trans+0x58>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    163e:	7ba3      	ldrb	r3, [r4, #14]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    1640:	079b      	lsls	r3, r3, #30
    1642:	d0fc      	beq.n	163e <_spi_m_sync_trans+0xc2>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    1644:	2303      	movs	r3, #3
    1646:	73a3      	strb	r3, [r4, #14]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    1648:	b008      	add	sp, #32
    164a:	bd70      	pop	{r4, r5, r6, pc}
		return ERR_BUSY;
    164c:	2004      	movs	r0, #4
    164e:	4240      	negs	r0, r0
    1650:	e7fa      	b.n	1648 <_spi_m_sync_trans+0xcc>
    1652:	46c0      	nop			; (mov r8, r8)
    1654:	00000a01 	.word	0x00000a01
    1658:	0000da44 	.word	0x0000da44
    165c:	000001ff 	.word	0x000001ff

00001660 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    1660:	4b0f      	ldr	r3, [pc, #60]	; (16a0 <_sysctrl_init_sources+0x40>)
    1662:	6a19      	ldr	r1, [r3, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    1664:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    1666:	6a1a      	ldr	r2, [r3, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    1668:	0f92      	lsrs	r2, r2, #30
    166a:	0792      	lsls	r2, r2, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    166c:	0409      	lsls	r1, r1, #16
    166e:	480d      	ldr	r0, [pc, #52]	; (16a4 <_sysctrl_init_sources+0x44>)
    1670:	4001      	ands	r1, r0
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    1672:	430a      	orrs	r2, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    1674:	490c      	ldr	r1, [pc, #48]	; (16a8 <_sysctrl_init_sources+0x48>)
    1676:	430a      	orrs	r2, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    1678:	621a      	str	r2, [r3, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    167a:	699a      	ldr	r2, [r3, #24]
    167c:	2102      	movs	r1, #2
    167e:	430a      	orrs	r2, r1
    1680:	619a      	str	r2, [r3, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    1682:	7f1a      	ldrb	r2, [r3, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    1684:	311d      	adds	r1, #29
    1686:	400a      	ands	r2, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    1688:	771a      	strb	r2, [r3, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    168a:	4b05      	ldr	r3, [pc, #20]	; (16a0 <_sysctrl_init_sources+0x40>)
    168c:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    168e:	071b      	lsls	r3, r3, #28
    1690:	d5fb      	bpl.n	168a <_sysctrl_init_sources+0x2a>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    1692:	4a03      	ldr	r2, [pc, #12]	; (16a0 <_sysctrl_init_sources+0x40>)
    1694:	6a13      	ldr	r3, [r2, #32]
    1696:	2180      	movs	r1, #128	; 0x80
    1698:	430b      	orrs	r3, r1
    169a:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    169c:	4770      	bx	lr
    169e:	46c0      	nop			; (mov r8, r8)
    16a0:	40000800 	.word	0x40000800
    16a4:	0fff0000 	.word	0x0fff0000
    16a8:	00000302 	.word	0x00000302

000016ac <_sysctrl_init_referenced_generators>:
}

static inline void hri_sysctrl_write_DFLLCTRL_reg(const void *const hw, hri_sysctrl_dfllctrl_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    16ac:	2202      	movs	r2, #2
    16ae:	4b1b      	ldr	r3, [pc, #108]	; (171c <_sysctrl_init_referenced_generators+0x70>)
    16b0:	849a      	strh	r2, [r3, #36]	; 0x24
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    16b2:	4b1a      	ldr	r3, [pc, #104]	; (171c <_sysctrl_init_referenced_generators+0x70>)
    16b4:	68db      	ldr	r3, [r3, #12]
	hri_gclk_write_CLKCTRL_reg(GCLK,
	                           GCLK_CLKCTRL_ID(0) | GCLK_CLKCTRL_GEN(CONF_DFLL_GCLK) | (1 << GCLK_CLKCTRL_CLKEN_Pos));
#endif

	hri_sysctrl_write_DFLLCTRL_reg(hw, SYSCTRL_DFLLCTRL_ENABLE);
	while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    16b6:	06db      	lsls	r3, r3, #27
    16b8:	d5fb      	bpl.n	16b2 <_sysctrl_init_referenced_generators+0x6>
}

static inline void hri_sysctrl_write_DFLLMUL_reg(const void *const hw, hri_sysctrl_dfllmul_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLMUL.reg = data;
    16ba:	4a19      	ldr	r2, [pc, #100]	; (1720 <_sysctrl_init_referenced_generators+0x74>)
    16bc:	4b17      	ldr	r3, [pc, #92]	; (171c <_sysctrl_init_referenced_generators+0x70>)
    16be:	62da      	str	r2, [r3, #44]	; 0x2c
		;

	hri_sysctrl_write_DFLLMUL_reg(hw,
	                              SYSCTRL_DFLLMUL_CSTEP(CONF_DFLL_CSTEP) | SYSCTRL_DFLLMUL_FSTEP(CONF_DFLL_FSTEP)
	                                  | SYSCTRL_DFLLMUL_MUL(CONF_DFLL_MUL));
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    16c0:	4b18      	ldr	r3, [pc, #96]	; (1724 <_sysctrl_init_referenced_generators+0x78>)
    16c2:	681b      	ldr	r3, [r3, #0]
    16c4:	0e9b      	lsrs	r3, r3, #26
    16c6:	2b3f      	cmp	r3, #63	; 0x3f
    16c8:	d020      	beq.n	170c <_sysctrl_init_referenced_generators+0x60>
    16ca:	029b      	lsls	r3, r3, #10
    16cc:	2280      	movs	r2, #128	; 0x80
    16ce:	0092      	lsls	r2, r2, #2
    16d0:	4313      	orrs	r3, r2
	((Sysctrl *)hw)->DFLLVAL.reg = data;
    16d2:	4a12      	ldr	r2, [pc, #72]	; (171c <_sysctrl_init_referenced_generators+0x70>)
    16d4:	6293      	str	r3, [r2, #40]	; 0x28
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    16d6:	2302      	movs	r3, #2
    16d8:	8493      	strh	r3, [r2, #36]	; 0x24
	tmp = ((Sysctrl *)hw)->DFLLCTRL.reg;
    16da:	8c93      	ldrh	r3, [r2, #36]	; 0x24
	hri_sysctrl_write_DFLLCTRL_reg(hw, tmp);
#endif

#if CONF_DFLL_CONFIG == 1
#if CONF_DFLL_ENABLE == 1
	if (hri_sysctrl_get_DFLLCTRL_MODE_bit(hw)) {
    16dc:	075b      	lsls	r3, r3, #29
    16de:	d518      	bpl.n	1712 <_sysctrl_init_referenced_generators+0x66>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    16e0:	4b0e      	ldr	r3, [pc, #56]	; (171c <_sysctrl_init_referenced_generators+0x70>)
    16e2:	68da      	ldr	r2, [r3, #12]
	tmp &= mask;
    16e4:	23d0      	movs	r3, #208	; 0xd0
    16e6:	4013      	ands	r3, r2
		hri_sysctrl_pclksr_reg_t status_mask
		    = SYSCTRL_PCLKSR_DFLLRDY | SYSCTRL_PCLKSR_DFLLLCKF | SYSCTRL_PCLKSR_DFLLLCKC;

		while (hri_sysctrl_get_PCLKSR_reg(hw, status_mask) != status_mask)
    16e8:	2bd0      	cmp	r3, #208	; 0xd0
    16ea:	d1f9      	bne.n	16e0 <_sysctrl_init_referenced_generators+0x34>
	((Sysctrl *)hw)->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ONDEMAND;
    16ec:	4a0b      	ldr	r2, [pc, #44]	; (171c <_sysctrl_init_referenced_generators+0x70>)
    16ee:	8c93      	ldrh	r3, [r2, #36]	; 0x24
    16f0:	2180      	movs	r1, #128	; 0x80
    16f2:	430b      	orrs	r3, r1
    16f4:	b29b      	uxth	r3, r3
    16f6:	8493      	strh	r3, [r2, #36]	; 0x24
	return (((Gclk *)hw)->STATUS.reg & GCLK_STATUS_SYNCBUSY) >> GCLK_STATUS_SYNCBUSY_Pos;
    16f8:	4b0b      	ldr	r3, [pc, #44]	; (1728 <_sysctrl_init_referenced_generators+0x7c>)
    16fa:	785b      	ldrb	r3, [r3, #1]
	hri_sysctrl_set_DFLLCTRL_ONDEMAND_bit(hw);
#endif
#endif

#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_get_STATUS_SYNCBUSY_bit(GCLK))
    16fc:	09db      	lsrs	r3, r3, #7
    16fe:	d1fb      	bne.n	16f8 <_sysctrl_init_referenced_generators+0x4c>
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    1700:	4a06      	ldr	r2, [pc, #24]	; (171c <_sysctrl_init_referenced_generators+0x70>)
    1702:	6993      	ldr	r3, [r2, #24]
    1704:	2102      	movs	r1, #2
    1706:	438b      	bics	r3, r1
    1708:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    170a:	4770      	bx	lr
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    170c:	23fc      	movs	r3, #252	; 0xfc
    170e:	01db      	lsls	r3, r3, #7
    1710:	e7df      	b.n	16d2 <_sysctrl_init_referenced_generators+0x26>
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    1712:	4b02      	ldr	r3, [pc, #8]	; (171c <_sysctrl_init_referenced_generators+0x70>)
    1714:	68db      	ldr	r3, [r3, #12]
		while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    1716:	06db      	lsls	r3, r3, #27
    1718:	d5fb      	bpl.n	1712 <_sysctrl_init_referenced_generators+0x66>
    171a:	e7e7      	b.n	16ec <_sysctrl_init_referenced_generators+0x40>
    171c:	40000800 	.word	0x40000800
    1720:	04010000 	.word	0x04010000
    1724:	00806024 	.word	0x00806024
    1728:	40000c00 	.word	0x40000c00

0000172c <tc_pwm_interrupt_handler>:
 * \internal TC interrupt handler for PWM
 *
 * \param[in] instance TC instance number
 */
static void tc_pwm_interrupt_handler(struct _pwm_device *device)
{
    172c:	b570      	push	{r4, r5, r6, lr}
    172e:	0005      	movs	r5, r0
	void *const hw = device->hw;
    1730:	6904      	ldr	r4, [r0, #16]
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_MC1;
}

static inline bool hri_tc_get_interrupt_OVF_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTFLAG.reg & TC_INTFLAG_OVF) >> TC_INTFLAG_OVF_Pos;
    1732:	7ba3      	ldrb	r3, [r4, #14]

	if (hri_tc_get_interrupt_OVF_bit(hw)) {
    1734:	07db      	lsls	r3, r3, #31
    1736:	d505      	bpl.n	1744 <tc_pwm_interrupt_handler+0x18>
}

static inline void hri_tc_clear_interrupt_OVF_bit(const void *const hw)
{
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_OVF;
    1738:	2301      	movs	r3, #1
    173a:	73a3      	strb	r3, [r4, #14]
		hri_tc_clear_interrupt_OVF_bit(hw);
		if (NULL != device->callback.pwm_period_cb) {
    173c:	6803      	ldr	r3, [r0, #0]
    173e:	2b00      	cmp	r3, #0
    1740:	d000      	beq.n	1744 <tc_pwm_interrupt_handler+0x18>
			device->callback.pwm_period_cb(device);
    1742:	4798      	blx	r3
	((Tc *)hw)->COUNT16.INTENSET.reg = TC_INTENSET_ERR;
}

static inline bool hri_tc_get_INTEN_ERR_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTENSET.reg & TC_INTENSET_ERR) >> TC_INTENSET_ERR_Pos;
    1744:	7b63      	ldrb	r3, [r4, #13]
		}
	}
	if (hri_tc_get_INTEN_ERR_bit(hw)) {
    1746:	079b      	lsls	r3, r3, #30
    1748:	d506      	bpl.n	1758 <tc_pwm_interrupt_handler+0x2c>
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_ERR;
    174a:	2302      	movs	r3, #2
    174c:	73a3      	strb	r3, [r4, #14]
		hri_tc_clear_interrupt_ERR_bit(hw);
		if (NULL != device->callback.pwm_error_cb) {
    174e:	686b      	ldr	r3, [r5, #4]
    1750:	2b00      	cmp	r3, #0
    1752:	d001      	beq.n	1758 <tc_pwm_interrupt_handler+0x2c>
			device->callback.pwm_error_cb(device);
    1754:	0028      	movs	r0, r5
    1756:	4798      	blx	r3
		}
	}
}
    1758:	bd70      	pop	{r4, r5, r6, pc}
	...

0000175c <tc_get_hardware_index>:
 * \param[in] hw The pointer to hardware instance
 */
static uint8_t tc_get_hardware_index(const void *const hw)
{
#ifndef _UNIT_TEST_
	return ((uint32_t)hw - TC_HW_BASE_ADDR) >> 10;
    175c:	4b02      	ldr	r3, [pc, #8]	; (1768 <tc_get_hardware_index+0xc>)
    175e:	469c      	mov	ip, r3
    1760:	4460      	add	r0, ip
    1762:	0a80      	lsrs	r0, r0, #10
    1764:	b2c0      	uxtb	r0, r0
#else
	return ((uint32_t)hw - TC_HW_BASE_ADDR) / sizeof(Tc);
#endif
}
    1766:	4770      	bx	lr
    1768:	bdffe000 	.word	0xbdffe000

0000176c <_tc_init_irq_param>:
/**
 * \brief Init irq param with the given tc hardware instance
 */
static void _tc_init_irq_param(const void *const hw, void *dev)
{
	if (hw == TC6) {
    176c:	4b06      	ldr	r3, [pc, #24]	; (1788 <_tc_init_irq_param+0x1c>)
    176e:	4298      	cmp	r0, r3
    1770:	d003      	beq.n	177a <_tc_init_irq_param+0xe>
		_tc6_dev = (struct _pwm_device *)dev;
	}
	if (hw == TC7) {
    1772:	4b06      	ldr	r3, [pc, #24]	; (178c <_tc_init_irq_param+0x20>)
    1774:	4298      	cmp	r0, r3
    1776:	d003      	beq.n	1780 <_tc_init_irq_param+0x14>
		_tc7_dev = (struct _pwm_device *)dev;
	}
}
    1778:	4770      	bx	lr
		_tc6_dev = (struct _pwm_device *)dev;
    177a:	4b05      	ldr	r3, [pc, #20]	; (1790 <_tc_init_irq_param+0x24>)
    177c:	6019      	str	r1, [r3, #0]
    177e:	e7f8      	b.n	1772 <_tc_init_irq_param+0x6>
		_tc7_dev = (struct _pwm_device *)dev;
    1780:	4b04      	ldr	r3, [pc, #16]	; (1794 <_tc_init_irq_param+0x28>)
    1782:	6019      	str	r1, [r3, #0]
}
    1784:	e7f8      	b.n	1778 <_tc_init_irq_param+0xc>
    1786:	46c0      	nop			; (mov r8, r8)
    1788:	42003800 	.word	0x42003800
    178c:	42003c00 	.word	0x42003c00
    1790:	20000a7c 	.word	0x20000a7c
    1794:	20000a80 	.word	0x20000a80

00001798 <get_tc_index>:
{
    1798:	b510      	push	{r4, lr}
	uint8_t tc_offset = tc_get_hardware_index(hw) + TC_NUMBER_OFFSET;
    179a:	f7ff ffdf 	bl	175c <tc_get_hardware_index>
	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
    179e:	2300      	movs	r3, #0
    17a0:	2b01      	cmp	r3, #1
    17a2:	d80b      	bhi.n	17bc <get_tc_index+0x24>
		if (_tcs[i].number == tc_offset) {
    17a4:	009a      	lsls	r2, r3, #2
    17a6:	18d2      	adds	r2, r2, r3
    17a8:	0091      	lsls	r1, r2, #2
    17aa:	4a09      	ldr	r2, [pc, #36]	; (17d0 <get_tc_index+0x38>)
    17ac:	5c8a      	ldrb	r2, [r1, r2]
    17ae:	4290      	cmp	r0, r2
    17b0:	d002      	beq.n	17b8 <get_tc_index+0x20>
	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
    17b2:	3301      	adds	r3, #1
    17b4:	b2db      	uxtb	r3, r3
    17b6:	e7f3      	b.n	17a0 <get_tc_index+0x8>
			return i;
    17b8:	b258      	sxtb	r0, r3
    17ba:	e007      	b.n	17cc <get_tc_index+0x34>
	ASSERT(false);
    17bc:	2276      	movs	r2, #118	; 0x76
    17be:	32ff      	adds	r2, #255	; 0xff
    17c0:	4904      	ldr	r1, [pc, #16]	; (17d4 <get_tc_index+0x3c>)
    17c2:	2000      	movs	r0, #0
    17c4:	f7ff f8e6 	bl	994 <assert>
	return -1;
    17c8:	2001      	movs	r0, #1
    17ca:	4240      	negs	r0, r0
}
    17cc:	bd10      	pop	{r4, pc}
    17ce:	46c0      	nop			; (mov r8, r8)
    17d0:	20000000 	.word	0x20000000
    17d4:	0000daa8 	.word	0x0000daa8

000017d8 <_pwm_init>:
{
    17d8:	b570      	push	{r4, r5, r6, lr}
    17da:	0005      	movs	r5, r0
    17dc:	000c      	movs	r4, r1
	int8_t i   = get_tc_index(hw);
    17de:	0008      	movs	r0, r1
    17e0:	f7ff ffda 	bl	1798 <get_tc_index>
	device->hw = hw;
    17e4:	612c      	str	r4, [r5, #16]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    17e6:	7be3      	ldrb	r3, [r4, #15]
    17e8:	09db      	lsrs	r3, r3, #7
    17ea:	d1fc      	bne.n	17e6 <_pwm_init+0xe>
}

static inline hri_tc_ctrla_reg_t hri_tc_get_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t mask)
{
	uint16_t tmp;
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    17ec:	8823      	ldrh	r3, [r4, #0]
	if (hri_tc_get_CTRLA_reg(hw, TC_CTRLA_ENABLE)) {
    17ee:	079b      	lsls	r3, r3, #30
    17f0:	d504      	bpl.n	17fc <_pwm_init+0x24>
}

static inline void hri_tc_write_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    17f2:	2300      	movs	r3, #0
    17f4:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    17f6:	7be3      	ldrb	r3, [r4, #15]
    17f8:	09db      	lsrs	r3, r3, #7
    17fa:	d1fc      	bne.n	17f6 <_pwm_init+0x1e>
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    17fc:	2301      	movs	r3, #1
    17fe:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    1800:	7be3      	ldrb	r3, [r4, #15]
    1802:	09db      	lsrs	r3, r3, #7
    1804:	d1fc      	bne.n	1800 <_pwm_init+0x28>
	hri_tc_write_CTRLA_reg(hw, _tcs[i].ctrl_a);
    1806:	0082      	lsls	r2, r0, #2
    1808:	1812      	adds	r2, r2, r0
    180a:	0091      	lsls	r1, r2, #2
    180c:	4b2a      	ldr	r3, [pc, #168]	; (18b8 <_pwm_init+0xe0>)
    180e:	185b      	adds	r3, r3, r1
    1810:	885a      	ldrh	r2, [r3, #2]
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1812:	8022      	strh	r2, [r4, #0]
	hri_tc_write_DBGCTRL_reg(hw, _tcs[i].dbg_ctrl);
    1814:	7919      	ldrb	r1, [r3, #4]
}

static inline void hri_tc_write_DBGCTRL_reg(const void *const hw, hri_tc_dbgctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.DBGCTRL.reg = data;
    1816:	7221      	strb	r1, [r4, #8]
	hri_tc_write_EVCTRL_reg(hw, _tcs[i].event_ctrl);
    1818:	88db      	ldrh	r3, [r3, #6]
}

static inline void hri_tc_write_EVCTRL_reg(const void *const hw, hri_tc_evctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.EVCTRL.reg = data;
    181a:	8163      	strh	r3, [r4, #10]
    181c:	230c      	movs	r3, #12
    181e:	4013      	ands	r3, r2
	if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT32) {
    1820:	2b08      	cmp	r3, #8
    1822:	d037      	beq.n	1894 <_pwm_init+0xbc>
	} else if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT16) {
    1824:	2b00      	cmp	r3, #0
    1826:	d141      	bne.n	18ac <_pwm_init+0xd4>
		hri_tccount16_write_CC_reg(hw, 0, (hri_tccount16_cc_reg_t)_tcs[i].cc0);
    1828:	4a23      	ldr	r2, [pc, #140]	; (18b8 <_pwm_init+0xe0>)
    182a:	0083      	lsls	r3, r0, #2
    182c:	181e      	adds	r6, r3, r0
    182e:	00b1      	lsls	r1, r6, #2
    1830:	000e      	movs	r6, r1
    1832:	1851      	adds	r1, r2, r1
    1834:	8989      	ldrh	r1, [r1, #12]
}

static inline void hri_tccount16_write_CC_reg(const void *const hw, uint8_t index, hri_tccount16_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CC[index].reg = data;
    1836:	8321      	strh	r1, [r4, #24]
		hri_tccount16_write_CC_reg(hw, 1, (hri_tccount16_cc_reg_t)_tcs[i].cc1);
    1838:	1992      	adds	r2, r2, r6
    183a:	8a13      	ldrh	r3, [r2, #16]
    183c:	8363      	strh	r3, [r4, #26]
	_tc_init_irq_param(hw, (void *)device);
    183e:	0029      	movs	r1, r5
    1840:	0020      	movs	r0, r4
    1842:	f7ff ff93 	bl	176c <_tc_init_irq_param>
	NVIC_DisableIRQ((IRQn_Type)((uint8_t)TC_IRQ_BASE_INDEX + tc_get_hardware_index(hw)));
    1846:	0020      	movs	r0, r4
    1848:	f7ff ff88 	bl	175c <tc_get_hardware_index>
    184c:	300d      	adds	r0, #13
    184e:	b2c0      	uxtb	r0, r0
    1850:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    1852:	2b00      	cmp	r3, #0
    1854:	db0a      	blt.n	186c <_pwm_init+0x94>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1856:	211f      	movs	r1, #31
    1858:	4001      	ands	r1, r0
    185a:	2201      	movs	r2, #1
    185c:	408a      	lsls	r2, r1
    185e:	2180      	movs	r1, #128	; 0x80
    1860:	4c16      	ldr	r4, [pc, #88]	; (18bc <_pwm_init+0xe4>)
    1862:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    1864:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    1868:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    186c:	2b00      	cmp	r3, #0
    186e:	db07      	blt.n	1880 <_pwm_init+0xa8>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1870:	211f      	movs	r1, #31
    1872:	4001      	ands	r1, r0
    1874:	2201      	movs	r2, #1
    1876:	408a      	lsls	r2, r1
    1878:	21c0      	movs	r1, #192	; 0xc0
    187a:	0049      	lsls	r1, r1, #1
    187c:	4c0f      	ldr	r4, [pc, #60]	; (18bc <_pwm_init+0xe4>)
    187e:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    1880:	2b00      	cmp	r3, #0
    1882:	db16      	blt.n	18b2 <_pwm_init+0xda>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1884:	231f      	movs	r3, #31
    1886:	4018      	ands	r0, r3
    1888:	3b1e      	subs	r3, #30
    188a:	4083      	lsls	r3, r0
    188c:	4a0b      	ldr	r2, [pc, #44]	; (18bc <_pwm_init+0xe4>)
    188e:	6013      	str	r3, [r2, #0]
	return ERR_NONE;
    1890:	2000      	movs	r0, #0
}
    1892:	bd70      	pop	{r4, r5, r6, pc}
		hri_tccount32_write_CC_reg(hw, 0, _tcs[i].cc0);
    1894:	4a08      	ldr	r2, [pc, #32]	; (18b8 <_pwm_init+0xe0>)
    1896:	0083      	lsls	r3, r0, #2
    1898:	181e      	adds	r6, r3, r0
    189a:	00b1      	lsls	r1, r6, #2
    189c:	000e      	movs	r6, r1
    189e:	1851      	adds	r1, r2, r1
    18a0:	68c9      	ldr	r1, [r1, #12]
}

static inline void hri_tccount32_write_CC_reg(const void *const hw, uint8_t index, hri_tccount32_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT32.CC[index].reg = data;
    18a2:	61a1      	str	r1, [r4, #24]
		hri_tccount32_write_CC_reg(hw, 1, _tcs[i].cc1);
    18a4:	1992      	adds	r2, r2, r6
    18a6:	6913      	ldr	r3, [r2, #16]
    18a8:	61e3      	str	r3, [r4, #28]
    18aa:	e7c8      	b.n	183e <_pwm_init+0x66>
		return ERR_INVALID_DATA;
    18ac:	2001      	movs	r0, #1
    18ae:	4240      	negs	r0, r0
    18b0:	e7ef      	b.n	1892 <_pwm_init+0xba>
	return ERR_NONE;
    18b2:	2000      	movs	r0, #0
    18b4:	e7ed      	b.n	1892 <_pwm_init+0xba>
    18b6:	46c0      	nop			; (mov r8, r8)
    18b8:	20000000 	.word	0x20000000
    18bc:	e000e100 	.word	0xe000e100

000018c0 <_pwm_enable>:
	hri_tc_set_CTRLA_ENABLE_bit(device->hw);
    18c0:	6902      	ldr	r2, [r0, #16]
	((Tc *)hw)->COUNT16.CTRLA.reg |= TC_CTRLA_ENABLE;
    18c2:	8813      	ldrh	r3, [r2, #0]
    18c4:	2102      	movs	r1, #2
    18c6:	430b      	orrs	r3, r1
    18c8:	b29b      	uxth	r3, r3
    18ca:	8013      	strh	r3, [r2, #0]
}
    18cc:	4770      	bx	lr
	...

000018d0 <_pwm_set_param>:
{
    18d0:	b570      	push	{r4, r5, r6, lr}
    18d2:	0004      	movs	r4, r0
    18d4:	000e      	movs	r6, r1
    18d6:	0015      	movs	r5, r2
	int8_t      i  = get_tc_index(device->hw);
    18d8:	6900      	ldr	r0, [r0, #16]
    18da:	f7ff ff5d 	bl	1798 <get_tc_index>
	void *const hw = device->hw;
    18de:	6924      	ldr	r4, [r4, #16]
	_tcs[i].cc0    = period;
    18e0:	0082      	lsls	r2, r0, #2
    18e2:	1812      	adds	r2, r2, r0
    18e4:	0091      	lsls	r1, r2, #2
    18e6:	4b0e      	ldr	r3, [pc, #56]	; (1920 <_pwm_set_param+0x50>)
    18e8:	185b      	adds	r3, r3, r1
    18ea:	60de      	str	r6, [r3, #12]
	_tcs[i].cc1    = duty_cycle;
    18ec:	611d      	str	r5, [r3, #16]
	if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT32) {
    18ee:	885a      	ldrh	r2, [r3, #2]
    18f0:	230c      	movs	r3, #12
    18f2:	4013      	ands	r3, r2
    18f4:	2b08      	cmp	r3, #8
    18f6:	d00b      	beq.n	1910 <_pwm_set_param+0x40>
		hri_tccount16_write_CC_reg(hw, 0, _tcs[i].cc0);
    18f8:	4a09      	ldr	r2, [pc, #36]	; (1920 <_pwm_set_param+0x50>)
    18fa:	0083      	lsls	r3, r0, #2
    18fc:	181d      	adds	r5, r3, r0
    18fe:	00a9      	lsls	r1, r5, #2
    1900:	000d      	movs	r5, r1
    1902:	1851      	adds	r1, r2, r1
    1904:	8989      	ldrh	r1, [r1, #12]
	((Tc *)hw)->COUNT16.CC[index].reg = data;
    1906:	8321      	strh	r1, [r4, #24]
		hri_tccount16_write_CC_reg(hw, 1, _tcs[i].cc1);
    1908:	1952      	adds	r2, r2, r5
    190a:	8a13      	ldrh	r3, [r2, #16]
    190c:	8363      	strh	r3, [r4, #26]
}
    190e:	bd70      	pop	{r4, r5, r6, pc}
		hri_tccount32_write_CC_reg(hw, 0, _tcs[i].cc0);
    1910:	4a03      	ldr	r2, [pc, #12]	; (1920 <_pwm_set_param+0x50>)
    1912:	000d      	movs	r5, r1
	((Tc *)hw)->COUNT32.CC[index].reg = data;
    1914:	61a6      	str	r6, [r4, #24]
		hri_tccount32_write_CC_reg(hw, 1, _tcs[i].cc1);
    1916:	1952      	adds	r2, r2, r5
    1918:	6913      	ldr	r3, [r2, #16]
    191a:	61e3      	str	r3, [r4, #28]
    191c:	e7f7      	b.n	190e <_pwm_set_param+0x3e>
    191e:	46c0      	nop			; (mov r8, r8)
    1920:	20000000 	.word	0x20000000

00001924 <_pwm_is_enabled>:
	return hri_tc_get_CTRLA_ENABLE_bit(device->hw);
    1924:	6903      	ldr	r3, [r0, #16]
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    1926:	881b      	ldrh	r3, [r3, #0]
	tmp = (tmp & TC_CTRLA_ENABLE) >> TC_CTRLA_ENABLE_Pos;
    1928:	085b      	lsrs	r3, r3, #1
	return (bool)tmp;
    192a:	2001      	movs	r0, #1
    192c:	4018      	ands	r0, r3
}
    192e:	4770      	bx	lr

00001930 <_tc_get_pwm>:
}
    1930:	2000      	movs	r0, #0
    1932:	4770      	bx	lr

00001934 <TC6_Handler>:
{
    1934:	b510      	push	{r4, lr}
	tc_pwm_interrupt_handler(_tc6_dev);
    1936:	4b02      	ldr	r3, [pc, #8]	; (1940 <TC6_Handler+0xc>)
    1938:	6818      	ldr	r0, [r3, #0]
    193a:	f7ff fef7 	bl	172c <tc_pwm_interrupt_handler>
}
    193e:	bd10      	pop	{r4, pc}
    1940:	20000a7c 	.word	0x20000a7c

00001944 <TC7_Handler>:
{
    1944:	b510      	push	{r4, lr}
	tc_pwm_interrupt_handler(_tc7_dev);
    1946:	4b02      	ldr	r3, [pc, #8]	; (1950 <TC7_Handler+0xc>)
    1948:	6818      	ldr	r0, [r3, #0]
    194a:	f7ff feef 	bl	172c <tc_pwm_interrupt_handler>
}
    194e:	bd10      	pop	{r4, pc}
    1950:	20000a80 	.word	0x20000a80

00001954 <ADS1x1x_write_register>:
/*!
    @brief  Writes 16 bits to the specified destination register.
*/
/**************************************************************************/
void ADS1x1x_write_register(uint8_t i2c_address, uint8_t reg, uint16_t value)
{
    1954:	b500      	push	{lr}
    1956:	b083      	sub	sp, #12
	
	uint8_t tmpData[] = {reg, (uint8_t)(value>>8), (uint8_t)(value&0xff)};
    1958:	ab01      	add	r3, sp, #4
    195a:	7019      	strb	r1, [r3, #0]
    195c:	0a11      	lsrs	r1, r2, #8
    195e:	7059      	strb	r1, [r3, #1]
    1960:	709a      	strb	r2, [r3, #2]
	I2C_write_batch(i2c_address, &tmpData, sizeof(tmpData));
    1962:	2203      	movs	r2, #3
    1964:	0019      	movs	r1, r3
    1966:	f000 fc03 	bl	2170 <I2C_write_batch>
	//ADS1x1x_i2c_start_write(i2c_address);
	//ADS1x1x_i2c_write(reg);
	//ADS1x1x_i2c_write((uint8_t)(value>>8));
	//ADS1x1x_i2c_write((uint8_t)(value&0xff));
	//ADS1x1x_i2c_stop();
}
    196a:	b003      	add	sp, #12
    196c:	bd00      	pop	{pc}

0000196e <ADS1x1x_read_register>:
/*!
    @brief  Read 16 bits from the specified destination register.
*/
/**************************************************************************/
uint16_t ADS1x1x_read_register(uint8_t i2c_address, uint8_t reg)
{
    196e:	b510      	push	{r4, lr}
    1970:	b082      	sub	sp, #8
  uint16_t result = 0;
  uint8_t tmpData[2];
  I2C_read_batch(i2c_address, reg, &tmpData, sizeof(tmpData));
    1972:	ac01      	add	r4, sp, #4
    1974:	2302      	movs	r3, #2
    1976:	0022      	movs	r2, r4
    1978:	f000 fc18 	bl	21ac <I2C_read_batch>
  result = tmpData[0] << 8;
    197c:	7820      	ldrb	r0, [r4, #0]
    197e:	0200      	lsls	r0, r0, #8
  result |= tmpData[1];
    1980:	7863      	ldrb	r3, [r4, #1]
    1982:	4318      	orrs	r0, r3
  return result;
}
    1984:	b002      	add	sp, #8
    1986:	bd10      	pop	{r4, pc}

00001988 <ADS1x1x_start_conversion>:
            The user must provide a valid pointer to a
            correctly filled ADS1x1x_config_t structure.
*/
/**************************************************************************/
void ADS1x1x_start_conversion(ADS1x1x_config_t *p_config)
{
    1988:	b510      	push	{r4, lr}
  // Write configuration to the ADC.
  ADS1x1x_write_register(p_config->i2c_address,ADS1x1x_REG_POINTER_CONFIG,p_config->config);
    198a:	8842      	ldrh	r2, [r0, #2]
    198c:	7840      	ldrb	r0, [r0, #1]
    198e:	2101      	movs	r1, #1
    1990:	f7ff ffe0 	bl	1954 <ADS1x1x_write_register>
}
    1994:	bd10      	pop	{r4, pc}

00001996 <ADS1x1x_read>:
            The user must provide a valid pointer to a
            correctly filled ADS1x1x_config_t structure.
*/
/**************************************************************************/
int16_t ADS1x1x_read(ADS1x1x_config_t *p_config)
{
    1996:	b510      	push	{r4, lr}
    1998:	0004      	movs	r4, r0
  // Read the conversion result.
  int16_t result = (int16_t)ADS1x1x_read_register(p_config->i2c_address,ADS1x1x_REG_POINTER_CONVERSION);
    199a:	7840      	ldrb	r0, [r0, #1]
    199c:	2100      	movs	r1, #0
    199e:	f7ff ffe6 	bl	196e <ADS1x1x_read_register>
    19a2:	b200      	sxth	r0, r0
  // Adjust for ADC resolution if needed.
  if (p_config->chip==ADS1013 || p_config->chip==ADS1014 || p_config->chip==ADS1015)
    19a4:	7823      	ldrb	r3, [r4, #0]
    19a6:	2b02      	cmp	r3, #2
    19a8:	d800      	bhi.n	19ac <ADS1x1x_read+0x16>
  {
    result >>= 4;
    19aa:	1100      	asrs	r0, r0, #4
  }
  return result;
}
    19ac:	bd10      	pop	{r4, pc}

000019ae <ADS1x1x_set_threshold_lo>:


void ADS1x1x_set_threshold_lo(ADS1x1x_config_t *p_config, uint16_t value)
{
    19ae:	b510      	push	{r4, lr}
    19b0:	000a      	movs	r2, r1
  if (p_config->chip==ADS1013 || p_config->chip==ADS1014 || p_config->chip==ADS1015)
    19b2:	7803      	ldrb	r3, [r0, #0]
    19b4:	2b02      	cmp	r3, #2
    19b6:	d801      	bhi.n	19bc <ADS1x1x_set_threshold_lo+0xe>
  {
    value <<= 4;
    19b8:	010a      	lsls	r2, r1, #4
    19ba:	b292      	uxth	r2, r2
  }
  ADS1x1x_write_register(p_config->i2c_address,ADS1x1x_REG_POINTER_LO_THRESH,value);
    19bc:	7840      	ldrb	r0, [r0, #1]
    19be:	2102      	movs	r1, #2
    19c0:	f7ff ffc8 	bl	1954 <ADS1x1x_write_register>
}
    19c4:	bd10      	pop	{r4, pc}

000019c6 <ADS1x1x_set_threshold_hi>:


void ADS1x1x_set_threshold_hi(ADS1x1x_config_t *p_config, uint16_t value)
{
    19c6:	b510      	push	{r4, lr}
    19c8:	000a      	movs	r2, r1
  if (p_config->chip==ADS1013 || p_config->chip==ADS1014 || p_config->chip==ADS1015)
    19ca:	7803      	ldrb	r3, [r0, #0]
    19cc:	2b02      	cmp	r3, #2
    19ce:	d801      	bhi.n	19d4 <ADS1x1x_set_threshold_hi+0xe>
  {
    value <<= 4;
    19d0:	010a      	lsls	r2, r1, #4
    19d2:	b292      	uxth	r2, r2
  }
  ADS1x1x_write_register(p_config->i2c_address,ADS1x1x_REG_POINTER_HI_THRESH,value);
    19d4:	7840      	ldrb	r0, [r0, #1]
    19d6:	2103      	movs	r1, #3
    19d8:	f7ff ffbc 	bl	1954 <ADS1x1x_write_register>
}
    19dc:	bd10      	pop	{r4, pc}

000019de <ADS1x1x_set_config_bitfield>:


void ADS1x1x_set_config_bitfield(ADS1x1x_config_t *p_config, uint16_t value, uint16_t mask)
{
  p_config->config &= ~mask;
    19de:	8843      	ldrh	r3, [r0, #2]
    19e0:	4393      	bics	r3, r2
  p_config->config |= (value & mask);
    19e2:	4011      	ands	r1, r2
    19e4:	4319      	orrs	r1, r3
    19e6:	8041      	strh	r1, [r0, #2]
}
    19e8:	4770      	bx	lr

000019ea <ADS1x1x_set_os>:


void ADS1x1x_set_os(ADS1x1x_config_t *p_config, ADS1x1x_os_t value)
{
    19ea:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_OS_MASK);
    19ec:	2280      	movs	r2, #128	; 0x80
    19ee:	0212      	lsls	r2, r2, #8
    19f0:	f7ff fff5 	bl	19de <ADS1x1x_set_config_bitfield>
}
    19f4:	bd10      	pop	{r4, pc}

000019f6 <ADS1x1x_set_multiplexer>:


void ADS1x1x_set_multiplexer(ADS1x1x_config_t *p_config, ADS1x1x_mux_t value)
{
    19f6:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_MULTIPLEXER_MASK);
    19f8:	22e0      	movs	r2, #224	; 0xe0
    19fa:	01d2      	lsls	r2, r2, #7
    19fc:	f7ff ffef 	bl	19de <ADS1x1x_set_config_bitfield>
}
    1a00:	bd10      	pop	{r4, pc}

00001a02 <ADS1x1x_set_pga>:


void ADS1x1x_set_pga(ADS1x1x_config_t *p_config, ADS1x1x_pga_t value)
{
    1a02:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_PGA_MASK);
    1a04:	22e0      	movs	r2, #224	; 0xe0
    1a06:	0112      	lsls	r2, r2, #4
    1a08:	f7ff ffe9 	bl	19de <ADS1x1x_set_config_bitfield>
}
    1a0c:	bd10      	pop	{r4, pc}

00001a0e <ADS1x1x_set_mode>:


void ADS1x1x_set_mode(ADS1x1x_config_t *p_config, ADS1x1x_mode_t value)
{
    1a0e:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_MODE_MASK);
    1a10:	2280      	movs	r2, #128	; 0x80
    1a12:	0052      	lsls	r2, r2, #1
    1a14:	f7ff ffe3 	bl	19de <ADS1x1x_set_config_bitfield>
}
    1a18:	bd10      	pop	{r4, pc}

00001a1a <ADS1x1x_set_data_rate>:


void ADS1x1x_set_data_rate(ADS1x1x_config_t *p_config, ADS1x1x_data_rate_t value)
{
    1a1a:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_DATA_RATE_MASK);
    1a1c:	b289      	uxth	r1, r1
    1a1e:	22e0      	movs	r2, #224	; 0xe0
    1a20:	f7ff ffdd 	bl	19de <ADS1x1x_set_config_bitfield>
}
    1a24:	bd10      	pop	{r4, pc}

00001a26 <ADS1x1x_set_comparator_mode>:


void ADS1x1x_set_comparator_mode(ADS1x1x_config_t *p_config, ADS1x1x_comparator_mode_t value)
{
    1a26:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_COMPARATOR_MODE_MASK);
    1a28:	b289      	uxth	r1, r1
    1a2a:	2210      	movs	r2, #16
    1a2c:	f7ff ffd7 	bl	19de <ADS1x1x_set_config_bitfield>
}
    1a30:	bd10      	pop	{r4, pc}

00001a32 <ADS1x1x_set_comparator_polarity>:


void ADS1x1x_set_comparator_polarity(ADS1x1x_config_t *p_config, ADS1x1x_comparator_polarity_t value)
{
    1a32:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_COMPARATOR_POLARITY_MASK);
    1a34:	b289      	uxth	r1, r1
    1a36:	2208      	movs	r2, #8
    1a38:	f7ff ffd1 	bl	19de <ADS1x1x_set_config_bitfield>
}
    1a3c:	bd10      	pop	{r4, pc}

00001a3e <ADS1x1x_set_comparator_latching>:


void ADS1x1x_set_comparator_latching(ADS1x1x_config_t *p_config, ADS1x1x_comparator_latching_t value)
{
    1a3e:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_COMPARATOR_LATCHING_MASK);
    1a40:	b289      	uxth	r1, r1
    1a42:	2204      	movs	r2, #4
    1a44:	f7ff ffcb 	bl	19de <ADS1x1x_set_config_bitfield>
}
    1a48:	bd10      	pop	{r4, pc}

00001a4a <ADS1x1x_set_comparator_queue>:


void ADS1x1x_set_comparator_queue(ADS1x1x_config_t *p_config, ADS1x1x_comparator_queue_t value)
{
    1a4a:	b510      	push	{r4, lr}
  ADS1x1x_set_config_bitfield(p_config,(uint16_t)value,ADS1x1x_REG_CONFIG_COMPARATOR_QUEUE_MASK);
    1a4c:	b289      	uxth	r1, r1
    1a4e:	2203      	movs	r2, #3
    1a50:	f7ff ffc5 	bl	19de <ADS1x1x_set_config_bitfield>
}
    1a54:	bd10      	pop	{r4, pc}

00001a56 <ADS1x1x_init>:
{
    1a56:	b570      	push	{r4, r5, r6, lr}
    1a58:	0004      	movs	r4, r0
    1a5a:	001e      	movs	r6, r3
    1a5c:	ab04      	add	r3, sp, #16
    1a5e:	881d      	ldrh	r5, [r3, #0]
  if (p_config!=0)
    1a60:	2800      	cmp	r0, #0
    1a62:	d032      	beq.n	1aca <ADS1x1x_init+0x74>
    p_config->chip = chip;
    1a64:	7001      	strb	r1, [r0, #0]
    p_config->i2c_address = i2c_address;
    1a66:	7042      	strb	r2, [r0, #1]
    p_config->config = 0;
    1a68:	2300      	movs	r3, #0
    1a6a:	8043      	strh	r3, [r0, #2]
    ADS1x1x_set_os(p_config,OS_SINGLE);
    1a6c:	2180      	movs	r1, #128	; 0x80
    1a6e:	0209      	lsls	r1, r1, #8
    1a70:	f7ff ffbb 	bl	19ea <ADS1x1x_set_os>
    ADS1x1x_set_multiplexer(p_config,input);
    1a74:	0031      	movs	r1, r6
    1a76:	0020      	movs	r0, r4
    1a78:	f7ff ffbd 	bl	19f6 <ADS1x1x_set_multiplexer>
    ADS1x1x_set_pga(p_config,gain);
    1a7c:	0029      	movs	r1, r5
    1a7e:	0020      	movs	r0, r4
    1a80:	f7ff ffbf 	bl	1a02 <ADS1x1x_set_pga>
    ADS1x1x_set_mode(p_config,MODE_SINGLE_SHOT);
    1a84:	2180      	movs	r1, #128	; 0x80
    1a86:	0049      	lsls	r1, r1, #1
    1a88:	0020      	movs	r0, r4
    1a8a:	f7ff ffc0 	bl	1a0e <ADS1x1x_set_mode>
    if (p_config->chip==ADS1013 || p_config->chip==ADS1014 || p_config->chip==ADS1015)
    1a8e:	7823      	ldrb	r3, [r4, #0]
    1a90:	2b02      	cmp	r3, #2
    1a92:	d815      	bhi.n	1ac0 <ADS1x1x_init+0x6a>
      ADS1x1x_set_data_rate(p_config,DATA_RATE_ADS101x_1600);
    1a94:	2180      	movs	r1, #128	; 0x80
    1a96:	0020      	movs	r0, r4
    1a98:	f7ff ffbf 	bl	1a1a <ADS1x1x_set_data_rate>
    ADS1x1x_set_comparator_mode(p_config,COMPARATOR_MODE_TRADITIONAL);
    1a9c:	2100      	movs	r1, #0
    1a9e:	0020      	movs	r0, r4
    1aa0:	f7ff ffc1 	bl	1a26 <ADS1x1x_set_comparator_mode>
    ADS1x1x_set_comparator_polarity(p_config,COMPARATOR_POLARITY_ACTIVE_LO);
    1aa4:	2100      	movs	r1, #0
    1aa6:	0020      	movs	r0, r4
    1aa8:	f7ff ffc3 	bl	1a32 <ADS1x1x_set_comparator_polarity>
    ADS1x1x_set_comparator_latching(p_config,COMPARATOR_NON_LATCHING);
    1aac:	2100      	movs	r1, #0
    1aae:	0020      	movs	r0, r4
    1ab0:	f7ff ffc5 	bl	1a3e <ADS1x1x_set_comparator_latching>
    ADS1x1x_set_comparator_queue(p_config,COMPARATOR_QUEUE_NONE);
    1ab4:	2103      	movs	r1, #3
    1ab6:	0020      	movs	r0, r4
    1ab8:	f7ff ffc7 	bl	1a4a <ADS1x1x_set_comparator_queue>
    result = 1;
    1abc:	2001      	movs	r0, #1
}
    1abe:	bd70      	pop	{r4, r5, r6, pc}
      ADS1x1x_set_data_rate(p_config,DATA_RATE_ADS111x_128);
    1ac0:	2180      	movs	r1, #128	; 0x80
    1ac2:	0020      	movs	r0, r4
    1ac4:	f7ff ffa9 	bl	1a1a <ADS1x1x_set_data_rate>
    1ac8:	e7e8      	b.n	1a9c <ADS1x1x_init+0x46>
  uint8_t result = 0;
    1aca:	2000      	movs	r0, #0
    1acc:	e7f7      	b.n	1abe <ADS1x1x_init+0x68>

00001ace <ETH_Handler>:
	EXT_IRG_init();
}

static void ETH_Handler(void){

}
    1ace:	4770      	bx	lr

00001ad0 <TIMER_0_task1_cb>:
	return res;
}

static void TIMER_0_task1_cb(const struct timer_task *const timer_task)
{
	adcConversionRequest = 1;
    1ad0:	2201      	movs	r2, #1
    1ad2:	4b01      	ldr	r3, [pc, #4]	; (1ad8 <TIMER_0_task1_cb+0x8>)
    1ad4:	701a      	strb	r2, [r3, #0]
}
    1ad6:	4770      	bx	lr
    1ad8:	20000aac 	.word	0x20000aac

00001adc <TIMER_0_task2_cb>:
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    1adc:	2280      	movs	r2, #128	; 0x80
    1ade:	0412      	lsls	r2, r2, #16
    1ae0:	23c0      	movs	r3, #192	; 0xc0
    1ae2:	05db      	lsls	r3, r3, #23
    1ae4:	61da      	str	r2, [r3, #28]

static void TIMER_0_task2_cb(const struct timer_task *const timer_task)
{
	gpio_toggle_pin_level(GLD);
	
}
    1ae6:	4770      	bx	lr

00001ae8 <TIMER_IRQ_init>:
	return retVal;
}


static void TIMER_IRQ_init(void)
{
    1ae8:	b570      	push	{r4, r5, r6, lr}
			peripheral = (uint32_t)_pm_get_ahb_index(module);
			PM->AHBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBA:
		PM->APBAMASK.reg |= 1 << peripheral;
    1aea:	4a15      	ldr	r2, [pc, #84]	; (1b40 <TIMER_IRQ_init+0x58>)
    1aec:	6993      	ldr	r3, [r2, #24]
    1aee:	2120      	movs	r1, #32
    1af0:	430b      	orrs	r3, r1
    1af2:	6193      	str	r3, [r2, #24]
	((Gclk *)hw)->CLKCTRL.reg = data;
    1af4:	4a13      	ldr	r2, [pc, #76]	; (1b44 <TIMER_IRQ_init+0x5c>)
    1af6:	4b14      	ldr	r3, [pc, #80]	; (1b48 <TIMER_IRQ_init+0x60>)
    1af8:	805a      	strh	r2, [r3, #2]
	_pm_enable_bus_clock(PM_BUS_APBA, RTC);
	_gclk_enable_channel(RTC_GCLK_ID, CONF_GCLK_RTC_SRC);
	timer_init(&TIMER_IRQ, RTC, _rtc_get_timer());
    1afa:	f7ff f923 	bl	d44 <_rtc_get_timer>
    1afe:	0002      	movs	r2, r0
    1b00:	4c12      	ldr	r4, [pc, #72]	; (1b4c <TIMER_IRQ_init+0x64>)
    1b02:	4913      	ldr	r1, [pc, #76]	; (1b50 <TIMER_IRQ_init+0x68>)
    1b04:	0020      	movs	r0, r4
    1b06:	f7fe fe17 	bl	738 <timer_init>
	
	TIMER_task1.interval = 32768/4;
    1b0a:	4912      	ldr	r1, [pc, #72]	; (1b54 <TIMER_IRQ_init+0x6c>)
    1b0c:	2380      	movs	r3, #128	; 0x80
    1b0e:	019b      	lsls	r3, r3, #6
    1b10:	608b      	str	r3, [r1, #8]
	TIMER_task1.cb       = TIMER_0_task1_cb;
    1b12:	4b11      	ldr	r3, [pc, #68]	; (1b58 <TIMER_IRQ_init+0x70>)
    1b14:	60cb      	str	r3, [r1, #12]
	TIMER_task1.mode     = TIMER_TASK_REPEAT;
    1b16:	2301      	movs	r3, #1
    1b18:	740b      	strb	r3, [r1, #16]
	
	TIMER_task2.interval = 32768/2;
    1b1a:	4d10      	ldr	r5, [pc, #64]	; (1b5c <TIMER_IRQ_init+0x74>)
    1b1c:	2280      	movs	r2, #128	; 0x80
    1b1e:	01d2      	lsls	r2, r2, #7
    1b20:	60aa      	str	r2, [r5, #8]
	TIMER_task2.cb       = TIMER_0_task2_cb;
    1b22:	4a0f      	ldr	r2, [pc, #60]	; (1b60 <TIMER_IRQ_init+0x78>)
    1b24:	60ea      	str	r2, [r5, #12]
	TIMER_task2.mode     = TIMER_TASK_REPEAT;
    1b26:	742b      	strb	r3, [r5, #16]

	timer_add_task(&TIMER_IRQ, &TIMER_task1);
    1b28:	0020      	movs	r0, r4
    1b2a:	f7fe fe3b 	bl	7a4 <timer_add_task>
	timer_add_task(&TIMER_IRQ, &TIMER_task2);
    1b2e:	0029      	movs	r1, r5
    1b30:	0020      	movs	r0, r4
    1b32:	f7fe fe37 	bl	7a4 <timer_add_task>
	timer_start(&TIMER_IRQ);
    1b36:	0020      	movs	r0, r4
    1b38:	f7fe fe1c 	bl	774 <timer_start>
    1b3c:	bd70      	pop	{r4, r5, r6, pc}
    1b3e:	46c0      	nop			; (mov r8, r8)
    1b40:	40000400 	.word	0x40000400
    1b44:	00004302 	.word	0x00004302
    1b48:	40000c00 	.word	0x40000c00
    1b4c:	20000c18 	.word	0x20000c18
    1b50:	40001400 	.word	0x40001400
    1b54:	20000a84 	.word	0x20000a84
    1b58:	00001ad1 	.word	0x00001ad1
    1b5c:	20000a98 	.word	0x20000a98
    1b60:	00001add 	.word	0x00001add

00001b64 <buzer>:
void buzer(uint16_t soundTime){
    1b64:	b570      	push	{r4, r5, r6, lr}
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1b66:	24c0      	movs	r4, #192	; 0xc0
    1b68:	05e4      	lsls	r4, r4, #23
    1b6a:	2580      	movs	r5, #128	; 0x80
    1b6c:	04ad      	lsls	r5, r5, #18
    1b6e:	61a5      	str	r5, [r4, #24]
	delay_ms(soundTime);
    1b70:	f7fe fb0e 	bl	190 <delay_ms>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1b74:	6165      	str	r5, [r4, #20]
}
    1b76:	bd70      	pop	{r4, r5, r6, pc}

00001b78 <gpio_init>:
void gpio_init(void){
    1b78:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b7a:	46de      	mov	lr, fp
    1b7c:	4657      	mov	r7, sl
    1b7e:	464e      	mov	r6, r9
    1b80:	4645      	mov	r5, r8
    1b82:	b5e0      	push	{r5, r6, r7, lr}
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1b84:	22c0      	movs	r2, #192	; 0xc0
    1b86:	05d2      	lsls	r2, r2, #23
    1b88:	2380      	movs	r3, #128	; 0x80
    1b8a:	469c      	mov	ip, r3
    1b8c:	6193      	str	r3, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1b8e:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1b90:	4b7d      	ldr	r3, [pc, #500]	; (1d88 <gpio_init+0x210>)
    1b92:	497e      	ldr	r1, [pc, #504]	; (1d8c <gpio_init+0x214>)
    1b94:	6299      	str	r1, [r3, #40]	; 0x28
    1b96:	25c0      	movs	r5, #192	; 0xc0
    1b98:	062d      	lsls	r5, r5, #24
    1b9a:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1b9c:	2447      	movs	r4, #71	; 0x47
    1b9e:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ba0:	2101      	movs	r1, #1
    1ba2:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1ba4:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1ba6:	2080      	movs	r0, #128	; 0x80
    1ba8:	0040      	lsls	r0, r0, #1
    1baa:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1bac:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1bae:	4878      	ldr	r0, [pc, #480]	; (1d90 <gpio_init+0x218>)
    1bb0:	6298      	str	r0, [r3, #40]	; 0x28
    1bb2:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1bb4:	3401      	adds	r4, #1
    1bb6:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1bb8:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1bba:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1bbc:	2780      	movs	r7, #128	; 0x80
    1bbe:	00bf      	lsls	r7, r7, #2
    1bc0:	6157      	str	r7, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1bc2:	6097      	str	r7, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1bc4:	4873      	ldr	r0, [pc, #460]	; (1d94 <gpio_init+0x21c>)
    1bc6:	4682      	mov	sl, r0
    1bc8:	6298      	str	r0, [r3, #40]	; 0x28
    1bca:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1bcc:	3401      	adds	r4, #1
    1bce:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1bd0:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1bd2:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1bd4:	2080      	movs	r0, #128	; 0x80
    1bd6:	00c0      	lsls	r0, r0, #3
    1bd8:	4680      	mov	r8, r0
    1bda:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1bdc:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1bde:	486e      	ldr	r0, [pc, #440]	; (1d98 <gpio_init+0x220>)
    1be0:	6298      	str	r0, [r3, #40]	; 0x28
    1be2:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1be4:	3401      	adds	r4, #1
    1be6:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1be8:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1bea:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1bec:	2080      	movs	r0, #128	; 0x80
    1bee:	0100      	lsls	r0, r0, #4
    1bf0:	6050      	str	r0, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1bf2:	486a      	ldr	r0, [pc, #424]	; (1d9c <gpio_init+0x224>)
    1bf4:	6298      	str	r0, [r3, #40]	; 0x28
    1bf6:	486a      	ldr	r0, [pc, #424]	; (1da0 <gpio_init+0x228>)
    1bf8:	6298      	str	r0, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1bfa:	264b      	movs	r6, #75	; 0x4b
    1bfc:	5d98      	ldrb	r0, [r3, r6]
    1bfe:	4681      	mov	r9, r0
    1c00:	2004      	movs	r0, #4
    1c02:	464c      	mov	r4, r9
    1c04:	4384      	bics	r4, r0
    1c06:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c08:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c0a:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c0c:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1c0e:	2680      	movs	r6, #128	; 0x80
    1c10:	0236      	lsls	r6, r6, #8
    1c12:	6196      	str	r6, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1c14:	6096      	str	r6, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c16:	4e63      	ldr	r6, [pc, #396]	; (1da4 <gpio_init+0x22c>)
    1c18:	629e      	str	r6, [r3, #40]	; 0x28
    1c1a:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c1c:	244f      	movs	r4, #79	; 0x4f
    1c1e:	5d1e      	ldrb	r6, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c20:	438e      	bics	r6, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c22:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1c24:	2680      	movs	r6, #128	; 0x80
    1c26:	0436      	lsls	r6, r6, #16
    1c28:	6156      	str	r6, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1c2a:	6096      	str	r6, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c2c:	2480      	movs	r4, #128	; 0x80
    1c2e:	05e4      	lsls	r4, r4, #23
    1c30:	629c      	str	r4, [r3, #40]	; 0x28
    1c32:	4c5d      	ldr	r4, [pc, #372]	; (1da8 <gpio_init+0x230>)
    1c34:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c36:	2457      	movs	r4, #87	; 0x57
    1c38:	46a3      	mov	fp, r4
    1c3a:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c3c:	438c      	bics	r4, r1
    1c3e:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c40:	465c      	mov	r4, fp
    1c42:	464e      	mov	r6, r9
    1c44:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1c46:	3441      	adds	r4, #65	; 0x41
    1c48:	5117      	str	r7, [r2, r4]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1c4a:	3c10      	subs	r4, #16
    1c4c:	5117      	str	r7, [r2, r4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c4e:	3f59      	subs	r7, #89	; 0x59
    1c50:	3fff      	subs	r7, #255	; 0xff
    1c52:	4654      	mov	r4, sl
    1c54:	51dc      	str	r4, [r3, r7]
    1c56:	51dd      	str	r5, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c58:	24c9      	movs	r4, #201	; 0xc9
    1c5a:	5d1d      	ldrb	r5, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c5c:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c5e:	551d      	strb	r5, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1c60:	2584      	movs	r5, #132	; 0x84
    1c62:	4644      	mov	r4, r8
    1c64:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c66:	4c51      	ldr	r4, [pc, #324]	; (1dac <gpio_init+0x234>)
    1c68:	51dc      	str	r4, [r3, r7]
    1c6a:	4c4d      	ldr	r4, [pc, #308]	; (1da0 <gpio_init+0x228>)
    1c6c:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1c6e:	24ca      	movs	r4, #202	; 0xca
    1c70:	46a0      	mov	r8, r4
    1c72:	5d1c      	ldrb	r4, [r3, r4]
    1c74:	4384      	bics	r4, r0
    1c76:	46a1      	mov	r9, r4
    1c78:	4644      	mov	r4, r8
    1c7a:	464e      	mov	r6, r9
    1c7c:	551e      	strb	r6, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c7e:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c80:	438c      	bics	r4, r1
    1c82:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c84:	4644      	mov	r4, r8
    1c86:	464e      	mov	r6, r9
    1c88:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1c8a:	2480      	movs	r4, #128	; 0x80
    1c8c:	0124      	lsls	r4, r4, #4
    1c8e:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c90:	4c42      	ldr	r4, [pc, #264]	; (1d9c <gpio_init+0x224>)
    1c92:	51dc      	str	r4, [r3, r7]
    1c94:	4c42      	ldr	r4, [pc, #264]	; (1da0 <gpio_init+0x228>)
    1c96:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1c98:	24cb      	movs	r4, #203	; 0xcb
    1c9a:	46a0      	mov	r8, r4
    1c9c:	5d1c      	ldrb	r4, [r3, r4]
    1c9e:	4384      	bics	r4, r0
    1ca0:	46a1      	mov	r9, r4
    1ca2:	4644      	mov	r4, r8
    1ca4:	464e      	mov	r6, r9
    1ca6:	551e      	strb	r6, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ca8:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1caa:	438c      	bics	r4, r1
    1cac:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1cae:	4644      	mov	r4, r8
    1cb0:	464e      	mov	r6, r9
    1cb2:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1cb4:	2480      	movs	r4, #128	; 0x80
    1cb6:	03e4      	lsls	r4, r4, #15
    1cb8:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1cba:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1cbc:	2480      	movs	r4, #128	; 0x80
    1cbe:	05e4      	lsls	r4, r4, #23
    1cc0:	629c      	str	r4, [r3, #40]	; 0x28
    1cc2:	4c3b      	ldr	r4, [pc, #236]	; (1db0 <gpio_init+0x238>)
    1cc4:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1cc6:	2456      	movs	r4, #86	; 0x56
    1cc8:	46a1      	mov	r9, r4
    1cca:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ccc:	438c      	bics	r4, r1
    1cce:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1cd0:	464c      	mov	r4, r9
    1cd2:	4646      	mov	r6, r8
    1cd4:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1cd6:	2480      	movs	r4, #128	; 0x80
    1cd8:	0464      	lsls	r4, r4, #17
    1cda:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1cdc:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1cde:	2480      	movs	r4, #128	; 0x80
    1ce0:	05e4      	lsls	r4, r4, #23
    1ce2:	629c      	str	r4, [r3, #40]	; 0x28
    1ce4:	4c33      	ldr	r4, [pc, #204]	; (1db4 <gpio_init+0x23c>)
    1ce6:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ce8:	2458      	movs	r4, #88	; 0x58
    1cea:	46a1      	mov	r9, r4
    1cec:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1cee:	438c      	bics	r4, r1
    1cf0:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1cf2:	464c      	mov	r4, r9
    1cf4:	4646      	mov	r6, r8
    1cf6:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1cf8:	2480      	movs	r4, #128	; 0x80
    1cfa:	04a4      	lsls	r4, r4, #18
    1cfc:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1cfe:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1d00:	2480      	movs	r4, #128	; 0x80
    1d02:	05e4      	lsls	r4, r4, #23
    1d04:	629c      	str	r4, [r3, #40]	; 0x28
    1d06:	4e2c      	ldr	r6, [pc, #176]	; (1db8 <gpio_init+0x240>)
    1d08:	629e      	str	r6, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1d0a:	2459      	movs	r4, #89	; 0x59
    1d0c:	5d1e      	ldrb	r6, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1d0e:	438e      	bics	r6, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1d10:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1d12:	2640      	movs	r6, #64	; 0x40
    1d14:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1d16:	4e29      	ldr	r6, [pc, #164]	; (1dbc <gpio_init+0x244>)
    1d18:	51de      	str	r6, [r3, r7]
    1d1a:	4c21      	ldr	r4, [pc, #132]	; (1da0 <gpio_init+0x228>)
    1d1c:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1d1e:	26c6      	movs	r6, #198	; 0xc6
    1d20:	5d9c      	ldrb	r4, [r3, r6]
    1d22:	4384      	bics	r4, r0
    1d24:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1d26:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1d28:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1d2a:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1d2c:	3ea6      	subs	r6, #166	; 0xa6
    1d2e:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1d30:	4e23      	ldr	r6, [pc, #140]	; (1dc0 <gpio_init+0x248>)
    1d32:	51de      	str	r6, [r3, r7]
    1d34:	4c1a      	ldr	r4, [pc, #104]	; (1da0 <gpio_init+0x228>)
    1d36:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1d38:	26c5      	movs	r6, #197	; 0xc5
    1d3a:	5d9c      	ldrb	r4, [r3, r6]
    1d3c:	4384      	bics	r4, r0
    1d3e:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1d40:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1d42:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1d44:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1d46:	3eb5      	subs	r6, #181	; 0xb5
    1d48:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1d4a:	4e1e      	ldr	r6, [pc, #120]	; (1dc4 <gpio_init+0x24c>)
    1d4c:	51de      	str	r6, [r3, r7]
    1d4e:	4c14      	ldr	r4, [pc, #80]	; (1da0 <gpio_init+0x228>)
    1d50:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1d52:	26c4      	movs	r6, #196	; 0xc4
    1d54:	5d9c      	ldrb	r4, [r3, r6]
    1d56:	4384      	bics	r4, r0
    1d58:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1d5a:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1d5c:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1d5e:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1d60:	4664      	mov	r4, ip
    1d62:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1d64:	4a18      	ldr	r2, [pc, #96]	; (1dc8 <gpio_init+0x250>)
    1d66:	51da      	str	r2, [r3, r7]
    1d68:	4a0d      	ldr	r2, [pc, #52]	; (1da0 <gpio_init+0x228>)
    1d6a:	51da      	str	r2, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1d6c:	22c7      	movs	r2, #199	; 0xc7
    1d6e:	5c9c      	ldrb	r4, [r3, r2]
    1d70:	4384      	bics	r4, r0
    1d72:	549c      	strb	r4, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1d74:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1d76:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1d78:	5498      	strb	r0, [r3, r2]
}
    1d7a:	bc3c      	pop	{r2, r3, r4, r5}
    1d7c:	4690      	mov	r8, r2
    1d7e:	4699      	mov	r9, r3
    1d80:	46a2      	mov	sl, r4
    1d82:	46ab      	mov	fp, r5
    1d84:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1d86:	46c0      	nop			; (mov r8, r8)
    1d88:	41004400 	.word	0x41004400
    1d8c:	40000080 	.word	0x40000080
    1d90:	40000100 	.word	0x40000100
    1d94:	40000200 	.word	0x40000200
    1d98:	40000400 	.word	0x40000400
    1d9c:	40020800 	.word	0x40020800
    1da0:	c0020000 	.word	0xc0020000
    1da4:	40008000 	.word	0x40008000
    1da8:	c0000080 	.word	0xc0000080
    1dac:	40020400 	.word	0x40020400
    1db0:	c0000040 	.word	0xc0000040
    1db4:	c0000100 	.word	0xc0000100
    1db8:	c0000200 	.word	0xc0000200
    1dbc:	40020040 	.word	0x40020040
    1dc0:	40020020 	.word	0x40020020
    1dc4:	40020010 	.word	0x40020010
    1dc8:	40020080 	.word	0x40020080

00001dcc <EXT_IRG_init>:
void EXT_IRG_init(void){
    1dcc:	b510      	push	{r4, lr}
    1dce:	4a11      	ldr	r2, [pc, #68]	; (1e14 <EXT_IRG_init+0x48>)
    1dd0:	4b11      	ldr	r3, [pc, #68]	; (1e18 <EXT_IRG_init+0x4c>)
    1dd2:	805a      	strh	r2, [r3, #2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1dd4:	2180      	movs	r1, #128	; 0x80
    1dd6:	0049      	lsls	r1, r1, #1
    1dd8:	2384      	movs	r3, #132	; 0x84
    1dda:	22c0      	movs	r2, #192	; 0xc0
    1ddc:	05d2      	lsls	r2, r2, #23
    1dde:	50d1      	str	r1, [r2, r3]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1de0:	4b0e      	ldr	r3, [pc, #56]	; (1e1c <EXT_IRG_init+0x50>)
    1de2:	22a8      	movs	r2, #168	; 0xa8
    1de4:	490e      	ldr	r1, [pc, #56]	; (1e20 <EXT_IRG_init+0x54>)
    1de6:	5099      	str	r1, [r3, r2]
    1de8:	490e      	ldr	r1, [pc, #56]	; (1e24 <EXT_IRG_init+0x58>)
    1dea:	5099      	str	r1, [r3, r2]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1dec:	21c8      	movs	r1, #200	; 0xc8
    1dee:	5c5a      	ldrb	r2, [r3, r1]
    1df0:	2004      	movs	r0, #4
    1df2:	4382      	bics	r2, r0
    1df4:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1df6:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1df8:	3803      	subs	r0, #3
    1dfa:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1dfc:	4302      	orrs	r2, r0
    1dfe:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1e00:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1e02:	3914      	subs	r1, #20
    1e04:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1e06:	200f      	movs	r0, #15
    1e08:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1e0a:	545a      	strb	r2, [r3, r1]
	ext_irq_init();
    1e0c:	f7fe f9ee 	bl	1ec <ext_irq_init>
}
    1e10:	bd10      	pop	{r4, pc}
    1e12:	46c0      	nop			; (mov r8, r8)
    1e14:	00004103 	.word	0x00004103
    1e18:	40000c00 	.word	0x40000c00
    1e1c:	41004400 	.word	0x41004400
    1e20:	40020100 	.word	0x40020100
    1e24:	c0020000 	.word	0xc0020000

00001e28 <ETH_SPI_init>:
void ETH_SPI_init(void){
    1e28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e2a:	46d6      	mov	lr, sl
    1e2c:	4647      	mov	r7, r8
    1e2e:	b580      	push	{r7, lr}
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
    1e30:	4a34      	ldr	r2, [pc, #208]	; (1f04 <ETH_SPI_init+0xdc>)
    1e32:	6a13      	ldr	r3, [r2, #32]
    1e34:	2104      	movs	r1, #4
    1e36:	4688      	mov	r8, r1
    1e38:	430b      	orrs	r3, r1
    1e3a:	6213      	str	r3, [r2, #32]
    1e3c:	4a32      	ldr	r2, [pc, #200]	; (1f08 <ETH_SPI_init+0xe0>)
    1e3e:	4b33      	ldr	r3, [pc, #204]	; (1f0c <ETH_SPI_init+0xe4>)
    1e40:	805a      	strh	r2, [r3, #2]
	spi_m_sync_init(&ETH_SPI, SERCOM0);
    1e42:	4933      	ldr	r1, [pc, #204]	; (1f10 <ETH_SPI_init+0xe8>)
    1e44:	4833      	ldr	r0, [pc, #204]	; (1f14 <ETH_SPI_init+0xec>)
    1e46:	f7fe fb81 	bl	54c <spi_m_sync_init>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1e4a:	22c0      	movs	r2, #192	; 0xc0
    1e4c:	05d2      	lsls	r2, r2, #23
    1e4e:	2310      	movs	r3, #16
    1e50:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1e52:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1e54:	4b30      	ldr	r3, [pc, #192]	; (1f18 <ETH_SPI_init+0xf0>)
    1e56:	4931      	ldr	r1, [pc, #196]	; (1f1c <ETH_SPI_init+0xf4>)
    1e58:	6299      	str	r1, [r3, #40]	; 0x28
    1e5a:	21c0      	movs	r1, #192	; 0xc0
    1e5c:	0609      	lsls	r1, r1, #24
    1e5e:	468a      	mov	sl, r1
    1e60:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1e62:	2044      	movs	r0, #68	; 0x44
    1e64:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1e66:	2401      	movs	r4, #1
    1e68:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1e6a:	2501      	movs	r5, #1
    1e6c:	4329      	orrs	r1, r5
    1e6e:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1e70:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1e72:	2132      	movs	r1, #50	; 0x32
    1e74:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1e76:	270f      	movs	r7, #15
    1e78:	43b8      	bics	r0, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1e7a:	2603      	movs	r6, #3
    1e7c:	46b4      	mov	ip, r6
    1e7e:	4666      	mov	r6, ip
    1e80:	4330      	orrs	r0, r6
    1e82:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1e84:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1e86:	2020      	movs	r0, #32
    1e88:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1e8a:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1e8c:	4824      	ldr	r0, [pc, #144]	; (1f20 <ETH_SPI_init+0xf8>)
    1e8e:	6298      	str	r0, [r3, #40]	; 0x28
    1e90:	4650      	mov	r0, sl
    1e92:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1e94:	2045      	movs	r0, #69	; 0x45
    1e96:	4682      	mov	sl, r0
    1e98:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1e9a:	43a0      	bics	r0, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1e9c:	4328      	orrs	r0, r5
    1e9e:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1ea0:	4656      	mov	r6, sl
    1ea2:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1ea4:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1ea6:	3e36      	subs	r6, #54	; 0x36
    1ea8:	4030      	ands	r0, r6
	tmp |= PORT_PMUX_PMUXO(data);
    1eaa:	2630      	movs	r6, #48	; 0x30
    1eac:	46b2      	mov	sl, r6
    1eae:	4656      	mov	r6, sl
    1eb0:	4330      	orrs	r0, r6
    1eb2:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1eb4:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1eb6:	310e      	adds	r1, #14
    1eb8:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1eba:	4a1a      	ldr	r2, [pc, #104]	; (1f24 <ETH_SPI_init+0xfc>)
    1ebc:	629a      	str	r2, [r3, #40]	; 0x28
    1ebe:	4a1a      	ldr	r2, [pc, #104]	; (1f28 <ETH_SPI_init+0x100>)
    1ec0:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1ec2:	2246      	movs	r2, #70	; 0x46
    1ec4:	5c99      	ldrb	r1, [r3, r2]
    1ec6:	4640      	mov	r0, r8
    1ec8:	4381      	bics	r1, r0
    1eca:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ecc:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ece:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1ed0:	4329      	orrs	r1, r5
    1ed2:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1ed4:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1ed6:	2133      	movs	r1, #51	; 0x33
    1ed8:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1eda:	43ba      	bics	r2, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1edc:	4660      	mov	r0, ip
    1ede:	4302      	orrs	r2, r0
    1ee0:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1ee2:	545a      	strb	r2, [r3, r1]
	spi_m_sync_init(&ETH_SPI, SERCOM0);
    1ee4:	490a      	ldr	r1, [pc, #40]	; (1f10 <ETH_SPI_init+0xe8>)
    1ee6:	480b      	ldr	r0, [pc, #44]	; (1f14 <ETH_SPI_init+0xec>)
    1ee8:	f7fe fb30 	bl	54c <spi_m_sync_init>
	spi_m_sync_get_io_descriptor(&ETH_SPI, &eth_spi);
    1eec:	490f      	ldr	r1, [pc, #60]	; (1f2c <ETH_SPI_init+0x104>)
    1eee:	4809      	ldr	r0, [pc, #36]	; (1f14 <ETH_SPI_init+0xec>)
    1ef0:	f7fe fbb8 	bl	664 <spi_m_sync_get_io_descriptor>
	spi_m_sync_enable(&ETH_SPI);
    1ef4:	4807      	ldr	r0, [pc, #28]	; (1f14 <ETH_SPI_init+0xec>)
    1ef6:	f7fe fb51 	bl	59c <spi_m_sync_enable>
}
    1efa:	bc0c      	pop	{r2, r3}
    1efc:	4690      	mov	r8, r2
    1efe:	469a      	mov	sl, r3
    1f00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f02:	46c0      	nop			; (mov r8, r8)
    1f04:	40000400 	.word	0x40000400
    1f08:	0000400d 	.word	0x0000400d
    1f0c:	40000c00 	.word	0x40000c00
    1f10:	42000800 	.word	0x42000800
    1f14:	20000bec 	.word	0x20000bec
    1f18:	41004400 	.word	0x41004400
    1f1c:	40000010 	.word	0x40000010
    1f20:	40000020 	.word	0x40000020
    1f24:	40020040 	.word	0x40020040
    1f28:	c0020000 	.word	0xc0020000
    1f2c:	20000bcc 	.word	0x20000bcc

00001f30 <ETH_SPI_Select>:
/**
 * \brief Set output level on port with mask
 */
static inline void _gpio_set_level(const enum gpio_port port, const uint32_t mask, const bool level)
{
	if (level) {
    1f30:	2800      	cmp	r0, #0
    1f32:	d104      	bne.n	1f3e <ETH_SPI_Select+0xe>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1f34:	2280      	movs	r2, #128	; 0x80
    1f36:	23c0      	movs	r3, #192	; 0xc0
    1f38:	05db      	lsls	r3, r3, #23
    1f3a:	615a      	str	r2, [r3, #20]
}
    1f3c:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1f3e:	2280      	movs	r2, #128	; 0x80
    1f40:	23c0      	movs	r3, #192	; 0xc0
    1f42:	05db      	lsls	r3, r3, #23
    1f44:	619a      	str	r2, [r3, #24]
    1f46:	e7f9      	b.n	1f3c <ETH_SPI_Select+0xc>

00001f48 <W5500_Select>:
void W5500_Select(void){
    1f48:	b510      	push	{r4, lr}
	ETH_SPI_Select(false);
    1f4a:	2000      	movs	r0, #0
    1f4c:	f7ff fff0 	bl	1f30 <ETH_SPI_Select>
}
    1f50:	bd10      	pop	{r4, pc}

00001f52 <W5500_Unselect>:
void W5500_Unselect(void){
    1f52:	b510      	push	{r4, lr}
	ETH_SPI_Select(true);
    1f54:	2001      	movs	r0, #1
    1f56:	f7ff ffeb 	bl	1f30 <ETH_SPI_Select>
}
    1f5a:	bd10      	pop	{r4, pc}

00001f5c <W5500_ReadBuff>:
void W5500_ReadBuff(uint8_t* buff, uint16_t len){
    1f5c:	b510      	push	{r4, lr}
    1f5e:	0003      	movs	r3, r0
    1f60:	000a      	movs	r2, r1
	io_read(eth_spi,buff,len);
    1f62:	4903      	ldr	r1, [pc, #12]	; (1f70 <W5500_ReadBuff+0x14>)
    1f64:	6808      	ldr	r0, [r1, #0]
    1f66:	0019      	movs	r1, r3
    1f68:	f7fe fa7e 	bl	468 <io_read>
}
    1f6c:	bd10      	pop	{r4, pc}
    1f6e:	46c0      	nop			; (mov r8, r8)
    1f70:	20000bcc 	.word	0x20000bcc

00001f74 <W5500_WriteBuff>:
void W5500_WriteBuff(uint8_t* buff, uint16_t len){
    1f74:	b510      	push	{r4, lr}
    1f76:	0003      	movs	r3, r0
    1f78:	000a      	movs	r2, r1
	io_write(eth_spi,buff,len);
    1f7a:	4903      	ldr	r1, [pc, #12]	; (1f88 <W5500_WriteBuff+0x14>)
    1f7c:	6808      	ldr	r0, [r1, #0]
    1f7e:	0019      	movs	r1, r3
    1f80:	f7fe fa58 	bl	434 <io_write>
}
    1f84:	bd10      	pop	{r4, pc}
    1f86:	46c0      	nop			; (mov r8, r8)
    1f88:	20000bcc 	.word	0x20000bcc

00001f8c <W5500_ReadByte>:
uint8_t W5500_ReadByte(void){
    1f8c:	b510      	push	{r4, lr}
    1f8e:	b082      	sub	sp, #8
	uint8_t data_byte = 0;
    1f90:	466b      	mov	r3, sp
    1f92:	1ddc      	adds	r4, r3, #7
    1f94:	2300      	movs	r3, #0
    1f96:	7023      	strb	r3, [r4, #0]
	io_read(eth_spi,&data_byte,1);
    1f98:	4b04      	ldr	r3, [pc, #16]	; (1fac <W5500_ReadByte+0x20>)
    1f9a:	6818      	ldr	r0, [r3, #0]
    1f9c:	2201      	movs	r2, #1
    1f9e:	0021      	movs	r1, r4
    1fa0:	f7fe fa62 	bl	468 <io_read>
	return data_byte;
    1fa4:	7820      	ldrb	r0, [r4, #0]
}
    1fa6:	b002      	add	sp, #8
    1fa8:	bd10      	pop	{r4, pc}
    1faa:	46c0      	nop			; (mov r8, r8)
    1fac:	20000bcc 	.word	0x20000bcc

00001fb0 <W5500_Write_byte>:
void W5500_Write_byte(uint8_t byte){
    1fb0:	b500      	push	{lr}
    1fb2:	b083      	sub	sp, #12
    1fb4:	466b      	mov	r3, sp
    1fb6:	1dd9      	adds	r1, r3, #7
    1fb8:	7008      	strb	r0, [r1, #0]
	io_write(eth_spi, &byte, 1);
    1fba:	4b03      	ldr	r3, [pc, #12]	; (1fc8 <W5500_Write_byte+0x18>)
    1fbc:	6818      	ldr	r0, [r3, #0]
    1fbe:	2201      	movs	r2, #1
    1fc0:	f7fe fa38 	bl	434 <io_write>
}
    1fc4:	b003      	add	sp, #12
    1fc6:	bd00      	pop	{pc}
    1fc8:	20000bcc 	.word	0x20000bcc

00001fcc <EXT_SPI_init>:
void EXT_SPI_init(void){
    1fcc:	b5f0      	push	{r4, r5, r6, r7, lr}
    1fce:	46ce      	mov	lr, r9
    1fd0:	b500      	push	{lr}
    1fd2:	4a35      	ldr	r2, [pc, #212]	; (20a8 <STACK_SIZE+0xa8>)
    1fd4:	6a13      	ldr	r3, [r2, #32]
    1fd6:	2120      	movs	r1, #32
    1fd8:	430b      	orrs	r3, r1
    1fda:	6213      	str	r3, [r2, #32]
    1fdc:	4a33      	ldr	r2, [pc, #204]	; (20ac <STACK_SIZE+0xac>)
    1fde:	4b34      	ldr	r3, [pc, #208]	; (20b0 <STACK_SIZE+0xb0>)
    1fe0:	805a      	strh	r2, [r3, #2]
	spi_m_sync_init(&EXT_SPI, SERCOM3);
    1fe2:	4934      	ldr	r1, [pc, #208]	; (20b4 <STACK_SIZE+0xb4>)
    1fe4:	4834      	ldr	r0, [pc, #208]	; (20b8 <STACK_SIZE+0xb8>)
    1fe6:	f7fe fab1 	bl	54c <spi_m_sync_init>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1fea:	22c0      	movs	r2, #192	; 0xc0
    1fec:	05d2      	lsls	r2, r2, #23
    1fee:	2380      	movs	r3, #128	; 0x80
    1ff0:	025b      	lsls	r3, r3, #9
    1ff2:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1ff4:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1ff6:	4b31      	ldr	r3, [pc, #196]	; (20bc <STACK_SIZE+0xbc>)
    1ff8:	2180      	movs	r1, #128	; 0x80
    1ffa:	05c9      	lsls	r1, r1, #23
    1ffc:	4689      	mov	r9, r1
    1ffe:	6299      	str	r1, [r3, #40]	; 0x28
    2000:	492f      	ldr	r1, [pc, #188]	; (20c0 <STACK_SIZE+0xc0>)
    2002:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2004:	2050      	movs	r0, #80	; 0x50
    2006:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2008:	2401      	movs	r4, #1
    200a:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    200c:	2501      	movs	r5, #1
    200e:	4329      	orrs	r1, r5
    2010:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2012:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2014:	2138      	movs	r1, #56	; 0x38
    2016:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    2018:	270f      	movs	r7, #15
    201a:	43b8      	bics	r0, r7
	tmp |= PORT_PMUX_PMUXE(data);
    201c:	2603      	movs	r6, #3
    201e:	46b4      	mov	ip, r6
    2020:	4666      	mov	r6, ip
    2022:	4330      	orrs	r0, r6
    2024:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2026:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    2028:	2080      	movs	r0, #128	; 0x80
    202a:	0280      	lsls	r0, r0, #10
    202c:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    202e:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2030:	4648      	mov	r0, r9
    2032:	6298      	str	r0, [r3, #40]	; 0x28
    2034:	4823      	ldr	r0, [pc, #140]	; (20c4 <STACK_SIZE+0xc4>)
    2036:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2038:	2051      	movs	r0, #81	; 0x51
    203a:	4681      	mov	r9, r0
    203c:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    203e:	43a0      	bics	r0, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2040:	4328      	orrs	r0, r5
    2042:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2044:	464e      	mov	r6, r9
    2046:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2048:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    204a:	3e42      	subs	r6, #66	; 0x42
    204c:	4030      	ands	r0, r6
	tmp |= PORT_PMUX_PMUXO(data);
    204e:	2630      	movs	r6, #48	; 0x30
    2050:	46b1      	mov	r9, r6
    2052:	464e      	mov	r6, r9
    2054:	4330      	orrs	r0, r6
    2056:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2058:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    205a:	2180      	movs	r1, #128	; 0x80
    205c:	02c9      	lsls	r1, r1, #11
    205e:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    2060:	4a19      	ldr	r2, [pc, #100]	; (20c8 <STACK_SIZE+0xc8>)
    2062:	629a      	str	r2, [r3, #40]	; 0x28
    2064:	4a19      	ldr	r2, [pc, #100]	; (20cc <STACK_SIZE+0xcc>)
    2066:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    2068:	2252      	movs	r2, #82	; 0x52
    206a:	5c99      	ldrb	r1, [r3, r2]
    206c:	2004      	movs	r0, #4
    206e:	4381      	bics	r1, r0
    2070:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2072:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2074:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2076:	4329      	orrs	r1, r5
    2078:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    207a:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    207c:	2139      	movs	r1, #57	; 0x39
    207e:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    2080:	43ba      	bics	r2, r7
	tmp |= PORT_PMUX_PMUXE(data);
    2082:	4660      	mov	r0, ip
    2084:	4302      	orrs	r2, r0
    2086:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2088:	545a      	strb	r2, [r3, r1]
	spi_m_sync_init(&EXT_SPI, SERCOM3);
    208a:	490a      	ldr	r1, [pc, #40]	; (20b4 <STACK_SIZE+0xb4>)
    208c:	480a      	ldr	r0, [pc, #40]	; (20b8 <STACK_SIZE+0xb8>)
    208e:	f7fe fa5d 	bl	54c <spi_m_sync_init>
	spi_m_sync_get_io_descriptor(&EXT_SPI, &ext_spi);
    2092:	490f      	ldr	r1, [pc, #60]	; (20d0 <STACK_SIZE+0xd0>)
    2094:	4808      	ldr	r0, [pc, #32]	; (20b8 <STACK_SIZE+0xb8>)
    2096:	f7fe fae5 	bl	664 <spi_m_sync_get_io_descriptor>
	spi_m_sync_enable(&EXT_SPI);
    209a:	4807      	ldr	r0, [pc, #28]	; (20b8 <STACK_SIZE+0xb8>)
    209c:	f7fe fa7e 	bl	59c <spi_m_sync_enable>
}
    20a0:	bc04      	pop	{r2}
    20a2:	4691      	mov	r9, r2
    20a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    20a6:	46c0      	nop			; (mov r8, r8)
    20a8:	40000400 	.word	0x40000400
    20ac:	00004010 	.word	0x00004010
    20b0:	40000c00 	.word	0x40000c00
    20b4:	42001400 	.word	0x42001400
    20b8:	20000bd4 	.word	0x20000bd4
    20bc:	41004400 	.word	0x41004400
    20c0:	c0000001 	.word	0xc0000001
    20c4:	c0000002 	.word	0xc0000002
    20c8:	40020000 	.word	0x40020000
    20cc:	c0020004 	.word	0xc0020004
    20d0:	20000bd0 	.word	0x20000bd0

000020d4 <EXT_I2C_init>:
void EXT_I2C_init(void){
    20d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    20d6:	4a1e      	ldr	r2, [pc, #120]	; (2150 <EXT_I2C_init+0x7c>)
    20d8:	6a13      	ldr	r3, [r2, #32]
    20da:	2110      	movs	r1, #16
    20dc:	430b      	orrs	r3, r1
    20de:	6213      	str	r3, [r2, #32]
    20e0:	4b1c      	ldr	r3, [pc, #112]	; (2154 <EXT_I2C_init+0x80>)
    20e2:	4a1d      	ldr	r2, [pc, #116]	; (2158 <EXT_I2C_init+0x84>)
    20e4:	805a      	strh	r2, [r3, #2]
    20e6:	4a1d      	ldr	r2, [pc, #116]	; (215c <EXT_I2C_init+0x88>)
    20e8:	805a      	strh	r2, [r3, #2]
	i2c_m_sync_init(&EXT_I2C, SERCOM2);
    20ea:	4c1d      	ldr	r4, [pc, #116]	; (2160 <EXT_I2C_init+0x8c>)
    20ec:	491d      	ldr	r1, [pc, #116]	; (2164 <EXT_I2C_init+0x90>)
    20ee:	0020      	movs	r0, r4
    20f0:	f7fe f92e 	bl	350 <i2c_m_sync_init>
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    20f4:	4b1c      	ldr	r3, [pc, #112]	; (2168 <EXT_I2C_init+0x94>)
    20f6:	204c      	movs	r0, #76	; 0x4c
    20f8:	5c19      	ldrb	r1, [r3, r0]
    20fa:	2204      	movs	r2, #4
    20fc:	4391      	bics	r1, r2
    20fe:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2100:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2102:	2601      	movs	r6, #1
    2104:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2106:	2501      	movs	r5, #1
    2108:	4329      	orrs	r1, r5
    210a:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    210c:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    210e:	3816      	subs	r0, #22
    2110:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    2112:	270f      	movs	r7, #15
    2114:	43b9      	bics	r1, r7
	tmp |= PORT_PMUX_PMUXE(data);
    2116:	2702      	movs	r7, #2
    2118:	4339      	orrs	r1, r7
    211a:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    211c:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    211e:	214d      	movs	r1, #77	; 0x4d
    2120:	5c5f      	ldrb	r7, [r3, r1]
    2122:	4397      	bics	r7, r2
    2124:	545f      	strb	r7, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2126:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2128:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    212a:	432a      	orrs	r2, r5
    212c:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    212e:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2130:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    2132:	393e      	subs	r1, #62	; 0x3e
    2134:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
    2136:	2120      	movs	r1, #32
    2138:	430a      	orrs	r2, r1
    213a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    213c:	541a      	strb	r2, [r3, r0]
	i2c_m_sync_get_io_descriptor(&EXT_I2C, &ext_i2c);
    213e:	490b      	ldr	r1, [pc, #44]	; (216c <EXT_I2C_init+0x98>)
    2140:	0020      	movs	r0, r4
    2142:	f7fe f973 	bl	42c <i2c_m_sync_get_io_descriptor>
	i2c_m_sync_enable(&EXT_I2C);
    2146:	0020      	movs	r0, r4
    2148:	f7fe f91e 	bl	388 <i2c_m_sync_enable>
}
    214c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    214e:	46c0      	nop			; (mov r8, r8)
    2150:	40000400 	.word	0x40000400
    2154:	40000c00 	.word	0x40000c00
    2158:	0000400f 	.word	0x0000400f
    215c:	0000430c 	.word	0x0000430c
    2160:	20000c34 	.word	0x20000c34
    2164:	42001000 	.word	0x42001000
    2168:	41004400 	.word	0x41004400
    216c:	20000c08 	.word	0x20000c08

00002170 <I2C_write_batch>:
bool I2C_write_batch(uint8_t addres, uint8_t *data, uint8_t data_len){
    2170:	b570      	push	{r4, r5, r6, lr}
    2172:	000d      	movs	r5, r1
    2174:	0014      	movs	r4, r2
	i2c_m_sync_set_slaveaddr(&EXT_I2C, addres, I2C_M_SEVEN);
    2176:	b201      	sxth	r1, r0
    2178:	4e0a      	ldr	r6, [pc, #40]	; (21a4 <I2C_write_batch+0x34>)
    217a:	2280      	movs	r2, #128	; 0x80
    217c:	0112      	lsls	r2, r2, #4
    217e:	0030      	movs	r0, r6
    2180:	f7fe f906 	bl	390 <i2c_m_sync_set_slaveaddr>
	i2c_m_sync_cmd_write(&EXT_I2C, 0x00, data, data_len);
    2184:	0023      	movs	r3, r4
    2186:	002a      	movs	r2, r5
    2188:	2100      	movs	r1, #0
    218a:	0030      	movs	r0, r6
    218c:	f7fe f90a 	bl	3a4 <i2c_m_sync_cmd_write>
	return (io_write(ext_i2c, (uint8_t *)data, data_len) >= 0) ? true : false;
    2190:	b2a2      	uxth	r2, r4
    2192:	4b05      	ldr	r3, [pc, #20]	; (21a8 <I2C_write_batch+0x38>)
    2194:	6818      	ldr	r0, [r3, #0]
    2196:	0029      	movs	r1, r5
    2198:	f7fe f94c 	bl	434 <io_write>
    219c:	43c0      	mvns	r0, r0
    219e:	0fc0      	lsrs	r0, r0, #31
}
    21a0:	bd70      	pop	{r4, r5, r6, pc}
    21a2:	46c0      	nop			; (mov r8, r8)
    21a4:	20000c34 	.word	0x20000c34
    21a8:	20000c08 	.word	0x20000c08

000021ac <I2C_read_batch>:
bool I2C_read_batch(uint8_t addres, uint8_t reg ,uint8_t *data, uint8_t data_len){
    21ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    21ae:	000c      	movs	r4, r1
    21b0:	0015      	movs	r5, r2
    21b2:	001e      	movs	r6, r3
	i2c_m_sync_set_slaveaddr(&EXT_I2C, addres, I2C_M_SEVEN);
    21b4:	b201      	sxth	r1, r0
    21b6:	4f06      	ldr	r7, [pc, #24]	; (21d0 <I2C_read_batch+0x24>)
    21b8:	2280      	movs	r2, #128	; 0x80
    21ba:	0112      	lsls	r2, r2, #4
    21bc:	0038      	movs	r0, r7
    21be:	f7fe f8e7 	bl	390 <i2c_m_sync_set_slaveaddr>
	i2c_m_sync_cmd_read(&EXT_I2C, reg, data, data_len);
    21c2:	0033      	movs	r3, r6
    21c4:	002a      	movs	r2, r5
    21c6:	0021      	movs	r1, r4
    21c8:	0038      	movs	r0, r7
    21ca:	f7fe f90d 	bl	3e8 <i2c_m_sync_cmd_read>
}
    21ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    21d0:	20000c34 	.word	0x20000c34

000021d4 <PWM_init>:
void PWM_init(void){
    21d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    21d6:	46de      	mov	lr, fp
    21d8:	4657      	mov	r7, sl
    21da:	464e      	mov	r6, r9
    21dc:	4645      	mov	r5, r8
    21de:	b5e0      	push	{r5, r6, r7, lr}
    21e0:	4d2d      	ldr	r5, [pc, #180]	; (2298 <PWM_init+0xc4>)
    21e2:	6a2a      	ldr	r2, [r5, #32]
    21e4:	2380      	movs	r3, #128	; 0x80
    21e6:	01db      	lsls	r3, r3, #7
    21e8:	4313      	orrs	r3, r2
    21ea:	622b      	str	r3, [r5, #32]
    21ec:	4b2b      	ldr	r3, [pc, #172]	; (229c <PWM_init+0xc8>)
    21ee:	469a      	mov	sl, r3
    21f0:	4b2b      	ldr	r3, [pc, #172]	; (22a0 <PWM_init+0xcc>)
    21f2:	469b      	mov	fp, r3
    21f4:	4653      	mov	r3, sl
    21f6:	465a      	mov	r2, fp
    21f8:	805a      	strh	r2, [r3, #2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    21fa:	4c2a      	ldr	r4, [pc, #168]	; (22a4 <PWM_init+0xd0>)
    21fc:	22d1      	movs	r2, #209	; 0xd1
    21fe:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2200:	2101      	movs	r1, #1
    2202:	4689      	mov	r9, r1
    2204:	438b      	bics	r3, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2206:	4688      	mov	r8, r1
    2208:	4641      	mov	r1, r8
    220a:	430b      	orrs	r3, r1
    220c:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    220e:	54a3      	strb	r3, [r4, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2210:	3a19      	subs	r2, #25
    2212:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    2214:	270f      	movs	r7, #15
    2216:	403b      	ands	r3, r7
	tmp |= PORT_PMUX_PMUXO(data);
    2218:	2640      	movs	r6, #64	; 0x40
    221a:	4333      	orrs	r3, r6
    221c:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    221e:	54a3      	strb	r3, [r4, r2]
	pwm_init(&PWM_0, TC6, _tc_get_pwm());
    2220:	f7ff fb86 	bl	1930 <_tc_get_pwm>
    2224:	0002      	movs	r2, r0
    2226:	4920      	ldr	r1, [pc, #128]	; (22a8 <PWM_init+0xd4>)
    2228:	4820      	ldr	r0, [pc, #128]	; (22ac <PWM_init+0xd8>)
    222a:	f7fe f943 	bl	4b4 <pwm_init>
    222e:	6a2a      	ldr	r2, [r5, #32]
    2230:	2380      	movs	r3, #128	; 0x80
    2232:	021b      	lsls	r3, r3, #8
    2234:	4313      	orrs	r3, r2
    2236:	622b      	str	r3, [r5, #32]
    2238:	4653      	mov	r3, sl
    223a:	465a      	mov	r2, fp
    223c:	805a      	strh	r2, [r3, #2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    223e:	2255      	movs	r2, #85	; 0x55
    2240:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    2242:	4649      	mov	r1, r9
    2244:	438b      	bics	r3, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2246:	4641      	mov	r1, r8
    2248:	430b      	orrs	r3, r1
    224a:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    224c:	54a3      	strb	r3, [r4, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    224e:	3a1b      	subs	r2, #27
    2250:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    2252:	401f      	ands	r7, r3
	tmp |= PORT_PMUX_PMUXO(data);
    2254:	433e      	orrs	r6, r7
    2256:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2258:	54a6      	strb	r6, [r4, r2]
	pwm_init(&PWM_1, TC7, _tc_get_pwm());
    225a:	f7ff fb69 	bl	1930 <_tc_get_pwm>
    225e:	0002      	movs	r2, r0
    2260:	4c13      	ldr	r4, [pc, #76]	; (22b0 <PWM_init+0xdc>)
    2262:	4914      	ldr	r1, [pc, #80]	; (22b4 <PWM_init+0xe0>)
    2264:	0020      	movs	r0, r4
    2266:	f7fe f925 	bl	4b4 <pwm_init>
	pwm_set_parameters(&PWM_0, 5000, 0);
    226a:	4d13      	ldr	r5, [pc, #76]	; (22b8 <PWM_init+0xe4>)
    226c:	2200      	movs	r2, #0
    226e:	0029      	movs	r1, r5
    2270:	480e      	ldr	r0, [pc, #56]	; (22ac <PWM_init+0xd8>)
    2272:	f7fe f957 	bl	524 <pwm_set_parameters>
	pwm_set_parameters(&PWM_1, 5000, 0);
    2276:	2200      	movs	r2, #0
    2278:	0029      	movs	r1, r5
    227a:	0020      	movs	r0, r4
    227c:	f7fe f952 	bl	524 <pwm_set_parameters>
	pwm_enable(&PWM_0);
    2280:	480a      	ldr	r0, [pc, #40]	; (22ac <PWM_init+0xd8>)
    2282:	f7fe f937 	bl	4f4 <pwm_enable>
	pwm_enable(&PWM_1);
    2286:	0020      	movs	r0, r4
    2288:	f7fe f934 	bl	4f4 <pwm_enable>
}
    228c:	bc3c      	pop	{r2, r3, r4, r5}
    228e:	4690      	mov	r8, r2
    2290:	4699      	mov	r9, r3
    2292:	46a2      	mov	sl, r4
    2294:	46ab      	mov	fp, r5
    2296:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2298:	40000400 	.word	0x40000400
    229c:	40000c00 	.word	0x40000c00
    22a0:	00004016 	.word	0x00004016
    22a4:	41004400 	.word	0x41004400
    22a8:	42003800 	.word	0x42003800
    22ac:	20000b18 	.word	0x20000b18
    22b0:	20000b74 	.word	0x20000b74
    22b4:	42003c00 	.word	0x42003c00
    22b8:	00001388 	.word	0x00001388

000022bc <DEBUG_Serial_init>:
void DEBUG_Serial_init(void){
    22bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    22be:	4a19      	ldr	r2, [pc, #100]	; (2324 <DEBUG_Serial_init+0x68>)
    22c0:	6a13      	ldr	r3, [r2, #32]
    22c2:	2140      	movs	r1, #64	; 0x40
    22c4:	430b      	orrs	r3, r1
    22c6:	6213      	str	r3, [r2, #32]
    22c8:	4a17      	ldr	r2, [pc, #92]	; (2328 <DEBUG_Serial_init+0x6c>)
    22ca:	4b18      	ldr	r3, [pc, #96]	; (232c <DEBUG_Serial_init+0x70>)
    22cc:	805a      	strh	r2, [r3, #2]
	usart_sync_init(&DEBUG_SERIAL, SERCOM4, (void *)NULL);
    22ce:	2200      	movs	r2, #0
    22d0:	4917      	ldr	r1, [pc, #92]	; (2330 <DEBUG_Serial_init+0x74>)
    22d2:	4818      	ldr	r0, [pc, #96]	; (2334 <DEBUG_Serial_init+0x78>)
    22d4:	f7fe fb14 	bl	900 <usart_sync_init>
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    22d8:	4b17      	ldr	r3, [pc, #92]	; (2338 <DEBUG_Serial_init+0x7c>)
    22da:	21cc      	movs	r1, #204	; 0xcc
    22dc:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    22de:	2401      	movs	r4, #1
    22e0:	43a2      	bics	r2, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    22e2:	2701      	movs	r7, #1
    22e4:	433a      	orrs	r2, r7
    22e6:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    22e8:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    22ea:	22b6      	movs	r2, #182	; 0xb6
    22ec:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    22ee:	260f      	movs	r6, #15
    22f0:	43b0      	bics	r0, r6
	tmp |= PORT_PMUX_PMUXE(data);
    22f2:	2502      	movs	r5, #2
    22f4:	4328      	orrs	r0, r5
    22f6:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    22f8:	5498      	strb	r0, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    22fa:	3218      	adds	r2, #24
    22fc:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    22fe:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    2300:	4339      	orrs	r1, r7
    2302:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2304:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2306:	21b7      	movs	r1, #183	; 0xb7
    2308:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    230a:	43b2      	bics	r2, r6
	tmp |= PORT_PMUX_PMUXE(data);
    230c:	432a      	orrs	r2, r5
    230e:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2310:	545a      	strb	r2, [r3, r1]
	usart_sync_get_io_descriptor(&DEBUG_SERIAL, &debug_serial);
    2312:	490a      	ldr	r1, [pc, #40]	; (233c <DEBUG_Serial_init+0x80>)
    2314:	4807      	ldr	r0, [pc, #28]	; (2334 <DEBUG_Serial_init+0x78>)
    2316:	f7fe fb27 	bl	968 <usart_sync_get_io_descriptor>
	usart_sync_enable(&DEBUG_SERIAL);
    231a:	4806      	ldr	r0, [pc, #24]	; (2334 <DEBUG_Serial_init+0x78>)
    231c:	f7fe fb12 	bl	944 <usart_sync_enable>
}
    2320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2322:	46c0      	nop			; (mov r8, r8)
    2324:	40000400 	.word	0x40000400
    2328:	00004011 	.word	0x00004011
    232c:	40000c00 	.word	0x40000c00
    2330:	42001800 	.word	0x42001800
    2334:	20000c0c 	.word	0x20000c0c
    2338:	41004400 	.word	0x41004400
    233c:	20000c04 	.word	0x20000c04

00002340 <mcu_init>:
{
    2340:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
    2342:	f7fe fb77 	bl	a34 <_init_chip>
	gpio_init();
    2346:	f7ff fc17 	bl	1b78 <gpio_init>
	ETH_SPI_init();
    234a:	f7ff fd6d 	bl	1e28 <ETH_SPI_init>
	EXT_SPI_init();
    234e:	f7ff fe3d 	bl	1fcc <EXT_SPI_init>
	EXT_I2C_init();
    2352:	f7ff febf 	bl	20d4 <EXT_I2C_init>
	PWM_init();
    2356:	f7ff ff3d 	bl	21d4 <PWM_init>
	DEBUG_Serial_init();
    235a:	f7ff ffaf 	bl	22bc <DEBUG_Serial_init>
	ext_irq_register(ETH_INT, ETH_Handler);
    235e:	4904      	ldr	r1, [pc, #16]	; (2370 <mcu_init+0x30>)
    2360:	2028      	movs	r0, #40	; 0x28
    2362:	f7fd ff5b 	bl	21c <ext_irq_register>
	TIMER_IRQ_init();
    2366:	f7ff fbbf 	bl	1ae8 <TIMER_IRQ_init>
	EXT_IRG_init();
    236a:	f7ff fd2f 	bl	1dcc <EXT_IRG_init>
}
    236e:	bd10      	pop	{r4, pc}
    2370:	00001acf 	.word	0x00001acf

00002374 <adcRequest>:
	uint8_t retVal = adcConversionRequest;
    2374:	4b02      	ldr	r3, [pc, #8]	; (2380 <adcRequest+0xc>)
    2376:	7818      	ldrb	r0, [r3, #0]
	adcConversionRequest = 0;
    2378:	2200      	movs	r2, #0
    237a:	701a      	strb	r2, [r3, #0]
}
    237c:	4770      	bx	lr
    237e:	46c0      	nop			; (mov r8, r8)
    2380:	20000aac 	.word	0x20000aac

00002384 <close>:
   while(getSn_SR(sn) == SOCK_CLOSED);
   return (int8_t)sn;
}	   

int8_t close(uint8_t sn)
{
    2384:	b570      	push	{r4, r5, r6, lr}
    2386:	0006      	movs	r6, r0
	CHECK_SOCKNUM();
    2388:	2808      	cmp	r0, #8
    238a:	d82f      	bhi.n	23ec <close+0x68>
      while(getSn_CR(sn) != 0);
      while(getSn_SR(sn) != SOCK_UDP);
      sendto(sn,destip,1,destip,0x3000); // send the dummy data to an unknown destination(0.0.0.1).
   };   
#endif 
	setSn_CR(sn,Sn_CR_CLOSE);
    238c:	0084      	lsls	r4, r0, #2
    238e:	3401      	adds	r4, #1
    2390:	00e4      	lsls	r4, r4, #3
    2392:	1c65      	adds	r5, r4, #1
    2394:	35ff      	adds	r5, #255	; 0xff
    2396:	2110      	movs	r1, #16
    2398:	0028      	movs	r0, r5
    239a:	f000 fd6b 	bl	2e74 <WIZCHIP_WRITE>
   /* wait to process the command... */
	while( getSn_CR(sn) );
    239e:	0028      	movs	r0, r5
    23a0:	f000 fd36 	bl	2e10 <WIZCHIP_READ>
    23a4:	2800      	cmp	r0, #0
    23a6:	d1fa      	bne.n	239e <close+0x1a>
	/* clear all interrupt of the socket. */
	setSn_IR(sn, 0xFF);
    23a8:	2380      	movs	r3, #128	; 0x80
    23aa:	009b      	lsls	r3, r3, #2
    23ac:	18e0      	adds	r0, r4, r3
    23ae:	211f      	movs	r1, #31
    23b0:	f000 fd60 	bl	2e74 <WIZCHIP_WRITE>
	//A20150401 : Release the sock_io_mode of socket n.
	sock_io_mode &= ~(1<<sn);
    23b4:	2301      	movs	r3, #1
    23b6:	40b3      	lsls	r3, r6
    23b8:	43db      	mvns	r3, r3
    23ba:	b21b      	sxth	r3, r3
    23bc:	490d      	ldr	r1, [pc, #52]	; (23f4 <close+0x70>)
    23be:	880a      	ldrh	r2, [r1, #0]
    23c0:	401a      	ands	r2, r3
    23c2:	800a      	strh	r2, [r1, #0]
	//
	sock_is_sending &= ~(1<<sn);
    23c4:	490c      	ldr	r1, [pc, #48]	; (23f8 <close+0x74>)
    23c6:	880a      	ldrh	r2, [r1, #0]
    23c8:	4013      	ands	r3, r2
    23ca:	800b      	strh	r3, [r1, #0]
	sock_remained_size[sn] = 0;
    23cc:	0072      	lsls	r2, r6, #1
    23ce:	2100      	movs	r1, #0
    23d0:	4b0a      	ldr	r3, [pc, #40]	; (23fc <close+0x78>)
    23d2:	52d1      	strh	r1, [r2, r3]
	sock_pack_info[sn] = 0;
    23d4:	4b0a      	ldr	r3, [pc, #40]	; (2400 <close+0x7c>)
    23d6:	2200      	movs	r2, #0
    23d8:	559a      	strb	r2, [r3, r6]
	while(getSn_SR(sn) != SOCK_CLOSED);
    23da:	23c0      	movs	r3, #192	; 0xc0
    23dc:	009b      	lsls	r3, r3, #2
    23de:	18e0      	adds	r0, r4, r3
    23e0:	f000 fd16 	bl	2e10 <WIZCHIP_READ>
    23e4:	2800      	cmp	r0, #0
    23e6:	d1f8      	bne.n	23da <close+0x56>
	return SOCK_OK;
    23e8:	3001      	adds	r0, #1
}
    23ea:	bd70      	pop	{r4, r5, r6, pc}
	CHECK_SOCKNUM();
    23ec:	2001      	movs	r0, #1
    23ee:	4240      	negs	r0, r0
    23f0:	e7fb      	b.n	23ea <close+0x66>
    23f2:	46c0      	nop			; (mov r8, r8)
    23f4:	20000aae 	.word	0x20000aae
    23f8:	20000ab0 	.word	0x20000ab0
    23fc:	20000abc 	.word	0x20000abc
    2400:	20000ab4 	.word	0x20000ab4

00002404 <socket>:
{
    2404:	b5f0      	push	{r4, r5, r6, r7, lr}
    2406:	46c6      	mov	lr, r8
    2408:	b500      	push	{lr}
    240a:	b084      	sub	sp, #16
    240c:	0005      	movs	r5, r0
    240e:	000e      	movs	r6, r1
    2410:	4690      	mov	r8, r2
    2412:	001f      	movs	r7, r3
	CHECK_SOCKNUM();
    2414:	2808      	cmp	r0, #8
    2416:	d900      	bls.n	241a <socket+0x16>
    2418:	e092      	b.n	2540 <socket+0x13c>
	switch(protocol)
    241a:	2901      	cmp	r1, #1
    241c:	d069      	beq.n	24f2 <socket+0xee>
    241e:	2900      	cmp	r1, #0
    2420:	d100      	bne.n	2424 <socket+0x20>
    2422:	e090      	b.n	2546 <socket+0x142>
    2424:	2904      	cmp	r1, #4
    2426:	d900      	bls.n	242a <socket+0x26>
    2428:	e08d      	b.n	2546 <socket+0x142>
	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
    242a:	077b      	lsls	r3, r7, #29
    242c:	d500      	bpl.n	2430 <socket+0x2c>
    242e:	e08d      	b.n	254c <socket+0x148>
	if(flag != 0)
    2430:	2f00      	cmp	r7, #0
    2432:	d004      	beq.n	243e <socket+0x3a>
   	switch(protocol)
    2434:	2e01      	cmp	r6, #1
    2436:	d069      	beq.n	250c <socket+0x108>
    2438:	2e02      	cmp	r6, #2
    243a:	d100      	bne.n	243e <socket+0x3a>
    243c:	e06d      	b.n	251a <socket+0x116>
	close(sn);
    243e:	0028      	movs	r0, r5
    2440:	f7ff ffa0 	bl	2384 <close>
	   setSn_MR(sn, (protocol | (flag & 0xF0)));
    2444:	00ac      	lsls	r4, r5, #2
    2446:	3401      	adds	r4, #1
    2448:	00e4      	lsls	r4, r4, #3
    244a:	230f      	movs	r3, #15
    244c:	0039      	movs	r1, r7
    244e:	4399      	bics	r1, r3
    2450:	b249      	sxtb	r1, r1
    2452:	4331      	orrs	r1, r6
    2454:	b2c9      	uxtb	r1, r1
    2456:	0020      	movs	r0, r4
    2458:	f000 fd0c 	bl	2e74 <WIZCHIP_WRITE>
	if(!port)
    245c:	4643      	mov	r3, r8
    245e:	2b00      	cmp	r3, #0
    2460:	d108      	bne.n	2474 <socket+0x70>
	   port = sock_any_port++;
    2462:	4a3d      	ldr	r2, [pc, #244]	; (2558 <socket+0x154>)
    2464:	8813      	ldrh	r3, [r2, #0]
    2466:	4698      	mov	r8, r3
    2468:	3301      	adds	r3, #1
    246a:	b29b      	uxth	r3, r3
    246c:	8013      	strh	r3, [r2, #0]
	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
    246e:	4a3b      	ldr	r2, [pc, #236]	; (255c <socket+0x158>)
    2470:	4293      	cmp	r3, r2
    2472:	d061      	beq.n	2538 <socket+0x134>
   setSn_PORT(sn,port);	
    2474:	2380      	movs	r3, #128	; 0x80
    2476:	00db      	lsls	r3, r3, #3
    2478:	18e0      	adds	r0, r4, r3
    247a:	4643      	mov	r3, r8
    247c:	0a19      	lsrs	r1, r3, #8
    247e:	f000 fcf9 	bl	2e74 <WIZCHIP_WRITE>
    2482:	4643      	mov	r3, r8
    2484:	466a      	mov	r2, sp
    2486:	71d3      	strb	r3, [r2, #7]
    2488:	79d1      	ldrb	r1, [r2, #7]
    248a:	23a0      	movs	r3, #160	; 0xa0
    248c:	00db      	lsls	r3, r3, #3
    248e:	18e0      	adds	r0, r4, r3
    2490:	f000 fcf0 	bl	2e74 <WIZCHIP_WRITE>
   setSn_CR(sn,Sn_CR_OPEN);
    2494:	1c66      	adds	r6, r4, #1
    2496:	36ff      	adds	r6, #255	; 0xff
    2498:	2101      	movs	r1, #1
    249a:	0030      	movs	r0, r6
    249c:	f000 fcea 	bl	2e74 <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    24a0:	0030      	movs	r0, r6
    24a2:	f000 fcb5 	bl	2e10 <WIZCHIP_READ>
    24a6:	2800      	cmp	r0, #0
    24a8:	d1fa      	bne.n	24a0 <socket+0x9c>
   sock_io_mode &= ~(1 <<sn);
    24aa:	2201      	movs	r2, #1
    24ac:	40aa      	lsls	r2, r5
    24ae:	43d2      	mvns	r2, r2
    24b0:	b212      	sxth	r2, r2
    24b2:	482b      	ldr	r0, [pc, #172]	; (2560 <socket+0x15c>)
    24b4:	8803      	ldrh	r3, [r0, #0]
    24b6:	4013      	ands	r3, r2
    24b8:	b21b      	sxth	r3, r3
	sock_io_mode |= ((flag & SF_IO_NONBLOCK) << sn);   
    24ba:	2101      	movs	r1, #1
    24bc:	400f      	ands	r7, r1
    24be:	40af      	lsls	r7, r5
    24c0:	433b      	orrs	r3, r7
    24c2:	8003      	strh	r3, [r0, #0]
   sock_is_sending &= ~(1<<sn);
    24c4:	4927      	ldr	r1, [pc, #156]	; (2564 <socket+0x160>)
    24c6:	880b      	ldrh	r3, [r1, #0]
    24c8:	401a      	ands	r2, r3
    24ca:	800a      	strh	r2, [r1, #0]
   sock_remained_size[sn] = 0;
    24cc:	006b      	lsls	r3, r5, #1
    24ce:	2100      	movs	r1, #0
    24d0:	4a25      	ldr	r2, [pc, #148]	; (2568 <socket+0x164>)
    24d2:	5299      	strh	r1, [r3, r2]
   sock_pack_info[sn] = PACK_COMPLETED;
    24d4:	4b25      	ldr	r3, [pc, #148]	; (256c <socket+0x168>)
    24d6:	2200      	movs	r2, #0
    24d8:	555a      	strb	r2, [r3, r5]
   while(getSn_SR(sn) == SOCK_CLOSED);
    24da:	23c0      	movs	r3, #192	; 0xc0
    24dc:	009b      	lsls	r3, r3, #2
    24de:	18e0      	adds	r0, r4, r3
    24e0:	f000 fc96 	bl	2e10 <WIZCHIP_READ>
    24e4:	2800      	cmp	r0, #0
    24e6:	d0f8      	beq.n	24da <socket+0xd6>
   return (int8_t)sn;
    24e8:	b268      	sxtb	r0, r5
}	   
    24ea:	b004      	add	sp, #16
    24ec:	bc04      	pop	{r2}
    24ee:	4690      	mov	r8, r2
    24f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            getSIPR((uint8_t*)&taddr);
    24f2:	2204      	movs	r2, #4
    24f4:	a903      	add	r1, sp, #12
    24f6:	20f0      	movs	r0, #240	; 0xf0
    24f8:	0100      	lsls	r0, r0, #4
    24fa:	f000 fceb 	bl	2ed4 <WIZCHIP_READ_BUF>
            if(taddr == 0) return SOCKERR_SOCKINIT;
    24fe:	9b03      	ldr	r3, [sp, #12]
    2500:	2b00      	cmp	r3, #0
    2502:	d000      	beq.n	2506 <socket+0x102>
    2504:	e791      	b.n	242a <socket+0x26>
    2506:	2003      	movs	r0, #3
    2508:	4240      	negs	r0, r0
    250a:	e7ee      	b.n	24ea <socket+0xe6>
   		     if((flag & (SF_TCP_NODELAY|SF_IO_NONBLOCK))==0) return SOCKERR_SOCKFLAG;
    250c:	2321      	movs	r3, #33	; 0x21
    250e:	423b      	tst	r3, r7
    2510:	d000      	beq.n	2514 <socket+0x110>
    2512:	e794      	b.n	243e <socket+0x3a>
    2514:	2006      	movs	r0, #6
    2516:	4240      	negs	r0, r0
    2518:	e7e7      	b.n	24ea <socket+0xe6>
   	      if(flag & SF_IGMP_VER2)
    251a:	06bb      	lsls	r3, r7, #26
    251c:	d502      	bpl.n	2524 <socket+0x120>
   	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
    251e:	b27b      	sxtb	r3, r7
    2520:	2b00      	cmp	r3, #0
    2522:	da16      	bge.n	2552 <socket+0x14e>
      	      if(flag & SF_UNI_BLOCK)
    2524:	06fb      	lsls	r3, r7, #27
    2526:	d400      	bmi.n	252a <socket+0x126>
    2528:	e789      	b.n	243e <socket+0x3a>
      	         if((flag & SF_MULTI_ENABLE) == 0) return SOCKERR_SOCKFLAG;
    252a:	b27b      	sxtb	r3, r7
    252c:	2b00      	cmp	r3, #0
    252e:	da00      	bge.n	2532 <socket+0x12e>
    2530:	e785      	b.n	243e <socket+0x3a>
    2532:	2006      	movs	r0, #6
    2534:	4240      	negs	r0, r0
    2536:	e7d8      	b.n	24ea <socket+0xe6>
	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
    2538:	4a0d      	ldr	r2, [pc, #52]	; (2570 <socket+0x16c>)
    253a:	4b07      	ldr	r3, [pc, #28]	; (2558 <socket+0x154>)
    253c:	801a      	strh	r2, [r3, #0]
    253e:	e799      	b.n	2474 <socket+0x70>
	CHECK_SOCKNUM();
    2540:	2001      	movs	r0, #1
    2542:	4240      	negs	r0, r0
    2544:	e7d1      	b.n	24ea <socket+0xe6>
         return SOCKERR_SOCKMODE;
    2546:	2005      	movs	r0, #5
    2548:	4240      	negs	r0, r0
    254a:	e7ce      	b.n	24ea <socket+0xe6>
	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
    254c:	2006      	movs	r0, #6
    254e:	4240      	negs	r0, r0
    2550:	e7cb      	b.n	24ea <socket+0xe6>
   	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
    2552:	2006      	movs	r0, #6
    2554:	4240      	negs	r0, r0
    2556:	e7c8      	b.n	24ea <socket+0xe6>
    2558:	20000028 	.word	0x20000028
    255c:	0000fff0 	.word	0x0000fff0
    2560:	20000aae 	.word	0x20000aae
    2564:	20000ab0 	.word	0x20000ab0
    2568:	20000abc 	.word	0x20000abc
    256c:	20000ab4 	.word	0x20000ab4
    2570:	ffffc000 	.word	0xffffc000

00002574 <listen>:

int8_t listen(uint8_t sn)
{
    2574:	b570      	push	{r4, r5, r6, lr}
    2576:	0006      	movs	r6, r0
	CHECK_SOCKNUM();
    2578:	2808      	cmp	r0, #8
    257a:	d829      	bhi.n	25d0 <listen+0x5c>
   CHECK_SOCKMODE(Sn_MR_TCP);
    257c:	0084      	lsls	r4, r0, #2
    257e:	3401      	adds	r4, #1
    2580:	00e4      	lsls	r4, r4, #3
    2582:	0020      	movs	r0, r4
    2584:	f000 fc44 	bl	2e10 <WIZCHIP_READ>
    2588:	230f      	movs	r3, #15
    258a:	4018      	ands	r0, r3
    258c:	2801      	cmp	r0, #1
    258e:	d122      	bne.n	25d6 <listen+0x62>
	CHECK_SOCKINIT();
    2590:	23c0      	movs	r3, #192	; 0xc0
    2592:	009b      	lsls	r3, r3, #2
    2594:	18e5      	adds	r5, r4, r3
    2596:	0028      	movs	r0, r5
    2598:	f000 fc3a 	bl	2e10 <WIZCHIP_READ>
    259c:	2813      	cmp	r0, #19
    259e:	d11d      	bne.n	25dc <listen+0x68>
	setSn_CR(sn,Sn_CR_LISTEN);
    25a0:	3401      	adds	r4, #1
    25a2:	34ff      	adds	r4, #255	; 0xff
    25a4:	2102      	movs	r1, #2
    25a6:	0020      	movs	r0, r4
    25a8:	f000 fc64 	bl	2e74 <WIZCHIP_WRITE>
	while(getSn_CR(sn));
    25ac:	0020      	movs	r0, r4
    25ae:	f000 fc2f 	bl	2e10 <WIZCHIP_READ>
    25b2:	2800      	cmp	r0, #0
    25b4:	d1fa      	bne.n	25ac <listen+0x38>
   while(getSn_SR(sn) != SOCK_LISTEN)
    25b6:	0028      	movs	r0, r5
    25b8:	f000 fc2a 	bl	2e10 <WIZCHIP_READ>
    25bc:	2814      	cmp	r0, #20
    25be:	d101      	bne.n	25c4 <listen+0x50>
   {
         close(sn);
         return SOCKERR_SOCKCLOSED;
   }
   return SOCK_OK;
    25c0:	3813      	subs	r0, #19
}
    25c2:	bd70      	pop	{r4, r5, r6, pc}
         close(sn);
    25c4:	0030      	movs	r0, r6
    25c6:	f7ff fedd 	bl	2384 <close>
         return SOCKERR_SOCKCLOSED;
    25ca:	2004      	movs	r0, #4
    25cc:	4240      	negs	r0, r0
    25ce:	e7f8      	b.n	25c2 <listen+0x4e>
	CHECK_SOCKNUM();
    25d0:	2001      	movs	r0, #1
    25d2:	4240      	negs	r0, r0
    25d4:	e7f5      	b.n	25c2 <listen+0x4e>
   CHECK_SOCKMODE(Sn_MR_TCP);
    25d6:	2005      	movs	r0, #5
    25d8:	4240      	negs	r0, r0
    25da:	e7f2      	b.n	25c2 <listen+0x4e>
	CHECK_SOCKINIT();
    25dc:	2003      	movs	r0, #3
    25de:	4240      	negs	r0, r0
    25e0:	e7ef      	b.n	25c2 <listen+0x4e>
	...

000025e4 <disconnect>:
   
   return SOCK_OK;
}

int8_t disconnect(uint8_t sn)
{
    25e4:	b570      	push	{r4, r5, r6, lr}
    25e6:	0006      	movs	r6, r0
   CHECK_SOCKNUM();
    25e8:	2808      	cmp	r0, #8
    25ea:	d836      	bhi.n	265a <disconnect+0x76>
   CHECK_SOCKMODE(Sn_MR_TCP);
    25ec:	0084      	lsls	r4, r0, #2
    25ee:	3401      	adds	r4, #1
    25f0:	00e4      	lsls	r4, r4, #3
    25f2:	0020      	movs	r0, r4
    25f4:	f000 fc0c 	bl	2e10 <WIZCHIP_READ>
    25f8:	230f      	movs	r3, #15
    25fa:	4018      	ands	r0, r3
    25fc:	2801      	cmp	r0, #1
    25fe:	d12f      	bne.n	2660 <disconnect+0x7c>
	setSn_CR(sn,Sn_CR_DISCON);
    2600:	1c65      	adds	r5, r4, #1
    2602:	35ff      	adds	r5, #255	; 0xff
    2604:	2108      	movs	r1, #8
    2606:	0028      	movs	r0, r5
    2608:	f000 fc34 	bl	2e74 <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn));
    260c:	0028      	movs	r0, r5
    260e:	f000 fbff 	bl	2e10 <WIZCHIP_READ>
    2612:	2800      	cmp	r0, #0
    2614:	d1fa      	bne.n	260c <disconnect+0x28>
	sock_is_sending &= ~(1<<sn);
    2616:	2201      	movs	r2, #1
    2618:	0010      	movs	r0, r2
    261a:	40b0      	lsls	r0, r6
    261c:	4913      	ldr	r1, [pc, #76]	; (266c <disconnect+0x88>)
    261e:	880b      	ldrh	r3, [r1, #0]
    2620:	4383      	bics	r3, r0
    2622:	800b      	strh	r3, [r1, #0]
   if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
    2624:	4b12      	ldr	r3, [pc, #72]	; (2670 <disconnect+0x8c>)
    2626:	881b      	ldrh	r3, [r3, #0]
    2628:	4133      	asrs	r3, r6
    262a:	421a      	tst	r2, r3
    262c:	d11b      	bne.n	2666 <disconnect+0x82>
	while(getSn_SR(sn) != SOCK_CLOSED)
    262e:	23c0      	movs	r3, #192	; 0xc0
    2630:	009b      	lsls	r3, r3, #2
    2632:	18e0      	adds	r0, r4, r3
    2634:	f000 fbec 	bl	2e10 <WIZCHIP_READ>
    2638:	2800      	cmp	r0, #0
    263a:	d00c      	beq.n	2656 <disconnect+0x72>
	{
	   if(getSn_IR(sn) & Sn_IR_TIMEOUT)
    263c:	2380      	movs	r3, #128	; 0x80
    263e:	009b      	lsls	r3, r3, #2
    2640:	18e0      	adds	r0, r4, r3
    2642:	f000 fbe5 	bl	2e10 <WIZCHIP_READ>
    2646:	0703      	lsls	r3, r0, #28
    2648:	d5f1      	bpl.n	262e <disconnect+0x4a>
	   {
	      close(sn);
    264a:	0030      	movs	r0, r6
    264c:	f7ff fe9a 	bl	2384 <close>
	      return SOCKERR_TIMEOUT;
    2650:	200d      	movs	r0, #13
    2652:	4240      	negs	r0, r0
    2654:	e008      	b.n	2668 <disconnect+0x84>
	   }
	}
	return SOCK_OK;
    2656:	3001      	adds	r0, #1
    2658:	e006      	b.n	2668 <disconnect+0x84>
   CHECK_SOCKNUM();
    265a:	2001      	movs	r0, #1
    265c:	4240      	negs	r0, r0
    265e:	e003      	b.n	2668 <disconnect+0x84>
   CHECK_SOCKMODE(Sn_MR_TCP);
    2660:	2005      	movs	r0, #5
    2662:	4240      	negs	r0, r0
    2664:	e000      	b.n	2668 <disconnect+0x84>
   if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
    2666:	2000      	movs	r0, #0
}
    2668:	bd70      	pop	{r4, r5, r6, pc}
    266a:	46c0      	nop			; (mov r8, r8)
    266c:	20000ab0 	.word	0x20000ab0
    2670:	20000aae 	.word	0x20000aae

00002674 <send>:

int32_t send(uint8_t sn, uint8_t * buf, uint16_t len)
{
    2674:	b5f0      	push	{r4, r5, r6, r7, lr}
    2676:	46c6      	mov	lr, r8
    2678:	b500      	push	{lr}
    267a:	b082      	sub	sp, #8
    267c:	0004      	movs	r4, r0
    267e:	9101      	str	r1, [sp, #4]
    2680:	0017      	movs	r7, r2
   uint8_t tmp=0;
   uint16_t freesize=0;
   
   CHECK_SOCKNUM();
    2682:	2808      	cmp	r0, #8
    2684:	d900      	bls.n	2688 <send+0x14>
    2686:	e080      	b.n	278a <send+0x116>
   CHECK_SOCKMODE(Sn_MR_TCP);
    2688:	0005      	movs	r5, r0
    268a:	0083      	lsls	r3, r0, #2
    268c:	3301      	adds	r3, #1
    268e:	00db      	lsls	r3, r3, #3
    2690:	4698      	mov	r8, r3
    2692:	0018      	movs	r0, r3
    2694:	f000 fbbc 	bl	2e10 <WIZCHIP_READ>
    2698:	230f      	movs	r3, #15
    269a:	4018      	ands	r0, r3
    269c:	2801      	cmp	r0, #1
    269e:	d000      	beq.n	26a2 <send+0x2e>
    26a0:	e076      	b.n	2790 <send+0x11c>
   CHECK_SOCKDATA();
    26a2:	2f00      	cmp	r7, #0
    26a4:	d100      	bne.n	26a8 <send+0x34>
    26a6:	e076      	b.n	2796 <send+0x122>
   tmp = getSn_SR(sn);
    26a8:	23c0      	movs	r3, #192	; 0xc0
    26aa:	009b      	lsls	r3, r3, #2
    26ac:	4443      	add	r3, r8
    26ae:	9300      	str	r3, [sp, #0]
    26b0:	0018      	movs	r0, r3
    26b2:	f000 fbad 	bl	2e10 <WIZCHIP_READ>
   if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
    26b6:	2817      	cmp	r0, #23
    26b8:	d002      	beq.n	26c0 <send+0x4c>
    26ba:	281c      	cmp	r0, #28
    26bc:	d000      	beq.n	26c0 <send+0x4c>
    26be:	e06d      	b.n	279c <send+0x128>
   if( sock_is_sending & (1<<sn) )
    26c0:	4b38      	ldr	r3, [pc, #224]	; (27a4 <send+0x130>)
    26c2:	881b      	ldrh	r3, [r3, #0]
    26c4:	4123      	asrs	r3, r4
    26c6:	07db      	lsls	r3, r3, #31
    26c8:	d518      	bpl.n	26fc <send+0x88>
   {
      tmp = getSn_IR(sn);
    26ca:	2680      	movs	r6, #128	; 0x80
    26cc:	00b6      	lsls	r6, r6, #2
    26ce:	4446      	add	r6, r8
    26d0:	0030      	movs	r0, r6
    26d2:	f000 fb9d 	bl	2e10 <WIZCHIP_READ>
      if(tmp & Sn_IR_SENDOK)
    26d6:	06c3      	lsls	r3, r0, #27
    26d8:	d406      	bmi.n	26e8 <send+0x74>
               return SOCK_BUSY;
            }
         #endif
         sock_is_sending &= ~(1<<sn);         
      }
      else if(tmp & Sn_IR_TIMEOUT)
    26da:	0703      	lsls	r3, r0, #28
    26dc:	d41a      	bmi.n	2714 <send+0xa0>
      {
         close(sn);
         return SOCKERR_TIMEOUT;
      }
      else return SOCK_BUSY;
    26de:	2000      	movs	r0, #0
   while(getSn_CR(sn));
   sock_is_sending |= (1 << sn);
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
}
    26e0:	b002      	add	sp, #8
    26e2:	bc04      	pop	{r2}
    26e4:	4690      	mov	r8, r2
    26e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
         setSn_IR(sn, Sn_IR_SENDOK);
    26e8:	2110      	movs	r1, #16
    26ea:	0030      	movs	r0, r6
    26ec:	f000 fbc2 	bl	2e74 <WIZCHIP_WRITE>
         sock_is_sending &= ~(1<<sn);         
    26f0:	2201      	movs	r2, #1
    26f2:	40a2      	lsls	r2, r4
    26f4:	492b      	ldr	r1, [pc, #172]	; (27a4 <send+0x130>)
    26f6:	880b      	ldrh	r3, [r1, #0]
    26f8:	4393      	bics	r3, r2
    26fa:	800b      	strh	r3, [r1, #0]
   freesize = getSn_TxMAX(sn);
    26fc:	20f8      	movs	r0, #248	; 0xf8
    26fe:	0140      	lsls	r0, r0, #5
    2700:	4440      	add	r0, r8
    2702:	f000 fb85 	bl	2e10 <WIZCHIP_READ>
    2706:	b280      	uxth	r0, r0
    2708:	0280      	lsls	r0, r0, #10
    270a:	b286      	uxth	r6, r0
   if (len > freesize) len = freesize; // check size not to exceed MAX size.
    270c:	42b7      	cmp	r7, r6
    270e:	d80f      	bhi.n	2730 <send+0xbc>
    2710:	003e      	movs	r6, r7
    2712:	e00d      	b.n	2730 <send+0xbc>
         close(sn);
    2714:	0020      	movs	r0, r4
    2716:	f7ff fe35 	bl	2384 <close>
         return SOCKERR_TIMEOUT;
    271a:	200d      	movs	r0, #13
    271c:	4240      	negs	r0, r0
    271e:	e7df      	b.n	26e0 <send+0x6c>
         close(sn);
    2720:	0020      	movs	r0, r4
    2722:	f7ff fe2f 	bl	2384 <close>
         return SOCKERR_SOCKSTATUS;
    2726:	2007      	movs	r0, #7
    2728:	4240      	negs	r0, r0
    272a:	e7d9      	b.n	26e0 <send+0x6c>
      if(len <= freesize) break;
    272c:	42be      	cmp	r6, r7
    272e:	d913      	bls.n	2758 <send+0xe4>
      freesize = getSn_TX_FSR(sn);
    2730:	0020      	movs	r0, r4
    2732:	f000 fc4b 	bl	2fcc <getSn_TX_FSR>
    2736:	0007      	movs	r7, r0
      tmp = getSn_SR(sn);
    2738:	9800      	ldr	r0, [sp, #0]
    273a:	f000 fb69 	bl	2e10 <WIZCHIP_READ>
      if ((tmp != SOCK_ESTABLISHED) && (tmp != SOCK_CLOSE_WAIT))
    273e:	2817      	cmp	r0, #23
    2740:	d001      	beq.n	2746 <send+0xd2>
    2742:	281c      	cmp	r0, #28
    2744:	d1ec      	bne.n	2720 <send+0xac>
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
    2746:	4b18      	ldr	r3, [pc, #96]	; (27a8 <send+0x134>)
    2748:	881b      	ldrh	r3, [r3, #0]
    274a:	412b      	asrs	r3, r5
    274c:	07db      	lsls	r3, r3, #31
    274e:	d5ed      	bpl.n	272c <send+0xb8>
    2750:	42be      	cmp	r6, r7
    2752:	d9eb      	bls.n	272c <send+0xb8>
    2754:	2000      	movs	r0, #0
    2756:	e7c3      	b.n	26e0 <send+0x6c>
   wiz_send_data(sn, buf, len);
    2758:	0032      	movs	r2, r6
    275a:	9901      	ldr	r1, [sp, #4]
    275c:	0020      	movs	r0, r4
    275e:	f000 fc99 	bl	3094 <wiz_send_data>
   setSn_CR(sn,Sn_CR_SEND);
    2762:	4645      	mov	r5, r8
    2764:	3501      	adds	r5, #1
    2766:	35ff      	adds	r5, #255	; 0xff
    2768:	2120      	movs	r1, #32
    276a:	0028      	movs	r0, r5
    276c:	f000 fb82 	bl	2e74 <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    2770:	0028      	movs	r0, r5
    2772:	f000 fb4d 	bl	2e10 <WIZCHIP_READ>
    2776:	2800      	cmp	r0, #0
    2778:	d1fa      	bne.n	2770 <send+0xfc>
   sock_is_sending |= (1 << sn);
    277a:	2201      	movs	r2, #1
    277c:	40a2      	lsls	r2, r4
    277e:	4909      	ldr	r1, [pc, #36]	; (27a4 <send+0x130>)
    2780:	880b      	ldrh	r3, [r1, #0]
    2782:	4313      	orrs	r3, r2
    2784:	800b      	strh	r3, [r1, #0]
   return (int32_t)len;
    2786:	0030      	movs	r0, r6
    2788:	e7aa      	b.n	26e0 <send+0x6c>
   CHECK_SOCKNUM();
    278a:	2001      	movs	r0, #1
    278c:	4240      	negs	r0, r0
    278e:	e7a7      	b.n	26e0 <send+0x6c>
   CHECK_SOCKMODE(Sn_MR_TCP);
    2790:	2005      	movs	r0, #5
    2792:	4240      	negs	r0, r0
    2794:	e7a4      	b.n	26e0 <send+0x6c>
   CHECK_SOCKDATA();
    2796:	200e      	movs	r0, #14
    2798:	4240      	negs	r0, r0
    279a:	e7a1      	b.n	26e0 <send+0x6c>
   if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
    279c:	2007      	movs	r0, #7
    279e:	4240      	negs	r0, r0
    27a0:	e79e      	b.n	26e0 <send+0x6c>
    27a2:	46c0      	nop			; (mov r8, r8)
    27a4:	20000ab0 	.word	0x20000ab0
    27a8:	20000aae 	.word	0x20000aae

000027ac <recv>:


int32_t recv(uint8_t sn, uint8_t * buf, uint16_t len)
{
    27ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    27ae:	46c6      	mov	lr, r8
    27b0:	b500      	push	{lr}
    27b2:	b082      	sub	sp, #8
    27b4:	9000      	str	r0, [sp, #0]
    27b6:	9101      	str	r1, [sp, #4]
    27b8:	0014      	movs	r4, r2
#if   _WIZCHIP_ == 5300
   uint8_t head[2];
   uint16_t mr;
#endif
//
   CHECK_SOCKNUM();
    27ba:	2808      	cmp	r0, #8
    27bc:	d864      	bhi.n	2888 <recv+0xdc>
   CHECK_SOCKMODE(Sn_MR_TCP);
    27be:	0006      	movs	r6, r0
    27c0:	0087      	lsls	r7, r0, #2
    27c2:	3701      	adds	r7, #1
    27c4:	00ff      	lsls	r7, r7, #3
    27c6:	0038      	movs	r0, r7
    27c8:	f000 fb22 	bl	2e10 <WIZCHIP_READ>
    27cc:	230f      	movs	r3, #15
    27ce:	4018      	ands	r0, r3
    27d0:	2801      	cmp	r0, #1
    27d2:	d15c      	bne.n	288e <recv+0xe2>
   CHECK_SOCKDATA();
    27d4:	2c00      	cmp	r4, #0
    27d6:	d05d      	beq.n	2894 <recv+0xe8>
   
   recvsize = getSn_RxMAX(sn);
    27d8:	23f0      	movs	r3, #240	; 0xf0
    27da:	015b      	lsls	r3, r3, #5
    27dc:	18f8      	adds	r0, r7, r3
    27de:	f000 fb17 	bl	2e10 <WIZCHIP_READ>
    27e2:	b280      	uxth	r0, r0
    27e4:	0280      	lsls	r0, r0, #10
    27e6:	b283      	uxth	r3, r0
    27e8:	4698      	mov	r8, r3
   if(recvsize < len) len = recvsize;
    27ea:	429c      	cmp	r4, r3
    27ec:	d80f      	bhi.n	280e <recv+0x62>
    27ee:	46a0      	mov	r8, r4
    27f0:	e00d      	b.n	280e <recv+0x62>
            if(tmp == SOCK_CLOSE_WAIT)
            {
               if(recvsize != 0) break;
               else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
               {
                  close(sn);
    27f2:	9800      	ldr	r0, [sp, #0]
    27f4:	f7ff fdc6 	bl	2384 <close>
                  return SOCKERR_SOCKSTATUS;
    27f8:	2007      	movs	r0, #7
    27fa:	4240      	negs	r0, r0
    27fc:	e040      	b.n	2880 <recv+0xd4>
               }
            }
            else
            {
               close(sn);
    27fe:	9800      	ldr	r0, [sp, #0]
    2800:	f7ff fdc0 	bl	2384 <close>
               return SOCKERR_SOCKSTATUS;
    2804:	2007      	movs	r0, #7
    2806:	4240      	negs	r0, r0
    2808:	e03a      	b.n	2880 <recv+0xd4>
            }
         }
         if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
         if(recvsize != 0) break;
    280a:	2c00      	cmp	r4, #0
    280c:	d124      	bne.n	2858 <recv+0xac>
         recvsize = getSn_RX_RSR(sn);
    280e:	9d00      	ldr	r5, [sp, #0]
    2810:	0028      	movs	r0, r5
    2812:	f000 fc0d 	bl	3030 <getSn_RX_RSR>
    2816:	0004      	movs	r4, r0
         tmp = getSn_SR(sn);
    2818:	23c0      	movs	r3, #192	; 0xc0
    281a:	009b      	lsls	r3, r3, #2
    281c:	18f8      	adds	r0, r7, r3
    281e:	f000 faf7 	bl	2e10 <WIZCHIP_READ>
         if (tmp != SOCK_ESTABLISHED)
    2822:	2817      	cmp	r0, #23
    2824:	d00f      	beq.n	2846 <recv+0x9a>
            if(tmp == SOCK_CLOSE_WAIT)
    2826:	281c      	cmp	r0, #28
    2828:	d1e9      	bne.n	27fe <recv+0x52>
               if(recvsize != 0) break;
    282a:	2c00      	cmp	r4, #0
    282c:	d114      	bne.n	2858 <recv+0xac>
               else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
    282e:	0028      	movs	r0, r5
    2830:	f000 fbcc 	bl	2fcc <getSn_TX_FSR>
    2834:	0005      	movs	r5, r0
    2836:	23f8      	movs	r3, #248	; 0xf8
    2838:	015b      	lsls	r3, r3, #5
    283a:	18f8      	adds	r0, r7, r3
    283c:	f000 fae8 	bl	2e10 <WIZCHIP_READ>
    2840:	0280      	lsls	r0, r0, #10
    2842:	4285      	cmp	r5, r0
    2844:	d0d5      	beq.n	27f2 <recv+0x46>
         if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
    2846:	4b15      	ldr	r3, [pc, #84]	; (289c <recv+0xf0>)
    2848:	881b      	ldrh	r3, [r3, #0]
    284a:	4133      	asrs	r3, r6
    284c:	07db      	lsls	r3, r3, #31
    284e:	d5dc      	bpl.n	280a <recv+0x5e>
    2850:	2c00      	cmp	r4, #0
    2852:	d1da      	bne.n	280a <recv+0x5e>
    2854:	2000      	movs	r0, #0
    2856:	e013      	b.n	2880 <recv+0xd4>
   }
   else sock_pack_info[sn] = PACK_COMPLETED;
   if(getSn_MR(sn) & Sn_MR_ALIGN) sock_remained_size[sn] = 0;
   //len = recvsize;
#else   
   if(recvsize < len) len = recvsize;   
    2858:	45a0      	cmp	r8, r4
    285a:	d800      	bhi.n	285e <recv+0xb2>
    285c:	4644      	mov	r4, r8
   wiz_recv_data(sn, buf, len);
    285e:	0022      	movs	r2, r4
    2860:	9901      	ldr	r1, [sp, #4]
    2862:	9800      	ldr	r0, [sp, #0]
    2864:	f000 fc49 	bl	30fa <wiz_recv_data>
   setSn_CR(sn,Sn_CR_RECV);
    2868:	3701      	adds	r7, #1
    286a:	37ff      	adds	r7, #255	; 0xff
    286c:	2140      	movs	r1, #64	; 0x40
    286e:	0038      	movs	r0, r7
    2870:	f000 fb00 	bl	2e74 <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    2874:	0038      	movs	r0, r7
    2876:	f000 facb 	bl	2e10 <WIZCHIP_READ>
    287a:	2800      	cmp	r0, #0
    287c:	d1fa      	bne.n	2874 <recv+0xc8>
#endif
     
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
    287e:	0020      	movs	r0, r4
}
    2880:	b002      	add	sp, #8
    2882:	bc04      	pop	{r2}
    2884:	4690      	mov	r8, r2
    2886:	bdf0      	pop	{r4, r5, r6, r7, pc}
   CHECK_SOCKNUM();
    2888:	2001      	movs	r0, #1
    288a:	4240      	negs	r0, r0
    288c:	e7f8      	b.n	2880 <recv+0xd4>
   CHECK_SOCKMODE(Sn_MR_TCP);
    288e:	2005      	movs	r0, #5
    2890:	4240      	negs	r0, r0
    2892:	e7f5      	b.n	2880 <recv+0xd4>
   CHECK_SOCKDATA();
    2894:	200e      	movs	r0, #14
    2896:	4240      	negs	r0, r0
    2898:	e7f2      	b.n	2880 <recv+0xd4>
    289a:	46c0      	nop			; (mov r8, r8)
    289c:	20000aae 	.word	0x20000aae

000028a0 <sendto>:

int32_t sendto(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t port)
{
    28a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    28a2:	46de      	mov	lr, fp
    28a4:	b500      	push	{lr}
    28a6:	b084      	sub	sp, #16
    28a8:	9001      	str	r0, [sp, #4]
    28aa:	9103      	str	r1, [sp, #12]
    28ac:	4693      	mov	fp, r2
    28ae:	001c      	movs	r4, r3
    28b0:	ab0a      	add	r3, sp, #40	; 0x28
    28b2:	881f      	ldrh	r7, [r3, #0]
   uint8_t tmp = 0;
   uint16_t freesize = 0;
   uint32_t taddr;

   CHECK_SOCKNUM();
    28b4:	2808      	cmp	r0, #8
    28b6:	d900      	bls.n	28ba <sendto+0x1a>
    28b8:	e095      	b.n	29e6 <sendto+0x146>
   switch(getSn_MR(sn) & 0x0F)
    28ba:	0005      	movs	r5, r0
    28bc:	0083      	lsls	r3, r0, #2
    28be:	3301      	adds	r3, #1
    28c0:	00de      	lsls	r6, r3, #3
    28c2:	0030      	movs	r0, r6
    28c4:	f000 faa4 	bl	2e10 <WIZCHIP_READ>
    28c8:	230f      	movs	r3, #15
    28ca:	4003      	ands	r3, r0
    28cc:	3b02      	subs	r3, #2
    28ce:	b2db      	uxtb	r3, r3
    28d0:	2b02      	cmp	r3, #2
    28d2:	d900      	bls.n	28d6 <sendto+0x36>
    28d4:	e08a      	b.n	29ec <sendto+0x14c>
         break;
//   #endif
      default:
         return SOCKERR_SOCKMODE;
   }
   CHECK_SOCKDATA();
    28d6:	465b      	mov	r3, fp
    28d8:	2b00      	cmp	r3, #0
    28da:	d100      	bne.n	28de <sendto+0x3e>
    28dc:	e089      	b.n	29f2 <sendto+0x152>
   //M20140501 : For avoiding fatal error on memory align mismatched
   //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
   //{
      //uint32_t taddr;
      taddr = ((uint32_t)addr[0]) & 0x000000FF;
    28de:	7823      	ldrb	r3, [r4, #0]
      taddr = (taddr << 8) + ((uint32_t)addr[1] & 0x000000FF);
    28e0:	021b      	lsls	r3, r3, #8
    28e2:	7862      	ldrb	r2, [r4, #1]
    28e4:	189b      	adds	r3, r3, r2
      taddr = (taddr << 8) + ((uint32_t)addr[2] & 0x000000FF);
    28e6:	021b      	lsls	r3, r3, #8
    28e8:	78a2      	ldrb	r2, [r4, #2]
    28ea:	189b      	adds	r3, r3, r2
      taddr = (taddr << 8) + ((uint32_t)addr[3] & 0x000000FF);
    28ec:	021b      	lsls	r3, r3, #8
    28ee:	78e2      	ldrb	r2, [r4, #3]
    28f0:	189b      	adds	r3, r3, r2
   //}
   //
   //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
   if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
    28f2:	2b00      	cmp	r3, #0
    28f4:	d034      	beq.n	2960 <sendto+0xc0>
   if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
    28f6:	2f00      	cmp	r7, #0
    28f8:	d104      	bne.n	2904 <sendto+0x64>
    28fa:	0030      	movs	r0, r6
    28fc:	f000 fa88 	bl	2e10 <WIZCHIP_READ>
    2900:	0743      	lsls	r3, r0, #29
    2902:	d579      	bpl.n	29f8 <sendto+0x158>
   tmp = getSn_SR(sn);
    2904:	23c0      	movs	r3, #192	; 0xc0
    2906:	009b      	lsls	r3, r3, #2
    2908:	469c      	mov	ip, r3
    290a:	44b4      	add	ip, r6
    290c:	4663      	mov	r3, ip
    290e:	9302      	str	r3, [sp, #8]
    2910:	4660      	mov	r0, ip
    2912:	f000 fa7d 	bl	2e10 <WIZCHIP_READ>
//#if ( _WIZCHIP_ < 5200 )
   if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
    2916:	2842      	cmp	r0, #66	; 0x42
    2918:	d003      	beq.n	2922 <sendto+0x82>
    291a:	2822      	cmp	r0, #34	; 0x22
    291c:	d001      	beq.n	2922 <sendto+0x82>
    291e:	2832      	cmp	r0, #50	; 0x32
    2920:	d16d      	bne.n	29fe <sendto+0x15e>
//#else
//   if(tmp != SOCK_MACRAW && tmp != SOCK_UDP) return SOCKERR_SOCKSTATUS;
//#endif
      
   setSn_DIPR(sn,addr);
    2922:	2204      	movs	r2, #4
    2924:	0021      	movs	r1, r4
    2926:	23c0      	movs	r3, #192	; 0xc0
    2928:	011b      	lsls	r3, r3, #4
    292a:	18f0      	adds	r0, r6, r3
    292c:	f000 fb12 	bl	2f54 <WIZCHIP_WRITE_BUF>
   setSn_DPORT(sn,port);      
    2930:	0a39      	lsrs	r1, r7, #8
    2932:	2380      	movs	r3, #128	; 0x80
    2934:	015b      	lsls	r3, r3, #5
    2936:	18f0      	adds	r0, r6, r3
    2938:	f000 fa9c 	bl	2e74 <WIZCHIP_WRITE>
    293c:	b2f9      	uxtb	r1, r7
    293e:	2388      	movs	r3, #136	; 0x88
    2940:	015b      	lsls	r3, r3, #5
    2942:	18f0      	adds	r0, r6, r3
    2944:	f000 fa96 	bl	2e74 <WIZCHIP_WRITE>
   freesize = getSn_TxMAX(sn);
    2948:	23f8      	movs	r3, #248	; 0xf8
    294a:	015b      	lsls	r3, r3, #5
    294c:	18f0      	adds	r0, r6, r3
    294e:	f000 fa5f 	bl	2e10 <WIZCHIP_READ>
    2952:	b280      	uxth	r0, r0
    2954:	0280      	lsls	r0, r0, #10
    2956:	b287      	uxth	r7, r0
   if (len > freesize) len = freesize; // check size not to exceed MAX size.
    2958:	45bb      	cmp	fp, r7
    295a:	d80b      	bhi.n	2974 <sendto+0xd4>
    295c:	465f      	mov	r7, fp
    295e:	e009      	b.n	2974 <sendto+0xd4>
   if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
    2960:	0030      	movs	r0, r6
    2962:	f000 fa55 	bl	2e10 <WIZCHIP_READ>
    2966:	0743      	lsls	r3, r0, #29
    2968:	d4c5      	bmi.n	28f6 <sendto+0x56>
    296a:	200c      	movs	r0, #12
    296c:	4240      	negs	r0, r0
    296e:	e04b      	b.n	2a08 <sendto+0x168>
   while(1)
   {
      freesize = getSn_TX_FSR(sn);
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
      if(len <= freesize) break;
    2970:	42a7      	cmp	r7, r4
    2972:	d911      	bls.n	2998 <sendto+0xf8>
      freesize = getSn_TX_FSR(sn);
    2974:	9801      	ldr	r0, [sp, #4]
    2976:	f000 fb29 	bl	2fcc <getSn_TX_FSR>
    297a:	0004      	movs	r4, r0
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    297c:	9802      	ldr	r0, [sp, #8]
    297e:	f000 fa47 	bl	2e10 <WIZCHIP_READ>
    2982:	2800      	cmp	r0, #0
    2984:	d03e      	beq.n	2a04 <sendto+0x164>
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
    2986:	4b22      	ldr	r3, [pc, #136]	; (2a10 <sendto+0x170>)
    2988:	881b      	ldrh	r3, [r3, #0]
    298a:	412b      	asrs	r3, r5
    298c:	07db      	lsls	r3, r3, #31
    298e:	d5ef      	bpl.n	2970 <sendto+0xd0>
    2990:	42a7      	cmp	r7, r4
    2992:	d9ed      	bls.n	2970 <sendto+0xd0>
    2994:	2000      	movs	r0, #0
    2996:	e037      	b.n	2a08 <sendto+0x168>
   };
	wiz_send_data(sn, buf, len);
    2998:	003a      	movs	r2, r7
    299a:	9903      	ldr	r1, [sp, #12]
    299c:	9801      	ldr	r0, [sp, #4]
    299e:	f000 fb79 	bl	3094 <wiz_send_data>
//A20150601 : For W5300
#if _WIZCHIP_ == 5300
   setSn_TX_WRSR(sn, len);
#endif
//   
	setSn_CR(sn,Sn_CR_SEND);
    29a2:	1c74      	adds	r4, r6, #1
    29a4:	34ff      	adds	r4, #255	; 0xff
    29a6:	2120      	movs	r1, #32
    29a8:	0020      	movs	r0, r4
    29aa:	f000 fa63 	bl	2e74 <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn));
    29ae:	0020      	movs	r0, r4
    29b0:	f000 fa2e 	bl	2e10 <WIZCHIP_READ>
    29b4:	2800      	cmp	r0, #0
    29b6:	d1fa      	bne.n	29ae <sendto+0x10e>
   while(1)
   {
      tmp = getSn_IR(sn);
    29b8:	2380      	movs	r3, #128	; 0x80
    29ba:	009b      	lsls	r3, r3, #2
    29bc:	18f4      	adds	r4, r6, r3
    29be:	0020      	movs	r0, r4
    29c0:	f000 fa26 	bl	2e10 <WIZCHIP_READ>
      if(tmp & Sn_IR_SENDOK)
    29c4:	06c3      	lsls	r3, r0, #27
    29c6:	d408      	bmi.n	29da <sendto+0x13a>
         setSn_IR(sn, Sn_IR_SENDOK);
         break;
      }
      //M:20131104
      //else if(tmp & Sn_IR_TIMEOUT) return SOCKERR_TIMEOUT;
      else if(tmp & Sn_IR_TIMEOUT)
    29c8:	0703      	lsls	r3, r0, #28
    29ca:	d5f5      	bpl.n	29b8 <sendto+0x118>
      {
         setSn_IR(sn, Sn_IR_TIMEOUT);
    29cc:	2108      	movs	r1, #8
    29ce:	0020      	movs	r0, r4
    29d0:	f000 fa50 	bl	2e74 <WIZCHIP_WRITE>
         //len = (uint16_t)SOCKERR_TIMEOUT;
         //break;
         #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
            if(taddr) setSUBR((uint8_t*)&taddr);
         #endif
         return SOCKERR_TIMEOUT;
    29d4:	200d      	movs	r0, #13
    29d6:	4240      	negs	r0, r0
    29d8:	e016      	b.n	2a08 <sendto+0x168>
         setSn_IR(sn, Sn_IR_SENDOK);
    29da:	2110      	movs	r1, #16
    29dc:	0020      	movs	r0, r4
    29de:	f000 fa49 	bl	2e74 <WIZCHIP_WRITE>
   #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
      if(taddr) setSUBR((uint8_t*)&taddr);
   #endif
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
    29e2:	0038      	movs	r0, r7
    29e4:	e010      	b.n	2a08 <sendto+0x168>
   CHECK_SOCKNUM();
    29e6:	2001      	movs	r0, #1
    29e8:	4240      	negs	r0, r0
    29ea:	e00d      	b.n	2a08 <sendto+0x168>
         return SOCKERR_SOCKMODE;
    29ec:	2005      	movs	r0, #5
    29ee:	4240      	negs	r0, r0
    29f0:	e00a      	b.n	2a08 <sendto+0x168>
   CHECK_SOCKDATA();
    29f2:	200e      	movs	r0, #14
    29f4:	4240      	negs	r0, r0
    29f6:	e007      	b.n	2a08 <sendto+0x168>
   if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
    29f8:	200b      	movs	r0, #11
    29fa:	4240      	negs	r0, r0
    29fc:	e004      	b.n	2a08 <sendto+0x168>
   if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
    29fe:	2007      	movs	r0, #7
    2a00:	4240      	negs	r0, r0
    2a02:	e001      	b.n	2a08 <sendto+0x168>
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    2a04:	2004      	movs	r0, #4
    2a06:	4240      	negs	r0, r0
}
    2a08:	b004      	add	sp, #16
    2a0a:	bc04      	pop	{r2}
    2a0c:	4693      	mov	fp, r2
    2a0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2a10:	20000aae 	.word	0x20000aae

00002a14 <recvfrom>:



int32_t recvfrom(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t *port)
{
    2a14:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a16:	46de      	mov	lr, fp
    2a18:	4647      	mov	r7, r8
    2a1a:	b580      	push	{r7, lr}
    2a1c:	b085      	sub	sp, #20
    2a1e:	0005      	movs	r5, r0
    2a20:	9100      	str	r1, [sp, #0]
    2a22:	4690      	mov	r8, r2
    2a24:	9301      	str	r3, [sp, #4]
#endif
//   
   uint8_t  head[8];
	uint16_t pack_len=0;

   CHECK_SOCKNUM();
    2a26:	2808      	cmp	r0, #8
    2a28:	d900      	bls.n	2a2c <recvfrom+0x18>
    2a2a:	e11b      	b.n	2c64 <recvfrom+0x250>
//A20150601
#if _WIZCHIP_ == 5300
   mr1 = getMR();
#endif   

   switch((mr=getSn_MR(sn)) & 0x0F)
    2a2c:	0007      	movs	r7, r0
    2a2e:	0083      	lsls	r3, r0, #2
    2a30:	3301      	adds	r3, #1
    2a32:	00de      	lsls	r6, r3, #3
    2a34:	0030      	movs	r0, r6
    2a36:	f000 f9eb 	bl	2e10 <WIZCHIP_READ>
    2a3a:	4683      	mov	fp, r0
    2a3c:	230f      	movs	r3, #15
    2a3e:	4003      	ands	r3, r0
    2a40:	3b02      	subs	r3, #2
    2a42:	b2db      	uxtb	r3, r3
    2a44:	2b02      	cmp	r3, #2
    2a46:	d900      	bls.n	2a4a <recvfrom+0x36>
    2a48:	e10f      	b.n	2c6a <recvfrom+0x256>
         break;
   #endif
      default:
         return SOCKERR_SOCKMODE;
   }
   CHECK_SOCKDATA();
    2a4a:	4643      	mov	r3, r8
    2a4c:	2b00      	cmp	r3, #0
    2a4e:	d100      	bne.n	2a52 <recvfrom+0x3e>
    2a50:	e10e      	b.n	2c70 <recvfrom+0x25c>
   if(sock_remained_size[sn] == 0)
    2a52:	006b      	lsls	r3, r5, #1
    2a54:	4a89      	ldr	r2, [pc, #548]	; (2c7c <recvfrom+0x268>)
    2a56:	5a9b      	ldrh	r3, [r3, r2]
    2a58:	2b00      	cmp	r3, #0
    2a5a:	d015      	beq.n	2a88 <recvfrom+0x74>
	uint16_t pack_len=0;
    2a5c:	2400      	movs	r4, #0
         if(pack_len != 0) break;
      };
   }
//D20150601 : Move it to bottom
// sock_pack_info[sn] = PACK_COMPLETED;
	switch (mr & 0x07)
    2a5e:	2307      	movs	r3, #7
    2a60:	465a      	mov	r2, fp
    2a62:	4013      	ands	r3, r2
    2a64:	2b03      	cmp	r3, #3
    2a66:	d100      	bne.n	2a6a <recvfrom+0x56>
    2a68:	e0bd      	b.n	2be6 <recvfrom+0x1d2>
    2a6a:	2b04      	cmp	r3, #4
    2a6c:	d100      	bne.n	2a70 <recvfrom+0x5c>
    2a6e:	e081      	b.n	2b74 <recvfrom+0x160>
    2a70:	2b02      	cmp	r3, #2
    2a72:	d01e      	beq.n	2ab2 <recvfrom+0x9e>
			else pack_len = sock_remained_size[sn];
   		wiz_recv_data(sn, buf, pack_len); // data copy.
			break;
   //#endif
      default:
         wiz_recv_ignore(sn, pack_len); // data copy.
    2a74:	0021      	movs	r1, r4
    2a76:	0028      	movs	r0, r5
    2a78:	f000 fb72 	bl	3160 <wiz_recv_ignore>
         sock_remained_size[sn] = pack_len;
    2a7c:	006b      	lsls	r3, r5, #1
    2a7e:	4a7f      	ldr	r2, [pc, #508]	; (2c7c <recvfrom+0x268>)
    2a80:	529c      	strh	r4, [r3, r2]
         break;
    2a82:	e026      	b.n	2ad2 <recvfrom+0xbe>
         if(pack_len != 0) break;
    2a84:	2c00      	cmp	r4, #0
    2a86:	d1ea      	bne.n	2a5e <recvfrom+0x4a>
         pack_len = getSn_RX_RSR(sn);
    2a88:	0028      	movs	r0, r5
    2a8a:	f000 fad1 	bl	3030 <getSn_RX_RSR>
    2a8e:	0004      	movs	r4, r0
         if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    2a90:	23c0      	movs	r3, #192	; 0xc0
    2a92:	009b      	lsls	r3, r3, #2
    2a94:	18f0      	adds	r0, r6, r3
    2a96:	f000 f9bb 	bl	2e10 <WIZCHIP_READ>
    2a9a:	2800      	cmp	r0, #0
    2a9c:	d100      	bne.n	2aa0 <recvfrom+0x8c>
    2a9e:	e0ea      	b.n	2c76 <recvfrom+0x262>
         if( (sock_io_mode & (1<<sn)) && (pack_len == 0) ) return SOCK_BUSY;
    2aa0:	4b77      	ldr	r3, [pc, #476]	; (2c80 <recvfrom+0x26c>)
    2aa2:	881b      	ldrh	r3, [r3, #0]
    2aa4:	413b      	asrs	r3, r7
    2aa6:	07db      	lsls	r3, r3, #31
    2aa8:	d5ec      	bpl.n	2a84 <recvfrom+0x70>
    2aaa:	2c00      	cmp	r4, #0
    2aac:	d1ea      	bne.n	2a84 <recvfrom+0x70>
    2aae:	2000      	movs	r0, #0
    2ab0:	e029      	b.n	2b06 <recvfrom+0xf2>
	      if(sock_remained_size[sn] == 0)
    2ab2:	006b      	lsls	r3, r5, #1
    2ab4:	4a71      	ldr	r2, [pc, #452]	; (2c7c <recvfrom+0x268>)
    2ab6:	5a9b      	ldrh	r3, [r3, r2]
    2ab8:	2b00      	cmp	r3, #0
    2aba:	d029      	beq.n	2b10 <recvfrom+0xfc>
			if(len < sock_remained_size[sn]) pack_len = len;
    2abc:	006b      	lsls	r3, r5, #1
    2abe:	4a6f      	ldr	r2, [pc, #444]	; (2c7c <recvfrom+0x268>)
    2ac0:	5a9c      	ldrh	r4, [r3, r2]
    2ac2:	45a0      	cmp	r8, r4
    2ac4:	d200      	bcs.n	2ac8 <recvfrom+0xb4>
    2ac6:	4644      	mov	r4, r8
   		wiz_recv_data(sn, buf, pack_len); // data copy.
    2ac8:	0022      	movs	r2, r4
    2aca:	9900      	ldr	r1, [sp, #0]
    2acc:	0028      	movs	r0, r5
    2ace:	f000 fb14 	bl	30fa <wiz_recv_data>
   }
	setSn_CR(sn,Sn_CR_RECV);
    2ad2:	3601      	adds	r6, #1
    2ad4:	36ff      	adds	r6, #255	; 0xff
    2ad6:	2140      	movs	r1, #64	; 0x40
    2ad8:	0030      	movs	r0, r6
    2ada:	f000 f9cb 	bl	2e74 <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn)) ;
    2ade:	0030      	movs	r0, r6
    2ae0:	f000 f996 	bl	2e10 <WIZCHIP_READ>
    2ae4:	2800      	cmp	r0, #0
    2ae6:	d1fa      	bne.n	2ade <recvfrom+0xca>
	sock_remained_size[sn] -= pack_len;
    2ae8:	4a64      	ldr	r2, [pc, #400]	; (2c7c <recvfrom+0x268>)
    2aea:	0069      	lsls	r1, r5, #1
    2aec:	5a8b      	ldrh	r3, [r1, r2]
    2aee:	1b1b      	subs	r3, r3, r4
    2af0:	b29b      	uxth	r3, r3
    2af2:	528b      	strh	r3, [r1, r2]
	//M20150601 : 
	//if(sock_remained_size[sn] != 0) sock_pack_info[sn] |= 0x01;
	if(sock_remained_size[sn] != 0)
    2af4:	2b00      	cmp	r3, #0
    2af6:	d100      	bne.n	2afa <recvfrom+0xe6>
    2af8:	e0b0      	b.n	2c5c <recvfrom+0x248>
	{
	   sock_pack_info[sn] |= PACK_REMAINED;
    2afa:	4a62      	ldr	r2, [pc, #392]	; (2c84 <recvfrom+0x270>)
    2afc:	5d53      	ldrb	r3, [r2, r5]
    2afe:	2101      	movs	r1, #1
    2b00:	430b      	orrs	r3, r1
    2b02:	5553      	strb	r3, [r2, r5]
   pack_len = len;
#endif
   //
   //M20150409 : Explicit Type Casting
   //return pack_len;
   return (int32_t)pack_len;
    2b04:	0020      	movs	r0, r4
}
    2b06:	b005      	add	sp, #20
    2b08:	bc0c      	pop	{r2, r3}
    2b0a:	4690      	mov	r8, r2
    2b0c:	469b      	mov	fp, r3
    2b0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   			wiz_recv_data(sn, head, 8);
    2b10:	2208      	movs	r2, #8
    2b12:	a902      	add	r1, sp, #8
    2b14:	0028      	movs	r0, r5
    2b16:	f000 faf0 	bl	30fa <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    2b1a:	1c74      	adds	r4, r6, #1
    2b1c:	34ff      	adds	r4, #255	; 0xff
    2b1e:	2140      	movs	r1, #64	; 0x40
    2b20:	0020      	movs	r0, r4
    2b22:	f000 f9a7 	bl	2e74 <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    2b26:	0020      	movs	r0, r4
    2b28:	f000 f972 	bl	2e10 <WIZCHIP_READ>
    2b2c:	2800      	cmp	r0, #0
    2b2e:	d1fa      	bne.n	2b26 <recvfrom+0x112>
               addr[0] = head[0];
    2b30:	ab02      	add	r3, sp, #8
    2b32:	781b      	ldrb	r3, [r3, #0]
    2b34:	9a01      	ldr	r2, [sp, #4]
    2b36:	7013      	strb	r3, [r2, #0]
      			addr[1] = head[1];
    2b38:	ab02      	add	r3, sp, #8
    2b3a:	785b      	ldrb	r3, [r3, #1]
    2b3c:	7053      	strb	r3, [r2, #1]
      			addr[2] = head[2];
    2b3e:	ab02      	add	r3, sp, #8
    2b40:	789b      	ldrb	r3, [r3, #2]
    2b42:	7093      	strb	r3, [r2, #2]
      			addr[3] = head[3];
    2b44:	ab02      	add	r3, sp, #8
    2b46:	78db      	ldrb	r3, [r3, #3]
    2b48:	70d3      	strb	r3, [r2, #3]
      			*port = head[4];
    2b4a:	ab02      	add	r3, sp, #8
    2b4c:	791b      	ldrb	r3, [r3, #4]
      			*port = (*port << 8) + head[5];
    2b4e:	021b      	lsls	r3, r3, #8
    2b50:	aa02      	add	r2, sp, #8
    2b52:	7952      	ldrb	r2, [r2, #5]
    2b54:	189b      	adds	r3, r3, r2
    2b56:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2b58:	8013      	strh	r3, [r2, #0]
      			sock_remained_size[sn] = head[6];
    2b5a:	ab02      	add	r3, sp, #8
    2b5c:	799b      	ldrb	r3, [r3, #6]
      			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[7];
    2b5e:	021b      	lsls	r3, r3, #8
    2b60:	aa02      	add	r2, sp, #8
    2b62:	79d2      	ldrb	r2, [r2, #7]
    2b64:	189b      	adds	r3, r3, r2
    2b66:	006a      	lsls	r2, r5, #1
    2b68:	4944      	ldr	r1, [pc, #272]	; (2c7c <recvfrom+0x268>)
    2b6a:	528b      	strh	r3, [r1, r2]
   			sock_pack_info[sn] = PACK_FIRST;
    2b6c:	2280      	movs	r2, #128	; 0x80
    2b6e:	4b45      	ldr	r3, [pc, #276]	; (2c84 <recvfrom+0x270>)
    2b70:	555a      	strb	r2, [r3, r5]
    2b72:	e7a3      	b.n	2abc <recvfrom+0xa8>
	      if(sock_remained_size[sn] == 0)
    2b74:	006b      	lsls	r3, r5, #1
    2b76:	4a41      	ldr	r2, [pc, #260]	; (2c7c <recvfrom+0x268>)
    2b78:	5a9b      	ldrh	r3, [r3, r2]
    2b7a:	2b00      	cmp	r3, #0
    2b7c:	d00b      	beq.n	2b96 <recvfrom+0x182>
			if(len < sock_remained_size[sn]) pack_len = len;
    2b7e:	006b      	lsls	r3, r5, #1
    2b80:	4a3e      	ldr	r2, [pc, #248]	; (2c7c <recvfrom+0x268>)
    2b82:	5a9c      	ldrh	r4, [r3, r2]
    2b84:	45a0      	cmp	r8, r4
    2b86:	d200      	bcs.n	2b8a <recvfrom+0x176>
    2b88:	4644      	mov	r4, r8
			wiz_recv_data(sn,buf,pack_len);
    2b8a:	0022      	movs	r2, r4
    2b8c:	9900      	ldr	r1, [sp, #0]
    2b8e:	0028      	movs	r0, r5
    2b90:	f000 fab3 	bl	30fa <wiz_recv_data>
		   break;
    2b94:	e79d      	b.n	2ad2 <recvfrom+0xbe>
   			wiz_recv_data(sn, head, 2);
    2b96:	2202      	movs	r2, #2
    2b98:	a902      	add	r1, sp, #8
    2b9a:	0028      	movs	r0, r5
    2b9c:	f000 faad 	bl	30fa <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    2ba0:	1c74      	adds	r4, r6, #1
    2ba2:	34ff      	adds	r4, #255	; 0xff
    2ba4:	2140      	movs	r1, #64	; 0x40
    2ba6:	0020      	movs	r0, r4
    2ba8:	f000 f964 	bl	2e74 <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    2bac:	0020      	movs	r0, r4
    2bae:	f000 f92f 	bl	2e10 <WIZCHIP_READ>
    2bb2:	2800      	cmp	r0, #0
    2bb4:	d1fa      	bne.n	2bac <recvfrom+0x198>
    			sock_remained_size[sn] = head[0];
    2bb6:	ab02      	add	r3, sp, #8
    2bb8:	781b      	ldrb	r3, [r3, #0]
   			sock_remained_size[sn] = (sock_remained_size[sn] <<8) + head[1] -2;
    2bba:	021b      	lsls	r3, r3, #8
    2bbc:	aa02      	add	r2, sp, #8
    2bbe:	7852      	ldrb	r2, [r2, #1]
    2bc0:	189b      	adds	r3, r3, r2
    2bc2:	b29b      	uxth	r3, r3
    2bc4:	3b02      	subs	r3, #2
    2bc6:	b29b      	uxth	r3, r3
    2bc8:	006a      	lsls	r2, r5, #1
    2bca:	492c      	ldr	r1, [pc, #176]	; (2c7c <recvfrom+0x268>)
    2bcc:	5253      	strh	r3, [r2, r1]
   			if(sock_remained_size[sn] > 1514) 
    2bce:	4a2e      	ldr	r2, [pc, #184]	; (2c88 <recvfrom+0x274>)
    2bd0:	4293      	cmp	r3, r2
    2bd2:	d803      	bhi.n	2bdc <recvfrom+0x1c8>
   			sock_pack_info[sn] = PACK_FIRST;
    2bd4:	2280      	movs	r2, #128	; 0x80
    2bd6:	4b2b      	ldr	r3, [pc, #172]	; (2c84 <recvfrom+0x270>)
    2bd8:	555a      	strb	r2, [r3, r5]
    2bda:	e7d0      	b.n	2b7e <recvfrom+0x16a>
   			   close(sn);
    2bdc:	0028      	movs	r0, r5
    2bde:	f7ff fbd1 	bl	2384 <close>
   			   return SOCKFATAL_PACKLEN;
    2be2:	482a      	ldr	r0, [pc, #168]	; (2c8c <recvfrom+0x278>)
    2be4:	e78f      	b.n	2b06 <recvfrom+0xf2>
		   if(sock_remained_size[sn] == 0)
    2be6:	006b      	lsls	r3, r5, #1
    2be8:	4a24      	ldr	r2, [pc, #144]	; (2c7c <recvfrom+0x268>)
    2bea:	5a9b      	ldrh	r3, [r3, r2]
    2bec:	2b00      	cmp	r3, #0
    2bee:	d00b      	beq.n	2c08 <recvfrom+0x1f4>
			if(len < sock_remained_size[sn]) pack_len = len;
    2bf0:	006b      	lsls	r3, r5, #1
    2bf2:	4a22      	ldr	r2, [pc, #136]	; (2c7c <recvfrom+0x268>)
    2bf4:	5a9c      	ldrh	r4, [r3, r2]
    2bf6:	45a0      	cmp	r8, r4
    2bf8:	d200      	bcs.n	2bfc <recvfrom+0x1e8>
    2bfa:	4644      	mov	r4, r8
   		wiz_recv_data(sn, buf, pack_len); // data copy.
    2bfc:	0022      	movs	r2, r4
    2bfe:	9900      	ldr	r1, [sp, #0]
    2c00:	0028      	movs	r0, r5
    2c02:	f000 fa7a 	bl	30fa <wiz_recv_data>
			break;
    2c06:	e764      	b.n	2ad2 <recvfrom+0xbe>
   			wiz_recv_data(sn, head, 6);
    2c08:	2206      	movs	r2, #6
    2c0a:	a902      	add	r1, sp, #8
    2c0c:	0028      	movs	r0, r5
    2c0e:	f000 fa74 	bl	30fa <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    2c12:	1c74      	adds	r4, r6, #1
    2c14:	34ff      	adds	r4, #255	; 0xff
    2c16:	2140      	movs	r1, #64	; 0x40
    2c18:	0020      	movs	r0, r4
    2c1a:	f000 f92b 	bl	2e74 <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    2c1e:	0020      	movs	r0, r4
    2c20:	f000 f8f6 	bl	2e10 <WIZCHIP_READ>
    2c24:	2800      	cmp	r0, #0
    2c26:	d1fa      	bne.n	2c1e <recvfrom+0x20a>
   			addr[0] = head[0];
    2c28:	ab02      	add	r3, sp, #8
    2c2a:	781b      	ldrb	r3, [r3, #0]
    2c2c:	9a01      	ldr	r2, [sp, #4]
    2c2e:	7013      	strb	r3, [r2, #0]
   			addr[1] = head[1];
    2c30:	ab02      	add	r3, sp, #8
    2c32:	785b      	ldrb	r3, [r3, #1]
    2c34:	7053      	strb	r3, [r2, #1]
   			addr[2] = head[2];
    2c36:	ab02      	add	r3, sp, #8
    2c38:	789b      	ldrb	r3, [r3, #2]
    2c3a:	7093      	strb	r3, [r2, #2]
   			addr[3] = head[3];
    2c3c:	ab02      	add	r3, sp, #8
    2c3e:	78db      	ldrb	r3, [r3, #3]
    2c40:	70d3      	strb	r3, [r2, #3]
   			sock_remained_size[sn] = head[4];
    2c42:	ab02      	add	r3, sp, #8
    2c44:	791b      	ldrb	r3, [r3, #4]
   			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[5];
    2c46:	021b      	lsls	r3, r3, #8
    2c48:	aa02      	add	r2, sp, #8
    2c4a:	7952      	ldrb	r2, [r2, #5]
    2c4c:	189b      	adds	r3, r3, r2
    2c4e:	006a      	lsls	r2, r5, #1
    2c50:	490a      	ldr	r1, [pc, #40]	; (2c7c <recvfrom+0x268>)
    2c52:	528b      	strh	r3, [r1, r2]
   			sock_pack_info[sn] = PACK_FIRST;
    2c54:	2280      	movs	r2, #128	; 0x80
    2c56:	4b0b      	ldr	r3, [pc, #44]	; (2c84 <recvfrom+0x270>)
    2c58:	555a      	strb	r2, [r3, r5]
    2c5a:	e7c9      	b.n	2bf0 <recvfrom+0x1dc>
	else sock_pack_info[sn] = PACK_COMPLETED;
    2c5c:	2200      	movs	r2, #0
    2c5e:	4b09      	ldr	r3, [pc, #36]	; (2c84 <recvfrom+0x270>)
    2c60:	555a      	strb	r2, [r3, r5]
    2c62:	e74f      	b.n	2b04 <recvfrom+0xf0>
   CHECK_SOCKNUM();
    2c64:	2001      	movs	r0, #1
    2c66:	4240      	negs	r0, r0
    2c68:	e74d      	b.n	2b06 <recvfrom+0xf2>
         return SOCKERR_SOCKMODE;
    2c6a:	2005      	movs	r0, #5
    2c6c:	4240      	negs	r0, r0
    2c6e:	e74a      	b.n	2b06 <recvfrom+0xf2>
   CHECK_SOCKDATA();
    2c70:	200e      	movs	r0, #14
    2c72:	4240      	negs	r0, r0
    2c74:	e747      	b.n	2b06 <recvfrom+0xf2>
         if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    2c76:	2004      	movs	r0, #4
    2c78:	4240      	negs	r0, r0
    2c7a:	e744      	b.n	2b06 <recvfrom+0xf2>
    2c7c:	20000abc 	.word	0x20000abc
    2c80:	20000aae 	.word	0x20000aae
    2c84:	20000ab4 	.word	0x20000ab4
    2c88:	000005ea 	.word	0x000005ea
    2c8c:	fffffc17 	.word	0xfffffc17

00002c90 <getsockopt>:
   }   
   return SOCK_OK;
}

int8_t  getsockopt(uint8_t sn, sockopt_type sotype, void* arg)
{
    2c90:	b570      	push	{r4, r5, r6, lr}
    2c92:	0004      	movs	r4, r0
    2c94:	0015      	movs	r5, r2
   CHECK_SOCKNUM();
    2c96:	2808      	cmp	r0, #8
    2c98:	d900      	bls.n	2c9c <getsockopt+0xc>
    2c9a:	e0a6      	b.n	2dea <getsockopt+0x15a>
   switch(sotype)
    2c9c:	290c      	cmp	r1, #12
    2c9e:	d900      	bls.n	2ca2 <getsockopt+0x12>
    2ca0:	e0a6      	b.n	2df0 <getsockopt+0x160>
    2ca2:	0089      	lsls	r1, r1, #2
    2ca4:	4b57      	ldr	r3, [pc, #348]	; (2e04 <getsockopt+0x174>)
    2ca6:	585b      	ldr	r3, [r3, r1]
    2ca8:	469f      	mov	pc, r3
   {
      case SO_FLAG:
         *(uint8_t*)arg = getSn_MR(sn) & 0xF0;
    2caa:	0080      	lsls	r0, r0, #2
    2cac:	3001      	adds	r0, #1
    2cae:	00c0      	lsls	r0, r0, #3
    2cb0:	f000 f8ae 	bl	2e10 <WIZCHIP_READ>
    2cb4:	230f      	movs	r3, #15
    2cb6:	4398      	bics	r0, r3
    2cb8:	7028      	strb	r0, [r5, #0]
         *(uint8_t*)arg = sock_pack_info[sn];
         break;
      default:
         return SOCKERR_SOCKOPT;
   }
   return SOCK_OK;
    2cba:	2001      	movs	r0, #1
}
    2cbc:	bd70      	pop	{r4, r5, r6, pc}
         *(uint8_t*) arg = getSn_TTL(sn);
    2cbe:	0080      	lsls	r0, r0, #2
    2cc0:	3001      	adds	r0, #1
    2cc2:	00c0      	lsls	r0, r0, #3
    2cc4:	23b0      	movs	r3, #176	; 0xb0
    2cc6:	015b      	lsls	r3, r3, #5
    2cc8:	469c      	mov	ip, r3
    2cca:	4460      	add	r0, ip
    2ccc:	f000 f8a0 	bl	2e10 <WIZCHIP_READ>
    2cd0:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2cd2:	2001      	movs	r0, #1
         break;
    2cd4:	e7f2      	b.n	2cbc <getsockopt+0x2c>
         *(uint8_t*) arg = getSn_TOS(sn);
    2cd6:	0080      	lsls	r0, r0, #2
    2cd8:	3001      	adds	r0, #1
    2cda:	00c0      	lsls	r0, r0, #3
    2cdc:	23a8      	movs	r3, #168	; 0xa8
    2cde:	015b      	lsls	r3, r3, #5
    2ce0:	469c      	mov	ip, r3
    2ce2:	4460      	add	r0, ip
    2ce4:	f000 f894 	bl	2e10 <WIZCHIP_READ>
    2ce8:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2cea:	2001      	movs	r0, #1
         break;
    2cec:	e7e6      	b.n	2cbc <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_MSSR(sn);
    2cee:	0084      	lsls	r4, r0, #2
    2cf0:	3401      	adds	r4, #1
    2cf2:	00e4      	lsls	r4, r4, #3
    2cf4:	2390      	movs	r3, #144	; 0x90
    2cf6:	015b      	lsls	r3, r3, #5
    2cf8:	18e0      	adds	r0, r4, r3
    2cfa:	f000 f889 	bl	2e10 <WIZCHIP_READ>
    2cfe:	b286      	uxth	r6, r0
    2d00:	0236      	lsls	r6, r6, #8
    2d02:	b2b6      	uxth	r6, r6
    2d04:	2398      	movs	r3, #152	; 0x98
    2d06:	015b      	lsls	r3, r3, #5
    2d08:	18e0      	adds	r0, r4, r3
    2d0a:	f000 f881 	bl	2e10 <WIZCHIP_READ>
    2d0e:	b280      	uxth	r0, r0
    2d10:	1836      	adds	r6, r6, r0
    2d12:	802e      	strh	r6, [r5, #0]
   return SOCK_OK;
    2d14:	2001      	movs	r0, #1
         break;
    2d16:	e7d1      	b.n	2cbc <getsockopt+0x2c>
         getSn_DIPR(sn, (uint8_t*)arg);
    2d18:	0080      	lsls	r0, r0, #2
    2d1a:	3001      	adds	r0, #1
    2d1c:	00c0      	lsls	r0, r0, #3
    2d1e:	23c0      	movs	r3, #192	; 0xc0
    2d20:	011b      	lsls	r3, r3, #4
    2d22:	469c      	mov	ip, r3
    2d24:	4460      	add	r0, ip
    2d26:	2204      	movs	r2, #4
    2d28:	0029      	movs	r1, r5
    2d2a:	f000 f8d3 	bl	2ed4 <WIZCHIP_READ_BUF>
   return SOCK_OK;
    2d2e:	2001      	movs	r0, #1
         break;
    2d30:	e7c4      	b.n	2cbc <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_DPORT(sn);
    2d32:	0084      	lsls	r4, r0, #2
    2d34:	3401      	adds	r4, #1
    2d36:	00e4      	lsls	r4, r4, #3
    2d38:	2380      	movs	r3, #128	; 0x80
    2d3a:	015b      	lsls	r3, r3, #5
    2d3c:	18e0      	adds	r0, r4, r3
    2d3e:	f000 f867 	bl	2e10 <WIZCHIP_READ>
    2d42:	b286      	uxth	r6, r0
    2d44:	0236      	lsls	r6, r6, #8
    2d46:	b2b6      	uxth	r6, r6
    2d48:	2388      	movs	r3, #136	; 0x88
    2d4a:	015b      	lsls	r3, r3, #5
    2d4c:	18e0      	adds	r0, r4, r3
    2d4e:	f000 f85f 	bl	2e10 <WIZCHIP_READ>
    2d52:	b280      	uxth	r0, r0
    2d54:	1836      	adds	r6, r6, r0
    2d56:	802e      	strh	r6, [r5, #0]
   return SOCK_OK;
    2d58:	2001      	movs	r0, #1
         break;
    2d5a:	e7af      	b.n	2cbc <getsockopt+0x2c>
         CHECK_SOCKMODE(Sn_MR_TCP);
    2d5c:	0084      	lsls	r4, r0, #2
    2d5e:	3401      	adds	r4, #1
    2d60:	00e4      	lsls	r4, r4, #3
    2d62:	0020      	movs	r0, r4
    2d64:	f000 f854 	bl	2e10 <WIZCHIP_READ>
    2d68:	230f      	movs	r3, #15
    2d6a:	4018      	ands	r0, r3
    2d6c:	2801      	cmp	r0, #1
    2d6e:	d142      	bne.n	2df6 <getsockopt+0x166>
         *(uint16_t*) arg = getSn_KPALVTR(sn);
    2d70:	23bc      	movs	r3, #188	; 0xbc
    2d72:	019b      	lsls	r3, r3, #6
    2d74:	18e0      	adds	r0, r4, r3
    2d76:	f000 f84b 	bl	2e10 <WIZCHIP_READ>
    2d7a:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2d7c:	2001      	movs	r0, #1
         break;
    2d7e:	e79d      	b.n	2cbc <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_TX_FSR(sn);
    2d80:	f000 f924 	bl	2fcc <getSn_TX_FSR>
    2d84:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2d86:	2001      	movs	r0, #1
         break;
    2d88:	e798      	b.n	2cbc <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_RX_RSR(sn);
    2d8a:	f000 f951 	bl	3030 <getSn_RX_RSR>
    2d8e:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2d90:	2001      	movs	r0, #1
         break;
    2d92:	e793      	b.n	2cbc <getsockopt+0x2c>
         *(uint8_t*) arg = getSn_SR(sn);
    2d94:	0080      	lsls	r0, r0, #2
    2d96:	3001      	adds	r0, #1
    2d98:	00c0      	lsls	r0, r0, #3
    2d9a:	23c0      	movs	r3, #192	; 0xc0
    2d9c:	009b      	lsls	r3, r3, #2
    2d9e:	469c      	mov	ip, r3
    2da0:	4460      	add	r0, ip
    2da2:	f000 f835 	bl	2e10 <WIZCHIP_READ>
    2da6:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2da8:	2001      	movs	r0, #1
         break;
    2daa:	e787      	b.n	2cbc <getsockopt+0x2c>
         if(getSn_MR(sn) & Sn_MR_TCP)
    2dac:	0080      	lsls	r0, r0, #2
    2dae:	3001      	adds	r0, #1
    2db0:	00c0      	lsls	r0, r0, #3
    2db2:	f000 f82d 	bl	2e10 <WIZCHIP_READ>
    2db6:	07c3      	lsls	r3, r0, #31
    2db8:	d405      	bmi.n	2dc6 <getsockopt+0x136>
            *(uint16_t*)arg = sock_remained_size[sn];
    2dba:	0064      	lsls	r4, r4, #1
    2dbc:	4b12      	ldr	r3, [pc, #72]	; (2e08 <getsockopt+0x178>)
    2dbe:	5ae3      	ldrh	r3, [r4, r3]
    2dc0:	802b      	strh	r3, [r5, #0]
   return SOCK_OK;
    2dc2:	2001      	movs	r0, #1
    2dc4:	e77a      	b.n	2cbc <getsockopt+0x2c>
            *(uint16_t*)arg = getSn_RX_RSR(sn);
    2dc6:	0020      	movs	r0, r4
    2dc8:	f000 f932 	bl	3030 <getSn_RX_RSR>
    2dcc:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2dce:	2001      	movs	r0, #1
    2dd0:	e774      	b.n	2cbc <getsockopt+0x2c>
         if((getSn_MR(sn) == Sn_MR_TCP))
    2dd2:	0080      	lsls	r0, r0, #2
    2dd4:	3001      	adds	r0, #1
    2dd6:	00c0      	lsls	r0, r0, #3
    2dd8:	f000 f81a 	bl	2e10 <WIZCHIP_READ>
    2ddc:	2801      	cmp	r0, #1
    2dde:	d00d      	beq.n	2dfc <getsockopt+0x16c>
         *(uint8_t*)arg = sock_pack_info[sn];
    2de0:	4b0a      	ldr	r3, [pc, #40]	; (2e0c <getsockopt+0x17c>)
    2de2:	5d1b      	ldrb	r3, [r3, r4]
    2de4:	702b      	strb	r3, [r5, #0]
   return SOCK_OK;
    2de6:	2001      	movs	r0, #1
         break;
    2de8:	e768      	b.n	2cbc <getsockopt+0x2c>
   CHECK_SOCKNUM();
    2dea:	2001      	movs	r0, #1
    2dec:	4240      	negs	r0, r0
    2dee:	e765      	b.n	2cbc <getsockopt+0x2c>
         return SOCKERR_SOCKOPT;
    2df0:	2002      	movs	r0, #2
    2df2:	4240      	negs	r0, r0
    2df4:	e762      	b.n	2cbc <getsockopt+0x2c>
         CHECK_SOCKMODE(Sn_MR_TCP);
    2df6:	2005      	movs	r0, #5
    2df8:	4240      	negs	r0, r0
    2dfa:	e75f      	b.n	2cbc <getsockopt+0x2c>
             return SOCKERR_SOCKMODE;
    2dfc:	2005      	movs	r0, #5
    2dfe:	4240      	negs	r0, r0
    2e00:	e75c      	b.n	2cbc <getsockopt+0x2c>
    2e02:	46c0      	nop			; (mov r8, r8)
    2e04:	0000dabc 	.word	0x0000dabc
    2e08:	20000abc 	.word	0x20000abc
    2e0c:	20000ab4 	.word	0x20000ab4

00002e10 <WIZCHIP_READ>:

#if   (_WIZCHIP_ == 5500)
////////////////////////////////////////////////////

uint8_t  WIZCHIP_READ(uint32_t AddrSel)
{
    2e10:	b530      	push	{r4, r5, lr}
    2e12:	b083      	sub	sp, #12
    2e14:	0004      	movs	r4, r0
   uint8_t ret;
   uint8_t spi_data[3];

   WIZCHIP_CRITICAL_ENTER();
    2e16:	4d16      	ldr	r5, [pc, #88]	; (2e70 <WIZCHIP_READ+0x60>)
    2e18:	68eb      	ldr	r3, [r5, #12]
    2e1a:	4798      	blx	r3
   WIZCHIP.CS._select();
    2e1c:	696b      	ldr	r3, [r5, #20]
    2e1e:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_READ_ | _W5500_SPI_VDM_OP_);

   if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2e20:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    2e22:	2b00      	cmp	r3, #0
    2e24:	d016      	beq.n	2e54 <WIZCHIP_READ+0x44>
    2e26:	4b12      	ldr	r3, [pc, #72]	; (2e70 <WIZCHIP_READ+0x60>)
    2e28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2e2a:	2b00      	cmp	r3, #0
    2e2c:	d012      	beq.n	2e54 <WIZCHIP_READ+0x44>
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
   }
   else																// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2e2e:	0c22      	lsrs	r2, r4, #16
    2e30:	a801      	add	r0, sp, #4
    2e32:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2e34:	0a22      	lsrs	r2, r4, #8
    2e36:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2e38:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2e3a:	2103      	movs	r1, #3
    2e3c:	4798      	blx	r3
   }
   ret = WIZCHIP.IF.SPI._read_byte();
    2e3e:	4c0c      	ldr	r4, [pc, #48]	; (2e70 <WIZCHIP_READ+0x60>)
    2e40:	69e3      	ldr	r3, [r4, #28]
    2e42:	4798      	blx	r3
    2e44:	0005      	movs	r5, r0

   WIZCHIP.CS._deselect();
    2e46:	69a3      	ldr	r3, [r4, #24]
    2e48:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2e4a:	6923      	ldr	r3, [r4, #16]
    2e4c:	4798      	blx	r3
   return ret;
}
    2e4e:	0028      	movs	r0, r5
    2e50:	b003      	add	sp, #12
    2e52:	bd30      	pop	{r4, r5, pc}
	   WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2e54:	4d06      	ldr	r5, [pc, #24]	; (2e70 <WIZCHIP_READ+0x60>)
    2e56:	0c20      	lsrs	r0, r4, #16
    2e58:	b2c0      	uxtb	r0, r0
    2e5a:	6a2b      	ldr	r3, [r5, #32]
    2e5c:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2e5e:	0a20      	lsrs	r0, r4, #8
    2e60:	b2c0      	uxtb	r0, r0
    2e62:	6a2b      	ldr	r3, [r5, #32]
    2e64:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2e66:	6a2b      	ldr	r3, [r5, #32]
    2e68:	b2e0      	uxtb	r0, r4
    2e6a:	4798      	blx	r3
    2e6c:	e7e7      	b.n	2e3e <WIZCHIP_READ+0x2e>
    2e6e:	46c0      	nop			; (mov r8, r8)
    2e70:	2000002c 	.word	0x2000002c

00002e74 <WIZCHIP_WRITE>:

void     WIZCHIP_WRITE(uint32_t AddrSel, uint8_t wb )
{
    2e74:	b570      	push	{r4, r5, r6, lr}
    2e76:	b082      	sub	sp, #8
    2e78:	0004      	movs	r4, r0
    2e7a:	000e      	movs	r6, r1
   uint8_t spi_data[4];

   WIZCHIP_CRITICAL_ENTER();
    2e7c:	4d14      	ldr	r5, [pc, #80]	; (2ed0 <WIZCHIP_WRITE+0x5c>)
    2e7e:	68eb      	ldr	r3, [r5, #12]
    2e80:	4798      	blx	r3
   WIZCHIP.CS._select();
    2e82:	696b      	ldr	r3, [r5, #20]
    2e84:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_WRITE_ | _W5500_SPI_VDM_OP_);
    2e86:	2004      	movs	r0, #4
    2e88:	4304      	orrs	r4, r0

   //if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
   if(!WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2e8a:	6aab      	ldr	r3, [r5, #40]	; 0x28
    2e8c:	2b00      	cmp	r3, #0
    2e8e:	d00f      	beq.n	2eb0 <WIZCHIP_WRITE+0x3c>
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
		WIZCHIP.IF.SPI._write_byte(wb);
   }
   else									// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2e90:	0c22      	lsrs	r2, r4, #16
    2e92:	a801      	add	r0, sp, #4
    2e94:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2e96:	0a22      	lsrs	r2, r4, #8
    2e98:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2e9a:	7084      	strb	r4, [r0, #2]
		spi_data[3] = wb;
    2e9c:	70c6      	strb	r6, [r0, #3]
		WIZCHIP.IF.SPI._write_burst(spi_data, 4);
    2e9e:	2104      	movs	r1, #4
    2ea0:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2ea2:	4c0b      	ldr	r4, [pc, #44]	; (2ed0 <WIZCHIP_WRITE+0x5c>)
    2ea4:	69a3      	ldr	r3, [r4, #24]
    2ea6:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2ea8:	6923      	ldr	r3, [r4, #16]
    2eaa:	4798      	blx	r3
}
    2eac:	b002      	add	sp, #8
    2eae:	bd70      	pop	{r4, r5, r6, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2eb0:	4d07      	ldr	r5, [pc, #28]	; (2ed0 <WIZCHIP_WRITE+0x5c>)
    2eb2:	0c20      	lsrs	r0, r4, #16
    2eb4:	b2c0      	uxtb	r0, r0
    2eb6:	6a2b      	ldr	r3, [r5, #32]
    2eb8:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2eba:	0a20      	lsrs	r0, r4, #8
    2ebc:	b2c0      	uxtb	r0, r0
    2ebe:	6a2b      	ldr	r3, [r5, #32]
    2ec0:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2ec2:	b2e0      	uxtb	r0, r4
    2ec4:	6a2b      	ldr	r3, [r5, #32]
    2ec6:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte(wb);
    2ec8:	6a2b      	ldr	r3, [r5, #32]
    2eca:	0030      	movs	r0, r6
    2ecc:	4798      	blx	r3
    2ece:	e7e8      	b.n	2ea2 <WIZCHIP_WRITE+0x2e>
    2ed0:	2000002c 	.word	0x2000002c

00002ed4 <WIZCHIP_READ_BUF>:
         
void     WIZCHIP_READ_BUF (uint32_t AddrSel, uint8_t* pBuf, uint16_t len)
{
    2ed4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ed6:	b083      	sub	sp, #12
    2ed8:	0004      	movs	r4, r0
    2eda:	000f      	movs	r7, r1
    2edc:	0016      	movs	r6, r2
   uint8_t spi_data[3];
   uint16_t i;

   WIZCHIP_CRITICAL_ENTER();
    2ede:	4d1c      	ldr	r5, [pc, #112]	; (2f50 <WIZCHIP_READ_BUF+0x7c>)
    2ee0:	68eb      	ldr	r3, [r5, #12]
    2ee2:	4798      	blx	r3
   WIZCHIP.CS._select();
    2ee4:	696b      	ldr	r3, [r5, #20]
    2ee6:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_READ_ | _W5500_SPI_VDM_OP_);

   if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2ee8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    2eea:	2b00      	cmp	r3, #0
    2eec:	d017      	beq.n	2f1e <WIZCHIP_READ_BUF+0x4a>
    2eee:	4b18      	ldr	r3, [pc, #96]	; (2f50 <WIZCHIP_READ_BUF+0x7c>)
    2ef0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2ef2:	2b00      	cmp	r3, #0
    2ef4:	d013      	beq.n	2f1e <WIZCHIP_READ_BUF+0x4a>
		for(i = 0; i < len; i++)
		   pBuf[i] = WIZCHIP.IF.SPI._read_byte();
   }
   else																// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2ef6:	0c22      	lsrs	r2, r4, #16
    2ef8:	a801      	add	r0, sp, #4
    2efa:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2efc:	0a22      	lsrs	r2, r4, #8
    2efe:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2f00:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2f02:	2103      	movs	r1, #3
    2f04:	4798      	blx	r3
		WIZCHIP.IF.SPI._read_burst(pBuf, len);
    2f06:	4b12      	ldr	r3, [pc, #72]	; (2f50 <WIZCHIP_READ_BUF+0x7c>)
    2f08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2f0a:	0031      	movs	r1, r6
    2f0c:	0038      	movs	r0, r7
    2f0e:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2f10:	4c0f      	ldr	r4, [pc, #60]	; (2f50 <WIZCHIP_READ_BUF+0x7c>)
    2f12:	69a3      	ldr	r3, [r4, #24]
    2f14:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2f16:	6923      	ldr	r3, [r4, #16]
    2f18:	4798      	blx	r3
}
    2f1a:	b003      	add	sp, #12
    2f1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2f1e:	4d0c      	ldr	r5, [pc, #48]	; (2f50 <WIZCHIP_READ_BUF+0x7c>)
    2f20:	0c20      	lsrs	r0, r4, #16
    2f22:	b2c0      	uxtb	r0, r0
    2f24:	6a2b      	ldr	r3, [r5, #32]
    2f26:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2f28:	0a20      	lsrs	r0, r4, #8
    2f2a:	b2c0      	uxtb	r0, r0
    2f2c:	6a2b      	ldr	r3, [r5, #32]
    2f2e:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2f30:	6a2b      	ldr	r3, [r5, #32]
    2f32:	b2e0      	uxtb	r0, r4
    2f34:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2f36:	2400      	movs	r4, #0
    2f38:	e006      	b.n	2f48 <WIZCHIP_READ_BUF+0x74>
		   pBuf[i] = WIZCHIP.IF.SPI._read_byte();
    2f3a:	193d      	adds	r5, r7, r4
    2f3c:	4b04      	ldr	r3, [pc, #16]	; (2f50 <WIZCHIP_READ_BUF+0x7c>)
    2f3e:	69db      	ldr	r3, [r3, #28]
    2f40:	4798      	blx	r3
    2f42:	7028      	strb	r0, [r5, #0]
		for(i = 0; i < len; i++)
    2f44:	3401      	adds	r4, #1
    2f46:	b2a4      	uxth	r4, r4
    2f48:	42b4      	cmp	r4, r6
    2f4a:	d3f6      	bcc.n	2f3a <WIZCHIP_READ_BUF+0x66>
    2f4c:	e7e0      	b.n	2f10 <WIZCHIP_READ_BUF+0x3c>
    2f4e:	46c0      	nop			; (mov r8, r8)
    2f50:	2000002c 	.word	0x2000002c

00002f54 <WIZCHIP_WRITE_BUF>:

void     WIZCHIP_WRITE_BUF(uint32_t AddrSel, uint8_t* pBuf, uint16_t len)
{
    2f54:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f56:	b083      	sub	sp, #12
    2f58:	0004      	movs	r4, r0
    2f5a:	000f      	movs	r7, r1
    2f5c:	0016      	movs	r6, r2
   uint8_t spi_data[3];
   uint16_t i;

   WIZCHIP_CRITICAL_ENTER();
    2f5e:	4d1a      	ldr	r5, [pc, #104]	; (2fc8 <WIZCHIP_WRITE_BUF+0x74>)
    2f60:	68eb      	ldr	r3, [r5, #12]
    2f62:	4798      	blx	r3
   WIZCHIP.CS._select();
    2f64:	696b      	ldr	r3, [r5, #20]
    2f66:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_WRITE_ | _W5500_SPI_VDM_OP_);
    2f68:	2004      	movs	r0, #4
    2f6a:	4304      	orrs	r4, r0

   if(!WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2f6c:	6aab      	ldr	r3, [r5, #40]	; 0x28
    2f6e:	2b00      	cmp	r3, #0
    2f70:	d013      	beq.n	2f9a <WIZCHIP_WRITE_BUF+0x46>
		for(i = 0; i < len; i++)
			WIZCHIP.IF.SPI._write_byte(pBuf[i]);
   }
   else									// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2f72:	0c22      	lsrs	r2, r4, #16
    2f74:	a801      	add	r0, sp, #4
    2f76:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2f78:	0a22      	lsrs	r2, r4, #8
    2f7a:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2f7c:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2f7e:	2103      	movs	r1, #3
    2f80:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_burst(pBuf, len);
    2f82:	4b11      	ldr	r3, [pc, #68]	; (2fc8 <WIZCHIP_WRITE_BUF+0x74>)
    2f84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2f86:	0031      	movs	r1, r6
    2f88:	0038      	movs	r0, r7
    2f8a:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2f8c:	4c0e      	ldr	r4, [pc, #56]	; (2fc8 <WIZCHIP_WRITE_BUF+0x74>)
    2f8e:	69a3      	ldr	r3, [r4, #24]
    2f90:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2f92:	6923      	ldr	r3, [r4, #16]
    2f94:	4798      	blx	r3
}
    2f96:	b003      	add	sp, #12
    2f98:	bdf0      	pop	{r4, r5, r6, r7, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2f9a:	4d0b      	ldr	r5, [pc, #44]	; (2fc8 <WIZCHIP_WRITE_BUF+0x74>)
    2f9c:	0c20      	lsrs	r0, r4, #16
    2f9e:	b2c0      	uxtb	r0, r0
    2fa0:	6a2b      	ldr	r3, [r5, #32]
    2fa2:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2fa4:	0a20      	lsrs	r0, r4, #8
    2fa6:	b2c0      	uxtb	r0, r0
    2fa8:	6a2b      	ldr	r3, [r5, #32]
    2faa:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2fac:	6a2b      	ldr	r3, [r5, #32]
    2fae:	b2e0      	uxtb	r0, r4
    2fb0:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2fb2:	2400      	movs	r4, #0
    2fb4:	e005      	b.n	2fc2 <WIZCHIP_WRITE_BUF+0x6e>
			WIZCHIP.IF.SPI._write_byte(pBuf[i]);
    2fb6:	4b04      	ldr	r3, [pc, #16]	; (2fc8 <WIZCHIP_WRITE_BUF+0x74>)
    2fb8:	6a1b      	ldr	r3, [r3, #32]
    2fba:	5d38      	ldrb	r0, [r7, r4]
    2fbc:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2fbe:	3401      	adds	r4, #1
    2fc0:	b2a4      	uxth	r4, r4
    2fc2:	42b4      	cmp	r4, r6
    2fc4:	d3f7      	bcc.n	2fb6 <WIZCHIP_WRITE_BUF+0x62>
    2fc6:	e7e1      	b.n	2f8c <WIZCHIP_WRITE_BUF+0x38>
    2fc8:	2000002c 	.word	0x2000002c

00002fcc <getSn_TX_FSR>:


uint16_t getSn_TX_FSR(uint8_t sn)
{
    2fcc:	b5f0      	push	{r4, r5, r6, r7, lr}
    2fce:	46c6      	mov	lr, r8
    2fd0:	b500      	push	{lr}
    2fd2:	0007      	movs	r7, r0
   uint16_t val=0,val1=0;
    2fd4:	2500      	movs	r5, #0
    2fd6:	e001      	b.n	2fdc <getSn_TX_FSR+0x10>
      if (val1 != 0)
      {
        val = WIZCHIP_READ(Sn_TX_FSR(sn));
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
      }
   }while (val != val1);
    2fd8:	42a5      	cmp	r5, r4
    2fda:	d025      	beq.n	3028 <getSn_TX_FSR+0x5c>
      val1 = WIZCHIP_READ(Sn_TX_FSR(sn));
    2fdc:	00bb      	lsls	r3, r7, #2
    2fde:	3301      	adds	r3, #1
    2fe0:	00db      	lsls	r3, r3, #3
    2fe2:	4698      	mov	r8, r3
    2fe4:	2680      	movs	r6, #128	; 0x80
    2fe6:	01b6      	lsls	r6, r6, #6
    2fe8:	4446      	add	r6, r8
    2fea:	0030      	movs	r0, r6
    2fec:	f7ff ff10 	bl	2e10 <WIZCHIP_READ>
    2ff0:	b284      	uxth	r4, r0
      val1 = (val1 << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
    2ff2:	0224      	lsls	r4, r4, #8
    2ff4:	b2a4      	uxth	r4, r4
    2ff6:	2384      	movs	r3, #132	; 0x84
    2ff8:	019b      	lsls	r3, r3, #6
    2ffa:	469c      	mov	ip, r3
    2ffc:	44e0      	add	r8, ip
    2ffe:	4640      	mov	r0, r8
    3000:	f7ff ff06 	bl	2e10 <WIZCHIP_READ>
    3004:	b280      	uxth	r0, r0
    3006:	1824      	adds	r4, r4, r0
    3008:	b2a4      	uxth	r4, r4
      if (val1 != 0)
    300a:	2c00      	cmp	r4, #0
    300c:	d0e4      	beq.n	2fd8 <getSn_TX_FSR+0xc>
        val = WIZCHIP_READ(Sn_TX_FSR(sn));
    300e:	0030      	movs	r0, r6
    3010:	f7ff fefe 	bl	2e10 <WIZCHIP_READ>
    3014:	b280      	uxth	r0, r0
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
    3016:	0200      	lsls	r0, r0, #8
    3018:	b285      	uxth	r5, r0
    301a:	4640      	mov	r0, r8
    301c:	f7ff fef8 	bl	2e10 <WIZCHIP_READ>
    3020:	b280      	uxth	r0, r0
    3022:	182d      	adds	r5, r5, r0
    3024:	b2ad      	uxth	r5, r5
    3026:	e7d7      	b.n	2fd8 <getSn_TX_FSR+0xc>
   return val;
}
    3028:	0028      	movs	r0, r5
    302a:	bc04      	pop	{r2}
    302c:	4690      	mov	r8, r2
    302e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00003030 <getSn_RX_RSR>:


uint16_t getSn_RX_RSR(uint8_t sn)
{
    3030:	b5f0      	push	{r4, r5, r6, r7, lr}
    3032:	46c6      	mov	lr, r8
    3034:	b500      	push	{lr}
    3036:	0007      	movs	r7, r0
   uint16_t val=0,val1=0;
    3038:	2500      	movs	r5, #0
    303a:	e001      	b.n	3040 <getSn_RX_RSR+0x10>
      if (val1 != 0)
      {
        val = WIZCHIP_READ(Sn_RX_RSR(sn));
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
      }
   }while (val != val1);
    303c:	42a5      	cmp	r5, r4
    303e:	d025      	beq.n	308c <getSn_RX_RSR+0x5c>
      val1 = WIZCHIP_READ(Sn_RX_RSR(sn));
    3040:	00bb      	lsls	r3, r7, #2
    3042:	3301      	adds	r3, #1
    3044:	00db      	lsls	r3, r3, #3
    3046:	4698      	mov	r8, r3
    3048:	2698      	movs	r6, #152	; 0x98
    304a:	01b6      	lsls	r6, r6, #6
    304c:	4446      	add	r6, r8
    304e:	0030      	movs	r0, r6
    3050:	f7ff fede 	bl	2e10 <WIZCHIP_READ>
    3054:	b284      	uxth	r4, r0
      val1 = (val1 << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
    3056:	0224      	lsls	r4, r4, #8
    3058:	b2a4      	uxth	r4, r4
    305a:	239c      	movs	r3, #156	; 0x9c
    305c:	019b      	lsls	r3, r3, #6
    305e:	469c      	mov	ip, r3
    3060:	44e0      	add	r8, ip
    3062:	4640      	mov	r0, r8
    3064:	f7ff fed4 	bl	2e10 <WIZCHIP_READ>
    3068:	b280      	uxth	r0, r0
    306a:	1824      	adds	r4, r4, r0
    306c:	b2a4      	uxth	r4, r4
      if (val1 != 0)
    306e:	2c00      	cmp	r4, #0
    3070:	d0e4      	beq.n	303c <getSn_RX_RSR+0xc>
        val = WIZCHIP_READ(Sn_RX_RSR(sn));
    3072:	0030      	movs	r0, r6
    3074:	f7ff fecc 	bl	2e10 <WIZCHIP_READ>
    3078:	b280      	uxth	r0, r0
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
    307a:	0200      	lsls	r0, r0, #8
    307c:	b285      	uxth	r5, r0
    307e:	4640      	mov	r0, r8
    3080:	f7ff fec6 	bl	2e10 <WIZCHIP_READ>
    3084:	b280      	uxth	r0, r0
    3086:	182d      	adds	r5, r5, r0
    3088:	b2ad      	uxth	r5, r5
    308a:	e7d7      	b.n	303c <getSn_RX_RSR+0xc>
   return val;
}
    308c:	0028      	movs	r0, r5
    308e:	bc04      	pop	{r2}
    3090:	4690      	mov	r8, r2
    3092:	bdf0      	pop	{r4, r5, r6, r7, pc}

00003094 <wiz_send_data>:

void wiz_send_data(uint8_t sn, uint8_t *wizdata, uint16_t len)
{
    3094:	b5f0      	push	{r4, r5, r6, r7, lr}
    3096:	b083      	sub	sp, #12
    3098:	9100      	str	r1, [sp, #0]
    309a:	1e14      	subs	r4, r2, #0
   uint16_t ptr = 0;
   uint32_t addrsel = 0;

   if(len == 0)  return;
    309c:	d101      	bne.n	30a2 <wiz_send_data+0xe>
   //
   WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
   
   ptr += len;
   setSn_TX_WR(sn,ptr);
}
    309e:	b003      	add	sp, #12
    30a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   ptr = getSn_TX_WR(sn);
    30a2:	0086      	lsls	r6, r0, #2
    30a4:	1c75      	adds	r5, r6, #1
    30a6:	00ed      	lsls	r5, r5, #3
    30a8:	2390      	movs	r3, #144	; 0x90
    30aa:	019b      	lsls	r3, r3, #6
    30ac:	469c      	mov	ip, r3
    30ae:	44ac      	add	ip, r5
    30b0:	4663      	mov	r3, ip
    30b2:	9301      	str	r3, [sp, #4]
    30b4:	4660      	mov	r0, ip
    30b6:	f7ff feab 	bl	2e10 <WIZCHIP_READ>
    30ba:	b280      	uxth	r0, r0
    30bc:	0200      	lsls	r0, r0, #8
    30be:	b287      	uxth	r7, r0
    30c0:	2294      	movs	r2, #148	; 0x94
    30c2:	0192      	lsls	r2, r2, #6
    30c4:	4694      	mov	ip, r2
    30c6:	4465      	add	r5, ip
    30c8:	0028      	movs	r0, r5
    30ca:	f7ff fea1 	bl	2e10 <WIZCHIP_READ>
    30ce:	b280      	uxth	r0, r0
    30d0:	1838      	adds	r0, r7, r0
    30d2:	b287      	uxth	r7, r0
   addrsel = ((uint32_t)ptr << 8) + (WIZCHIP_TXBUF_BLOCK(sn) << 3);
    30d4:	023b      	lsls	r3, r7, #8
    30d6:	1cb0      	adds	r0, r6, #2
    30d8:	00c0      	lsls	r0, r0, #3
    30da:	1818      	adds	r0, r3, r0
   WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
    30dc:	0022      	movs	r2, r4
    30de:	9900      	ldr	r1, [sp, #0]
    30e0:	f7ff ff38 	bl	2f54 <WIZCHIP_WRITE_BUF>
   ptr += len;
    30e4:	19e4      	adds	r4, r4, r7
    30e6:	b2a4      	uxth	r4, r4
   setSn_TX_WR(sn,ptr);
    30e8:	0a21      	lsrs	r1, r4, #8
    30ea:	9801      	ldr	r0, [sp, #4]
    30ec:	f7ff fec2 	bl	2e74 <WIZCHIP_WRITE>
    30f0:	b2e1      	uxtb	r1, r4
    30f2:	0028      	movs	r0, r5
    30f4:	f7ff febe 	bl	2e74 <WIZCHIP_WRITE>
    30f8:	e7d1      	b.n	309e <wiz_send_data+0xa>

000030fa <wiz_recv_data>:

void wiz_recv_data(uint8_t sn, uint8_t *wizdata, uint16_t len)
{
    30fa:	b5f0      	push	{r4, r5, r6, r7, lr}
    30fc:	b083      	sub	sp, #12
    30fe:	9100      	str	r1, [sp, #0]
    3100:	1e14      	subs	r4, r2, #0
   uint16_t ptr = 0;
   uint32_t addrsel = 0;
   
   if(len == 0) return;
    3102:	d101      	bne.n	3108 <wiz_recv_data+0xe>
   //
   WIZCHIP_READ_BUF(addrsel, wizdata, len);
   ptr += len;
   
   setSn_RX_RD(sn,ptr);
}
    3104:	b003      	add	sp, #12
    3106:	bdf0      	pop	{r4, r5, r6, r7, pc}
   ptr = getSn_RX_RD(sn);
    3108:	0086      	lsls	r6, r0, #2
    310a:	1c75      	adds	r5, r6, #1
    310c:	00ed      	lsls	r5, r5, #3
    310e:	23a0      	movs	r3, #160	; 0xa0
    3110:	019b      	lsls	r3, r3, #6
    3112:	469c      	mov	ip, r3
    3114:	44ac      	add	ip, r5
    3116:	4663      	mov	r3, ip
    3118:	9301      	str	r3, [sp, #4]
    311a:	4660      	mov	r0, ip
    311c:	f7ff fe78 	bl	2e10 <WIZCHIP_READ>
    3120:	b280      	uxth	r0, r0
    3122:	0200      	lsls	r0, r0, #8
    3124:	b287      	uxth	r7, r0
    3126:	22a4      	movs	r2, #164	; 0xa4
    3128:	0192      	lsls	r2, r2, #6
    312a:	4694      	mov	ip, r2
    312c:	4465      	add	r5, ip
    312e:	0028      	movs	r0, r5
    3130:	f7ff fe6e 	bl	2e10 <WIZCHIP_READ>
    3134:	b280      	uxth	r0, r0
    3136:	1838      	adds	r0, r7, r0
    3138:	b287      	uxth	r7, r0
   addrsel = ((uint32_t)ptr << 8) + (WIZCHIP_RXBUF_BLOCK(sn) << 3);
    313a:	023b      	lsls	r3, r7, #8
    313c:	1cf0      	adds	r0, r6, #3
    313e:	00c0      	lsls	r0, r0, #3
    3140:	1818      	adds	r0, r3, r0
   WIZCHIP_READ_BUF(addrsel, wizdata, len);
    3142:	0022      	movs	r2, r4
    3144:	9900      	ldr	r1, [sp, #0]
    3146:	f7ff fec5 	bl	2ed4 <WIZCHIP_READ_BUF>
   ptr += len;
    314a:	19e4      	adds	r4, r4, r7
    314c:	b2a4      	uxth	r4, r4
   setSn_RX_RD(sn,ptr);
    314e:	0a21      	lsrs	r1, r4, #8
    3150:	9801      	ldr	r0, [sp, #4]
    3152:	f7ff fe8f 	bl	2e74 <WIZCHIP_WRITE>
    3156:	b2e1      	uxtb	r1, r4
    3158:	0028      	movs	r0, r5
    315a:	f7ff fe8b 	bl	2e74 <WIZCHIP_WRITE>
    315e:	e7d1      	b.n	3104 <wiz_recv_data+0xa>

00003160 <wiz_recv_ignore>:


void wiz_recv_ignore(uint8_t sn, uint16_t len)
{
    3160:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3162:	000c      	movs	r4, r1
   uint16_t ptr = 0;

   ptr = getSn_RX_RD(sn);
    3164:	0087      	lsls	r7, r0, #2
    3166:	3701      	adds	r7, #1
    3168:	00ff      	lsls	r7, r7, #3
    316a:	23a0      	movs	r3, #160	; 0xa0
    316c:	019b      	lsls	r3, r3, #6
    316e:	18fe      	adds	r6, r7, r3
    3170:	0030      	movs	r0, r6
    3172:	f7ff fe4d 	bl	2e10 <WIZCHIP_READ>
    3176:	b280      	uxth	r0, r0
    3178:	0200      	lsls	r0, r0, #8
    317a:	b285      	uxth	r5, r0
    317c:	23a4      	movs	r3, #164	; 0xa4
    317e:	019b      	lsls	r3, r3, #6
    3180:	469c      	mov	ip, r3
    3182:	4467      	add	r7, ip
    3184:	0038      	movs	r0, r7
    3186:	f7ff fe43 	bl	2e10 <WIZCHIP_READ>
    318a:	b280      	uxth	r0, r0
    318c:	182d      	adds	r5, r5, r0
    318e:	b2ad      	uxth	r5, r5
   ptr += len;
    3190:	192c      	adds	r4, r5, r4
    3192:	b2a4      	uxth	r4, r4
   setSn_RX_RD(sn,ptr);
    3194:	0a21      	lsrs	r1, r4, #8
    3196:	0030      	movs	r0, r6
    3198:	f7ff fe6c 	bl	2e74 <WIZCHIP_WRITE>
    319c:	b2e1      	uxtb	r1, r4
    319e:	0038      	movs	r0, r7
    31a0:	f7ff fe68 	bl	2e74 <WIZCHIP_WRITE>
}
    31a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000031a6 <wizchip_cris_enter>:
 * @brief Default function to enable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_enter(void)           {};
void 	  wizchip_cris_enter(void)           {}
    31a6:	4770      	bx	lr

000031a8 <wizchip_cris_exit>:
 * @brief Default function to disable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_exit(void)          {};
void 	  wizchip_cris_exit(void)          {}
    31a8:	4770      	bx	lr

000031aa <wizchip_cs_select>:
 * @brief Default function to select chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_select(void)            {};
void 	wizchip_cs_select(void)            {}
    31aa:	4770      	bx	lr

000031ac <wizchip_cs_deselect>:
 * @brief Default function to deselect chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_deselect(void)          {};
void 	wizchip_cs_deselect(void)          {}
    31ac:	4770      	bx	lr

000031ae <wizchip_bus_readdata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
 //M20150601 : Rename the function for integrating with W5300
//uint8_t wizchip_bus_readbyte(uint32_t AddrSel) { return * ((volatile uint8_t *)((ptrdiff_t) AddrSel)); }
iodata_t wizchip_bus_readdata(uint32_t AddrSel) { return * ((volatile iodata_t *)((ptrdiff_t) AddrSel)); }
    31ae:	7800      	ldrb	r0, [r0, #0]
    31b0:	b2c0      	uxtb	r0, r0
    31b2:	4770      	bx	lr

000031b4 <wizchip_bus_writedata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//M20150601 : Rename the function for integrating with W5300
//void 	wizchip_bus_writebyte(uint32_t AddrSel, uint8_t wb)  { *((volatile uint8_t*)((ptrdiff_t)AddrSel)) = wb; }
void 	wizchip_bus_writedata(uint32_t AddrSel, iodata_t wb)  { *((volatile iodata_t*)((ptrdiff_t)AddrSel)) = wb; }
    31b4:	7001      	strb	r1, [r0, #0]
    31b6:	4770      	bx	lr

000031b8 <wizchip_spi_readbyte>:
 * @brief Default function to read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//uint8_t wizchip_spi_readbyte(void)        {return 0;};
uint8_t wizchip_spi_readbyte(void)        {return 0;}
    31b8:	2000      	movs	r0, #0
    31ba:	4770      	bx	lr

000031bc <wizchip_spi_writebyte>:
 * @brief Default function to write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writebyte(uint8_t wb) {};
void 	wizchip_spi_writebyte(uint8_t wb) {}
    31bc:	4770      	bx	lr

000031be <wizchip_spi_readburst>:
 * @brief Default function to burst read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_readburst(uint8_t* pBuf, uint16_t len) 	{}; 
void 	wizchip_spi_readburst(uint8_t* pBuf, uint16_t len) 	{}
    31be:	4770      	bx	lr

000031c0 <wizchip_spi_writeburst>:
 * @brief Default function to burst write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writeburst(uint8_t* pBuf, uint16_t len) {};
void 	wizchip_spi_writeburst(uint8_t* pBuf, uint16_t len) {}
    31c0:	4770      	bx	lr
	...

000031c4 <reg_wizchip_cs_cbfunc>:
   }
}

void reg_wizchip_cs_cbfunc(void(*cs_sel)(void), void(*cs_desel)(void))
{
   if(!cs_sel || !cs_desel)
    31c4:	2800      	cmp	r0, #0
    31c6:	d005      	beq.n	31d4 <reg_wizchip_cs_cbfunc+0x10>
    31c8:	2900      	cmp	r1, #0
    31ca:	d003      	beq.n	31d4 <reg_wizchip_cs_cbfunc+0x10>
      WIZCHIP.CS._select   = wizchip_cs_select;
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
   }
   else
   {
      WIZCHIP.CS._select   = cs_sel;
    31cc:	4b04      	ldr	r3, [pc, #16]	; (31e0 <reg_wizchip_cs_cbfunc+0x1c>)
    31ce:	6158      	str	r0, [r3, #20]
      WIZCHIP.CS._deselect = cs_desel;
    31d0:	6199      	str	r1, [r3, #24]
   }
}
    31d2:	4770      	bx	lr
      WIZCHIP.CS._select   = wizchip_cs_select;
    31d4:	4b02      	ldr	r3, [pc, #8]	; (31e0 <reg_wizchip_cs_cbfunc+0x1c>)
    31d6:	4a03      	ldr	r2, [pc, #12]	; (31e4 <reg_wizchip_cs_cbfunc+0x20>)
    31d8:	615a      	str	r2, [r3, #20]
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
    31da:	4a03      	ldr	r2, [pc, #12]	; (31e8 <reg_wizchip_cs_cbfunc+0x24>)
    31dc:	619a      	str	r2, [r3, #24]
    31de:	e7f8      	b.n	31d2 <reg_wizchip_cs_cbfunc+0xe>
    31e0:	2000002c 	.word	0x2000002c
    31e4:	000031ab 	.word	0x000031ab
    31e8:	000031ad 	.word	0x000031ad

000031ec <reg_wizchip_spi_cbfunc>:
   }
}

void reg_wizchip_spi_cbfunc(uint8_t (*spi_rb)(void), void (*spi_wb)(uint8_t wb))
{
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
    31ec:	4b08      	ldr	r3, [pc, #32]	; (3210 <reg_wizchip_spi_cbfunc+0x24>)
    31ee:	881b      	ldrh	r3, [r3, #0]
    31f0:	059b      	lsls	r3, r3, #22
    31f2:	d5fb      	bpl.n	31ec <reg_wizchip_spi_cbfunc>
   
   if(!spi_rb || !spi_wb)
    31f4:	2800      	cmp	r0, #0
    31f6:	d005      	beq.n	3204 <reg_wizchip_spi_cbfunc+0x18>
    31f8:	2900      	cmp	r1, #0
    31fa:	d003      	beq.n	3204 <reg_wizchip_spi_cbfunc+0x18>
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
   }
   else
   {
      WIZCHIP.IF.SPI._read_byte   = spi_rb;
    31fc:	4b04      	ldr	r3, [pc, #16]	; (3210 <reg_wizchip_spi_cbfunc+0x24>)
    31fe:	61d8      	str	r0, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = spi_wb;
    3200:	6219      	str	r1, [r3, #32]
   }
}
    3202:	4770      	bx	lr
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
    3204:	4b02      	ldr	r3, [pc, #8]	; (3210 <reg_wizchip_spi_cbfunc+0x24>)
    3206:	4a03      	ldr	r2, [pc, #12]	; (3214 <reg_wizchip_spi_cbfunc+0x28>)
    3208:	61da      	str	r2, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
    320a:	4a03      	ldr	r2, [pc, #12]	; (3218 <reg_wizchip_spi_cbfunc+0x2c>)
    320c:	621a      	str	r2, [r3, #32]
    320e:	e7f8      	b.n	3202 <reg_wizchip_spi_cbfunc+0x16>
    3210:	2000002c 	.word	0x2000002c
    3214:	000031b9 	.word	0x000031b9
    3218:	000031bd 	.word	0x000031bd

0000321c <reg_wizchip_spiburst_cbfunc>:

// 20140626 Eric Added for SPI burst operations
void reg_wizchip_spiburst_cbfunc(void (*spi_rb)(uint8_t* pBuf, uint16_t len), void (*spi_wb)(uint8_t* pBuf, uint16_t len))
{
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
    321c:	4b08      	ldr	r3, [pc, #32]	; (3240 <reg_wizchip_spiburst_cbfunc+0x24>)
    321e:	881b      	ldrh	r3, [r3, #0]
    3220:	059b      	lsls	r3, r3, #22
    3222:	d5fb      	bpl.n	321c <reg_wizchip_spiburst_cbfunc>

   if(!spi_rb || !spi_wb)
    3224:	2800      	cmp	r0, #0
    3226:	d005      	beq.n	3234 <reg_wizchip_spiburst_cbfunc+0x18>
    3228:	2900      	cmp	r1, #0
    322a:	d003      	beq.n	3234 <reg_wizchip_spiburst_cbfunc+0x18>
      WIZCHIP.IF.SPI._read_burst   = wizchip_spi_readburst;
      WIZCHIP.IF.SPI._write_burst  = wizchip_spi_writeburst;
   }
   else
   {
      WIZCHIP.IF.SPI._read_burst   = spi_rb;
    322c:	4b04      	ldr	r3, [pc, #16]	; (3240 <reg_wizchip_spiburst_cbfunc+0x24>)
    322e:	6258      	str	r0, [r3, #36]	; 0x24
      WIZCHIP.IF.SPI._write_burst  = spi_wb;
    3230:	6299      	str	r1, [r3, #40]	; 0x28
   }
}
    3232:	4770      	bx	lr
      WIZCHIP.IF.SPI._read_burst   = wizchip_spi_readburst;
    3234:	4b02      	ldr	r3, [pc, #8]	; (3240 <reg_wizchip_spiburst_cbfunc+0x24>)
    3236:	4a03      	ldr	r2, [pc, #12]	; (3244 <reg_wizchip_spiburst_cbfunc+0x28>)
    3238:	625a      	str	r2, [r3, #36]	; 0x24
      WIZCHIP.IF.SPI._write_burst  = wizchip_spi_writeburst;
    323a:	4a03      	ldr	r2, [pc, #12]	; (3248 <reg_wizchip_spiburst_cbfunc+0x2c>)
    323c:	629a      	str	r2, [r3, #40]	; 0x28
    323e:	e7f8      	b.n	3232 <reg_wizchip_spiburst_cbfunc+0x16>
    3240:	2000002c 	.word	0x2000002c
    3244:	000031bf 	.word	0x000031bf
    3248:	000031c1 	.word	0x000031c1

0000324c <wizchip_sw_reset>:
   }
   return 0;
}

void wizchip_sw_reset(void)
{
    324c:	b5f0      	push	{r4, r5, r6, r7, lr}
    324e:	b087      	sub	sp, #28
#if _WIZCHIP_IO_MODE_  == _WIZCHIP_IO_MODE_BUS_INDIR_
   uint16_t mr = (uint16_t)getMR();
   setMR(mr | MR_IND);
#endif
//
   getSHAR(mac);
    3250:	2790      	movs	r7, #144	; 0x90
    3252:	013f      	lsls	r7, r7, #4
    3254:	2206      	movs	r2, #6
    3256:	a901      	add	r1, sp, #4
    3258:	0038      	movs	r0, r7
    325a:	f7ff fe3b 	bl	2ed4 <WIZCHIP_READ_BUF>
   getGAR(gw);  getSUBR(sn);  getSIPR(sip);
    325e:	2680      	movs	r6, #128	; 0x80
    3260:	0076      	lsls	r6, r6, #1
    3262:	2204      	movs	r2, #4
    3264:	a905      	add	r1, sp, #20
    3266:	0030      	movs	r0, r6
    3268:	f7ff fe34 	bl	2ed4 <WIZCHIP_READ_BUF>
    326c:	25a0      	movs	r5, #160	; 0xa0
    326e:	00ed      	lsls	r5, r5, #3
    3270:	2204      	movs	r2, #4
    3272:	a904      	add	r1, sp, #16
    3274:	0028      	movs	r0, r5
    3276:	f7ff fe2d 	bl	2ed4 <WIZCHIP_READ_BUF>
    327a:	24f0      	movs	r4, #240	; 0xf0
    327c:	0124      	lsls	r4, r4, #4
    327e:	2204      	movs	r2, #4
    3280:	a903      	add	r1, sp, #12
    3282:	0020      	movs	r0, r4
    3284:	f7ff fe26 	bl	2ed4 <WIZCHIP_READ_BUF>
   setMR(MR_RST);
    3288:	2180      	movs	r1, #128	; 0x80
    328a:	2000      	movs	r0, #0
    328c:	f7ff fdf2 	bl	2e74 <WIZCHIP_WRITE>
   getMR(); // for delay
    3290:	2000      	movs	r0, #0
    3292:	f7ff fdbd 	bl	2e10 <WIZCHIP_READ>
//A2015051 : For indirect bus mode 
#if _WIZCHIP_IO_MODE_  == _WIZCHIP_IO_MODE_BUS_INDIR_
   setMR(mr | MR_IND);
#endif
//
   setSHAR(mac);
    3296:	2206      	movs	r2, #6
    3298:	a901      	add	r1, sp, #4
    329a:	0038      	movs	r0, r7
    329c:	f7ff fe5a 	bl	2f54 <WIZCHIP_WRITE_BUF>
   setGAR(gw);
    32a0:	2204      	movs	r2, #4
    32a2:	a905      	add	r1, sp, #20
    32a4:	0030      	movs	r0, r6
    32a6:	f7ff fe55 	bl	2f54 <WIZCHIP_WRITE_BUF>
   setSUBR(sn);
    32aa:	2204      	movs	r2, #4
    32ac:	a904      	add	r1, sp, #16
    32ae:	0028      	movs	r0, r5
    32b0:	f7ff fe50 	bl	2f54 <WIZCHIP_WRITE_BUF>
   setSIPR(sip);
    32b4:	2204      	movs	r2, #4
    32b6:	a903      	add	r1, sp, #12
    32b8:	0020      	movs	r0, r4
    32ba:	f7ff fe4b 	bl	2f54 <WIZCHIP_WRITE_BUF>
}
    32be:	b007      	add	sp, #28
    32c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

000032c2 <wizchip_init>:

int8_t wizchip_init(uint8_t* txsize, uint8_t* rxsize)
{
    32c2:	b570      	push	{r4, r5, r6, lr}
    32c4:	0006      	movs	r6, r0
    32c6:	000d      	movs	r5, r1
   int8_t i;
#if _WIZCHIP_ < W5200
   int8_t j;
#endif
   int8_t tmp = 0;
   wizchip_sw_reset();
    32c8:	f7ff ffc0 	bl	324c <wizchip_sw_reset>
   if(txsize)
    32cc:	2e00      	cmp	r6, #0
    32ce:	d01b      	beq.n	3308 <wizchip_init+0x46>
    32d0:	2200      	movs	r2, #0
    32d2:	2300      	movs	r3, #0
			tmp += txsize[i];
			if(tmp > 128) return -1;
		}
		if(tmp % 8) return -1;
#else
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    32d4:	2b07      	cmp	r3, #7
    32d6:	dc07      	bgt.n	32e8 <wizchip_init+0x26>
		{
			tmp += txsize[i];
    32d8:	5cf1      	ldrb	r1, [r6, r3]
    32da:	188a      	adds	r2, r1, r2
    32dc:	b252      	sxtb	r2, r2

#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100 and w5100s
			if(tmp > 8) return -1;
#else
			if(tmp > 16) return -1;
    32de:	2a10      	cmp	r2, #16
    32e0:	dc34      	bgt.n	334c <wizchip_init+0x8a>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    32e2:	3301      	adds	r3, #1
    32e4:	b25b      	sxtb	r3, r3
    32e6:	e7f5      	b.n	32d4 <wizchip_init+0x12>
    32e8:	2400      	movs	r4, #0
    32ea:	e00b      	b.n	3304 <wizchip_init+0x42>
#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100
			j = 0;
			while((txsize[i] >> j != 1)&&(txsize[i] !=0)){j++;}
			setSn_TXBUF_SIZE(i, j);
#else
			setSn_TXBUF_SIZE(i, txsize[i]);
    32ec:	00a0      	lsls	r0, r4, #2
    32ee:	3001      	adds	r0, #1
    32f0:	00c0      	lsls	r0, r0, #3
    32f2:	23f8      	movs	r3, #248	; 0xf8
    32f4:	015b      	lsls	r3, r3, #5
    32f6:	469c      	mov	ip, r3
    32f8:	4460      	add	r0, ip
    32fa:	5d31      	ldrb	r1, [r6, r4]
    32fc:	f7ff fdba 	bl	2e74 <WIZCHIP_WRITE>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    3300:	3401      	adds	r4, #1
    3302:	b264      	sxtb	r4, r4
    3304:	2c07      	cmp	r4, #7
    3306:	ddf1      	ble.n	32ec <wizchip_init+0x2a>
#endif
		}	
   }

   if(rxsize)
    3308:	2d00      	cmp	r5, #0
    330a:	d00b      	beq.n	3324 <wizchip_init+0x62>
    330c:	2200      	movs	r2, #0
    330e:	2300      	movs	r3, #0
			tmp += rxsize[i];
			if(tmp > 128) return -1;
		}
		if(tmp % 8) return -1;
#else
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    3310:	2b07      	cmp	r3, #7
    3312:	dc09      	bgt.n	3328 <wizchip_init+0x66>
		{
			tmp += rxsize[i];
    3314:	5ce9      	ldrb	r1, [r5, r3]
    3316:	188a      	adds	r2, r1, r2
    3318:	b252      	sxtb	r2, r2
#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100 and w5100s
			if(tmp > 8) return -1;
#else
			if(tmp > 16) return -1;
    331a:	2a10      	cmp	r2, #16
    331c:	dc19      	bgt.n	3352 <wizchip_init+0x90>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    331e:	3301      	adds	r3, #1
    3320:	b25b      	sxtb	r3, r3
    3322:	e7f5      	b.n	3310 <wizchip_init+0x4e>
#else
			setSn_RXBUF_SIZE(i, rxsize[i]);
#endif
		}
   }
   return 0;
    3324:	2000      	movs	r0, #0
    3326:	e010      	b.n	334a <wizchip_init+0x88>
    3328:	2400      	movs	r4, #0
    332a:	e00b      	b.n	3344 <wizchip_init+0x82>
			setSn_RXBUF_SIZE(i, rxsize[i]);
    332c:	00a0      	lsls	r0, r4, #2
    332e:	3001      	adds	r0, #1
    3330:	00c0      	lsls	r0, r0, #3
    3332:	23f0      	movs	r3, #240	; 0xf0
    3334:	015b      	lsls	r3, r3, #5
    3336:	469c      	mov	ip, r3
    3338:	4460      	add	r0, ip
    333a:	5d29      	ldrb	r1, [r5, r4]
    333c:	f7ff fd9a 	bl	2e74 <WIZCHIP_WRITE>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    3340:	3401      	adds	r4, #1
    3342:	b264      	sxtb	r4, r4
    3344:	2c07      	cmp	r4, #7
    3346:	ddf1      	ble.n	332c <wizchip_init+0x6a>
   return 0;
    3348:	2000      	movs	r0, #0
}
    334a:	bd70      	pop	{r4, r5, r6, pc}
			if(tmp > 16) return -1;
    334c:	2001      	movs	r0, #1
    334e:	4240      	negs	r0, r0
    3350:	e7fb      	b.n	334a <wizchip_init+0x88>
			if(tmp > 16) return -1;
    3352:	2001      	movs	r0, #1
    3354:	4240      	negs	r0, r0
    3356:	e7f8      	b.n	334a <wizchip_init+0x88>

00003358 <wizphy_reset>:
}

#endif
#if _WIZCHIP_ == W5500
void wizphy_reset(void)
{
    3358:	b510      	push	{r4, lr}
   uint8_t tmp = getPHYCFGR();
    335a:	24b8      	movs	r4, #184	; 0xb8
    335c:	01a4      	lsls	r4, r4, #6
    335e:	0020      	movs	r0, r4
    3360:	f7ff fd56 	bl	2e10 <WIZCHIP_READ>
   tmp &= PHYCFGR_RST;
    3364:	217f      	movs	r1, #127	; 0x7f
    3366:	4001      	ands	r1, r0
   setPHYCFGR(tmp);
    3368:	0020      	movs	r0, r4
    336a:	f7ff fd83 	bl	2e74 <WIZCHIP_WRITE>
   tmp = getPHYCFGR();
    336e:	0020      	movs	r0, r4
    3370:	f7ff fd4e 	bl	2e10 <WIZCHIP_READ>
   tmp |= ~PHYCFGR_RST;
    3374:	2180      	movs	r1, #128	; 0x80
    3376:	4249      	negs	r1, r1
    3378:	4301      	orrs	r1, r0
    337a:	b2c9      	uxtb	r1, r1
   setPHYCFGR(tmp);
    337c:	0020      	movs	r0, r4
    337e:	f7ff fd79 	bl	2e74 <WIZCHIP_WRITE>
}
    3382:	bd10      	pop	{r4, pc}

00003384 <wizchip_setnetinfo>:
}
#endif


void wizchip_setnetinfo(wiz_NetInfo* pnetinfo)
{
    3384:	b510      	push	{r4, lr}
    3386:	0004      	movs	r4, r0
   setSHAR(pnetinfo->mac);
    3388:	2206      	movs	r2, #6
    338a:	0001      	movs	r1, r0
    338c:	2090      	movs	r0, #144	; 0x90
    338e:	0100      	lsls	r0, r0, #4
    3390:	f7ff fde0 	bl	2f54 <WIZCHIP_WRITE_BUF>
   setGAR(pnetinfo->gw);
    3394:	0021      	movs	r1, r4
    3396:	310e      	adds	r1, #14
    3398:	2204      	movs	r2, #4
    339a:	2080      	movs	r0, #128	; 0x80
    339c:	0040      	lsls	r0, r0, #1
    339e:	f7ff fdd9 	bl	2f54 <WIZCHIP_WRITE_BUF>
   setSUBR(pnetinfo->sn);
    33a2:	0021      	movs	r1, r4
    33a4:	310a      	adds	r1, #10
    33a6:	2204      	movs	r2, #4
    33a8:	20a0      	movs	r0, #160	; 0xa0
    33aa:	00c0      	lsls	r0, r0, #3
    33ac:	f7ff fdd2 	bl	2f54 <WIZCHIP_WRITE_BUF>
   setSIPR(pnetinfo->ip);
    33b0:	1da1      	adds	r1, r4, #6
    33b2:	2204      	movs	r2, #4
    33b4:	20f0      	movs	r0, #240	; 0xf0
    33b6:	0100      	lsls	r0, r0, #4
    33b8:	f7ff fdcc 	bl	2f54 <WIZCHIP_WRITE_BUF>
   _DNS_[0] = pnetinfo->dns[0];
    33bc:	7ca2      	ldrb	r2, [r4, #18]
    33be:	4b06      	ldr	r3, [pc, #24]	; (33d8 <wizchip_setnetinfo+0x54>)
    33c0:	701a      	strb	r2, [r3, #0]
   _DNS_[1] = pnetinfo->dns[1];
    33c2:	7ce2      	ldrb	r2, [r4, #19]
    33c4:	705a      	strb	r2, [r3, #1]
   _DNS_[2] = pnetinfo->dns[2];
    33c6:	7d22      	ldrb	r2, [r4, #20]
    33c8:	709a      	strb	r2, [r3, #2]
   _DNS_[3] = pnetinfo->dns[3];
    33ca:	7d62      	ldrb	r2, [r4, #21]
    33cc:	70da      	strb	r2, [r3, #3]
   _DHCP_   = pnetinfo->dhcp;
    33ce:	7da2      	ldrb	r2, [r4, #22]
    33d0:	4b02      	ldr	r3, [pc, #8]	; (33dc <wizchip_setnetinfo+0x58>)
    33d2:	701a      	strb	r2, [r3, #0]
}
    33d4:	bd10      	pop	{r4, pc}
    33d6:	46c0      	nop			; (mov r8, r8)
    33d8:	20000ad0 	.word	0x20000ad0
    33dc:	20000acc 	.word	0x20000acc

000033e0 <wizchip_getnetinfo>:

void wizchip_getnetinfo(wiz_NetInfo* pnetinfo)
{
    33e0:	b510      	push	{r4, lr}
    33e2:	0004      	movs	r4, r0
   getSHAR(pnetinfo->mac);
    33e4:	2206      	movs	r2, #6
    33e6:	0001      	movs	r1, r0
    33e8:	2090      	movs	r0, #144	; 0x90
    33ea:	0100      	lsls	r0, r0, #4
    33ec:	f7ff fd72 	bl	2ed4 <WIZCHIP_READ_BUF>
   getGAR(pnetinfo->gw);
    33f0:	0021      	movs	r1, r4
    33f2:	310e      	adds	r1, #14
    33f4:	2204      	movs	r2, #4
    33f6:	2080      	movs	r0, #128	; 0x80
    33f8:	0040      	lsls	r0, r0, #1
    33fa:	f7ff fd6b 	bl	2ed4 <WIZCHIP_READ_BUF>
   getSUBR(pnetinfo->sn);
    33fe:	0021      	movs	r1, r4
    3400:	310a      	adds	r1, #10
    3402:	2204      	movs	r2, #4
    3404:	20a0      	movs	r0, #160	; 0xa0
    3406:	00c0      	lsls	r0, r0, #3
    3408:	f7ff fd64 	bl	2ed4 <WIZCHIP_READ_BUF>
   getSIPR(pnetinfo->ip);
    340c:	1da1      	adds	r1, r4, #6
    340e:	2204      	movs	r2, #4
    3410:	20f0      	movs	r0, #240	; 0xf0
    3412:	0100      	lsls	r0, r0, #4
    3414:	f7ff fd5e 	bl	2ed4 <WIZCHIP_READ_BUF>
   pnetinfo->dns[0]= _DNS_[0];
    3418:	4b06      	ldr	r3, [pc, #24]	; (3434 <wizchip_getnetinfo+0x54>)
    341a:	781a      	ldrb	r2, [r3, #0]
    341c:	74a2      	strb	r2, [r4, #18]
   pnetinfo->dns[1]= _DNS_[1];
    341e:	785a      	ldrb	r2, [r3, #1]
    3420:	74e2      	strb	r2, [r4, #19]
   pnetinfo->dns[2]= _DNS_[2];
    3422:	789a      	ldrb	r2, [r3, #2]
    3424:	7522      	strb	r2, [r4, #20]
   pnetinfo->dns[3]= _DNS_[3];
    3426:	78db      	ldrb	r3, [r3, #3]
    3428:	7563      	strb	r3, [r4, #21]
   pnetinfo->dhcp  = _DHCP_;
    342a:	4b03      	ldr	r3, [pc, #12]	; (3438 <wizchip_getnetinfo+0x58>)
    342c:	781b      	ldrb	r3, [r3, #0]
    342e:	75a3      	strb	r3, [r4, #22]
}
    3430:	bd10      	pop	{r4, pc}
    3432:	46c0      	nop			; (mov r8, r8)
    3434:	20000ad0 	.word	0x20000ad0
    3438:	20000acc 	.word	0x20000acc

0000343c <wizchip_setnetmode>:

int8_t wizchip_setnetmode(netmode_type netmode)
{
    343c:	b510      	push	{r4, lr}
    343e:	0004      	movs	r4, r0
   uint8_t tmp = 0;
#if _WIZCHIP_ != W5500
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK)) return -1;
#else
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK | NM_FORCEARP)) return -1;
    3440:	233a      	movs	r3, #58	; 0x3a
    3442:	0002      	movs	r2, r0
    3444:	439a      	bics	r2, r3
    3446:	d109      	bne.n	345c <wizchip_setnetmode+0x20>
#endif      
   tmp = getMR();
    3448:	2000      	movs	r0, #0
    344a:	f7ff fce1 	bl	2e10 <WIZCHIP_READ>
   tmp |= (uint8_t)netmode;
    344e:	4304      	orrs	r4, r0
    3450:	b2e1      	uxtb	r1, r4
   setMR(tmp);
    3452:	2000      	movs	r0, #0
    3454:	f7ff fd0e 	bl	2e74 <WIZCHIP_WRITE>
   return 0;
    3458:	2000      	movs	r0, #0
}
    345a:	bd10      	pop	{r4, pc}
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK | NM_FORCEARP)) return -1;
    345c:	2001      	movs	r0, #1
    345e:	4240      	negs	r0, r0
    3460:	e7fb      	b.n	345a <wizchip_setnetmode+0x1e>

00003462 <wizchip_getnetmode>:

netmode_type wizchip_getnetmode(void)
{
    3462:	b510      	push	{r4, lr}
   return (netmode_type) getMR();
    3464:	2000      	movs	r0, #0
    3466:	f7ff fcd3 	bl	2e10 <WIZCHIP_READ>
}
    346a:	bd10      	pop	{r4, pc}

0000346c <wizchip_settimeout>:

void wizchip_settimeout(wiz_NetTimeout* nettime)
{
    346c:	b510      	push	{r4, lr}
    346e:	0004      	movs	r4, r0
   setRCR(nettime->retry_cnt);
    3470:	7801      	ldrb	r1, [r0, #0]
    3472:	20d8      	movs	r0, #216	; 0xd8
    3474:	0140      	lsls	r0, r0, #5
    3476:	f7ff fcfd 	bl	2e74 <WIZCHIP_WRITE>
   setRTR(nettime->time_100us);
    347a:	8861      	ldrh	r1, [r4, #2]
    347c:	0a09      	lsrs	r1, r1, #8
    347e:	20c8      	movs	r0, #200	; 0xc8
    3480:	0140      	lsls	r0, r0, #5
    3482:	f7ff fcf7 	bl	2e74 <WIZCHIP_WRITE>
    3486:	78a1      	ldrb	r1, [r4, #2]
    3488:	20d0      	movs	r0, #208	; 0xd0
    348a:	0140      	lsls	r0, r0, #5
    348c:	f7ff fcf2 	bl	2e74 <WIZCHIP_WRITE>
}
    3490:	bd10      	pop	{r4, pc}

00003492 <wizchip_gettimeout>:

void wizchip_gettimeout(wiz_NetTimeout* nettime)
{
    3492:	b570      	push	{r4, r5, r6, lr}
    3494:	0005      	movs	r5, r0
   nettime->retry_cnt = getRCR();
    3496:	20d8      	movs	r0, #216	; 0xd8
    3498:	0140      	lsls	r0, r0, #5
    349a:	f7ff fcb9 	bl	2e10 <WIZCHIP_READ>
    349e:	7028      	strb	r0, [r5, #0]
   nettime->time_100us = getRTR();
    34a0:	20c8      	movs	r0, #200	; 0xc8
    34a2:	0140      	lsls	r0, r0, #5
    34a4:	f7ff fcb4 	bl	2e10 <WIZCHIP_READ>
    34a8:	b280      	uxth	r0, r0
    34aa:	0200      	lsls	r0, r0, #8
    34ac:	b284      	uxth	r4, r0
    34ae:	20d0      	movs	r0, #208	; 0xd0
    34b0:	0140      	lsls	r0, r0, #5
    34b2:	f7ff fcad 	bl	2e10 <WIZCHIP_READ>
    34b6:	b280      	uxth	r0, r0
    34b8:	1824      	adds	r4, r4, r0
    34ba:	806c      	strh	r4, [r5, #2]
}
    34bc:	bd70      	pop	{r4, r5, r6, pc}
	...

000034c0 <ctlnetwork>:
{
    34c0:	b510      	push	{r4, lr}
    34c2:	000c      	movs	r4, r1
   switch(cntype)
    34c4:	2805      	cmp	r0, #5
    34c6:	d820      	bhi.n	350a <ctlnetwork+0x4a>
    34c8:	0080      	lsls	r0, r0, #2
    34ca:	4b11      	ldr	r3, [pc, #68]	; (3510 <ctlnetwork+0x50>)
    34cc:	581b      	ldr	r3, [r3, r0]
    34ce:	469f      	mov	pc, r3
         wizchip_setnetinfo((wiz_NetInfo*)arg);
    34d0:	0008      	movs	r0, r1
    34d2:	f7ff ff57 	bl	3384 <wizchip_setnetinfo>
   return 0;
    34d6:	2000      	movs	r0, #0
}
    34d8:	bd10      	pop	{r4, pc}
         wizchip_getnetinfo((wiz_NetInfo*)arg);
    34da:	0008      	movs	r0, r1
    34dc:	f7ff ff80 	bl	33e0 <wizchip_getnetinfo>
   return 0;
    34e0:	2000      	movs	r0, #0
         break;
    34e2:	e7f9      	b.n	34d8 <ctlnetwork+0x18>
         return wizchip_setnetmode(*(netmode_type*)arg);
    34e4:	7808      	ldrb	r0, [r1, #0]
    34e6:	f7ff ffa9 	bl	343c <wizchip_setnetmode>
    34ea:	e7f5      	b.n	34d8 <ctlnetwork+0x18>
         *(netmode_type*)arg = wizchip_getnetmode();
    34ec:	f7ff ffb9 	bl	3462 <wizchip_getnetmode>
    34f0:	7020      	strb	r0, [r4, #0]
   return 0;
    34f2:	2000      	movs	r0, #0
         break;
    34f4:	e7f0      	b.n	34d8 <ctlnetwork+0x18>
         wizchip_settimeout((wiz_NetTimeout*)arg);
    34f6:	0008      	movs	r0, r1
    34f8:	f7ff ffb8 	bl	346c <wizchip_settimeout>
   return 0;
    34fc:	2000      	movs	r0, #0
         break;
    34fe:	e7eb      	b.n	34d8 <ctlnetwork+0x18>
         wizchip_gettimeout((wiz_NetTimeout*)arg);
    3500:	0008      	movs	r0, r1
    3502:	f7ff ffc6 	bl	3492 <wizchip_gettimeout>
   return 0;
    3506:	2000      	movs	r0, #0
         break;
    3508:	e7e6      	b.n	34d8 <ctlnetwork+0x18>
         return -1;
    350a:	2001      	movs	r0, #1
    350c:	4240      	negs	r0, r0
    350e:	e7e3      	b.n	34d8 <ctlnetwork+0x18>
    3510:	0000daf0 	.word	0x0000daf0

00003514 <main>:
uint8_t rx_tx_buff_sizes[]={2,2,2,2,2,2,2,2};
	
char http_ansver[128]="\0";	

int main(void)
{
    3514:	b5f0      	push	{r4, r5, r6, r7, lr}
    3516:	b0e1      	sub	sp, #388	; 0x184
	mcu_init();
    3518:	f7fe ff12 	bl	2340 <mcu_init>
	reg_wizchip_cs_cbfunc(W5500_Select, W5500_Unselect);
    351c:	49cf      	ldr	r1, [pc, #828]	; (385c <main+0x348>)
    351e:	48d0      	ldr	r0, [pc, #832]	; (3860 <main+0x34c>)
    3520:	f7ff fe50 	bl	31c4 <reg_wizchip_cs_cbfunc>
	reg_wizchip_spi_cbfunc(W5500_ReadByte, W5500_Write_byte);
    3524:	49cf      	ldr	r1, [pc, #828]	; (3864 <main+0x350>)
    3526:	48d0      	ldr	r0, [pc, #832]	; (3868 <main+0x354>)
    3528:	f7ff fe60 	bl	31ec <reg_wizchip_spi_cbfunc>
	reg_wizchip_spiburst_cbfunc(W5500_ReadBuff, W5500_WriteBuff);
    352c:	49cf      	ldr	r1, [pc, #828]	; (386c <main+0x358>)
    352e:	48d0      	ldr	r0, [pc, #832]	; (3870 <main+0x35c>)
    3530:	f7ff fe74 	bl	321c <reg_wizchip_spiburst_cbfunc>
	wizphy_reset();
    3534:	f7ff ff10 	bl	3358 <wizphy_reset>
	delay_ms(100);
    3538:	2064      	movs	r0, #100	; 0x64
    353a:	f7fc fe29 	bl	190 <delay_ms>
	wizchip_init(rx_tx_buff_sizes,rx_tx_buff_sizes);
    353e:	48cd      	ldr	r0, [pc, #820]	; (3874 <main+0x360>)
    3540:	0001      	movs	r1, r0
    3542:	f7ff febe 	bl	32c2 <wizchip_init>
	wizchip_setnetinfo(&netInfo);
    3546:	4ccc      	ldr	r4, [pc, #816]	; (3878 <main+0x364>)
    3548:	0020      	movs	r0, r4
    354a:	f7ff ff1b 	bl	3384 <wizchip_setnetinfo>
	ctlnetwork(CN_SET_NETINFO, (void*) &netInfo);
    354e:	0021      	movs	r1, r4
    3550:	2000      	movs	r0, #0
    3552:	f7ff ffb5 	bl	34c0 <ctlnetwork>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    3556:	23c0      	movs	r3, #192	; 0xc0
    3558:	05db      	lsls	r3, r3, #23
    355a:	2280      	movs	r2, #128	; 0x80
    355c:	03d2      	lsls	r2, r2, #15
    355e:	619a      	str	r2, [r3, #24]
    3560:	2280      	movs	r2, #128	; 0x80
    3562:	0052      	lsls	r2, r2, #1
    3564:	619a      	str	r2, [r3, #24]
    3566:	3201      	adds	r2, #1
    3568:	32ff      	adds	r2, #255	; 0xff
    356a:	619a      	str	r2, [r3, #24]
	
	gpio_set_pin_level(DLDA, true);
	gpio_set_pin_level(O2, true);
	gpio_set_pin_level(O3, true);
	
	setIMR(0xff);
    356c:	21ff      	movs	r1, #255	; 0xff
    356e:	20b0      	movs	r0, #176	; 0xb0
    3570:	0140      	lsls	r0, r0, #5
    3572:	f7ff fc7f 	bl	2e74 <WIZCHIP_WRITE>
	setSIMR(0xff);
    3576:	21ff      	movs	r1, #255	; 0xff
    3578:	20c0      	movs	r0, #192	; 0xc0
    357a:	0140      	lsls	r0, r0, #5
    357c:	f7ff fc7a 	bl	2e74 <WIZCHIP_WRITE>
	setINTLEVEL(1);
    3580:	2100      	movs	r1, #0
    3582:	2098      	movs	r0, #152	; 0x98
    3584:	0140      	lsls	r0, r0, #5
    3586:	f7ff fc75 	bl	2e74 <WIZCHIP_WRITE>
    358a:	2101      	movs	r1, #1
    358c:	20a0      	movs	r0, #160	; 0xa0
    358e:	0140      	lsls	r0, r0, #5
    3590:	f7ff fc70 	bl	2e74 <WIZCHIP_WRITE>
	for(uint8_t HTTP_SOCKET = 0; HTTP_SOCKET <= 7; HTTP_SOCKET++){
    3594:	2400      	movs	r4, #0
    3596:	2c07      	cmp	r4, #7
    3598:	d93b      	bls.n	3612 <main+0xfe>
		ADS1x1x_set_threshold_lo(&my_adc, 0x0000);
		ADS1x1x_set_comparator_queue(&my_adc,COMPARATOR_QUEUE_1);
		ADS1x1x_set_data_rate(&my_adc,DATA_RATE_ADS111x_860);
		ADS1x1x_set_mode(&my_adc,MODE_CONTINUOUS);
	}
	buzer(10);
    359a:	200a      	movs	r0, #10
    359c:	f7fe fae2 	bl	1b64 <buzer>
 */
static inline uint32_t _gpio_get_level(const enum gpio_port port)
{
	uint32_t tmp;

	CRITICAL_SECTION_ENTER();
    35a0:	a81c      	add	r0, sp, #112	; 0x70
    35a2:	f7fc fde7 	bl	174 <atomic_enter_critical>
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    35a6:	23c0      	movs	r3, #192	; 0xc0
    35a8:	05db      	lsls	r3, r3, #23
    35aa:	2280      	movs	r2, #128	; 0x80
    35ac:	589c      	ldr	r4, [r3, r2]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    35ae:	3220      	adds	r2, #32
    35b0:	49b2      	ldr	r1, [pc, #712]	; (387c <main+0x368>)
    35b2:	588a      	ldr	r2, [r1, r2]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    35b4:	2190      	movs	r1, #144	; 0x90
    35b6:	585b      	ldr	r3, [r3, r1]

	uint32_t dir_tmp = hri_port_read_DIR_reg(PORT_IOBUS, port);

	tmp = hri_port_read_IN_reg(PORT, port) & ~dir_tmp;
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    35b8:	4053      	eors	r3, r2
    35ba:	401c      	ands	r4, r3
    35bc:	4054      	eors	r4, r2

	CRITICAL_SECTION_LEAVE();
    35be:	a81c      	add	r0, sp, #112	; 0x70
    35c0:	f7fc fddf 	bl	182 <atomic_leave_critical>
	if (level) {
    35c4:	05e3      	lsls	r3, r4, #23
    35c6:	d450      	bmi.n	366a <main+0x156>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    35c8:	2280      	movs	r2, #128	; 0x80
    35ca:	03d2      	lsls	r2, r2, #15
    35cc:	23c0      	movs	r3, #192	; 0xc0
    35ce:	05db      	lsls	r3, r3, #23
    35d0:	619a      	str	r2, [r3, #24]
		//SerialWrite(testBuffer);
		
	gpio_set_pin_level(DLDA, !gpio_get_pin_level(ETH_INT));
	
	
	if(adcRequest() == 1){
    35d2:	f7fe fecf 	bl	2374 <adcRequest>
    35d6:	2801      	cmp	r0, #1
    35d8:	d04d      	beq.n	3676 <main+0x162>
		adcVal[1] = ADS1x1x_read(&my_adc);
		voltDMM = adcVal[0] * 0.002335539;
		ampDMM = adcVal[1];
	}
	
	if(getSn_SR(UdpRxSockNum) == SOCK_CLOSED){
    35da:	4ba9      	ldr	r3, [pc, #676]	; (3880 <main+0x36c>)
    35dc:	7818      	ldrb	r0, [r3, #0]
    35de:	0080      	lsls	r0, r0, #2
    35e0:	3001      	adds	r0, #1
    35e2:	00c0      	lsls	r0, r0, #3
    35e4:	23c0      	movs	r3, #192	; 0xc0
    35e6:	009b      	lsls	r3, r3, #2
    35e8:	469c      	mov	ip, r3
    35ea:	4460      	add	r0, ip
    35ec:	f7ff fc10 	bl	2e10 <WIZCHIP_READ>
    35f0:	2800      	cmp	r0, #0
    35f2:	d073      	beq.n	36dc <main+0x1c8>
		socket(UdpRxSockNum, Sn_MR_UDP, UdpRxPort, SF_MULTI_ENABLE);
		listen(UdpRxSockNum);
	}
	
	if(getSn_IR(UdpRxSockNum)){ // & Sn_CR_RECV
    35f4:	4ba2      	ldr	r3, [pc, #648]	; (3880 <main+0x36c>)
    35f6:	7818      	ldrb	r0, [r3, #0]
    35f8:	0080      	lsls	r0, r0, #2
    35fa:	3001      	adds	r0, #1
    35fc:	00c0      	lsls	r0, r0, #3
    35fe:	2380      	movs	r3, #128	; 0x80
    3600:	009b      	lsls	r3, r3, #2
    3602:	469c      	mov	ip, r3
    3604:	4460      	add	r0, ip
    3606:	f7ff fc03 	bl	2e10 <WIZCHIP_READ>
    360a:	06c3      	lsls	r3, r0, #27
    360c:	d172      	bne.n	36f4 <main+0x1e0>
    360e:	2705      	movs	r7, #5
    3610:	e0d8      	b.n	37c4 <main+0x2b0>
		setSn_IMR(HTTP_SOCKET, 0x04);
    3612:	00a0      	lsls	r0, r4, #2
    3614:	3001      	adds	r0, #1
    3616:	00c0      	lsls	r0, r0, #3
    3618:	23b0      	movs	r3, #176	; 0xb0
    361a:	019b      	lsls	r3, r3, #6
    361c:	469c      	mov	ip, r3
    361e:	4460      	add	r0, ip
    3620:	2104      	movs	r1, #4
    3622:	f7ff fc27 	bl	2e74 <WIZCHIP_WRITE>
		ADS1x1x_init(&my_adc,ADS1115,ADS1x1x_I2C_ADDRESS_ADDR_TO_GND,MUX_SINGLE_0,PGA_4096);
    3626:	4d97      	ldr	r5, [pc, #604]	; (3884 <main+0x370>)
    3628:	2380      	movs	r3, #128	; 0x80
    362a:	009b      	lsls	r3, r3, #2
    362c:	9300      	str	r3, [sp, #0]
    362e:	2380      	movs	r3, #128	; 0x80
    3630:	01db      	lsls	r3, r3, #7
    3632:	2248      	movs	r2, #72	; 0x48
    3634:	2105      	movs	r1, #5
    3636:	0028      	movs	r0, r5
    3638:	f7fe fa0d 	bl	1a56 <ADS1x1x_init>
		ADS1x1x_set_threshold_hi(&my_adc, 0xFFFF);
    363c:	4992      	ldr	r1, [pc, #584]	; (3888 <main+0x374>)
    363e:	0028      	movs	r0, r5
    3640:	f7fe f9c1 	bl	19c6 <ADS1x1x_set_threshold_hi>
		ADS1x1x_set_threshold_lo(&my_adc, 0x0000);
    3644:	2100      	movs	r1, #0
    3646:	0028      	movs	r0, r5
    3648:	f7fe f9b1 	bl	19ae <ADS1x1x_set_threshold_lo>
		ADS1x1x_set_comparator_queue(&my_adc,COMPARATOR_QUEUE_1);
    364c:	2100      	movs	r1, #0
    364e:	0028      	movs	r0, r5
    3650:	f7fe f9fb 	bl	1a4a <ADS1x1x_set_comparator_queue>
		ADS1x1x_set_data_rate(&my_adc,DATA_RATE_ADS111x_860);
    3654:	21e0      	movs	r1, #224	; 0xe0
    3656:	0028      	movs	r0, r5
    3658:	f7fe f9df 	bl	1a1a <ADS1x1x_set_data_rate>
		ADS1x1x_set_mode(&my_adc,MODE_CONTINUOUS);
    365c:	2100      	movs	r1, #0
    365e:	0028      	movs	r0, r5
    3660:	f7fe f9d5 	bl	1a0e <ADS1x1x_set_mode>
	for(uint8_t HTTP_SOCKET = 0; HTTP_SOCKET <= 7; HTTP_SOCKET++){
    3664:	3401      	adds	r4, #1
    3666:	b2e4      	uxtb	r4, r4
    3668:	e795      	b.n	3596 <main+0x82>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    366a:	2280      	movs	r2, #128	; 0x80
    366c:	03d2      	lsls	r2, r2, #15
    366e:	23c0      	movs	r3, #192	; 0xc0
    3670:	05db      	lsls	r3, r3, #23
    3672:	615a      	str	r2, [r3, #20]
    3674:	e7ad      	b.n	35d2 <main+0xbe>
		ADS1x1x_set_multiplexer(&my_adc,MUX_SINGLE_0);
    3676:	4c83      	ldr	r4, [pc, #524]	; (3884 <main+0x370>)
    3678:	2180      	movs	r1, #128	; 0x80
    367a:	01c9      	lsls	r1, r1, #7
    367c:	0020      	movs	r0, r4
    367e:	f7fe f9ba 	bl	19f6 <ADS1x1x_set_multiplexer>
		ADS1x1x_start_conversion(&my_adc);
    3682:	0020      	movs	r0, r4
    3684:	f7fe f980 	bl	1988 <ADS1x1x_start_conversion>
		delay_ms(2);
    3688:	2002      	movs	r0, #2
    368a:	f7fc fd81 	bl	190 <delay_ms>
		adcVal[0] = ADS1x1x_read(&my_adc);
    368e:	0020      	movs	r0, r4
    3690:	f7fe f981 	bl	1996 <ADS1x1x_read>
    3694:	4d7d      	ldr	r5, [pc, #500]	; (388c <main+0x378>)
    3696:	8028      	strh	r0, [r5, #0]
		ADS1x1x_set_multiplexer(&my_adc,MUX_SINGLE_1);
    3698:	21a0      	movs	r1, #160	; 0xa0
    369a:	01c9      	lsls	r1, r1, #7
    369c:	0020      	movs	r0, r4
    369e:	f7fe f9aa 	bl	19f6 <ADS1x1x_set_multiplexer>
		ADS1x1x_start_conversion(&my_adc);
    36a2:	0020      	movs	r0, r4
    36a4:	f7fe f970 	bl	1988 <ADS1x1x_start_conversion>
		delay_ms(2);
    36a8:	2002      	movs	r0, #2
    36aa:	f7fc fd71 	bl	190 <delay_ms>
		adcVal[1] = ADS1x1x_read(&my_adc);
    36ae:	0020      	movs	r0, r4
    36b0:	f7fe f971 	bl	1996 <ADS1x1x_read>
    36b4:	0004      	movs	r4, r0
    36b6:	8068      	strh	r0, [r5, #2]
		voltDMM = adcVal[0] * 0.002335539;
    36b8:	2300      	movs	r3, #0
    36ba:	5ee8      	ldrsh	r0, [r5, r3]
    36bc:	f001 ff3a 	bl	5534 <__aeabi_i2d>
    36c0:	4a73      	ldr	r2, [pc, #460]	; (3890 <main+0x37c>)
    36c2:	4b74      	ldr	r3, [pc, #464]	; (3894 <main+0x380>)
    36c4:	f001 f96c 	bl	49a0 <__aeabi_dmul>
    36c8:	f002 f800 	bl	56cc <__aeabi_d2f>
    36cc:	4b72      	ldr	r3, [pc, #456]	; (3898 <main+0x384>)
    36ce:	6018      	str	r0, [r3, #0]
		ampDMM = adcVal[1];
    36d0:	0020      	movs	r0, r4
    36d2:	f000 fde1 	bl	4298 <__aeabi_i2f>
    36d6:	4b71      	ldr	r3, [pc, #452]	; (389c <main+0x388>)
    36d8:	6018      	str	r0, [r3, #0]
    36da:	e77e      	b.n	35da <main+0xc6>
		socket(UdpRxSockNum, Sn_MR_UDP, UdpRxPort, SF_MULTI_ENABLE);
    36dc:	4b70      	ldr	r3, [pc, #448]	; (38a0 <main+0x38c>)
    36de:	881a      	ldrh	r2, [r3, #0]
    36e0:	4c67      	ldr	r4, [pc, #412]	; (3880 <main+0x36c>)
    36e2:	7820      	ldrb	r0, [r4, #0]
    36e4:	2380      	movs	r3, #128	; 0x80
    36e6:	2102      	movs	r1, #2
    36e8:	f7fe fe8c 	bl	2404 <socket>
		listen(UdpRxSockNum);
    36ec:	7820      	ldrb	r0, [r4, #0]
    36ee:	f7fe ff41 	bl	2574 <listen>
    36f2:	e77f      	b.n	35f4 <main+0xe0>
		uint16_t udp_size = getSn_RX_RSR(UdpRxSockNum);
    36f4:	4b62      	ldr	r3, [pc, #392]	; (3880 <main+0x36c>)
    36f6:	7818      	ldrb	r0, [r3, #0]
    36f8:	f7ff fc9a 	bl	3030 <getSn_RX_RSR>
    36fc:	1e04      	subs	r4, r0, #0
		if (udp_size > 0) {
    36fe:	d086      	beq.n	360e <main+0xfa>
			uint8_t ip[4];
			uint16_t port;
			if (udp_size > TCP_RX_BUF) udp_size = TCP_RX_BUF;
    3700:	4b68      	ldr	r3, [pc, #416]	; (38a4 <main+0x390>)
    3702:	4298      	cmp	r0, r3
    3704:	d900      	bls.n	3708 <main+0x1f4>
    3706:	b29c      	uxth	r4, r3
			memset(TCP_RX_BUF, 0, sizeof(TCP_RX_BUF));
    3708:	2280      	movs	r2, #128	; 0x80
    370a:	0112      	lsls	r2, r2, #4
    370c:	2100      	movs	r1, #0
    370e:	4865      	ldr	r0, [pc, #404]	; (38a4 <main+0x390>)
    3710:	f002 fa12 	bl	5b38 <memset>
			uint16_t ret = recvfrom(UdpRxSockNum, (uint8_t*)TCP_RX_BUF, udp_size, ip, &port);
    3714:	4e5a      	ldr	r6, [pc, #360]	; (3880 <main+0x36c>)
    3716:	7830      	ldrb	r0, [r6, #0]
    3718:	ab1d      	add	r3, sp, #116	; 0x74
    371a:	9300      	str	r3, [sp, #0]
    371c:	ab20      	add	r3, sp, #128	; 0x80
    371e:	0022      	movs	r2, r4
    3720:	4960      	ldr	r1, [pc, #384]	; (38a4 <main+0x390>)
    3722:	f7ff f977 	bl	2a14 <recvfrom>
			uint8_t result = 0;
			result = socket(UdpTxSockNum, Sn_MR_UDP, UdpTxPort, SF_IO_NONBLOCK);
    3726:	4f60      	ldr	r7, [pc, #384]	; (38a8 <main+0x394>)
    3728:	883a      	ldrh	r2, [r7, #0]
    372a:	4d60      	ldr	r5, [pc, #384]	; (38ac <main+0x398>)
    372c:	7828      	ldrb	r0, [r5, #0]
    372e:	2301      	movs	r3, #1
    3730:	2102      	movs	r1, #2
    3732:	f7fe fe67 	bl	2404 <socket>
			result = sendto(UdpTxSockNum, TCP_RX_BUF, udp_size, ip, UdpTxPort);
    3736:	7828      	ldrb	r0, [r5, #0]
    3738:	883b      	ldrh	r3, [r7, #0]
    373a:	9300      	str	r3, [sp, #0]
    373c:	ab20      	add	r3, sp, #128	; 0x80
    373e:	0022      	movs	r2, r4
    3740:	4958      	ldr	r1, [pc, #352]	; (38a4 <main+0x390>)
    3742:	f7ff f8ad 	bl	28a0 <sendto>
			setSn_IR(UdpRxSockNum, 0x1F);	
    3746:	7830      	ldrb	r0, [r6, #0]
    3748:	0080      	lsls	r0, r0, #2
    374a:	3001      	adds	r0, #1
    374c:	00c0      	lsls	r0, r0, #3
    374e:	2380      	movs	r3, #128	; 0x80
    3750:	009b      	lsls	r3, r3, #2
    3752:	469c      	mov	ip, r3
    3754:	4460      	add	r0, ip
    3756:	211f      	movs	r1, #31
    3758:	f7ff fb8c 	bl	2e74 <WIZCHIP_WRITE>
    375c:	e757      	b.n	360e <main+0xfa>
				size_t total_length = strlen(psu_page);
				size_t sent_length = 0;

				while (sent_length < total_length) {
					size_t chunk_size = total_length - sent_length > 1024 ? 1024 : total_length - sent_length;
					send(HTTP_SOCKET, (uint8_t*)(psu_page + sent_length), chunk_size);
    375e:	b2aa      	uxth	r2, r5
    3760:	4953      	ldr	r1, [pc, #332]	; (38b0 <main+0x39c>)
    3762:	1989      	adds	r1, r1, r6
    3764:	0038      	movs	r0, r7
    3766:	f7fe ff85 	bl	2674 <send>
					delay_ms(20);
    376a:	2014      	movs	r0, #20
    376c:	f7fc fd10 	bl	190 <delay_ms>
					sent_length += chunk_size;
    3770:	1976      	adds	r6, r6, r5
				while (sent_length < total_length) {
    3772:	4b50      	ldr	r3, [pc, #320]	; (38b4 <main+0x3a0>)
    3774:	429e      	cmp	r6, r3
    3776:	d817      	bhi.n	37a8 <main+0x294>
					size_t chunk_size = total_length - sent_length > 1024 ? 1024 : total_length - sent_length;
    3778:	4d4f      	ldr	r5, [pc, #316]	; (38b8 <main+0x3a4>)
    377a:	1bad      	subs	r5, r5, r6
    377c:	2380      	movs	r3, #128	; 0x80
    377e:	00db      	lsls	r3, r3, #3
    3780:	429d      	cmp	r5, r3
    3782:	d9ec      	bls.n	375e <main+0x24a>
    3784:	001d      	movs	r5, r3
    3786:	e7ea      	b.n	375e <main+0x24a>
				}
			
			//favicon handler	
			} else if (strstr((char*)TCP_RX_BUF, "GET /favicon.ico") != NULL) {
    3788:	494c      	ldr	r1, [pc, #304]	; (38bc <main+0x3a8>)
    378a:	4846      	ldr	r0, [pc, #280]	; (38a4 <main+0x390>)
    378c:	f002 fcd0 	bl	6130 <strstr>
    3790:	2800      	cmp	r0, #0
    3792:	d049      	beq.n	3828 <main+0x314>
				send(HTTP_SOCKET, (uint8_t*)"HTTP/1.1 200 OK\r\nContent-Type: image/x-icon\r\n\r\n", 47);
    3794:	222f      	movs	r2, #47	; 0x2f
    3796:	494a      	ldr	r1, [pc, #296]	; (38c0 <main+0x3ac>)
    3798:	0038      	movs	r0, r7
    379a:	f7fe ff6b 	bl	2674 <send>
				send(HTTP_SOCKET, favicon_ico, sizeof(favicon_ico));	
    379e:	4a49      	ldr	r2, [pc, #292]	; (38c4 <main+0x3b0>)
    37a0:	4949      	ldr	r1, [pc, #292]	; (38c8 <main+0x3b4>)
    37a2:	0038      	movs	r0, r7
    37a4:	f7fe ff66 	bl	2674 <send>
					remoteCtrl = 1;
				}
				send(HTTP_SOCKET, (uint8_t*)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\"success\":true}", 65);				
				}

			disconnect(HTTP_SOCKET);
    37a8:	0038      	movs	r0, r7
    37aa:	f7fe ff1b 	bl	25e4 <disconnect>
			close(HTTP_SOCKET);
    37ae:	0038      	movs	r0, r7
    37b0:	f7fe fde8 	bl	2384 <close>

		//if (getSn_SR(HTTP_SOCKET) == SOCK_CLOSE_WAIT) {
			//disconnect(HTTP_SOCKET);
		//}

		if (getSn_SR(HTTP_SOCKET) == SOCK_CLOSED) {
    37b4:	0020      	movs	r0, r4
    37b6:	f7ff fb2b 	bl	2e10 <WIZCHIP_READ>
    37ba:	2800      	cmp	r0, #0
    37bc:	d100      	bne.n	37c0 <main+0x2ac>
    37be:	e170      	b.n	3aa2 <main+0x58e>
	for(uint8_t HTTP_SOCKET = 5; HTTP_SOCKET <= 7; HTTP_SOCKET++) {
    37c0:	3701      	adds	r7, #1
    37c2:	b2ff      	uxtb	r7, r7
    37c4:	2f07      	cmp	r7, #7
    37c6:	d900      	bls.n	37ca <main+0x2b6>
    37c8:	e6ea      	b.n	35a0 <main+0x8c>
		if (getSn_SR(HTTP_SOCKET) == SOCK_ESTABLISHED) {
    37ca:	9711      	str	r7, [sp, #68]	; 0x44
    37cc:	00bc      	lsls	r4, r7, #2
    37ce:	3401      	adds	r4, #1
    37d0:	00e4      	lsls	r4, r4, #3
    37d2:	23c0      	movs	r3, #192	; 0xc0
    37d4:	009b      	lsls	r3, r3, #2
    37d6:	469c      	mov	ip, r3
    37d8:	4464      	add	r4, ip
    37da:	0020      	movs	r0, r4
    37dc:	f7ff fb18 	bl	2e10 <WIZCHIP_READ>
    37e0:	2817      	cmp	r0, #23
    37e2:	d1e7      	bne.n	37b4 <main+0x2a0>
			getsockopt(HTTP_SOCKET, SO_DESTIP, rIP);
    37e4:	aa1b      	add	r2, sp, #108	; 0x6c
    37e6:	2104      	movs	r1, #4
    37e8:	0038      	movs	r0, r7
    37ea:	f7ff fa51 	bl	2c90 <getsockopt>
			uint16_t res_size = getSn_RX_RSR(HTTP_SOCKET);
    37ee:	0038      	movs	r0, r7
    37f0:	f7ff fc1e 	bl	3030 <getSn_RX_RSR>
    37f4:	0005      	movs	r5, r0
			if (res_size > sizeof(TCP_RX_BUF)) {
    37f6:	2380      	movs	r3, #128	; 0x80
    37f8:	011b      	lsls	r3, r3, #4
    37fa:	4298      	cmp	r0, r3
    37fc:	d900      	bls.n	3800 <main+0x2ec>
				res_size = sizeof(TCP_RX_BUF);
    37fe:	001d      	movs	r5, r3
			memset(TCP_RX_BUF, 0, sizeof(TCP_RX_BUF));
    3800:	4e28      	ldr	r6, [pc, #160]	; (38a4 <main+0x390>)
    3802:	2280      	movs	r2, #128	; 0x80
    3804:	0112      	lsls	r2, r2, #4
    3806:	2100      	movs	r1, #0
    3808:	0030      	movs	r0, r6
    380a:	f002 f995 	bl	5b38 <memset>
			recv(HTTP_SOCKET, (uint8_t*)TCP_RX_BUF, res_size);
    380e:	002a      	movs	r2, r5
    3810:	0031      	movs	r1, r6
    3812:	0038      	movs	r0, r7
    3814:	f7fe ffca 	bl	27ac <recv>
			if (strstr((char*)TCP_RX_BUF, "GET / ") != NULL) {
    3818:	492c      	ldr	r1, [pc, #176]	; (38cc <main+0x3b8>)
    381a:	0030      	movs	r0, r6
    381c:	f002 fc88 	bl	6130 <strstr>
    3820:	2800      	cmp	r0, #0
    3822:	d0b1      	beq.n	3788 <main+0x274>
    3824:	2600      	movs	r6, #0
    3826:	e7a4      	b.n	3772 <main+0x25e>
			} else if (strstr((char*)TCP_RX_BUF, "GET /set_vals") != NULL) {
    3828:	4929      	ldr	r1, [pc, #164]	; (38d0 <main+0x3bc>)
    382a:	481e      	ldr	r0, [pc, #120]	; (38a4 <main+0x390>)
    382c:	f002 fc80 	bl	6130 <strstr>
    3830:	2800      	cmp	r0, #0
    3832:	d059      	beq.n	38e8 <main+0x3d4>
				char *query_string = strstr((char*)TCP_RX_BUF, "GET /set_vals") + strlen("GET /set_vals?");
    3834:	300e      	adds	r0, #14
    3836:	0005      	movs	r5, r0
				buzer(10);
    3838:	200a      	movs	r0, #10
    383a:	f7fe f993 	bl	1b64 <buzer>
				sscanf(query_string, "amp=%f&volt=%f", &amp, &volt);
    383e:	4b25      	ldr	r3, [pc, #148]	; (38d4 <main+0x3c0>)
    3840:	4a25      	ldr	r2, [pc, #148]	; (38d8 <main+0x3c4>)
    3842:	4926      	ldr	r1, [pc, #152]	; (38dc <main+0x3c8>)
    3844:	0028      	movs	r0, r5
    3846:	f002 fa03 	bl	5c50 <sscanf>
				remoteCtrl = 1;
    384a:	2201      	movs	r2, #1
    384c:	4b24      	ldr	r3, [pc, #144]	; (38e0 <main+0x3cc>)
    384e:	701a      	strb	r2, [r3, #0]
				send(HTTP_SOCKET, (uint8_t*)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\"success\":true}", 67);
    3850:	3242      	adds	r2, #66	; 0x42
    3852:	4924      	ldr	r1, [pc, #144]	; (38e4 <main+0x3d0>)
    3854:	0038      	movs	r0, r7
    3856:	f7fe ff0d 	bl	2674 <send>
    385a:	e7a5      	b.n	37a8 <main+0x294>
    385c:	00001f53 	.word	0x00001f53
    3860:	00001f49 	.word	0x00001f49
    3864:	00001fb1 	.word	0x00001fb1
    3868:	00001f8d 	.word	0x00001f8d
    386c:	00001f75 	.word	0x00001f75
    3870:	00001f5d 	.word	0x00001f5d
    3874:	2000007c 	.word	0x2000007c
    3878:	20000064 	.word	0x20000064
    387c:	41004400 	.word	0x41004400
    3880:	2000005a 	.word	0x2000005a
    3884:	20001454 	.word	0x20001454
    3888:	0000ffff 	.word	0x0000ffff
    388c:	20001458 	.word	0x20001458
    3890:	f3f3fa86 	.word	0xf3f3fa86
    3894:	3f6321fa 	.word	0x3f6321fa
    3898:	20000094 	.word	0x20000094
    389c:	20000060 	.word	0x20000060
    38a0:	20000058 	.word	0x20000058
    38a4:	20000c54 	.word	0x20000c54
    38a8:	2000005c 	.word	0x2000005c
    38ac:	20000ad4 	.word	0x20000ad4
    38b0:	0000e23c 	.word	0x0000e23c
    38b4:	00001dae 	.word	0x00001dae
    38b8:	00001daf 	.word	0x00001daf
    38bc:	0000e094 	.word	0x0000e094
    38c0:	0000e0a8 	.word	0x0000e0a8
    38c4:	00000582 	.word	0x00000582
    38c8:	0000db08 	.word	0x0000db08
    38cc:	0000e08c 	.word	0x0000e08c
    38d0:	0000e0d8 	.word	0x0000e0d8
    38d4:	20000ae0 	.word	0x20000ae0
    38d8:	20000ad8 	.word	0x20000ad8
    38dc:	0000e0e8 	.word	0x0000e0e8
    38e0:	20000add 	.word	0x20000add
    38e4:	0000e0f8 	.word	0x0000e0f8
			} else if (strstr((char*)TCP_RX_BUF, "GET /get_vals") != NULL) {
    38e8:	4974      	ldr	r1, [pc, #464]	; (3abc <main+0x5a8>)
    38ea:	4875      	ldr	r0, [pc, #468]	; (3ac0 <main+0x5ac>)
    38ec:	f002 fc20 	bl	6130 <strstr>
    38f0:	2800      	cmp	r0, #0
    38f2:	d050      	beq.n	3996 <main+0x482>
			float watt = ampDMM * voltDMM;
    38f4:	4b73      	ldr	r3, [pc, #460]	; (3ac4 <main+0x5b0>)
    38f6:	681e      	ldr	r6, [r3, #0]
    38f8:	4b73      	ldr	r3, [pc, #460]	; (3ac8 <main+0x5b4>)
    38fa:	681d      	ldr	r5, [r3, #0]
    38fc:	1c29      	adds	r1, r5, #0
    38fe:	1c30      	adds	r0, r6, #0
    3900:	f000 fbaa 	bl	4058 <__aeabi_fmul>
    3904:	9016      	str	r0, [sp, #88]	; 0x58
			int len = snprintf(json_response, sizeof(json_response),
    3906:	4b71      	ldr	r3, [pc, #452]	; (3acc <main+0x5b8>)
    3908:	6818      	ldr	r0, [r3, #0]
    390a:	f001 fe8d 	bl	5628 <__aeabi_f2d>
    390e:	9012      	str	r0, [sp, #72]	; 0x48
    3910:	9113      	str	r1, [sp, #76]	; 0x4c
    3912:	4b6f      	ldr	r3, [pc, #444]	; (3ad0 <main+0x5bc>)
    3914:	6818      	ldr	r0, [r3, #0]
    3916:	f001 fe87 	bl	5628 <__aeabi_f2d>
    391a:	9014      	str	r0, [sp, #80]	; 0x50
    391c:	9115      	str	r1, [sp, #84]	; 0x54
    391e:	9816      	ldr	r0, [sp, #88]	; 0x58
    3920:	f001 fe82 	bl	5628 <__aeabi_f2d>
    3924:	9016      	str	r0, [sp, #88]	; 0x58
    3926:	9117      	str	r1, [sp, #92]	; 0x5c
    3928:	1c30      	adds	r0, r6, #0
    392a:	f001 fe7d 	bl	5628 <__aeabi_f2d>
    392e:	9018      	str	r0, [sp, #96]	; 0x60
    3930:	9119      	str	r1, [sp, #100]	; 0x64
    3932:	1c28      	adds	r0, r5, #0
    3934:	f001 fe78 	bl	5628 <__aeabi_f2d>
    3938:	4b66      	ldr	r3, [pc, #408]	; (3ad4 <main+0x5c0>)
    393a:	781a      	ldrb	r2, [r3, #0]
    393c:	4b66      	ldr	r3, [pc, #408]	; (3ad8 <main+0x5c4>)
    393e:	781d      	ldrb	r5, [r3, #0]
    3940:	4b66      	ldr	r3, [pc, #408]	; (3adc <main+0x5c8>)
    3942:	781e      	ldrb	r6, [r3, #0]
    3944:	2301      	movs	r3, #1
    3946:	930f      	str	r3, [sp, #60]	; 0x3c
    3948:	930e      	str	r3, [sp, #56]	; 0x38
    394a:	2300      	movs	r3, #0
    394c:	930d      	str	r3, [sp, #52]	; 0x34
    394e:	960c      	str	r6, [sp, #48]	; 0x30
    3950:	950b      	str	r5, [sp, #44]	; 0x2c
    3952:	920a      	str	r2, [sp, #40]	; 0x28
    3954:	9008      	str	r0, [sp, #32]
    3956:	9109      	str	r1, [sp, #36]	; 0x24
    3958:	9a18      	ldr	r2, [sp, #96]	; 0x60
    395a:	9b19      	ldr	r3, [sp, #100]	; 0x64
    395c:	9206      	str	r2, [sp, #24]
    395e:	9307      	str	r3, [sp, #28]
    3960:	9a16      	ldr	r2, [sp, #88]	; 0x58
    3962:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    3964:	9204      	str	r2, [sp, #16]
    3966:	9305      	str	r3, [sp, #20]
    3968:	9a14      	ldr	r2, [sp, #80]	; 0x50
    396a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    396c:	9202      	str	r2, [sp, #8]
    396e:	9303      	str	r3, [sp, #12]
    3970:	9a12      	ldr	r2, [sp, #72]	; 0x48
    3972:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    3974:	9200      	str	r2, [sp, #0]
    3976:	9301      	str	r3, [sp, #4]
    3978:	4a59      	ldr	r2, [pc, #356]	; (3ae0 <main+0x5cc>)
    397a:	2180      	movs	r1, #128	; 0x80
    397c:	0049      	lsls	r1, r1, #1
    397e:	a820      	add	r0, sp, #128	; 0x80
    3980:	f002 f924 	bl	5bcc <snprintf>
			send(HTTP_SOCKET, (uint8_t*)json_response, strlen(json_response));
    3984:	a820      	add	r0, sp, #128	; 0x80
    3986:	f002 fa3f 	bl	5e08 <strlen>
    398a:	b282      	uxth	r2, r0
    398c:	a920      	add	r1, sp, #128	; 0x80
    398e:	0038      	movs	r0, r7
    3990:	f7fe fe70 	bl	2674 <send>
    3994:	e708      	b.n	37a8 <main+0x294>
			} else if (strstr((char*)TCP_RX_BUF, "GET /control") != NULL) {
    3996:	4953      	ldr	r1, [pc, #332]	; (3ae4 <main+0x5d0>)
    3998:	4849      	ldr	r0, [pc, #292]	; (3ac0 <main+0x5ac>)
    399a:	f002 fbc9 	bl	6130 <strstr>
    399e:	2800      	cmp	r0, #0
    39a0:	d100      	bne.n	39a4 <main+0x490>
    39a2:	e701      	b.n	37a8 <main+0x294>
				char *query_string = strstr((char*)TCP_RX_BUF, "GET /control") + strlen("GET /control?");
    39a4:	300d      	adds	r0, #13
				sscanf(query_string, "device=%[^&]&action=%s", device, action);
    39a6:	ab20      	add	r3, sp, #128	; 0x80
    39a8:	aa1d      	add	r2, sp, #116	; 0x74
    39aa:	494f      	ldr	r1, [pc, #316]	; (3ae8 <main+0x5d4>)
    39ac:	f002 f950 	bl	5c50 <sscanf>
				if (strcmp(device, "fan") == 0) {
    39b0:	494e      	ldr	r1, [pc, #312]	; (3aec <main+0x5d8>)
    39b2:	a81d      	add	r0, sp, #116	; 0x74
    39b4:	f002 f9e4 	bl	5d80 <strcmp>
    39b8:	2800      	cmp	r0, #0
    39ba:	d120      	bne.n	39fe <main+0x4ea>
					buzer(10);
    39bc:	300a      	adds	r0, #10
    39be:	f7fe f8d1 	bl	1b64 <buzer>
					if (strcmp(action, "on") == 0) {
    39c2:	494b      	ldr	r1, [pc, #300]	; (3af0 <main+0x5dc>)
    39c4:	a820      	add	r0, sp, #128	; 0x80
    39c6:	f002 f9db 	bl	5d80 <strcmp>
    39ca:	2800      	cmp	r0, #0
    39cc:	d108      	bne.n	39e0 <main+0x4cc>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    39ce:	23c0      	movs	r3, #192	; 0xc0
    39d0:	05db      	lsls	r3, r3, #23
    39d2:	2280      	movs	r2, #128	; 0x80
    39d4:	0052      	lsls	r2, r2, #1
    39d6:	619a      	str	r2, [r3, #24]
    39d8:	3201      	adds	r2, #1
    39da:	32ff      	adds	r2, #255	; 0xff
    39dc:	619a      	str	r2, [r3, #24]
    39de:	e01a      	b.n	3a16 <main+0x502>
						} else if (strcmp(action, "off") == 0) {
    39e0:	4944      	ldr	r1, [pc, #272]	; (3af4 <main+0x5e0>)
    39e2:	a820      	add	r0, sp, #128	; 0x80
    39e4:	f002 f9cc 	bl	5d80 <strcmp>
    39e8:	2800      	cmp	r0, #0
    39ea:	d114      	bne.n	3a16 <main+0x502>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    39ec:	23c0      	movs	r3, #192	; 0xc0
    39ee:	05db      	lsls	r3, r3, #23
    39f0:	2280      	movs	r2, #128	; 0x80
    39f2:	0052      	lsls	r2, r2, #1
    39f4:	615a      	str	r2, [r3, #20]
    39f6:	3201      	adds	r2, #1
    39f8:	32ff      	adds	r2, #255	; 0xff
    39fa:	615a      	str	r2, [r3, #20]
    39fc:	e00b      	b.n	3a16 <main+0x502>
				} else if (strcmp(device, "rem") == 0) {
    39fe:	493e      	ldr	r1, [pc, #248]	; (3af8 <main+0x5e4>)
    3a00:	a81d      	add	r0, sp, #116	; 0x74
    3a02:	f002 f9bd 	bl	5d80 <strcmp>
    3a06:	2800      	cmp	r0, #0
    3a08:	d00b      	beq.n	3a22 <main+0x50e>
				} else if (strcmp(device, "psu") == 0) {
    3a0a:	493c      	ldr	r1, [pc, #240]	; (3afc <main+0x5e8>)
    3a0c:	a81d      	add	r0, sp, #116	; 0x74
    3a0e:	f002 f9b7 	bl	5d80 <strcmp>
    3a12:	2800      	cmp	r0, #0
    3a14:	d02b      	beq.n	3a6e <main+0x55a>
				send(HTTP_SOCKET, (uint8_t*)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\"success\":true}", 65);				
    3a16:	2241      	movs	r2, #65	; 0x41
    3a18:	4939      	ldr	r1, [pc, #228]	; (3b00 <main+0x5ec>)
    3a1a:	0038      	movs	r0, r7
    3a1c:	f7fe fe2a 	bl	2674 <send>
    3a20:	e6c2      	b.n	37a8 <main+0x294>
					buzer(10);
    3a22:	300a      	adds	r0, #10
    3a24:	f7fe f89e 	bl	1b64 <buzer>
					if (strcmp(action, "on") == 0) {
    3a28:	4931      	ldr	r1, [pc, #196]	; (3af0 <main+0x5dc>)
    3a2a:	a820      	add	r0, sp, #128	; 0x80
    3a2c:	f002 f9a8 	bl	5d80 <strcmp>
    3a30:	2800      	cmp	r0, #0
    3a32:	d10c      	bne.n	3a4e <main+0x53a>
						remoteCtrl = 1;
    3a34:	2201      	movs	r2, #1
    3a36:	4b28      	ldr	r3, [pc, #160]	; (3ad8 <main+0x5c4>)
    3a38:	701a      	strb	r2, [r3, #0]
					gpio_set_pin_level(O1, remoteCtrl);
    3a3a:	4b27      	ldr	r3, [pc, #156]	; (3ad8 <main+0x5c4>)
    3a3c:	781b      	ldrb	r3, [r3, #0]
    3a3e:	2b00      	cmp	r3, #0
    3a40:	d00f      	beq.n	3a62 <main+0x54e>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    3a42:	2280      	movs	r2, #128	; 0x80
    3a44:	00d2      	lsls	r2, r2, #3
    3a46:	23c0      	movs	r3, #192	; 0xc0
    3a48:	05db      	lsls	r3, r3, #23
    3a4a:	619a      	str	r2, [r3, #24]
    3a4c:	e7e3      	b.n	3a16 <main+0x502>
						} else if (strcmp(action, "off") == 0) {
    3a4e:	4929      	ldr	r1, [pc, #164]	; (3af4 <main+0x5e0>)
    3a50:	a820      	add	r0, sp, #128	; 0x80
    3a52:	f002 f995 	bl	5d80 <strcmp>
    3a56:	2800      	cmp	r0, #0
    3a58:	d1ef      	bne.n	3a3a <main+0x526>
						remoteCtrl = 0;
    3a5a:	2200      	movs	r2, #0
    3a5c:	4b1e      	ldr	r3, [pc, #120]	; (3ad8 <main+0x5c4>)
    3a5e:	701a      	strb	r2, [r3, #0]
    3a60:	e7eb      	b.n	3a3a <main+0x526>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    3a62:	2280      	movs	r2, #128	; 0x80
    3a64:	00d2      	lsls	r2, r2, #3
    3a66:	23c0      	movs	r3, #192	; 0xc0
    3a68:	05db      	lsls	r3, r3, #23
    3a6a:	615a      	str	r2, [r3, #20]
    3a6c:	e7d3      	b.n	3a16 <main+0x502>
					buzer(10);
    3a6e:	300a      	adds	r0, #10
    3a70:	f7fe f878 	bl	1b64 <buzer>
					if (strcmp(action, "on") == 0) {
    3a74:	491e      	ldr	r1, [pc, #120]	; (3af0 <main+0x5dc>)
    3a76:	a820      	add	r0, sp, #128	; 0x80
    3a78:	f002 f982 	bl	5d80 <strcmp>
    3a7c:	2800      	cmp	r0, #0
    3a7e:	d106      	bne.n	3a8e <main+0x57a>
							outState = 1;
    3a80:	2201      	movs	r2, #1
    3a82:	4b14      	ldr	r3, [pc, #80]	; (3ad4 <main+0x5c0>)
    3a84:	701a      	strb	r2, [r3, #0]
					remoteCtrl = 1;
    3a86:	2201      	movs	r2, #1
    3a88:	4b13      	ldr	r3, [pc, #76]	; (3ad8 <main+0x5c4>)
    3a8a:	701a      	strb	r2, [r3, #0]
    3a8c:	e7c3      	b.n	3a16 <main+0x502>
						} else if (strcmp(action, "off") == 0) {
    3a8e:	4919      	ldr	r1, [pc, #100]	; (3af4 <main+0x5e0>)
    3a90:	a820      	add	r0, sp, #128	; 0x80
    3a92:	f002 f975 	bl	5d80 <strcmp>
    3a96:	2800      	cmp	r0, #0
    3a98:	d1f5      	bne.n	3a86 <main+0x572>
							outState = 0;
    3a9a:	2200      	movs	r2, #0
    3a9c:	4b0d      	ldr	r3, [pc, #52]	; (3ad4 <main+0x5c0>)
    3a9e:	701a      	strb	r2, [r3, #0]
    3aa0:	e7f1      	b.n	3a86 <main+0x572>
			socket(HTTP_SOCKET, Sn_MR_TCP, socketPort[HTTP_SOCKET], 0);
    3aa2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3aa4:	005b      	lsls	r3, r3, #1
    3aa6:	4a17      	ldr	r2, [pc, #92]	; (3b04 <main+0x5f0>)
    3aa8:	5a9a      	ldrh	r2, [r3, r2]
    3aaa:	2300      	movs	r3, #0
    3aac:	2101      	movs	r1, #1
    3aae:	0038      	movs	r0, r7
    3ab0:	f7fe fca8 	bl	2404 <socket>
			listen(HTTP_SOCKET);
    3ab4:	0038      	movs	r0, r7
    3ab6:	f7fe fd5d 	bl	2574 <listen>
    3aba:	e681      	b.n	37c0 <main+0x2ac>
    3abc:	0000e13c 	.word	0x0000e13c
    3ac0:	20000c54 	.word	0x20000c54
    3ac4:	20000060 	.word	0x20000060
    3ac8:	20000094 	.word	0x20000094
    3acc:	20000ad8 	.word	0x20000ad8
    3ad0:	20000ae0 	.word	0x20000ae0
    3ad4:	2000007b 	.word	0x2000007b
    3ad8:	20000add 	.word	0x20000add
    3adc:	20000adc 	.word	0x20000adc
    3ae0:	0000e14c 	.word	0x0000e14c
    3ae4:	0000e200 	.word	0x0000e200
    3ae8:	0000e210 	.word	0x0000e210
    3aec:	0000e228 	.word	0x0000e228
    3af0:	0000e22c 	.word	0x0000e22c
    3af4:	0000e230 	.word	0x0000e230
    3af8:	0000e234 	.word	0x0000e234
    3afc:	0000e238 	.word	0x0000e238
    3b00:	0000e0f8 	.word	0x0000e0f8
    3b04:	20000084 	.word	0x20000084

00003b08 <__udivsi3>:
    3b08:	2200      	movs	r2, #0
    3b0a:	0843      	lsrs	r3, r0, #1
    3b0c:	428b      	cmp	r3, r1
    3b0e:	d374      	bcc.n	3bfa <__udivsi3+0xf2>
    3b10:	0903      	lsrs	r3, r0, #4
    3b12:	428b      	cmp	r3, r1
    3b14:	d35f      	bcc.n	3bd6 <__udivsi3+0xce>
    3b16:	0a03      	lsrs	r3, r0, #8
    3b18:	428b      	cmp	r3, r1
    3b1a:	d344      	bcc.n	3ba6 <__udivsi3+0x9e>
    3b1c:	0b03      	lsrs	r3, r0, #12
    3b1e:	428b      	cmp	r3, r1
    3b20:	d328      	bcc.n	3b74 <__udivsi3+0x6c>
    3b22:	0c03      	lsrs	r3, r0, #16
    3b24:	428b      	cmp	r3, r1
    3b26:	d30d      	bcc.n	3b44 <__udivsi3+0x3c>
    3b28:	22ff      	movs	r2, #255	; 0xff
    3b2a:	0209      	lsls	r1, r1, #8
    3b2c:	ba12      	rev	r2, r2
    3b2e:	0c03      	lsrs	r3, r0, #16
    3b30:	428b      	cmp	r3, r1
    3b32:	d302      	bcc.n	3b3a <__udivsi3+0x32>
    3b34:	1212      	asrs	r2, r2, #8
    3b36:	0209      	lsls	r1, r1, #8
    3b38:	d065      	beq.n	3c06 <__udivsi3+0xfe>
    3b3a:	0b03      	lsrs	r3, r0, #12
    3b3c:	428b      	cmp	r3, r1
    3b3e:	d319      	bcc.n	3b74 <__udivsi3+0x6c>
    3b40:	e000      	b.n	3b44 <__udivsi3+0x3c>
    3b42:	0a09      	lsrs	r1, r1, #8
    3b44:	0bc3      	lsrs	r3, r0, #15
    3b46:	428b      	cmp	r3, r1
    3b48:	d301      	bcc.n	3b4e <__udivsi3+0x46>
    3b4a:	03cb      	lsls	r3, r1, #15
    3b4c:	1ac0      	subs	r0, r0, r3
    3b4e:	4152      	adcs	r2, r2
    3b50:	0b83      	lsrs	r3, r0, #14
    3b52:	428b      	cmp	r3, r1
    3b54:	d301      	bcc.n	3b5a <__udivsi3+0x52>
    3b56:	038b      	lsls	r3, r1, #14
    3b58:	1ac0      	subs	r0, r0, r3
    3b5a:	4152      	adcs	r2, r2
    3b5c:	0b43      	lsrs	r3, r0, #13
    3b5e:	428b      	cmp	r3, r1
    3b60:	d301      	bcc.n	3b66 <__udivsi3+0x5e>
    3b62:	034b      	lsls	r3, r1, #13
    3b64:	1ac0      	subs	r0, r0, r3
    3b66:	4152      	adcs	r2, r2
    3b68:	0b03      	lsrs	r3, r0, #12
    3b6a:	428b      	cmp	r3, r1
    3b6c:	d301      	bcc.n	3b72 <__udivsi3+0x6a>
    3b6e:	030b      	lsls	r3, r1, #12
    3b70:	1ac0      	subs	r0, r0, r3
    3b72:	4152      	adcs	r2, r2
    3b74:	0ac3      	lsrs	r3, r0, #11
    3b76:	428b      	cmp	r3, r1
    3b78:	d301      	bcc.n	3b7e <__udivsi3+0x76>
    3b7a:	02cb      	lsls	r3, r1, #11
    3b7c:	1ac0      	subs	r0, r0, r3
    3b7e:	4152      	adcs	r2, r2
    3b80:	0a83      	lsrs	r3, r0, #10
    3b82:	428b      	cmp	r3, r1
    3b84:	d301      	bcc.n	3b8a <__udivsi3+0x82>
    3b86:	028b      	lsls	r3, r1, #10
    3b88:	1ac0      	subs	r0, r0, r3
    3b8a:	4152      	adcs	r2, r2
    3b8c:	0a43      	lsrs	r3, r0, #9
    3b8e:	428b      	cmp	r3, r1
    3b90:	d301      	bcc.n	3b96 <__udivsi3+0x8e>
    3b92:	024b      	lsls	r3, r1, #9
    3b94:	1ac0      	subs	r0, r0, r3
    3b96:	4152      	adcs	r2, r2
    3b98:	0a03      	lsrs	r3, r0, #8
    3b9a:	428b      	cmp	r3, r1
    3b9c:	d301      	bcc.n	3ba2 <__udivsi3+0x9a>
    3b9e:	020b      	lsls	r3, r1, #8
    3ba0:	1ac0      	subs	r0, r0, r3
    3ba2:	4152      	adcs	r2, r2
    3ba4:	d2cd      	bcs.n	3b42 <__udivsi3+0x3a>
    3ba6:	09c3      	lsrs	r3, r0, #7
    3ba8:	428b      	cmp	r3, r1
    3baa:	d301      	bcc.n	3bb0 <__udivsi3+0xa8>
    3bac:	01cb      	lsls	r3, r1, #7
    3bae:	1ac0      	subs	r0, r0, r3
    3bb0:	4152      	adcs	r2, r2
    3bb2:	0983      	lsrs	r3, r0, #6
    3bb4:	428b      	cmp	r3, r1
    3bb6:	d301      	bcc.n	3bbc <__udivsi3+0xb4>
    3bb8:	018b      	lsls	r3, r1, #6
    3bba:	1ac0      	subs	r0, r0, r3
    3bbc:	4152      	adcs	r2, r2
    3bbe:	0943      	lsrs	r3, r0, #5
    3bc0:	428b      	cmp	r3, r1
    3bc2:	d301      	bcc.n	3bc8 <__udivsi3+0xc0>
    3bc4:	014b      	lsls	r3, r1, #5
    3bc6:	1ac0      	subs	r0, r0, r3
    3bc8:	4152      	adcs	r2, r2
    3bca:	0903      	lsrs	r3, r0, #4
    3bcc:	428b      	cmp	r3, r1
    3bce:	d301      	bcc.n	3bd4 <__udivsi3+0xcc>
    3bd0:	010b      	lsls	r3, r1, #4
    3bd2:	1ac0      	subs	r0, r0, r3
    3bd4:	4152      	adcs	r2, r2
    3bd6:	08c3      	lsrs	r3, r0, #3
    3bd8:	428b      	cmp	r3, r1
    3bda:	d301      	bcc.n	3be0 <__udivsi3+0xd8>
    3bdc:	00cb      	lsls	r3, r1, #3
    3bde:	1ac0      	subs	r0, r0, r3
    3be0:	4152      	adcs	r2, r2
    3be2:	0883      	lsrs	r3, r0, #2
    3be4:	428b      	cmp	r3, r1
    3be6:	d301      	bcc.n	3bec <__udivsi3+0xe4>
    3be8:	008b      	lsls	r3, r1, #2
    3bea:	1ac0      	subs	r0, r0, r3
    3bec:	4152      	adcs	r2, r2
    3bee:	0843      	lsrs	r3, r0, #1
    3bf0:	428b      	cmp	r3, r1
    3bf2:	d301      	bcc.n	3bf8 <__udivsi3+0xf0>
    3bf4:	004b      	lsls	r3, r1, #1
    3bf6:	1ac0      	subs	r0, r0, r3
    3bf8:	4152      	adcs	r2, r2
    3bfa:	1a41      	subs	r1, r0, r1
    3bfc:	d200      	bcs.n	3c00 <__udivsi3+0xf8>
    3bfe:	4601      	mov	r1, r0
    3c00:	4152      	adcs	r2, r2
    3c02:	4610      	mov	r0, r2
    3c04:	4770      	bx	lr
    3c06:	e7ff      	b.n	3c08 <__udivsi3+0x100>
    3c08:	b501      	push	{r0, lr}
    3c0a:	2000      	movs	r0, #0
    3c0c:	f000 f8f0 	bl	3df0 <__aeabi_idiv0>
    3c10:	bd02      	pop	{r1, pc}
    3c12:	46c0      	nop			; (mov r8, r8)

00003c14 <__aeabi_uidivmod>:
    3c14:	2900      	cmp	r1, #0
    3c16:	d0f7      	beq.n	3c08 <__udivsi3+0x100>
    3c18:	e776      	b.n	3b08 <__udivsi3>
    3c1a:	4770      	bx	lr

00003c1c <__divsi3>:
    3c1c:	4603      	mov	r3, r0
    3c1e:	430b      	orrs	r3, r1
    3c20:	d47f      	bmi.n	3d22 <__divsi3+0x106>
    3c22:	2200      	movs	r2, #0
    3c24:	0843      	lsrs	r3, r0, #1
    3c26:	428b      	cmp	r3, r1
    3c28:	d374      	bcc.n	3d14 <__divsi3+0xf8>
    3c2a:	0903      	lsrs	r3, r0, #4
    3c2c:	428b      	cmp	r3, r1
    3c2e:	d35f      	bcc.n	3cf0 <__divsi3+0xd4>
    3c30:	0a03      	lsrs	r3, r0, #8
    3c32:	428b      	cmp	r3, r1
    3c34:	d344      	bcc.n	3cc0 <__divsi3+0xa4>
    3c36:	0b03      	lsrs	r3, r0, #12
    3c38:	428b      	cmp	r3, r1
    3c3a:	d328      	bcc.n	3c8e <__divsi3+0x72>
    3c3c:	0c03      	lsrs	r3, r0, #16
    3c3e:	428b      	cmp	r3, r1
    3c40:	d30d      	bcc.n	3c5e <__divsi3+0x42>
    3c42:	22ff      	movs	r2, #255	; 0xff
    3c44:	0209      	lsls	r1, r1, #8
    3c46:	ba12      	rev	r2, r2
    3c48:	0c03      	lsrs	r3, r0, #16
    3c4a:	428b      	cmp	r3, r1
    3c4c:	d302      	bcc.n	3c54 <__divsi3+0x38>
    3c4e:	1212      	asrs	r2, r2, #8
    3c50:	0209      	lsls	r1, r1, #8
    3c52:	d065      	beq.n	3d20 <__divsi3+0x104>
    3c54:	0b03      	lsrs	r3, r0, #12
    3c56:	428b      	cmp	r3, r1
    3c58:	d319      	bcc.n	3c8e <__divsi3+0x72>
    3c5a:	e000      	b.n	3c5e <__divsi3+0x42>
    3c5c:	0a09      	lsrs	r1, r1, #8
    3c5e:	0bc3      	lsrs	r3, r0, #15
    3c60:	428b      	cmp	r3, r1
    3c62:	d301      	bcc.n	3c68 <__divsi3+0x4c>
    3c64:	03cb      	lsls	r3, r1, #15
    3c66:	1ac0      	subs	r0, r0, r3
    3c68:	4152      	adcs	r2, r2
    3c6a:	0b83      	lsrs	r3, r0, #14
    3c6c:	428b      	cmp	r3, r1
    3c6e:	d301      	bcc.n	3c74 <__divsi3+0x58>
    3c70:	038b      	lsls	r3, r1, #14
    3c72:	1ac0      	subs	r0, r0, r3
    3c74:	4152      	adcs	r2, r2
    3c76:	0b43      	lsrs	r3, r0, #13
    3c78:	428b      	cmp	r3, r1
    3c7a:	d301      	bcc.n	3c80 <__divsi3+0x64>
    3c7c:	034b      	lsls	r3, r1, #13
    3c7e:	1ac0      	subs	r0, r0, r3
    3c80:	4152      	adcs	r2, r2
    3c82:	0b03      	lsrs	r3, r0, #12
    3c84:	428b      	cmp	r3, r1
    3c86:	d301      	bcc.n	3c8c <__divsi3+0x70>
    3c88:	030b      	lsls	r3, r1, #12
    3c8a:	1ac0      	subs	r0, r0, r3
    3c8c:	4152      	adcs	r2, r2
    3c8e:	0ac3      	lsrs	r3, r0, #11
    3c90:	428b      	cmp	r3, r1
    3c92:	d301      	bcc.n	3c98 <__divsi3+0x7c>
    3c94:	02cb      	lsls	r3, r1, #11
    3c96:	1ac0      	subs	r0, r0, r3
    3c98:	4152      	adcs	r2, r2
    3c9a:	0a83      	lsrs	r3, r0, #10
    3c9c:	428b      	cmp	r3, r1
    3c9e:	d301      	bcc.n	3ca4 <__divsi3+0x88>
    3ca0:	028b      	lsls	r3, r1, #10
    3ca2:	1ac0      	subs	r0, r0, r3
    3ca4:	4152      	adcs	r2, r2
    3ca6:	0a43      	lsrs	r3, r0, #9
    3ca8:	428b      	cmp	r3, r1
    3caa:	d301      	bcc.n	3cb0 <__divsi3+0x94>
    3cac:	024b      	lsls	r3, r1, #9
    3cae:	1ac0      	subs	r0, r0, r3
    3cb0:	4152      	adcs	r2, r2
    3cb2:	0a03      	lsrs	r3, r0, #8
    3cb4:	428b      	cmp	r3, r1
    3cb6:	d301      	bcc.n	3cbc <__divsi3+0xa0>
    3cb8:	020b      	lsls	r3, r1, #8
    3cba:	1ac0      	subs	r0, r0, r3
    3cbc:	4152      	adcs	r2, r2
    3cbe:	d2cd      	bcs.n	3c5c <__divsi3+0x40>
    3cc0:	09c3      	lsrs	r3, r0, #7
    3cc2:	428b      	cmp	r3, r1
    3cc4:	d301      	bcc.n	3cca <__divsi3+0xae>
    3cc6:	01cb      	lsls	r3, r1, #7
    3cc8:	1ac0      	subs	r0, r0, r3
    3cca:	4152      	adcs	r2, r2
    3ccc:	0983      	lsrs	r3, r0, #6
    3cce:	428b      	cmp	r3, r1
    3cd0:	d301      	bcc.n	3cd6 <__divsi3+0xba>
    3cd2:	018b      	lsls	r3, r1, #6
    3cd4:	1ac0      	subs	r0, r0, r3
    3cd6:	4152      	adcs	r2, r2
    3cd8:	0943      	lsrs	r3, r0, #5
    3cda:	428b      	cmp	r3, r1
    3cdc:	d301      	bcc.n	3ce2 <__divsi3+0xc6>
    3cde:	014b      	lsls	r3, r1, #5
    3ce0:	1ac0      	subs	r0, r0, r3
    3ce2:	4152      	adcs	r2, r2
    3ce4:	0903      	lsrs	r3, r0, #4
    3ce6:	428b      	cmp	r3, r1
    3ce8:	d301      	bcc.n	3cee <__divsi3+0xd2>
    3cea:	010b      	lsls	r3, r1, #4
    3cec:	1ac0      	subs	r0, r0, r3
    3cee:	4152      	adcs	r2, r2
    3cf0:	08c3      	lsrs	r3, r0, #3
    3cf2:	428b      	cmp	r3, r1
    3cf4:	d301      	bcc.n	3cfa <__divsi3+0xde>
    3cf6:	00cb      	lsls	r3, r1, #3
    3cf8:	1ac0      	subs	r0, r0, r3
    3cfa:	4152      	adcs	r2, r2
    3cfc:	0883      	lsrs	r3, r0, #2
    3cfe:	428b      	cmp	r3, r1
    3d00:	d301      	bcc.n	3d06 <__divsi3+0xea>
    3d02:	008b      	lsls	r3, r1, #2
    3d04:	1ac0      	subs	r0, r0, r3
    3d06:	4152      	adcs	r2, r2
    3d08:	0843      	lsrs	r3, r0, #1
    3d0a:	428b      	cmp	r3, r1
    3d0c:	d301      	bcc.n	3d12 <__divsi3+0xf6>
    3d0e:	004b      	lsls	r3, r1, #1
    3d10:	1ac0      	subs	r0, r0, r3
    3d12:	4152      	adcs	r2, r2
    3d14:	1a41      	subs	r1, r0, r1
    3d16:	d200      	bcs.n	3d1a <__divsi3+0xfe>
    3d18:	4601      	mov	r1, r0
    3d1a:	4152      	adcs	r2, r2
    3d1c:	4610      	mov	r0, r2
    3d1e:	4770      	bx	lr
    3d20:	e05d      	b.n	3dde <__divsi3+0x1c2>
    3d22:	0fca      	lsrs	r2, r1, #31
    3d24:	d000      	beq.n	3d28 <__divsi3+0x10c>
    3d26:	4249      	negs	r1, r1
    3d28:	1003      	asrs	r3, r0, #32
    3d2a:	d300      	bcc.n	3d2e <__divsi3+0x112>
    3d2c:	4240      	negs	r0, r0
    3d2e:	4053      	eors	r3, r2
    3d30:	2200      	movs	r2, #0
    3d32:	469c      	mov	ip, r3
    3d34:	0903      	lsrs	r3, r0, #4
    3d36:	428b      	cmp	r3, r1
    3d38:	d32d      	bcc.n	3d96 <__divsi3+0x17a>
    3d3a:	0a03      	lsrs	r3, r0, #8
    3d3c:	428b      	cmp	r3, r1
    3d3e:	d312      	bcc.n	3d66 <__divsi3+0x14a>
    3d40:	22fc      	movs	r2, #252	; 0xfc
    3d42:	0189      	lsls	r1, r1, #6
    3d44:	ba12      	rev	r2, r2
    3d46:	0a03      	lsrs	r3, r0, #8
    3d48:	428b      	cmp	r3, r1
    3d4a:	d30c      	bcc.n	3d66 <__divsi3+0x14a>
    3d4c:	0189      	lsls	r1, r1, #6
    3d4e:	1192      	asrs	r2, r2, #6
    3d50:	428b      	cmp	r3, r1
    3d52:	d308      	bcc.n	3d66 <__divsi3+0x14a>
    3d54:	0189      	lsls	r1, r1, #6
    3d56:	1192      	asrs	r2, r2, #6
    3d58:	428b      	cmp	r3, r1
    3d5a:	d304      	bcc.n	3d66 <__divsi3+0x14a>
    3d5c:	0189      	lsls	r1, r1, #6
    3d5e:	d03a      	beq.n	3dd6 <__divsi3+0x1ba>
    3d60:	1192      	asrs	r2, r2, #6
    3d62:	e000      	b.n	3d66 <__divsi3+0x14a>
    3d64:	0989      	lsrs	r1, r1, #6
    3d66:	09c3      	lsrs	r3, r0, #7
    3d68:	428b      	cmp	r3, r1
    3d6a:	d301      	bcc.n	3d70 <__divsi3+0x154>
    3d6c:	01cb      	lsls	r3, r1, #7
    3d6e:	1ac0      	subs	r0, r0, r3
    3d70:	4152      	adcs	r2, r2
    3d72:	0983      	lsrs	r3, r0, #6
    3d74:	428b      	cmp	r3, r1
    3d76:	d301      	bcc.n	3d7c <__divsi3+0x160>
    3d78:	018b      	lsls	r3, r1, #6
    3d7a:	1ac0      	subs	r0, r0, r3
    3d7c:	4152      	adcs	r2, r2
    3d7e:	0943      	lsrs	r3, r0, #5
    3d80:	428b      	cmp	r3, r1
    3d82:	d301      	bcc.n	3d88 <__divsi3+0x16c>
    3d84:	014b      	lsls	r3, r1, #5
    3d86:	1ac0      	subs	r0, r0, r3
    3d88:	4152      	adcs	r2, r2
    3d8a:	0903      	lsrs	r3, r0, #4
    3d8c:	428b      	cmp	r3, r1
    3d8e:	d301      	bcc.n	3d94 <__divsi3+0x178>
    3d90:	010b      	lsls	r3, r1, #4
    3d92:	1ac0      	subs	r0, r0, r3
    3d94:	4152      	adcs	r2, r2
    3d96:	08c3      	lsrs	r3, r0, #3
    3d98:	428b      	cmp	r3, r1
    3d9a:	d301      	bcc.n	3da0 <__divsi3+0x184>
    3d9c:	00cb      	lsls	r3, r1, #3
    3d9e:	1ac0      	subs	r0, r0, r3
    3da0:	4152      	adcs	r2, r2
    3da2:	0883      	lsrs	r3, r0, #2
    3da4:	428b      	cmp	r3, r1
    3da6:	d301      	bcc.n	3dac <__divsi3+0x190>
    3da8:	008b      	lsls	r3, r1, #2
    3daa:	1ac0      	subs	r0, r0, r3
    3dac:	4152      	adcs	r2, r2
    3dae:	d2d9      	bcs.n	3d64 <__divsi3+0x148>
    3db0:	0843      	lsrs	r3, r0, #1
    3db2:	428b      	cmp	r3, r1
    3db4:	d301      	bcc.n	3dba <__divsi3+0x19e>
    3db6:	004b      	lsls	r3, r1, #1
    3db8:	1ac0      	subs	r0, r0, r3
    3dba:	4152      	adcs	r2, r2
    3dbc:	1a41      	subs	r1, r0, r1
    3dbe:	d200      	bcs.n	3dc2 <__divsi3+0x1a6>
    3dc0:	4601      	mov	r1, r0
    3dc2:	4663      	mov	r3, ip
    3dc4:	4152      	adcs	r2, r2
    3dc6:	105b      	asrs	r3, r3, #1
    3dc8:	4610      	mov	r0, r2
    3dca:	d301      	bcc.n	3dd0 <__divsi3+0x1b4>
    3dcc:	4240      	negs	r0, r0
    3dce:	2b00      	cmp	r3, #0
    3dd0:	d500      	bpl.n	3dd4 <__divsi3+0x1b8>
    3dd2:	4249      	negs	r1, r1
    3dd4:	4770      	bx	lr
    3dd6:	4663      	mov	r3, ip
    3dd8:	105b      	asrs	r3, r3, #1
    3dda:	d300      	bcc.n	3dde <__divsi3+0x1c2>
    3ddc:	4240      	negs	r0, r0
    3dde:	b501      	push	{r0, lr}
    3de0:	2000      	movs	r0, #0
    3de2:	f000 f805 	bl	3df0 <__aeabi_idiv0>
    3de6:	bd02      	pop	{r1, pc}

00003de8 <__aeabi_idivmod>:
    3de8:	2900      	cmp	r1, #0
    3dea:	d0f8      	beq.n	3dde <__divsi3+0x1c2>
    3dec:	e716      	b.n	3c1c <__divsi3>
    3dee:	4770      	bx	lr

00003df0 <__aeabi_idiv0>:
    3df0:	4770      	bx	lr
    3df2:	46c0      	nop			; (mov r8, r8)

00003df4 <__aeabi_uldivmod>:
    3df4:	2b00      	cmp	r3, #0
    3df6:	d111      	bne.n	3e1c <__aeabi_uldivmod+0x28>
    3df8:	2a00      	cmp	r2, #0
    3dfa:	d10f      	bne.n	3e1c <__aeabi_uldivmod+0x28>
    3dfc:	2900      	cmp	r1, #0
    3dfe:	d100      	bne.n	3e02 <__aeabi_uldivmod+0xe>
    3e00:	2800      	cmp	r0, #0
    3e02:	d002      	beq.n	3e0a <__aeabi_uldivmod+0x16>
    3e04:	2100      	movs	r1, #0
    3e06:	43c9      	mvns	r1, r1
    3e08:	1c08      	adds	r0, r1, #0
    3e0a:	b407      	push	{r0, r1, r2}
    3e0c:	4802      	ldr	r0, [pc, #8]	; (3e18 <__aeabi_uldivmod+0x24>)
    3e0e:	a102      	add	r1, pc, #8	; (adr r1, 3e18 <__aeabi_uldivmod+0x24>)
    3e10:	1840      	adds	r0, r0, r1
    3e12:	9002      	str	r0, [sp, #8]
    3e14:	bd03      	pop	{r0, r1, pc}
    3e16:	46c0      	nop			; (mov r8, r8)
    3e18:	ffffffd9 	.word	0xffffffd9
    3e1c:	b403      	push	{r0, r1}
    3e1e:	4668      	mov	r0, sp
    3e20:	b501      	push	{r0, lr}
    3e22:	9802      	ldr	r0, [sp, #8]
    3e24:	f000 f858 	bl	3ed8 <__udivmoddi4>
    3e28:	9b01      	ldr	r3, [sp, #4]
    3e2a:	469e      	mov	lr, r3
    3e2c:	b002      	add	sp, #8
    3e2e:	bc0c      	pop	{r2, r3}
    3e30:	4770      	bx	lr
    3e32:	46c0      	nop			; (mov r8, r8)

00003e34 <__aeabi_lmul>:
    3e34:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e36:	46ce      	mov	lr, r9
    3e38:	4647      	mov	r7, r8
    3e3a:	0415      	lsls	r5, r2, #16
    3e3c:	0c2d      	lsrs	r5, r5, #16
    3e3e:	002e      	movs	r6, r5
    3e40:	b580      	push	{r7, lr}
    3e42:	0407      	lsls	r7, r0, #16
    3e44:	0c14      	lsrs	r4, r2, #16
    3e46:	0c3f      	lsrs	r7, r7, #16
    3e48:	4699      	mov	r9, r3
    3e4a:	0c03      	lsrs	r3, r0, #16
    3e4c:	437e      	muls	r6, r7
    3e4e:	435d      	muls	r5, r3
    3e50:	4367      	muls	r7, r4
    3e52:	4363      	muls	r3, r4
    3e54:	197f      	adds	r7, r7, r5
    3e56:	0c34      	lsrs	r4, r6, #16
    3e58:	19e4      	adds	r4, r4, r7
    3e5a:	469c      	mov	ip, r3
    3e5c:	42a5      	cmp	r5, r4
    3e5e:	d903      	bls.n	3e68 <__aeabi_lmul+0x34>
    3e60:	2380      	movs	r3, #128	; 0x80
    3e62:	025b      	lsls	r3, r3, #9
    3e64:	4698      	mov	r8, r3
    3e66:	44c4      	add	ip, r8
    3e68:	464b      	mov	r3, r9
    3e6a:	4351      	muls	r1, r2
    3e6c:	4343      	muls	r3, r0
    3e6e:	0436      	lsls	r6, r6, #16
    3e70:	0c36      	lsrs	r6, r6, #16
    3e72:	0c25      	lsrs	r5, r4, #16
    3e74:	0424      	lsls	r4, r4, #16
    3e76:	4465      	add	r5, ip
    3e78:	19a4      	adds	r4, r4, r6
    3e7a:	1859      	adds	r1, r3, r1
    3e7c:	1949      	adds	r1, r1, r5
    3e7e:	0020      	movs	r0, r4
    3e80:	bc0c      	pop	{r2, r3}
    3e82:	4690      	mov	r8, r2
    3e84:	4699      	mov	r9, r3
    3e86:	bdf0      	pop	{r4, r5, r6, r7, pc}

00003e88 <__ffssi2>:
    3e88:	b510      	push	{r4, lr}
    3e8a:	2300      	movs	r3, #0
    3e8c:	2800      	cmp	r0, #0
    3e8e:	d002      	beq.n	3e96 <__ffssi2+0xe>
    3e90:	f001 fd0e 	bl	58b0 <__ctzsi2>
    3e94:	1c43      	adds	r3, r0, #1
    3e96:	0018      	movs	r0, r3
    3e98:	bd10      	pop	{r4, pc}
    3e9a:	46c0      	nop			; (mov r8, r8)

00003e9c <__aeabi_d2uiz>:
    3e9c:	b570      	push	{r4, r5, r6, lr}
    3e9e:	2200      	movs	r2, #0
    3ea0:	4b0c      	ldr	r3, [pc, #48]	; (3ed4 <__aeabi_d2uiz+0x38>)
    3ea2:	0004      	movs	r4, r0
    3ea4:	000d      	movs	r5, r1
    3ea6:	f001 fccf 	bl	5848 <__aeabi_dcmpge>
    3eaa:	2800      	cmp	r0, #0
    3eac:	d104      	bne.n	3eb8 <__aeabi_d2uiz+0x1c>
    3eae:	0020      	movs	r0, r4
    3eb0:	0029      	movs	r1, r5
    3eb2:	f001 fb0b 	bl	54cc <__aeabi_d2iz>
    3eb6:	bd70      	pop	{r4, r5, r6, pc}
    3eb8:	4b06      	ldr	r3, [pc, #24]	; (3ed4 <__aeabi_d2uiz+0x38>)
    3eba:	2200      	movs	r2, #0
    3ebc:	0020      	movs	r0, r4
    3ebe:	0029      	movs	r1, r5
    3ec0:	f000 ffee 	bl	4ea0 <__aeabi_dsub>
    3ec4:	f001 fb02 	bl	54cc <__aeabi_d2iz>
    3ec8:	2380      	movs	r3, #128	; 0x80
    3eca:	061b      	lsls	r3, r3, #24
    3ecc:	469c      	mov	ip, r3
    3ece:	4460      	add	r0, ip
    3ed0:	e7f1      	b.n	3eb6 <__aeabi_d2uiz+0x1a>
    3ed2:	46c0      	nop			; (mov r8, r8)
    3ed4:	41e00000 	.word	0x41e00000

00003ed8 <__udivmoddi4>:
    3ed8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3eda:	4657      	mov	r7, sl
    3edc:	464e      	mov	r6, r9
    3ede:	4645      	mov	r5, r8
    3ee0:	46de      	mov	lr, fp
    3ee2:	b5e0      	push	{r5, r6, r7, lr}
    3ee4:	0004      	movs	r4, r0
    3ee6:	b083      	sub	sp, #12
    3ee8:	000d      	movs	r5, r1
    3eea:	4692      	mov	sl, r2
    3eec:	4699      	mov	r9, r3
    3eee:	428b      	cmp	r3, r1
    3ef0:	d82f      	bhi.n	3f52 <__udivmoddi4+0x7a>
    3ef2:	d02c      	beq.n	3f4e <__udivmoddi4+0x76>
    3ef4:	4649      	mov	r1, r9
    3ef6:	4650      	mov	r0, sl
    3ef8:	f001 fcce 	bl	5898 <__clzdi2>
    3efc:	0029      	movs	r1, r5
    3efe:	0006      	movs	r6, r0
    3f00:	0020      	movs	r0, r4
    3f02:	f001 fcc9 	bl	5898 <__clzdi2>
    3f06:	1a33      	subs	r3, r6, r0
    3f08:	4698      	mov	r8, r3
    3f0a:	3b20      	subs	r3, #32
    3f0c:	469b      	mov	fp, r3
    3f0e:	d500      	bpl.n	3f12 <__udivmoddi4+0x3a>
    3f10:	e074      	b.n	3ffc <__udivmoddi4+0x124>
    3f12:	4653      	mov	r3, sl
    3f14:	465a      	mov	r2, fp
    3f16:	4093      	lsls	r3, r2
    3f18:	001f      	movs	r7, r3
    3f1a:	4653      	mov	r3, sl
    3f1c:	4642      	mov	r2, r8
    3f1e:	4093      	lsls	r3, r2
    3f20:	001e      	movs	r6, r3
    3f22:	42af      	cmp	r7, r5
    3f24:	d829      	bhi.n	3f7a <__udivmoddi4+0xa2>
    3f26:	d026      	beq.n	3f76 <__udivmoddi4+0x9e>
    3f28:	465b      	mov	r3, fp
    3f2a:	1ba4      	subs	r4, r4, r6
    3f2c:	41bd      	sbcs	r5, r7
    3f2e:	2b00      	cmp	r3, #0
    3f30:	da00      	bge.n	3f34 <__udivmoddi4+0x5c>
    3f32:	e079      	b.n	4028 <__udivmoddi4+0x150>
    3f34:	2200      	movs	r2, #0
    3f36:	2300      	movs	r3, #0
    3f38:	9200      	str	r2, [sp, #0]
    3f3a:	9301      	str	r3, [sp, #4]
    3f3c:	2301      	movs	r3, #1
    3f3e:	465a      	mov	r2, fp
    3f40:	4093      	lsls	r3, r2
    3f42:	9301      	str	r3, [sp, #4]
    3f44:	2301      	movs	r3, #1
    3f46:	4642      	mov	r2, r8
    3f48:	4093      	lsls	r3, r2
    3f4a:	9300      	str	r3, [sp, #0]
    3f4c:	e019      	b.n	3f82 <__udivmoddi4+0xaa>
    3f4e:	4282      	cmp	r2, r0
    3f50:	d9d0      	bls.n	3ef4 <__udivmoddi4+0x1c>
    3f52:	2200      	movs	r2, #0
    3f54:	2300      	movs	r3, #0
    3f56:	9200      	str	r2, [sp, #0]
    3f58:	9301      	str	r3, [sp, #4]
    3f5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3f5c:	2b00      	cmp	r3, #0
    3f5e:	d001      	beq.n	3f64 <__udivmoddi4+0x8c>
    3f60:	601c      	str	r4, [r3, #0]
    3f62:	605d      	str	r5, [r3, #4]
    3f64:	9800      	ldr	r0, [sp, #0]
    3f66:	9901      	ldr	r1, [sp, #4]
    3f68:	b003      	add	sp, #12
    3f6a:	bc3c      	pop	{r2, r3, r4, r5}
    3f6c:	4690      	mov	r8, r2
    3f6e:	4699      	mov	r9, r3
    3f70:	46a2      	mov	sl, r4
    3f72:	46ab      	mov	fp, r5
    3f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3f76:	42a3      	cmp	r3, r4
    3f78:	d9d6      	bls.n	3f28 <__udivmoddi4+0x50>
    3f7a:	2200      	movs	r2, #0
    3f7c:	2300      	movs	r3, #0
    3f7e:	9200      	str	r2, [sp, #0]
    3f80:	9301      	str	r3, [sp, #4]
    3f82:	4643      	mov	r3, r8
    3f84:	2b00      	cmp	r3, #0
    3f86:	d0e8      	beq.n	3f5a <__udivmoddi4+0x82>
    3f88:	07fb      	lsls	r3, r7, #31
    3f8a:	0872      	lsrs	r2, r6, #1
    3f8c:	431a      	orrs	r2, r3
    3f8e:	4646      	mov	r6, r8
    3f90:	087b      	lsrs	r3, r7, #1
    3f92:	e00e      	b.n	3fb2 <__udivmoddi4+0xda>
    3f94:	42ab      	cmp	r3, r5
    3f96:	d101      	bne.n	3f9c <__udivmoddi4+0xc4>
    3f98:	42a2      	cmp	r2, r4
    3f9a:	d80c      	bhi.n	3fb6 <__udivmoddi4+0xde>
    3f9c:	1aa4      	subs	r4, r4, r2
    3f9e:	419d      	sbcs	r5, r3
    3fa0:	2001      	movs	r0, #1
    3fa2:	1924      	adds	r4, r4, r4
    3fa4:	416d      	adcs	r5, r5
    3fa6:	2100      	movs	r1, #0
    3fa8:	3e01      	subs	r6, #1
    3faa:	1824      	adds	r4, r4, r0
    3fac:	414d      	adcs	r5, r1
    3fae:	2e00      	cmp	r6, #0
    3fb0:	d006      	beq.n	3fc0 <__udivmoddi4+0xe8>
    3fb2:	42ab      	cmp	r3, r5
    3fb4:	d9ee      	bls.n	3f94 <__udivmoddi4+0xbc>
    3fb6:	3e01      	subs	r6, #1
    3fb8:	1924      	adds	r4, r4, r4
    3fba:	416d      	adcs	r5, r5
    3fbc:	2e00      	cmp	r6, #0
    3fbe:	d1f8      	bne.n	3fb2 <__udivmoddi4+0xda>
    3fc0:	465b      	mov	r3, fp
    3fc2:	9800      	ldr	r0, [sp, #0]
    3fc4:	9901      	ldr	r1, [sp, #4]
    3fc6:	1900      	adds	r0, r0, r4
    3fc8:	4169      	adcs	r1, r5
    3fca:	2b00      	cmp	r3, #0
    3fcc:	db22      	blt.n	4014 <__udivmoddi4+0x13c>
    3fce:	002b      	movs	r3, r5
    3fd0:	465a      	mov	r2, fp
    3fd2:	40d3      	lsrs	r3, r2
    3fd4:	002a      	movs	r2, r5
    3fd6:	4644      	mov	r4, r8
    3fd8:	40e2      	lsrs	r2, r4
    3fda:	001c      	movs	r4, r3
    3fdc:	465b      	mov	r3, fp
    3fde:	0015      	movs	r5, r2
    3fe0:	2b00      	cmp	r3, #0
    3fe2:	db2c      	blt.n	403e <__udivmoddi4+0x166>
    3fe4:	0026      	movs	r6, r4
    3fe6:	409e      	lsls	r6, r3
    3fe8:	0033      	movs	r3, r6
    3fea:	0026      	movs	r6, r4
    3fec:	4647      	mov	r7, r8
    3fee:	40be      	lsls	r6, r7
    3ff0:	0032      	movs	r2, r6
    3ff2:	1a80      	subs	r0, r0, r2
    3ff4:	4199      	sbcs	r1, r3
    3ff6:	9000      	str	r0, [sp, #0]
    3ff8:	9101      	str	r1, [sp, #4]
    3ffa:	e7ae      	b.n	3f5a <__udivmoddi4+0x82>
    3ffc:	4642      	mov	r2, r8
    3ffe:	2320      	movs	r3, #32
    4000:	1a9b      	subs	r3, r3, r2
    4002:	4652      	mov	r2, sl
    4004:	40da      	lsrs	r2, r3
    4006:	4641      	mov	r1, r8
    4008:	0013      	movs	r3, r2
    400a:	464a      	mov	r2, r9
    400c:	408a      	lsls	r2, r1
    400e:	0017      	movs	r7, r2
    4010:	431f      	orrs	r7, r3
    4012:	e782      	b.n	3f1a <__udivmoddi4+0x42>
    4014:	4642      	mov	r2, r8
    4016:	2320      	movs	r3, #32
    4018:	1a9b      	subs	r3, r3, r2
    401a:	002a      	movs	r2, r5
    401c:	4646      	mov	r6, r8
    401e:	409a      	lsls	r2, r3
    4020:	0023      	movs	r3, r4
    4022:	40f3      	lsrs	r3, r6
    4024:	4313      	orrs	r3, r2
    4026:	e7d5      	b.n	3fd4 <__udivmoddi4+0xfc>
    4028:	4642      	mov	r2, r8
    402a:	2320      	movs	r3, #32
    402c:	2100      	movs	r1, #0
    402e:	1a9b      	subs	r3, r3, r2
    4030:	2200      	movs	r2, #0
    4032:	9100      	str	r1, [sp, #0]
    4034:	9201      	str	r2, [sp, #4]
    4036:	2201      	movs	r2, #1
    4038:	40da      	lsrs	r2, r3
    403a:	9201      	str	r2, [sp, #4]
    403c:	e782      	b.n	3f44 <__udivmoddi4+0x6c>
    403e:	4642      	mov	r2, r8
    4040:	2320      	movs	r3, #32
    4042:	0026      	movs	r6, r4
    4044:	1a9b      	subs	r3, r3, r2
    4046:	40de      	lsrs	r6, r3
    4048:	002f      	movs	r7, r5
    404a:	46b4      	mov	ip, r6
    404c:	4097      	lsls	r7, r2
    404e:	4666      	mov	r6, ip
    4050:	003b      	movs	r3, r7
    4052:	4333      	orrs	r3, r6
    4054:	e7c9      	b.n	3fea <__udivmoddi4+0x112>
    4056:	46c0      	nop			; (mov r8, r8)

00004058 <__aeabi_fmul>:
    4058:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    405a:	4657      	mov	r7, sl
    405c:	464e      	mov	r6, r9
    405e:	4645      	mov	r5, r8
    4060:	46de      	mov	lr, fp
    4062:	b5e0      	push	{r5, r6, r7, lr}
    4064:	0247      	lsls	r7, r0, #9
    4066:	0046      	lsls	r6, r0, #1
    4068:	4688      	mov	r8, r1
    406a:	0a7f      	lsrs	r7, r7, #9
    406c:	0e36      	lsrs	r6, r6, #24
    406e:	0fc4      	lsrs	r4, r0, #31
    4070:	2e00      	cmp	r6, #0
    4072:	d047      	beq.n	4104 <__aeabi_fmul+0xac>
    4074:	2eff      	cmp	r6, #255	; 0xff
    4076:	d024      	beq.n	40c2 <__aeabi_fmul+0x6a>
    4078:	00fb      	lsls	r3, r7, #3
    407a:	2780      	movs	r7, #128	; 0x80
    407c:	04ff      	lsls	r7, r7, #19
    407e:	431f      	orrs	r7, r3
    4080:	2300      	movs	r3, #0
    4082:	4699      	mov	r9, r3
    4084:	469a      	mov	sl, r3
    4086:	3e7f      	subs	r6, #127	; 0x7f
    4088:	4643      	mov	r3, r8
    408a:	025d      	lsls	r5, r3, #9
    408c:	0058      	lsls	r0, r3, #1
    408e:	0fdb      	lsrs	r3, r3, #31
    4090:	0a6d      	lsrs	r5, r5, #9
    4092:	0e00      	lsrs	r0, r0, #24
    4094:	4698      	mov	r8, r3
    4096:	d043      	beq.n	4120 <__aeabi_fmul+0xc8>
    4098:	28ff      	cmp	r0, #255	; 0xff
    409a:	d03b      	beq.n	4114 <__aeabi_fmul+0xbc>
    409c:	00eb      	lsls	r3, r5, #3
    409e:	2580      	movs	r5, #128	; 0x80
    40a0:	2200      	movs	r2, #0
    40a2:	04ed      	lsls	r5, r5, #19
    40a4:	431d      	orrs	r5, r3
    40a6:	387f      	subs	r0, #127	; 0x7f
    40a8:	1836      	adds	r6, r6, r0
    40aa:	1c73      	adds	r3, r6, #1
    40ac:	4641      	mov	r1, r8
    40ae:	469b      	mov	fp, r3
    40b0:	464b      	mov	r3, r9
    40b2:	4061      	eors	r1, r4
    40b4:	4313      	orrs	r3, r2
    40b6:	2b0f      	cmp	r3, #15
    40b8:	d864      	bhi.n	4184 <__aeabi_fmul+0x12c>
    40ba:	4875      	ldr	r0, [pc, #468]	; (4290 <__aeabi_fmul+0x238>)
    40bc:	009b      	lsls	r3, r3, #2
    40be:	58c3      	ldr	r3, [r0, r3]
    40c0:	469f      	mov	pc, r3
    40c2:	2f00      	cmp	r7, #0
    40c4:	d142      	bne.n	414c <__aeabi_fmul+0xf4>
    40c6:	2308      	movs	r3, #8
    40c8:	4699      	mov	r9, r3
    40ca:	3b06      	subs	r3, #6
    40cc:	26ff      	movs	r6, #255	; 0xff
    40ce:	469a      	mov	sl, r3
    40d0:	e7da      	b.n	4088 <__aeabi_fmul+0x30>
    40d2:	4641      	mov	r1, r8
    40d4:	2a02      	cmp	r2, #2
    40d6:	d028      	beq.n	412a <__aeabi_fmul+0xd2>
    40d8:	2a03      	cmp	r2, #3
    40da:	d100      	bne.n	40de <__aeabi_fmul+0x86>
    40dc:	e0ce      	b.n	427c <__aeabi_fmul+0x224>
    40de:	2a01      	cmp	r2, #1
    40e0:	d000      	beq.n	40e4 <__aeabi_fmul+0x8c>
    40e2:	e0ac      	b.n	423e <__aeabi_fmul+0x1e6>
    40e4:	4011      	ands	r1, r2
    40e6:	2000      	movs	r0, #0
    40e8:	2200      	movs	r2, #0
    40ea:	b2cc      	uxtb	r4, r1
    40ec:	0240      	lsls	r0, r0, #9
    40ee:	05d2      	lsls	r2, r2, #23
    40f0:	0a40      	lsrs	r0, r0, #9
    40f2:	07e4      	lsls	r4, r4, #31
    40f4:	4310      	orrs	r0, r2
    40f6:	4320      	orrs	r0, r4
    40f8:	bc3c      	pop	{r2, r3, r4, r5}
    40fa:	4690      	mov	r8, r2
    40fc:	4699      	mov	r9, r3
    40fe:	46a2      	mov	sl, r4
    4100:	46ab      	mov	fp, r5
    4102:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4104:	2f00      	cmp	r7, #0
    4106:	d115      	bne.n	4134 <__aeabi_fmul+0xdc>
    4108:	2304      	movs	r3, #4
    410a:	4699      	mov	r9, r3
    410c:	3b03      	subs	r3, #3
    410e:	2600      	movs	r6, #0
    4110:	469a      	mov	sl, r3
    4112:	e7b9      	b.n	4088 <__aeabi_fmul+0x30>
    4114:	20ff      	movs	r0, #255	; 0xff
    4116:	2202      	movs	r2, #2
    4118:	2d00      	cmp	r5, #0
    411a:	d0c5      	beq.n	40a8 <__aeabi_fmul+0x50>
    411c:	2203      	movs	r2, #3
    411e:	e7c3      	b.n	40a8 <__aeabi_fmul+0x50>
    4120:	2d00      	cmp	r5, #0
    4122:	d119      	bne.n	4158 <__aeabi_fmul+0x100>
    4124:	2000      	movs	r0, #0
    4126:	2201      	movs	r2, #1
    4128:	e7be      	b.n	40a8 <__aeabi_fmul+0x50>
    412a:	2401      	movs	r4, #1
    412c:	22ff      	movs	r2, #255	; 0xff
    412e:	400c      	ands	r4, r1
    4130:	2000      	movs	r0, #0
    4132:	e7db      	b.n	40ec <__aeabi_fmul+0x94>
    4134:	0038      	movs	r0, r7
    4136:	f001 fb91 	bl	585c <__clzsi2>
    413a:	2676      	movs	r6, #118	; 0x76
    413c:	1f43      	subs	r3, r0, #5
    413e:	409f      	lsls	r7, r3
    4140:	2300      	movs	r3, #0
    4142:	4276      	negs	r6, r6
    4144:	1a36      	subs	r6, r6, r0
    4146:	4699      	mov	r9, r3
    4148:	469a      	mov	sl, r3
    414a:	e79d      	b.n	4088 <__aeabi_fmul+0x30>
    414c:	230c      	movs	r3, #12
    414e:	4699      	mov	r9, r3
    4150:	3b09      	subs	r3, #9
    4152:	26ff      	movs	r6, #255	; 0xff
    4154:	469a      	mov	sl, r3
    4156:	e797      	b.n	4088 <__aeabi_fmul+0x30>
    4158:	0028      	movs	r0, r5
    415a:	f001 fb7f 	bl	585c <__clzsi2>
    415e:	1f43      	subs	r3, r0, #5
    4160:	409d      	lsls	r5, r3
    4162:	2376      	movs	r3, #118	; 0x76
    4164:	425b      	negs	r3, r3
    4166:	1a18      	subs	r0, r3, r0
    4168:	2200      	movs	r2, #0
    416a:	e79d      	b.n	40a8 <__aeabi_fmul+0x50>
    416c:	2080      	movs	r0, #128	; 0x80
    416e:	2400      	movs	r4, #0
    4170:	03c0      	lsls	r0, r0, #15
    4172:	22ff      	movs	r2, #255	; 0xff
    4174:	e7ba      	b.n	40ec <__aeabi_fmul+0x94>
    4176:	003d      	movs	r5, r7
    4178:	4652      	mov	r2, sl
    417a:	e7ab      	b.n	40d4 <__aeabi_fmul+0x7c>
    417c:	003d      	movs	r5, r7
    417e:	0021      	movs	r1, r4
    4180:	4652      	mov	r2, sl
    4182:	e7a7      	b.n	40d4 <__aeabi_fmul+0x7c>
    4184:	0c3b      	lsrs	r3, r7, #16
    4186:	469c      	mov	ip, r3
    4188:	042a      	lsls	r2, r5, #16
    418a:	0c12      	lsrs	r2, r2, #16
    418c:	0c2b      	lsrs	r3, r5, #16
    418e:	0014      	movs	r4, r2
    4190:	4660      	mov	r0, ip
    4192:	4665      	mov	r5, ip
    4194:	043f      	lsls	r7, r7, #16
    4196:	0c3f      	lsrs	r7, r7, #16
    4198:	437c      	muls	r4, r7
    419a:	4342      	muls	r2, r0
    419c:	435d      	muls	r5, r3
    419e:	437b      	muls	r3, r7
    41a0:	0c27      	lsrs	r7, r4, #16
    41a2:	189b      	adds	r3, r3, r2
    41a4:	18ff      	adds	r7, r7, r3
    41a6:	42ba      	cmp	r2, r7
    41a8:	d903      	bls.n	41b2 <__aeabi_fmul+0x15a>
    41aa:	2380      	movs	r3, #128	; 0x80
    41ac:	025b      	lsls	r3, r3, #9
    41ae:	469c      	mov	ip, r3
    41b0:	4465      	add	r5, ip
    41b2:	0424      	lsls	r4, r4, #16
    41b4:	043a      	lsls	r2, r7, #16
    41b6:	0c24      	lsrs	r4, r4, #16
    41b8:	1912      	adds	r2, r2, r4
    41ba:	0193      	lsls	r3, r2, #6
    41bc:	1e5c      	subs	r4, r3, #1
    41be:	41a3      	sbcs	r3, r4
    41c0:	0c3f      	lsrs	r7, r7, #16
    41c2:	0e92      	lsrs	r2, r2, #26
    41c4:	197d      	adds	r5, r7, r5
    41c6:	431a      	orrs	r2, r3
    41c8:	01ad      	lsls	r5, r5, #6
    41ca:	4315      	orrs	r5, r2
    41cc:	012b      	lsls	r3, r5, #4
    41ce:	d504      	bpl.n	41da <__aeabi_fmul+0x182>
    41d0:	2301      	movs	r3, #1
    41d2:	465e      	mov	r6, fp
    41d4:	086a      	lsrs	r2, r5, #1
    41d6:	401d      	ands	r5, r3
    41d8:	4315      	orrs	r5, r2
    41da:	0032      	movs	r2, r6
    41dc:	327f      	adds	r2, #127	; 0x7f
    41de:	2a00      	cmp	r2, #0
    41e0:	dd25      	ble.n	422e <__aeabi_fmul+0x1d6>
    41e2:	076b      	lsls	r3, r5, #29
    41e4:	d004      	beq.n	41f0 <__aeabi_fmul+0x198>
    41e6:	230f      	movs	r3, #15
    41e8:	402b      	ands	r3, r5
    41ea:	2b04      	cmp	r3, #4
    41ec:	d000      	beq.n	41f0 <__aeabi_fmul+0x198>
    41ee:	3504      	adds	r5, #4
    41f0:	012b      	lsls	r3, r5, #4
    41f2:	d503      	bpl.n	41fc <__aeabi_fmul+0x1a4>
    41f4:	0032      	movs	r2, r6
    41f6:	4b27      	ldr	r3, [pc, #156]	; (4294 <__aeabi_fmul+0x23c>)
    41f8:	3280      	adds	r2, #128	; 0x80
    41fa:	401d      	ands	r5, r3
    41fc:	2afe      	cmp	r2, #254	; 0xfe
    41fe:	dc94      	bgt.n	412a <__aeabi_fmul+0xd2>
    4200:	2401      	movs	r4, #1
    4202:	01a8      	lsls	r0, r5, #6
    4204:	0a40      	lsrs	r0, r0, #9
    4206:	b2d2      	uxtb	r2, r2
    4208:	400c      	ands	r4, r1
    420a:	e76f      	b.n	40ec <__aeabi_fmul+0x94>
    420c:	2080      	movs	r0, #128	; 0x80
    420e:	03c0      	lsls	r0, r0, #15
    4210:	4207      	tst	r7, r0
    4212:	d007      	beq.n	4224 <__aeabi_fmul+0x1cc>
    4214:	4205      	tst	r5, r0
    4216:	d105      	bne.n	4224 <__aeabi_fmul+0x1cc>
    4218:	4328      	orrs	r0, r5
    421a:	0240      	lsls	r0, r0, #9
    421c:	0a40      	lsrs	r0, r0, #9
    421e:	4644      	mov	r4, r8
    4220:	22ff      	movs	r2, #255	; 0xff
    4222:	e763      	b.n	40ec <__aeabi_fmul+0x94>
    4224:	4338      	orrs	r0, r7
    4226:	0240      	lsls	r0, r0, #9
    4228:	0a40      	lsrs	r0, r0, #9
    422a:	22ff      	movs	r2, #255	; 0xff
    422c:	e75e      	b.n	40ec <__aeabi_fmul+0x94>
    422e:	2401      	movs	r4, #1
    4230:	1aa3      	subs	r3, r4, r2
    4232:	2b1b      	cmp	r3, #27
    4234:	dd05      	ble.n	4242 <__aeabi_fmul+0x1ea>
    4236:	400c      	ands	r4, r1
    4238:	2200      	movs	r2, #0
    423a:	2000      	movs	r0, #0
    423c:	e756      	b.n	40ec <__aeabi_fmul+0x94>
    423e:	465e      	mov	r6, fp
    4240:	e7cb      	b.n	41da <__aeabi_fmul+0x182>
    4242:	002a      	movs	r2, r5
    4244:	2020      	movs	r0, #32
    4246:	40da      	lsrs	r2, r3
    4248:	1ac3      	subs	r3, r0, r3
    424a:	409d      	lsls	r5, r3
    424c:	002b      	movs	r3, r5
    424e:	1e5d      	subs	r5, r3, #1
    4250:	41ab      	sbcs	r3, r5
    4252:	4313      	orrs	r3, r2
    4254:	075a      	lsls	r2, r3, #29
    4256:	d004      	beq.n	4262 <__aeabi_fmul+0x20a>
    4258:	220f      	movs	r2, #15
    425a:	401a      	ands	r2, r3
    425c:	2a04      	cmp	r2, #4
    425e:	d000      	beq.n	4262 <__aeabi_fmul+0x20a>
    4260:	3304      	adds	r3, #4
    4262:	015a      	lsls	r2, r3, #5
    4264:	d504      	bpl.n	4270 <__aeabi_fmul+0x218>
    4266:	2401      	movs	r4, #1
    4268:	2201      	movs	r2, #1
    426a:	400c      	ands	r4, r1
    426c:	2000      	movs	r0, #0
    426e:	e73d      	b.n	40ec <__aeabi_fmul+0x94>
    4270:	2401      	movs	r4, #1
    4272:	019b      	lsls	r3, r3, #6
    4274:	0a58      	lsrs	r0, r3, #9
    4276:	400c      	ands	r4, r1
    4278:	2200      	movs	r2, #0
    427a:	e737      	b.n	40ec <__aeabi_fmul+0x94>
    427c:	2080      	movs	r0, #128	; 0x80
    427e:	2401      	movs	r4, #1
    4280:	03c0      	lsls	r0, r0, #15
    4282:	4328      	orrs	r0, r5
    4284:	0240      	lsls	r0, r0, #9
    4286:	0a40      	lsrs	r0, r0, #9
    4288:	400c      	ands	r4, r1
    428a:	22ff      	movs	r2, #255	; 0xff
    428c:	e72e      	b.n	40ec <__aeabi_fmul+0x94>
    428e:	46c0      	nop			; (mov r8, r8)
    4290:	0000ffec 	.word	0x0000ffec
    4294:	f7ffffff 	.word	0xf7ffffff

00004298 <__aeabi_i2f>:
    4298:	b570      	push	{r4, r5, r6, lr}
    429a:	2800      	cmp	r0, #0
    429c:	d030      	beq.n	4300 <__aeabi_i2f+0x68>
    429e:	17c3      	asrs	r3, r0, #31
    42a0:	18c4      	adds	r4, r0, r3
    42a2:	405c      	eors	r4, r3
    42a4:	0fc5      	lsrs	r5, r0, #31
    42a6:	0020      	movs	r0, r4
    42a8:	f001 fad8 	bl	585c <__clzsi2>
    42ac:	239e      	movs	r3, #158	; 0x9e
    42ae:	1a1b      	subs	r3, r3, r0
    42b0:	2b96      	cmp	r3, #150	; 0x96
    42b2:	dc0d      	bgt.n	42d0 <__aeabi_i2f+0x38>
    42b4:	2296      	movs	r2, #150	; 0x96
    42b6:	1ad2      	subs	r2, r2, r3
    42b8:	4094      	lsls	r4, r2
    42ba:	002a      	movs	r2, r5
    42bc:	0264      	lsls	r4, r4, #9
    42be:	0a64      	lsrs	r4, r4, #9
    42c0:	b2db      	uxtb	r3, r3
    42c2:	0264      	lsls	r4, r4, #9
    42c4:	05db      	lsls	r3, r3, #23
    42c6:	0a60      	lsrs	r0, r4, #9
    42c8:	07d2      	lsls	r2, r2, #31
    42ca:	4318      	orrs	r0, r3
    42cc:	4310      	orrs	r0, r2
    42ce:	bd70      	pop	{r4, r5, r6, pc}
    42d0:	2b99      	cmp	r3, #153	; 0x99
    42d2:	dc19      	bgt.n	4308 <__aeabi_i2f+0x70>
    42d4:	2299      	movs	r2, #153	; 0x99
    42d6:	1ad2      	subs	r2, r2, r3
    42d8:	2a00      	cmp	r2, #0
    42da:	dd29      	ble.n	4330 <__aeabi_i2f+0x98>
    42dc:	4094      	lsls	r4, r2
    42de:	0022      	movs	r2, r4
    42e0:	4c14      	ldr	r4, [pc, #80]	; (4334 <__aeabi_i2f+0x9c>)
    42e2:	4014      	ands	r4, r2
    42e4:	0751      	lsls	r1, r2, #29
    42e6:	d004      	beq.n	42f2 <__aeabi_i2f+0x5a>
    42e8:	210f      	movs	r1, #15
    42ea:	400a      	ands	r2, r1
    42ec:	2a04      	cmp	r2, #4
    42ee:	d000      	beq.n	42f2 <__aeabi_i2f+0x5a>
    42f0:	3404      	adds	r4, #4
    42f2:	0162      	lsls	r2, r4, #5
    42f4:	d413      	bmi.n	431e <__aeabi_i2f+0x86>
    42f6:	01a4      	lsls	r4, r4, #6
    42f8:	0a64      	lsrs	r4, r4, #9
    42fa:	b2db      	uxtb	r3, r3
    42fc:	002a      	movs	r2, r5
    42fe:	e7e0      	b.n	42c2 <__aeabi_i2f+0x2a>
    4300:	2200      	movs	r2, #0
    4302:	2300      	movs	r3, #0
    4304:	2400      	movs	r4, #0
    4306:	e7dc      	b.n	42c2 <__aeabi_i2f+0x2a>
    4308:	2205      	movs	r2, #5
    430a:	0021      	movs	r1, r4
    430c:	1a12      	subs	r2, r2, r0
    430e:	40d1      	lsrs	r1, r2
    4310:	22b9      	movs	r2, #185	; 0xb9
    4312:	1ad2      	subs	r2, r2, r3
    4314:	4094      	lsls	r4, r2
    4316:	1e62      	subs	r2, r4, #1
    4318:	4194      	sbcs	r4, r2
    431a:	430c      	orrs	r4, r1
    431c:	e7da      	b.n	42d4 <__aeabi_i2f+0x3c>
    431e:	4b05      	ldr	r3, [pc, #20]	; (4334 <__aeabi_i2f+0x9c>)
    4320:	002a      	movs	r2, r5
    4322:	401c      	ands	r4, r3
    4324:	239f      	movs	r3, #159	; 0x9f
    4326:	01a4      	lsls	r4, r4, #6
    4328:	1a1b      	subs	r3, r3, r0
    432a:	0a64      	lsrs	r4, r4, #9
    432c:	b2db      	uxtb	r3, r3
    432e:	e7c8      	b.n	42c2 <__aeabi_i2f+0x2a>
    4330:	0022      	movs	r2, r4
    4332:	e7d5      	b.n	42e0 <__aeabi_i2f+0x48>
    4334:	fbffffff 	.word	0xfbffffff

00004338 <__aeabi_ddiv>:
    4338:	b5f0      	push	{r4, r5, r6, r7, lr}
    433a:	4657      	mov	r7, sl
    433c:	4645      	mov	r5, r8
    433e:	46de      	mov	lr, fp
    4340:	464e      	mov	r6, r9
    4342:	b5e0      	push	{r5, r6, r7, lr}
    4344:	004c      	lsls	r4, r1, #1
    4346:	030e      	lsls	r6, r1, #12
    4348:	b087      	sub	sp, #28
    434a:	4683      	mov	fp, r0
    434c:	4692      	mov	sl, r2
    434e:	001d      	movs	r5, r3
    4350:	4680      	mov	r8, r0
    4352:	0b36      	lsrs	r6, r6, #12
    4354:	0d64      	lsrs	r4, r4, #21
    4356:	0fcf      	lsrs	r7, r1, #31
    4358:	2c00      	cmp	r4, #0
    435a:	d04f      	beq.n	43fc <__aeabi_ddiv+0xc4>
    435c:	4b6f      	ldr	r3, [pc, #444]	; (451c <__aeabi_ddiv+0x1e4>)
    435e:	429c      	cmp	r4, r3
    4360:	d035      	beq.n	43ce <__aeabi_ddiv+0x96>
    4362:	2380      	movs	r3, #128	; 0x80
    4364:	0f42      	lsrs	r2, r0, #29
    4366:	041b      	lsls	r3, r3, #16
    4368:	00f6      	lsls	r6, r6, #3
    436a:	4313      	orrs	r3, r2
    436c:	4333      	orrs	r3, r6
    436e:	4699      	mov	r9, r3
    4370:	00c3      	lsls	r3, r0, #3
    4372:	4698      	mov	r8, r3
    4374:	4b6a      	ldr	r3, [pc, #424]	; (4520 <__aeabi_ddiv+0x1e8>)
    4376:	2600      	movs	r6, #0
    4378:	469c      	mov	ip, r3
    437a:	2300      	movs	r3, #0
    437c:	4464      	add	r4, ip
    437e:	9303      	str	r3, [sp, #12]
    4380:	032b      	lsls	r3, r5, #12
    4382:	0b1b      	lsrs	r3, r3, #12
    4384:	469b      	mov	fp, r3
    4386:	006b      	lsls	r3, r5, #1
    4388:	0fed      	lsrs	r5, r5, #31
    438a:	4650      	mov	r0, sl
    438c:	0d5b      	lsrs	r3, r3, #21
    438e:	9501      	str	r5, [sp, #4]
    4390:	d05e      	beq.n	4450 <__aeabi_ddiv+0x118>
    4392:	4a62      	ldr	r2, [pc, #392]	; (451c <__aeabi_ddiv+0x1e4>)
    4394:	4293      	cmp	r3, r2
    4396:	d053      	beq.n	4440 <__aeabi_ddiv+0x108>
    4398:	465a      	mov	r2, fp
    439a:	00d1      	lsls	r1, r2, #3
    439c:	2280      	movs	r2, #128	; 0x80
    439e:	0f40      	lsrs	r0, r0, #29
    43a0:	0412      	lsls	r2, r2, #16
    43a2:	4302      	orrs	r2, r0
    43a4:	430a      	orrs	r2, r1
    43a6:	4693      	mov	fp, r2
    43a8:	4652      	mov	r2, sl
    43aa:	00d1      	lsls	r1, r2, #3
    43ac:	4a5c      	ldr	r2, [pc, #368]	; (4520 <__aeabi_ddiv+0x1e8>)
    43ae:	4694      	mov	ip, r2
    43b0:	2200      	movs	r2, #0
    43b2:	4463      	add	r3, ip
    43b4:	0038      	movs	r0, r7
    43b6:	4068      	eors	r0, r5
    43b8:	4684      	mov	ip, r0
    43ba:	9002      	str	r0, [sp, #8]
    43bc:	1ae4      	subs	r4, r4, r3
    43be:	4316      	orrs	r6, r2
    43c0:	2e0f      	cmp	r6, #15
    43c2:	d900      	bls.n	43c6 <__aeabi_ddiv+0x8e>
    43c4:	e0b4      	b.n	4530 <__aeabi_ddiv+0x1f8>
    43c6:	4b57      	ldr	r3, [pc, #348]	; (4524 <__aeabi_ddiv+0x1ec>)
    43c8:	00b6      	lsls	r6, r6, #2
    43ca:	599b      	ldr	r3, [r3, r6]
    43cc:	469f      	mov	pc, r3
    43ce:	0003      	movs	r3, r0
    43d0:	4333      	orrs	r3, r6
    43d2:	4699      	mov	r9, r3
    43d4:	d16c      	bne.n	44b0 <__aeabi_ddiv+0x178>
    43d6:	2300      	movs	r3, #0
    43d8:	4698      	mov	r8, r3
    43da:	3302      	adds	r3, #2
    43dc:	2608      	movs	r6, #8
    43de:	9303      	str	r3, [sp, #12]
    43e0:	e7ce      	b.n	4380 <__aeabi_ddiv+0x48>
    43e2:	46cb      	mov	fp, r9
    43e4:	4641      	mov	r1, r8
    43e6:	9a03      	ldr	r2, [sp, #12]
    43e8:	9701      	str	r7, [sp, #4]
    43ea:	2a02      	cmp	r2, #2
    43ec:	d165      	bne.n	44ba <__aeabi_ddiv+0x182>
    43ee:	9b01      	ldr	r3, [sp, #4]
    43f0:	4c4a      	ldr	r4, [pc, #296]	; (451c <__aeabi_ddiv+0x1e4>)
    43f2:	469c      	mov	ip, r3
    43f4:	2300      	movs	r3, #0
    43f6:	2200      	movs	r2, #0
    43f8:	4698      	mov	r8, r3
    43fa:	e06b      	b.n	44d4 <__aeabi_ddiv+0x19c>
    43fc:	0003      	movs	r3, r0
    43fe:	4333      	orrs	r3, r6
    4400:	4699      	mov	r9, r3
    4402:	d04e      	beq.n	44a2 <__aeabi_ddiv+0x16a>
    4404:	2e00      	cmp	r6, #0
    4406:	d100      	bne.n	440a <__aeabi_ddiv+0xd2>
    4408:	e1bc      	b.n	4784 <__aeabi_ddiv+0x44c>
    440a:	0030      	movs	r0, r6
    440c:	f001 fa26 	bl	585c <__clzsi2>
    4410:	0003      	movs	r3, r0
    4412:	3b0b      	subs	r3, #11
    4414:	2b1c      	cmp	r3, #28
    4416:	dd00      	ble.n	441a <__aeabi_ddiv+0xe2>
    4418:	e1ac      	b.n	4774 <__aeabi_ddiv+0x43c>
    441a:	221d      	movs	r2, #29
    441c:	1ad3      	subs	r3, r2, r3
    441e:	465a      	mov	r2, fp
    4420:	0001      	movs	r1, r0
    4422:	40da      	lsrs	r2, r3
    4424:	3908      	subs	r1, #8
    4426:	408e      	lsls	r6, r1
    4428:	0013      	movs	r3, r2
    442a:	4333      	orrs	r3, r6
    442c:	4699      	mov	r9, r3
    442e:	465b      	mov	r3, fp
    4430:	408b      	lsls	r3, r1
    4432:	4698      	mov	r8, r3
    4434:	2300      	movs	r3, #0
    4436:	4c3c      	ldr	r4, [pc, #240]	; (4528 <__aeabi_ddiv+0x1f0>)
    4438:	2600      	movs	r6, #0
    443a:	1a24      	subs	r4, r4, r0
    443c:	9303      	str	r3, [sp, #12]
    443e:	e79f      	b.n	4380 <__aeabi_ddiv+0x48>
    4440:	4651      	mov	r1, sl
    4442:	465a      	mov	r2, fp
    4444:	4311      	orrs	r1, r2
    4446:	d129      	bne.n	449c <__aeabi_ddiv+0x164>
    4448:	2200      	movs	r2, #0
    444a:	4693      	mov	fp, r2
    444c:	3202      	adds	r2, #2
    444e:	e7b1      	b.n	43b4 <__aeabi_ddiv+0x7c>
    4450:	4659      	mov	r1, fp
    4452:	4301      	orrs	r1, r0
    4454:	d01e      	beq.n	4494 <__aeabi_ddiv+0x15c>
    4456:	465b      	mov	r3, fp
    4458:	2b00      	cmp	r3, #0
    445a:	d100      	bne.n	445e <__aeabi_ddiv+0x126>
    445c:	e19e      	b.n	479c <__aeabi_ddiv+0x464>
    445e:	4658      	mov	r0, fp
    4460:	f001 f9fc 	bl	585c <__clzsi2>
    4464:	0003      	movs	r3, r0
    4466:	3b0b      	subs	r3, #11
    4468:	2b1c      	cmp	r3, #28
    446a:	dd00      	ble.n	446e <__aeabi_ddiv+0x136>
    446c:	e18f      	b.n	478e <__aeabi_ddiv+0x456>
    446e:	0002      	movs	r2, r0
    4470:	4659      	mov	r1, fp
    4472:	3a08      	subs	r2, #8
    4474:	4091      	lsls	r1, r2
    4476:	468b      	mov	fp, r1
    4478:	211d      	movs	r1, #29
    447a:	1acb      	subs	r3, r1, r3
    447c:	4651      	mov	r1, sl
    447e:	40d9      	lsrs	r1, r3
    4480:	000b      	movs	r3, r1
    4482:	4659      	mov	r1, fp
    4484:	430b      	orrs	r3, r1
    4486:	4651      	mov	r1, sl
    4488:	469b      	mov	fp, r3
    448a:	4091      	lsls	r1, r2
    448c:	4b26      	ldr	r3, [pc, #152]	; (4528 <__aeabi_ddiv+0x1f0>)
    448e:	2200      	movs	r2, #0
    4490:	1a1b      	subs	r3, r3, r0
    4492:	e78f      	b.n	43b4 <__aeabi_ddiv+0x7c>
    4494:	2300      	movs	r3, #0
    4496:	2201      	movs	r2, #1
    4498:	469b      	mov	fp, r3
    449a:	e78b      	b.n	43b4 <__aeabi_ddiv+0x7c>
    449c:	4651      	mov	r1, sl
    449e:	2203      	movs	r2, #3
    44a0:	e788      	b.n	43b4 <__aeabi_ddiv+0x7c>
    44a2:	2300      	movs	r3, #0
    44a4:	4698      	mov	r8, r3
    44a6:	3301      	adds	r3, #1
    44a8:	2604      	movs	r6, #4
    44aa:	2400      	movs	r4, #0
    44ac:	9303      	str	r3, [sp, #12]
    44ae:	e767      	b.n	4380 <__aeabi_ddiv+0x48>
    44b0:	2303      	movs	r3, #3
    44b2:	46b1      	mov	r9, r6
    44b4:	9303      	str	r3, [sp, #12]
    44b6:	260c      	movs	r6, #12
    44b8:	e762      	b.n	4380 <__aeabi_ddiv+0x48>
    44ba:	2a03      	cmp	r2, #3
    44bc:	d100      	bne.n	44c0 <__aeabi_ddiv+0x188>
    44be:	e25c      	b.n	497a <__aeabi_ddiv+0x642>
    44c0:	9b01      	ldr	r3, [sp, #4]
    44c2:	2a01      	cmp	r2, #1
    44c4:	d000      	beq.n	44c8 <__aeabi_ddiv+0x190>
    44c6:	e1e4      	b.n	4892 <__aeabi_ddiv+0x55a>
    44c8:	4013      	ands	r3, r2
    44ca:	469c      	mov	ip, r3
    44cc:	2300      	movs	r3, #0
    44ce:	2400      	movs	r4, #0
    44d0:	2200      	movs	r2, #0
    44d2:	4698      	mov	r8, r3
    44d4:	2100      	movs	r1, #0
    44d6:	0312      	lsls	r2, r2, #12
    44d8:	0b13      	lsrs	r3, r2, #12
    44da:	0d0a      	lsrs	r2, r1, #20
    44dc:	0512      	lsls	r2, r2, #20
    44de:	431a      	orrs	r2, r3
    44e0:	0523      	lsls	r3, r4, #20
    44e2:	4c12      	ldr	r4, [pc, #72]	; (452c <__aeabi_ddiv+0x1f4>)
    44e4:	4640      	mov	r0, r8
    44e6:	4022      	ands	r2, r4
    44e8:	4313      	orrs	r3, r2
    44ea:	4662      	mov	r2, ip
    44ec:	005b      	lsls	r3, r3, #1
    44ee:	07d2      	lsls	r2, r2, #31
    44f0:	085b      	lsrs	r3, r3, #1
    44f2:	4313      	orrs	r3, r2
    44f4:	0019      	movs	r1, r3
    44f6:	b007      	add	sp, #28
    44f8:	bc3c      	pop	{r2, r3, r4, r5}
    44fa:	4690      	mov	r8, r2
    44fc:	4699      	mov	r9, r3
    44fe:	46a2      	mov	sl, r4
    4500:	46ab      	mov	fp, r5
    4502:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4504:	2300      	movs	r3, #0
    4506:	2280      	movs	r2, #128	; 0x80
    4508:	469c      	mov	ip, r3
    450a:	0312      	lsls	r2, r2, #12
    450c:	4698      	mov	r8, r3
    450e:	4c03      	ldr	r4, [pc, #12]	; (451c <__aeabi_ddiv+0x1e4>)
    4510:	e7e0      	b.n	44d4 <__aeabi_ddiv+0x19c>
    4512:	2300      	movs	r3, #0
    4514:	4c01      	ldr	r4, [pc, #4]	; (451c <__aeabi_ddiv+0x1e4>)
    4516:	2200      	movs	r2, #0
    4518:	4698      	mov	r8, r3
    451a:	e7db      	b.n	44d4 <__aeabi_ddiv+0x19c>
    451c:	000007ff 	.word	0x000007ff
    4520:	fffffc01 	.word	0xfffffc01
    4524:	0001002c 	.word	0x0001002c
    4528:	fffffc0d 	.word	0xfffffc0d
    452c:	800fffff 	.word	0x800fffff
    4530:	45d9      	cmp	r9, fp
    4532:	d900      	bls.n	4536 <__aeabi_ddiv+0x1fe>
    4534:	e139      	b.n	47aa <__aeabi_ddiv+0x472>
    4536:	d100      	bne.n	453a <__aeabi_ddiv+0x202>
    4538:	e134      	b.n	47a4 <__aeabi_ddiv+0x46c>
    453a:	2300      	movs	r3, #0
    453c:	4646      	mov	r6, r8
    453e:	464d      	mov	r5, r9
    4540:	469a      	mov	sl, r3
    4542:	3c01      	subs	r4, #1
    4544:	465b      	mov	r3, fp
    4546:	0e0a      	lsrs	r2, r1, #24
    4548:	021b      	lsls	r3, r3, #8
    454a:	431a      	orrs	r2, r3
    454c:	020b      	lsls	r3, r1, #8
    454e:	0c17      	lsrs	r7, r2, #16
    4550:	9303      	str	r3, [sp, #12]
    4552:	0413      	lsls	r3, r2, #16
    4554:	0c1b      	lsrs	r3, r3, #16
    4556:	0039      	movs	r1, r7
    4558:	0028      	movs	r0, r5
    455a:	4690      	mov	r8, r2
    455c:	9301      	str	r3, [sp, #4]
    455e:	f7ff fad3 	bl	3b08 <__udivsi3>
    4562:	0002      	movs	r2, r0
    4564:	9b01      	ldr	r3, [sp, #4]
    4566:	4683      	mov	fp, r0
    4568:	435a      	muls	r2, r3
    456a:	0028      	movs	r0, r5
    456c:	0039      	movs	r1, r7
    456e:	4691      	mov	r9, r2
    4570:	f7ff fb50 	bl	3c14 <__aeabi_uidivmod>
    4574:	0c35      	lsrs	r5, r6, #16
    4576:	0409      	lsls	r1, r1, #16
    4578:	430d      	orrs	r5, r1
    457a:	45a9      	cmp	r9, r5
    457c:	d90d      	bls.n	459a <__aeabi_ddiv+0x262>
    457e:	465b      	mov	r3, fp
    4580:	4445      	add	r5, r8
    4582:	3b01      	subs	r3, #1
    4584:	45a8      	cmp	r8, r5
    4586:	d900      	bls.n	458a <__aeabi_ddiv+0x252>
    4588:	e13a      	b.n	4800 <__aeabi_ddiv+0x4c8>
    458a:	45a9      	cmp	r9, r5
    458c:	d800      	bhi.n	4590 <__aeabi_ddiv+0x258>
    458e:	e137      	b.n	4800 <__aeabi_ddiv+0x4c8>
    4590:	2302      	movs	r3, #2
    4592:	425b      	negs	r3, r3
    4594:	469c      	mov	ip, r3
    4596:	4445      	add	r5, r8
    4598:	44e3      	add	fp, ip
    459a:	464b      	mov	r3, r9
    459c:	1aeb      	subs	r3, r5, r3
    459e:	0039      	movs	r1, r7
    45a0:	0018      	movs	r0, r3
    45a2:	9304      	str	r3, [sp, #16]
    45a4:	f7ff fab0 	bl	3b08 <__udivsi3>
    45a8:	9b01      	ldr	r3, [sp, #4]
    45aa:	0005      	movs	r5, r0
    45ac:	4343      	muls	r3, r0
    45ae:	0039      	movs	r1, r7
    45b0:	9804      	ldr	r0, [sp, #16]
    45b2:	4699      	mov	r9, r3
    45b4:	f7ff fb2e 	bl	3c14 <__aeabi_uidivmod>
    45b8:	0433      	lsls	r3, r6, #16
    45ba:	0409      	lsls	r1, r1, #16
    45bc:	0c1b      	lsrs	r3, r3, #16
    45be:	430b      	orrs	r3, r1
    45c0:	4599      	cmp	r9, r3
    45c2:	d909      	bls.n	45d8 <__aeabi_ddiv+0x2a0>
    45c4:	4443      	add	r3, r8
    45c6:	1e6a      	subs	r2, r5, #1
    45c8:	4598      	cmp	r8, r3
    45ca:	d900      	bls.n	45ce <__aeabi_ddiv+0x296>
    45cc:	e11a      	b.n	4804 <__aeabi_ddiv+0x4cc>
    45ce:	4599      	cmp	r9, r3
    45d0:	d800      	bhi.n	45d4 <__aeabi_ddiv+0x29c>
    45d2:	e117      	b.n	4804 <__aeabi_ddiv+0x4cc>
    45d4:	3d02      	subs	r5, #2
    45d6:	4443      	add	r3, r8
    45d8:	464a      	mov	r2, r9
    45da:	1a9b      	subs	r3, r3, r2
    45dc:	465a      	mov	r2, fp
    45de:	0412      	lsls	r2, r2, #16
    45e0:	432a      	orrs	r2, r5
    45e2:	9903      	ldr	r1, [sp, #12]
    45e4:	4693      	mov	fp, r2
    45e6:	0c10      	lsrs	r0, r2, #16
    45e8:	0c0a      	lsrs	r2, r1, #16
    45ea:	4691      	mov	r9, r2
    45ec:	0409      	lsls	r1, r1, #16
    45ee:	465a      	mov	r2, fp
    45f0:	0c09      	lsrs	r1, r1, #16
    45f2:	464e      	mov	r6, r9
    45f4:	000d      	movs	r5, r1
    45f6:	0412      	lsls	r2, r2, #16
    45f8:	0c12      	lsrs	r2, r2, #16
    45fa:	4345      	muls	r5, r0
    45fc:	9105      	str	r1, [sp, #20]
    45fe:	4351      	muls	r1, r2
    4600:	4372      	muls	r2, r6
    4602:	4370      	muls	r0, r6
    4604:	1952      	adds	r2, r2, r5
    4606:	0c0e      	lsrs	r6, r1, #16
    4608:	18b2      	adds	r2, r6, r2
    460a:	4295      	cmp	r5, r2
    460c:	d903      	bls.n	4616 <__aeabi_ddiv+0x2de>
    460e:	2580      	movs	r5, #128	; 0x80
    4610:	026d      	lsls	r5, r5, #9
    4612:	46ac      	mov	ip, r5
    4614:	4460      	add	r0, ip
    4616:	0c15      	lsrs	r5, r2, #16
    4618:	0409      	lsls	r1, r1, #16
    461a:	0412      	lsls	r2, r2, #16
    461c:	0c09      	lsrs	r1, r1, #16
    461e:	1828      	adds	r0, r5, r0
    4620:	1852      	adds	r2, r2, r1
    4622:	4283      	cmp	r3, r0
    4624:	d200      	bcs.n	4628 <__aeabi_ddiv+0x2f0>
    4626:	e0ce      	b.n	47c6 <__aeabi_ddiv+0x48e>
    4628:	d100      	bne.n	462c <__aeabi_ddiv+0x2f4>
    462a:	e0c8      	b.n	47be <__aeabi_ddiv+0x486>
    462c:	1a1d      	subs	r5, r3, r0
    462e:	4653      	mov	r3, sl
    4630:	1a9e      	subs	r6, r3, r2
    4632:	45b2      	cmp	sl, r6
    4634:	4192      	sbcs	r2, r2
    4636:	4252      	negs	r2, r2
    4638:	1aab      	subs	r3, r5, r2
    463a:	469a      	mov	sl, r3
    463c:	4598      	cmp	r8, r3
    463e:	d100      	bne.n	4642 <__aeabi_ddiv+0x30a>
    4640:	e117      	b.n	4872 <__aeabi_ddiv+0x53a>
    4642:	0039      	movs	r1, r7
    4644:	0018      	movs	r0, r3
    4646:	f7ff fa5f 	bl	3b08 <__udivsi3>
    464a:	9b01      	ldr	r3, [sp, #4]
    464c:	0005      	movs	r5, r0
    464e:	4343      	muls	r3, r0
    4650:	0039      	movs	r1, r7
    4652:	4650      	mov	r0, sl
    4654:	9304      	str	r3, [sp, #16]
    4656:	f7ff fadd 	bl	3c14 <__aeabi_uidivmod>
    465a:	9804      	ldr	r0, [sp, #16]
    465c:	040b      	lsls	r3, r1, #16
    465e:	0c31      	lsrs	r1, r6, #16
    4660:	4319      	orrs	r1, r3
    4662:	4288      	cmp	r0, r1
    4664:	d909      	bls.n	467a <__aeabi_ddiv+0x342>
    4666:	4441      	add	r1, r8
    4668:	1e6b      	subs	r3, r5, #1
    466a:	4588      	cmp	r8, r1
    466c:	d900      	bls.n	4670 <__aeabi_ddiv+0x338>
    466e:	e107      	b.n	4880 <__aeabi_ddiv+0x548>
    4670:	4288      	cmp	r0, r1
    4672:	d800      	bhi.n	4676 <__aeabi_ddiv+0x33e>
    4674:	e104      	b.n	4880 <__aeabi_ddiv+0x548>
    4676:	3d02      	subs	r5, #2
    4678:	4441      	add	r1, r8
    467a:	9b04      	ldr	r3, [sp, #16]
    467c:	1acb      	subs	r3, r1, r3
    467e:	0018      	movs	r0, r3
    4680:	0039      	movs	r1, r7
    4682:	9304      	str	r3, [sp, #16]
    4684:	f7ff fa40 	bl	3b08 <__udivsi3>
    4688:	9b01      	ldr	r3, [sp, #4]
    468a:	4682      	mov	sl, r0
    468c:	4343      	muls	r3, r0
    468e:	0039      	movs	r1, r7
    4690:	9804      	ldr	r0, [sp, #16]
    4692:	9301      	str	r3, [sp, #4]
    4694:	f7ff fabe 	bl	3c14 <__aeabi_uidivmod>
    4698:	9801      	ldr	r0, [sp, #4]
    469a:	040b      	lsls	r3, r1, #16
    469c:	0431      	lsls	r1, r6, #16
    469e:	0c09      	lsrs	r1, r1, #16
    46a0:	4319      	orrs	r1, r3
    46a2:	4288      	cmp	r0, r1
    46a4:	d90d      	bls.n	46c2 <__aeabi_ddiv+0x38a>
    46a6:	4653      	mov	r3, sl
    46a8:	4441      	add	r1, r8
    46aa:	3b01      	subs	r3, #1
    46ac:	4588      	cmp	r8, r1
    46ae:	d900      	bls.n	46b2 <__aeabi_ddiv+0x37a>
    46b0:	e0e8      	b.n	4884 <__aeabi_ddiv+0x54c>
    46b2:	4288      	cmp	r0, r1
    46b4:	d800      	bhi.n	46b8 <__aeabi_ddiv+0x380>
    46b6:	e0e5      	b.n	4884 <__aeabi_ddiv+0x54c>
    46b8:	2302      	movs	r3, #2
    46ba:	425b      	negs	r3, r3
    46bc:	469c      	mov	ip, r3
    46be:	4441      	add	r1, r8
    46c0:	44e2      	add	sl, ip
    46c2:	9b01      	ldr	r3, [sp, #4]
    46c4:	042d      	lsls	r5, r5, #16
    46c6:	1ace      	subs	r6, r1, r3
    46c8:	4651      	mov	r1, sl
    46ca:	4329      	orrs	r1, r5
    46cc:	9d05      	ldr	r5, [sp, #20]
    46ce:	464f      	mov	r7, r9
    46d0:	002a      	movs	r2, r5
    46d2:	040b      	lsls	r3, r1, #16
    46d4:	0c08      	lsrs	r0, r1, #16
    46d6:	0c1b      	lsrs	r3, r3, #16
    46d8:	435a      	muls	r2, r3
    46da:	4345      	muls	r5, r0
    46dc:	437b      	muls	r3, r7
    46de:	4378      	muls	r0, r7
    46e0:	195b      	adds	r3, r3, r5
    46e2:	0c17      	lsrs	r7, r2, #16
    46e4:	18fb      	adds	r3, r7, r3
    46e6:	429d      	cmp	r5, r3
    46e8:	d903      	bls.n	46f2 <__aeabi_ddiv+0x3ba>
    46ea:	2580      	movs	r5, #128	; 0x80
    46ec:	026d      	lsls	r5, r5, #9
    46ee:	46ac      	mov	ip, r5
    46f0:	4460      	add	r0, ip
    46f2:	0c1d      	lsrs	r5, r3, #16
    46f4:	0412      	lsls	r2, r2, #16
    46f6:	041b      	lsls	r3, r3, #16
    46f8:	0c12      	lsrs	r2, r2, #16
    46fa:	1828      	adds	r0, r5, r0
    46fc:	189b      	adds	r3, r3, r2
    46fe:	4286      	cmp	r6, r0
    4700:	d200      	bcs.n	4704 <__aeabi_ddiv+0x3cc>
    4702:	e093      	b.n	482c <__aeabi_ddiv+0x4f4>
    4704:	d100      	bne.n	4708 <__aeabi_ddiv+0x3d0>
    4706:	e08e      	b.n	4826 <__aeabi_ddiv+0x4ee>
    4708:	2301      	movs	r3, #1
    470a:	4319      	orrs	r1, r3
    470c:	4ba0      	ldr	r3, [pc, #640]	; (4990 <__aeabi_ddiv+0x658>)
    470e:	18e3      	adds	r3, r4, r3
    4710:	2b00      	cmp	r3, #0
    4712:	dc00      	bgt.n	4716 <__aeabi_ddiv+0x3de>
    4714:	e099      	b.n	484a <__aeabi_ddiv+0x512>
    4716:	074a      	lsls	r2, r1, #29
    4718:	d000      	beq.n	471c <__aeabi_ddiv+0x3e4>
    471a:	e09e      	b.n	485a <__aeabi_ddiv+0x522>
    471c:	465a      	mov	r2, fp
    471e:	01d2      	lsls	r2, r2, #7
    4720:	d506      	bpl.n	4730 <__aeabi_ddiv+0x3f8>
    4722:	465a      	mov	r2, fp
    4724:	4b9b      	ldr	r3, [pc, #620]	; (4994 <__aeabi_ddiv+0x65c>)
    4726:	401a      	ands	r2, r3
    4728:	2380      	movs	r3, #128	; 0x80
    472a:	4693      	mov	fp, r2
    472c:	00db      	lsls	r3, r3, #3
    472e:	18e3      	adds	r3, r4, r3
    4730:	4a99      	ldr	r2, [pc, #612]	; (4998 <__aeabi_ddiv+0x660>)
    4732:	4293      	cmp	r3, r2
    4734:	dd68      	ble.n	4808 <__aeabi_ddiv+0x4d0>
    4736:	2301      	movs	r3, #1
    4738:	9a02      	ldr	r2, [sp, #8]
    473a:	4c98      	ldr	r4, [pc, #608]	; (499c <__aeabi_ddiv+0x664>)
    473c:	401a      	ands	r2, r3
    473e:	2300      	movs	r3, #0
    4740:	4694      	mov	ip, r2
    4742:	4698      	mov	r8, r3
    4744:	2200      	movs	r2, #0
    4746:	e6c5      	b.n	44d4 <__aeabi_ddiv+0x19c>
    4748:	2280      	movs	r2, #128	; 0x80
    474a:	464b      	mov	r3, r9
    474c:	0312      	lsls	r2, r2, #12
    474e:	4213      	tst	r3, r2
    4750:	d00a      	beq.n	4768 <__aeabi_ddiv+0x430>
    4752:	465b      	mov	r3, fp
    4754:	4213      	tst	r3, r2
    4756:	d106      	bne.n	4766 <__aeabi_ddiv+0x42e>
    4758:	431a      	orrs	r2, r3
    475a:	0312      	lsls	r2, r2, #12
    475c:	0b12      	lsrs	r2, r2, #12
    475e:	46ac      	mov	ip, r5
    4760:	4688      	mov	r8, r1
    4762:	4c8e      	ldr	r4, [pc, #568]	; (499c <__aeabi_ddiv+0x664>)
    4764:	e6b6      	b.n	44d4 <__aeabi_ddiv+0x19c>
    4766:	464b      	mov	r3, r9
    4768:	431a      	orrs	r2, r3
    476a:	0312      	lsls	r2, r2, #12
    476c:	0b12      	lsrs	r2, r2, #12
    476e:	46bc      	mov	ip, r7
    4770:	4c8a      	ldr	r4, [pc, #552]	; (499c <__aeabi_ddiv+0x664>)
    4772:	e6af      	b.n	44d4 <__aeabi_ddiv+0x19c>
    4774:	0003      	movs	r3, r0
    4776:	465a      	mov	r2, fp
    4778:	3b28      	subs	r3, #40	; 0x28
    477a:	409a      	lsls	r2, r3
    477c:	2300      	movs	r3, #0
    477e:	4691      	mov	r9, r2
    4780:	4698      	mov	r8, r3
    4782:	e657      	b.n	4434 <__aeabi_ddiv+0xfc>
    4784:	4658      	mov	r0, fp
    4786:	f001 f869 	bl	585c <__clzsi2>
    478a:	3020      	adds	r0, #32
    478c:	e640      	b.n	4410 <__aeabi_ddiv+0xd8>
    478e:	0003      	movs	r3, r0
    4790:	4652      	mov	r2, sl
    4792:	3b28      	subs	r3, #40	; 0x28
    4794:	409a      	lsls	r2, r3
    4796:	2100      	movs	r1, #0
    4798:	4693      	mov	fp, r2
    479a:	e677      	b.n	448c <__aeabi_ddiv+0x154>
    479c:	f001 f85e 	bl	585c <__clzsi2>
    47a0:	3020      	adds	r0, #32
    47a2:	e65f      	b.n	4464 <__aeabi_ddiv+0x12c>
    47a4:	4588      	cmp	r8, r1
    47a6:	d200      	bcs.n	47aa <__aeabi_ddiv+0x472>
    47a8:	e6c7      	b.n	453a <__aeabi_ddiv+0x202>
    47aa:	464b      	mov	r3, r9
    47ac:	07de      	lsls	r6, r3, #31
    47ae:	085d      	lsrs	r5, r3, #1
    47b0:	4643      	mov	r3, r8
    47b2:	085b      	lsrs	r3, r3, #1
    47b4:	431e      	orrs	r6, r3
    47b6:	4643      	mov	r3, r8
    47b8:	07db      	lsls	r3, r3, #31
    47ba:	469a      	mov	sl, r3
    47bc:	e6c2      	b.n	4544 <__aeabi_ddiv+0x20c>
    47be:	2500      	movs	r5, #0
    47c0:	4592      	cmp	sl, r2
    47c2:	d300      	bcc.n	47c6 <__aeabi_ddiv+0x48e>
    47c4:	e733      	b.n	462e <__aeabi_ddiv+0x2f6>
    47c6:	9e03      	ldr	r6, [sp, #12]
    47c8:	4659      	mov	r1, fp
    47ca:	46b4      	mov	ip, r6
    47cc:	44e2      	add	sl, ip
    47ce:	45b2      	cmp	sl, r6
    47d0:	41ad      	sbcs	r5, r5
    47d2:	426d      	negs	r5, r5
    47d4:	4445      	add	r5, r8
    47d6:	18eb      	adds	r3, r5, r3
    47d8:	3901      	subs	r1, #1
    47da:	4598      	cmp	r8, r3
    47dc:	d207      	bcs.n	47ee <__aeabi_ddiv+0x4b6>
    47de:	4298      	cmp	r0, r3
    47e0:	d900      	bls.n	47e4 <__aeabi_ddiv+0x4ac>
    47e2:	e07f      	b.n	48e4 <__aeabi_ddiv+0x5ac>
    47e4:	d100      	bne.n	47e8 <__aeabi_ddiv+0x4b0>
    47e6:	e0bc      	b.n	4962 <__aeabi_ddiv+0x62a>
    47e8:	1a1d      	subs	r5, r3, r0
    47ea:	468b      	mov	fp, r1
    47ec:	e71f      	b.n	462e <__aeabi_ddiv+0x2f6>
    47ee:	4598      	cmp	r8, r3
    47f0:	d1fa      	bne.n	47e8 <__aeabi_ddiv+0x4b0>
    47f2:	9d03      	ldr	r5, [sp, #12]
    47f4:	4555      	cmp	r5, sl
    47f6:	d9f2      	bls.n	47de <__aeabi_ddiv+0x4a6>
    47f8:	4643      	mov	r3, r8
    47fa:	468b      	mov	fp, r1
    47fc:	1a1d      	subs	r5, r3, r0
    47fe:	e716      	b.n	462e <__aeabi_ddiv+0x2f6>
    4800:	469b      	mov	fp, r3
    4802:	e6ca      	b.n	459a <__aeabi_ddiv+0x262>
    4804:	0015      	movs	r5, r2
    4806:	e6e7      	b.n	45d8 <__aeabi_ddiv+0x2a0>
    4808:	465a      	mov	r2, fp
    480a:	08c9      	lsrs	r1, r1, #3
    480c:	0752      	lsls	r2, r2, #29
    480e:	430a      	orrs	r2, r1
    4810:	055b      	lsls	r3, r3, #21
    4812:	4690      	mov	r8, r2
    4814:	0d5c      	lsrs	r4, r3, #21
    4816:	465a      	mov	r2, fp
    4818:	2301      	movs	r3, #1
    481a:	9902      	ldr	r1, [sp, #8]
    481c:	0252      	lsls	r2, r2, #9
    481e:	4019      	ands	r1, r3
    4820:	0b12      	lsrs	r2, r2, #12
    4822:	468c      	mov	ip, r1
    4824:	e656      	b.n	44d4 <__aeabi_ddiv+0x19c>
    4826:	2b00      	cmp	r3, #0
    4828:	d100      	bne.n	482c <__aeabi_ddiv+0x4f4>
    482a:	e76f      	b.n	470c <__aeabi_ddiv+0x3d4>
    482c:	4446      	add	r6, r8
    482e:	1e4a      	subs	r2, r1, #1
    4830:	45b0      	cmp	r8, r6
    4832:	d929      	bls.n	4888 <__aeabi_ddiv+0x550>
    4834:	0011      	movs	r1, r2
    4836:	4286      	cmp	r6, r0
    4838:	d000      	beq.n	483c <__aeabi_ddiv+0x504>
    483a:	e765      	b.n	4708 <__aeabi_ddiv+0x3d0>
    483c:	9a03      	ldr	r2, [sp, #12]
    483e:	4293      	cmp	r3, r2
    4840:	d000      	beq.n	4844 <__aeabi_ddiv+0x50c>
    4842:	e761      	b.n	4708 <__aeabi_ddiv+0x3d0>
    4844:	e762      	b.n	470c <__aeabi_ddiv+0x3d4>
    4846:	2101      	movs	r1, #1
    4848:	4249      	negs	r1, r1
    484a:	2001      	movs	r0, #1
    484c:	1ac2      	subs	r2, r0, r3
    484e:	2a38      	cmp	r2, #56	; 0x38
    4850:	dd21      	ble.n	4896 <__aeabi_ddiv+0x55e>
    4852:	9b02      	ldr	r3, [sp, #8]
    4854:	4003      	ands	r3, r0
    4856:	469c      	mov	ip, r3
    4858:	e638      	b.n	44cc <__aeabi_ddiv+0x194>
    485a:	220f      	movs	r2, #15
    485c:	400a      	ands	r2, r1
    485e:	2a04      	cmp	r2, #4
    4860:	d100      	bne.n	4864 <__aeabi_ddiv+0x52c>
    4862:	e75b      	b.n	471c <__aeabi_ddiv+0x3e4>
    4864:	000a      	movs	r2, r1
    4866:	1d11      	adds	r1, r2, #4
    4868:	4291      	cmp	r1, r2
    486a:	4192      	sbcs	r2, r2
    486c:	4252      	negs	r2, r2
    486e:	4493      	add	fp, r2
    4870:	e754      	b.n	471c <__aeabi_ddiv+0x3e4>
    4872:	4b47      	ldr	r3, [pc, #284]	; (4990 <__aeabi_ddiv+0x658>)
    4874:	18e3      	adds	r3, r4, r3
    4876:	2b00      	cmp	r3, #0
    4878:	dde5      	ble.n	4846 <__aeabi_ddiv+0x50e>
    487a:	2201      	movs	r2, #1
    487c:	4252      	negs	r2, r2
    487e:	e7f2      	b.n	4866 <__aeabi_ddiv+0x52e>
    4880:	001d      	movs	r5, r3
    4882:	e6fa      	b.n	467a <__aeabi_ddiv+0x342>
    4884:	469a      	mov	sl, r3
    4886:	e71c      	b.n	46c2 <__aeabi_ddiv+0x38a>
    4888:	42b0      	cmp	r0, r6
    488a:	d839      	bhi.n	4900 <__aeabi_ddiv+0x5c8>
    488c:	d06e      	beq.n	496c <__aeabi_ddiv+0x634>
    488e:	0011      	movs	r1, r2
    4890:	e73a      	b.n	4708 <__aeabi_ddiv+0x3d0>
    4892:	9302      	str	r3, [sp, #8]
    4894:	e73a      	b.n	470c <__aeabi_ddiv+0x3d4>
    4896:	2a1f      	cmp	r2, #31
    4898:	dc3c      	bgt.n	4914 <__aeabi_ddiv+0x5dc>
    489a:	2320      	movs	r3, #32
    489c:	1a9b      	subs	r3, r3, r2
    489e:	000c      	movs	r4, r1
    48a0:	4658      	mov	r0, fp
    48a2:	4099      	lsls	r1, r3
    48a4:	4098      	lsls	r0, r3
    48a6:	1e4b      	subs	r3, r1, #1
    48a8:	4199      	sbcs	r1, r3
    48aa:	465b      	mov	r3, fp
    48ac:	40d4      	lsrs	r4, r2
    48ae:	40d3      	lsrs	r3, r2
    48b0:	4320      	orrs	r0, r4
    48b2:	4308      	orrs	r0, r1
    48b4:	001a      	movs	r2, r3
    48b6:	0743      	lsls	r3, r0, #29
    48b8:	d009      	beq.n	48ce <__aeabi_ddiv+0x596>
    48ba:	230f      	movs	r3, #15
    48bc:	4003      	ands	r3, r0
    48be:	2b04      	cmp	r3, #4
    48c0:	d005      	beq.n	48ce <__aeabi_ddiv+0x596>
    48c2:	0001      	movs	r1, r0
    48c4:	1d08      	adds	r0, r1, #4
    48c6:	4288      	cmp	r0, r1
    48c8:	419b      	sbcs	r3, r3
    48ca:	425b      	negs	r3, r3
    48cc:	18d2      	adds	r2, r2, r3
    48ce:	0213      	lsls	r3, r2, #8
    48d0:	d53a      	bpl.n	4948 <__aeabi_ddiv+0x610>
    48d2:	2301      	movs	r3, #1
    48d4:	9a02      	ldr	r2, [sp, #8]
    48d6:	2401      	movs	r4, #1
    48d8:	401a      	ands	r2, r3
    48da:	2300      	movs	r3, #0
    48dc:	4694      	mov	ip, r2
    48de:	4698      	mov	r8, r3
    48e0:	2200      	movs	r2, #0
    48e2:	e5f7      	b.n	44d4 <__aeabi_ddiv+0x19c>
    48e4:	2102      	movs	r1, #2
    48e6:	4249      	negs	r1, r1
    48e8:	468c      	mov	ip, r1
    48ea:	9d03      	ldr	r5, [sp, #12]
    48ec:	44e3      	add	fp, ip
    48ee:	46ac      	mov	ip, r5
    48f0:	44e2      	add	sl, ip
    48f2:	45aa      	cmp	sl, r5
    48f4:	41ad      	sbcs	r5, r5
    48f6:	426d      	negs	r5, r5
    48f8:	4445      	add	r5, r8
    48fa:	18ed      	adds	r5, r5, r3
    48fc:	1a2d      	subs	r5, r5, r0
    48fe:	e696      	b.n	462e <__aeabi_ddiv+0x2f6>
    4900:	1e8a      	subs	r2, r1, #2
    4902:	9903      	ldr	r1, [sp, #12]
    4904:	004d      	lsls	r5, r1, #1
    4906:	428d      	cmp	r5, r1
    4908:	4189      	sbcs	r1, r1
    490a:	4249      	negs	r1, r1
    490c:	4441      	add	r1, r8
    490e:	1876      	adds	r6, r6, r1
    4910:	9503      	str	r5, [sp, #12]
    4912:	e78f      	b.n	4834 <__aeabi_ddiv+0x4fc>
    4914:	201f      	movs	r0, #31
    4916:	4240      	negs	r0, r0
    4918:	1ac3      	subs	r3, r0, r3
    491a:	4658      	mov	r0, fp
    491c:	40d8      	lsrs	r0, r3
    491e:	0003      	movs	r3, r0
    4920:	2a20      	cmp	r2, #32
    4922:	d028      	beq.n	4976 <__aeabi_ddiv+0x63e>
    4924:	2040      	movs	r0, #64	; 0x40
    4926:	465d      	mov	r5, fp
    4928:	1a82      	subs	r2, r0, r2
    492a:	4095      	lsls	r5, r2
    492c:	4329      	orrs	r1, r5
    492e:	1e4a      	subs	r2, r1, #1
    4930:	4191      	sbcs	r1, r2
    4932:	4319      	orrs	r1, r3
    4934:	2307      	movs	r3, #7
    4936:	2200      	movs	r2, #0
    4938:	400b      	ands	r3, r1
    493a:	d009      	beq.n	4950 <__aeabi_ddiv+0x618>
    493c:	230f      	movs	r3, #15
    493e:	2200      	movs	r2, #0
    4940:	400b      	ands	r3, r1
    4942:	0008      	movs	r0, r1
    4944:	2b04      	cmp	r3, #4
    4946:	d1bd      	bne.n	48c4 <__aeabi_ddiv+0x58c>
    4948:	0001      	movs	r1, r0
    494a:	0753      	lsls	r3, r2, #29
    494c:	0252      	lsls	r2, r2, #9
    494e:	0b12      	lsrs	r2, r2, #12
    4950:	08c9      	lsrs	r1, r1, #3
    4952:	4319      	orrs	r1, r3
    4954:	2301      	movs	r3, #1
    4956:	4688      	mov	r8, r1
    4958:	9902      	ldr	r1, [sp, #8]
    495a:	2400      	movs	r4, #0
    495c:	4019      	ands	r1, r3
    495e:	468c      	mov	ip, r1
    4960:	e5b8      	b.n	44d4 <__aeabi_ddiv+0x19c>
    4962:	4552      	cmp	r2, sl
    4964:	d8be      	bhi.n	48e4 <__aeabi_ddiv+0x5ac>
    4966:	468b      	mov	fp, r1
    4968:	2500      	movs	r5, #0
    496a:	e660      	b.n	462e <__aeabi_ddiv+0x2f6>
    496c:	9d03      	ldr	r5, [sp, #12]
    496e:	429d      	cmp	r5, r3
    4970:	d3c6      	bcc.n	4900 <__aeabi_ddiv+0x5c8>
    4972:	0011      	movs	r1, r2
    4974:	e762      	b.n	483c <__aeabi_ddiv+0x504>
    4976:	2500      	movs	r5, #0
    4978:	e7d8      	b.n	492c <__aeabi_ddiv+0x5f4>
    497a:	2280      	movs	r2, #128	; 0x80
    497c:	465b      	mov	r3, fp
    497e:	0312      	lsls	r2, r2, #12
    4980:	431a      	orrs	r2, r3
    4982:	9b01      	ldr	r3, [sp, #4]
    4984:	0312      	lsls	r2, r2, #12
    4986:	0b12      	lsrs	r2, r2, #12
    4988:	469c      	mov	ip, r3
    498a:	4688      	mov	r8, r1
    498c:	4c03      	ldr	r4, [pc, #12]	; (499c <__aeabi_ddiv+0x664>)
    498e:	e5a1      	b.n	44d4 <__aeabi_ddiv+0x19c>
    4990:	000003ff 	.word	0x000003ff
    4994:	feffffff 	.word	0xfeffffff
    4998:	000007fe 	.word	0x000007fe
    499c:	000007ff 	.word	0x000007ff

000049a0 <__aeabi_dmul>:
    49a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    49a2:	4657      	mov	r7, sl
    49a4:	4645      	mov	r5, r8
    49a6:	46de      	mov	lr, fp
    49a8:	464e      	mov	r6, r9
    49aa:	b5e0      	push	{r5, r6, r7, lr}
    49ac:	030c      	lsls	r4, r1, #12
    49ae:	4698      	mov	r8, r3
    49b0:	004e      	lsls	r6, r1, #1
    49b2:	0b23      	lsrs	r3, r4, #12
    49b4:	b087      	sub	sp, #28
    49b6:	0007      	movs	r7, r0
    49b8:	4692      	mov	sl, r2
    49ba:	469b      	mov	fp, r3
    49bc:	0d76      	lsrs	r6, r6, #21
    49be:	0fcd      	lsrs	r5, r1, #31
    49c0:	2e00      	cmp	r6, #0
    49c2:	d06b      	beq.n	4a9c <__aeabi_dmul+0xfc>
    49c4:	4b6d      	ldr	r3, [pc, #436]	; (4b7c <__aeabi_dmul+0x1dc>)
    49c6:	429e      	cmp	r6, r3
    49c8:	d035      	beq.n	4a36 <__aeabi_dmul+0x96>
    49ca:	2480      	movs	r4, #128	; 0x80
    49cc:	465b      	mov	r3, fp
    49ce:	0f42      	lsrs	r2, r0, #29
    49d0:	0424      	lsls	r4, r4, #16
    49d2:	00db      	lsls	r3, r3, #3
    49d4:	4314      	orrs	r4, r2
    49d6:	431c      	orrs	r4, r3
    49d8:	00c3      	lsls	r3, r0, #3
    49da:	4699      	mov	r9, r3
    49dc:	4b68      	ldr	r3, [pc, #416]	; (4b80 <__aeabi_dmul+0x1e0>)
    49de:	46a3      	mov	fp, r4
    49e0:	469c      	mov	ip, r3
    49e2:	2300      	movs	r3, #0
    49e4:	2700      	movs	r7, #0
    49e6:	4466      	add	r6, ip
    49e8:	9302      	str	r3, [sp, #8]
    49ea:	4643      	mov	r3, r8
    49ec:	031c      	lsls	r4, r3, #12
    49ee:	005a      	lsls	r2, r3, #1
    49f0:	0fdb      	lsrs	r3, r3, #31
    49f2:	4650      	mov	r0, sl
    49f4:	0b24      	lsrs	r4, r4, #12
    49f6:	0d52      	lsrs	r2, r2, #21
    49f8:	4698      	mov	r8, r3
    49fa:	d100      	bne.n	49fe <__aeabi_dmul+0x5e>
    49fc:	e076      	b.n	4aec <__aeabi_dmul+0x14c>
    49fe:	4b5f      	ldr	r3, [pc, #380]	; (4b7c <__aeabi_dmul+0x1dc>)
    4a00:	429a      	cmp	r2, r3
    4a02:	d06d      	beq.n	4ae0 <__aeabi_dmul+0x140>
    4a04:	2380      	movs	r3, #128	; 0x80
    4a06:	0f41      	lsrs	r1, r0, #29
    4a08:	041b      	lsls	r3, r3, #16
    4a0a:	430b      	orrs	r3, r1
    4a0c:	495c      	ldr	r1, [pc, #368]	; (4b80 <__aeabi_dmul+0x1e0>)
    4a0e:	00e4      	lsls	r4, r4, #3
    4a10:	468c      	mov	ip, r1
    4a12:	431c      	orrs	r4, r3
    4a14:	00c3      	lsls	r3, r0, #3
    4a16:	2000      	movs	r0, #0
    4a18:	4462      	add	r2, ip
    4a1a:	4641      	mov	r1, r8
    4a1c:	18b6      	adds	r6, r6, r2
    4a1e:	4069      	eors	r1, r5
    4a20:	1c72      	adds	r2, r6, #1
    4a22:	9101      	str	r1, [sp, #4]
    4a24:	4694      	mov	ip, r2
    4a26:	4307      	orrs	r7, r0
    4a28:	2f0f      	cmp	r7, #15
    4a2a:	d900      	bls.n	4a2e <__aeabi_dmul+0x8e>
    4a2c:	e0b0      	b.n	4b90 <__aeabi_dmul+0x1f0>
    4a2e:	4a55      	ldr	r2, [pc, #340]	; (4b84 <__aeabi_dmul+0x1e4>)
    4a30:	00bf      	lsls	r7, r7, #2
    4a32:	59d2      	ldr	r2, [r2, r7]
    4a34:	4697      	mov	pc, r2
    4a36:	465b      	mov	r3, fp
    4a38:	4303      	orrs	r3, r0
    4a3a:	4699      	mov	r9, r3
    4a3c:	d000      	beq.n	4a40 <__aeabi_dmul+0xa0>
    4a3e:	e087      	b.n	4b50 <__aeabi_dmul+0x1b0>
    4a40:	2300      	movs	r3, #0
    4a42:	469b      	mov	fp, r3
    4a44:	3302      	adds	r3, #2
    4a46:	2708      	movs	r7, #8
    4a48:	9302      	str	r3, [sp, #8]
    4a4a:	e7ce      	b.n	49ea <__aeabi_dmul+0x4a>
    4a4c:	4642      	mov	r2, r8
    4a4e:	9201      	str	r2, [sp, #4]
    4a50:	2802      	cmp	r0, #2
    4a52:	d067      	beq.n	4b24 <__aeabi_dmul+0x184>
    4a54:	2803      	cmp	r0, #3
    4a56:	d100      	bne.n	4a5a <__aeabi_dmul+0xba>
    4a58:	e20e      	b.n	4e78 <__aeabi_dmul+0x4d8>
    4a5a:	2801      	cmp	r0, #1
    4a5c:	d000      	beq.n	4a60 <__aeabi_dmul+0xc0>
    4a5e:	e162      	b.n	4d26 <__aeabi_dmul+0x386>
    4a60:	2300      	movs	r3, #0
    4a62:	2400      	movs	r4, #0
    4a64:	2200      	movs	r2, #0
    4a66:	4699      	mov	r9, r3
    4a68:	9901      	ldr	r1, [sp, #4]
    4a6a:	4001      	ands	r1, r0
    4a6c:	b2cd      	uxtb	r5, r1
    4a6e:	2100      	movs	r1, #0
    4a70:	0312      	lsls	r2, r2, #12
    4a72:	0d0b      	lsrs	r3, r1, #20
    4a74:	0b12      	lsrs	r2, r2, #12
    4a76:	051b      	lsls	r3, r3, #20
    4a78:	4313      	orrs	r3, r2
    4a7a:	4a43      	ldr	r2, [pc, #268]	; (4b88 <__aeabi_dmul+0x1e8>)
    4a7c:	0524      	lsls	r4, r4, #20
    4a7e:	4013      	ands	r3, r2
    4a80:	431c      	orrs	r4, r3
    4a82:	0064      	lsls	r4, r4, #1
    4a84:	07ed      	lsls	r5, r5, #31
    4a86:	0864      	lsrs	r4, r4, #1
    4a88:	432c      	orrs	r4, r5
    4a8a:	4648      	mov	r0, r9
    4a8c:	0021      	movs	r1, r4
    4a8e:	b007      	add	sp, #28
    4a90:	bc3c      	pop	{r2, r3, r4, r5}
    4a92:	4690      	mov	r8, r2
    4a94:	4699      	mov	r9, r3
    4a96:	46a2      	mov	sl, r4
    4a98:	46ab      	mov	fp, r5
    4a9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a9c:	4303      	orrs	r3, r0
    4a9e:	4699      	mov	r9, r3
    4aa0:	d04f      	beq.n	4b42 <__aeabi_dmul+0x1a2>
    4aa2:	465b      	mov	r3, fp
    4aa4:	2b00      	cmp	r3, #0
    4aa6:	d100      	bne.n	4aaa <__aeabi_dmul+0x10a>
    4aa8:	e189      	b.n	4dbe <__aeabi_dmul+0x41e>
    4aaa:	4658      	mov	r0, fp
    4aac:	f000 fed6 	bl	585c <__clzsi2>
    4ab0:	0003      	movs	r3, r0
    4ab2:	3b0b      	subs	r3, #11
    4ab4:	2b1c      	cmp	r3, #28
    4ab6:	dd00      	ble.n	4aba <__aeabi_dmul+0x11a>
    4ab8:	e17a      	b.n	4db0 <__aeabi_dmul+0x410>
    4aba:	221d      	movs	r2, #29
    4abc:	1ad3      	subs	r3, r2, r3
    4abe:	003a      	movs	r2, r7
    4ac0:	0001      	movs	r1, r0
    4ac2:	465c      	mov	r4, fp
    4ac4:	40da      	lsrs	r2, r3
    4ac6:	3908      	subs	r1, #8
    4ac8:	408c      	lsls	r4, r1
    4aca:	0013      	movs	r3, r2
    4acc:	408f      	lsls	r7, r1
    4ace:	4323      	orrs	r3, r4
    4ad0:	469b      	mov	fp, r3
    4ad2:	46b9      	mov	r9, r7
    4ad4:	2300      	movs	r3, #0
    4ad6:	4e2d      	ldr	r6, [pc, #180]	; (4b8c <__aeabi_dmul+0x1ec>)
    4ad8:	2700      	movs	r7, #0
    4ada:	1a36      	subs	r6, r6, r0
    4adc:	9302      	str	r3, [sp, #8]
    4ade:	e784      	b.n	49ea <__aeabi_dmul+0x4a>
    4ae0:	4653      	mov	r3, sl
    4ae2:	4323      	orrs	r3, r4
    4ae4:	d12a      	bne.n	4b3c <__aeabi_dmul+0x19c>
    4ae6:	2400      	movs	r4, #0
    4ae8:	2002      	movs	r0, #2
    4aea:	e796      	b.n	4a1a <__aeabi_dmul+0x7a>
    4aec:	4653      	mov	r3, sl
    4aee:	4323      	orrs	r3, r4
    4af0:	d020      	beq.n	4b34 <__aeabi_dmul+0x194>
    4af2:	2c00      	cmp	r4, #0
    4af4:	d100      	bne.n	4af8 <__aeabi_dmul+0x158>
    4af6:	e157      	b.n	4da8 <__aeabi_dmul+0x408>
    4af8:	0020      	movs	r0, r4
    4afa:	f000 feaf 	bl	585c <__clzsi2>
    4afe:	0003      	movs	r3, r0
    4b00:	3b0b      	subs	r3, #11
    4b02:	2b1c      	cmp	r3, #28
    4b04:	dd00      	ble.n	4b08 <__aeabi_dmul+0x168>
    4b06:	e149      	b.n	4d9c <__aeabi_dmul+0x3fc>
    4b08:	211d      	movs	r1, #29
    4b0a:	1acb      	subs	r3, r1, r3
    4b0c:	4651      	mov	r1, sl
    4b0e:	0002      	movs	r2, r0
    4b10:	40d9      	lsrs	r1, r3
    4b12:	4653      	mov	r3, sl
    4b14:	3a08      	subs	r2, #8
    4b16:	4094      	lsls	r4, r2
    4b18:	4093      	lsls	r3, r2
    4b1a:	430c      	orrs	r4, r1
    4b1c:	4a1b      	ldr	r2, [pc, #108]	; (4b8c <__aeabi_dmul+0x1ec>)
    4b1e:	1a12      	subs	r2, r2, r0
    4b20:	2000      	movs	r0, #0
    4b22:	e77a      	b.n	4a1a <__aeabi_dmul+0x7a>
    4b24:	2501      	movs	r5, #1
    4b26:	9b01      	ldr	r3, [sp, #4]
    4b28:	4c14      	ldr	r4, [pc, #80]	; (4b7c <__aeabi_dmul+0x1dc>)
    4b2a:	401d      	ands	r5, r3
    4b2c:	2300      	movs	r3, #0
    4b2e:	2200      	movs	r2, #0
    4b30:	4699      	mov	r9, r3
    4b32:	e79c      	b.n	4a6e <__aeabi_dmul+0xce>
    4b34:	2400      	movs	r4, #0
    4b36:	2200      	movs	r2, #0
    4b38:	2001      	movs	r0, #1
    4b3a:	e76e      	b.n	4a1a <__aeabi_dmul+0x7a>
    4b3c:	4653      	mov	r3, sl
    4b3e:	2003      	movs	r0, #3
    4b40:	e76b      	b.n	4a1a <__aeabi_dmul+0x7a>
    4b42:	2300      	movs	r3, #0
    4b44:	469b      	mov	fp, r3
    4b46:	3301      	adds	r3, #1
    4b48:	2704      	movs	r7, #4
    4b4a:	2600      	movs	r6, #0
    4b4c:	9302      	str	r3, [sp, #8]
    4b4e:	e74c      	b.n	49ea <__aeabi_dmul+0x4a>
    4b50:	2303      	movs	r3, #3
    4b52:	4681      	mov	r9, r0
    4b54:	270c      	movs	r7, #12
    4b56:	9302      	str	r3, [sp, #8]
    4b58:	e747      	b.n	49ea <__aeabi_dmul+0x4a>
    4b5a:	2280      	movs	r2, #128	; 0x80
    4b5c:	2300      	movs	r3, #0
    4b5e:	2500      	movs	r5, #0
    4b60:	0312      	lsls	r2, r2, #12
    4b62:	4699      	mov	r9, r3
    4b64:	4c05      	ldr	r4, [pc, #20]	; (4b7c <__aeabi_dmul+0x1dc>)
    4b66:	e782      	b.n	4a6e <__aeabi_dmul+0xce>
    4b68:	465c      	mov	r4, fp
    4b6a:	464b      	mov	r3, r9
    4b6c:	9802      	ldr	r0, [sp, #8]
    4b6e:	e76f      	b.n	4a50 <__aeabi_dmul+0xb0>
    4b70:	465c      	mov	r4, fp
    4b72:	464b      	mov	r3, r9
    4b74:	9501      	str	r5, [sp, #4]
    4b76:	9802      	ldr	r0, [sp, #8]
    4b78:	e76a      	b.n	4a50 <__aeabi_dmul+0xb0>
    4b7a:	46c0      	nop			; (mov r8, r8)
    4b7c:	000007ff 	.word	0x000007ff
    4b80:	fffffc01 	.word	0xfffffc01
    4b84:	0001006c 	.word	0x0001006c
    4b88:	800fffff 	.word	0x800fffff
    4b8c:	fffffc0d 	.word	0xfffffc0d
    4b90:	464a      	mov	r2, r9
    4b92:	4649      	mov	r1, r9
    4b94:	0c17      	lsrs	r7, r2, #16
    4b96:	0c1a      	lsrs	r2, r3, #16
    4b98:	041b      	lsls	r3, r3, #16
    4b9a:	0c1b      	lsrs	r3, r3, #16
    4b9c:	0408      	lsls	r0, r1, #16
    4b9e:	0019      	movs	r1, r3
    4ba0:	0c00      	lsrs	r0, r0, #16
    4ba2:	4341      	muls	r1, r0
    4ba4:	0015      	movs	r5, r2
    4ba6:	4688      	mov	r8, r1
    4ba8:	0019      	movs	r1, r3
    4baa:	437d      	muls	r5, r7
    4bac:	4379      	muls	r1, r7
    4bae:	9503      	str	r5, [sp, #12]
    4bb0:	4689      	mov	r9, r1
    4bb2:	0029      	movs	r1, r5
    4bb4:	0015      	movs	r5, r2
    4bb6:	4345      	muls	r5, r0
    4bb8:	444d      	add	r5, r9
    4bba:	9502      	str	r5, [sp, #8]
    4bbc:	4645      	mov	r5, r8
    4bbe:	0c2d      	lsrs	r5, r5, #16
    4bc0:	46aa      	mov	sl, r5
    4bc2:	9d02      	ldr	r5, [sp, #8]
    4bc4:	4455      	add	r5, sl
    4bc6:	45a9      	cmp	r9, r5
    4bc8:	d906      	bls.n	4bd8 <__aeabi_dmul+0x238>
    4bca:	468a      	mov	sl, r1
    4bcc:	2180      	movs	r1, #128	; 0x80
    4bce:	0249      	lsls	r1, r1, #9
    4bd0:	4689      	mov	r9, r1
    4bd2:	44ca      	add	sl, r9
    4bd4:	4651      	mov	r1, sl
    4bd6:	9103      	str	r1, [sp, #12]
    4bd8:	0c29      	lsrs	r1, r5, #16
    4bda:	9104      	str	r1, [sp, #16]
    4bdc:	4641      	mov	r1, r8
    4bde:	0409      	lsls	r1, r1, #16
    4be0:	042d      	lsls	r5, r5, #16
    4be2:	0c09      	lsrs	r1, r1, #16
    4be4:	4688      	mov	r8, r1
    4be6:	0029      	movs	r1, r5
    4be8:	0c25      	lsrs	r5, r4, #16
    4bea:	0424      	lsls	r4, r4, #16
    4bec:	4441      	add	r1, r8
    4bee:	0c24      	lsrs	r4, r4, #16
    4bf0:	9105      	str	r1, [sp, #20]
    4bf2:	0021      	movs	r1, r4
    4bf4:	4341      	muls	r1, r0
    4bf6:	4688      	mov	r8, r1
    4bf8:	0021      	movs	r1, r4
    4bfa:	4379      	muls	r1, r7
    4bfc:	468a      	mov	sl, r1
    4bfe:	4368      	muls	r0, r5
    4c00:	4641      	mov	r1, r8
    4c02:	4450      	add	r0, sl
    4c04:	4681      	mov	r9, r0
    4c06:	0c08      	lsrs	r0, r1, #16
    4c08:	4448      	add	r0, r9
    4c0a:	436f      	muls	r7, r5
    4c0c:	4582      	cmp	sl, r0
    4c0e:	d903      	bls.n	4c18 <__aeabi_dmul+0x278>
    4c10:	2180      	movs	r1, #128	; 0x80
    4c12:	0249      	lsls	r1, r1, #9
    4c14:	4689      	mov	r9, r1
    4c16:	444f      	add	r7, r9
    4c18:	0c01      	lsrs	r1, r0, #16
    4c1a:	4689      	mov	r9, r1
    4c1c:	0039      	movs	r1, r7
    4c1e:	4449      	add	r1, r9
    4c20:	9102      	str	r1, [sp, #8]
    4c22:	4641      	mov	r1, r8
    4c24:	040f      	lsls	r7, r1, #16
    4c26:	9904      	ldr	r1, [sp, #16]
    4c28:	0c3f      	lsrs	r7, r7, #16
    4c2a:	4688      	mov	r8, r1
    4c2c:	0400      	lsls	r0, r0, #16
    4c2e:	19c0      	adds	r0, r0, r7
    4c30:	4480      	add	r8, r0
    4c32:	4641      	mov	r1, r8
    4c34:	9104      	str	r1, [sp, #16]
    4c36:	4659      	mov	r1, fp
    4c38:	0c0f      	lsrs	r7, r1, #16
    4c3a:	0409      	lsls	r1, r1, #16
    4c3c:	0c09      	lsrs	r1, r1, #16
    4c3e:	4688      	mov	r8, r1
    4c40:	4359      	muls	r1, r3
    4c42:	468a      	mov	sl, r1
    4c44:	0039      	movs	r1, r7
    4c46:	4351      	muls	r1, r2
    4c48:	4689      	mov	r9, r1
    4c4a:	4641      	mov	r1, r8
    4c4c:	434a      	muls	r2, r1
    4c4e:	4651      	mov	r1, sl
    4c50:	0c09      	lsrs	r1, r1, #16
    4c52:	468b      	mov	fp, r1
    4c54:	437b      	muls	r3, r7
    4c56:	18d2      	adds	r2, r2, r3
    4c58:	445a      	add	r2, fp
    4c5a:	4293      	cmp	r3, r2
    4c5c:	d903      	bls.n	4c66 <__aeabi_dmul+0x2c6>
    4c5e:	2380      	movs	r3, #128	; 0x80
    4c60:	025b      	lsls	r3, r3, #9
    4c62:	469b      	mov	fp, r3
    4c64:	44d9      	add	r9, fp
    4c66:	4651      	mov	r1, sl
    4c68:	0409      	lsls	r1, r1, #16
    4c6a:	0c09      	lsrs	r1, r1, #16
    4c6c:	468a      	mov	sl, r1
    4c6e:	4641      	mov	r1, r8
    4c70:	4361      	muls	r1, r4
    4c72:	437c      	muls	r4, r7
    4c74:	0c13      	lsrs	r3, r2, #16
    4c76:	0412      	lsls	r2, r2, #16
    4c78:	444b      	add	r3, r9
    4c7a:	4452      	add	r2, sl
    4c7c:	46a1      	mov	r9, r4
    4c7e:	468a      	mov	sl, r1
    4c80:	003c      	movs	r4, r7
    4c82:	4641      	mov	r1, r8
    4c84:	436c      	muls	r4, r5
    4c86:	434d      	muls	r5, r1
    4c88:	4651      	mov	r1, sl
    4c8a:	444d      	add	r5, r9
    4c8c:	0c0f      	lsrs	r7, r1, #16
    4c8e:	197d      	adds	r5, r7, r5
    4c90:	45a9      	cmp	r9, r5
    4c92:	d903      	bls.n	4c9c <__aeabi_dmul+0x2fc>
    4c94:	2180      	movs	r1, #128	; 0x80
    4c96:	0249      	lsls	r1, r1, #9
    4c98:	4688      	mov	r8, r1
    4c9a:	4444      	add	r4, r8
    4c9c:	9f04      	ldr	r7, [sp, #16]
    4c9e:	9903      	ldr	r1, [sp, #12]
    4ca0:	46b8      	mov	r8, r7
    4ca2:	4441      	add	r1, r8
    4ca4:	468b      	mov	fp, r1
    4ca6:	4583      	cmp	fp, r0
    4ca8:	4180      	sbcs	r0, r0
    4caa:	4241      	negs	r1, r0
    4cac:	4688      	mov	r8, r1
    4cae:	4651      	mov	r1, sl
    4cb0:	0408      	lsls	r0, r1, #16
    4cb2:	042f      	lsls	r7, r5, #16
    4cb4:	0c00      	lsrs	r0, r0, #16
    4cb6:	183f      	adds	r7, r7, r0
    4cb8:	4658      	mov	r0, fp
    4cba:	9902      	ldr	r1, [sp, #8]
    4cbc:	1810      	adds	r0, r2, r0
    4cbe:	4689      	mov	r9, r1
    4cc0:	4290      	cmp	r0, r2
    4cc2:	4192      	sbcs	r2, r2
    4cc4:	444f      	add	r7, r9
    4cc6:	46ba      	mov	sl, r7
    4cc8:	4252      	negs	r2, r2
    4cca:	4699      	mov	r9, r3
    4ccc:	4693      	mov	fp, r2
    4cce:	44c2      	add	sl, r8
    4cd0:	44d1      	add	r9, sl
    4cd2:	44cb      	add	fp, r9
    4cd4:	428f      	cmp	r7, r1
    4cd6:	41bf      	sbcs	r7, r7
    4cd8:	45c2      	cmp	sl, r8
    4cda:	4189      	sbcs	r1, r1
    4cdc:	4599      	cmp	r9, r3
    4cde:	419b      	sbcs	r3, r3
    4ce0:	4593      	cmp	fp, r2
    4ce2:	4192      	sbcs	r2, r2
    4ce4:	427f      	negs	r7, r7
    4ce6:	4249      	negs	r1, r1
    4ce8:	0c2d      	lsrs	r5, r5, #16
    4cea:	4252      	negs	r2, r2
    4cec:	430f      	orrs	r7, r1
    4cee:	425b      	negs	r3, r3
    4cf0:	4313      	orrs	r3, r2
    4cf2:	197f      	adds	r7, r7, r5
    4cf4:	18ff      	adds	r7, r7, r3
    4cf6:	465b      	mov	r3, fp
    4cf8:	193c      	adds	r4, r7, r4
    4cfa:	0ddb      	lsrs	r3, r3, #23
    4cfc:	9a05      	ldr	r2, [sp, #20]
    4cfe:	0264      	lsls	r4, r4, #9
    4d00:	431c      	orrs	r4, r3
    4d02:	0243      	lsls	r3, r0, #9
    4d04:	4313      	orrs	r3, r2
    4d06:	1e5d      	subs	r5, r3, #1
    4d08:	41ab      	sbcs	r3, r5
    4d0a:	465a      	mov	r2, fp
    4d0c:	0dc0      	lsrs	r0, r0, #23
    4d0e:	4303      	orrs	r3, r0
    4d10:	0252      	lsls	r2, r2, #9
    4d12:	4313      	orrs	r3, r2
    4d14:	01e2      	lsls	r2, r4, #7
    4d16:	d556      	bpl.n	4dc6 <__aeabi_dmul+0x426>
    4d18:	2001      	movs	r0, #1
    4d1a:	085a      	lsrs	r2, r3, #1
    4d1c:	4003      	ands	r3, r0
    4d1e:	4313      	orrs	r3, r2
    4d20:	07e2      	lsls	r2, r4, #31
    4d22:	4313      	orrs	r3, r2
    4d24:	0864      	lsrs	r4, r4, #1
    4d26:	485a      	ldr	r0, [pc, #360]	; (4e90 <__aeabi_dmul+0x4f0>)
    4d28:	4460      	add	r0, ip
    4d2a:	2800      	cmp	r0, #0
    4d2c:	dd4d      	ble.n	4dca <__aeabi_dmul+0x42a>
    4d2e:	075a      	lsls	r2, r3, #29
    4d30:	d009      	beq.n	4d46 <__aeabi_dmul+0x3a6>
    4d32:	220f      	movs	r2, #15
    4d34:	401a      	ands	r2, r3
    4d36:	2a04      	cmp	r2, #4
    4d38:	d005      	beq.n	4d46 <__aeabi_dmul+0x3a6>
    4d3a:	1d1a      	adds	r2, r3, #4
    4d3c:	429a      	cmp	r2, r3
    4d3e:	419b      	sbcs	r3, r3
    4d40:	425b      	negs	r3, r3
    4d42:	18e4      	adds	r4, r4, r3
    4d44:	0013      	movs	r3, r2
    4d46:	01e2      	lsls	r2, r4, #7
    4d48:	d504      	bpl.n	4d54 <__aeabi_dmul+0x3b4>
    4d4a:	2080      	movs	r0, #128	; 0x80
    4d4c:	4a51      	ldr	r2, [pc, #324]	; (4e94 <__aeabi_dmul+0x4f4>)
    4d4e:	00c0      	lsls	r0, r0, #3
    4d50:	4014      	ands	r4, r2
    4d52:	4460      	add	r0, ip
    4d54:	4a50      	ldr	r2, [pc, #320]	; (4e98 <__aeabi_dmul+0x4f8>)
    4d56:	4290      	cmp	r0, r2
    4d58:	dd00      	ble.n	4d5c <__aeabi_dmul+0x3bc>
    4d5a:	e6e3      	b.n	4b24 <__aeabi_dmul+0x184>
    4d5c:	2501      	movs	r5, #1
    4d5e:	08db      	lsrs	r3, r3, #3
    4d60:	0762      	lsls	r2, r4, #29
    4d62:	431a      	orrs	r2, r3
    4d64:	0264      	lsls	r4, r4, #9
    4d66:	9b01      	ldr	r3, [sp, #4]
    4d68:	4691      	mov	r9, r2
    4d6a:	0b22      	lsrs	r2, r4, #12
    4d6c:	0544      	lsls	r4, r0, #21
    4d6e:	0d64      	lsrs	r4, r4, #21
    4d70:	401d      	ands	r5, r3
    4d72:	e67c      	b.n	4a6e <__aeabi_dmul+0xce>
    4d74:	2280      	movs	r2, #128	; 0x80
    4d76:	4659      	mov	r1, fp
    4d78:	0312      	lsls	r2, r2, #12
    4d7a:	4211      	tst	r1, r2
    4d7c:	d008      	beq.n	4d90 <__aeabi_dmul+0x3f0>
    4d7e:	4214      	tst	r4, r2
    4d80:	d106      	bne.n	4d90 <__aeabi_dmul+0x3f0>
    4d82:	4322      	orrs	r2, r4
    4d84:	0312      	lsls	r2, r2, #12
    4d86:	0b12      	lsrs	r2, r2, #12
    4d88:	4645      	mov	r5, r8
    4d8a:	4699      	mov	r9, r3
    4d8c:	4c43      	ldr	r4, [pc, #268]	; (4e9c <__aeabi_dmul+0x4fc>)
    4d8e:	e66e      	b.n	4a6e <__aeabi_dmul+0xce>
    4d90:	465b      	mov	r3, fp
    4d92:	431a      	orrs	r2, r3
    4d94:	0312      	lsls	r2, r2, #12
    4d96:	0b12      	lsrs	r2, r2, #12
    4d98:	4c40      	ldr	r4, [pc, #256]	; (4e9c <__aeabi_dmul+0x4fc>)
    4d9a:	e668      	b.n	4a6e <__aeabi_dmul+0xce>
    4d9c:	0003      	movs	r3, r0
    4d9e:	4654      	mov	r4, sl
    4da0:	3b28      	subs	r3, #40	; 0x28
    4da2:	409c      	lsls	r4, r3
    4da4:	2300      	movs	r3, #0
    4da6:	e6b9      	b.n	4b1c <__aeabi_dmul+0x17c>
    4da8:	f000 fd58 	bl	585c <__clzsi2>
    4dac:	3020      	adds	r0, #32
    4dae:	e6a6      	b.n	4afe <__aeabi_dmul+0x15e>
    4db0:	0003      	movs	r3, r0
    4db2:	3b28      	subs	r3, #40	; 0x28
    4db4:	409f      	lsls	r7, r3
    4db6:	2300      	movs	r3, #0
    4db8:	46bb      	mov	fp, r7
    4dba:	4699      	mov	r9, r3
    4dbc:	e68a      	b.n	4ad4 <__aeabi_dmul+0x134>
    4dbe:	f000 fd4d 	bl	585c <__clzsi2>
    4dc2:	3020      	adds	r0, #32
    4dc4:	e674      	b.n	4ab0 <__aeabi_dmul+0x110>
    4dc6:	46b4      	mov	ip, r6
    4dc8:	e7ad      	b.n	4d26 <__aeabi_dmul+0x386>
    4dca:	2501      	movs	r5, #1
    4dcc:	1a2a      	subs	r2, r5, r0
    4dce:	2a38      	cmp	r2, #56	; 0x38
    4dd0:	dd06      	ble.n	4de0 <__aeabi_dmul+0x440>
    4dd2:	9b01      	ldr	r3, [sp, #4]
    4dd4:	2400      	movs	r4, #0
    4dd6:	401d      	ands	r5, r3
    4dd8:	2300      	movs	r3, #0
    4dda:	2200      	movs	r2, #0
    4ddc:	4699      	mov	r9, r3
    4dde:	e646      	b.n	4a6e <__aeabi_dmul+0xce>
    4de0:	2a1f      	cmp	r2, #31
    4de2:	dc21      	bgt.n	4e28 <__aeabi_dmul+0x488>
    4de4:	2520      	movs	r5, #32
    4de6:	0020      	movs	r0, r4
    4de8:	1aad      	subs	r5, r5, r2
    4dea:	001e      	movs	r6, r3
    4dec:	40ab      	lsls	r3, r5
    4dee:	40a8      	lsls	r0, r5
    4df0:	40d6      	lsrs	r6, r2
    4df2:	1e5d      	subs	r5, r3, #1
    4df4:	41ab      	sbcs	r3, r5
    4df6:	4330      	orrs	r0, r6
    4df8:	4318      	orrs	r0, r3
    4dfa:	40d4      	lsrs	r4, r2
    4dfc:	0743      	lsls	r3, r0, #29
    4dfe:	d009      	beq.n	4e14 <__aeabi_dmul+0x474>
    4e00:	230f      	movs	r3, #15
    4e02:	4003      	ands	r3, r0
    4e04:	2b04      	cmp	r3, #4
    4e06:	d005      	beq.n	4e14 <__aeabi_dmul+0x474>
    4e08:	0003      	movs	r3, r0
    4e0a:	1d18      	adds	r0, r3, #4
    4e0c:	4298      	cmp	r0, r3
    4e0e:	419b      	sbcs	r3, r3
    4e10:	425b      	negs	r3, r3
    4e12:	18e4      	adds	r4, r4, r3
    4e14:	0223      	lsls	r3, r4, #8
    4e16:	d521      	bpl.n	4e5c <__aeabi_dmul+0x4bc>
    4e18:	2501      	movs	r5, #1
    4e1a:	9b01      	ldr	r3, [sp, #4]
    4e1c:	2401      	movs	r4, #1
    4e1e:	401d      	ands	r5, r3
    4e20:	2300      	movs	r3, #0
    4e22:	2200      	movs	r2, #0
    4e24:	4699      	mov	r9, r3
    4e26:	e622      	b.n	4a6e <__aeabi_dmul+0xce>
    4e28:	251f      	movs	r5, #31
    4e2a:	0021      	movs	r1, r4
    4e2c:	426d      	negs	r5, r5
    4e2e:	1a28      	subs	r0, r5, r0
    4e30:	40c1      	lsrs	r1, r0
    4e32:	0008      	movs	r0, r1
    4e34:	2a20      	cmp	r2, #32
    4e36:	d01d      	beq.n	4e74 <__aeabi_dmul+0x4d4>
    4e38:	355f      	adds	r5, #95	; 0x5f
    4e3a:	1aaa      	subs	r2, r5, r2
    4e3c:	4094      	lsls	r4, r2
    4e3e:	4323      	orrs	r3, r4
    4e40:	1e5c      	subs	r4, r3, #1
    4e42:	41a3      	sbcs	r3, r4
    4e44:	2507      	movs	r5, #7
    4e46:	4303      	orrs	r3, r0
    4e48:	401d      	ands	r5, r3
    4e4a:	2200      	movs	r2, #0
    4e4c:	2d00      	cmp	r5, #0
    4e4e:	d009      	beq.n	4e64 <__aeabi_dmul+0x4c4>
    4e50:	220f      	movs	r2, #15
    4e52:	2400      	movs	r4, #0
    4e54:	401a      	ands	r2, r3
    4e56:	0018      	movs	r0, r3
    4e58:	2a04      	cmp	r2, #4
    4e5a:	d1d6      	bne.n	4e0a <__aeabi_dmul+0x46a>
    4e5c:	0003      	movs	r3, r0
    4e5e:	0765      	lsls	r5, r4, #29
    4e60:	0264      	lsls	r4, r4, #9
    4e62:	0b22      	lsrs	r2, r4, #12
    4e64:	08db      	lsrs	r3, r3, #3
    4e66:	432b      	orrs	r3, r5
    4e68:	2501      	movs	r5, #1
    4e6a:	4699      	mov	r9, r3
    4e6c:	9b01      	ldr	r3, [sp, #4]
    4e6e:	2400      	movs	r4, #0
    4e70:	401d      	ands	r5, r3
    4e72:	e5fc      	b.n	4a6e <__aeabi_dmul+0xce>
    4e74:	2400      	movs	r4, #0
    4e76:	e7e2      	b.n	4e3e <__aeabi_dmul+0x49e>
    4e78:	2280      	movs	r2, #128	; 0x80
    4e7a:	2501      	movs	r5, #1
    4e7c:	0312      	lsls	r2, r2, #12
    4e7e:	4322      	orrs	r2, r4
    4e80:	9901      	ldr	r1, [sp, #4]
    4e82:	0312      	lsls	r2, r2, #12
    4e84:	0b12      	lsrs	r2, r2, #12
    4e86:	400d      	ands	r5, r1
    4e88:	4699      	mov	r9, r3
    4e8a:	4c04      	ldr	r4, [pc, #16]	; (4e9c <__aeabi_dmul+0x4fc>)
    4e8c:	e5ef      	b.n	4a6e <__aeabi_dmul+0xce>
    4e8e:	46c0      	nop			; (mov r8, r8)
    4e90:	000003ff 	.word	0x000003ff
    4e94:	feffffff 	.word	0xfeffffff
    4e98:	000007fe 	.word	0x000007fe
    4e9c:	000007ff 	.word	0x000007ff

00004ea0 <__aeabi_dsub>:
    4ea0:	b5f0      	push	{r4, r5, r6, r7, lr}
    4ea2:	4646      	mov	r6, r8
    4ea4:	46d6      	mov	lr, sl
    4ea6:	464f      	mov	r7, r9
    4ea8:	030c      	lsls	r4, r1, #12
    4eaa:	b5c0      	push	{r6, r7, lr}
    4eac:	0fcd      	lsrs	r5, r1, #31
    4eae:	004e      	lsls	r6, r1, #1
    4eb0:	0a61      	lsrs	r1, r4, #9
    4eb2:	0f44      	lsrs	r4, r0, #29
    4eb4:	430c      	orrs	r4, r1
    4eb6:	00c1      	lsls	r1, r0, #3
    4eb8:	0058      	lsls	r0, r3, #1
    4eba:	0d40      	lsrs	r0, r0, #21
    4ebc:	4684      	mov	ip, r0
    4ebe:	468a      	mov	sl, r1
    4ec0:	000f      	movs	r7, r1
    4ec2:	0319      	lsls	r1, r3, #12
    4ec4:	0f50      	lsrs	r0, r2, #29
    4ec6:	0a49      	lsrs	r1, r1, #9
    4ec8:	4301      	orrs	r1, r0
    4eca:	48c6      	ldr	r0, [pc, #792]	; (51e4 <__aeabi_dsub+0x344>)
    4ecc:	0d76      	lsrs	r6, r6, #21
    4ece:	46a8      	mov	r8, r5
    4ed0:	0fdb      	lsrs	r3, r3, #31
    4ed2:	00d2      	lsls	r2, r2, #3
    4ed4:	4584      	cmp	ip, r0
    4ed6:	d100      	bne.n	4eda <__aeabi_dsub+0x3a>
    4ed8:	e0d8      	b.n	508c <__aeabi_dsub+0x1ec>
    4eda:	2001      	movs	r0, #1
    4edc:	4043      	eors	r3, r0
    4ede:	42ab      	cmp	r3, r5
    4ee0:	d100      	bne.n	4ee4 <__aeabi_dsub+0x44>
    4ee2:	e0a6      	b.n	5032 <__aeabi_dsub+0x192>
    4ee4:	4660      	mov	r0, ip
    4ee6:	1a35      	subs	r5, r6, r0
    4ee8:	2d00      	cmp	r5, #0
    4eea:	dc00      	bgt.n	4eee <__aeabi_dsub+0x4e>
    4eec:	e105      	b.n	50fa <__aeabi_dsub+0x25a>
    4eee:	2800      	cmp	r0, #0
    4ef0:	d110      	bne.n	4f14 <__aeabi_dsub+0x74>
    4ef2:	000b      	movs	r3, r1
    4ef4:	4313      	orrs	r3, r2
    4ef6:	d100      	bne.n	4efa <__aeabi_dsub+0x5a>
    4ef8:	e0d7      	b.n	50aa <__aeabi_dsub+0x20a>
    4efa:	1e6b      	subs	r3, r5, #1
    4efc:	2b00      	cmp	r3, #0
    4efe:	d000      	beq.n	4f02 <__aeabi_dsub+0x62>
    4f00:	e14b      	b.n	519a <__aeabi_dsub+0x2fa>
    4f02:	4653      	mov	r3, sl
    4f04:	1a9f      	subs	r7, r3, r2
    4f06:	45ba      	cmp	sl, r7
    4f08:	4180      	sbcs	r0, r0
    4f0a:	1a64      	subs	r4, r4, r1
    4f0c:	4240      	negs	r0, r0
    4f0e:	1a24      	subs	r4, r4, r0
    4f10:	2601      	movs	r6, #1
    4f12:	e01e      	b.n	4f52 <__aeabi_dsub+0xb2>
    4f14:	4bb3      	ldr	r3, [pc, #716]	; (51e4 <__aeabi_dsub+0x344>)
    4f16:	429e      	cmp	r6, r3
    4f18:	d048      	beq.n	4fac <__aeabi_dsub+0x10c>
    4f1a:	2380      	movs	r3, #128	; 0x80
    4f1c:	041b      	lsls	r3, r3, #16
    4f1e:	4319      	orrs	r1, r3
    4f20:	2d38      	cmp	r5, #56	; 0x38
    4f22:	dd00      	ble.n	4f26 <__aeabi_dsub+0x86>
    4f24:	e119      	b.n	515a <__aeabi_dsub+0x2ba>
    4f26:	2d1f      	cmp	r5, #31
    4f28:	dd00      	ble.n	4f2c <__aeabi_dsub+0x8c>
    4f2a:	e14c      	b.n	51c6 <__aeabi_dsub+0x326>
    4f2c:	2320      	movs	r3, #32
    4f2e:	000f      	movs	r7, r1
    4f30:	1b5b      	subs	r3, r3, r5
    4f32:	0010      	movs	r0, r2
    4f34:	409a      	lsls	r2, r3
    4f36:	409f      	lsls	r7, r3
    4f38:	40e8      	lsrs	r0, r5
    4f3a:	1e53      	subs	r3, r2, #1
    4f3c:	419a      	sbcs	r2, r3
    4f3e:	40e9      	lsrs	r1, r5
    4f40:	4307      	orrs	r7, r0
    4f42:	4317      	orrs	r7, r2
    4f44:	4653      	mov	r3, sl
    4f46:	1bdf      	subs	r7, r3, r7
    4f48:	1a61      	subs	r1, r4, r1
    4f4a:	45ba      	cmp	sl, r7
    4f4c:	41a4      	sbcs	r4, r4
    4f4e:	4264      	negs	r4, r4
    4f50:	1b0c      	subs	r4, r1, r4
    4f52:	0223      	lsls	r3, r4, #8
    4f54:	d400      	bmi.n	4f58 <__aeabi_dsub+0xb8>
    4f56:	e0c5      	b.n	50e4 <__aeabi_dsub+0x244>
    4f58:	0264      	lsls	r4, r4, #9
    4f5a:	0a65      	lsrs	r5, r4, #9
    4f5c:	2d00      	cmp	r5, #0
    4f5e:	d100      	bne.n	4f62 <__aeabi_dsub+0xc2>
    4f60:	e0f6      	b.n	5150 <__aeabi_dsub+0x2b0>
    4f62:	0028      	movs	r0, r5
    4f64:	f000 fc7a 	bl	585c <__clzsi2>
    4f68:	0003      	movs	r3, r0
    4f6a:	3b08      	subs	r3, #8
    4f6c:	2b1f      	cmp	r3, #31
    4f6e:	dd00      	ble.n	4f72 <__aeabi_dsub+0xd2>
    4f70:	e0e9      	b.n	5146 <__aeabi_dsub+0x2a6>
    4f72:	2220      	movs	r2, #32
    4f74:	003c      	movs	r4, r7
    4f76:	1ad2      	subs	r2, r2, r3
    4f78:	409d      	lsls	r5, r3
    4f7a:	40d4      	lsrs	r4, r2
    4f7c:	409f      	lsls	r7, r3
    4f7e:	4325      	orrs	r5, r4
    4f80:	429e      	cmp	r6, r3
    4f82:	dd00      	ble.n	4f86 <__aeabi_dsub+0xe6>
    4f84:	e0db      	b.n	513e <__aeabi_dsub+0x29e>
    4f86:	1b9e      	subs	r6, r3, r6
    4f88:	1c73      	adds	r3, r6, #1
    4f8a:	2b1f      	cmp	r3, #31
    4f8c:	dd00      	ble.n	4f90 <__aeabi_dsub+0xf0>
    4f8e:	e10a      	b.n	51a6 <__aeabi_dsub+0x306>
    4f90:	2220      	movs	r2, #32
    4f92:	0038      	movs	r0, r7
    4f94:	1ad2      	subs	r2, r2, r3
    4f96:	0029      	movs	r1, r5
    4f98:	4097      	lsls	r7, r2
    4f9a:	002c      	movs	r4, r5
    4f9c:	4091      	lsls	r1, r2
    4f9e:	40d8      	lsrs	r0, r3
    4fa0:	1e7a      	subs	r2, r7, #1
    4fa2:	4197      	sbcs	r7, r2
    4fa4:	40dc      	lsrs	r4, r3
    4fa6:	2600      	movs	r6, #0
    4fa8:	4301      	orrs	r1, r0
    4faa:	430f      	orrs	r7, r1
    4fac:	077b      	lsls	r3, r7, #29
    4fae:	d009      	beq.n	4fc4 <__aeabi_dsub+0x124>
    4fb0:	230f      	movs	r3, #15
    4fb2:	403b      	ands	r3, r7
    4fb4:	2b04      	cmp	r3, #4
    4fb6:	d005      	beq.n	4fc4 <__aeabi_dsub+0x124>
    4fb8:	1d3b      	adds	r3, r7, #4
    4fba:	42bb      	cmp	r3, r7
    4fbc:	41bf      	sbcs	r7, r7
    4fbe:	427f      	negs	r7, r7
    4fc0:	19e4      	adds	r4, r4, r7
    4fc2:	001f      	movs	r7, r3
    4fc4:	0223      	lsls	r3, r4, #8
    4fc6:	d525      	bpl.n	5014 <__aeabi_dsub+0x174>
    4fc8:	4b86      	ldr	r3, [pc, #536]	; (51e4 <__aeabi_dsub+0x344>)
    4fca:	3601      	adds	r6, #1
    4fcc:	429e      	cmp	r6, r3
    4fce:	d100      	bne.n	4fd2 <__aeabi_dsub+0x132>
    4fd0:	e0af      	b.n	5132 <__aeabi_dsub+0x292>
    4fd2:	4b85      	ldr	r3, [pc, #532]	; (51e8 <__aeabi_dsub+0x348>)
    4fd4:	2501      	movs	r5, #1
    4fd6:	401c      	ands	r4, r3
    4fd8:	4643      	mov	r3, r8
    4fda:	0762      	lsls	r2, r4, #29
    4fdc:	08ff      	lsrs	r7, r7, #3
    4fde:	0264      	lsls	r4, r4, #9
    4fe0:	0576      	lsls	r6, r6, #21
    4fe2:	4317      	orrs	r7, r2
    4fe4:	0b24      	lsrs	r4, r4, #12
    4fe6:	0d76      	lsrs	r6, r6, #21
    4fe8:	401d      	ands	r5, r3
    4fea:	2100      	movs	r1, #0
    4fec:	0324      	lsls	r4, r4, #12
    4fee:	0b23      	lsrs	r3, r4, #12
    4ff0:	0d0c      	lsrs	r4, r1, #20
    4ff2:	4a7e      	ldr	r2, [pc, #504]	; (51ec <__aeabi_dsub+0x34c>)
    4ff4:	0524      	lsls	r4, r4, #20
    4ff6:	431c      	orrs	r4, r3
    4ff8:	4014      	ands	r4, r2
    4ffa:	0533      	lsls	r3, r6, #20
    4ffc:	4323      	orrs	r3, r4
    4ffe:	005b      	lsls	r3, r3, #1
    5000:	07ed      	lsls	r5, r5, #31
    5002:	085b      	lsrs	r3, r3, #1
    5004:	432b      	orrs	r3, r5
    5006:	0038      	movs	r0, r7
    5008:	0019      	movs	r1, r3
    500a:	bc1c      	pop	{r2, r3, r4}
    500c:	4690      	mov	r8, r2
    500e:	4699      	mov	r9, r3
    5010:	46a2      	mov	sl, r4
    5012:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5014:	2501      	movs	r5, #1
    5016:	4643      	mov	r3, r8
    5018:	0762      	lsls	r2, r4, #29
    501a:	08ff      	lsrs	r7, r7, #3
    501c:	4317      	orrs	r7, r2
    501e:	08e4      	lsrs	r4, r4, #3
    5020:	401d      	ands	r5, r3
    5022:	4b70      	ldr	r3, [pc, #448]	; (51e4 <__aeabi_dsub+0x344>)
    5024:	429e      	cmp	r6, r3
    5026:	d036      	beq.n	5096 <__aeabi_dsub+0x1f6>
    5028:	0324      	lsls	r4, r4, #12
    502a:	0576      	lsls	r6, r6, #21
    502c:	0b24      	lsrs	r4, r4, #12
    502e:	0d76      	lsrs	r6, r6, #21
    5030:	e7db      	b.n	4fea <__aeabi_dsub+0x14a>
    5032:	4663      	mov	r3, ip
    5034:	1af3      	subs	r3, r6, r3
    5036:	2b00      	cmp	r3, #0
    5038:	dc00      	bgt.n	503c <__aeabi_dsub+0x19c>
    503a:	e094      	b.n	5166 <__aeabi_dsub+0x2c6>
    503c:	4660      	mov	r0, ip
    503e:	2800      	cmp	r0, #0
    5040:	d035      	beq.n	50ae <__aeabi_dsub+0x20e>
    5042:	4868      	ldr	r0, [pc, #416]	; (51e4 <__aeabi_dsub+0x344>)
    5044:	4286      	cmp	r6, r0
    5046:	d0b1      	beq.n	4fac <__aeabi_dsub+0x10c>
    5048:	2780      	movs	r7, #128	; 0x80
    504a:	043f      	lsls	r7, r7, #16
    504c:	4339      	orrs	r1, r7
    504e:	2b38      	cmp	r3, #56	; 0x38
    5050:	dc00      	bgt.n	5054 <__aeabi_dsub+0x1b4>
    5052:	e0fd      	b.n	5250 <__aeabi_dsub+0x3b0>
    5054:	430a      	orrs	r2, r1
    5056:	0017      	movs	r7, r2
    5058:	2100      	movs	r1, #0
    505a:	1e7a      	subs	r2, r7, #1
    505c:	4197      	sbcs	r7, r2
    505e:	4457      	add	r7, sl
    5060:	4557      	cmp	r7, sl
    5062:	4180      	sbcs	r0, r0
    5064:	1909      	adds	r1, r1, r4
    5066:	4244      	negs	r4, r0
    5068:	190c      	adds	r4, r1, r4
    506a:	0223      	lsls	r3, r4, #8
    506c:	d53a      	bpl.n	50e4 <__aeabi_dsub+0x244>
    506e:	4b5d      	ldr	r3, [pc, #372]	; (51e4 <__aeabi_dsub+0x344>)
    5070:	3601      	adds	r6, #1
    5072:	429e      	cmp	r6, r3
    5074:	d100      	bne.n	5078 <__aeabi_dsub+0x1d8>
    5076:	e14b      	b.n	5310 <__aeabi_dsub+0x470>
    5078:	2201      	movs	r2, #1
    507a:	4b5b      	ldr	r3, [pc, #364]	; (51e8 <__aeabi_dsub+0x348>)
    507c:	401c      	ands	r4, r3
    507e:	087b      	lsrs	r3, r7, #1
    5080:	4017      	ands	r7, r2
    5082:	431f      	orrs	r7, r3
    5084:	07e2      	lsls	r2, r4, #31
    5086:	4317      	orrs	r7, r2
    5088:	0864      	lsrs	r4, r4, #1
    508a:	e78f      	b.n	4fac <__aeabi_dsub+0x10c>
    508c:	0008      	movs	r0, r1
    508e:	4310      	orrs	r0, r2
    5090:	d000      	beq.n	5094 <__aeabi_dsub+0x1f4>
    5092:	e724      	b.n	4ede <__aeabi_dsub+0x3e>
    5094:	e721      	b.n	4eda <__aeabi_dsub+0x3a>
    5096:	0023      	movs	r3, r4
    5098:	433b      	orrs	r3, r7
    509a:	d100      	bne.n	509e <__aeabi_dsub+0x1fe>
    509c:	e1b9      	b.n	5412 <__aeabi_dsub+0x572>
    509e:	2280      	movs	r2, #128	; 0x80
    50a0:	0312      	lsls	r2, r2, #12
    50a2:	4314      	orrs	r4, r2
    50a4:	0324      	lsls	r4, r4, #12
    50a6:	0b24      	lsrs	r4, r4, #12
    50a8:	e79f      	b.n	4fea <__aeabi_dsub+0x14a>
    50aa:	002e      	movs	r6, r5
    50ac:	e77e      	b.n	4fac <__aeabi_dsub+0x10c>
    50ae:	0008      	movs	r0, r1
    50b0:	4310      	orrs	r0, r2
    50b2:	d100      	bne.n	50b6 <__aeabi_dsub+0x216>
    50b4:	e0ca      	b.n	524c <__aeabi_dsub+0x3ac>
    50b6:	1e58      	subs	r0, r3, #1
    50b8:	4684      	mov	ip, r0
    50ba:	2800      	cmp	r0, #0
    50bc:	d000      	beq.n	50c0 <__aeabi_dsub+0x220>
    50be:	e0e7      	b.n	5290 <__aeabi_dsub+0x3f0>
    50c0:	4452      	add	r2, sl
    50c2:	4552      	cmp	r2, sl
    50c4:	4180      	sbcs	r0, r0
    50c6:	1864      	adds	r4, r4, r1
    50c8:	4240      	negs	r0, r0
    50ca:	1824      	adds	r4, r4, r0
    50cc:	0017      	movs	r7, r2
    50ce:	2601      	movs	r6, #1
    50d0:	0223      	lsls	r3, r4, #8
    50d2:	d507      	bpl.n	50e4 <__aeabi_dsub+0x244>
    50d4:	2602      	movs	r6, #2
    50d6:	e7cf      	b.n	5078 <__aeabi_dsub+0x1d8>
    50d8:	4664      	mov	r4, ip
    50da:	432c      	orrs	r4, r5
    50dc:	d100      	bne.n	50e0 <__aeabi_dsub+0x240>
    50de:	e1b3      	b.n	5448 <__aeabi_dsub+0x5a8>
    50e0:	002c      	movs	r4, r5
    50e2:	4667      	mov	r7, ip
    50e4:	077b      	lsls	r3, r7, #29
    50e6:	d000      	beq.n	50ea <__aeabi_dsub+0x24a>
    50e8:	e762      	b.n	4fb0 <__aeabi_dsub+0x110>
    50ea:	0763      	lsls	r3, r4, #29
    50ec:	08ff      	lsrs	r7, r7, #3
    50ee:	431f      	orrs	r7, r3
    50f0:	2501      	movs	r5, #1
    50f2:	4643      	mov	r3, r8
    50f4:	08e4      	lsrs	r4, r4, #3
    50f6:	401d      	ands	r5, r3
    50f8:	e793      	b.n	5022 <__aeabi_dsub+0x182>
    50fa:	2d00      	cmp	r5, #0
    50fc:	d178      	bne.n	51f0 <__aeabi_dsub+0x350>
    50fe:	1c75      	adds	r5, r6, #1
    5100:	056d      	lsls	r5, r5, #21
    5102:	0d6d      	lsrs	r5, r5, #21
    5104:	2d01      	cmp	r5, #1
    5106:	dc00      	bgt.n	510a <__aeabi_dsub+0x26a>
    5108:	e0f2      	b.n	52f0 <__aeabi_dsub+0x450>
    510a:	4650      	mov	r0, sl
    510c:	1a80      	subs	r0, r0, r2
    510e:	4582      	cmp	sl, r0
    5110:	41bf      	sbcs	r7, r7
    5112:	1a65      	subs	r5, r4, r1
    5114:	427f      	negs	r7, r7
    5116:	1bed      	subs	r5, r5, r7
    5118:	4684      	mov	ip, r0
    511a:	0228      	lsls	r0, r5, #8
    511c:	d400      	bmi.n	5120 <__aeabi_dsub+0x280>
    511e:	e08c      	b.n	523a <__aeabi_dsub+0x39a>
    5120:	4650      	mov	r0, sl
    5122:	1a17      	subs	r7, r2, r0
    5124:	42ba      	cmp	r2, r7
    5126:	4192      	sbcs	r2, r2
    5128:	1b0c      	subs	r4, r1, r4
    512a:	4255      	negs	r5, r2
    512c:	1b65      	subs	r5, r4, r5
    512e:	4698      	mov	r8, r3
    5130:	e714      	b.n	4f5c <__aeabi_dsub+0xbc>
    5132:	2501      	movs	r5, #1
    5134:	4643      	mov	r3, r8
    5136:	2400      	movs	r4, #0
    5138:	401d      	ands	r5, r3
    513a:	2700      	movs	r7, #0
    513c:	e755      	b.n	4fea <__aeabi_dsub+0x14a>
    513e:	4c2a      	ldr	r4, [pc, #168]	; (51e8 <__aeabi_dsub+0x348>)
    5140:	1af6      	subs	r6, r6, r3
    5142:	402c      	ands	r4, r5
    5144:	e732      	b.n	4fac <__aeabi_dsub+0x10c>
    5146:	003d      	movs	r5, r7
    5148:	3828      	subs	r0, #40	; 0x28
    514a:	4085      	lsls	r5, r0
    514c:	2700      	movs	r7, #0
    514e:	e717      	b.n	4f80 <__aeabi_dsub+0xe0>
    5150:	0038      	movs	r0, r7
    5152:	f000 fb83 	bl	585c <__clzsi2>
    5156:	3020      	adds	r0, #32
    5158:	e706      	b.n	4f68 <__aeabi_dsub+0xc8>
    515a:	430a      	orrs	r2, r1
    515c:	0017      	movs	r7, r2
    515e:	2100      	movs	r1, #0
    5160:	1e7a      	subs	r2, r7, #1
    5162:	4197      	sbcs	r7, r2
    5164:	e6ee      	b.n	4f44 <__aeabi_dsub+0xa4>
    5166:	2b00      	cmp	r3, #0
    5168:	d000      	beq.n	516c <__aeabi_dsub+0x2cc>
    516a:	e0e5      	b.n	5338 <__aeabi_dsub+0x498>
    516c:	1c73      	adds	r3, r6, #1
    516e:	469c      	mov	ip, r3
    5170:	055b      	lsls	r3, r3, #21
    5172:	0d5b      	lsrs	r3, r3, #21
    5174:	2b01      	cmp	r3, #1
    5176:	dc00      	bgt.n	517a <__aeabi_dsub+0x2da>
    5178:	e09f      	b.n	52ba <__aeabi_dsub+0x41a>
    517a:	4b1a      	ldr	r3, [pc, #104]	; (51e4 <__aeabi_dsub+0x344>)
    517c:	459c      	cmp	ip, r3
    517e:	d100      	bne.n	5182 <__aeabi_dsub+0x2e2>
    5180:	e0c5      	b.n	530e <__aeabi_dsub+0x46e>
    5182:	4452      	add	r2, sl
    5184:	4552      	cmp	r2, sl
    5186:	4180      	sbcs	r0, r0
    5188:	1864      	adds	r4, r4, r1
    518a:	4240      	negs	r0, r0
    518c:	1824      	adds	r4, r4, r0
    518e:	07e7      	lsls	r7, r4, #31
    5190:	0852      	lsrs	r2, r2, #1
    5192:	4317      	orrs	r7, r2
    5194:	0864      	lsrs	r4, r4, #1
    5196:	4666      	mov	r6, ip
    5198:	e708      	b.n	4fac <__aeabi_dsub+0x10c>
    519a:	4812      	ldr	r0, [pc, #72]	; (51e4 <__aeabi_dsub+0x344>)
    519c:	4285      	cmp	r5, r0
    519e:	d100      	bne.n	51a2 <__aeabi_dsub+0x302>
    51a0:	e085      	b.n	52ae <__aeabi_dsub+0x40e>
    51a2:	001d      	movs	r5, r3
    51a4:	e6bc      	b.n	4f20 <__aeabi_dsub+0x80>
    51a6:	0029      	movs	r1, r5
    51a8:	3e1f      	subs	r6, #31
    51aa:	40f1      	lsrs	r1, r6
    51ac:	2b20      	cmp	r3, #32
    51ae:	d100      	bne.n	51b2 <__aeabi_dsub+0x312>
    51b0:	e07f      	b.n	52b2 <__aeabi_dsub+0x412>
    51b2:	2240      	movs	r2, #64	; 0x40
    51b4:	1ad3      	subs	r3, r2, r3
    51b6:	409d      	lsls	r5, r3
    51b8:	432f      	orrs	r7, r5
    51ba:	1e7d      	subs	r5, r7, #1
    51bc:	41af      	sbcs	r7, r5
    51be:	2400      	movs	r4, #0
    51c0:	430f      	orrs	r7, r1
    51c2:	2600      	movs	r6, #0
    51c4:	e78e      	b.n	50e4 <__aeabi_dsub+0x244>
    51c6:	002b      	movs	r3, r5
    51c8:	000f      	movs	r7, r1
    51ca:	3b20      	subs	r3, #32
    51cc:	40df      	lsrs	r7, r3
    51ce:	2d20      	cmp	r5, #32
    51d0:	d071      	beq.n	52b6 <__aeabi_dsub+0x416>
    51d2:	2340      	movs	r3, #64	; 0x40
    51d4:	1b5d      	subs	r5, r3, r5
    51d6:	40a9      	lsls	r1, r5
    51d8:	430a      	orrs	r2, r1
    51da:	1e51      	subs	r1, r2, #1
    51dc:	418a      	sbcs	r2, r1
    51de:	2100      	movs	r1, #0
    51e0:	4317      	orrs	r7, r2
    51e2:	e6af      	b.n	4f44 <__aeabi_dsub+0xa4>
    51e4:	000007ff 	.word	0x000007ff
    51e8:	ff7fffff 	.word	0xff7fffff
    51ec:	800fffff 	.word	0x800fffff
    51f0:	2e00      	cmp	r6, #0
    51f2:	d03e      	beq.n	5272 <__aeabi_dsub+0x3d2>
    51f4:	4eb3      	ldr	r6, [pc, #716]	; (54c4 <__aeabi_dsub+0x624>)
    51f6:	45b4      	cmp	ip, r6
    51f8:	d045      	beq.n	5286 <__aeabi_dsub+0x3e6>
    51fa:	2680      	movs	r6, #128	; 0x80
    51fc:	0436      	lsls	r6, r6, #16
    51fe:	426d      	negs	r5, r5
    5200:	4334      	orrs	r4, r6
    5202:	2d38      	cmp	r5, #56	; 0x38
    5204:	dd00      	ble.n	5208 <__aeabi_dsub+0x368>
    5206:	e0a8      	b.n	535a <__aeabi_dsub+0x4ba>
    5208:	2d1f      	cmp	r5, #31
    520a:	dd00      	ble.n	520e <__aeabi_dsub+0x36e>
    520c:	e11f      	b.n	544e <__aeabi_dsub+0x5ae>
    520e:	2620      	movs	r6, #32
    5210:	0027      	movs	r7, r4
    5212:	4650      	mov	r0, sl
    5214:	1b76      	subs	r6, r6, r5
    5216:	40b7      	lsls	r7, r6
    5218:	40e8      	lsrs	r0, r5
    521a:	4307      	orrs	r7, r0
    521c:	4650      	mov	r0, sl
    521e:	40b0      	lsls	r0, r6
    5220:	1e46      	subs	r6, r0, #1
    5222:	41b0      	sbcs	r0, r6
    5224:	40ec      	lsrs	r4, r5
    5226:	4338      	orrs	r0, r7
    5228:	1a17      	subs	r7, r2, r0
    522a:	42ba      	cmp	r2, r7
    522c:	4192      	sbcs	r2, r2
    522e:	1b0c      	subs	r4, r1, r4
    5230:	4252      	negs	r2, r2
    5232:	1aa4      	subs	r4, r4, r2
    5234:	4666      	mov	r6, ip
    5236:	4698      	mov	r8, r3
    5238:	e68b      	b.n	4f52 <__aeabi_dsub+0xb2>
    523a:	4664      	mov	r4, ip
    523c:	4667      	mov	r7, ip
    523e:	432c      	orrs	r4, r5
    5240:	d000      	beq.n	5244 <__aeabi_dsub+0x3a4>
    5242:	e68b      	b.n	4f5c <__aeabi_dsub+0xbc>
    5244:	2500      	movs	r5, #0
    5246:	2600      	movs	r6, #0
    5248:	2700      	movs	r7, #0
    524a:	e6ea      	b.n	5022 <__aeabi_dsub+0x182>
    524c:	001e      	movs	r6, r3
    524e:	e6ad      	b.n	4fac <__aeabi_dsub+0x10c>
    5250:	2b1f      	cmp	r3, #31
    5252:	dc60      	bgt.n	5316 <__aeabi_dsub+0x476>
    5254:	2720      	movs	r7, #32
    5256:	1af8      	subs	r0, r7, r3
    5258:	000f      	movs	r7, r1
    525a:	4684      	mov	ip, r0
    525c:	4087      	lsls	r7, r0
    525e:	0010      	movs	r0, r2
    5260:	40d8      	lsrs	r0, r3
    5262:	4307      	orrs	r7, r0
    5264:	4660      	mov	r0, ip
    5266:	4082      	lsls	r2, r0
    5268:	1e50      	subs	r0, r2, #1
    526a:	4182      	sbcs	r2, r0
    526c:	40d9      	lsrs	r1, r3
    526e:	4317      	orrs	r7, r2
    5270:	e6f5      	b.n	505e <__aeabi_dsub+0x1be>
    5272:	0026      	movs	r6, r4
    5274:	4650      	mov	r0, sl
    5276:	4306      	orrs	r6, r0
    5278:	d005      	beq.n	5286 <__aeabi_dsub+0x3e6>
    527a:	43ed      	mvns	r5, r5
    527c:	2d00      	cmp	r5, #0
    527e:	d0d3      	beq.n	5228 <__aeabi_dsub+0x388>
    5280:	4e90      	ldr	r6, [pc, #576]	; (54c4 <__aeabi_dsub+0x624>)
    5282:	45b4      	cmp	ip, r6
    5284:	d1bd      	bne.n	5202 <__aeabi_dsub+0x362>
    5286:	000c      	movs	r4, r1
    5288:	0017      	movs	r7, r2
    528a:	4666      	mov	r6, ip
    528c:	4698      	mov	r8, r3
    528e:	e68d      	b.n	4fac <__aeabi_dsub+0x10c>
    5290:	488c      	ldr	r0, [pc, #560]	; (54c4 <__aeabi_dsub+0x624>)
    5292:	4283      	cmp	r3, r0
    5294:	d00b      	beq.n	52ae <__aeabi_dsub+0x40e>
    5296:	4663      	mov	r3, ip
    5298:	e6d9      	b.n	504e <__aeabi_dsub+0x1ae>
    529a:	2d00      	cmp	r5, #0
    529c:	d000      	beq.n	52a0 <__aeabi_dsub+0x400>
    529e:	e096      	b.n	53ce <__aeabi_dsub+0x52e>
    52a0:	0008      	movs	r0, r1
    52a2:	4310      	orrs	r0, r2
    52a4:	d100      	bne.n	52a8 <__aeabi_dsub+0x408>
    52a6:	e0e2      	b.n	546e <__aeabi_dsub+0x5ce>
    52a8:	000c      	movs	r4, r1
    52aa:	0017      	movs	r7, r2
    52ac:	4698      	mov	r8, r3
    52ae:	4e85      	ldr	r6, [pc, #532]	; (54c4 <__aeabi_dsub+0x624>)
    52b0:	e67c      	b.n	4fac <__aeabi_dsub+0x10c>
    52b2:	2500      	movs	r5, #0
    52b4:	e780      	b.n	51b8 <__aeabi_dsub+0x318>
    52b6:	2100      	movs	r1, #0
    52b8:	e78e      	b.n	51d8 <__aeabi_dsub+0x338>
    52ba:	0023      	movs	r3, r4
    52bc:	4650      	mov	r0, sl
    52be:	4303      	orrs	r3, r0
    52c0:	2e00      	cmp	r6, #0
    52c2:	d000      	beq.n	52c6 <__aeabi_dsub+0x426>
    52c4:	e0a8      	b.n	5418 <__aeabi_dsub+0x578>
    52c6:	2b00      	cmp	r3, #0
    52c8:	d100      	bne.n	52cc <__aeabi_dsub+0x42c>
    52ca:	e0de      	b.n	548a <__aeabi_dsub+0x5ea>
    52cc:	000b      	movs	r3, r1
    52ce:	4313      	orrs	r3, r2
    52d0:	d100      	bne.n	52d4 <__aeabi_dsub+0x434>
    52d2:	e66b      	b.n	4fac <__aeabi_dsub+0x10c>
    52d4:	4452      	add	r2, sl
    52d6:	4552      	cmp	r2, sl
    52d8:	4180      	sbcs	r0, r0
    52da:	1864      	adds	r4, r4, r1
    52dc:	4240      	negs	r0, r0
    52de:	1824      	adds	r4, r4, r0
    52e0:	0017      	movs	r7, r2
    52e2:	0223      	lsls	r3, r4, #8
    52e4:	d400      	bmi.n	52e8 <__aeabi_dsub+0x448>
    52e6:	e6fd      	b.n	50e4 <__aeabi_dsub+0x244>
    52e8:	4b77      	ldr	r3, [pc, #476]	; (54c8 <__aeabi_dsub+0x628>)
    52ea:	4666      	mov	r6, ip
    52ec:	401c      	ands	r4, r3
    52ee:	e65d      	b.n	4fac <__aeabi_dsub+0x10c>
    52f0:	0025      	movs	r5, r4
    52f2:	4650      	mov	r0, sl
    52f4:	4305      	orrs	r5, r0
    52f6:	2e00      	cmp	r6, #0
    52f8:	d1cf      	bne.n	529a <__aeabi_dsub+0x3fa>
    52fa:	2d00      	cmp	r5, #0
    52fc:	d14f      	bne.n	539e <__aeabi_dsub+0x4fe>
    52fe:	000c      	movs	r4, r1
    5300:	4314      	orrs	r4, r2
    5302:	d100      	bne.n	5306 <__aeabi_dsub+0x466>
    5304:	e0a0      	b.n	5448 <__aeabi_dsub+0x5a8>
    5306:	000c      	movs	r4, r1
    5308:	0017      	movs	r7, r2
    530a:	4698      	mov	r8, r3
    530c:	e64e      	b.n	4fac <__aeabi_dsub+0x10c>
    530e:	4666      	mov	r6, ip
    5310:	2400      	movs	r4, #0
    5312:	2700      	movs	r7, #0
    5314:	e685      	b.n	5022 <__aeabi_dsub+0x182>
    5316:	001f      	movs	r7, r3
    5318:	0008      	movs	r0, r1
    531a:	3f20      	subs	r7, #32
    531c:	40f8      	lsrs	r0, r7
    531e:	0007      	movs	r7, r0
    5320:	2b20      	cmp	r3, #32
    5322:	d100      	bne.n	5326 <__aeabi_dsub+0x486>
    5324:	e08e      	b.n	5444 <__aeabi_dsub+0x5a4>
    5326:	2040      	movs	r0, #64	; 0x40
    5328:	1ac3      	subs	r3, r0, r3
    532a:	4099      	lsls	r1, r3
    532c:	430a      	orrs	r2, r1
    532e:	1e51      	subs	r1, r2, #1
    5330:	418a      	sbcs	r2, r1
    5332:	2100      	movs	r1, #0
    5334:	4317      	orrs	r7, r2
    5336:	e692      	b.n	505e <__aeabi_dsub+0x1be>
    5338:	2e00      	cmp	r6, #0
    533a:	d114      	bne.n	5366 <__aeabi_dsub+0x4c6>
    533c:	0026      	movs	r6, r4
    533e:	4650      	mov	r0, sl
    5340:	4306      	orrs	r6, r0
    5342:	d062      	beq.n	540a <__aeabi_dsub+0x56a>
    5344:	43db      	mvns	r3, r3
    5346:	2b00      	cmp	r3, #0
    5348:	d15c      	bne.n	5404 <__aeabi_dsub+0x564>
    534a:	1887      	adds	r7, r0, r2
    534c:	4297      	cmp	r7, r2
    534e:	4192      	sbcs	r2, r2
    5350:	1864      	adds	r4, r4, r1
    5352:	4252      	negs	r2, r2
    5354:	18a4      	adds	r4, r4, r2
    5356:	4666      	mov	r6, ip
    5358:	e687      	b.n	506a <__aeabi_dsub+0x1ca>
    535a:	4650      	mov	r0, sl
    535c:	4320      	orrs	r0, r4
    535e:	1e44      	subs	r4, r0, #1
    5360:	41a0      	sbcs	r0, r4
    5362:	2400      	movs	r4, #0
    5364:	e760      	b.n	5228 <__aeabi_dsub+0x388>
    5366:	4e57      	ldr	r6, [pc, #348]	; (54c4 <__aeabi_dsub+0x624>)
    5368:	45b4      	cmp	ip, r6
    536a:	d04e      	beq.n	540a <__aeabi_dsub+0x56a>
    536c:	2680      	movs	r6, #128	; 0x80
    536e:	0436      	lsls	r6, r6, #16
    5370:	425b      	negs	r3, r3
    5372:	4334      	orrs	r4, r6
    5374:	2b38      	cmp	r3, #56	; 0x38
    5376:	dd00      	ble.n	537a <__aeabi_dsub+0x4da>
    5378:	e07f      	b.n	547a <__aeabi_dsub+0x5da>
    537a:	2b1f      	cmp	r3, #31
    537c:	dd00      	ble.n	5380 <__aeabi_dsub+0x4e0>
    537e:	e08b      	b.n	5498 <__aeabi_dsub+0x5f8>
    5380:	2620      	movs	r6, #32
    5382:	0027      	movs	r7, r4
    5384:	4650      	mov	r0, sl
    5386:	1af6      	subs	r6, r6, r3
    5388:	40b7      	lsls	r7, r6
    538a:	40d8      	lsrs	r0, r3
    538c:	4307      	orrs	r7, r0
    538e:	4650      	mov	r0, sl
    5390:	40b0      	lsls	r0, r6
    5392:	1e46      	subs	r6, r0, #1
    5394:	41b0      	sbcs	r0, r6
    5396:	4307      	orrs	r7, r0
    5398:	40dc      	lsrs	r4, r3
    539a:	18bf      	adds	r7, r7, r2
    539c:	e7d6      	b.n	534c <__aeabi_dsub+0x4ac>
    539e:	000d      	movs	r5, r1
    53a0:	4315      	orrs	r5, r2
    53a2:	d100      	bne.n	53a6 <__aeabi_dsub+0x506>
    53a4:	e602      	b.n	4fac <__aeabi_dsub+0x10c>
    53a6:	4650      	mov	r0, sl
    53a8:	1a80      	subs	r0, r0, r2
    53aa:	4582      	cmp	sl, r0
    53ac:	41bf      	sbcs	r7, r7
    53ae:	1a65      	subs	r5, r4, r1
    53b0:	427f      	negs	r7, r7
    53b2:	1bed      	subs	r5, r5, r7
    53b4:	4684      	mov	ip, r0
    53b6:	0228      	lsls	r0, r5, #8
    53b8:	d400      	bmi.n	53bc <__aeabi_dsub+0x51c>
    53ba:	e68d      	b.n	50d8 <__aeabi_dsub+0x238>
    53bc:	4650      	mov	r0, sl
    53be:	1a17      	subs	r7, r2, r0
    53c0:	42ba      	cmp	r2, r7
    53c2:	4192      	sbcs	r2, r2
    53c4:	1b0c      	subs	r4, r1, r4
    53c6:	4252      	negs	r2, r2
    53c8:	1aa4      	subs	r4, r4, r2
    53ca:	4698      	mov	r8, r3
    53cc:	e5ee      	b.n	4fac <__aeabi_dsub+0x10c>
    53ce:	000d      	movs	r5, r1
    53d0:	4315      	orrs	r5, r2
    53d2:	d100      	bne.n	53d6 <__aeabi_dsub+0x536>
    53d4:	e76b      	b.n	52ae <__aeabi_dsub+0x40e>
    53d6:	4650      	mov	r0, sl
    53d8:	0767      	lsls	r7, r4, #29
    53da:	08c0      	lsrs	r0, r0, #3
    53dc:	4307      	orrs	r7, r0
    53de:	2080      	movs	r0, #128	; 0x80
    53e0:	08e4      	lsrs	r4, r4, #3
    53e2:	0300      	lsls	r0, r0, #12
    53e4:	4204      	tst	r4, r0
    53e6:	d007      	beq.n	53f8 <__aeabi_dsub+0x558>
    53e8:	08cd      	lsrs	r5, r1, #3
    53ea:	4205      	tst	r5, r0
    53ec:	d104      	bne.n	53f8 <__aeabi_dsub+0x558>
    53ee:	002c      	movs	r4, r5
    53f0:	4698      	mov	r8, r3
    53f2:	08d7      	lsrs	r7, r2, #3
    53f4:	0749      	lsls	r1, r1, #29
    53f6:	430f      	orrs	r7, r1
    53f8:	0f7b      	lsrs	r3, r7, #29
    53fa:	00e4      	lsls	r4, r4, #3
    53fc:	431c      	orrs	r4, r3
    53fe:	00ff      	lsls	r7, r7, #3
    5400:	4e30      	ldr	r6, [pc, #192]	; (54c4 <__aeabi_dsub+0x624>)
    5402:	e5d3      	b.n	4fac <__aeabi_dsub+0x10c>
    5404:	4e2f      	ldr	r6, [pc, #188]	; (54c4 <__aeabi_dsub+0x624>)
    5406:	45b4      	cmp	ip, r6
    5408:	d1b4      	bne.n	5374 <__aeabi_dsub+0x4d4>
    540a:	000c      	movs	r4, r1
    540c:	0017      	movs	r7, r2
    540e:	4666      	mov	r6, ip
    5410:	e5cc      	b.n	4fac <__aeabi_dsub+0x10c>
    5412:	2700      	movs	r7, #0
    5414:	2400      	movs	r4, #0
    5416:	e5e8      	b.n	4fea <__aeabi_dsub+0x14a>
    5418:	2b00      	cmp	r3, #0
    541a:	d039      	beq.n	5490 <__aeabi_dsub+0x5f0>
    541c:	000b      	movs	r3, r1
    541e:	4313      	orrs	r3, r2
    5420:	d100      	bne.n	5424 <__aeabi_dsub+0x584>
    5422:	e744      	b.n	52ae <__aeabi_dsub+0x40e>
    5424:	08c0      	lsrs	r0, r0, #3
    5426:	0767      	lsls	r7, r4, #29
    5428:	4307      	orrs	r7, r0
    542a:	2080      	movs	r0, #128	; 0x80
    542c:	08e4      	lsrs	r4, r4, #3
    542e:	0300      	lsls	r0, r0, #12
    5430:	4204      	tst	r4, r0
    5432:	d0e1      	beq.n	53f8 <__aeabi_dsub+0x558>
    5434:	08cb      	lsrs	r3, r1, #3
    5436:	4203      	tst	r3, r0
    5438:	d1de      	bne.n	53f8 <__aeabi_dsub+0x558>
    543a:	08d7      	lsrs	r7, r2, #3
    543c:	0749      	lsls	r1, r1, #29
    543e:	430f      	orrs	r7, r1
    5440:	001c      	movs	r4, r3
    5442:	e7d9      	b.n	53f8 <__aeabi_dsub+0x558>
    5444:	2100      	movs	r1, #0
    5446:	e771      	b.n	532c <__aeabi_dsub+0x48c>
    5448:	2500      	movs	r5, #0
    544a:	2700      	movs	r7, #0
    544c:	e5e9      	b.n	5022 <__aeabi_dsub+0x182>
    544e:	002e      	movs	r6, r5
    5450:	0027      	movs	r7, r4
    5452:	3e20      	subs	r6, #32
    5454:	40f7      	lsrs	r7, r6
    5456:	2d20      	cmp	r5, #32
    5458:	d02f      	beq.n	54ba <__aeabi_dsub+0x61a>
    545a:	2640      	movs	r6, #64	; 0x40
    545c:	1b75      	subs	r5, r6, r5
    545e:	40ac      	lsls	r4, r5
    5460:	4650      	mov	r0, sl
    5462:	4320      	orrs	r0, r4
    5464:	1e44      	subs	r4, r0, #1
    5466:	41a0      	sbcs	r0, r4
    5468:	2400      	movs	r4, #0
    546a:	4338      	orrs	r0, r7
    546c:	e6dc      	b.n	5228 <__aeabi_dsub+0x388>
    546e:	2480      	movs	r4, #128	; 0x80
    5470:	2500      	movs	r5, #0
    5472:	0324      	lsls	r4, r4, #12
    5474:	4e13      	ldr	r6, [pc, #76]	; (54c4 <__aeabi_dsub+0x624>)
    5476:	2700      	movs	r7, #0
    5478:	e5d3      	b.n	5022 <__aeabi_dsub+0x182>
    547a:	4650      	mov	r0, sl
    547c:	4320      	orrs	r0, r4
    547e:	0007      	movs	r7, r0
    5480:	1e78      	subs	r0, r7, #1
    5482:	4187      	sbcs	r7, r0
    5484:	2400      	movs	r4, #0
    5486:	18bf      	adds	r7, r7, r2
    5488:	e760      	b.n	534c <__aeabi_dsub+0x4ac>
    548a:	000c      	movs	r4, r1
    548c:	0017      	movs	r7, r2
    548e:	e58d      	b.n	4fac <__aeabi_dsub+0x10c>
    5490:	000c      	movs	r4, r1
    5492:	0017      	movs	r7, r2
    5494:	4e0b      	ldr	r6, [pc, #44]	; (54c4 <__aeabi_dsub+0x624>)
    5496:	e589      	b.n	4fac <__aeabi_dsub+0x10c>
    5498:	001e      	movs	r6, r3
    549a:	0027      	movs	r7, r4
    549c:	3e20      	subs	r6, #32
    549e:	40f7      	lsrs	r7, r6
    54a0:	2b20      	cmp	r3, #32
    54a2:	d00c      	beq.n	54be <__aeabi_dsub+0x61e>
    54a4:	2640      	movs	r6, #64	; 0x40
    54a6:	1af3      	subs	r3, r6, r3
    54a8:	409c      	lsls	r4, r3
    54aa:	4650      	mov	r0, sl
    54ac:	4320      	orrs	r0, r4
    54ae:	1e44      	subs	r4, r0, #1
    54b0:	41a0      	sbcs	r0, r4
    54b2:	4307      	orrs	r7, r0
    54b4:	2400      	movs	r4, #0
    54b6:	18bf      	adds	r7, r7, r2
    54b8:	e748      	b.n	534c <__aeabi_dsub+0x4ac>
    54ba:	2400      	movs	r4, #0
    54bc:	e7d0      	b.n	5460 <__aeabi_dsub+0x5c0>
    54be:	2400      	movs	r4, #0
    54c0:	e7f3      	b.n	54aa <__aeabi_dsub+0x60a>
    54c2:	46c0      	nop			; (mov r8, r8)
    54c4:	000007ff 	.word	0x000007ff
    54c8:	ff7fffff 	.word	0xff7fffff

000054cc <__aeabi_d2iz>:
    54cc:	b530      	push	{r4, r5, lr}
    54ce:	4d13      	ldr	r5, [pc, #76]	; (551c <__aeabi_d2iz+0x50>)
    54d0:	030a      	lsls	r2, r1, #12
    54d2:	004b      	lsls	r3, r1, #1
    54d4:	0b12      	lsrs	r2, r2, #12
    54d6:	0d5b      	lsrs	r3, r3, #21
    54d8:	0fc9      	lsrs	r1, r1, #31
    54da:	2400      	movs	r4, #0
    54dc:	42ab      	cmp	r3, r5
    54de:	dd10      	ble.n	5502 <__aeabi_d2iz+0x36>
    54e0:	4c0f      	ldr	r4, [pc, #60]	; (5520 <__aeabi_d2iz+0x54>)
    54e2:	42a3      	cmp	r3, r4
    54e4:	dc0f      	bgt.n	5506 <__aeabi_d2iz+0x3a>
    54e6:	2480      	movs	r4, #128	; 0x80
    54e8:	4d0e      	ldr	r5, [pc, #56]	; (5524 <__aeabi_d2iz+0x58>)
    54ea:	0364      	lsls	r4, r4, #13
    54ec:	4322      	orrs	r2, r4
    54ee:	1aed      	subs	r5, r5, r3
    54f0:	2d1f      	cmp	r5, #31
    54f2:	dd0b      	ble.n	550c <__aeabi_d2iz+0x40>
    54f4:	480c      	ldr	r0, [pc, #48]	; (5528 <__aeabi_d2iz+0x5c>)
    54f6:	1ac3      	subs	r3, r0, r3
    54f8:	40da      	lsrs	r2, r3
    54fa:	4254      	negs	r4, r2
    54fc:	2900      	cmp	r1, #0
    54fe:	d100      	bne.n	5502 <__aeabi_d2iz+0x36>
    5500:	0014      	movs	r4, r2
    5502:	0020      	movs	r0, r4
    5504:	bd30      	pop	{r4, r5, pc}
    5506:	4b09      	ldr	r3, [pc, #36]	; (552c <__aeabi_d2iz+0x60>)
    5508:	18cc      	adds	r4, r1, r3
    550a:	e7fa      	b.n	5502 <__aeabi_d2iz+0x36>
    550c:	4c08      	ldr	r4, [pc, #32]	; (5530 <__aeabi_d2iz+0x64>)
    550e:	40e8      	lsrs	r0, r5
    5510:	46a4      	mov	ip, r4
    5512:	4463      	add	r3, ip
    5514:	409a      	lsls	r2, r3
    5516:	4302      	orrs	r2, r0
    5518:	e7ef      	b.n	54fa <__aeabi_d2iz+0x2e>
    551a:	46c0      	nop			; (mov r8, r8)
    551c:	000003fe 	.word	0x000003fe
    5520:	0000041d 	.word	0x0000041d
    5524:	00000433 	.word	0x00000433
    5528:	00000413 	.word	0x00000413
    552c:	7fffffff 	.word	0x7fffffff
    5530:	fffffbed 	.word	0xfffffbed

00005534 <__aeabi_i2d>:
    5534:	b570      	push	{r4, r5, r6, lr}
    5536:	2800      	cmp	r0, #0
    5538:	d030      	beq.n	559c <__aeabi_i2d+0x68>
    553a:	17c3      	asrs	r3, r0, #31
    553c:	18c4      	adds	r4, r0, r3
    553e:	405c      	eors	r4, r3
    5540:	0fc5      	lsrs	r5, r0, #31
    5542:	0020      	movs	r0, r4
    5544:	f000 f98a 	bl	585c <__clzsi2>
    5548:	4b17      	ldr	r3, [pc, #92]	; (55a8 <__aeabi_i2d+0x74>)
    554a:	4a18      	ldr	r2, [pc, #96]	; (55ac <__aeabi_i2d+0x78>)
    554c:	1a1b      	subs	r3, r3, r0
    554e:	1ad2      	subs	r2, r2, r3
    5550:	2a1f      	cmp	r2, #31
    5552:	dd18      	ble.n	5586 <__aeabi_i2d+0x52>
    5554:	4a16      	ldr	r2, [pc, #88]	; (55b0 <__aeabi_i2d+0x7c>)
    5556:	1ad2      	subs	r2, r2, r3
    5558:	4094      	lsls	r4, r2
    555a:	2200      	movs	r2, #0
    555c:	0324      	lsls	r4, r4, #12
    555e:	055b      	lsls	r3, r3, #21
    5560:	0b24      	lsrs	r4, r4, #12
    5562:	0d5b      	lsrs	r3, r3, #21
    5564:	2100      	movs	r1, #0
    5566:	0010      	movs	r0, r2
    5568:	0324      	lsls	r4, r4, #12
    556a:	0d0a      	lsrs	r2, r1, #20
    556c:	0b24      	lsrs	r4, r4, #12
    556e:	0512      	lsls	r2, r2, #20
    5570:	4322      	orrs	r2, r4
    5572:	4c10      	ldr	r4, [pc, #64]	; (55b4 <__aeabi_i2d+0x80>)
    5574:	051b      	lsls	r3, r3, #20
    5576:	4022      	ands	r2, r4
    5578:	4313      	orrs	r3, r2
    557a:	005b      	lsls	r3, r3, #1
    557c:	07ed      	lsls	r5, r5, #31
    557e:	085b      	lsrs	r3, r3, #1
    5580:	432b      	orrs	r3, r5
    5582:	0019      	movs	r1, r3
    5584:	bd70      	pop	{r4, r5, r6, pc}
    5586:	0021      	movs	r1, r4
    5588:	4091      	lsls	r1, r2
    558a:	000a      	movs	r2, r1
    558c:	210b      	movs	r1, #11
    558e:	1a08      	subs	r0, r1, r0
    5590:	40c4      	lsrs	r4, r0
    5592:	055b      	lsls	r3, r3, #21
    5594:	0324      	lsls	r4, r4, #12
    5596:	0b24      	lsrs	r4, r4, #12
    5598:	0d5b      	lsrs	r3, r3, #21
    559a:	e7e3      	b.n	5564 <__aeabi_i2d+0x30>
    559c:	2500      	movs	r5, #0
    559e:	2300      	movs	r3, #0
    55a0:	2400      	movs	r4, #0
    55a2:	2200      	movs	r2, #0
    55a4:	e7de      	b.n	5564 <__aeabi_i2d+0x30>
    55a6:	46c0      	nop			; (mov r8, r8)
    55a8:	0000041e 	.word	0x0000041e
    55ac:	00000433 	.word	0x00000433
    55b0:	00000413 	.word	0x00000413
    55b4:	800fffff 	.word	0x800fffff

000055b8 <__aeabi_ui2d>:
    55b8:	b510      	push	{r4, lr}
    55ba:	1e04      	subs	r4, r0, #0
    55bc:	d028      	beq.n	5610 <__aeabi_ui2d+0x58>
    55be:	f000 f94d 	bl	585c <__clzsi2>
    55c2:	4b15      	ldr	r3, [pc, #84]	; (5618 <__aeabi_ui2d+0x60>)
    55c4:	4a15      	ldr	r2, [pc, #84]	; (561c <__aeabi_ui2d+0x64>)
    55c6:	1a1b      	subs	r3, r3, r0
    55c8:	1ad2      	subs	r2, r2, r3
    55ca:	2a1f      	cmp	r2, #31
    55cc:	dd15      	ble.n	55fa <__aeabi_ui2d+0x42>
    55ce:	4a14      	ldr	r2, [pc, #80]	; (5620 <__aeabi_ui2d+0x68>)
    55d0:	1ad2      	subs	r2, r2, r3
    55d2:	4094      	lsls	r4, r2
    55d4:	2200      	movs	r2, #0
    55d6:	0324      	lsls	r4, r4, #12
    55d8:	055b      	lsls	r3, r3, #21
    55da:	0b24      	lsrs	r4, r4, #12
    55dc:	0d5b      	lsrs	r3, r3, #21
    55de:	2100      	movs	r1, #0
    55e0:	0010      	movs	r0, r2
    55e2:	0324      	lsls	r4, r4, #12
    55e4:	0d0a      	lsrs	r2, r1, #20
    55e6:	0b24      	lsrs	r4, r4, #12
    55e8:	0512      	lsls	r2, r2, #20
    55ea:	4322      	orrs	r2, r4
    55ec:	4c0d      	ldr	r4, [pc, #52]	; (5624 <__aeabi_ui2d+0x6c>)
    55ee:	051b      	lsls	r3, r3, #20
    55f0:	4022      	ands	r2, r4
    55f2:	4313      	orrs	r3, r2
    55f4:	005b      	lsls	r3, r3, #1
    55f6:	0859      	lsrs	r1, r3, #1
    55f8:	bd10      	pop	{r4, pc}
    55fa:	0021      	movs	r1, r4
    55fc:	4091      	lsls	r1, r2
    55fe:	000a      	movs	r2, r1
    5600:	210b      	movs	r1, #11
    5602:	1a08      	subs	r0, r1, r0
    5604:	40c4      	lsrs	r4, r0
    5606:	055b      	lsls	r3, r3, #21
    5608:	0324      	lsls	r4, r4, #12
    560a:	0b24      	lsrs	r4, r4, #12
    560c:	0d5b      	lsrs	r3, r3, #21
    560e:	e7e6      	b.n	55de <__aeabi_ui2d+0x26>
    5610:	2300      	movs	r3, #0
    5612:	2400      	movs	r4, #0
    5614:	2200      	movs	r2, #0
    5616:	e7e2      	b.n	55de <__aeabi_ui2d+0x26>
    5618:	0000041e 	.word	0x0000041e
    561c:	00000433 	.word	0x00000433
    5620:	00000413 	.word	0x00000413
    5624:	800fffff 	.word	0x800fffff

00005628 <__aeabi_f2d>:
    5628:	0041      	lsls	r1, r0, #1
    562a:	0e09      	lsrs	r1, r1, #24
    562c:	1c4b      	adds	r3, r1, #1
    562e:	b570      	push	{r4, r5, r6, lr}
    5630:	b2db      	uxtb	r3, r3
    5632:	0246      	lsls	r6, r0, #9
    5634:	0a75      	lsrs	r5, r6, #9
    5636:	0fc4      	lsrs	r4, r0, #31
    5638:	2b01      	cmp	r3, #1
    563a:	dd14      	ble.n	5666 <__aeabi_f2d+0x3e>
    563c:	23e0      	movs	r3, #224	; 0xe0
    563e:	009b      	lsls	r3, r3, #2
    5640:	076d      	lsls	r5, r5, #29
    5642:	0b36      	lsrs	r6, r6, #12
    5644:	18cb      	adds	r3, r1, r3
    5646:	2100      	movs	r1, #0
    5648:	0d0a      	lsrs	r2, r1, #20
    564a:	0028      	movs	r0, r5
    564c:	0512      	lsls	r2, r2, #20
    564e:	4d1c      	ldr	r5, [pc, #112]	; (56c0 <__aeabi_f2d+0x98>)
    5650:	4332      	orrs	r2, r6
    5652:	055b      	lsls	r3, r3, #21
    5654:	402a      	ands	r2, r5
    5656:	085b      	lsrs	r3, r3, #1
    5658:	4313      	orrs	r3, r2
    565a:	005b      	lsls	r3, r3, #1
    565c:	07e4      	lsls	r4, r4, #31
    565e:	085b      	lsrs	r3, r3, #1
    5660:	4323      	orrs	r3, r4
    5662:	0019      	movs	r1, r3
    5664:	bd70      	pop	{r4, r5, r6, pc}
    5666:	2900      	cmp	r1, #0
    5668:	d114      	bne.n	5694 <__aeabi_f2d+0x6c>
    566a:	2d00      	cmp	r5, #0
    566c:	d01e      	beq.n	56ac <__aeabi_f2d+0x84>
    566e:	0028      	movs	r0, r5
    5670:	f000 f8f4 	bl	585c <__clzsi2>
    5674:	280a      	cmp	r0, #10
    5676:	dc1c      	bgt.n	56b2 <__aeabi_f2d+0x8a>
    5678:	230b      	movs	r3, #11
    567a:	002a      	movs	r2, r5
    567c:	1a1b      	subs	r3, r3, r0
    567e:	40da      	lsrs	r2, r3
    5680:	0003      	movs	r3, r0
    5682:	3315      	adds	r3, #21
    5684:	409d      	lsls	r5, r3
    5686:	4b0f      	ldr	r3, [pc, #60]	; (56c4 <__aeabi_f2d+0x9c>)
    5688:	0312      	lsls	r2, r2, #12
    568a:	1a1b      	subs	r3, r3, r0
    568c:	055b      	lsls	r3, r3, #21
    568e:	0b16      	lsrs	r6, r2, #12
    5690:	0d5b      	lsrs	r3, r3, #21
    5692:	e7d8      	b.n	5646 <__aeabi_f2d+0x1e>
    5694:	2d00      	cmp	r5, #0
    5696:	d006      	beq.n	56a6 <__aeabi_f2d+0x7e>
    5698:	0b32      	lsrs	r2, r6, #12
    569a:	2680      	movs	r6, #128	; 0x80
    569c:	0336      	lsls	r6, r6, #12
    569e:	076d      	lsls	r5, r5, #29
    56a0:	4316      	orrs	r6, r2
    56a2:	4b09      	ldr	r3, [pc, #36]	; (56c8 <__aeabi_f2d+0xa0>)
    56a4:	e7cf      	b.n	5646 <__aeabi_f2d+0x1e>
    56a6:	4b08      	ldr	r3, [pc, #32]	; (56c8 <__aeabi_f2d+0xa0>)
    56a8:	2600      	movs	r6, #0
    56aa:	e7cc      	b.n	5646 <__aeabi_f2d+0x1e>
    56ac:	2300      	movs	r3, #0
    56ae:	2600      	movs	r6, #0
    56b0:	e7c9      	b.n	5646 <__aeabi_f2d+0x1e>
    56b2:	0003      	movs	r3, r0
    56b4:	002a      	movs	r2, r5
    56b6:	3b0b      	subs	r3, #11
    56b8:	409a      	lsls	r2, r3
    56ba:	2500      	movs	r5, #0
    56bc:	e7e3      	b.n	5686 <__aeabi_f2d+0x5e>
    56be:	46c0      	nop			; (mov r8, r8)
    56c0:	800fffff 	.word	0x800fffff
    56c4:	00000389 	.word	0x00000389
    56c8:	000007ff 	.word	0x000007ff

000056cc <__aeabi_d2f>:
    56cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    56ce:	004c      	lsls	r4, r1, #1
    56d0:	0d64      	lsrs	r4, r4, #21
    56d2:	030b      	lsls	r3, r1, #12
    56d4:	1c62      	adds	r2, r4, #1
    56d6:	0f45      	lsrs	r5, r0, #29
    56d8:	0a5b      	lsrs	r3, r3, #9
    56da:	0552      	lsls	r2, r2, #21
    56dc:	432b      	orrs	r3, r5
    56de:	0fc9      	lsrs	r1, r1, #31
    56e0:	00c5      	lsls	r5, r0, #3
    56e2:	0d52      	lsrs	r2, r2, #21
    56e4:	2a01      	cmp	r2, #1
    56e6:	dd28      	ble.n	573a <__aeabi_d2f+0x6e>
    56e8:	4a3a      	ldr	r2, [pc, #232]	; (57d4 <__aeabi_d2f+0x108>)
    56ea:	18a6      	adds	r6, r4, r2
    56ec:	2efe      	cmp	r6, #254	; 0xfe
    56ee:	dc1b      	bgt.n	5728 <__aeabi_d2f+0x5c>
    56f0:	2e00      	cmp	r6, #0
    56f2:	dd3e      	ble.n	5772 <__aeabi_d2f+0xa6>
    56f4:	0180      	lsls	r0, r0, #6
    56f6:	0002      	movs	r2, r0
    56f8:	1e50      	subs	r0, r2, #1
    56fa:	4182      	sbcs	r2, r0
    56fc:	0f6d      	lsrs	r5, r5, #29
    56fe:	432a      	orrs	r2, r5
    5700:	00db      	lsls	r3, r3, #3
    5702:	4313      	orrs	r3, r2
    5704:	075a      	lsls	r2, r3, #29
    5706:	d004      	beq.n	5712 <__aeabi_d2f+0x46>
    5708:	220f      	movs	r2, #15
    570a:	401a      	ands	r2, r3
    570c:	2a04      	cmp	r2, #4
    570e:	d000      	beq.n	5712 <__aeabi_d2f+0x46>
    5710:	3304      	adds	r3, #4
    5712:	2280      	movs	r2, #128	; 0x80
    5714:	04d2      	lsls	r2, r2, #19
    5716:	401a      	ands	r2, r3
    5718:	d05a      	beq.n	57d0 <__aeabi_d2f+0x104>
    571a:	3601      	adds	r6, #1
    571c:	2eff      	cmp	r6, #255	; 0xff
    571e:	d003      	beq.n	5728 <__aeabi_d2f+0x5c>
    5720:	019b      	lsls	r3, r3, #6
    5722:	0a5b      	lsrs	r3, r3, #9
    5724:	b2f4      	uxtb	r4, r6
    5726:	e001      	b.n	572c <__aeabi_d2f+0x60>
    5728:	24ff      	movs	r4, #255	; 0xff
    572a:	2300      	movs	r3, #0
    572c:	0258      	lsls	r0, r3, #9
    572e:	05e4      	lsls	r4, r4, #23
    5730:	0a40      	lsrs	r0, r0, #9
    5732:	07c9      	lsls	r1, r1, #31
    5734:	4320      	orrs	r0, r4
    5736:	4308      	orrs	r0, r1
    5738:	bdf0      	pop	{r4, r5, r6, r7, pc}
    573a:	2c00      	cmp	r4, #0
    573c:	d007      	beq.n	574e <__aeabi_d2f+0x82>
    573e:	431d      	orrs	r5, r3
    5740:	d0f2      	beq.n	5728 <__aeabi_d2f+0x5c>
    5742:	2080      	movs	r0, #128	; 0x80
    5744:	00db      	lsls	r3, r3, #3
    5746:	0480      	lsls	r0, r0, #18
    5748:	4303      	orrs	r3, r0
    574a:	26ff      	movs	r6, #255	; 0xff
    574c:	e7da      	b.n	5704 <__aeabi_d2f+0x38>
    574e:	432b      	orrs	r3, r5
    5750:	d003      	beq.n	575a <__aeabi_d2f+0x8e>
    5752:	2305      	movs	r3, #5
    5754:	08db      	lsrs	r3, r3, #3
    5756:	2cff      	cmp	r4, #255	; 0xff
    5758:	d003      	beq.n	5762 <__aeabi_d2f+0x96>
    575a:	025b      	lsls	r3, r3, #9
    575c:	0a5b      	lsrs	r3, r3, #9
    575e:	b2e4      	uxtb	r4, r4
    5760:	e7e4      	b.n	572c <__aeabi_d2f+0x60>
    5762:	2b00      	cmp	r3, #0
    5764:	d032      	beq.n	57cc <__aeabi_d2f+0x100>
    5766:	2080      	movs	r0, #128	; 0x80
    5768:	03c0      	lsls	r0, r0, #15
    576a:	4303      	orrs	r3, r0
    576c:	025b      	lsls	r3, r3, #9
    576e:	0a5b      	lsrs	r3, r3, #9
    5770:	e7dc      	b.n	572c <__aeabi_d2f+0x60>
    5772:	0032      	movs	r2, r6
    5774:	3217      	adds	r2, #23
    5776:	db14      	blt.n	57a2 <__aeabi_d2f+0xd6>
    5778:	2280      	movs	r2, #128	; 0x80
    577a:	271e      	movs	r7, #30
    577c:	0412      	lsls	r2, r2, #16
    577e:	4313      	orrs	r3, r2
    5780:	1bbf      	subs	r7, r7, r6
    5782:	2f1f      	cmp	r7, #31
    5784:	dc0f      	bgt.n	57a6 <__aeabi_d2f+0xda>
    5786:	4a14      	ldr	r2, [pc, #80]	; (57d8 <__aeabi_d2f+0x10c>)
    5788:	4694      	mov	ip, r2
    578a:	4464      	add	r4, ip
    578c:	002a      	movs	r2, r5
    578e:	40a5      	lsls	r5, r4
    5790:	002e      	movs	r6, r5
    5792:	40a3      	lsls	r3, r4
    5794:	1e75      	subs	r5, r6, #1
    5796:	41ae      	sbcs	r6, r5
    5798:	40fa      	lsrs	r2, r7
    579a:	4333      	orrs	r3, r6
    579c:	4313      	orrs	r3, r2
    579e:	2600      	movs	r6, #0
    57a0:	e7b0      	b.n	5704 <__aeabi_d2f+0x38>
    57a2:	2400      	movs	r4, #0
    57a4:	e7d5      	b.n	5752 <__aeabi_d2f+0x86>
    57a6:	2202      	movs	r2, #2
    57a8:	4252      	negs	r2, r2
    57aa:	1b96      	subs	r6, r2, r6
    57ac:	001a      	movs	r2, r3
    57ae:	40f2      	lsrs	r2, r6
    57b0:	2f20      	cmp	r7, #32
    57b2:	d009      	beq.n	57c8 <__aeabi_d2f+0xfc>
    57b4:	4809      	ldr	r0, [pc, #36]	; (57dc <__aeabi_d2f+0x110>)
    57b6:	4684      	mov	ip, r0
    57b8:	4464      	add	r4, ip
    57ba:	40a3      	lsls	r3, r4
    57bc:	432b      	orrs	r3, r5
    57be:	1e5d      	subs	r5, r3, #1
    57c0:	41ab      	sbcs	r3, r5
    57c2:	2600      	movs	r6, #0
    57c4:	4313      	orrs	r3, r2
    57c6:	e79d      	b.n	5704 <__aeabi_d2f+0x38>
    57c8:	2300      	movs	r3, #0
    57ca:	e7f7      	b.n	57bc <__aeabi_d2f+0xf0>
    57cc:	2300      	movs	r3, #0
    57ce:	e7ad      	b.n	572c <__aeabi_d2f+0x60>
    57d0:	0034      	movs	r4, r6
    57d2:	e7bf      	b.n	5754 <__aeabi_d2f+0x88>
    57d4:	fffffc80 	.word	0xfffffc80
    57d8:	fffffc82 	.word	0xfffffc82
    57dc:	fffffca2 	.word	0xfffffca2

000057e0 <__aeabi_cdrcmple>:
    57e0:	4684      	mov	ip, r0
    57e2:	1c10      	adds	r0, r2, #0
    57e4:	4662      	mov	r2, ip
    57e6:	468c      	mov	ip, r1
    57e8:	1c19      	adds	r1, r3, #0
    57ea:	4663      	mov	r3, ip
    57ec:	e000      	b.n	57f0 <__aeabi_cdcmpeq>
    57ee:	46c0      	nop			; (mov r8, r8)

000057f0 <__aeabi_cdcmpeq>:
    57f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    57f2:	f000 f91b 	bl	5a2c <__ledf2>
    57f6:	2800      	cmp	r0, #0
    57f8:	d401      	bmi.n	57fe <__aeabi_cdcmpeq+0xe>
    57fa:	2100      	movs	r1, #0
    57fc:	42c8      	cmn	r0, r1
    57fe:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00005800 <__aeabi_dcmpeq>:
    5800:	b510      	push	{r4, lr}
    5802:	f000 f875 	bl	58f0 <__eqdf2>
    5806:	4240      	negs	r0, r0
    5808:	3001      	adds	r0, #1
    580a:	bd10      	pop	{r4, pc}

0000580c <__aeabi_dcmplt>:
    580c:	b510      	push	{r4, lr}
    580e:	f000 f90d 	bl	5a2c <__ledf2>
    5812:	2800      	cmp	r0, #0
    5814:	db01      	blt.n	581a <__aeabi_dcmplt+0xe>
    5816:	2000      	movs	r0, #0
    5818:	bd10      	pop	{r4, pc}
    581a:	2001      	movs	r0, #1
    581c:	bd10      	pop	{r4, pc}
    581e:	46c0      	nop			; (mov r8, r8)

00005820 <__aeabi_dcmple>:
    5820:	b510      	push	{r4, lr}
    5822:	f000 f903 	bl	5a2c <__ledf2>
    5826:	2800      	cmp	r0, #0
    5828:	dd01      	ble.n	582e <__aeabi_dcmple+0xe>
    582a:	2000      	movs	r0, #0
    582c:	bd10      	pop	{r4, pc}
    582e:	2001      	movs	r0, #1
    5830:	bd10      	pop	{r4, pc}
    5832:	46c0      	nop			; (mov r8, r8)

00005834 <__aeabi_dcmpgt>:
    5834:	b510      	push	{r4, lr}
    5836:	f000 f895 	bl	5964 <__gedf2>
    583a:	2800      	cmp	r0, #0
    583c:	dc01      	bgt.n	5842 <__aeabi_dcmpgt+0xe>
    583e:	2000      	movs	r0, #0
    5840:	bd10      	pop	{r4, pc}
    5842:	2001      	movs	r0, #1
    5844:	bd10      	pop	{r4, pc}
    5846:	46c0      	nop			; (mov r8, r8)

00005848 <__aeabi_dcmpge>:
    5848:	b510      	push	{r4, lr}
    584a:	f000 f88b 	bl	5964 <__gedf2>
    584e:	2800      	cmp	r0, #0
    5850:	da01      	bge.n	5856 <__aeabi_dcmpge+0xe>
    5852:	2000      	movs	r0, #0
    5854:	bd10      	pop	{r4, pc}
    5856:	2001      	movs	r0, #1
    5858:	bd10      	pop	{r4, pc}
    585a:	46c0      	nop			; (mov r8, r8)

0000585c <__clzsi2>:
    585c:	211c      	movs	r1, #28
    585e:	2301      	movs	r3, #1
    5860:	041b      	lsls	r3, r3, #16
    5862:	4298      	cmp	r0, r3
    5864:	d301      	bcc.n	586a <__clzsi2+0xe>
    5866:	0c00      	lsrs	r0, r0, #16
    5868:	3910      	subs	r1, #16
    586a:	0a1b      	lsrs	r3, r3, #8
    586c:	4298      	cmp	r0, r3
    586e:	d301      	bcc.n	5874 <__clzsi2+0x18>
    5870:	0a00      	lsrs	r0, r0, #8
    5872:	3908      	subs	r1, #8
    5874:	091b      	lsrs	r3, r3, #4
    5876:	4298      	cmp	r0, r3
    5878:	d301      	bcc.n	587e <__clzsi2+0x22>
    587a:	0900      	lsrs	r0, r0, #4
    587c:	3904      	subs	r1, #4
    587e:	a202      	add	r2, pc, #8	; (adr r2, 5888 <__clzsi2+0x2c>)
    5880:	5c10      	ldrb	r0, [r2, r0]
    5882:	1840      	adds	r0, r0, r1
    5884:	4770      	bx	lr
    5886:	46c0      	nop			; (mov r8, r8)
    5888:	02020304 	.word	0x02020304
    588c:	01010101 	.word	0x01010101
	...

00005898 <__clzdi2>:
    5898:	b510      	push	{r4, lr}
    589a:	2900      	cmp	r1, #0
    589c:	d103      	bne.n	58a6 <__clzdi2+0xe>
    589e:	f7ff ffdd 	bl	585c <__clzsi2>
    58a2:	3020      	adds	r0, #32
    58a4:	e002      	b.n	58ac <__clzdi2+0x14>
    58a6:	1c08      	adds	r0, r1, #0
    58a8:	f7ff ffd8 	bl	585c <__clzsi2>
    58ac:	bd10      	pop	{r4, pc}
    58ae:	46c0      	nop			; (mov r8, r8)

000058b0 <__ctzsi2>:
    58b0:	4241      	negs	r1, r0
    58b2:	4008      	ands	r0, r1
    58b4:	211c      	movs	r1, #28
    58b6:	2301      	movs	r3, #1
    58b8:	041b      	lsls	r3, r3, #16
    58ba:	4298      	cmp	r0, r3
    58bc:	d301      	bcc.n	58c2 <__ctzsi2+0x12>
    58be:	0c00      	lsrs	r0, r0, #16
    58c0:	3910      	subs	r1, #16
    58c2:	0a1b      	lsrs	r3, r3, #8
    58c4:	4298      	cmp	r0, r3
    58c6:	d301      	bcc.n	58cc <__ctzsi2+0x1c>
    58c8:	0a00      	lsrs	r0, r0, #8
    58ca:	3908      	subs	r1, #8
    58cc:	091b      	lsrs	r3, r3, #4
    58ce:	4298      	cmp	r0, r3
    58d0:	d301      	bcc.n	58d6 <__ctzsi2+0x26>
    58d2:	0900      	lsrs	r0, r0, #4
    58d4:	3904      	subs	r1, #4
    58d6:	a202      	add	r2, pc, #8	; (adr r2, 58e0 <__ctzsi2+0x30>)
    58d8:	5c10      	ldrb	r0, [r2, r0]
    58da:	1a40      	subs	r0, r0, r1
    58dc:	4770      	bx	lr
    58de:	46c0      	nop			; (mov r8, r8)
    58e0:	1d1d1c1b 	.word	0x1d1d1c1b
    58e4:	1e1e1e1e 	.word	0x1e1e1e1e
    58e8:	1f1f1f1f 	.word	0x1f1f1f1f
    58ec:	1f1f1f1f 	.word	0x1f1f1f1f

000058f0 <__eqdf2>:
    58f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    58f2:	464f      	mov	r7, r9
    58f4:	4646      	mov	r6, r8
    58f6:	46d6      	mov	lr, sl
    58f8:	005c      	lsls	r4, r3, #1
    58fa:	b5c0      	push	{r6, r7, lr}
    58fc:	031f      	lsls	r7, r3, #12
    58fe:	0fdb      	lsrs	r3, r3, #31
    5900:	469a      	mov	sl, r3
    5902:	4b17      	ldr	r3, [pc, #92]	; (5960 <__eqdf2+0x70>)
    5904:	030e      	lsls	r6, r1, #12
    5906:	004d      	lsls	r5, r1, #1
    5908:	4684      	mov	ip, r0
    590a:	4680      	mov	r8, r0
    590c:	0b36      	lsrs	r6, r6, #12
    590e:	0d6d      	lsrs	r5, r5, #21
    5910:	0fc9      	lsrs	r1, r1, #31
    5912:	4691      	mov	r9, r2
    5914:	0b3f      	lsrs	r7, r7, #12
    5916:	0d64      	lsrs	r4, r4, #21
    5918:	2001      	movs	r0, #1
    591a:	429d      	cmp	r5, r3
    591c:	d008      	beq.n	5930 <__eqdf2+0x40>
    591e:	429c      	cmp	r4, r3
    5920:	d001      	beq.n	5926 <__eqdf2+0x36>
    5922:	42a5      	cmp	r5, r4
    5924:	d00b      	beq.n	593e <__eqdf2+0x4e>
    5926:	bc1c      	pop	{r2, r3, r4}
    5928:	4690      	mov	r8, r2
    592a:	4699      	mov	r9, r3
    592c:	46a2      	mov	sl, r4
    592e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5930:	4663      	mov	r3, ip
    5932:	4333      	orrs	r3, r6
    5934:	d1f7      	bne.n	5926 <__eqdf2+0x36>
    5936:	42ac      	cmp	r4, r5
    5938:	d1f5      	bne.n	5926 <__eqdf2+0x36>
    593a:	433a      	orrs	r2, r7
    593c:	d1f3      	bne.n	5926 <__eqdf2+0x36>
    593e:	2001      	movs	r0, #1
    5940:	42be      	cmp	r6, r7
    5942:	d1f0      	bne.n	5926 <__eqdf2+0x36>
    5944:	45c8      	cmp	r8, r9
    5946:	d1ee      	bne.n	5926 <__eqdf2+0x36>
    5948:	4551      	cmp	r1, sl
    594a:	d007      	beq.n	595c <__eqdf2+0x6c>
    594c:	2d00      	cmp	r5, #0
    594e:	d1ea      	bne.n	5926 <__eqdf2+0x36>
    5950:	4663      	mov	r3, ip
    5952:	431e      	orrs	r6, r3
    5954:	0030      	movs	r0, r6
    5956:	1e46      	subs	r6, r0, #1
    5958:	41b0      	sbcs	r0, r6
    595a:	e7e4      	b.n	5926 <__eqdf2+0x36>
    595c:	2000      	movs	r0, #0
    595e:	e7e2      	b.n	5926 <__eqdf2+0x36>
    5960:	000007ff 	.word	0x000007ff

00005964 <__gedf2>:
    5964:	b5f0      	push	{r4, r5, r6, r7, lr}
    5966:	4645      	mov	r5, r8
    5968:	46de      	mov	lr, fp
    596a:	4657      	mov	r7, sl
    596c:	464e      	mov	r6, r9
    596e:	b5e0      	push	{r5, r6, r7, lr}
    5970:	031f      	lsls	r7, r3, #12
    5972:	0b3d      	lsrs	r5, r7, #12
    5974:	4f2c      	ldr	r7, [pc, #176]	; (5a28 <__gedf2+0xc4>)
    5976:	030e      	lsls	r6, r1, #12
    5978:	004c      	lsls	r4, r1, #1
    597a:	46ab      	mov	fp, r5
    597c:	005d      	lsls	r5, r3, #1
    597e:	4684      	mov	ip, r0
    5980:	0b36      	lsrs	r6, r6, #12
    5982:	0d64      	lsrs	r4, r4, #21
    5984:	0fc9      	lsrs	r1, r1, #31
    5986:	4690      	mov	r8, r2
    5988:	0d6d      	lsrs	r5, r5, #21
    598a:	0fdb      	lsrs	r3, r3, #31
    598c:	42bc      	cmp	r4, r7
    598e:	d02a      	beq.n	59e6 <__gedf2+0x82>
    5990:	4f25      	ldr	r7, [pc, #148]	; (5a28 <__gedf2+0xc4>)
    5992:	42bd      	cmp	r5, r7
    5994:	d02d      	beq.n	59f2 <__gedf2+0x8e>
    5996:	2c00      	cmp	r4, #0
    5998:	d10f      	bne.n	59ba <__gedf2+0x56>
    599a:	4330      	orrs	r0, r6
    599c:	0007      	movs	r7, r0
    599e:	4681      	mov	r9, r0
    59a0:	4278      	negs	r0, r7
    59a2:	4178      	adcs	r0, r7
    59a4:	b2c0      	uxtb	r0, r0
    59a6:	2d00      	cmp	r5, #0
    59a8:	d117      	bne.n	59da <__gedf2+0x76>
    59aa:	465f      	mov	r7, fp
    59ac:	433a      	orrs	r2, r7
    59ae:	d114      	bne.n	59da <__gedf2+0x76>
    59b0:	464b      	mov	r3, r9
    59b2:	2000      	movs	r0, #0
    59b4:	2b00      	cmp	r3, #0
    59b6:	d00a      	beq.n	59ce <__gedf2+0x6a>
    59b8:	e006      	b.n	59c8 <__gedf2+0x64>
    59ba:	2d00      	cmp	r5, #0
    59bc:	d102      	bne.n	59c4 <__gedf2+0x60>
    59be:	4658      	mov	r0, fp
    59c0:	4302      	orrs	r2, r0
    59c2:	d001      	beq.n	59c8 <__gedf2+0x64>
    59c4:	4299      	cmp	r1, r3
    59c6:	d018      	beq.n	59fa <__gedf2+0x96>
    59c8:	4248      	negs	r0, r1
    59ca:	2101      	movs	r1, #1
    59cc:	4308      	orrs	r0, r1
    59ce:	bc3c      	pop	{r2, r3, r4, r5}
    59d0:	4690      	mov	r8, r2
    59d2:	4699      	mov	r9, r3
    59d4:	46a2      	mov	sl, r4
    59d6:	46ab      	mov	fp, r5
    59d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    59da:	2800      	cmp	r0, #0
    59dc:	d0f2      	beq.n	59c4 <__gedf2+0x60>
    59de:	2001      	movs	r0, #1
    59e0:	3b01      	subs	r3, #1
    59e2:	4318      	orrs	r0, r3
    59e4:	e7f3      	b.n	59ce <__gedf2+0x6a>
    59e6:	0037      	movs	r7, r6
    59e8:	4307      	orrs	r7, r0
    59ea:	d0d1      	beq.n	5990 <__gedf2+0x2c>
    59ec:	2002      	movs	r0, #2
    59ee:	4240      	negs	r0, r0
    59f0:	e7ed      	b.n	59ce <__gedf2+0x6a>
    59f2:	465f      	mov	r7, fp
    59f4:	4317      	orrs	r7, r2
    59f6:	d0ce      	beq.n	5996 <__gedf2+0x32>
    59f8:	e7f8      	b.n	59ec <__gedf2+0x88>
    59fa:	42ac      	cmp	r4, r5
    59fc:	dce4      	bgt.n	59c8 <__gedf2+0x64>
    59fe:	da03      	bge.n	5a08 <__gedf2+0xa4>
    5a00:	1e48      	subs	r0, r1, #1
    5a02:	2101      	movs	r1, #1
    5a04:	4308      	orrs	r0, r1
    5a06:	e7e2      	b.n	59ce <__gedf2+0x6a>
    5a08:	455e      	cmp	r6, fp
    5a0a:	d8dd      	bhi.n	59c8 <__gedf2+0x64>
    5a0c:	d006      	beq.n	5a1c <__gedf2+0xb8>
    5a0e:	2000      	movs	r0, #0
    5a10:	455e      	cmp	r6, fp
    5a12:	d2dc      	bcs.n	59ce <__gedf2+0x6a>
    5a14:	2301      	movs	r3, #1
    5a16:	1e48      	subs	r0, r1, #1
    5a18:	4318      	orrs	r0, r3
    5a1a:	e7d8      	b.n	59ce <__gedf2+0x6a>
    5a1c:	45c4      	cmp	ip, r8
    5a1e:	d8d3      	bhi.n	59c8 <__gedf2+0x64>
    5a20:	2000      	movs	r0, #0
    5a22:	45c4      	cmp	ip, r8
    5a24:	d3f6      	bcc.n	5a14 <__gedf2+0xb0>
    5a26:	e7d2      	b.n	59ce <__gedf2+0x6a>
    5a28:	000007ff 	.word	0x000007ff

00005a2c <__ledf2>:
    5a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5a2e:	464e      	mov	r6, r9
    5a30:	4645      	mov	r5, r8
    5a32:	46de      	mov	lr, fp
    5a34:	4657      	mov	r7, sl
    5a36:	005c      	lsls	r4, r3, #1
    5a38:	b5e0      	push	{r5, r6, r7, lr}
    5a3a:	031f      	lsls	r7, r3, #12
    5a3c:	0fdb      	lsrs	r3, r3, #31
    5a3e:	4699      	mov	r9, r3
    5a40:	4b2a      	ldr	r3, [pc, #168]	; (5aec <__ledf2+0xc0>)
    5a42:	030e      	lsls	r6, r1, #12
    5a44:	004d      	lsls	r5, r1, #1
    5a46:	0fc9      	lsrs	r1, r1, #31
    5a48:	4684      	mov	ip, r0
    5a4a:	0b36      	lsrs	r6, r6, #12
    5a4c:	0d6d      	lsrs	r5, r5, #21
    5a4e:	468b      	mov	fp, r1
    5a50:	4690      	mov	r8, r2
    5a52:	0b3f      	lsrs	r7, r7, #12
    5a54:	0d64      	lsrs	r4, r4, #21
    5a56:	429d      	cmp	r5, r3
    5a58:	d020      	beq.n	5a9c <__ledf2+0x70>
    5a5a:	4b24      	ldr	r3, [pc, #144]	; (5aec <__ledf2+0xc0>)
    5a5c:	429c      	cmp	r4, r3
    5a5e:	d022      	beq.n	5aa6 <__ledf2+0x7a>
    5a60:	2d00      	cmp	r5, #0
    5a62:	d112      	bne.n	5a8a <__ledf2+0x5e>
    5a64:	4330      	orrs	r0, r6
    5a66:	4243      	negs	r3, r0
    5a68:	4143      	adcs	r3, r0
    5a6a:	b2db      	uxtb	r3, r3
    5a6c:	2c00      	cmp	r4, #0
    5a6e:	d01f      	beq.n	5ab0 <__ledf2+0x84>
    5a70:	2b00      	cmp	r3, #0
    5a72:	d00c      	beq.n	5a8e <__ledf2+0x62>
    5a74:	464b      	mov	r3, r9
    5a76:	2001      	movs	r0, #1
    5a78:	3b01      	subs	r3, #1
    5a7a:	4303      	orrs	r3, r0
    5a7c:	0018      	movs	r0, r3
    5a7e:	bc3c      	pop	{r2, r3, r4, r5}
    5a80:	4690      	mov	r8, r2
    5a82:	4699      	mov	r9, r3
    5a84:	46a2      	mov	sl, r4
    5a86:	46ab      	mov	fp, r5
    5a88:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5a8a:	2c00      	cmp	r4, #0
    5a8c:	d016      	beq.n	5abc <__ledf2+0x90>
    5a8e:	45cb      	cmp	fp, r9
    5a90:	d017      	beq.n	5ac2 <__ledf2+0x96>
    5a92:	465b      	mov	r3, fp
    5a94:	4259      	negs	r1, r3
    5a96:	2301      	movs	r3, #1
    5a98:	430b      	orrs	r3, r1
    5a9a:	e7ef      	b.n	5a7c <__ledf2+0x50>
    5a9c:	0031      	movs	r1, r6
    5a9e:	2302      	movs	r3, #2
    5aa0:	4301      	orrs	r1, r0
    5aa2:	d1eb      	bne.n	5a7c <__ledf2+0x50>
    5aa4:	e7d9      	b.n	5a5a <__ledf2+0x2e>
    5aa6:	0039      	movs	r1, r7
    5aa8:	2302      	movs	r3, #2
    5aaa:	4311      	orrs	r1, r2
    5aac:	d1e6      	bne.n	5a7c <__ledf2+0x50>
    5aae:	e7d7      	b.n	5a60 <__ledf2+0x34>
    5ab0:	433a      	orrs	r2, r7
    5ab2:	d1dd      	bne.n	5a70 <__ledf2+0x44>
    5ab4:	2300      	movs	r3, #0
    5ab6:	2800      	cmp	r0, #0
    5ab8:	d0e0      	beq.n	5a7c <__ledf2+0x50>
    5aba:	e7ea      	b.n	5a92 <__ledf2+0x66>
    5abc:	433a      	orrs	r2, r7
    5abe:	d1e6      	bne.n	5a8e <__ledf2+0x62>
    5ac0:	e7e7      	b.n	5a92 <__ledf2+0x66>
    5ac2:	42a5      	cmp	r5, r4
    5ac4:	dce5      	bgt.n	5a92 <__ledf2+0x66>
    5ac6:	db05      	blt.n	5ad4 <__ledf2+0xa8>
    5ac8:	42be      	cmp	r6, r7
    5aca:	d8e2      	bhi.n	5a92 <__ledf2+0x66>
    5acc:	d007      	beq.n	5ade <__ledf2+0xb2>
    5ace:	2300      	movs	r3, #0
    5ad0:	42be      	cmp	r6, r7
    5ad2:	d2d3      	bcs.n	5a7c <__ledf2+0x50>
    5ad4:	4659      	mov	r1, fp
    5ad6:	2301      	movs	r3, #1
    5ad8:	3901      	subs	r1, #1
    5ada:	430b      	orrs	r3, r1
    5adc:	e7ce      	b.n	5a7c <__ledf2+0x50>
    5ade:	45c4      	cmp	ip, r8
    5ae0:	d8d7      	bhi.n	5a92 <__ledf2+0x66>
    5ae2:	2300      	movs	r3, #0
    5ae4:	45c4      	cmp	ip, r8
    5ae6:	d3f5      	bcc.n	5ad4 <__ledf2+0xa8>
    5ae8:	e7c8      	b.n	5a7c <__ledf2+0x50>
    5aea:	46c0      	nop			; (mov r8, r8)
    5aec:	000007ff 	.word	0x000007ff

00005af0 <__libc_init_array>:
    5af0:	b570      	push	{r4, r5, r6, lr}
    5af2:	4e0d      	ldr	r6, [pc, #52]	; (5b28 <__libc_init_array+0x38>)
    5af4:	4d0d      	ldr	r5, [pc, #52]	; (5b2c <__libc_init_array+0x3c>)
    5af6:	2400      	movs	r4, #0
    5af8:	1bad      	subs	r5, r5, r6
    5afa:	10ad      	asrs	r5, r5, #2
    5afc:	d005      	beq.n	5b0a <__libc_init_array+0x1a>
    5afe:	00a3      	lsls	r3, r4, #2
    5b00:	58f3      	ldr	r3, [r6, r3]
    5b02:	3401      	adds	r4, #1
    5b04:	4798      	blx	r3
    5b06:	42a5      	cmp	r5, r4
    5b08:	d1f9      	bne.n	5afe <__libc_init_array+0xe>
    5b0a:	f00b f823 	bl	10b54 <_init>
    5b0e:	4e08      	ldr	r6, [pc, #32]	; (5b30 <__libc_init_array+0x40>)
    5b10:	4d08      	ldr	r5, [pc, #32]	; (5b34 <__libc_init_array+0x44>)
    5b12:	2400      	movs	r4, #0
    5b14:	1bad      	subs	r5, r5, r6
    5b16:	10ad      	asrs	r5, r5, #2
    5b18:	d005      	beq.n	5b26 <__libc_init_array+0x36>
    5b1a:	00a3      	lsls	r3, r4, #2
    5b1c:	58f3      	ldr	r3, [r6, r3]
    5b1e:	3401      	adds	r4, #1
    5b20:	4798      	blx	r3
    5b22:	42a5      	cmp	r5, r4
    5b24:	d1f9      	bne.n	5b1a <__libc_init_array+0x2a>
    5b26:	bd70      	pop	{r4, r5, r6, pc}
    5b28:	00010b60 	.word	0x00010b60
    5b2c:	00010b60 	.word	0x00010b60
    5b30:	00010b60 	.word	0x00010b60
    5b34:	00010b68 	.word	0x00010b68

00005b38 <memset>:
    5b38:	b5f0      	push	{r4, r5, r6, r7, lr}
    5b3a:	0783      	lsls	r3, r0, #30
    5b3c:	d043      	beq.n	5bc6 <memset+0x8e>
    5b3e:	1e54      	subs	r4, r2, #1
    5b40:	2a00      	cmp	r2, #0
    5b42:	d03f      	beq.n	5bc4 <memset+0x8c>
    5b44:	b2ce      	uxtb	r6, r1
    5b46:	0002      	movs	r2, r0
    5b48:	2503      	movs	r5, #3
    5b4a:	e002      	b.n	5b52 <memset+0x1a>
    5b4c:	001a      	movs	r2, r3
    5b4e:	3c01      	subs	r4, #1
    5b50:	d338      	bcc.n	5bc4 <memset+0x8c>
    5b52:	1c53      	adds	r3, r2, #1
    5b54:	7016      	strb	r6, [r2, #0]
    5b56:	422b      	tst	r3, r5
    5b58:	d1f8      	bne.n	5b4c <memset+0x14>
    5b5a:	2c03      	cmp	r4, #3
    5b5c:	d92a      	bls.n	5bb4 <memset+0x7c>
    5b5e:	22ff      	movs	r2, #255	; 0xff
    5b60:	400a      	ands	r2, r1
    5b62:	0215      	lsls	r5, r2, #8
    5b64:	4315      	orrs	r5, r2
    5b66:	042a      	lsls	r2, r5, #16
    5b68:	4315      	orrs	r5, r2
    5b6a:	2c0f      	cmp	r4, #15
    5b6c:	d914      	bls.n	5b98 <memset+0x60>
    5b6e:	0027      	movs	r7, r4
    5b70:	001a      	movs	r2, r3
    5b72:	3f10      	subs	r7, #16
    5b74:	093e      	lsrs	r6, r7, #4
    5b76:	3601      	adds	r6, #1
    5b78:	0136      	lsls	r6, r6, #4
    5b7a:	199e      	adds	r6, r3, r6
    5b7c:	6015      	str	r5, [r2, #0]
    5b7e:	6055      	str	r5, [r2, #4]
    5b80:	6095      	str	r5, [r2, #8]
    5b82:	60d5      	str	r5, [r2, #12]
    5b84:	3210      	adds	r2, #16
    5b86:	4296      	cmp	r6, r2
    5b88:	d1f8      	bne.n	5b7c <memset+0x44>
    5b8a:	220f      	movs	r2, #15
    5b8c:	4397      	bics	r7, r2
    5b8e:	3710      	adds	r7, #16
    5b90:	19db      	adds	r3, r3, r7
    5b92:	4014      	ands	r4, r2
    5b94:	2c03      	cmp	r4, #3
    5b96:	d90d      	bls.n	5bb4 <memset+0x7c>
    5b98:	001a      	movs	r2, r3
    5b9a:	1f27      	subs	r7, r4, #4
    5b9c:	08be      	lsrs	r6, r7, #2
    5b9e:	3601      	adds	r6, #1
    5ba0:	00b6      	lsls	r6, r6, #2
    5ba2:	199e      	adds	r6, r3, r6
    5ba4:	c220      	stmia	r2!, {r5}
    5ba6:	42b2      	cmp	r2, r6
    5ba8:	d1fc      	bne.n	5ba4 <memset+0x6c>
    5baa:	2203      	movs	r2, #3
    5bac:	4397      	bics	r7, r2
    5bae:	3704      	adds	r7, #4
    5bb0:	19db      	adds	r3, r3, r7
    5bb2:	4014      	ands	r4, r2
    5bb4:	2c00      	cmp	r4, #0
    5bb6:	d005      	beq.n	5bc4 <memset+0x8c>
    5bb8:	b2c9      	uxtb	r1, r1
    5bba:	191c      	adds	r4, r3, r4
    5bbc:	7019      	strb	r1, [r3, #0]
    5bbe:	3301      	adds	r3, #1
    5bc0:	429c      	cmp	r4, r3
    5bc2:	d1fb      	bne.n	5bbc <memset+0x84>
    5bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5bc6:	0014      	movs	r4, r2
    5bc8:	0003      	movs	r3, r0
    5bca:	e7c6      	b.n	5b5a <memset+0x22>

00005bcc <snprintf>:
    5bcc:	b40c      	push	{r2, r3}
    5bce:	b530      	push	{r4, r5, lr}
    5bd0:	4b1e      	ldr	r3, [pc, #120]	; (5c4c <snprintf+0x80>)
    5bd2:	b09d      	sub	sp, #116	; 0x74
    5bd4:	681d      	ldr	r5, [r3, #0]
    5bd6:	2900      	cmp	r1, #0
    5bd8:	db33      	blt.n	5c42 <snprintf+0x76>
    5bda:	2382      	movs	r3, #130	; 0x82
    5bdc:	ac02      	add	r4, sp, #8
    5bde:	009b      	lsls	r3, r3, #2
    5be0:	81a3      	strh	r3, [r4, #12]
    5be2:	9002      	str	r0, [sp, #8]
    5be4:	6120      	str	r0, [r4, #16]
    5be6:	2900      	cmp	r1, #0
    5be8:	d012      	beq.n	5c10 <snprintf+0x44>
    5bea:	2301      	movs	r3, #1
    5bec:	3901      	subs	r1, #1
    5bee:	425b      	negs	r3, r3
    5bf0:	60a1      	str	r1, [r4, #8]
    5bf2:	6161      	str	r1, [r4, #20]
    5bf4:	81e3      	strh	r3, [r4, #14]
    5bf6:	9a20      	ldr	r2, [sp, #128]	; 0x80
    5bf8:	ab21      	add	r3, sp, #132	; 0x84
    5bfa:	0021      	movs	r1, r4
    5bfc:	0028      	movs	r0, r5
    5bfe:	9301      	str	r3, [sp, #4]
    5c00:	f000 fc44 	bl	648c <_svfprintf_r>
    5c04:	1c43      	adds	r3, r0, #1
    5c06:	db16      	blt.n	5c36 <snprintf+0x6a>
    5c08:	2300      	movs	r3, #0
    5c0a:	9a02      	ldr	r2, [sp, #8]
    5c0c:	7013      	strb	r3, [r2, #0]
    5c0e:	e00d      	b.n	5c2c <snprintf+0x60>
    5c10:	2301      	movs	r3, #1
    5c12:	425b      	negs	r3, r3
    5c14:	60a1      	str	r1, [r4, #8]
    5c16:	6161      	str	r1, [r4, #20]
    5c18:	81e3      	strh	r3, [r4, #14]
    5c1a:	9a20      	ldr	r2, [sp, #128]	; 0x80
    5c1c:	ab21      	add	r3, sp, #132	; 0x84
    5c1e:	0021      	movs	r1, r4
    5c20:	0028      	movs	r0, r5
    5c22:	9301      	str	r3, [sp, #4]
    5c24:	f000 fc32 	bl	648c <_svfprintf_r>
    5c28:	1c43      	adds	r3, r0, #1
    5c2a:	db07      	blt.n	5c3c <snprintf+0x70>
    5c2c:	b01d      	add	sp, #116	; 0x74
    5c2e:	bc30      	pop	{r4, r5}
    5c30:	bc08      	pop	{r3}
    5c32:	b002      	add	sp, #8
    5c34:	4718      	bx	r3
    5c36:	238b      	movs	r3, #139	; 0x8b
    5c38:	602b      	str	r3, [r5, #0]
    5c3a:	e7e5      	b.n	5c08 <snprintf+0x3c>
    5c3c:	238b      	movs	r3, #139	; 0x8b
    5c3e:	602b      	str	r3, [r5, #0]
    5c40:	e7f4      	b.n	5c2c <snprintf+0x60>
    5c42:	238b      	movs	r3, #139	; 0x8b
    5c44:	2001      	movs	r0, #1
    5c46:	602b      	str	r3, [r5, #0]
    5c48:	4240      	negs	r0, r0
    5c4a:	e7ef      	b.n	5c2c <snprintf+0x60>
    5c4c:	20000098 	.word	0x20000098

00005c50 <sscanf>:
    5c50:	b40e      	push	{r1, r2, r3}
    5c52:	2381      	movs	r3, #129	; 0x81
    5c54:	b570      	push	{r4, r5, r6, lr}
    5c56:	b09d      	sub	sp, #116	; 0x74
    5c58:	ac02      	add	r4, sp, #8
    5c5a:	ad21      	add	r5, sp, #132	; 0x84
    5c5c:	009b      	lsls	r3, r3, #2
    5c5e:	cd40      	ldmia	r5!, {r6}
    5c60:	81a3      	strh	r3, [r4, #12]
    5c62:	9002      	str	r0, [sp, #8]
    5c64:	9006      	str	r0, [sp, #24]
    5c66:	f000 f8cf 	bl	5e08 <strlen>
    5c6a:	4b0b      	ldr	r3, [pc, #44]	; (5c98 <sscanf+0x48>)
    5c6c:	6060      	str	r0, [r4, #4]
    5c6e:	6223      	str	r3, [r4, #32]
    5c70:	2300      	movs	r3, #0
    5c72:	6323      	str	r3, [r4, #48]	; 0x30
    5c74:	6463      	str	r3, [r4, #68]	; 0x44
    5c76:	3b01      	subs	r3, #1
    5c78:	81e3      	strh	r3, [r4, #14]
    5c7a:	4b08      	ldr	r3, [pc, #32]	; (5c9c <sscanf+0x4c>)
    5c7c:	6160      	str	r0, [r4, #20]
    5c7e:	0032      	movs	r2, r6
    5c80:	6818      	ldr	r0, [r3, #0]
    5c82:	0021      	movs	r1, r4
    5c84:	002b      	movs	r3, r5
    5c86:	9501      	str	r5, [sp, #4]
    5c88:	f001 ff04 	bl	7a94 <__ssvfscanf_r>
    5c8c:	b01d      	add	sp, #116	; 0x74
    5c8e:	bc70      	pop	{r4, r5, r6}
    5c90:	bc08      	pop	{r3}
    5c92:	b003      	add	sp, #12
    5c94:	4718      	bx	r3
    5c96:	46c0      	nop			; (mov r8, r8)
    5c98:	00005ca1 	.word	0x00005ca1
    5c9c:	20000098 	.word	0x20000098

00005ca0 <__seofread>:
    5ca0:	2000      	movs	r0, #0
    5ca2:	4770      	bx	lr

00005ca4 <strchr>:
    5ca4:	b570      	push	{r4, r5, r6, lr}
    5ca6:	b2cc      	uxtb	r4, r1
    5ca8:	2c00      	cmp	r4, #0
    5caa:	d03b      	beq.n	5d24 <strchr+0x80>
    5cac:	0783      	lsls	r3, r0, #30
    5cae:	d00e      	beq.n	5cce <strchr+0x2a>
    5cb0:	7803      	ldrb	r3, [r0, #0]
    5cb2:	2b00      	cmp	r3, #0
    5cb4:	d05b      	beq.n	5d6e <strchr+0xca>
    5cb6:	429c      	cmp	r4, r3
    5cb8:	d033      	beq.n	5d22 <strchr+0x7e>
    5cba:	2203      	movs	r2, #3
    5cbc:	e004      	b.n	5cc8 <strchr+0x24>
    5cbe:	7803      	ldrb	r3, [r0, #0]
    5cc0:	2b00      	cmp	r3, #0
    5cc2:	d054      	beq.n	5d6e <strchr+0xca>
    5cc4:	429c      	cmp	r4, r3
    5cc6:	d02c      	beq.n	5d22 <strchr+0x7e>
    5cc8:	3001      	adds	r0, #1
    5cca:	4210      	tst	r0, r2
    5ccc:	d1f7      	bne.n	5cbe <strchr+0x1a>
    5cce:	25ff      	movs	r5, #255	; 0xff
    5cd0:	4029      	ands	r1, r5
    5cd2:	020d      	lsls	r5, r1, #8
    5cd4:	4329      	orrs	r1, r5
    5cd6:	040d      	lsls	r5, r1, #16
    5cd8:	430d      	orrs	r5, r1
    5cda:	0029      	movs	r1, r5
    5cdc:	6802      	ldr	r2, [r0, #0]
    5cde:	4b26      	ldr	r3, [pc, #152]	; (5d78 <strchr+0xd4>)
    5ce0:	4051      	eors	r1, r2
    5ce2:	18d3      	adds	r3, r2, r3
    5ce4:	4393      	bics	r3, r2
    5ce6:	4a24      	ldr	r2, [pc, #144]	; (5d78 <strchr+0xd4>)
    5ce8:	4e24      	ldr	r6, [pc, #144]	; (5d7c <strchr+0xd8>)
    5cea:	188a      	adds	r2, r1, r2
    5cec:	438a      	bics	r2, r1
    5cee:	4313      	orrs	r3, r2
    5cf0:	4233      	tst	r3, r6
    5cf2:	d10c      	bne.n	5d0e <strchr+0x6a>
    5cf4:	0029      	movs	r1, r5
    5cf6:	3004      	adds	r0, #4
    5cf8:	6802      	ldr	r2, [r0, #0]
    5cfa:	4b1f      	ldr	r3, [pc, #124]	; (5d78 <strchr+0xd4>)
    5cfc:	4051      	eors	r1, r2
    5cfe:	18d3      	adds	r3, r2, r3
    5d00:	4393      	bics	r3, r2
    5d02:	4a1d      	ldr	r2, [pc, #116]	; (5d78 <strchr+0xd4>)
    5d04:	188a      	adds	r2, r1, r2
    5d06:	438a      	bics	r2, r1
    5d08:	4313      	orrs	r3, r2
    5d0a:	4233      	tst	r3, r6
    5d0c:	d0f2      	beq.n	5cf4 <strchr+0x50>
    5d0e:	7803      	ldrb	r3, [r0, #0]
    5d10:	2b00      	cmp	r3, #0
    5d12:	d104      	bne.n	5d1e <strchr+0x7a>
    5d14:	e02b      	b.n	5d6e <strchr+0xca>
    5d16:	3001      	adds	r0, #1
    5d18:	7803      	ldrb	r3, [r0, #0]
    5d1a:	2b00      	cmp	r3, #0
    5d1c:	d027      	beq.n	5d6e <strchr+0xca>
    5d1e:	429c      	cmp	r4, r3
    5d20:	d1f9      	bne.n	5d16 <strchr+0x72>
    5d22:	bd70      	pop	{r4, r5, r6, pc}
    5d24:	0783      	lsls	r3, r0, #30
    5d26:	d00a      	beq.n	5d3e <strchr+0x9a>
    5d28:	7803      	ldrb	r3, [r0, #0]
    5d2a:	2b00      	cmp	r3, #0
    5d2c:	d0f9      	beq.n	5d22 <strchr+0x7e>
    5d2e:	2203      	movs	r2, #3
    5d30:	e002      	b.n	5d38 <strchr+0x94>
    5d32:	7803      	ldrb	r3, [r0, #0]
    5d34:	2b00      	cmp	r3, #0
    5d36:	d0f4      	beq.n	5d22 <strchr+0x7e>
    5d38:	3001      	adds	r0, #1
    5d3a:	4210      	tst	r0, r2
    5d3c:	d1f9      	bne.n	5d32 <strchr+0x8e>
    5d3e:	6801      	ldr	r1, [r0, #0]
    5d40:	4a0d      	ldr	r2, [pc, #52]	; (5d78 <strchr+0xd4>)
    5d42:	0003      	movs	r3, r0
    5d44:	188a      	adds	r2, r1, r2
    5d46:	480d      	ldr	r0, [pc, #52]	; (5d7c <strchr+0xd8>)
    5d48:	438a      	bics	r2, r1
    5d4a:	4202      	tst	r2, r0
    5d4c:	d106      	bne.n	5d5c <strchr+0xb8>
    5d4e:	3304      	adds	r3, #4
    5d50:	6819      	ldr	r1, [r3, #0]
    5d52:	4a09      	ldr	r2, [pc, #36]	; (5d78 <strchr+0xd4>)
    5d54:	188a      	adds	r2, r1, r2
    5d56:	438a      	bics	r2, r1
    5d58:	4202      	tst	r2, r0
    5d5a:	d0f8      	beq.n	5d4e <strchr+0xaa>
    5d5c:	781a      	ldrb	r2, [r3, #0]
    5d5e:	0018      	movs	r0, r3
    5d60:	2a00      	cmp	r2, #0
    5d62:	d006      	beq.n	5d72 <strchr+0xce>
    5d64:	3001      	adds	r0, #1
    5d66:	7803      	ldrb	r3, [r0, #0]
    5d68:	2b00      	cmp	r3, #0
    5d6a:	d1fb      	bne.n	5d64 <strchr+0xc0>
    5d6c:	e7d9      	b.n	5d22 <strchr+0x7e>
    5d6e:	2000      	movs	r0, #0
    5d70:	e7d7      	b.n	5d22 <strchr+0x7e>
    5d72:	0018      	movs	r0, r3
    5d74:	e7d5      	b.n	5d22 <strchr+0x7e>
    5d76:	46c0      	nop			; (mov r8, r8)
    5d78:	fefefeff 	.word	0xfefefeff
    5d7c:	80808080 	.word	0x80808080

00005d80 <strcmp>:
    5d80:	4602      	mov	r2, r0
    5d82:	b570      	push	{r4, r5, r6, lr}
    5d84:	430a      	orrs	r2, r1
    5d86:	0792      	lsls	r2, r2, #30
    5d88:	d12a      	bne.n	5de0 <strcmp+0x60>
    5d8a:	4d1e      	ldr	r5, [pc, #120]	; (5e04 <strcmp+0x84>)
    5d8c:	01ee      	lsls	r6, r5, #7
    5d8e:	c804      	ldmia	r0!, {r2}
    5d90:	c908      	ldmia	r1!, {r3}
    5d92:	1b54      	subs	r4, r2, r5
    5d94:	4394      	bics	r4, r2
    5d96:	4034      	ands	r4, r6
    5d98:	d017      	beq.n	5dca <strcmp+0x4a>
    5d9a:	b2d0      	uxtb	r0, r2
    5d9c:	b2d9      	uxtb	r1, r3
    5d9e:	1a40      	subs	r0, r0, r1
    5da0:	0621      	lsls	r1, r4, #24
    5da2:	4301      	orrs	r1, r0
    5da4:	d110      	bne.n	5dc8 <strcmp+0x48>
    5da6:	b290      	uxth	r0, r2
    5da8:	b299      	uxth	r1, r3
    5daa:	1a40      	subs	r0, r0, r1
    5dac:	0421      	lsls	r1, r4, #16
    5dae:	4301      	orrs	r1, r0
    5db0:	d10a      	bne.n	5dc8 <strcmp+0x48>
    5db2:	0210      	lsls	r0, r2, #8
    5db4:	0219      	lsls	r1, r3, #8
    5db6:	0a00      	lsrs	r0, r0, #8
    5db8:	0a09      	lsrs	r1, r1, #8
    5dba:	1a40      	subs	r0, r0, r1
    5dbc:	0221      	lsls	r1, r4, #8
    5dbe:	4301      	orrs	r1, r0
    5dc0:	d102      	bne.n	5dc8 <strcmp+0x48>
    5dc2:	0e10      	lsrs	r0, r2, #24
    5dc4:	0e19      	lsrs	r1, r3, #24
    5dc6:	1a40      	subs	r0, r0, r1
    5dc8:	bd70      	pop	{r4, r5, r6, pc}
    5dca:	429a      	cmp	r2, r3
    5dcc:	d0df      	beq.n	5d8e <strcmp+0xe>
    5dce:	ba10      	rev	r0, r2
    5dd0:	ba19      	rev	r1, r3
    5dd2:	4288      	cmp	r0, r1
    5dd4:	d901      	bls.n	5dda <strcmp+0x5a>
    5dd6:	2001      	movs	r0, #1
    5dd8:	bd70      	pop	{r4, r5, r6, pc}
    5dda:	2000      	movs	r0, #0
    5ddc:	43c0      	mvns	r0, r0
    5dde:	bd70      	pop	{r4, r5, r6, pc}
    5de0:	7802      	ldrb	r2, [r0, #0]
    5de2:	780b      	ldrb	r3, [r1, #0]
    5de4:	3001      	adds	r0, #1
    5de6:	3101      	adds	r1, #1
    5de8:	2a00      	cmp	r2, #0
    5dea:	d009      	beq.n	5e00 <strcmp+0x80>
    5dec:	429a      	cmp	r2, r3
    5dee:	d107      	bne.n	5e00 <strcmp+0x80>
    5df0:	7802      	ldrb	r2, [r0, #0]
    5df2:	780b      	ldrb	r3, [r1, #0]
    5df4:	3001      	adds	r0, #1
    5df6:	3101      	adds	r1, #1
    5df8:	2a00      	cmp	r2, #0
    5dfa:	d001      	beq.n	5e00 <strcmp+0x80>
    5dfc:	429a      	cmp	r2, r3
    5dfe:	d0ef      	beq.n	5de0 <strcmp+0x60>
    5e00:	1ad0      	subs	r0, r2, r3
    5e02:	bd70      	pop	{r4, r5, r6, pc}
    5e04:	01010101 	.word	0x01010101

00005e08 <strlen>:
    5e08:	b510      	push	{r4, lr}
    5e0a:	0783      	lsls	r3, r0, #30
    5e0c:	d025      	beq.n	5e5a <strlen+0x52>
    5e0e:	7803      	ldrb	r3, [r0, #0]
    5e10:	2b00      	cmp	r3, #0
    5e12:	d024      	beq.n	5e5e <strlen+0x56>
    5e14:	0003      	movs	r3, r0
    5e16:	2103      	movs	r1, #3
    5e18:	e002      	b.n	5e20 <strlen+0x18>
    5e1a:	781a      	ldrb	r2, [r3, #0]
    5e1c:	2a00      	cmp	r2, #0
    5e1e:	d01a      	beq.n	5e56 <strlen+0x4e>
    5e20:	3301      	adds	r3, #1
    5e22:	420b      	tst	r3, r1
    5e24:	d1f9      	bne.n	5e1a <strlen+0x12>
    5e26:	6819      	ldr	r1, [r3, #0]
    5e28:	4a0e      	ldr	r2, [pc, #56]	; (5e64 <strlen+0x5c>)
    5e2a:	4c0f      	ldr	r4, [pc, #60]	; (5e68 <strlen+0x60>)
    5e2c:	188a      	adds	r2, r1, r2
    5e2e:	438a      	bics	r2, r1
    5e30:	4222      	tst	r2, r4
    5e32:	d106      	bne.n	5e42 <strlen+0x3a>
    5e34:	3304      	adds	r3, #4
    5e36:	6819      	ldr	r1, [r3, #0]
    5e38:	4a0a      	ldr	r2, [pc, #40]	; (5e64 <strlen+0x5c>)
    5e3a:	188a      	adds	r2, r1, r2
    5e3c:	438a      	bics	r2, r1
    5e3e:	4222      	tst	r2, r4
    5e40:	d0f8      	beq.n	5e34 <strlen+0x2c>
    5e42:	001a      	movs	r2, r3
    5e44:	781b      	ldrb	r3, [r3, #0]
    5e46:	2b00      	cmp	r3, #0
    5e48:	d003      	beq.n	5e52 <strlen+0x4a>
    5e4a:	3201      	adds	r2, #1
    5e4c:	7811      	ldrb	r1, [r2, #0]
    5e4e:	2900      	cmp	r1, #0
    5e50:	d1fb      	bne.n	5e4a <strlen+0x42>
    5e52:	1a10      	subs	r0, r2, r0
    5e54:	bd10      	pop	{r4, pc}
    5e56:	1a18      	subs	r0, r3, r0
    5e58:	e7fc      	b.n	5e54 <strlen+0x4c>
    5e5a:	0003      	movs	r3, r0
    5e5c:	e7e3      	b.n	5e26 <strlen+0x1e>
    5e5e:	2000      	movs	r0, #0
    5e60:	e7f8      	b.n	5e54 <strlen+0x4c>
    5e62:	46c0      	nop			; (mov r8, r8)
    5e64:	fefefeff 	.word	0xfefefeff
    5e68:	80808080 	.word	0x80808080

00005e6c <critical_factorization>:
    5e6c:	2301      	movs	r3, #1
    5e6e:	b5f0      	push	{r4, r5, r6, r7, lr}
    5e70:	4647      	mov	r7, r8
    5e72:	46ce      	mov	lr, r9
    5e74:	4694      	mov	ip, r2
    5e76:	2201      	movs	r2, #1
    5e78:	4698      	mov	r8, r3
    5e7a:	2401      	movs	r4, #1
    5e7c:	2500      	movs	r5, #0
    5e7e:	b580      	push	{r7, lr}
    5e80:	4252      	negs	r2, r2
    5e82:	192b      	adds	r3, r5, r4
    5e84:	428b      	cmp	r3, r1
    5e86:	d20b      	bcs.n	5ea0 <critical_factorization+0x34>
    5e88:	1886      	adds	r6, r0, r2
    5e8a:	5cc7      	ldrb	r7, [r0, r3]
    5e8c:	5d36      	ldrb	r6, [r6, r4]
    5e8e:	42b7      	cmp	r7, r6
    5e90:	d22d      	bcs.n	5eee <critical_factorization+0x82>
    5e92:	1a9c      	subs	r4, r3, r2
    5e94:	46a0      	mov	r8, r4
    5e96:	001d      	movs	r5, r3
    5e98:	2401      	movs	r4, #1
    5e9a:	192b      	adds	r3, r5, r4
    5e9c:	428b      	cmp	r3, r1
    5e9e:	d3f3      	bcc.n	5e88 <critical_factorization+0x1c>
    5ea0:	4644      	mov	r4, r8
    5ea2:	4663      	mov	r3, ip
    5ea4:	601c      	str	r4, [r3, #0]
    5ea6:	2301      	movs	r3, #1
    5ea8:	4699      	mov	r9, r3
    5eaa:	3b02      	subs	r3, #2
    5eac:	2401      	movs	r4, #1
    5eae:	2500      	movs	r5, #0
    5eb0:	4698      	mov	r8, r3
    5eb2:	192b      	adds	r3, r5, r4
    5eb4:	4299      	cmp	r1, r3
    5eb6:	d90d      	bls.n	5ed4 <critical_factorization+0x68>
    5eb8:	4646      	mov	r6, r8
    5eba:	1986      	adds	r6, r0, r6
    5ebc:	5cc7      	ldrb	r7, [r0, r3]
    5ebe:	5d36      	ldrb	r6, [r6, r4]
    5ec0:	42b7      	cmp	r7, r6
    5ec2:	d91c      	bls.n	5efe <critical_factorization+0x92>
    5ec4:	4644      	mov	r4, r8
    5ec6:	1b1c      	subs	r4, r3, r4
    5ec8:	46a1      	mov	r9, r4
    5eca:	001d      	movs	r5, r3
    5ecc:	2401      	movs	r4, #1
    5ece:	192b      	adds	r3, r5, r4
    5ed0:	4299      	cmp	r1, r3
    5ed2:	d8f1      	bhi.n	5eb8 <critical_factorization+0x4c>
    5ed4:	4643      	mov	r3, r8
    5ed6:	1c50      	adds	r0, r2, #1
    5ed8:	3301      	adds	r3, #1
    5eda:	4283      	cmp	r3, r0
    5edc:	d303      	bcc.n	5ee6 <critical_factorization+0x7a>
    5ede:	4662      	mov	r2, ip
    5ee0:	4649      	mov	r1, r9
    5ee2:	0018      	movs	r0, r3
    5ee4:	6011      	str	r1, [r2, #0]
    5ee6:	bc0c      	pop	{r2, r3}
    5ee8:	4690      	mov	r8, r2
    5eea:	4699      	mov	r9, r3
    5eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5eee:	42b7      	cmp	r7, r6
    5ef0:	d00d      	beq.n	5f0e <critical_factorization+0xa2>
    5ef2:	2301      	movs	r3, #1
    5ef4:	002a      	movs	r2, r5
    5ef6:	4698      	mov	r8, r3
    5ef8:	3501      	adds	r5, #1
    5efa:	2401      	movs	r4, #1
    5efc:	e7c1      	b.n	5e82 <critical_factorization+0x16>
    5efe:	42b7      	cmp	r7, r6
    5f00:	d009      	beq.n	5f16 <critical_factorization+0xaa>
    5f02:	2301      	movs	r3, #1
    5f04:	46a8      	mov	r8, r5
    5f06:	4699      	mov	r9, r3
    5f08:	3501      	adds	r5, #1
    5f0a:	2401      	movs	r4, #1
    5f0c:	e7d1      	b.n	5eb2 <critical_factorization+0x46>
    5f0e:	4544      	cmp	r4, r8
    5f10:	d005      	beq.n	5f1e <critical_factorization+0xb2>
    5f12:	3401      	adds	r4, #1
    5f14:	e7b5      	b.n	5e82 <critical_factorization+0x16>
    5f16:	454c      	cmp	r4, r9
    5f18:	d004      	beq.n	5f24 <critical_factorization+0xb8>
    5f1a:	3401      	adds	r4, #1
    5f1c:	e7c9      	b.n	5eb2 <critical_factorization+0x46>
    5f1e:	001d      	movs	r5, r3
    5f20:	2401      	movs	r4, #1
    5f22:	e7ae      	b.n	5e82 <critical_factorization+0x16>
    5f24:	001d      	movs	r5, r3
    5f26:	2401      	movs	r4, #1
    5f28:	e7c3      	b.n	5eb2 <critical_factorization+0x46>
    5f2a:	46c0      	nop			; (mov r8, r8)

00005f2c <two_way_long_needle>:
    5f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5f2e:	46de      	mov	lr, fp
    5f30:	4657      	mov	r7, sl
    5f32:	464e      	mov	r6, r9
    5f34:	4645      	mov	r5, r8
    5f36:	b5e0      	push	{r5, r6, r7, lr}
    5f38:	0015      	movs	r5, r2
    5f3a:	4c7b      	ldr	r4, [pc, #492]	; (6128 <two_way_long_needle+0x1fc>)
    5f3c:	0006      	movs	r6, r0
    5f3e:	44a5      	add	sp, r4
    5f40:	aa03      	add	r2, sp, #12
    5f42:	000f      	movs	r7, r1
    5f44:	0028      	movs	r0, r5
    5f46:	0019      	movs	r1, r3
    5f48:	001c      	movs	r4, r3
    5f4a:	f7ff ff8f 	bl	5e6c <critical_factorization>
    5f4e:	4683      	mov	fp, r0
    5f50:	aaff      	add	r2, sp, #1020	; 0x3fc
    5f52:	ab04      	add	r3, sp, #16
    5f54:	3214      	adds	r2, #20
    5f56:	c310      	stmia	r3!, {r4}
    5f58:	4293      	cmp	r3, r2
    5f5a:	d1fc      	bne.n	5f56 <two_way_long_needle+0x2a>
    5f5c:	1e63      	subs	r3, r4, #1
    5f5e:	0029      	movs	r1, r5
    5f60:	46a4      	mov	ip, r4
    5f62:	2c00      	cmp	r4, #0
    5f64:	d009      	beq.n	5f7a <two_way_long_needle+0x4e>
    5f66:	2408      	movs	r4, #8
    5f68:	780a      	ldrb	r2, [r1, #0]
    5f6a:	a802      	add	r0, sp, #8
    5f6c:	0092      	lsls	r2, r2, #2
    5f6e:	1900      	adds	r0, r0, r4
    5f70:	5083      	str	r3, [r0, r2]
    5f72:	3101      	adds	r1, #1
    5f74:	3b01      	subs	r3, #1
    5f76:	d2f6      	bcs.n	5f66 <two_way_long_needle+0x3a>
    5f78:	4664      	mov	r4, ip
    5f7a:	9b03      	ldr	r3, [sp, #12]
    5f7c:	465a      	mov	r2, fp
    5f7e:	18e9      	adds	r1, r5, r3
    5f80:	0028      	movs	r0, r5
    5f82:	f004 f9b7 	bl	a2f4 <memcmp>
    5f86:	2800      	cmp	r0, #0
    5f88:	d000      	beq.n	5f8c <two_way_long_needle+0x60>
    5f8a:	e074      	b.n	6076 <two_way_long_needle+0x14a>
    5f8c:	2300      	movs	r3, #0
    5f8e:	001a      	movs	r2, r3
    5f90:	469a      	mov	sl, r3
    5f92:	1e63      	subs	r3, r4, #1
    5f94:	4698      	mov	r8, r3
    5f96:	4659      	mov	r1, fp
    5f98:	2301      	movs	r3, #1
    5f9a:	0038      	movs	r0, r7
    5f9c:	46a1      	mov	r9, r4
    5f9e:	0017      	movs	r7, r2
    5fa0:	4644      	mov	r4, r8
    5fa2:	46b0      	mov	r8, r6
    5fa4:	1a5b      	subs	r3, r3, r1
    5fa6:	9301      	str	r3, [sp, #4]
    5fa8:	9100      	str	r1, [sp, #0]
    5faa:	4656      	mov	r6, sl
    5fac:	444e      	add	r6, r9
    5fae:	1a32      	subs	r2, r6, r0
    5fb0:	2100      	movs	r1, #0
    5fb2:	4440      	add	r0, r8
    5fb4:	f004 f95e 	bl	a274 <memchr>
    5fb8:	2800      	cmp	r0, #0
    5fba:	d153      	bne.n	6064 <two_way_long_needle+0x138>
    5fbc:	2e00      	cmp	r6, #0
    5fbe:	d051      	beq.n	6064 <two_way_long_needle+0x138>
    5fc0:	4643      	mov	r3, r8
    5fc2:	2108      	movs	r1, #8
    5fc4:	199b      	adds	r3, r3, r6
    5fc6:	3b01      	subs	r3, #1
    5fc8:	781b      	ldrb	r3, [r3, #0]
    5fca:	aa02      	add	r2, sp, #8
    5fcc:	009b      	lsls	r3, r3, #2
    5fce:	1852      	adds	r2, r2, r1
    5fd0:	58d3      	ldr	r3, [r2, r3]
    5fd2:	2b00      	cmp	r3, #0
    5fd4:	d00a      	beq.n	5fec <two_way_long_needle+0xc0>
    5fd6:	2f00      	cmp	r7, #0
    5fd8:	d004      	beq.n	5fe4 <two_way_long_needle+0xb8>
    5fda:	9a03      	ldr	r2, [sp, #12]
    5fdc:	4293      	cmp	r3, r2
    5fde:	d201      	bcs.n	5fe4 <two_way_long_needle+0xb8>
    5fe0:	464b      	mov	r3, r9
    5fe2:	1a9b      	subs	r3, r3, r2
    5fe4:	449a      	add	sl, r3
    5fe6:	2700      	movs	r7, #0
    5fe8:	0030      	movs	r0, r6
    5fea:	e7de      	b.n	5faa <two_way_long_needle+0x7e>
    5fec:	9900      	ldr	r1, [sp, #0]
    5fee:	003b      	movs	r3, r7
    5ff0:	428f      	cmp	r7, r1
    5ff2:	d200      	bcs.n	5ff6 <two_way_long_needle+0xca>
    5ff4:	000b      	movs	r3, r1
    5ff6:	42a3      	cmp	r3, r4
    5ff8:	d20d      	bcs.n	6016 <two_way_long_needle+0xea>
    5ffa:	4642      	mov	r2, r8
    5ffc:	4452      	add	r2, sl
    5ffe:	e002      	b.n	6006 <two_way_long_needle+0xda>
    6000:	3301      	adds	r3, #1
    6002:	42a3      	cmp	r3, r4
    6004:	d207      	bcs.n	6016 <two_way_long_needle+0xea>
    6006:	5ce8      	ldrb	r0, [r5, r3]
    6008:	5cd1      	ldrb	r1, [r2, r3]
    600a:	4288      	cmp	r0, r1
    600c:	d0f8      	beq.n	6000 <two_way_long_needle+0xd4>
    600e:	9a01      	ldr	r2, [sp, #4]
    6010:	4452      	add	r2, sl
    6012:	4692      	mov	sl, r2
    6014:	e7e6      	b.n	5fe4 <two_way_long_needle+0xb8>
    6016:	9b00      	ldr	r3, [sp, #0]
    6018:	1e59      	subs	r1, r3, #1
    601a:	429f      	cmp	r7, r3
    601c:	d300      	bcc.n	6020 <two_way_long_needle+0xf4>
    601e:	e07d      	b.n	611c <two_way_long_needle+0x1f0>
    6020:	4642      	mov	r2, r8
    6022:	4452      	add	r2, sl
    6024:	5c50      	ldrb	r0, [r2, r1]
    6026:	5c6b      	ldrb	r3, [r5, r1]
    6028:	4298      	cmp	r0, r3
    602a:	d000      	beq.n	602e <two_way_long_needle+0x102>
    602c:	e074      	b.n	6118 <two_way_long_needle+0x1ec>
    602e:	1e7b      	subs	r3, r7, #1
    6030:	469b      	mov	fp, r3
    6032:	0023      	movs	r3, r4
    6034:	46b4      	mov	ip, r6
    6036:	465c      	mov	r4, fp
    6038:	0016      	movs	r6, r2
    603a:	469b      	mov	fp, r3
    603c:	e004      	b.n	6048 <two_way_long_needle+0x11c>
    603e:	5cea      	ldrb	r2, [r5, r3]
    6040:	5cf0      	ldrb	r0, [r6, r3]
    6042:	4282      	cmp	r2, r0
    6044:	d103      	bne.n	604e <two_way_long_needle+0x122>
    6046:	0019      	movs	r1, r3
    6048:	1e4b      	subs	r3, r1, #1
    604a:	42a3      	cmp	r3, r4
    604c:	d1f7      	bne.n	603e <two_way_long_needle+0x112>
    604e:	4666      	mov	r6, ip
    6050:	465c      	mov	r4, fp
    6052:	3701      	adds	r7, #1
    6054:	428f      	cmp	r7, r1
    6056:	d863      	bhi.n	6120 <two_way_long_needle+0x1f4>
    6058:	464b      	mov	r3, r9
    605a:	9f03      	ldr	r7, [sp, #12]
    605c:	0030      	movs	r0, r6
    605e:	44ba      	add	sl, r7
    6060:	1bdf      	subs	r7, r3, r7
    6062:	e7a2      	b.n	5faa <two_way_long_needle+0x7e>
    6064:	2000      	movs	r0, #0
    6066:	4b31      	ldr	r3, [pc, #196]	; (612c <two_way_long_needle+0x200>)
    6068:	449d      	add	sp, r3
    606a:	bc3c      	pop	{r2, r3, r4, r5}
    606c:	4690      	mov	r8, r2
    606e:	4699      	mov	r9, r3
    6070:	46a2      	mov	sl, r4
    6072:	46ab      	mov	fp, r5
    6074:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6076:	465b      	mov	r3, fp
    6078:	1ae3      	subs	r3, r4, r3
    607a:	455b      	cmp	r3, fp
    607c:	d34a      	bcc.n	6114 <two_way_long_needle+0x1e8>
    607e:	3301      	adds	r3, #1
    6080:	9303      	str	r3, [sp, #12]
    6082:	2300      	movs	r3, #0
    6084:	469a      	mov	sl, r3
    6086:	1e63      	subs	r3, r4, #1
    6088:	4698      	mov	r8, r3
    608a:	465a      	mov	r2, fp
    608c:	2301      	movs	r3, #1
    608e:	0038      	movs	r0, r7
    6090:	46a1      	mov	r9, r4
    6092:	4657      	mov	r7, sl
    6094:	4644      	mov	r4, r8
    6096:	46b0      	mov	r8, r6
    6098:	1a9b      	subs	r3, r3, r2
    609a:	9300      	str	r3, [sp, #0]
    609c:	464b      	mov	r3, r9
    609e:	18fe      	adds	r6, r7, r3
    60a0:	1a32      	subs	r2, r6, r0
    60a2:	2100      	movs	r1, #0
    60a4:	4440      	add	r0, r8
    60a6:	f004 f8e5 	bl	a274 <memchr>
    60aa:	2800      	cmp	r0, #0
    60ac:	d1da      	bne.n	6064 <two_way_long_needle+0x138>
    60ae:	2e00      	cmp	r6, #0
    60b0:	d0d8      	beq.n	6064 <two_way_long_needle+0x138>
    60b2:	4643      	mov	r3, r8
    60b4:	2108      	movs	r1, #8
    60b6:	199b      	adds	r3, r3, r6
    60b8:	3b01      	subs	r3, #1
    60ba:	781b      	ldrb	r3, [r3, #0]
    60bc:	aa02      	add	r2, sp, #8
    60be:	009b      	lsls	r3, r3, #2
    60c0:	1852      	adds	r2, r2, r1
    60c2:	58d3      	ldr	r3, [r2, r3]
    60c4:	2b00      	cmp	r3, #0
    60c6:	d122      	bne.n	610e <two_way_long_needle+0x1e2>
    60c8:	4643      	mov	r3, r8
    60ca:	19d8      	adds	r0, r3, r7
    60cc:	45a3      	cmp	fp, r4
    60ce:	d20c      	bcs.n	60ea <two_way_long_needle+0x1be>
    60d0:	465b      	mov	r3, fp
    60d2:	5cc1      	ldrb	r1, [r0, r3]
    60d4:	5cea      	ldrb	r2, [r5, r3]
    60d6:	4291      	cmp	r1, r2
    60d8:	d004      	beq.n	60e4 <two_way_long_needle+0x1b8>
    60da:	e015      	b.n	6108 <two_way_long_needle+0x1dc>
    60dc:	5ce9      	ldrb	r1, [r5, r3]
    60de:	5cc2      	ldrb	r2, [r0, r3]
    60e0:	4291      	cmp	r1, r2
    60e2:	d111      	bne.n	6108 <two_way_long_needle+0x1dc>
    60e4:	3301      	adds	r3, #1
    60e6:	42a3      	cmp	r3, r4
    60e8:	d3f8      	bcc.n	60dc <two_way_long_needle+0x1b0>
    60ea:	465b      	mov	r3, fp
    60ec:	3b01      	subs	r3, #1
    60ee:	d202      	bcs.n	60f6 <two_way_long_needle+0x1ca>
    60f0:	e7b9      	b.n	6066 <two_way_long_needle+0x13a>
    60f2:	3b01      	subs	r3, #1
    60f4:	d3b7      	bcc.n	6066 <two_way_long_needle+0x13a>
    60f6:	5ce9      	ldrb	r1, [r5, r3]
    60f8:	5cc2      	ldrb	r2, [r0, r3]
    60fa:	4291      	cmp	r1, r2
    60fc:	d0f9      	beq.n	60f2 <two_way_long_needle+0x1c6>
    60fe:	9b03      	ldr	r3, [sp, #12]
    6100:	0030      	movs	r0, r6
    6102:	469c      	mov	ip, r3
    6104:	4467      	add	r7, ip
    6106:	e7c9      	b.n	609c <two_way_long_needle+0x170>
    6108:	9a00      	ldr	r2, [sp, #0]
    610a:	4694      	mov	ip, r2
    610c:	4467      	add	r7, ip
    610e:	18ff      	adds	r7, r7, r3
    6110:	0030      	movs	r0, r6
    6112:	e7c3      	b.n	609c <two_way_long_needle+0x170>
    6114:	465b      	mov	r3, fp
    6116:	e7b2      	b.n	607e <two_way_long_needle+0x152>
    6118:	9900      	ldr	r1, [sp, #0]
    611a:	e79a      	b.n	6052 <two_way_long_needle+0x126>
    611c:	0019      	movs	r1, r3
    611e:	e798      	b.n	6052 <two_way_long_needle+0x126>
    6120:	4640      	mov	r0, r8
    6122:	4450      	add	r0, sl
    6124:	e79f      	b.n	6066 <two_way_long_needle+0x13a>
    6126:	46c0      	nop			; (mov r8, r8)
    6128:	fffffbec 	.word	0xfffffbec
    612c:	00000414 	.word	0x00000414

00006130 <strstr>:
    6130:	b5f0      	push	{r4, r5, r6, r7, lr}
    6132:	4657      	mov	r7, sl
    6134:	4645      	mov	r5, r8
    6136:	46de      	mov	lr, fp
    6138:	464e      	mov	r6, r9
    613a:	b5e0      	push	{r5, r6, r7, lr}
    613c:	7803      	ldrb	r3, [r0, #0]
    613e:	b085      	sub	sp, #20
    6140:	0007      	movs	r7, r0
    6142:	000d      	movs	r5, r1
    6144:	2b00      	cmp	r3, #0
    6146:	d035      	beq.n	61b4 <strstr+0x84>
    6148:	7809      	ldrb	r1, [r1, #0]
    614a:	1e0a      	subs	r2, r1, #0
    614c:	d100      	bne.n	6150 <strstr+0x20>
    614e:	e09f      	b.n	6290 <strstr+0x160>
    6150:	002c      	movs	r4, r5
    6152:	2601      	movs	r6, #1
    6154:	e002      	b.n	615c <strstr+0x2c>
    6156:	7822      	ldrb	r2, [r4, #0]
    6158:	2a00      	cmp	r2, #0
    615a:	d00b      	beq.n	6174 <strstr+0x44>
    615c:	1a9b      	subs	r3, r3, r2
    615e:	425a      	negs	r2, r3
    6160:	4153      	adcs	r3, r2
    6162:	3001      	adds	r0, #1
    6164:	401e      	ands	r6, r3
    6166:	7803      	ldrb	r3, [r0, #0]
    6168:	3401      	adds	r4, #1
    616a:	2b00      	cmp	r3, #0
    616c:	d1f3      	bne.n	6156 <strstr+0x26>
    616e:	7823      	ldrb	r3, [r4, #0]
    6170:	2b00      	cmp	r3, #0
    6172:	d122      	bne.n	61ba <strstr+0x8a>
    6174:	0038      	movs	r0, r7
    6176:	2e00      	cmp	r6, #0
    6178:	d006      	beq.n	6188 <strstr+0x58>
    617a:	b005      	add	sp, #20
    617c:	bc3c      	pop	{r2, r3, r4, r5}
    617e:	4690      	mov	r8, r2
    6180:	4699      	mov	r9, r3
    6182:	46a2      	mov	sl, r4
    6184:	46ab      	mov	fp, r5
    6186:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6188:	1c78      	adds	r0, r7, #1
    618a:	f7ff fd8b 	bl	5ca4 <strchr>
    618e:	1b64      	subs	r4, r4, r5
    6190:	1e06      	subs	r6, r0, #0
    6192:	d012      	beq.n	61ba <strstr+0x8a>
    6194:	2c01      	cmp	r4, #1
    6196:	d0f0      	beq.n	617a <strstr+0x4a>
    6198:	193f      	adds	r7, r7, r4
    619a:	2101      	movs	r1, #1
    619c:	42b8      	cmp	r0, r7
    619e:	d800      	bhi.n	61a2 <strstr+0x72>
    61a0:	1a39      	subs	r1, r7, r0
    61a2:	000f      	movs	r7, r1
    61a4:	2c1f      	cmp	r4, #31
    61a6:	d90a      	bls.n	61be <strstr+0x8e>
    61a8:	0023      	movs	r3, r4
    61aa:	002a      	movs	r2, r5
    61ac:	0030      	movs	r0, r6
    61ae:	f7ff febd 	bl	5f2c <two_way_long_needle>
    61b2:	e7e2      	b.n	617a <strstr+0x4a>
    61b4:	780b      	ldrb	r3, [r1, #0]
    61b6:	2b00      	cmp	r3, #0
    61b8:	d06a      	beq.n	6290 <strstr+0x160>
    61ba:	2000      	movs	r0, #0
    61bc:	e7dd      	b.n	617a <strstr+0x4a>
    61be:	aa03      	add	r2, sp, #12
    61c0:	0021      	movs	r1, r4
    61c2:	0028      	movs	r0, r5
    61c4:	f7ff fe52 	bl	5e6c <critical_factorization>
    61c8:	9b03      	ldr	r3, [sp, #12]
    61ca:	4680      	mov	r8, r0
    61cc:	0002      	movs	r2, r0
    61ce:	18e9      	adds	r1, r5, r3
    61d0:	0028      	movs	r0, r5
    61d2:	f004 f88f 	bl	a2f4 <memcmp>
    61d6:	2800      	cmp	r0, #0
    61d8:	d15c      	bne.n	6294 <strstr+0x164>
    61da:	2300      	movs	r3, #0
    61dc:	4699      	mov	r9, r3
    61de:	4643      	mov	r3, r8
    61e0:	3b01      	subs	r3, #1
    61e2:	9300      	str	r3, [sp, #0]
    61e4:	4642      	mov	r2, r8
    61e6:	2301      	movs	r3, #1
    61e8:	46b2      	mov	sl, r6
    61ea:	0038      	movs	r0, r7
    61ec:	464e      	mov	r6, r9
    61ee:	464f      	mov	r7, r9
    61f0:	1a9b      	subs	r3, r3, r2
    61f2:	9301      	str	r3, [sp, #4]
    61f4:	19e3      	adds	r3, r4, r7
    61f6:	1a1a      	subs	r2, r3, r0
    61f8:	2100      	movs	r1, #0
    61fa:	4450      	add	r0, sl
    61fc:	4699      	mov	r9, r3
    61fe:	f004 f839 	bl	a274 <memchr>
    6202:	2800      	cmp	r0, #0
    6204:	d1d9      	bne.n	61ba <strstr+0x8a>
    6206:	464b      	mov	r3, r9
    6208:	2b00      	cmp	r3, #0
    620a:	d0d6      	beq.n	61ba <strstr+0x8a>
    620c:	4643      	mov	r3, r8
    620e:	45b0      	cmp	r8, r6
    6210:	d200      	bcs.n	6214 <strstr+0xe4>
    6212:	0033      	movs	r3, r6
    6214:	429c      	cmp	r4, r3
    6216:	d90f      	bls.n	6238 <strstr+0x108>
    6218:	4652      	mov	r2, sl
    621a:	18d2      	adds	r2, r2, r3
    621c:	5ce9      	ldrb	r1, [r5, r3]
    621e:	5dd2      	ldrb	r2, [r2, r7]
    6220:	4291      	cmp	r1, r2
    6222:	d12e      	bne.n	6282 <strstr+0x152>
    6224:	4652      	mov	r2, sl
    6226:	19d0      	adds	r0, r2, r7
    6228:	e003      	b.n	6232 <strstr+0x102>
    622a:	5ce9      	ldrb	r1, [r5, r3]
    622c:	5cc2      	ldrb	r2, [r0, r3]
    622e:	4291      	cmp	r1, r2
    6230:	d127      	bne.n	6282 <strstr+0x152>
    6232:	3301      	adds	r3, #1
    6234:	429c      	cmp	r4, r3
    6236:	d1f8      	bne.n	622a <strstr+0xfa>
    6238:	9a00      	ldr	r2, [sp, #0]
    623a:	45b0      	cmp	r8, r6
    623c:	d976      	bls.n	632c <strstr+0x1fc>
    623e:	46bc      	mov	ip, r7
    6240:	44d4      	add	ip, sl
    6242:	4661      	mov	r1, ip
    6244:	9b00      	ldr	r3, [sp, #0]
    6246:	5cc9      	ldrb	r1, [r1, r3]
    6248:	5ceb      	ldrb	r3, [r5, r3]
    624a:	4299      	cmp	r1, r3
    624c:	d16e      	bne.n	632c <strstr+0x1fc>
    624e:	1e73      	subs	r3, r6, #1
    6250:	469b      	mov	fp, r3
    6252:	4663      	mov	r3, ip
    6254:	46a4      	mov	ip, r4
    6256:	465c      	mov	r4, fp
    6258:	46b3      	mov	fp, r6
    625a:	001e      	movs	r6, r3
    625c:	e004      	b.n	6268 <strstr+0x138>
    625e:	5ce8      	ldrb	r0, [r5, r3]
    6260:	5cf1      	ldrb	r1, [r6, r3]
    6262:	4288      	cmp	r0, r1
    6264:	d103      	bne.n	626e <strstr+0x13e>
    6266:	001a      	movs	r2, r3
    6268:	1e53      	subs	r3, r2, #1
    626a:	42a3      	cmp	r3, r4
    626c:	d1f7      	bne.n	625e <strstr+0x12e>
    626e:	4664      	mov	r4, ip
    6270:	465e      	mov	r6, fp
    6272:	3601      	adds	r6, #1
    6274:	4296      	cmp	r6, r2
    6276:	d85b      	bhi.n	6330 <strstr+0x200>
    6278:	9e03      	ldr	r6, [sp, #12]
    627a:	4648      	mov	r0, r9
    627c:	19bf      	adds	r7, r7, r6
    627e:	1ba6      	subs	r6, r4, r6
    6280:	e7b8      	b.n	61f4 <strstr+0xc4>
    6282:	9a01      	ldr	r2, [sp, #4]
    6284:	2600      	movs	r6, #0
    6286:	4694      	mov	ip, r2
    6288:	4467      	add	r7, ip
    628a:	18ff      	adds	r7, r7, r3
    628c:	4648      	mov	r0, r9
    628e:	e7b1      	b.n	61f4 <strstr+0xc4>
    6290:	0038      	movs	r0, r7
    6292:	e772      	b.n	617a <strstr+0x4a>
    6294:	4643      	mov	r3, r8
    6296:	1ae3      	subs	r3, r4, r3
    6298:	4543      	cmp	r3, r8
    629a:	d200      	bcs.n	629e <strstr+0x16e>
    629c:	4643      	mov	r3, r8
    629e:	3301      	adds	r3, #1
    62a0:	9303      	str	r3, [sp, #12]
    62a2:	2300      	movs	r3, #0
    62a4:	4642      	mov	r2, r8
    62a6:	4699      	mov	r9, r3
    62a8:	3301      	adds	r3, #1
    62aa:	1a9b      	subs	r3, r3, r2
    62ac:	464a      	mov	r2, r9
    62ae:	46b3      	mov	fp, r6
    62b0:	46b1      	mov	r9, r6
    62b2:	0038      	movs	r0, r7
    62b4:	469a      	mov	sl, r3
    62b6:	0016      	movs	r6, r2
    62b8:	44c3      	add	fp, r8
    62ba:	19a7      	adds	r7, r4, r6
    62bc:	1a3a      	subs	r2, r7, r0
    62be:	2100      	movs	r1, #0
    62c0:	4448      	add	r0, r9
    62c2:	f003 ffd7 	bl	a274 <memchr>
    62c6:	2800      	cmp	r0, #0
    62c8:	d000      	beq.n	62cc <strstr+0x19c>
    62ca:	e776      	b.n	61ba <strstr+0x8a>
    62cc:	2f00      	cmp	r7, #0
    62ce:	d100      	bne.n	62d2 <strstr+0x1a2>
    62d0:	e773      	b.n	61ba <strstr+0x8a>
    62d2:	464b      	mov	r3, r9
    62d4:	1998      	adds	r0, r3, r6
    62d6:	4544      	cmp	r4, r8
    62d8:	d90f      	bls.n	62fa <strstr+0x1ca>
    62da:	465b      	mov	r3, fp
    62dc:	5d99      	ldrb	r1, [r3, r6]
    62de:	4643      	mov	r3, r8
    62e0:	4648      	mov	r0, r9
    62e2:	5cea      	ldrb	r2, [r5, r3]
    62e4:	1980      	adds	r0, r0, r6
    62e6:	4291      	cmp	r1, r2
    62e8:	d004      	beq.n	62f4 <strstr+0x1c4>
    62ea:	e016      	b.n	631a <strstr+0x1ea>
    62ec:	5ce9      	ldrb	r1, [r5, r3]
    62ee:	5cc2      	ldrb	r2, [r0, r3]
    62f0:	4291      	cmp	r1, r2
    62f2:	d112      	bne.n	631a <strstr+0x1ea>
    62f4:	3301      	adds	r3, #1
    62f6:	429c      	cmp	r4, r3
    62f8:	d1f8      	bne.n	62ec <strstr+0x1bc>
    62fa:	4643      	mov	r3, r8
    62fc:	3b01      	subs	r3, #1
    62fe:	d200      	bcs.n	6302 <strstr+0x1d2>
    6300:	e73b      	b.n	617a <strstr+0x4a>
    6302:	5cc1      	ldrb	r1, [r0, r3]
    6304:	5cea      	ldrb	r2, [r5, r3]
    6306:	4291      	cmp	r1, r2
    6308:	d004      	beq.n	6314 <strstr+0x1e4>
    630a:	e00a      	b.n	6322 <strstr+0x1f2>
    630c:	5ce9      	ldrb	r1, [r5, r3]
    630e:	5cc2      	ldrb	r2, [r0, r3]
    6310:	4291      	cmp	r1, r2
    6312:	d106      	bne.n	6322 <strstr+0x1f2>
    6314:	3b01      	subs	r3, #1
    6316:	d2f9      	bcs.n	630c <strstr+0x1dc>
    6318:	e72f      	b.n	617a <strstr+0x4a>
    631a:	4456      	add	r6, sl
    631c:	18f6      	adds	r6, r6, r3
    631e:	0038      	movs	r0, r7
    6320:	e7cb      	b.n	62ba <strstr+0x18a>
    6322:	9b03      	ldr	r3, [sp, #12]
    6324:	0038      	movs	r0, r7
    6326:	469c      	mov	ip, r3
    6328:	4466      	add	r6, ip
    632a:	e7c6      	b.n	62ba <strstr+0x18a>
    632c:	4642      	mov	r2, r8
    632e:	e7a0      	b.n	6272 <strstr+0x142>
    6330:	46b9      	mov	r9, r7
    6332:	4650      	mov	r0, sl
    6334:	4448      	add	r0, r9
    6336:	e720      	b.n	617a <strstr+0x4a>

00006338 <_strtol_l.isra.0>:
    6338:	b5f0      	push	{r4, r5, r6, r7, lr}
    633a:	4657      	mov	r7, sl
    633c:	464e      	mov	r6, r9
    633e:	46de      	mov	lr, fp
    6340:	4645      	mov	r5, r8
    6342:	b5e0      	push	{r5, r6, r7, lr}
    6344:	001e      	movs	r6, r3
    6346:	2308      	movs	r3, #8
    6348:	b083      	sub	sp, #12
    634a:	9001      	str	r0, [sp, #4]
    634c:	9100      	str	r1, [sp, #0]
    634e:	4692      	mov	sl, r2
    6350:	000f      	movs	r7, r1
    6352:	4699      	mov	r9, r3
    6354:	e000      	b.n	6358 <_strtol_l.isra.0+0x20>
    6356:	002f      	movs	r7, r5
    6358:	980c      	ldr	r0, [sp, #48]	; 0x30
    635a:	783c      	ldrb	r4, [r7, #0]
    635c:	f003 fc68 	bl	9c30 <__locale_ctype_ptr_l>
    6360:	464a      	mov	r2, r9
    6362:	1900      	adds	r0, r0, r4
    6364:	7843      	ldrb	r3, [r0, #1]
    6366:	1c7d      	adds	r5, r7, #1
    6368:	421a      	tst	r2, r3
    636a:	d1f4      	bne.n	6356 <_strtol_l.isra.0+0x1e>
    636c:	2c2d      	cmp	r4, #45	; 0x2d
    636e:	d04f      	beq.n	6410 <_strtol_l.isra.0+0xd8>
    6370:	2300      	movs	r3, #0
    6372:	4698      	mov	r8, r3
    6374:	2c2b      	cmp	r4, #43	; 0x2b
    6376:	d05c      	beq.n	6432 <_strtol_l.isra.0+0xfa>
    6378:	2e00      	cmp	r6, #0
    637a:	d003      	beq.n	6384 <_strtol_l.isra.0+0x4c>
    637c:	2e10      	cmp	r6, #16
    637e:	d05b      	beq.n	6438 <_strtol_l.isra.0+0x100>
    6380:	0037      	movs	r7, r6
    6382:	e003      	b.n	638c <_strtol_l.isra.0+0x54>
    6384:	2c30      	cmp	r4, #48	; 0x30
    6386:	d063      	beq.n	6450 <_strtol_l.isra.0+0x118>
    6388:	270a      	movs	r7, #10
    638a:	260a      	movs	r6, #10
    638c:	4b35      	ldr	r3, [pc, #212]	; (6464 <_strtol_l.isra.0+0x12c>)
    638e:	0039      	movs	r1, r7
    6390:	4443      	add	r3, r8
    6392:	0018      	movs	r0, r3
    6394:	4699      	mov	r9, r3
    6396:	f7fd fc3d 	bl	3c14 <__aeabi_uidivmod>
    639a:	4648      	mov	r0, r9
    639c:	468b      	mov	fp, r1
    639e:	0039      	movs	r1, r7
    63a0:	f7fd fbb2 	bl	3b08 <__udivsi3>
    63a4:	2200      	movs	r2, #0
    63a6:	0001      	movs	r1, r0
    63a8:	2000      	movs	r0, #0
    63aa:	0023      	movs	r3, r4
    63ac:	3b30      	subs	r3, #48	; 0x30
    63ae:	2b09      	cmp	r3, #9
    63b0:	d907      	bls.n	63c2 <_strtol_l.isra.0+0x8a>
    63b2:	3b11      	subs	r3, #17
    63b4:	2b19      	cmp	r3, #25
    63b6:	d903      	bls.n	63c0 <_strtol_l.isra.0+0x88>
    63b8:	0023      	movs	r3, r4
    63ba:	3b61      	subs	r3, #97	; 0x61
    63bc:	2b19      	cmp	r3, #25
    63be:	d80d      	bhi.n	63dc <_strtol_l.isra.0+0xa4>
    63c0:	330a      	adds	r3, #10
    63c2:	429e      	cmp	r6, r3
    63c4:	dd0a      	ble.n	63dc <_strtol_l.isra.0+0xa4>
    63c6:	1c54      	adds	r4, r2, #1
    63c8:	d005      	beq.n	63d6 <_strtol_l.isra.0+0x9e>
    63ca:	4281      	cmp	r1, r0
    63cc:	d31d      	bcc.n	640a <_strtol_l.isra.0+0xd2>
    63ce:	d01a      	beq.n	6406 <_strtol_l.isra.0+0xce>
    63d0:	2201      	movs	r2, #1
    63d2:	4378      	muls	r0, r7
    63d4:	1818      	adds	r0, r3, r0
    63d6:	782c      	ldrb	r4, [r5, #0]
    63d8:	3501      	adds	r5, #1
    63da:	e7e6      	b.n	63aa <_strtol_l.isra.0+0x72>
    63dc:	1c53      	adds	r3, r2, #1
    63de:	d01c      	beq.n	641a <_strtol_l.isra.0+0xe2>
    63e0:	4643      	mov	r3, r8
    63e2:	2b00      	cmp	r3, #0
    63e4:	d000      	beq.n	63e8 <_strtol_l.isra.0+0xb0>
    63e6:	4240      	negs	r0, r0
    63e8:	4653      	mov	r3, sl
    63ea:	2b00      	cmp	r3, #0
    63ec:	d004      	beq.n	63f8 <_strtol_l.isra.0+0xc0>
    63ee:	9b00      	ldr	r3, [sp, #0]
    63f0:	2a00      	cmp	r2, #0
    63f2:	d11c      	bne.n	642e <_strtol_l.isra.0+0xf6>
    63f4:	4652      	mov	r2, sl
    63f6:	6013      	str	r3, [r2, #0]
    63f8:	b003      	add	sp, #12
    63fa:	bc3c      	pop	{r2, r3, r4, r5}
    63fc:	4690      	mov	r8, r2
    63fe:	4699      	mov	r9, r3
    6400:	46a2      	mov	sl, r4
    6402:	46ab      	mov	fp, r5
    6404:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6406:	459b      	cmp	fp, r3
    6408:	dae2      	bge.n	63d0 <_strtol_l.isra.0+0x98>
    640a:	2201      	movs	r2, #1
    640c:	4252      	negs	r2, r2
    640e:	e7e2      	b.n	63d6 <_strtol_l.isra.0+0x9e>
    6410:	2301      	movs	r3, #1
    6412:	782c      	ldrb	r4, [r5, #0]
    6414:	4698      	mov	r8, r3
    6416:	1cbd      	adds	r5, r7, #2
    6418:	e7ae      	b.n	6378 <_strtol_l.isra.0+0x40>
    641a:	2322      	movs	r3, #34	; 0x22
    641c:	9a01      	ldr	r2, [sp, #4]
    641e:	4648      	mov	r0, r9
    6420:	6013      	str	r3, [r2, #0]
    6422:	4653      	mov	r3, sl
    6424:	2b00      	cmp	r3, #0
    6426:	d0e7      	beq.n	63f8 <_strtol_l.isra.0+0xc0>
    6428:	1e6b      	subs	r3, r5, #1
    642a:	4648      	mov	r0, r9
    642c:	e7e2      	b.n	63f4 <_strtol_l.isra.0+0xbc>
    642e:	4681      	mov	r9, r0
    6430:	e7fa      	b.n	6428 <_strtol_l.isra.0+0xf0>
    6432:	782c      	ldrb	r4, [r5, #0]
    6434:	1cbd      	adds	r5, r7, #2
    6436:	e79f      	b.n	6378 <_strtol_l.isra.0+0x40>
    6438:	2c30      	cmp	r4, #48	; 0x30
    643a:	d111      	bne.n	6460 <_strtol_l.isra.0+0x128>
    643c:	2220      	movs	r2, #32
    643e:	782b      	ldrb	r3, [r5, #0]
    6440:	4393      	bics	r3, r2
    6442:	2b58      	cmp	r3, #88	; 0x58
    6444:	d10c      	bne.n	6460 <_strtol_l.isra.0+0x128>
    6446:	786c      	ldrb	r4, [r5, #1]
    6448:	2710      	movs	r7, #16
    644a:	3502      	adds	r5, #2
    644c:	2610      	movs	r6, #16
    644e:	e79d      	b.n	638c <_strtol_l.isra.0+0x54>
    6450:	2220      	movs	r2, #32
    6452:	782b      	ldrb	r3, [r5, #0]
    6454:	4393      	bics	r3, r2
    6456:	2b58      	cmp	r3, #88	; 0x58
    6458:	d0f5      	beq.n	6446 <_strtol_l.isra.0+0x10e>
    645a:	2708      	movs	r7, #8
    645c:	2608      	movs	r6, #8
    645e:	e795      	b.n	638c <_strtol_l.isra.0+0x54>
    6460:	2710      	movs	r7, #16
    6462:	e793      	b.n	638c <_strtol_l.isra.0+0x54>
    6464:	7fffffff 	.word	0x7fffffff

00006468 <_strtol_r>:
    6468:	b510      	push	{r4, lr}
    646a:	4c06      	ldr	r4, [pc, #24]	; (6484 <_strtol_r+0x1c>)
    646c:	b082      	sub	sp, #8
    646e:	6824      	ldr	r4, [r4, #0]
    6470:	6b64      	ldr	r4, [r4, #52]	; 0x34
    6472:	2c00      	cmp	r4, #0
    6474:	d004      	beq.n	6480 <_strtol_r+0x18>
    6476:	9400      	str	r4, [sp, #0]
    6478:	f7ff ff5e 	bl	6338 <_strtol_l.isra.0>
    647c:	b002      	add	sp, #8
    647e:	bd10      	pop	{r4, pc}
    6480:	4c01      	ldr	r4, [pc, #4]	; (6488 <_strtol_r+0x20>)
    6482:	e7f8      	b.n	6476 <_strtol_r+0xe>
    6484:	20000098 	.word	0x20000098
    6488:	200004cc 	.word	0x200004cc

0000648c <_svfprintf_r>:
    648c:	b5f0      	push	{r4, r5, r6, r7, lr}
    648e:	46de      	mov	lr, fp
    6490:	4645      	mov	r5, r8
    6492:	4657      	mov	r7, sl
    6494:	464e      	mov	r6, r9
    6496:	b5e0      	push	{r5, r6, r7, lr}
    6498:	b0c3      	sub	sp, #268	; 0x10c
    649a:	000d      	movs	r5, r1
    649c:	9106      	str	r1, [sp, #24]
    649e:	0014      	movs	r4, r2
    64a0:	930f      	str	r3, [sp, #60]	; 0x3c
    64a2:	9009      	str	r0, [sp, #36]	; 0x24
    64a4:	f003 fbd8 	bl	9c58 <_localeconv_r>
    64a8:	6803      	ldr	r3, [r0, #0]
    64aa:	0018      	movs	r0, r3
    64ac:	9319      	str	r3, [sp, #100]	; 0x64
    64ae:	f7ff fcab 	bl	5e08 <strlen>
    64b2:	9018      	str	r0, [sp, #96]	; 0x60
    64b4:	89ab      	ldrh	r3, [r5, #12]
    64b6:	061b      	lsls	r3, r3, #24
    64b8:	d505      	bpl.n	64c6 <_svfprintf_r+0x3a>
    64ba:	692b      	ldr	r3, [r5, #16]
    64bc:	9307      	str	r3, [sp, #28]
    64be:	2b00      	cmp	r3, #0
    64c0:	d101      	bne.n	64c6 <_svfprintf_r+0x3a>
    64c2:	f001 f863 	bl	758c <_svfprintf_r+0x1100>
    64c6:	ab32      	add	r3, sp, #200	; 0xc8
    64c8:	9325      	str	r3, [sp, #148]	; 0x94
    64ca:	2300      	movs	r3, #0
    64cc:	46a3      	mov	fp, r4
    64ce:	af25      	add	r7, sp, #148	; 0x94
    64d0:	60bb      	str	r3, [r7, #8]
    64d2:	607b      	str	r3, [r7, #4]
    64d4:	9314      	str	r3, [sp, #80]	; 0x50
    64d6:	9316      	str	r3, [sp, #88]	; 0x58
    64d8:	9315      	str	r3, [sp, #84]	; 0x54
    64da:	ae32      	add	r6, sp, #200	; 0xc8
    64dc:	9317      	str	r3, [sp, #92]	; 0x5c
    64de:	931a      	str	r3, [sp, #104]	; 0x68
    64e0:	930a      	str	r3, [sp, #40]	; 0x28
    64e2:	465b      	mov	r3, fp
    64e4:	781b      	ldrb	r3, [r3, #0]
    64e6:	465c      	mov	r4, fp
    64e8:	2b00      	cmp	r3, #0
    64ea:	d01c      	beq.n	6526 <_svfprintf_r+0x9a>
    64ec:	2b25      	cmp	r3, #37	; 0x25
    64ee:	d102      	bne.n	64f6 <_svfprintf_r+0x6a>
    64f0:	e019      	b.n	6526 <_svfprintf_r+0x9a>
    64f2:	2b25      	cmp	r3, #37	; 0x25
    64f4:	d003      	beq.n	64fe <_svfprintf_r+0x72>
    64f6:	3401      	adds	r4, #1
    64f8:	7823      	ldrb	r3, [r4, #0]
    64fa:	2b00      	cmp	r3, #0
    64fc:	d1f9      	bne.n	64f2 <_svfprintf_r+0x66>
    64fe:	465b      	mov	r3, fp
    6500:	1ae5      	subs	r5, r4, r3
    6502:	d010      	beq.n	6526 <_svfprintf_r+0x9a>
    6504:	465b      	mov	r3, fp
    6506:	6033      	str	r3, [r6, #0]
    6508:	68bb      	ldr	r3, [r7, #8]
    650a:	6075      	str	r5, [r6, #4]
    650c:	195b      	adds	r3, r3, r5
    650e:	60bb      	str	r3, [r7, #8]
    6510:	687b      	ldr	r3, [r7, #4]
    6512:	3301      	adds	r3, #1
    6514:	607b      	str	r3, [r7, #4]
    6516:	2b07      	cmp	r3, #7
    6518:	dc2e      	bgt.n	6578 <_svfprintf_r+0xec>
    651a:	3608      	adds	r6, #8
    651c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    651e:	469c      	mov	ip, r3
    6520:	44ac      	add	ip, r5
    6522:	4663      	mov	r3, ip
    6524:	930a      	str	r3, [sp, #40]	; 0x28
    6526:	7823      	ldrb	r3, [r4, #0]
    6528:	2b00      	cmp	r3, #0
    652a:	d02e      	beq.n	658a <_svfprintf_r+0xfe>
    652c:	1c63      	adds	r3, r4, #1
    652e:	469b      	mov	fp, r3
    6530:	2300      	movs	r3, #0
    6532:	aa16      	add	r2, sp, #88	; 0x58
    6534:	77d3      	strb	r3, [r2, #31]
    6536:	2201      	movs	r2, #1
    6538:	4252      	negs	r2, r2
    653a:	4692      	mov	sl, r2
    653c:	2200      	movs	r2, #0
    653e:	2100      	movs	r1, #0
    6540:	920b      	str	r2, [sp, #44]	; 0x2c
    6542:	3220      	adds	r2, #32
    6544:	4691      	mov	r9, r2
    6546:	3220      	adds	r2, #32
    6548:	7863      	ldrb	r3, [r4, #1]
    654a:	4688      	mov	r8, r1
    654c:	2000      	movs	r0, #0
    654e:	2400      	movs	r4, #0
    6550:	4694      	mov	ip, r2
    6552:	4659      	mov	r1, fp
    6554:	3101      	adds	r1, #1
    6556:	001a      	movs	r2, r3
    6558:	3a20      	subs	r2, #32
    655a:	2a58      	cmp	r2, #88	; 0x58
    655c:	d900      	bls.n	6560 <_svfprintf_r+0xd4>
    655e:	e2fd      	b.n	6b5c <_svfprintf_r+0x6d0>
    6560:	4dd7      	ldr	r5, [pc, #860]	; (68c0 <_svfprintf_r+0x434>)
    6562:	0092      	lsls	r2, r2, #2
    6564:	58aa      	ldr	r2, [r5, r2]
    6566:	4697      	mov	pc, r2
    6568:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    656a:	920f      	str	r2, [sp, #60]	; 0x3c
    656c:	425b      	negs	r3, r3
    656e:	930b      	str	r3, [sp, #44]	; 0x2c
    6570:	2304      	movs	r3, #4
    6572:	431c      	orrs	r4, r3
    6574:	780b      	ldrb	r3, [r1, #0]
    6576:	e7ed      	b.n	6554 <_svfprintf_r+0xc8>
    6578:	003a      	movs	r2, r7
    657a:	9906      	ldr	r1, [sp, #24]
    657c:	9809      	ldr	r0, [sp, #36]	; 0x24
    657e:	f005 fe5d 	bl	c23c <__ssprint_r>
    6582:	2800      	cmp	r0, #0
    6584:	d109      	bne.n	659a <_svfprintf_r+0x10e>
    6586:	ae32      	add	r6, sp, #200	; 0xc8
    6588:	e7c8      	b.n	651c <_svfprintf_r+0x90>
    658a:	68bb      	ldr	r3, [r7, #8]
    658c:	2b00      	cmp	r3, #0
    658e:	d004      	beq.n	659a <_svfprintf_r+0x10e>
    6590:	003a      	movs	r2, r7
    6592:	9906      	ldr	r1, [sp, #24]
    6594:	9809      	ldr	r0, [sp, #36]	; 0x24
    6596:	f005 fe51 	bl	c23c <__ssprint_r>
    659a:	9b06      	ldr	r3, [sp, #24]
    659c:	899b      	ldrh	r3, [r3, #12]
    659e:	065b      	lsls	r3, r3, #25
    65a0:	d501      	bpl.n	65a6 <_svfprintf_r+0x11a>
    65a2:	f001 f8ce 	bl	7742 <_svfprintf_r+0x12b6>
    65a6:	980a      	ldr	r0, [sp, #40]	; 0x28
    65a8:	b043      	add	sp, #268	; 0x10c
    65aa:	bc3c      	pop	{r2, r3, r4, r5}
    65ac:	4690      	mov	r8, r2
    65ae:	4699      	mov	r9, r3
    65b0:	46a2      	mov	sl, r4
    65b2:	46ab      	mov	fp, r5
    65b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    65b6:	2201      	movs	r2, #1
    65b8:	780b      	ldrb	r3, [r1, #0]
    65ba:	4690      	mov	r8, r2
    65bc:	202b      	movs	r0, #43	; 0x2b
    65be:	e7c9      	b.n	6554 <_svfprintf_r+0xc8>
    65c0:	1c4b      	adds	r3, r1, #1
    65c2:	469b      	mov	fp, r3
    65c4:	780b      	ldrb	r3, [r1, #0]
    65c6:	2b2a      	cmp	r3, #42	; 0x2a
    65c8:	d101      	bne.n	65ce <_svfprintf_r+0x142>
    65ca:	f001 fa1b 	bl	7a04 <_svfprintf_r+0x1578>
    65ce:	001a      	movs	r2, r3
    65d0:	2100      	movs	r1, #0
    65d2:	3a30      	subs	r2, #48	; 0x30
    65d4:	468a      	mov	sl, r1
    65d6:	4659      	mov	r1, fp
    65d8:	2a09      	cmp	r2, #9
    65da:	d8bc      	bhi.n	6556 <_svfprintf_r+0xca>
    65dc:	0003      	movs	r3, r0
    65de:	0011      	movs	r1, r2
    65e0:	4650      	mov	r0, sl
    65e2:	465a      	mov	r2, fp
    65e4:	469a      	mov	sl, r3
    65e6:	46a3      	mov	fp, r4
    65e8:	0083      	lsls	r3, r0, #2
    65ea:	181b      	adds	r3, r3, r0
    65ec:	7814      	ldrb	r4, [r2, #0]
    65ee:	005b      	lsls	r3, r3, #1
    65f0:	1858      	adds	r0, r3, r1
    65f2:	0021      	movs	r1, r4
    65f4:	1c53      	adds	r3, r2, #1
    65f6:	3930      	subs	r1, #48	; 0x30
    65f8:	001a      	movs	r2, r3
    65fa:	2909      	cmp	r1, #9
    65fc:	d9f4      	bls.n	65e8 <_svfprintf_r+0x15c>
    65fe:	4652      	mov	r2, sl
    6600:	0019      	movs	r1, r3
    6602:	4682      	mov	sl, r0
    6604:	0023      	movs	r3, r4
    6606:	0010      	movs	r0, r2
    6608:	465c      	mov	r4, fp
    660a:	e7a4      	b.n	6556 <_svfprintf_r+0xca>
    660c:	2380      	movs	r3, #128	; 0x80
    660e:	431c      	orrs	r4, r3
    6610:	780b      	ldrb	r3, [r1, #0]
    6612:	e79f      	b.n	6554 <_svfprintf_r+0xc8>
    6614:	468b      	mov	fp, r1
    6616:	4641      	mov	r1, r8
    6618:	9312      	str	r3, [sp, #72]	; 0x48
    661a:	2900      	cmp	r1, #0
    661c:	d001      	beq.n	6622 <_svfprintf_r+0x196>
    661e:	f001 fa1f 	bl	7a60 <_svfprintf_r+0x15d4>
    6622:	2310      	movs	r3, #16
    6624:	431c      	orrs	r4, r3
    6626:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6628:	06a3      	lsls	r3, r4, #26
    662a:	d501      	bpl.n	6630 <_svfprintf_r+0x1a4>
    662c:	f000 fe88 	bl	7340 <_svfprintf_r+0xeb4>
    6630:	06e3      	lsls	r3, r4, #27
    6632:	d501      	bpl.n	6638 <_svfprintf_r+0x1ac>
    6634:	f000 fd80 	bl	7138 <_svfprintf_r+0xcac>
    6638:	0663      	lsls	r3, r4, #25
    663a:	d401      	bmi.n	6640 <_svfprintf_r+0x1b4>
    663c:	f000 fd7c 	bl	7138 <_svfprintf_r+0xcac>
    6640:	2100      	movs	r1, #0
    6642:	5e53      	ldrsh	r3, [r2, r1]
    6644:	930c      	str	r3, [sp, #48]	; 0x30
    6646:	3204      	adds	r2, #4
    6648:	17db      	asrs	r3, r3, #31
    664a:	930d      	str	r3, [sp, #52]	; 0x34
    664c:	920f      	str	r2, [sp, #60]	; 0x3c
    664e:	d501      	bpl.n	6654 <_svfprintf_r+0x1c8>
    6650:	f000 fe86 	bl	7360 <_svfprintf_r+0xed4>
    6654:	990c      	ldr	r1, [sp, #48]	; 0x30
    6656:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6658:	0008      	movs	r0, r1
    665a:	ab16      	add	r3, sp, #88	; 0x58
    665c:	7fdb      	ldrb	r3, [r3, #31]
    665e:	4310      	orrs	r0, r2
    6660:	4698      	mov	r8, r3
    6662:	0002      	movs	r2, r0
    6664:	2301      	movs	r3, #1
    6666:	4651      	mov	r1, sl
    6668:	3101      	adds	r1, #1
    666a:	d100      	bne.n	666e <_svfprintf_r+0x1e2>
    666c:	e0ff      	b.n	686e <_svfprintf_r+0x3e2>
    666e:	2180      	movs	r1, #128	; 0x80
    6670:	0020      	movs	r0, r4
    6672:	4388      	bics	r0, r1
    6674:	9008      	str	r0, [sp, #32]
    6676:	2a00      	cmp	r2, #0
    6678:	d000      	beq.n	667c <_svfprintf_r+0x1f0>
    667a:	e0fc      	b.n	6876 <_svfprintf_r+0x3ea>
    667c:	4652      	mov	r2, sl
    667e:	2a00      	cmp	r2, #0
    6680:	d001      	beq.n	6686 <_svfprintf_r+0x1fa>
    6682:	f000 fc2c 	bl	6ede <_svfprintf_r+0xa52>
    6686:	2b00      	cmp	r3, #0
    6688:	d001      	beq.n	668e <_svfprintf_r+0x202>
    668a:	f000 fd04 	bl	7096 <_svfprintf_r+0xc0a>
    668e:	2001      	movs	r0, #1
    6690:	ab32      	add	r3, sp, #200	; 0xc8
    6692:	4020      	ands	r0, r4
    6694:	900e      	str	r0, [sp, #56]	; 0x38
    6696:	9311      	str	r3, [sp, #68]	; 0x44
    6698:	d008      	beq.n	66ac <_svfprintf_r+0x220>
    669a:	2327      	movs	r3, #39	; 0x27
    669c:	2130      	movs	r1, #48	; 0x30
    669e:	aa28      	add	r2, sp, #160	; 0xa0
    66a0:	54d1      	strb	r1, [r2, r3]
    66a2:	aa16      	add	r2, sp, #88	; 0x58
    66a4:	4694      	mov	ip, r2
    66a6:	3348      	adds	r3, #72	; 0x48
    66a8:	4463      	add	r3, ip
    66aa:	9311      	str	r3, [sp, #68]	; 0x44
    66ac:	4653      	mov	r3, sl
    66ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    66b0:	9307      	str	r3, [sp, #28]
    66b2:	4592      	cmp	sl, r2
    66b4:	da00      	bge.n	66b8 <_svfprintf_r+0x22c>
    66b6:	9207      	str	r2, [sp, #28]
    66b8:	2300      	movs	r3, #0
    66ba:	9313      	str	r3, [sp, #76]	; 0x4c
    66bc:	4643      	mov	r3, r8
    66be:	2b00      	cmp	r3, #0
    66c0:	d002      	beq.n	66c8 <_svfprintf_r+0x23c>
    66c2:	9b07      	ldr	r3, [sp, #28]
    66c4:	3301      	adds	r3, #1
    66c6:	9307      	str	r3, [sp, #28]
    66c8:	2302      	movs	r3, #2
    66ca:	9a08      	ldr	r2, [sp, #32]
    66cc:	401a      	ands	r2, r3
    66ce:	4691      	mov	r9, r2
    66d0:	d002      	beq.n	66d8 <_svfprintf_r+0x24c>
    66d2:	9b07      	ldr	r3, [sp, #28]
    66d4:	3302      	adds	r3, #2
    66d6:	9307      	str	r3, [sp, #28]
    66d8:	2384      	movs	r3, #132	; 0x84
    66da:	9a08      	ldr	r2, [sp, #32]
    66dc:	401a      	ands	r2, r3
    66de:	9210      	str	r2, [sp, #64]	; 0x40
    66e0:	d000      	beq.n	66e4 <_svfprintf_r+0x258>
    66e2:	e24d      	b.n	6b80 <_svfprintf_r+0x6f4>
    66e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    66e6:	9a07      	ldr	r2, [sp, #28]
    66e8:	1a9c      	subs	r4, r3, r2
    66ea:	2c00      	cmp	r4, #0
    66ec:	dc00      	bgt.n	66f0 <_svfprintf_r+0x264>
    66ee:	e247      	b.n	6b80 <_svfprintf_r+0x6f4>
    66f0:	4974      	ldr	r1, [pc, #464]	; (68c4 <_svfprintf_r+0x438>)
    66f2:	68ba      	ldr	r2, [r7, #8]
    66f4:	687b      	ldr	r3, [r7, #4]
    66f6:	4688      	mov	r8, r1
    66f8:	2c10      	cmp	r4, #16
    66fa:	dd1f      	ble.n	673c <_svfprintf_r+0x2b0>
    66fc:	0031      	movs	r1, r6
    66fe:	2510      	movs	r5, #16
    6700:	4646      	mov	r6, r8
    6702:	e003      	b.n	670c <_svfprintf_r+0x280>
    6704:	3c10      	subs	r4, #16
    6706:	3108      	adds	r1, #8
    6708:	2c10      	cmp	r4, #16
    670a:	dd15      	ble.n	6738 <_svfprintf_r+0x2ac>
    670c:	3210      	adds	r2, #16
    670e:	3301      	adds	r3, #1
    6710:	600e      	str	r6, [r1, #0]
    6712:	604d      	str	r5, [r1, #4]
    6714:	60ba      	str	r2, [r7, #8]
    6716:	607b      	str	r3, [r7, #4]
    6718:	2b07      	cmp	r3, #7
    671a:	ddf3      	ble.n	6704 <_svfprintf_r+0x278>
    671c:	003a      	movs	r2, r7
    671e:	9906      	ldr	r1, [sp, #24]
    6720:	9809      	ldr	r0, [sp, #36]	; 0x24
    6722:	f005 fd8b 	bl	c23c <__ssprint_r>
    6726:	2800      	cmp	r0, #0
    6728:	d000      	beq.n	672c <_svfprintf_r+0x2a0>
    672a:	e736      	b.n	659a <_svfprintf_r+0x10e>
    672c:	3c10      	subs	r4, #16
    672e:	68ba      	ldr	r2, [r7, #8]
    6730:	687b      	ldr	r3, [r7, #4]
    6732:	a932      	add	r1, sp, #200	; 0xc8
    6734:	2c10      	cmp	r4, #16
    6736:	dce9      	bgt.n	670c <_svfprintf_r+0x280>
    6738:	46b0      	mov	r8, r6
    673a:	000e      	movs	r6, r1
    673c:	4641      	mov	r1, r8
    673e:	6074      	str	r4, [r6, #4]
    6740:	3301      	adds	r3, #1
    6742:	18a4      	adds	r4, r4, r2
    6744:	6031      	str	r1, [r6, #0]
    6746:	60bc      	str	r4, [r7, #8]
    6748:	607b      	str	r3, [r7, #4]
    674a:	2b07      	cmp	r3, #7
    674c:	dd01      	ble.n	6752 <_svfprintf_r+0x2c6>
    674e:	f000 fca8 	bl	70a2 <_svfprintf_r+0xc16>
    6752:	ab16      	add	r3, sp, #88	; 0x58
    6754:	7fdb      	ldrb	r3, [r3, #31]
    6756:	3608      	adds	r6, #8
    6758:	4698      	mov	r8, r3
    675a:	e212      	b.n	6b82 <_svfprintf_r+0x6f6>
    675c:	468b      	mov	fp, r1
    675e:	4641      	mov	r1, r8
    6760:	9312      	str	r3, [sp, #72]	; 0x48
    6762:	2900      	cmp	r1, #0
    6764:	d001      	beq.n	676a <_svfprintf_r+0x2de>
    6766:	f001 f977 	bl	7a58 <_svfprintf_r+0x15cc>
    676a:	2207      	movs	r2, #7
    676c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    676e:	3307      	adds	r3, #7
    6770:	4393      	bics	r3, r2
    6772:	3201      	adds	r2, #1
    6774:	4694      	mov	ip, r2
    6776:	449c      	add	ip, r3
    6778:	4662      	mov	r2, ip
    677a:	920f      	str	r2, [sp, #60]	; 0x3c
    677c:	681a      	ldr	r2, [r3, #0]
    677e:	9216      	str	r2, [sp, #88]	; 0x58
    6780:	685b      	ldr	r3, [r3, #4]
    6782:	2201      	movs	r2, #1
    6784:	9315      	str	r3, [sp, #84]	; 0x54
    6786:	9b15      	ldr	r3, [sp, #84]	; 0x54
    6788:	9d16      	ldr	r5, [sp, #88]	; 0x58
    678a:	005b      	lsls	r3, r3, #1
    678c:	085b      	lsrs	r3, r3, #1
    678e:	4698      	mov	r8, r3
    6790:	4252      	negs	r2, r2
    6792:	4b4d      	ldr	r3, [pc, #308]	; (68c8 <_svfprintf_r+0x43c>)
    6794:	0028      	movs	r0, r5
    6796:	4641      	mov	r1, r8
    6798:	f007 f8bc 	bl	d914 <__aeabi_dcmpun>
    679c:	2800      	cmp	r0, #0
    679e:	d001      	beq.n	67a4 <_svfprintf_r+0x318>
    67a0:	f000 fdfd 	bl	739e <_svfprintf_r+0xf12>
    67a4:	2201      	movs	r2, #1
    67a6:	4b48      	ldr	r3, [pc, #288]	; (68c8 <_svfprintf_r+0x43c>)
    67a8:	4252      	negs	r2, r2
    67aa:	0028      	movs	r0, r5
    67ac:	4641      	mov	r1, r8
    67ae:	f7ff f837 	bl	5820 <__aeabi_dcmple>
    67b2:	2800      	cmp	r0, #0
    67b4:	d001      	beq.n	67ba <_svfprintf_r+0x32e>
    67b6:	f000 fdf2 	bl	739e <_svfprintf_r+0xf12>
    67ba:	2200      	movs	r2, #0
    67bc:	2300      	movs	r3, #0
    67be:	9816      	ldr	r0, [sp, #88]	; 0x58
    67c0:	9915      	ldr	r1, [sp, #84]	; 0x54
    67c2:	f7ff f823 	bl	580c <__aeabi_dcmplt>
    67c6:	2800      	cmp	r0, #0
    67c8:	d001      	beq.n	67ce <_svfprintf_r+0x342>
    67ca:	f001 f822 	bl	7812 <_svfprintf_r+0x1386>
    67ce:	ab16      	add	r3, sp, #88	; 0x58
    67d0:	7fdb      	ldrb	r3, [r3, #31]
    67d2:	4698      	mov	r8, r3
    67d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    67d6:	2b47      	cmp	r3, #71	; 0x47
    67d8:	dd01      	ble.n	67de <_svfprintf_r+0x352>
    67da:	f000 fec7 	bl	756c <_svfprintf_r+0x10e0>
    67de:	4b3b      	ldr	r3, [pc, #236]	; (68cc <_svfprintf_r+0x440>)
    67e0:	9311      	str	r3, [sp, #68]	; 0x44
    67e2:	2380      	movs	r3, #128	; 0x80
    67e4:	439c      	bics	r4, r3
    67e6:	3b7d      	subs	r3, #125	; 0x7d
    67e8:	9307      	str	r3, [sp, #28]
    67ea:	930e      	str	r3, [sp, #56]	; 0x38
    67ec:	2300      	movs	r3, #0
    67ee:	9408      	str	r4, [sp, #32]
    67f0:	469a      	mov	sl, r3
    67f2:	9313      	str	r3, [sp, #76]	; 0x4c
    67f4:	e762      	b.n	66bc <_svfprintf_r+0x230>
    67f6:	2200      	movs	r2, #0
    67f8:	3b30      	subs	r3, #48	; 0x30
    67fa:	0015      	movs	r5, r2
    67fc:	001a      	movs	r2, r3
    67fe:	0003      	movs	r3, r0
    6800:	9407      	str	r4, [sp, #28]
    6802:	0008      	movs	r0, r1
    6804:	002c      	movs	r4, r5
    6806:	469b      	mov	fp, r3
    6808:	00a3      	lsls	r3, r4, #2
    680a:	191c      	adds	r4, r3, r4
    680c:	7803      	ldrb	r3, [r0, #0]
    680e:	0064      	lsls	r4, r4, #1
    6810:	1914      	adds	r4, r2, r4
    6812:	001a      	movs	r2, r3
    6814:	3101      	adds	r1, #1
    6816:	3a30      	subs	r2, #48	; 0x30
    6818:	0008      	movs	r0, r1
    681a:	2a09      	cmp	r2, #9
    681c:	d9f4      	bls.n	6808 <_svfprintf_r+0x37c>
    681e:	940b      	str	r4, [sp, #44]	; 0x2c
    6820:	4658      	mov	r0, fp
    6822:	9c07      	ldr	r4, [sp, #28]
    6824:	e697      	b.n	6556 <_svfprintf_r+0xca>
    6826:	2308      	movs	r3, #8
    6828:	431c      	orrs	r4, r3
    682a:	780b      	ldrb	r3, [r1, #0]
    682c:	e692      	b.n	6554 <_svfprintf_r+0xc8>
    682e:	9312      	str	r3, [sp, #72]	; 0x48
    6830:	2310      	movs	r3, #16
    6832:	431c      	orrs	r4, r3
    6834:	468b      	mov	fp, r1
    6836:	06a3      	lsls	r3, r4, #26
    6838:	d500      	bpl.n	683c <_svfprintf_r+0x3b0>
    683a:	e17b      	b.n	6b34 <_svfprintf_r+0x6a8>
    683c:	06e3      	lsls	r3, r4, #27
    683e:	d501      	bpl.n	6844 <_svfprintf_r+0x3b8>
    6840:	f000 fc7e 	bl	7140 <_svfprintf_r+0xcb4>
    6844:	0663      	lsls	r3, r4, #25
    6846:	d401      	bmi.n	684c <_svfprintf_r+0x3c0>
    6848:	f000 fc7a 	bl	7140 <_svfprintf_r+0xcb4>
    684c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    684e:	881a      	ldrh	r2, [r3, #0]
    6850:	920c      	str	r2, [sp, #48]	; 0x30
    6852:	2200      	movs	r2, #0
    6854:	3304      	adds	r3, #4
    6856:	930f      	str	r3, [sp, #60]	; 0x3c
    6858:	2300      	movs	r3, #0
    685a:	920d      	str	r2, [sp, #52]	; 0x34
    685c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    685e:	2100      	movs	r1, #0
    6860:	a816      	add	r0, sp, #88	; 0x58
    6862:	77c1      	strb	r1, [r0, #31]
    6864:	4688      	mov	r8, r1
    6866:	4651      	mov	r1, sl
    6868:	3101      	adds	r1, #1
    686a:	d000      	beq.n	686e <_svfprintf_r+0x3e2>
    686c:	e6ff      	b.n	666e <_svfprintf_r+0x1e2>
    686e:	2a00      	cmp	r2, #0
    6870:	d100      	bne.n	6874 <_svfprintf_r+0x3e8>
    6872:	e335      	b.n	6ee0 <_svfprintf_r+0xa54>
    6874:	9408      	str	r4, [sp, #32]
    6876:	2b01      	cmp	r3, #1
    6878:	d100      	bne.n	687c <_svfprintf_r+0x3f0>
    687a:	e3e5      	b.n	7048 <_svfprintf_r+0xbbc>
    687c:	2b02      	cmp	r3, #2
    687e:	d000      	beq.n	6882 <_svfprintf_r+0x3f6>
    6880:	e362      	b.n	6f48 <_svfprintf_r+0xabc>
    6882:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    6884:	200f      	movs	r0, #15
    6886:	46a1      	mov	r9, r4
    6888:	46b4      	mov	ip, r6
    688a:	ab32      	add	r3, sp, #200	; 0xc8
    688c:	0019      	movs	r1, r3
    688e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    6890:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6892:	0004      	movs	r4, r0
    6894:	464d      	mov	r5, r9
    6896:	4014      	ands	r4, r2
    6898:	5d2c      	ldrb	r4, [r5, r4]
    689a:	071e      	lsls	r6, r3, #28
    689c:	0915      	lsrs	r5, r2, #4
    689e:	3901      	subs	r1, #1
    68a0:	432e      	orrs	r6, r5
    68a2:	700c      	strb	r4, [r1, #0]
    68a4:	091c      	lsrs	r4, r3, #4
    68a6:	0023      	movs	r3, r4
    68a8:	0034      	movs	r4, r6
    68aa:	0032      	movs	r2, r6
    68ac:	431c      	orrs	r4, r3
    68ae:	d1f0      	bne.n	6892 <_svfprintf_r+0x406>
    68b0:	920c      	str	r2, [sp, #48]	; 0x30
    68b2:	930d      	str	r3, [sp, #52]	; 0x34
    68b4:	ab32      	add	r3, sp, #200	; 0xc8
    68b6:	1a5b      	subs	r3, r3, r1
    68b8:	9111      	str	r1, [sp, #68]	; 0x44
    68ba:	4666      	mov	r6, ip
    68bc:	930e      	str	r3, [sp, #56]	; 0x38
    68be:	e6f5      	b.n	66ac <_svfprintf_r+0x220>
    68c0:	000100b0 	.word	0x000100b0
    68c4:	00010258 	.word	0x00010258
    68c8:	7fefffff 	.word	0x7fefffff
    68cc:	00010214 	.word	0x00010214
    68d0:	9312      	str	r3, [sp, #72]	; 0x48
    68d2:	2310      	movs	r3, #16
    68d4:	431c      	orrs	r4, r3
    68d6:	468b      	mov	fp, r1
    68d8:	06a3      	lsls	r3, r4, #26
    68da:	d500      	bpl.n	68de <_svfprintf_r+0x452>
    68dc:	e111      	b.n	6b02 <_svfprintf_r+0x676>
    68de:	06e3      	lsls	r3, r4, #27
    68e0:	d501      	bpl.n	68e6 <_svfprintf_r+0x45a>
    68e2:	f000 fc31 	bl	7148 <_svfprintf_r+0xcbc>
    68e6:	0663      	lsls	r3, r4, #25
    68e8:	d401      	bmi.n	68ee <_svfprintf_r+0x462>
    68ea:	f000 fc2d 	bl	7148 <_svfprintf_r+0xcbc>
    68ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    68f0:	881a      	ldrh	r2, [r3, #0]
    68f2:	920c      	str	r2, [sp, #48]	; 0x30
    68f4:	2200      	movs	r2, #0
    68f6:	3304      	adds	r3, #4
    68f8:	920d      	str	r2, [sp, #52]	; 0x34
    68fa:	930f      	str	r3, [sp, #60]	; 0x3c
    68fc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    68fe:	2301      	movs	r3, #1
    6900:	e7ad      	b.n	685e <_svfprintf_r+0x3d2>
    6902:	468b      	mov	fp, r1
    6904:	4641      	mov	r1, r8
    6906:	9312      	str	r3, [sp, #72]	; 0x48
    6908:	2900      	cmp	r1, #0
    690a:	d001      	beq.n	6910 <_svfprintf_r+0x484>
    690c:	f001 f890 	bl	7a30 <_svfprintf_r+0x15a4>
    6910:	4bb8      	ldr	r3, [pc, #736]	; (6bf4 <_svfprintf_r+0x768>)
    6912:	9317      	str	r3, [sp, #92]	; 0x5c
    6914:	06a3      	lsls	r3, r4, #26
    6916:	d500      	bpl.n	691a <_svfprintf_r+0x48e>
    6918:	e0ab      	b.n	6a72 <_svfprintf_r+0x5e6>
    691a:	06e3      	lsls	r3, r4, #27
    691c:	d501      	bpl.n	6922 <_svfprintf_r+0x496>
    691e:	f000 fc07 	bl	7130 <_svfprintf_r+0xca4>
    6922:	0663      	lsls	r3, r4, #25
    6924:	d401      	bmi.n	692a <_svfprintf_r+0x49e>
    6926:	f000 fc03 	bl	7130 <_svfprintf_r+0xca4>
    692a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    692c:	881a      	ldrh	r2, [r3, #0]
    692e:	920c      	str	r2, [sp, #48]	; 0x30
    6930:	2200      	movs	r2, #0
    6932:	3304      	adds	r3, #4
    6934:	920d      	str	r2, [sp, #52]	; 0x34
    6936:	930f      	str	r3, [sp, #60]	; 0x3c
    6938:	07e3      	lsls	r3, r4, #31
    693a:	d400      	bmi.n	693e <_svfprintf_r+0x4b2>
    693c:	e0a9      	b.n	6a92 <_svfprintf_r+0x606>
    693e:	990c      	ldr	r1, [sp, #48]	; 0x30
    6940:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6942:	000b      	movs	r3, r1
    6944:	4313      	orrs	r3, r2
    6946:	001a      	movs	r2, r3
    6948:	2302      	movs	r3, #2
    694a:	2a00      	cmp	r2, #0
    694c:	d100      	bne.n	6950 <_svfprintf_r+0x4c4>
    694e:	e786      	b.n	685e <_svfprintf_r+0x3d2>
    6950:	2030      	movs	r0, #48	; 0x30
    6952:	a91e      	add	r1, sp, #120	; 0x78
    6954:	7008      	strb	r0, [r1, #0]
    6956:	2548      	movs	r5, #72	; 0x48
    6958:	4668      	mov	r0, sp
    695a:	1940      	adds	r0, r0, r5
    695c:	7800      	ldrb	r0, [r0, #0]
    695e:	431c      	orrs	r4, r3
    6960:	7048      	strb	r0, [r1, #1]
    6962:	e77c      	b.n	685e <_svfprintf_r+0x3d2>
    6964:	468b      	mov	fp, r1
    6966:	4641      	mov	r1, r8
    6968:	2900      	cmp	r1, #0
    696a:	d001      	beq.n	6970 <_svfprintf_r+0x4e4>
    696c:	f001 f883 	bl	7a76 <_svfprintf_r+0x15ea>
    6970:	06a3      	lsls	r3, r4, #26
    6972:	d501      	bpl.n	6978 <_svfprintf_r+0x4ec>
    6974:	f000 fde9 	bl	754a <_svfprintf_r+0x10be>
    6978:	06e3      	lsls	r3, r4, #27
    697a:	d501      	bpl.n	6980 <_svfprintf_r+0x4f4>
    697c:	f000 fd9b 	bl	74b6 <_svfprintf_r+0x102a>
    6980:	0663      	lsls	r3, r4, #25
    6982:	d401      	bmi.n	6988 <_svfprintf_r+0x4fc>
    6984:	f000 fd97 	bl	74b6 <_svfprintf_r+0x102a>
    6988:	4669      	mov	r1, sp
    698a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    698c:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    698e:	681a      	ldr	r2, [r3, #0]
    6990:	3304      	adds	r3, #4
    6992:	9207      	str	r2, [sp, #28]
    6994:	8011      	strh	r1, [r2, #0]
    6996:	930f      	str	r3, [sp, #60]	; 0x3c
    6998:	e5a3      	b.n	64e2 <_svfprintf_r+0x56>
    699a:	464b      	mov	r3, r9
    699c:	431c      	orrs	r4, r3
    699e:	780b      	ldrb	r3, [r1, #0]
    69a0:	e5d8      	b.n	6554 <_svfprintf_r+0xc8>
    69a2:	9312      	str	r3, [sp, #72]	; 0x48
    69a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    69a6:	468b      	mov	fp, r1
    69a8:	1d1d      	adds	r5, r3, #4
    69aa:	681b      	ldr	r3, [r3, #0]
    69ac:	a916      	add	r1, sp, #88	; 0x58
    69ae:	001a      	movs	r2, r3
    69b0:	9311      	str	r3, [sp, #68]	; 0x44
    69b2:	2300      	movs	r3, #0
    69b4:	77cb      	strb	r3, [r1, #31]
    69b6:	2a00      	cmp	r2, #0
    69b8:	d101      	bne.n	69be <_svfprintf_r+0x532>
    69ba:	f000 fefb 	bl	77b4 <_svfprintf_r+0x1328>
    69be:	4653      	mov	r3, sl
    69c0:	3301      	adds	r3, #1
    69c2:	d101      	bne.n	69c8 <_svfprintf_r+0x53c>
    69c4:	f000 fe38 	bl	7638 <_svfprintf_r+0x11ac>
    69c8:	4652      	mov	r2, sl
    69ca:	2100      	movs	r1, #0
    69cc:	9811      	ldr	r0, [sp, #68]	; 0x44
    69ce:	f003 fc51 	bl	a274 <memchr>
    69d2:	2800      	cmp	r0, #0
    69d4:	d101      	bne.n	69da <_svfprintf_r+0x54e>
    69d6:	f000 ff54 	bl	7882 <_svfprintf_r+0x13f6>
    69da:	9b11      	ldr	r3, [sp, #68]	; 0x44
    69dc:	1ac3      	subs	r3, r0, r3
    69de:	001a      	movs	r2, r3
    69e0:	930e      	str	r3, [sp, #56]	; 0x38
    69e2:	43db      	mvns	r3, r3
    69e4:	17db      	asrs	r3, r3, #31
    69e6:	401a      	ands	r2, r3
    69e8:	ab16      	add	r3, sp, #88	; 0x58
    69ea:	7fdb      	ldrb	r3, [r3, #31]
    69ec:	9207      	str	r2, [sp, #28]
    69ee:	4698      	mov	r8, r3
    69f0:	2300      	movs	r3, #0
    69f2:	950f      	str	r5, [sp, #60]	; 0x3c
    69f4:	9408      	str	r4, [sp, #32]
    69f6:	469a      	mov	sl, r3
    69f8:	9313      	str	r3, [sp, #76]	; 0x4c
    69fa:	e65f      	b.n	66bc <_svfprintf_r+0x230>
    69fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    69fe:	9312      	str	r3, [sp, #72]	; 0x48
    6a00:	6813      	ldr	r3, [r2, #0]
    6a02:	ad28      	add	r5, sp, #160	; 0xa0
    6a04:	9307      	str	r3, [sp, #28]
    6a06:	466b      	mov	r3, sp
    6a08:	7f1b      	ldrb	r3, [r3, #28]
    6a0a:	468b      	mov	fp, r1
    6a0c:	702b      	strb	r3, [r5, #0]
    6a0e:	2300      	movs	r3, #0
    6a10:	a916      	add	r1, sp, #88	; 0x58
    6a12:	77cb      	strb	r3, [r1, #31]
    6a14:	0013      	movs	r3, r2
    6a16:	3304      	adds	r3, #4
    6a18:	930f      	str	r3, [sp, #60]	; 0x3c
    6a1a:	2300      	movs	r3, #0
    6a1c:	9408      	str	r4, [sp, #32]
    6a1e:	4698      	mov	r8, r3
    6a20:	3301      	adds	r3, #1
    6a22:	9307      	str	r3, [sp, #28]
    6a24:	930e      	str	r3, [sp, #56]	; 0x38
    6a26:	2300      	movs	r3, #0
    6a28:	9511      	str	r5, [sp, #68]	; 0x44
    6a2a:	469a      	mov	sl, r3
    6a2c:	9313      	str	r3, [sp, #76]	; 0x4c
    6a2e:	e64b      	b.n	66c8 <_svfprintf_r+0x23c>
    6a30:	468b      	mov	fp, r1
    6a32:	4641      	mov	r1, r8
    6a34:	9312      	str	r3, [sp, #72]	; 0x48
    6a36:	2900      	cmp	r1, #0
    6a38:	d100      	bne.n	6a3c <_svfprintf_r+0x5b0>
    6a3a:	e5f4      	b.n	6626 <_svfprintf_r+0x19a>
    6a3c:	ab16      	add	r3, sp, #88	; 0x58
    6a3e:	77d8      	strb	r0, [r3, #31]
    6a40:	e5f1      	b.n	6626 <_svfprintf_r+0x19a>
    6a42:	4663      	mov	r3, ip
    6a44:	431c      	orrs	r4, r3
    6a46:	780b      	ldrb	r3, [r1, #0]
    6a48:	e584      	b.n	6554 <_svfprintf_r+0xc8>
    6a4a:	780b      	ldrb	r3, [r1, #0]
    6a4c:	2b6c      	cmp	r3, #108	; 0x6c
    6a4e:	d101      	bne.n	6a54 <_svfprintf_r+0x5c8>
    6a50:	f000 fd86 	bl	7560 <_svfprintf_r+0x10d4>
    6a54:	2210      	movs	r2, #16
    6a56:	4314      	orrs	r4, r2
    6a58:	e57c      	b.n	6554 <_svfprintf_r+0xc8>
    6a5a:	468b      	mov	fp, r1
    6a5c:	4641      	mov	r1, r8
    6a5e:	9312      	str	r3, [sp, #72]	; 0x48
    6a60:	2900      	cmp	r1, #0
    6a62:	d001      	beq.n	6a68 <_svfprintf_r+0x5dc>
    6a64:	f000 ffe8 	bl	7a38 <_svfprintf_r+0x15ac>
    6a68:	4b63      	ldr	r3, [pc, #396]	; (6bf8 <_svfprintf_r+0x76c>)
    6a6a:	9317      	str	r3, [sp, #92]	; 0x5c
    6a6c:	06a3      	lsls	r3, r4, #26
    6a6e:	d400      	bmi.n	6a72 <_svfprintf_r+0x5e6>
    6a70:	e753      	b.n	691a <_svfprintf_r+0x48e>
    6a72:	2207      	movs	r2, #7
    6a74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6a76:	3307      	adds	r3, #7
    6a78:	4393      	bics	r3, r2
    6a7a:	3201      	adds	r2, #1
    6a7c:	4694      	mov	ip, r2
    6a7e:	449c      	add	ip, r3
    6a80:	4662      	mov	r2, ip
    6a82:	920f      	str	r2, [sp, #60]	; 0x3c
    6a84:	681a      	ldr	r2, [r3, #0]
    6a86:	685b      	ldr	r3, [r3, #4]
    6a88:	920c      	str	r2, [sp, #48]	; 0x30
    6a8a:	930d      	str	r3, [sp, #52]	; 0x34
    6a8c:	07e3      	lsls	r3, r4, #31
    6a8e:	d500      	bpl.n	6a92 <_svfprintf_r+0x606>
    6a90:	e755      	b.n	693e <_svfprintf_r+0x4b2>
    6a92:	990c      	ldr	r1, [sp, #48]	; 0x30
    6a94:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6a96:	0008      	movs	r0, r1
    6a98:	4310      	orrs	r0, r2
    6a9a:	2302      	movs	r3, #2
    6a9c:	0002      	movs	r2, r0
    6a9e:	e6de      	b.n	685e <_svfprintf_r+0x3d2>
    6aa0:	468b      	mov	fp, r1
    6aa2:	990f      	ldr	r1, [sp, #60]	; 0x3c
    6aa4:	2230      	movs	r2, #48	; 0x30
    6aa6:	680b      	ldr	r3, [r1, #0]
    6aa8:	930c      	str	r3, [sp, #48]	; 0x30
    6aaa:	2300      	movs	r3, #0
    6aac:	930d      	str	r3, [sp, #52]	; 0x34
    6aae:	3302      	adds	r3, #2
    6ab0:	431c      	orrs	r4, r3
    6ab2:	ab1e      	add	r3, sp, #120	; 0x78
    6ab4:	701a      	strb	r2, [r3, #0]
    6ab6:	3248      	adds	r2, #72	; 0x48
    6ab8:	705a      	strb	r2, [r3, #1]
    6aba:	000b      	movs	r3, r1
    6abc:	3304      	adds	r3, #4
    6abe:	930f      	str	r3, [sp, #60]	; 0x3c
    6ac0:	4b4d      	ldr	r3, [pc, #308]	; (6bf8 <_svfprintf_r+0x76c>)
    6ac2:	9212      	str	r2, [sp, #72]	; 0x48
    6ac4:	9317      	str	r3, [sp, #92]	; 0x5c
    6ac6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    6ac8:	2302      	movs	r3, #2
    6aca:	e6c8      	b.n	685e <_svfprintf_r+0x3d2>
    6acc:	2301      	movs	r3, #1
    6ace:	431c      	orrs	r4, r3
    6ad0:	780b      	ldrb	r3, [r1, #0]
    6ad2:	e53f      	b.n	6554 <_svfprintf_r+0xc8>
    6ad4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6ad6:	1d1a      	adds	r2, r3, #4
    6ad8:	681b      	ldr	r3, [r3, #0]
    6ada:	930b      	str	r3, [sp, #44]	; 0x2c
    6adc:	2b00      	cmp	r3, #0
    6ade:	da00      	bge.n	6ae2 <_svfprintf_r+0x656>
    6ae0:	e542      	b.n	6568 <_svfprintf_r+0xdc>
    6ae2:	780b      	ldrb	r3, [r1, #0]
    6ae4:	920f      	str	r2, [sp, #60]	; 0x3c
    6ae6:	e535      	b.n	6554 <_svfprintf_r+0xc8>
    6ae8:	780b      	ldrb	r3, [r1, #0]
    6aea:	2800      	cmp	r0, #0
    6aec:	d000      	beq.n	6af0 <_svfprintf_r+0x664>
    6aee:	e531      	b.n	6554 <_svfprintf_r+0xc8>
    6af0:	2201      	movs	r2, #1
    6af2:	3020      	adds	r0, #32
    6af4:	4690      	mov	r8, r2
    6af6:	e52d      	b.n	6554 <_svfprintf_r+0xc8>
    6af8:	468b      	mov	fp, r1
    6afa:	9312      	str	r3, [sp, #72]	; 0x48
    6afc:	06a3      	lsls	r3, r4, #26
    6afe:	d400      	bmi.n	6b02 <_svfprintf_r+0x676>
    6b00:	e6ed      	b.n	68de <_svfprintf_r+0x452>
    6b02:	2207      	movs	r2, #7
    6b04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6b06:	3307      	adds	r3, #7
    6b08:	4393      	bics	r3, r2
    6b0a:	3201      	adds	r2, #1
    6b0c:	4694      	mov	ip, r2
    6b0e:	449c      	add	ip, r3
    6b10:	4662      	mov	r2, ip
    6b12:	920f      	str	r2, [sp, #60]	; 0x3c
    6b14:	681a      	ldr	r2, [r3, #0]
    6b16:	685b      	ldr	r3, [r3, #4]
    6b18:	0011      	movs	r1, r2
    6b1a:	001a      	movs	r2, r3
    6b1c:	0008      	movs	r0, r1
    6b1e:	4310      	orrs	r0, r2
    6b20:	910c      	str	r1, [sp, #48]	; 0x30
    6b22:	920d      	str	r2, [sp, #52]	; 0x34
    6b24:	2301      	movs	r3, #1
    6b26:	0002      	movs	r2, r0
    6b28:	e699      	b.n	685e <_svfprintf_r+0x3d2>
    6b2a:	468b      	mov	fp, r1
    6b2c:	9312      	str	r3, [sp, #72]	; 0x48
    6b2e:	06a3      	lsls	r3, r4, #26
    6b30:	d400      	bmi.n	6b34 <_svfprintf_r+0x6a8>
    6b32:	e683      	b.n	683c <_svfprintf_r+0x3b0>
    6b34:	2207      	movs	r2, #7
    6b36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6b38:	3307      	adds	r3, #7
    6b3a:	4393      	bics	r3, r2
    6b3c:	3201      	adds	r2, #1
    6b3e:	4694      	mov	ip, r2
    6b40:	449c      	add	ip, r3
    6b42:	4662      	mov	r2, ip
    6b44:	920f      	str	r2, [sp, #60]	; 0x3c
    6b46:	681a      	ldr	r2, [r3, #0]
    6b48:	685b      	ldr	r3, [r3, #4]
    6b4a:	0011      	movs	r1, r2
    6b4c:	001a      	movs	r2, r3
    6b4e:	0008      	movs	r0, r1
    6b50:	4310      	orrs	r0, r2
    6b52:	910c      	str	r1, [sp, #48]	; 0x30
    6b54:	920d      	str	r2, [sp, #52]	; 0x34
    6b56:	2300      	movs	r3, #0
    6b58:	0002      	movs	r2, r0
    6b5a:	e680      	b.n	685e <_svfprintf_r+0x3d2>
    6b5c:	468b      	mov	fp, r1
    6b5e:	4641      	mov	r1, r8
    6b60:	9312      	str	r3, [sp, #72]	; 0x48
    6b62:	2900      	cmp	r1, #0
    6b64:	d001      	beq.n	6b6a <_svfprintf_r+0x6de>
    6b66:	f000 ff7f 	bl	7a68 <_svfprintf_r+0x15dc>
    6b6a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6b6c:	2b00      	cmp	r3, #0
    6b6e:	d100      	bne.n	6b72 <_svfprintf_r+0x6e6>
    6b70:	e50b      	b.n	658a <_svfprintf_r+0xfe>
    6b72:	ad28      	add	r5, sp, #160	; 0xa0
    6b74:	702b      	strb	r3, [r5, #0]
    6b76:	2300      	movs	r3, #0
    6b78:	aa16      	add	r2, sp, #88	; 0x58
    6b7a:	77d3      	strb	r3, [r2, #31]
    6b7c:	9408      	str	r4, [sp, #32]
    6b7e:	e74e      	b.n	6a1e <_svfprintf_r+0x592>
    6b80:	68bc      	ldr	r4, [r7, #8]
    6b82:	4643      	mov	r3, r8
    6b84:	2b00      	cmp	r3, #0
    6b86:	d00f      	beq.n	6ba8 <_svfprintf_r+0x71c>
    6b88:	aa16      	add	r2, sp, #88	; 0x58
    6b8a:	231f      	movs	r3, #31
    6b8c:	4694      	mov	ip, r2
    6b8e:	4463      	add	r3, ip
    6b90:	6033      	str	r3, [r6, #0]
    6b92:	2301      	movs	r3, #1
    6b94:	6073      	str	r3, [r6, #4]
    6b96:	687b      	ldr	r3, [r7, #4]
    6b98:	3401      	adds	r4, #1
    6b9a:	3301      	adds	r3, #1
    6b9c:	60bc      	str	r4, [r7, #8]
    6b9e:	607b      	str	r3, [r7, #4]
    6ba0:	2b07      	cmp	r3, #7
    6ba2:	dd00      	ble.n	6ba6 <_svfprintf_r+0x71a>
    6ba4:	e1b3      	b.n	6f0e <_svfprintf_r+0xa82>
    6ba6:	3608      	adds	r6, #8
    6ba8:	464b      	mov	r3, r9
    6baa:	2b00      	cmp	r3, #0
    6bac:	d00c      	beq.n	6bc8 <_svfprintf_r+0x73c>
    6bae:	ab1e      	add	r3, sp, #120	; 0x78
    6bb0:	6033      	str	r3, [r6, #0]
    6bb2:	2302      	movs	r3, #2
    6bb4:	6073      	str	r3, [r6, #4]
    6bb6:	687b      	ldr	r3, [r7, #4]
    6bb8:	3402      	adds	r4, #2
    6bba:	3301      	adds	r3, #1
    6bbc:	60bc      	str	r4, [r7, #8]
    6bbe:	607b      	str	r3, [r7, #4]
    6bc0:	2b07      	cmp	r3, #7
    6bc2:	dd00      	ble.n	6bc6 <_svfprintf_r+0x73a>
    6bc4:	e1af      	b.n	6f26 <_svfprintf_r+0xa9a>
    6bc6:	3608      	adds	r6, #8
    6bc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6bca:	2b80      	cmp	r3, #128	; 0x80
    6bcc:	d100      	bne.n	6bd0 <_svfprintf_r+0x744>
    6bce:	e120      	b.n	6e12 <_svfprintf_r+0x986>
    6bd0:	4653      	mov	r3, sl
    6bd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    6bd4:	1a9d      	subs	r5, r3, r2
    6bd6:	2d00      	cmp	r5, #0
    6bd8:	dd3c      	ble.n	6c54 <_svfprintf_r+0x7c8>
    6bda:	4a08      	ldr	r2, [pc, #32]	; (6bfc <_svfprintf_r+0x770>)
    6bdc:	687b      	ldr	r3, [r7, #4]
    6bde:	4691      	mov	r9, r2
    6be0:	2d10      	cmp	r5, #16
    6be2:	dd2c      	ble.n	6c3e <_svfprintf_r+0x7b2>
    6be4:	2210      	movs	r2, #16
    6be6:	0021      	movs	r1, r4
    6be8:	4692      	mov	sl, r2
    6bea:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6bec:	0032      	movs	r2, r6
    6bee:	002e      	movs	r6, r5
    6bf0:	464d      	mov	r5, r9
    6bf2:	e009      	b.n	6c08 <_svfprintf_r+0x77c>
    6bf4:	00010224 	.word	0x00010224
    6bf8:	00010238 	.word	0x00010238
    6bfc:	00010268 	.word	0x00010268
    6c00:	3e10      	subs	r6, #16
    6c02:	3208      	adds	r2, #8
    6c04:	2e10      	cmp	r6, #16
    6c06:	dd16      	ble.n	6c36 <_svfprintf_r+0x7aa>
    6c08:	4650      	mov	r0, sl
    6c0a:	3110      	adds	r1, #16
    6c0c:	3301      	adds	r3, #1
    6c0e:	6015      	str	r5, [r2, #0]
    6c10:	6050      	str	r0, [r2, #4]
    6c12:	60b9      	str	r1, [r7, #8]
    6c14:	607b      	str	r3, [r7, #4]
    6c16:	2b07      	cmp	r3, #7
    6c18:	ddf2      	ble.n	6c00 <_svfprintf_r+0x774>
    6c1a:	003a      	movs	r2, r7
    6c1c:	9906      	ldr	r1, [sp, #24]
    6c1e:	0020      	movs	r0, r4
    6c20:	f005 fb0c 	bl	c23c <__ssprint_r>
    6c24:	2800      	cmp	r0, #0
    6c26:	d000      	beq.n	6c2a <_svfprintf_r+0x79e>
    6c28:	e4b7      	b.n	659a <_svfprintf_r+0x10e>
    6c2a:	3e10      	subs	r6, #16
    6c2c:	68b9      	ldr	r1, [r7, #8]
    6c2e:	687b      	ldr	r3, [r7, #4]
    6c30:	aa32      	add	r2, sp, #200	; 0xc8
    6c32:	2e10      	cmp	r6, #16
    6c34:	dce8      	bgt.n	6c08 <_svfprintf_r+0x77c>
    6c36:	46a9      	mov	r9, r5
    6c38:	000c      	movs	r4, r1
    6c3a:	0035      	movs	r5, r6
    6c3c:	0016      	movs	r6, r2
    6c3e:	464a      	mov	r2, r9
    6c40:	1964      	adds	r4, r4, r5
    6c42:	3301      	adds	r3, #1
    6c44:	6032      	str	r2, [r6, #0]
    6c46:	6075      	str	r5, [r6, #4]
    6c48:	60bc      	str	r4, [r7, #8]
    6c4a:	607b      	str	r3, [r7, #4]
    6c4c:	2b07      	cmp	r3, #7
    6c4e:	dd00      	ble.n	6c52 <_svfprintf_r+0x7c6>
    6c50:	e151      	b.n	6ef6 <_svfprintf_r+0xa6a>
    6c52:	3608      	adds	r6, #8
    6c54:	9b08      	ldr	r3, [sp, #32]
    6c56:	05db      	lsls	r3, r3, #23
    6c58:	d500      	bpl.n	6c5c <_svfprintf_r+0x7d0>
    6c5a:	e0b6      	b.n	6dca <_svfprintf_r+0x93e>
    6c5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6c5e:	6033      	str	r3, [r6, #0]
    6c60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6c62:	469c      	mov	ip, r3
    6c64:	6073      	str	r3, [r6, #4]
    6c66:	687b      	ldr	r3, [r7, #4]
    6c68:	4464      	add	r4, ip
    6c6a:	3301      	adds	r3, #1
    6c6c:	60bc      	str	r4, [r7, #8]
    6c6e:	607b      	str	r3, [r7, #4]
    6c70:	2b07      	cmp	r3, #7
    6c72:	dd00      	ble.n	6c76 <_svfprintf_r+0x7ea>
    6c74:	e09d      	b.n	6db2 <_svfprintf_r+0x926>
    6c76:	3608      	adds	r6, #8
    6c78:	9b08      	ldr	r3, [sp, #32]
    6c7a:	075b      	lsls	r3, r3, #29
    6c7c:	d541      	bpl.n	6d02 <_svfprintf_r+0x876>
    6c7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6c80:	9a07      	ldr	r2, [sp, #28]
    6c82:	1a9d      	subs	r5, r3, r2
    6c84:	2d00      	cmp	r5, #0
    6c86:	dd3c      	ble.n	6d02 <_svfprintf_r+0x876>
    6c88:	4ac4      	ldr	r2, [pc, #784]	; (6f9c <_svfprintf_r+0xb10>)
    6c8a:	687b      	ldr	r3, [r7, #4]
    6c8c:	4690      	mov	r8, r2
    6c8e:	2d10      	cmp	r5, #16
    6c90:	dd26      	ble.n	6ce0 <_svfprintf_r+0x854>
    6c92:	2210      	movs	r2, #16
    6c94:	0021      	movs	r1, r4
    6c96:	4691      	mov	r9, r2
    6c98:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6c9a:	0032      	movs	r2, r6
    6c9c:	002e      	movs	r6, r5
    6c9e:	9d06      	ldr	r5, [sp, #24]
    6ca0:	e003      	b.n	6caa <_svfprintf_r+0x81e>
    6ca2:	3e10      	subs	r6, #16
    6ca4:	3208      	adds	r2, #8
    6ca6:	2e10      	cmp	r6, #16
    6ca8:	dd17      	ble.n	6cda <_svfprintf_r+0x84e>
    6caa:	48bc      	ldr	r0, [pc, #752]	; (6f9c <_svfprintf_r+0xb10>)
    6cac:	3110      	adds	r1, #16
    6cae:	6010      	str	r0, [r2, #0]
    6cb0:	4648      	mov	r0, r9
    6cb2:	3301      	adds	r3, #1
    6cb4:	6050      	str	r0, [r2, #4]
    6cb6:	60b9      	str	r1, [r7, #8]
    6cb8:	607b      	str	r3, [r7, #4]
    6cba:	2b07      	cmp	r3, #7
    6cbc:	ddf1      	ble.n	6ca2 <_svfprintf_r+0x816>
    6cbe:	003a      	movs	r2, r7
    6cc0:	0029      	movs	r1, r5
    6cc2:	0020      	movs	r0, r4
    6cc4:	f005 faba 	bl	c23c <__ssprint_r>
    6cc8:	2800      	cmp	r0, #0
    6cca:	d000      	beq.n	6cce <_svfprintf_r+0x842>
    6ccc:	e465      	b.n	659a <_svfprintf_r+0x10e>
    6cce:	3e10      	subs	r6, #16
    6cd0:	68b9      	ldr	r1, [r7, #8]
    6cd2:	687b      	ldr	r3, [r7, #4]
    6cd4:	aa32      	add	r2, sp, #200	; 0xc8
    6cd6:	2e10      	cmp	r6, #16
    6cd8:	dce7      	bgt.n	6caa <_svfprintf_r+0x81e>
    6cda:	0035      	movs	r5, r6
    6cdc:	000c      	movs	r4, r1
    6cde:	0016      	movs	r6, r2
    6ce0:	4642      	mov	r2, r8
    6ce2:	1964      	adds	r4, r4, r5
    6ce4:	3301      	adds	r3, #1
    6ce6:	c624      	stmia	r6!, {r2, r5}
    6ce8:	60bc      	str	r4, [r7, #8]
    6cea:	607b      	str	r3, [r7, #4]
    6cec:	2b07      	cmp	r3, #7
    6cee:	dd08      	ble.n	6d02 <_svfprintf_r+0x876>
    6cf0:	003a      	movs	r2, r7
    6cf2:	9906      	ldr	r1, [sp, #24]
    6cf4:	9809      	ldr	r0, [sp, #36]	; 0x24
    6cf6:	f005 faa1 	bl	c23c <__ssprint_r>
    6cfa:	2800      	cmp	r0, #0
    6cfc:	d000      	beq.n	6d00 <_svfprintf_r+0x874>
    6cfe:	e44c      	b.n	659a <_svfprintf_r+0x10e>
    6d00:	68bc      	ldr	r4, [r7, #8]
    6d02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6d04:	9907      	ldr	r1, [sp, #28]
    6d06:	428b      	cmp	r3, r1
    6d08:	da00      	bge.n	6d0c <_svfprintf_r+0x880>
    6d0a:	000b      	movs	r3, r1
    6d0c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6d0e:	4694      	mov	ip, r2
    6d10:	449c      	add	ip, r3
    6d12:	4663      	mov	r3, ip
    6d14:	930a      	str	r3, [sp, #40]	; 0x28
    6d16:	2c00      	cmp	r4, #0
    6d18:	d000      	beq.n	6d1c <_svfprintf_r+0x890>
    6d1a:	e0d6      	b.n	6eca <_svfprintf_r+0xa3e>
    6d1c:	2300      	movs	r3, #0
    6d1e:	ae32      	add	r6, sp, #200	; 0xc8
    6d20:	607b      	str	r3, [r7, #4]
    6d22:	f7ff fbde 	bl	64e2 <_svfprintf_r+0x56>
    6d26:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6d28:	2b01      	cmp	r3, #1
    6d2a:	dc00      	bgt.n	6d2e <_svfprintf_r+0x8a2>
    6d2c:	e0ae      	b.n	6e8c <_svfprintf_r+0xa00>
    6d2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6d30:	3401      	adds	r4, #1
    6d32:	6033      	str	r3, [r6, #0]
    6d34:	2301      	movs	r3, #1
    6d36:	6073      	str	r3, [r6, #4]
    6d38:	687b      	ldr	r3, [r7, #4]
    6d3a:	60bc      	str	r4, [r7, #8]
    6d3c:	3301      	adds	r3, #1
    6d3e:	607b      	str	r3, [r7, #4]
    6d40:	2b07      	cmp	r3, #7
    6d42:	dd00      	ble.n	6d46 <_svfprintf_r+0x8ba>
    6d44:	e2df      	b.n	7306 <_svfprintf_r+0xe7a>
    6d46:	3608      	adds	r6, #8
    6d48:	9a19      	ldr	r2, [sp, #100]	; 0x64
    6d4a:	3301      	adds	r3, #1
    6d4c:	6032      	str	r2, [r6, #0]
    6d4e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    6d50:	4698      	mov	r8, r3
    6d52:	4694      	mov	ip, r2
    6d54:	4464      	add	r4, ip
    6d56:	6072      	str	r2, [r6, #4]
    6d58:	60bc      	str	r4, [r7, #8]
    6d5a:	607b      	str	r3, [r7, #4]
    6d5c:	2b07      	cmp	r3, #7
    6d5e:	dd00      	ble.n	6d62 <_svfprintf_r+0x8d6>
    6d60:	e2de      	b.n	7320 <_svfprintf_r+0xe94>
    6d62:	3608      	adds	r6, #8
    6d64:	2200      	movs	r2, #0
    6d66:	2300      	movs	r3, #0
    6d68:	9816      	ldr	r0, [sp, #88]	; 0x58
    6d6a:	9915      	ldr	r1, [sp, #84]	; 0x54
    6d6c:	f7fe fd48 	bl	5800 <__aeabi_dcmpeq>
    6d70:	2800      	cmp	r0, #0
    6d72:	d000      	beq.n	6d76 <_svfprintf_r+0x8ea>
    6d74:	e1a4      	b.n	70c0 <_svfprintf_r+0xc34>
    6d76:	9d11      	ldr	r5, [sp, #68]	; 0x44
    6d78:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6d7a:	3501      	adds	r5, #1
    6d7c:	3b01      	subs	r3, #1
    6d7e:	6035      	str	r5, [r6, #0]
    6d80:	6073      	str	r3, [r6, #4]
    6d82:	18e4      	adds	r4, r4, r3
    6d84:	2301      	movs	r3, #1
    6d86:	469c      	mov	ip, r3
    6d88:	44e0      	add	r8, ip
    6d8a:	4643      	mov	r3, r8
    6d8c:	60bc      	str	r4, [r7, #8]
    6d8e:	607b      	str	r3, [r7, #4]
    6d90:	2b07      	cmp	r3, #7
    6d92:	dd00      	ble.n	6d96 <_svfprintf_r+0x90a>
    6d94:	e08b      	b.n	6eae <_svfprintf_r+0xa22>
    6d96:	3608      	adds	r6, #8
    6d98:	ab21      	add	r3, sp, #132	; 0x84
    6d9a:	6033      	str	r3, [r6, #0]
    6d9c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    6d9e:	469c      	mov	ip, r3
    6da0:	6073      	str	r3, [r6, #4]
    6da2:	4643      	mov	r3, r8
    6da4:	4464      	add	r4, ip
    6da6:	3301      	adds	r3, #1
    6da8:	60bc      	str	r4, [r7, #8]
    6daa:	607b      	str	r3, [r7, #4]
    6dac:	2b07      	cmp	r3, #7
    6dae:	dc00      	bgt.n	6db2 <_svfprintf_r+0x926>
    6db0:	e761      	b.n	6c76 <_svfprintf_r+0x7ea>
    6db2:	003a      	movs	r2, r7
    6db4:	9906      	ldr	r1, [sp, #24]
    6db6:	9809      	ldr	r0, [sp, #36]	; 0x24
    6db8:	f005 fa40 	bl	c23c <__ssprint_r>
    6dbc:	2800      	cmp	r0, #0
    6dbe:	d001      	beq.n	6dc4 <_svfprintf_r+0x938>
    6dc0:	f7ff fbeb 	bl	659a <_svfprintf_r+0x10e>
    6dc4:	68bc      	ldr	r4, [r7, #8]
    6dc6:	ae32      	add	r6, sp, #200	; 0xc8
    6dc8:	e756      	b.n	6c78 <_svfprintf_r+0x7ec>
    6dca:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6dcc:	2b65      	cmp	r3, #101	; 0x65
    6dce:	ddaa      	ble.n	6d26 <_svfprintf_r+0x89a>
    6dd0:	2200      	movs	r2, #0
    6dd2:	2300      	movs	r3, #0
    6dd4:	9816      	ldr	r0, [sp, #88]	; 0x58
    6dd6:	9915      	ldr	r1, [sp, #84]	; 0x54
    6dd8:	f7fe fd12 	bl	5800 <__aeabi_dcmpeq>
    6ddc:	2800      	cmp	r0, #0
    6dde:	d100      	bne.n	6de2 <_svfprintf_r+0x956>
    6de0:	e0e2      	b.n	6fa8 <_svfprintf_r+0xb1c>
    6de2:	4b6f      	ldr	r3, [pc, #444]	; (6fa0 <_svfprintf_r+0xb14>)
    6de4:	3401      	adds	r4, #1
    6de6:	6033      	str	r3, [r6, #0]
    6de8:	2301      	movs	r3, #1
    6dea:	6073      	str	r3, [r6, #4]
    6dec:	687b      	ldr	r3, [r7, #4]
    6dee:	60bc      	str	r4, [r7, #8]
    6df0:	3301      	adds	r3, #1
    6df2:	607b      	str	r3, [r7, #4]
    6df4:	2b07      	cmp	r3, #7
    6df6:	dd00      	ble.n	6dfa <_svfprintf_r+0x96e>
    6df8:	e366      	b.n	74c8 <_svfprintf_r+0x103c>
    6dfa:	3608      	adds	r6, #8
    6dfc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6dfe:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6e00:	4293      	cmp	r3, r2
    6e02:	da00      	bge.n	6e06 <_svfprintf_r+0x97a>
    6e04:	e1a4      	b.n	7150 <_svfprintf_r+0xcc4>
    6e06:	9b08      	ldr	r3, [sp, #32]
    6e08:	07db      	lsls	r3, r3, #31
    6e0a:	d500      	bpl.n	6e0e <_svfprintf_r+0x982>
    6e0c:	e1a0      	b.n	7150 <_svfprintf_r+0xcc4>
    6e0e:	68bc      	ldr	r4, [r7, #8]
    6e10:	e732      	b.n	6c78 <_svfprintf_r+0x7ec>
    6e12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6e14:	9a07      	ldr	r2, [sp, #28]
    6e16:	1a9d      	subs	r5, r3, r2
    6e18:	2d00      	cmp	r5, #0
    6e1a:	dc00      	bgt.n	6e1e <_svfprintf_r+0x992>
    6e1c:	e6d8      	b.n	6bd0 <_svfprintf_r+0x744>
    6e1e:	4a61      	ldr	r2, [pc, #388]	; (6fa4 <_svfprintf_r+0xb18>)
    6e20:	687b      	ldr	r3, [r7, #4]
    6e22:	4691      	mov	r9, r2
    6e24:	2d10      	cmp	r5, #16
    6e26:	dd25      	ble.n	6e74 <_svfprintf_r+0x9e8>
    6e28:	2210      	movs	r2, #16
    6e2a:	0021      	movs	r1, r4
    6e2c:	4690      	mov	r8, r2
    6e2e:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6e30:	0032      	movs	r2, r6
    6e32:	464e      	mov	r6, r9
    6e34:	e003      	b.n	6e3e <_svfprintf_r+0x9b2>
    6e36:	3d10      	subs	r5, #16
    6e38:	3208      	adds	r2, #8
    6e3a:	2d10      	cmp	r5, #16
    6e3c:	dd17      	ble.n	6e6e <_svfprintf_r+0x9e2>
    6e3e:	4640      	mov	r0, r8
    6e40:	3110      	adds	r1, #16
    6e42:	3301      	adds	r3, #1
    6e44:	6016      	str	r6, [r2, #0]
    6e46:	6050      	str	r0, [r2, #4]
    6e48:	60b9      	str	r1, [r7, #8]
    6e4a:	607b      	str	r3, [r7, #4]
    6e4c:	2b07      	cmp	r3, #7
    6e4e:	ddf2      	ble.n	6e36 <_svfprintf_r+0x9aa>
    6e50:	003a      	movs	r2, r7
    6e52:	9906      	ldr	r1, [sp, #24]
    6e54:	0020      	movs	r0, r4
    6e56:	f005 f9f1 	bl	c23c <__ssprint_r>
    6e5a:	2800      	cmp	r0, #0
    6e5c:	d001      	beq.n	6e62 <_svfprintf_r+0x9d6>
    6e5e:	f7ff fb9c 	bl	659a <_svfprintf_r+0x10e>
    6e62:	3d10      	subs	r5, #16
    6e64:	68b9      	ldr	r1, [r7, #8]
    6e66:	687b      	ldr	r3, [r7, #4]
    6e68:	aa32      	add	r2, sp, #200	; 0xc8
    6e6a:	2d10      	cmp	r5, #16
    6e6c:	dce7      	bgt.n	6e3e <_svfprintf_r+0x9b2>
    6e6e:	46b1      	mov	r9, r6
    6e70:	000c      	movs	r4, r1
    6e72:	0016      	movs	r6, r2
    6e74:	464a      	mov	r2, r9
    6e76:	1964      	adds	r4, r4, r5
    6e78:	3301      	adds	r3, #1
    6e7a:	6032      	str	r2, [r6, #0]
    6e7c:	6075      	str	r5, [r6, #4]
    6e7e:	60bc      	str	r4, [r7, #8]
    6e80:	607b      	str	r3, [r7, #4]
    6e82:	2b07      	cmp	r3, #7
    6e84:	dd00      	ble.n	6e88 <_svfprintf_r+0x9fc>
    6e86:	e27e      	b.n	7386 <_svfprintf_r+0xefa>
    6e88:	3608      	adds	r6, #8
    6e8a:	e6a1      	b.n	6bd0 <_svfprintf_r+0x744>
    6e8c:	2301      	movs	r3, #1
    6e8e:	9a08      	ldr	r2, [sp, #32]
    6e90:	4213      	tst	r3, r2
    6e92:	d000      	beq.n	6e96 <_svfprintf_r+0xa0a>
    6e94:	e74b      	b.n	6d2e <_svfprintf_r+0x8a2>
    6e96:	6073      	str	r3, [r6, #4]
    6e98:	687b      	ldr	r3, [r7, #4]
    6e9a:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6e9c:	3301      	adds	r3, #1
    6e9e:	3401      	adds	r4, #1
    6ea0:	6032      	str	r2, [r6, #0]
    6ea2:	60bc      	str	r4, [r7, #8]
    6ea4:	4698      	mov	r8, r3
    6ea6:	607b      	str	r3, [r7, #4]
    6ea8:	2b07      	cmp	r3, #7
    6eaa:	dc00      	bgt.n	6eae <_svfprintf_r+0xa22>
    6eac:	e773      	b.n	6d96 <_svfprintf_r+0x90a>
    6eae:	003a      	movs	r2, r7
    6eb0:	9906      	ldr	r1, [sp, #24]
    6eb2:	9809      	ldr	r0, [sp, #36]	; 0x24
    6eb4:	f005 f9c2 	bl	c23c <__ssprint_r>
    6eb8:	2800      	cmp	r0, #0
    6eba:	d001      	beq.n	6ec0 <_svfprintf_r+0xa34>
    6ebc:	f7ff fb6d 	bl	659a <_svfprintf_r+0x10e>
    6ec0:	687b      	ldr	r3, [r7, #4]
    6ec2:	68bc      	ldr	r4, [r7, #8]
    6ec4:	4698      	mov	r8, r3
    6ec6:	ae32      	add	r6, sp, #200	; 0xc8
    6ec8:	e766      	b.n	6d98 <_svfprintf_r+0x90c>
    6eca:	003a      	movs	r2, r7
    6ecc:	9906      	ldr	r1, [sp, #24]
    6ece:	9809      	ldr	r0, [sp, #36]	; 0x24
    6ed0:	f005 f9b4 	bl	c23c <__ssprint_r>
    6ed4:	2800      	cmp	r0, #0
    6ed6:	d100      	bne.n	6eda <_svfprintf_r+0xa4e>
    6ed8:	e720      	b.n	6d1c <_svfprintf_r+0x890>
    6eda:	f7ff fb5e 	bl	659a <_svfprintf_r+0x10e>
    6ede:	9c08      	ldr	r4, [sp, #32]
    6ee0:	2b01      	cmp	r3, #1
    6ee2:	d100      	bne.n	6ee6 <_svfprintf_r+0xa5a>
    6ee4:	e184      	b.n	71f0 <_svfprintf_r+0xd64>
    6ee6:	2b02      	cmp	r3, #2
    6ee8:	d129      	bne.n	6f3e <_svfprintf_r+0xab2>
    6eea:	9408      	str	r4, [sp, #32]
    6eec:	2300      	movs	r3, #0
    6eee:	2400      	movs	r4, #0
    6ef0:	930c      	str	r3, [sp, #48]	; 0x30
    6ef2:	940d      	str	r4, [sp, #52]	; 0x34
    6ef4:	e4c5      	b.n	6882 <_svfprintf_r+0x3f6>
    6ef6:	003a      	movs	r2, r7
    6ef8:	9906      	ldr	r1, [sp, #24]
    6efa:	9809      	ldr	r0, [sp, #36]	; 0x24
    6efc:	f005 f99e 	bl	c23c <__ssprint_r>
    6f00:	2800      	cmp	r0, #0
    6f02:	d001      	beq.n	6f08 <_svfprintf_r+0xa7c>
    6f04:	f7ff fb49 	bl	659a <_svfprintf_r+0x10e>
    6f08:	68bc      	ldr	r4, [r7, #8]
    6f0a:	ae32      	add	r6, sp, #200	; 0xc8
    6f0c:	e6a2      	b.n	6c54 <_svfprintf_r+0x7c8>
    6f0e:	003a      	movs	r2, r7
    6f10:	9906      	ldr	r1, [sp, #24]
    6f12:	9809      	ldr	r0, [sp, #36]	; 0x24
    6f14:	f005 f992 	bl	c23c <__ssprint_r>
    6f18:	2800      	cmp	r0, #0
    6f1a:	d001      	beq.n	6f20 <_svfprintf_r+0xa94>
    6f1c:	f7ff fb3d 	bl	659a <_svfprintf_r+0x10e>
    6f20:	68bc      	ldr	r4, [r7, #8]
    6f22:	ae32      	add	r6, sp, #200	; 0xc8
    6f24:	e640      	b.n	6ba8 <_svfprintf_r+0x71c>
    6f26:	003a      	movs	r2, r7
    6f28:	9906      	ldr	r1, [sp, #24]
    6f2a:	9809      	ldr	r0, [sp, #36]	; 0x24
    6f2c:	f005 f986 	bl	c23c <__ssprint_r>
    6f30:	2800      	cmp	r0, #0
    6f32:	d001      	beq.n	6f38 <_svfprintf_r+0xaac>
    6f34:	f7ff fb31 	bl	659a <_svfprintf_r+0x10e>
    6f38:	68bc      	ldr	r4, [r7, #8]
    6f3a:	ae32      	add	r6, sp, #200	; 0xc8
    6f3c:	e644      	b.n	6bc8 <_svfprintf_r+0x73c>
    6f3e:	9408      	str	r4, [sp, #32]
    6f40:	2300      	movs	r3, #0
    6f42:	2400      	movs	r4, #0
    6f44:	930c      	str	r3, [sp, #48]	; 0x30
    6f46:	940d      	str	r4, [sp, #52]	; 0x34
    6f48:	980c      	ldr	r0, [sp, #48]	; 0x30
    6f4a:	990d      	ldr	r1, [sp, #52]	; 0x34
    6f4c:	465b      	mov	r3, fp
    6f4e:	aa32      	add	r2, sp, #200	; 0xc8
    6f50:	9307      	str	r3, [sp, #28]
    6f52:	4691      	mov	r9, r2
    6f54:	46b3      	mov	fp, r6
    6f56:	e000      	b.n	6f5a <_svfprintf_r+0xace>
    6f58:	46a1      	mov	r9, r4
    6f5a:	074a      	lsls	r2, r1, #29
    6f5c:	4694      	mov	ip, r2
    6f5e:	464b      	mov	r3, r9
    6f60:	4665      	mov	r5, ip
    6f62:	1e5c      	subs	r4, r3, #1
    6f64:	08c6      	lsrs	r6, r0, #3
    6f66:	2307      	movs	r3, #7
    6f68:	08ca      	lsrs	r2, r1, #3
    6f6a:	4335      	orrs	r5, r6
    6f6c:	0011      	movs	r1, r2
    6f6e:	002a      	movs	r2, r5
    6f70:	4003      	ands	r3, r0
    6f72:	3330      	adds	r3, #48	; 0x30
    6f74:	7023      	strb	r3, [r4, #0]
    6f76:	0028      	movs	r0, r5
    6f78:	430a      	orrs	r2, r1
    6f7a:	d1ed      	bne.n	6f58 <_svfprintf_r+0xacc>
    6f7c:	900c      	str	r0, [sp, #48]	; 0x30
    6f7e:	910d      	str	r1, [sp, #52]	; 0x34
    6f80:	9907      	ldr	r1, [sp, #28]
    6f82:	465e      	mov	r6, fp
    6f84:	468b      	mov	fp, r1
    6f86:	9908      	ldr	r1, [sp, #32]
    6f88:	464a      	mov	r2, r9
    6f8a:	9411      	str	r4, [sp, #68]	; 0x44
    6f8c:	07c9      	lsls	r1, r1, #31
    6f8e:	d500      	bpl.n	6f92 <_svfprintf_r+0xb06>
    6f90:	e13d      	b.n	720e <_svfprintf_r+0xd82>
    6f92:	ab32      	add	r3, sp, #200	; 0xc8
    6f94:	1b1b      	subs	r3, r3, r4
    6f96:	930e      	str	r3, [sp, #56]	; 0x38
    6f98:	f7ff fb88 	bl	66ac <_svfprintf_r+0x220>
    6f9c:	00010258 	.word	0x00010258
    6fa0:	00010254 	.word	0x00010254
    6fa4:	00010268 	.word	0x00010268
    6fa8:	981f      	ldr	r0, [sp, #124]	; 0x7c
    6faa:	2800      	cmp	r0, #0
    6fac:	dc00      	bgt.n	6fb0 <_svfprintf_r+0xb24>
    6fae:	e296      	b.n	74de <_svfprintf_r+0x1052>
    6fb0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6fb2:	9914      	ldr	r1, [sp, #80]	; 0x50
    6fb4:	0013      	movs	r3, r2
    6fb6:	4690      	mov	r8, r2
    6fb8:	428b      	cmp	r3, r1
    6fba:	dd00      	ble.n	6fbe <_svfprintf_r+0xb32>
    6fbc:	4688      	mov	r8, r1
    6fbe:	4643      	mov	r3, r8
    6fc0:	2b00      	cmp	r3, #0
    6fc2:	dd0c      	ble.n	6fde <_svfprintf_r+0xb52>
    6fc4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6fc6:	4444      	add	r4, r8
    6fc8:	6033      	str	r3, [r6, #0]
    6fca:	4643      	mov	r3, r8
    6fcc:	6073      	str	r3, [r6, #4]
    6fce:	687b      	ldr	r3, [r7, #4]
    6fd0:	60bc      	str	r4, [r7, #8]
    6fd2:	3301      	adds	r3, #1
    6fd4:	607b      	str	r3, [r7, #4]
    6fd6:	2b07      	cmp	r3, #7
    6fd8:	dd00      	ble.n	6fdc <_svfprintf_r+0xb50>
    6fda:	e3b7      	b.n	774c <_svfprintf_r+0x12c0>
    6fdc:	3608      	adds	r6, #8
    6fde:	4643      	mov	r3, r8
    6fe0:	43db      	mvns	r3, r3
    6fe2:	4642      	mov	r2, r8
    6fe4:	17db      	asrs	r3, r3, #31
    6fe6:	4013      	ands	r3, r2
    6fe8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6fea:	1ad3      	subs	r3, r2, r3
    6fec:	4698      	mov	r8, r3
    6fee:	2b00      	cmp	r3, #0
    6ff0:	dc00      	bgt.n	6ff4 <_svfprintf_r+0xb68>
    6ff2:	e128      	b.n	7246 <_svfprintf_r+0xdba>
    6ff4:	2b10      	cmp	r3, #16
    6ff6:	dc01      	bgt.n	6ffc <_svfprintf_r+0xb70>
    6ff8:	f000 fce7 	bl	79ca <_svfprintf_r+0x153e>
    6ffc:	4acf      	ldr	r2, [pc, #828]	; (733c <_svfprintf_r+0xeb0>)
    6ffe:	0021      	movs	r1, r4
    7000:	4691      	mov	r9, r2
    7002:	2210      	movs	r2, #16
    7004:	687b      	ldr	r3, [r7, #4]
    7006:	4692      	mov	sl, r2
    7008:	9d09      	ldr	r5, [sp, #36]	; 0x24
    700a:	0032      	movs	r2, r6
    700c:	464c      	mov	r4, r9
    700e:	4646      	mov	r6, r8
    7010:	e004      	b.n	701c <_svfprintf_r+0xb90>
    7012:	3208      	adds	r2, #8
    7014:	3e10      	subs	r6, #16
    7016:	2e10      	cmp	r6, #16
    7018:	dc00      	bgt.n	701c <_svfprintf_r+0xb90>
    701a:	e104      	b.n	7226 <_svfprintf_r+0xd9a>
    701c:	4650      	mov	r0, sl
    701e:	3110      	adds	r1, #16
    7020:	3301      	adds	r3, #1
    7022:	6014      	str	r4, [r2, #0]
    7024:	6050      	str	r0, [r2, #4]
    7026:	60b9      	str	r1, [r7, #8]
    7028:	607b      	str	r3, [r7, #4]
    702a:	2b07      	cmp	r3, #7
    702c:	ddf1      	ble.n	7012 <_svfprintf_r+0xb86>
    702e:	003a      	movs	r2, r7
    7030:	9906      	ldr	r1, [sp, #24]
    7032:	0028      	movs	r0, r5
    7034:	f005 f902 	bl	c23c <__ssprint_r>
    7038:	2800      	cmp	r0, #0
    703a:	d001      	beq.n	7040 <_svfprintf_r+0xbb4>
    703c:	f7ff faad 	bl	659a <_svfprintf_r+0x10e>
    7040:	68b9      	ldr	r1, [r7, #8]
    7042:	687b      	ldr	r3, [r7, #4]
    7044:	aa32      	add	r2, sp, #200	; 0xc8
    7046:	e7e5      	b.n	7014 <_svfprintf_r+0xb88>
    7048:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    704a:	2b00      	cmp	r3, #0
    704c:	d100      	bne.n	7050 <_svfprintf_r+0xbc4>
    704e:	e0ca      	b.n	71e6 <_svfprintf_r+0xd5a>
    7050:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    7052:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    7054:	ab32      	add	r3, sp, #200	; 0xc8
    7056:	46b1      	mov	r9, r6
    7058:	001e      	movs	r6, r3
    705a:	0020      	movs	r0, r4
    705c:	0029      	movs	r1, r5
    705e:	220a      	movs	r2, #10
    7060:	2300      	movs	r3, #0
    7062:	f7fc fec7 	bl	3df4 <__aeabi_uldivmod>
    7066:	3e01      	subs	r6, #1
    7068:	3230      	adds	r2, #48	; 0x30
    706a:	7032      	strb	r2, [r6, #0]
    706c:	2300      	movs	r3, #0
    706e:	0020      	movs	r0, r4
    7070:	0029      	movs	r1, r5
    7072:	220a      	movs	r2, #10
    7074:	f7fc febe 	bl	3df4 <__aeabi_uldivmod>
    7078:	0003      	movs	r3, r0
    707a:	0004      	movs	r4, r0
    707c:	000d      	movs	r5, r1
    707e:	430b      	orrs	r3, r1
    7080:	d1eb      	bne.n	705a <_svfprintf_r+0xbce>
    7082:	0032      	movs	r2, r6
    7084:	ab32      	add	r3, sp, #200	; 0xc8
    7086:	1a9b      	subs	r3, r3, r2
    7088:	9611      	str	r6, [sp, #68]	; 0x44
    708a:	940c      	str	r4, [sp, #48]	; 0x30
    708c:	950d      	str	r5, [sp, #52]	; 0x34
    708e:	464e      	mov	r6, r9
    7090:	930e      	str	r3, [sp, #56]	; 0x38
    7092:	f7ff fb0b 	bl	66ac <_svfprintf_r+0x220>
    7096:	2300      	movs	r3, #0
    7098:	930e      	str	r3, [sp, #56]	; 0x38
    709a:	ab32      	add	r3, sp, #200	; 0xc8
    709c:	9311      	str	r3, [sp, #68]	; 0x44
    709e:	f7ff fb05 	bl	66ac <_svfprintf_r+0x220>
    70a2:	003a      	movs	r2, r7
    70a4:	9906      	ldr	r1, [sp, #24]
    70a6:	9809      	ldr	r0, [sp, #36]	; 0x24
    70a8:	f005 f8c8 	bl	c23c <__ssprint_r>
    70ac:	2800      	cmp	r0, #0
    70ae:	d001      	beq.n	70b4 <_svfprintf_r+0xc28>
    70b0:	f7ff fa73 	bl	659a <_svfprintf_r+0x10e>
    70b4:	ab16      	add	r3, sp, #88	; 0x58
    70b6:	7fdb      	ldrb	r3, [r3, #31]
    70b8:	68bc      	ldr	r4, [r7, #8]
    70ba:	4698      	mov	r8, r3
    70bc:	ae32      	add	r6, sp, #200	; 0xc8
    70be:	e560      	b.n	6b82 <_svfprintf_r+0x6f6>
    70c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
    70c2:	1e5d      	subs	r5, r3, #1
    70c4:	2d00      	cmp	r5, #0
    70c6:	dc00      	bgt.n	70ca <_svfprintf_r+0xc3e>
    70c8:	e666      	b.n	6d98 <_svfprintf_r+0x90c>
    70ca:	4b9c      	ldr	r3, [pc, #624]	; (733c <_svfprintf_r+0xeb0>)
    70cc:	4699      	mov	r9, r3
    70ce:	2d10      	cmp	r5, #16
    70d0:	dd29      	ble.n	7126 <_svfprintf_r+0xc9a>
    70d2:	2310      	movs	r3, #16
    70d4:	0032      	movs	r2, r6
    70d6:	469a      	mov	sl, r3
    70d8:	002e      	movs	r6, r5
    70da:	0021      	movs	r1, r4
    70dc:	4643      	mov	r3, r8
    70de:	9c09      	ldr	r4, [sp, #36]	; 0x24
    70e0:	464d      	mov	r5, r9
    70e2:	e003      	b.n	70ec <_svfprintf_r+0xc60>
    70e4:	3e10      	subs	r6, #16
    70e6:	3208      	adds	r2, #8
    70e8:	2e10      	cmp	r6, #16
    70ea:	dd17      	ble.n	711c <_svfprintf_r+0xc90>
    70ec:	4650      	mov	r0, sl
    70ee:	3110      	adds	r1, #16
    70f0:	3301      	adds	r3, #1
    70f2:	6015      	str	r5, [r2, #0]
    70f4:	6050      	str	r0, [r2, #4]
    70f6:	60b9      	str	r1, [r7, #8]
    70f8:	607b      	str	r3, [r7, #4]
    70fa:	2b07      	cmp	r3, #7
    70fc:	ddf2      	ble.n	70e4 <_svfprintf_r+0xc58>
    70fe:	003a      	movs	r2, r7
    7100:	9906      	ldr	r1, [sp, #24]
    7102:	0020      	movs	r0, r4
    7104:	f005 f89a 	bl	c23c <__ssprint_r>
    7108:	2800      	cmp	r0, #0
    710a:	d001      	beq.n	7110 <_svfprintf_r+0xc84>
    710c:	f7ff fa45 	bl	659a <_svfprintf_r+0x10e>
    7110:	3e10      	subs	r6, #16
    7112:	68b9      	ldr	r1, [r7, #8]
    7114:	687b      	ldr	r3, [r7, #4]
    7116:	aa32      	add	r2, sp, #200	; 0xc8
    7118:	2e10      	cmp	r6, #16
    711a:	dce7      	bgt.n	70ec <_svfprintf_r+0xc60>
    711c:	46a9      	mov	r9, r5
    711e:	000c      	movs	r4, r1
    7120:	0035      	movs	r5, r6
    7122:	4698      	mov	r8, r3
    7124:	0016      	movs	r6, r2
    7126:	464b      	mov	r3, r9
    7128:	6075      	str	r5, [r6, #4]
    712a:	6033      	str	r3, [r6, #0]
    712c:	1964      	adds	r4, r4, r5
    712e:	e629      	b.n	6d84 <_svfprintf_r+0x8f8>
    7130:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7132:	681a      	ldr	r2, [r3, #0]
    7134:	f7ff fbfb 	bl	692e <_svfprintf_r+0x4a2>
    7138:	6813      	ldr	r3, [r2, #0]
    713a:	9307      	str	r3, [sp, #28]
    713c:	f7ff fa82 	bl	6644 <_svfprintf_r+0x1b8>
    7140:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7142:	681a      	ldr	r2, [r3, #0]
    7144:	f7ff fb84 	bl	6850 <_svfprintf_r+0x3c4>
    7148:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    714a:	681a      	ldr	r2, [r3, #0]
    714c:	f7ff fbd1 	bl	68f2 <_svfprintf_r+0x466>
    7150:	9b19      	ldr	r3, [sp, #100]	; 0x64
    7152:	68ba      	ldr	r2, [r7, #8]
    7154:	6033      	str	r3, [r6, #0]
    7156:	9b18      	ldr	r3, [sp, #96]	; 0x60
    7158:	469c      	mov	ip, r3
    715a:	6073      	str	r3, [r6, #4]
    715c:	687b      	ldr	r3, [r7, #4]
    715e:	4462      	add	r2, ip
    7160:	3301      	adds	r3, #1
    7162:	0014      	movs	r4, r2
    7164:	60ba      	str	r2, [r7, #8]
    7166:	607b      	str	r3, [r7, #4]
    7168:	2b07      	cmp	r3, #7
    716a:	dd00      	ble.n	716e <_svfprintf_r+0xce2>
    716c:	e202      	b.n	7574 <_svfprintf_r+0x10e8>
    716e:	3608      	adds	r6, #8
    7170:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7172:	1e5d      	subs	r5, r3, #1
    7174:	2d00      	cmp	r5, #0
    7176:	dc00      	bgt.n	717a <_svfprintf_r+0xcee>
    7178:	e57e      	b.n	6c78 <_svfprintf_r+0x7ec>
    717a:	4a70      	ldr	r2, [pc, #448]	; (733c <_svfprintf_r+0xeb0>)
    717c:	687b      	ldr	r3, [r7, #4]
    717e:	4691      	mov	r9, r2
    7180:	2d10      	cmp	r5, #16
    7182:	dd25      	ble.n	71d0 <_svfprintf_r+0xd44>
    7184:	2210      	movs	r2, #16
    7186:	0021      	movs	r1, r4
    7188:	4690      	mov	r8, r2
    718a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    718c:	0032      	movs	r2, r6
    718e:	002e      	movs	r6, r5
    7190:	464d      	mov	r5, r9
    7192:	e003      	b.n	719c <_svfprintf_r+0xd10>
    7194:	3208      	adds	r2, #8
    7196:	3e10      	subs	r6, #16
    7198:	2e10      	cmp	r6, #16
    719a:	dd15      	ble.n	71c8 <_svfprintf_r+0xd3c>
    719c:	4640      	mov	r0, r8
    719e:	3110      	adds	r1, #16
    71a0:	3301      	adds	r3, #1
    71a2:	6015      	str	r5, [r2, #0]
    71a4:	6050      	str	r0, [r2, #4]
    71a6:	60b9      	str	r1, [r7, #8]
    71a8:	607b      	str	r3, [r7, #4]
    71aa:	2b07      	cmp	r3, #7
    71ac:	ddf2      	ble.n	7194 <_svfprintf_r+0xd08>
    71ae:	003a      	movs	r2, r7
    71b0:	9906      	ldr	r1, [sp, #24]
    71b2:	0020      	movs	r0, r4
    71b4:	f005 f842 	bl	c23c <__ssprint_r>
    71b8:	2800      	cmp	r0, #0
    71ba:	d001      	beq.n	71c0 <_svfprintf_r+0xd34>
    71bc:	f7ff f9ed 	bl	659a <_svfprintf_r+0x10e>
    71c0:	68b9      	ldr	r1, [r7, #8]
    71c2:	687b      	ldr	r3, [r7, #4]
    71c4:	aa32      	add	r2, sp, #200	; 0xc8
    71c6:	e7e6      	b.n	7196 <_svfprintf_r+0xd0a>
    71c8:	46a9      	mov	r9, r5
    71ca:	000c      	movs	r4, r1
    71cc:	0035      	movs	r5, r6
    71ce:	0016      	movs	r6, r2
    71d0:	464a      	mov	r2, r9
    71d2:	1964      	adds	r4, r4, r5
    71d4:	3301      	adds	r3, #1
    71d6:	6032      	str	r2, [r6, #0]
    71d8:	6075      	str	r5, [r6, #4]
    71da:	60bc      	str	r4, [r7, #8]
    71dc:	607b      	str	r3, [r7, #4]
    71de:	2b07      	cmp	r3, #7
    71e0:	dc00      	bgt.n	71e4 <_svfprintf_r+0xd58>
    71e2:	e548      	b.n	6c76 <_svfprintf_r+0x7ea>
    71e4:	e5e5      	b.n	6db2 <_svfprintf_r+0x926>
    71e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    71e8:	2b09      	cmp	r3, #9
    71ea:	d900      	bls.n	71ee <_svfprintf_r+0xd62>
    71ec:	e730      	b.n	7050 <_svfprintf_r+0xbc4>
    71ee:	9c08      	ldr	r4, [sp, #32]
    71f0:	2227      	movs	r2, #39	; 0x27
    71f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    71f4:	a928      	add	r1, sp, #160	; 0xa0
    71f6:	3330      	adds	r3, #48	; 0x30
    71f8:	548b      	strb	r3, [r1, r2]
    71fa:	2301      	movs	r3, #1
    71fc:	aa16      	add	r2, sp, #88	; 0x58
    71fe:	4694      	mov	ip, r2
    7200:	930e      	str	r3, [sp, #56]	; 0x38
    7202:	336e      	adds	r3, #110	; 0x6e
    7204:	4463      	add	r3, ip
    7206:	9408      	str	r4, [sp, #32]
    7208:	9311      	str	r3, [sp, #68]	; 0x44
    720a:	f7ff fa4f 	bl	66ac <_svfprintf_r+0x220>
    720e:	2b30      	cmp	r3, #48	; 0x30
    7210:	d100      	bne.n	7214 <_svfprintf_r+0xd88>
    7212:	e20b      	b.n	762c <_svfprintf_r+0x11a0>
    7214:	2330      	movs	r3, #48	; 0x30
    7216:	3a02      	subs	r2, #2
    7218:	7013      	strb	r3, [r2, #0]
    721a:	ab32      	add	r3, sp, #200	; 0xc8
    721c:	1a9b      	subs	r3, r3, r2
    721e:	930e      	str	r3, [sp, #56]	; 0x38
    7220:	9211      	str	r2, [sp, #68]	; 0x44
    7222:	f7ff fa43 	bl	66ac <_svfprintf_r+0x220>
    7226:	46b0      	mov	r8, r6
    7228:	46a1      	mov	r9, r4
    722a:	0016      	movs	r6, r2
    722c:	000c      	movs	r4, r1
    722e:	464a      	mov	r2, r9
    7230:	6032      	str	r2, [r6, #0]
    7232:	4642      	mov	r2, r8
    7234:	4444      	add	r4, r8
    7236:	3301      	adds	r3, #1
    7238:	6072      	str	r2, [r6, #4]
    723a:	60bc      	str	r4, [r7, #8]
    723c:	607b      	str	r3, [r7, #4]
    723e:	2b07      	cmp	r3, #7
    7240:	dd00      	ble.n	7244 <_svfprintf_r+0xdb8>
    7242:	e29c      	b.n	777e <_svfprintf_r+0x12f2>
    7244:	3608      	adds	r6, #8
    7246:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    7248:	9a14      	ldr	r2, [sp, #80]	; 0x50
    724a:	4293      	cmp	r3, r2
    724c:	db4c      	blt.n	72e8 <_svfprintf_r+0xe5c>
    724e:	9a08      	ldr	r2, [sp, #32]
    7250:	07d2      	lsls	r2, r2, #31
    7252:	d449      	bmi.n	72e8 <_svfprintf_r+0xe5c>
    7254:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7256:	9913      	ldr	r1, [sp, #76]	; 0x4c
    7258:	1ad3      	subs	r3, r2, r3
    725a:	1a52      	subs	r2, r2, r1
    725c:	4690      	mov	r8, r2
    725e:	429a      	cmp	r2, r3
    7260:	dd00      	ble.n	7264 <_svfprintf_r+0xdd8>
    7262:	4698      	mov	r8, r3
    7264:	4642      	mov	r2, r8
    7266:	2a00      	cmp	r2, #0
    7268:	dd0f      	ble.n	728a <_svfprintf_r+0xdfe>
    726a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    726c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    726e:	468c      	mov	ip, r1
    7270:	4462      	add	r2, ip
    7272:	6032      	str	r2, [r6, #0]
    7274:	4642      	mov	r2, r8
    7276:	6072      	str	r2, [r6, #4]
    7278:	687a      	ldr	r2, [r7, #4]
    727a:	4444      	add	r4, r8
    727c:	3201      	adds	r2, #1
    727e:	60bc      	str	r4, [r7, #8]
    7280:	607a      	str	r2, [r7, #4]
    7282:	2a07      	cmp	r2, #7
    7284:	dd00      	ble.n	7288 <_svfprintf_r+0xdfc>
    7286:	e286      	b.n	7796 <_svfprintf_r+0x130a>
    7288:	3608      	adds	r6, #8
    728a:	4642      	mov	r2, r8
    728c:	43d5      	mvns	r5, r2
    728e:	17ed      	asrs	r5, r5, #31
    7290:	4015      	ands	r5, r2
    7292:	1b5d      	subs	r5, r3, r5
    7294:	2d00      	cmp	r5, #0
    7296:	dc00      	bgt.n	729a <_svfprintf_r+0xe0e>
    7298:	e4ee      	b.n	6c78 <_svfprintf_r+0x7ec>
    729a:	4a28      	ldr	r2, [pc, #160]	; (733c <_svfprintf_r+0xeb0>)
    729c:	687b      	ldr	r3, [r7, #4]
    729e:	4691      	mov	r9, r2
    72a0:	2d10      	cmp	r5, #16
    72a2:	dd95      	ble.n	71d0 <_svfprintf_r+0xd44>
    72a4:	2210      	movs	r2, #16
    72a6:	0021      	movs	r1, r4
    72a8:	4690      	mov	r8, r2
    72aa:	9c09      	ldr	r4, [sp, #36]	; 0x24
    72ac:	0032      	movs	r2, r6
    72ae:	002e      	movs	r6, r5
    72b0:	464d      	mov	r5, r9
    72b2:	e003      	b.n	72bc <_svfprintf_r+0xe30>
    72b4:	3208      	adds	r2, #8
    72b6:	3e10      	subs	r6, #16
    72b8:	2e10      	cmp	r6, #16
    72ba:	dd85      	ble.n	71c8 <_svfprintf_r+0xd3c>
    72bc:	4640      	mov	r0, r8
    72be:	3110      	adds	r1, #16
    72c0:	3301      	adds	r3, #1
    72c2:	6015      	str	r5, [r2, #0]
    72c4:	6050      	str	r0, [r2, #4]
    72c6:	60b9      	str	r1, [r7, #8]
    72c8:	607b      	str	r3, [r7, #4]
    72ca:	2b07      	cmp	r3, #7
    72cc:	ddf2      	ble.n	72b4 <_svfprintf_r+0xe28>
    72ce:	003a      	movs	r2, r7
    72d0:	9906      	ldr	r1, [sp, #24]
    72d2:	0020      	movs	r0, r4
    72d4:	f004 ffb2 	bl	c23c <__ssprint_r>
    72d8:	2800      	cmp	r0, #0
    72da:	d001      	beq.n	72e0 <_svfprintf_r+0xe54>
    72dc:	f7ff f95d 	bl	659a <_svfprintf_r+0x10e>
    72e0:	68b9      	ldr	r1, [r7, #8]
    72e2:	687b      	ldr	r3, [r7, #4]
    72e4:	aa32      	add	r2, sp, #200	; 0xc8
    72e6:	e7e6      	b.n	72b6 <_svfprintf_r+0xe2a>
    72e8:	9a19      	ldr	r2, [sp, #100]	; 0x64
    72ea:	6032      	str	r2, [r6, #0]
    72ec:	9a18      	ldr	r2, [sp, #96]	; 0x60
    72ee:	4694      	mov	ip, r2
    72f0:	6072      	str	r2, [r6, #4]
    72f2:	687a      	ldr	r2, [r7, #4]
    72f4:	4464      	add	r4, ip
    72f6:	3201      	adds	r2, #1
    72f8:	60bc      	str	r4, [r7, #8]
    72fa:	607a      	str	r2, [r7, #4]
    72fc:	2a07      	cmp	r2, #7
    72fe:	dd00      	ble.n	7302 <_svfprintf_r+0xe76>
    7300:	e230      	b.n	7764 <_svfprintf_r+0x12d8>
    7302:	3608      	adds	r6, #8
    7304:	e7a6      	b.n	7254 <_svfprintf_r+0xdc8>
    7306:	003a      	movs	r2, r7
    7308:	9906      	ldr	r1, [sp, #24]
    730a:	9809      	ldr	r0, [sp, #36]	; 0x24
    730c:	f004 ff96 	bl	c23c <__ssprint_r>
    7310:	2800      	cmp	r0, #0
    7312:	d001      	beq.n	7318 <_svfprintf_r+0xe8c>
    7314:	f7ff f941 	bl	659a <_svfprintf_r+0x10e>
    7318:	68bc      	ldr	r4, [r7, #8]
    731a:	687b      	ldr	r3, [r7, #4]
    731c:	ae32      	add	r6, sp, #200	; 0xc8
    731e:	e513      	b.n	6d48 <_svfprintf_r+0x8bc>
    7320:	003a      	movs	r2, r7
    7322:	9906      	ldr	r1, [sp, #24]
    7324:	9809      	ldr	r0, [sp, #36]	; 0x24
    7326:	f004 ff89 	bl	c23c <__ssprint_r>
    732a:	2800      	cmp	r0, #0
    732c:	d001      	beq.n	7332 <_svfprintf_r+0xea6>
    732e:	f7ff f934 	bl	659a <_svfprintf_r+0x10e>
    7332:	687b      	ldr	r3, [r7, #4]
    7334:	68bc      	ldr	r4, [r7, #8]
    7336:	4698      	mov	r8, r3
    7338:	ae32      	add	r6, sp, #200	; 0xc8
    733a:	e513      	b.n	6d64 <_svfprintf_r+0x8d8>
    733c:	00010268 	.word	0x00010268
    7340:	2307      	movs	r3, #7
    7342:	3207      	adds	r2, #7
    7344:	439a      	bics	r2, r3
    7346:	3301      	adds	r3, #1
    7348:	469c      	mov	ip, r3
    734a:	4494      	add	ip, r2
    734c:	4663      	mov	r3, ip
    734e:	930f      	str	r3, [sp, #60]	; 0x3c
    7350:	6853      	ldr	r3, [r2, #4]
    7352:	6812      	ldr	r2, [r2, #0]
    7354:	930d      	str	r3, [sp, #52]	; 0x34
    7356:	920c      	str	r2, [sp, #48]	; 0x30
    7358:	2b00      	cmp	r3, #0
    735a:	db01      	blt.n	7360 <_svfprintf_r+0xed4>
    735c:	f7ff f97a 	bl	6654 <_svfprintf_r+0x1c8>
    7360:	980c      	ldr	r0, [sp, #48]	; 0x30
    7362:	990d      	ldr	r1, [sp, #52]	; 0x34
    7364:	2300      	movs	r3, #0
    7366:	4242      	negs	r2, r0
    7368:	418b      	sbcs	r3, r1
    736a:	0011      	movs	r1, r2
    736c:	001a      	movs	r2, r3
    736e:	232d      	movs	r3, #45	; 0x2d
    7370:	a816      	add	r0, sp, #88	; 0x58
    7372:	77c3      	strb	r3, [r0, #31]
    7374:	0008      	movs	r0, r1
    7376:	4310      	orrs	r0, r2
    7378:	910c      	str	r1, [sp, #48]	; 0x30
    737a:	920d      	str	r2, [sp, #52]	; 0x34
    737c:	4698      	mov	r8, r3
    737e:	0002      	movs	r2, r0
    7380:	3b2c      	subs	r3, #44	; 0x2c
    7382:	f7ff f970 	bl	6666 <_svfprintf_r+0x1da>
    7386:	003a      	movs	r2, r7
    7388:	9906      	ldr	r1, [sp, #24]
    738a:	9809      	ldr	r0, [sp, #36]	; 0x24
    738c:	f004 ff56 	bl	c23c <__ssprint_r>
    7390:	2800      	cmp	r0, #0
    7392:	d001      	beq.n	7398 <_svfprintf_r+0xf0c>
    7394:	f7ff f901 	bl	659a <_svfprintf_r+0x10e>
    7398:	68bc      	ldr	r4, [r7, #8]
    739a:	ae32      	add	r6, sp, #200	; 0xc8
    739c:	e418      	b.n	6bd0 <_svfprintf_r+0x744>
    739e:	9916      	ldr	r1, [sp, #88]	; 0x58
    73a0:	9d15      	ldr	r5, [sp, #84]	; 0x54
    73a2:	000a      	movs	r2, r1
    73a4:	0008      	movs	r0, r1
    73a6:	002b      	movs	r3, r5
    73a8:	0029      	movs	r1, r5
    73aa:	f006 fab3 	bl	d914 <__aeabi_dcmpun>
    73ae:	2800      	cmp	r0, #0
    73b0:	d000      	beq.n	73b4 <_svfprintf_r+0xf28>
    73b2:	e2e6      	b.n	7982 <_svfprintf_r+0x14f6>
    73b4:	4653      	mov	r3, sl
    73b6:	3301      	adds	r3, #1
    73b8:	d100      	bne.n	73bc <_svfprintf_r+0xf30>
    73ba:	e20d      	b.n	77d8 <_svfprintf_r+0x134c>
    73bc:	2320      	movs	r3, #32
    73be:	9a12      	ldr	r2, [sp, #72]	; 0x48
    73c0:	439a      	bics	r2, r3
    73c2:	920e      	str	r2, [sp, #56]	; 0x38
    73c4:	2a47      	cmp	r2, #71	; 0x47
    73c6:	d100      	bne.n	73ca <_svfprintf_r+0xf3e>
    73c8:	e11c      	b.n	7604 <_svfprintf_r+0x1178>
    73ca:	2380      	movs	r3, #128	; 0x80
    73cc:	005b      	lsls	r3, r3, #1
    73ce:	4323      	orrs	r3, r4
    73d0:	9308      	str	r3, [sp, #32]
    73d2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    73d4:	2b00      	cmp	r3, #0
    73d6:	da00      	bge.n	73da <_svfprintf_r+0xf4e>
    73d8:	e221      	b.n	781e <_svfprintf_r+0x1392>
    73da:	9a16      	ldr	r2, [sp, #88]	; 0x58
    73dc:	9307      	str	r3, [sp, #28]
    73de:	2300      	movs	r3, #0
    73e0:	4691      	mov	r9, r2
    73e2:	9310      	str	r3, [sp, #64]	; 0x40
    73e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    73e6:	2b66      	cmp	r3, #102	; 0x66
    73e8:	d100      	bne.n	73ec <_svfprintf_r+0xf60>
    73ea:	e1fc      	b.n	77e6 <_svfprintf_r+0x135a>
    73ec:	2b46      	cmp	r3, #70	; 0x46
    73ee:	d100      	bne.n	73f2 <_svfprintf_r+0xf66>
    73f0:	e0db      	b.n	75aa <_svfprintf_r+0x111e>
    73f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    73f4:	9809      	ldr	r0, [sp, #36]	; 0x24
    73f6:	3a45      	subs	r2, #69	; 0x45
    73f8:	0013      	movs	r3, r2
    73fa:	4259      	negs	r1, r3
    73fc:	4159      	adcs	r1, r3
    73fe:	ab20      	add	r3, sp, #128	; 0x80
    7400:	000d      	movs	r5, r1
    7402:	9303      	str	r3, [sp, #12]
    7404:	ab1f      	add	r3, sp, #124	; 0x7c
    7406:	9302      	str	r3, [sp, #8]
    7408:	2302      	movs	r3, #2
    740a:	aa23      	add	r2, sp, #140	; 0x8c
    740c:	4455      	add	r5, sl
    740e:	921b      	str	r2, [sp, #108]	; 0x6c
    7410:	9204      	str	r2, [sp, #16]
    7412:	9300      	str	r3, [sp, #0]
    7414:	9501      	str	r5, [sp, #4]
    7416:	9b07      	ldr	r3, [sp, #28]
    7418:	464a      	mov	r2, r9
    741a:	f001 fae1 	bl	89e0 <_dtoa_r>
    741e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7420:	9011      	str	r0, [sp, #68]	; 0x44
    7422:	2b67      	cmp	r3, #103	; 0x67
    7424:	d000      	beq.n	7428 <_svfprintf_r+0xf9c>
    7426:	e239      	b.n	789c <_svfprintf_r+0x1410>
    7428:	9b11      	ldr	r3, [sp, #68]	; 0x44
    742a:	4698      	mov	r8, r3
    742c:	44a8      	add	r8, r5
    742e:	07e3      	lsls	r3, r4, #31
    7430:	d400      	bmi.n	7434 <_svfprintf_r+0xfa8>
    7432:	e28b      	b.n	794c <_svfprintf_r+0x14c0>
    7434:	2300      	movs	r3, #0
    7436:	2200      	movs	r2, #0
    7438:	4648      	mov	r0, r9
    743a:	9907      	ldr	r1, [sp, #28]
    743c:	f7fe f9e0 	bl	5800 <__aeabi_dcmpeq>
    7440:	4643      	mov	r3, r8
    7442:	2800      	cmp	r0, #0
    7444:	d10a      	bne.n	745c <_svfprintf_r+0xfd0>
    7446:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7448:	4543      	cmp	r3, r8
    744a:	d207      	bcs.n	745c <_svfprintf_r+0xfd0>
    744c:	2130      	movs	r1, #48	; 0x30
    744e:	4640      	mov	r0, r8
    7450:	1c5a      	adds	r2, r3, #1
    7452:	9223      	str	r2, [sp, #140]	; 0x8c
    7454:	7019      	strb	r1, [r3, #0]
    7456:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7458:	4298      	cmp	r0, r3
    745a:	d8f9      	bhi.n	7450 <_svfprintf_r+0xfc4>
    745c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    745e:	1a9b      	subs	r3, r3, r2
    7460:	9314      	str	r3, [sp, #80]	; 0x50
    7462:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7464:	2b47      	cmp	r3, #71	; 0x47
    7466:	d100      	bne.n	746a <_svfprintf_r+0xfde>
    7468:	e0f6      	b.n	7658 <_svfprintf_r+0x11cc>
    746a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    746c:	2b65      	cmp	r3, #101	; 0x65
    746e:	dc00      	bgt.n	7472 <_svfprintf_r+0xfe6>
    7470:	e226      	b.n	78c0 <_svfprintf_r+0x1434>
    7472:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7474:	2b66      	cmp	r3, #102	; 0x66
    7476:	d100      	bne.n	747a <_svfprintf_r+0xfee>
    7478:	e1f4      	b.n	7864 <_svfprintf_r+0x13d8>
    747a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    747c:	9313      	str	r3, [sp, #76]	; 0x4c
    747e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7480:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7482:	0019      	movs	r1, r3
    7484:	4291      	cmp	r1, r2
    7486:	dd00      	ble.n	748a <_svfprintf_r+0xffe>
    7488:	e1d4      	b.n	7834 <_svfprintf_r+0x13a8>
    748a:	07e3      	lsls	r3, r4, #31
    748c:	d500      	bpl.n	7490 <_svfprintf_r+0x1004>
    748e:	e249      	b.n	7924 <_svfprintf_r+0x1498>
    7490:	43d3      	mvns	r3, r2
    7492:	17db      	asrs	r3, r3, #31
    7494:	0011      	movs	r1, r2
    7496:	401a      	ands	r2, r3
    7498:	2367      	movs	r3, #103	; 0x67
    749a:	9207      	str	r2, [sp, #28]
    749c:	910e      	str	r1, [sp, #56]	; 0x38
    749e:	9312      	str	r3, [sp, #72]	; 0x48
    74a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    74a2:	2b00      	cmp	r3, #0
    74a4:	d000      	beq.n	74a8 <_svfprintf_r+0x101c>
    74a6:	e0cf      	b.n	7648 <_svfprintf_r+0x11bc>
    74a8:	ab16      	add	r3, sp, #88	; 0x58
    74aa:	7fdb      	ldrb	r3, [r3, #31]
    74ac:	4698      	mov	r8, r3
    74ae:	2300      	movs	r3, #0
    74b0:	469a      	mov	sl, r3
    74b2:	f7ff f903 	bl	66bc <_svfprintf_r+0x230>
    74b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    74b8:	990a      	ldr	r1, [sp, #40]	; 0x28
    74ba:	6813      	ldr	r3, [r2, #0]
    74bc:	6019      	str	r1, [r3, #0]
    74be:	0013      	movs	r3, r2
    74c0:	3304      	adds	r3, #4
    74c2:	930f      	str	r3, [sp, #60]	; 0x3c
    74c4:	f7ff f80d 	bl	64e2 <_svfprintf_r+0x56>
    74c8:	003a      	movs	r2, r7
    74ca:	9906      	ldr	r1, [sp, #24]
    74cc:	9809      	ldr	r0, [sp, #36]	; 0x24
    74ce:	f004 feb5 	bl	c23c <__ssprint_r>
    74d2:	2800      	cmp	r0, #0
    74d4:	d001      	beq.n	74da <_svfprintf_r+0x104e>
    74d6:	f7ff f860 	bl	659a <_svfprintf_r+0x10e>
    74da:	ae32      	add	r6, sp, #200	; 0xc8
    74dc:	e48e      	b.n	6dfc <_svfprintf_r+0x970>
    74de:	4bde      	ldr	r3, [pc, #888]	; (7858 <_svfprintf_r+0x13cc>)
    74e0:	3401      	adds	r4, #1
    74e2:	6033      	str	r3, [r6, #0]
    74e4:	2301      	movs	r3, #1
    74e6:	6073      	str	r3, [r6, #4]
    74e8:	687b      	ldr	r3, [r7, #4]
    74ea:	60bc      	str	r4, [r7, #8]
    74ec:	3301      	adds	r3, #1
    74ee:	607b      	str	r3, [r7, #4]
    74f0:	2b07      	cmp	r3, #7
    74f2:	dc7a      	bgt.n	75ea <_svfprintf_r+0x115e>
    74f4:	3608      	adds	r6, #8
    74f6:	2800      	cmp	r0, #0
    74f8:	d107      	bne.n	750a <_svfprintf_r+0x107e>
    74fa:	9b14      	ldr	r3, [sp, #80]	; 0x50
    74fc:	2b00      	cmp	r3, #0
    74fe:	d104      	bne.n	750a <_svfprintf_r+0x107e>
    7500:	9b08      	ldr	r3, [sp, #32]
    7502:	07db      	lsls	r3, r3, #31
    7504:	d401      	bmi.n	750a <_svfprintf_r+0x107e>
    7506:	f7ff fbb7 	bl	6c78 <_svfprintf_r+0x7ec>
    750a:	9b19      	ldr	r3, [sp, #100]	; 0x64
    750c:	6033      	str	r3, [r6, #0]
    750e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    7510:	1919      	adds	r1, r3, r4
    7512:	6073      	str	r3, [r6, #4]
    7514:	687b      	ldr	r3, [r7, #4]
    7516:	60b9      	str	r1, [r7, #8]
    7518:	3301      	adds	r3, #1
    751a:	607b      	str	r3, [r7, #4]
    751c:	2b07      	cmp	r3, #7
    751e:	dd00      	ble.n	7522 <_svfprintf_r+0x1096>
    7520:	e1f2      	b.n	7908 <_svfprintf_r+0x147c>
    7522:	0032      	movs	r2, r6
    7524:	3208      	adds	r2, #8
    7526:	2800      	cmp	r0, #0
    7528:	da00      	bge.n	752c <_svfprintf_r+0x10a0>
    752a:	e1cc      	b.n	78c6 <_svfprintf_r+0x143a>
    752c:	9811      	ldr	r0, [sp, #68]	; 0x44
    752e:	3301      	adds	r3, #1
    7530:	6010      	str	r0, [r2, #0]
    7532:	9814      	ldr	r0, [sp, #80]	; 0x50
    7534:	607b      	str	r3, [r7, #4]
    7536:	1844      	adds	r4, r0, r1
    7538:	6050      	str	r0, [r2, #4]
    753a:	60bc      	str	r4, [r7, #8]
    753c:	2b07      	cmp	r3, #7
    753e:	dd00      	ble.n	7542 <_svfprintf_r+0x10b6>
    7540:	e437      	b.n	6db2 <_svfprintf_r+0x926>
    7542:	3208      	adds	r2, #8
    7544:	0016      	movs	r6, r2
    7546:	f7ff fb97 	bl	6c78 <_svfprintf_r+0x7ec>
    754a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    754c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    754e:	680b      	ldr	r3, [r1, #0]
    7550:	601a      	str	r2, [r3, #0]
    7552:	17d2      	asrs	r2, r2, #31
    7554:	605a      	str	r2, [r3, #4]
    7556:	000b      	movs	r3, r1
    7558:	3304      	adds	r3, #4
    755a:	930f      	str	r3, [sp, #60]	; 0x3c
    755c:	f7fe ffc1 	bl	64e2 <_svfprintf_r+0x56>
    7560:	464b      	mov	r3, r9
    7562:	3101      	adds	r1, #1
    7564:	431c      	orrs	r4, r3
    7566:	780b      	ldrb	r3, [r1, #0]
    7568:	f7fe fff4 	bl	6554 <_svfprintf_r+0xc8>
    756c:	4bbb      	ldr	r3, [pc, #748]	; (785c <_svfprintf_r+0x13d0>)
    756e:	9311      	str	r3, [sp, #68]	; 0x44
    7570:	f7ff f937 	bl	67e2 <_svfprintf_r+0x356>
    7574:	003a      	movs	r2, r7
    7576:	9906      	ldr	r1, [sp, #24]
    7578:	9809      	ldr	r0, [sp, #36]	; 0x24
    757a:	f004 fe5f 	bl	c23c <__ssprint_r>
    757e:	2800      	cmp	r0, #0
    7580:	d001      	beq.n	7586 <_svfprintf_r+0x10fa>
    7582:	f7ff f80a 	bl	659a <_svfprintf_r+0x10e>
    7586:	68bc      	ldr	r4, [r7, #8]
    7588:	ae32      	add	r6, sp, #200	; 0xc8
    758a:	e5f1      	b.n	7170 <_svfprintf_r+0xce4>
    758c:	2140      	movs	r1, #64	; 0x40
    758e:	9809      	ldr	r0, [sp, #36]	; 0x24
    7590:	f002 fb74 	bl	9c7c <_malloc_r>
    7594:	9b06      	ldr	r3, [sp, #24]
    7596:	6018      	str	r0, [r3, #0]
    7598:	6118      	str	r0, [r3, #16]
    759a:	2800      	cmp	r0, #0
    759c:	d100      	bne.n	75a0 <_svfprintf_r+0x1114>
    759e:	e24f      	b.n	7a40 <_svfprintf_r+0x15b4>
    75a0:	2340      	movs	r3, #64	; 0x40
    75a2:	9a06      	ldr	r2, [sp, #24]
    75a4:	6153      	str	r3, [r2, #20]
    75a6:	f7fe ff8e 	bl	64c6 <_svfprintf_r+0x3a>
    75aa:	ab23      	add	r3, sp, #140	; 0x8c
    75ac:	931b      	str	r3, [sp, #108]	; 0x6c
    75ae:	9304      	str	r3, [sp, #16]
    75b0:	ab20      	add	r3, sp, #128	; 0x80
    75b2:	9303      	str	r3, [sp, #12]
    75b4:	ab1f      	add	r3, sp, #124	; 0x7c
    75b6:	9302      	str	r3, [sp, #8]
    75b8:	4653      	mov	r3, sl
    75ba:	9301      	str	r3, [sp, #4]
    75bc:	2303      	movs	r3, #3
    75be:	464a      	mov	r2, r9
    75c0:	9300      	str	r3, [sp, #0]
    75c2:	9809      	ldr	r0, [sp, #36]	; 0x24
    75c4:	9b07      	ldr	r3, [sp, #28]
    75c6:	f001 fa0b 	bl	89e0 <_dtoa_r>
    75ca:	4655      	mov	r5, sl
    75cc:	9011      	str	r0, [sp, #68]	; 0x44
    75ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
    75d0:	4698      	mov	r8, r3
    75d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    75d4:	44a8      	add	r8, r5
    75d6:	2b46      	cmp	r3, #70	; 0x46
    75d8:	d000      	beq.n	75dc <_svfprintf_r+0x1150>
    75da:	e72b      	b.n	7434 <_svfprintf_r+0xfa8>
    75dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    75de:	781b      	ldrb	r3, [r3, #0]
    75e0:	2b30      	cmp	r3, #48	; 0x30
    75e2:	d016      	beq.n	7612 <_svfprintf_r+0x1186>
    75e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    75e6:	4498      	add	r8, r3
    75e8:	e724      	b.n	7434 <_svfprintf_r+0xfa8>
    75ea:	003a      	movs	r2, r7
    75ec:	9906      	ldr	r1, [sp, #24]
    75ee:	9809      	ldr	r0, [sp, #36]	; 0x24
    75f0:	f004 fe24 	bl	c23c <__ssprint_r>
    75f4:	2800      	cmp	r0, #0
    75f6:	d001      	beq.n	75fc <_svfprintf_r+0x1170>
    75f8:	f7fe ffcf 	bl	659a <_svfprintf_r+0x10e>
    75fc:	981f      	ldr	r0, [sp, #124]	; 0x7c
    75fe:	68bc      	ldr	r4, [r7, #8]
    7600:	ae32      	add	r6, sp, #200	; 0xc8
    7602:	e778      	b.n	74f6 <_svfprintf_r+0x106a>
    7604:	4653      	mov	r3, sl
    7606:	2b00      	cmp	r3, #0
    7608:	d000      	beq.n	760c <_svfprintf_r+0x1180>
    760a:	e6de      	b.n	73ca <_svfprintf_r+0xf3e>
    760c:	3301      	adds	r3, #1
    760e:	469a      	mov	sl, r3
    7610:	e6db      	b.n	73ca <_svfprintf_r+0xf3e>
    7612:	2200      	movs	r2, #0
    7614:	2300      	movs	r3, #0
    7616:	4648      	mov	r0, r9
    7618:	9907      	ldr	r1, [sp, #28]
    761a:	f7fe f8f1 	bl	5800 <__aeabi_dcmpeq>
    761e:	2800      	cmp	r0, #0
    7620:	d1e0      	bne.n	75e4 <_svfprintf_r+0x1158>
    7622:	2301      	movs	r3, #1
    7624:	1b5b      	subs	r3, r3, r5
    7626:	931f      	str	r3, [sp, #124]	; 0x7c
    7628:	4498      	add	r8, r3
    762a:	e703      	b.n	7434 <_svfprintf_r+0xfa8>
    762c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    762e:	ab32      	add	r3, sp, #200	; 0xc8
    7630:	1a9b      	subs	r3, r3, r2
    7632:	930e      	str	r3, [sp, #56]	; 0x38
    7634:	f7ff f83a 	bl	66ac <_svfprintf_r+0x220>
    7638:	9811      	ldr	r0, [sp, #68]	; 0x44
    763a:	f7fe fbe5 	bl	5e08 <strlen>
    763e:	0002      	movs	r2, r0
    7640:	900e      	str	r0, [sp, #56]	; 0x38
    7642:	0003      	movs	r3, r0
    7644:	f7ff f9cd 	bl	69e2 <_svfprintf_r+0x556>
    7648:	232d      	movs	r3, #45	; 0x2d
    764a:	aa16      	add	r2, sp, #88	; 0x58
    764c:	77d3      	strb	r3, [r2, #31]
    764e:	4698      	mov	r8, r3
    7650:	2300      	movs	r3, #0
    7652:	469a      	mov	sl, r3
    7654:	f7ff f835 	bl	66c2 <_svfprintf_r+0x236>
    7658:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    765a:	9313      	str	r3, [sp, #76]	; 0x4c
    765c:	1cda      	adds	r2, r3, #3
    765e:	db02      	blt.n	7666 <_svfprintf_r+0x11da>
    7660:	459a      	cmp	sl, r3
    7662:	db00      	blt.n	7666 <_svfprintf_r+0x11da>
    7664:	e70b      	b.n	747e <_svfprintf_r+0xff2>
    7666:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7668:	3b02      	subs	r3, #2
    766a:	9312      	str	r3, [sp, #72]	; 0x48
    766c:	222c      	movs	r2, #44	; 0x2c
    766e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    7670:	2148      	movs	r1, #72	; 0x48
    7672:	1e5d      	subs	r5, r3, #1
    7674:	ab16      	add	r3, sp, #88	; 0x58
    7676:	189b      	adds	r3, r3, r2
    7678:	466a      	mov	r2, sp
    767a:	1852      	adds	r2, r2, r1
    767c:	7812      	ldrb	r2, [r2, #0]
    767e:	951f      	str	r5, [sp, #124]	; 0x7c
    7680:	701a      	strb	r2, [r3, #0]
    7682:	2d00      	cmp	r5, #0
    7684:	da00      	bge.n	7688 <_svfprintf_r+0x11fc>
    7686:	e1a4      	b.n	79d2 <_svfprintf_r+0x1546>
    7688:	212d      	movs	r1, #45	; 0x2d
    768a:	232b      	movs	r3, #43	; 0x2b
    768c:	aa16      	add	r2, sp, #88	; 0x58
    768e:	1852      	adds	r2, r2, r1
    7690:	7013      	strb	r3, [r2, #0]
    7692:	2d09      	cmp	r5, #9
    7694:	dc00      	bgt.n	7698 <_svfprintf_r+0x120c>
    7696:	e14c      	b.n	7932 <_svfprintf_r+0x14a6>
    7698:	aa16      	add	r2, sp, #88	; 0x58
    769a:	233b      	movs	r3, #59	; 0x3b
    769c:	4694      	mov	ip, r2
    769e:	4463      	add	r3, ip
    76a0:	469a      	mov	sl, r3
    76a2:	46b1      	mov	r9, r6
    76a4:	46a0      	mov	r8, r4
    76a6:	4656      	mov	r6, sl
    76a8:	e000      	b.n	76ac <_svfprintf_r+0x1220>
    76aa:	0026      	movs	r6, r4
    76ac:	0028      	movs	r0, r5
    76ae:	210a      	movs	r1, #10
    76b0:	f7fc fb9a 	bl	3de8 <__aeabi_idivmod>
    76b4:	1e74      	subs	r4, r6, #1
    76b6:	3130      	adds	r1, #48	; 0x30
    76b8:	7021      	strb	r1, [r4, #0]
    76ba:	0028      	movs	r0, r5
    76bc:	210a      	movs	r1, #10
    76be:	f7fc faad 	bl	3c1c <__divsi3>
    76c2:	0005      	movs	r5, r0
    76c4:	2809      	cmp	r0, #9
    76c6:	dcf0      	bgt.n	76aa <_svfprintf_r+0x121e>
    76c8:	0023      	movs	r3, r4
    76ca:	4644      	mov	r4, r8
    76cc:	46b0      	mov	r8, r6
    76ce:	464e      	mov	r6, r9
    76d0:	4699      	mov	r9, r3
    76d2:	0003      	movs	r3, r0
    76d4:	3330      	adds	r3, #48	; 0x30
    76d6:	b2d8      	uxtb	r0, r3
    76d8:	4643      	mov	r3, r8
    76da:	3b02      	subs	r3, #2
    76dc:	7018      	strb	r0, [r3, #0]
    76de:	459a      	cmp	sl, r3
    76e0:	d800      	bhi.n	76e4 <_svfprintf_r+0x1258>
    76e2:	e1b4      	b.n	7a4e <_svfprintf_r+0x15c2>
    76e4:	4642      	mov	r2, r8
    76e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    76e8:	4645      	mov	r5, r8
    76ea:	1a99      	subs	r1, r3, r2
    76ec:	2301      	movs	r3, #1
    76ee:	3107      	adds	r1, #7
    76f0:	425b      	negs	r3, r3
    76f2:	e001      	b.n	76f8 <_svfprintf_r+0x126c>
    76f4:	5ce8      	ldrb	r0, [r5, r3]
    76f6:	3301      	adds	r3, #1
    76f8:	aa21      	add	r2, sp, #132	; 0x84
    76fa:	18d2      	adds	r2, r2, r3
    76fc:	70d0      	strb	r0, [r2, #3]
    76fe:	428b      	cmp	r3, r1
    7700:	d1f8      	bne.n	76f4 <_svfprintf_r+0x1268>
    7702:	a916      	add	r1, sp, #88	; 0x58
    7704:	468c      	mov	ip, r1
    7706:	222e      	movs	r2, #46	; 0x2e
    7708:	464b      	mov	r3, r9
    770a:	4462      	add	r2, ip
    770c:	4694      	mov	ip, r2
    770e:	1afb      	subs	r3, r7, r3
    7710:	4463      	add	r3, ip
    7712:	aa21      	add	r2, sp, #132	; 0x84
    7714:	9914      	ldr	r1, [sp, #80]	; 0x50
    7716:	1a9b      	subs	r3, r3, r2
    7718:	469c      	mov	ip, r3
    771a:	000a      	movs	r2, r1
    771c:	4462      	add	r2, ip
    771e:	931a      	str	r3, [sp, #104]	; 0x68
    7720:	920e      	str	r2, [sp, #56]	; 0x38
    7722:	2901      	cmp	r1, #1
    7724:	dc00      	bgt.n	7728 <_svfprintf_r+0x129c>
    7726:	e145      	b.n	79b4 <_svfprintf_r+0x1528>
    7728:	9a18      	ldr	r2, [sp, #96]	; 0x60
    772a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    772c:	4694      	mov	ip, r2
    772e:	4463      	add	r3, ip
    7730:	001a      	movs	r2, r3
    7732:	930e      	str	r3, [sp, #56]	; 0x38
    7734:	43db      	mvns	r3, r3
    7736:	17db      	asrs	r3, r3, #31
    7738:	401a      	ands	r2, r3
    773a:	2300      	movs	r3, #0
    773c:	9207      	str	r2, [sp, #28]
    773e:	9313      	str	r3, [sp, #76]	; 0x4c
    7740:	e6ae      	b.n	74a0 <_svfprintf_r+0x1014>
    7742:	2301      	movs	r3, #1
    7744:	425b      	negs	r3, r3
    7746:	930a      	str	r3, [sp, #40]	; 0x28
    7748:	f7fe ff2d 	bl	65a6 <_svfprintf_r+0x11a>
    774c:	003a      	movs	r2, r7
    774e:	9906      	ldr	r1, [sp, #24]
    7750:	9809      	ldr	r0, [sp, #36]	; 0x24
    7752:	f004 fd73 	bl	c23c <__ssprint_r>
    7756:	2800      	cmp	r0, #0
    7758:	d001      	beq.n	775e <_svfprintf_r+0x12d2>
    775a:	f7fe ff1e 	bl	659a <_svfprintf_r+0x10e>
    775e:	68bc      	ldr	r4, [r7, #8]
    7760:	ae32      	add	r6, sp, #200	; 0xc8
    7762:	e43c      	b.n	6fde <_svfprintf_r+0xb52>
    7764:	003a      	movs	r2, r7
    7766:	9906      	ldr	r1, [sp, #24]
    7768:	9809      	ldr	r0, [sp, #36]	; 0x24
    776a:	f004 fd67 	bl	c23c <__ssprint_r>
    776e:	2800      	cmp	r0, #0
    7770:	d001      	beq.n	7776 <_svfprintf_r+0x12ea>
    7772:	f7fe ff12 	bl	659a <_svfprintf_r+0x10e>
    7776:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    7778:	68bc      	ldr	r4, [r7, #8]
    777a:	ae32      	add	r6, sp, #200	; 0xc8
    777c:	e56a      	b.n	7254 <_svfprintf_r+0xdc8>
    777e:	003a      	movs	r2, r7
    7780:	9906      	ldr	r1, [sp, #24]
    7782:	9809      	ldr	r0, [sp, #36]	; 0x24
    7784:	f004 fd5a 	bl	c23c <__ssprint_r>
    7788:	2800      	cmp	r0, #0
    778a:	d001      	beq.n	7790 <_svfprintf_r+0x1304>
    778c:	f7fe ff05 	bl	659a <_svfprintf_r+0x10e>
    7790:	68bc      	ldr	r4, [r7, #8]
    7792:	ae32      	add	r6, sp, #200	; 0xc8
    7794:	e557      	b.n	7246 <_svfprintf_r+0xdba>
    7796:	003a      	movs	r2, r7
    7798:	9906      	ldr	r1, [sp, #24]
    779a:	9809      	ldr	r0, [sp, #36]	; 0x24
    779c:	f004 fd4e 	bl	c23c <__ssprint_r>
    77a0:	2800      	cmp	r0, #0
    77a2:	d001      	beq.n	77a8 <_svfprintf_r+0x131c>
    77a4:	f7fe fef9 	bl	659a <_svfprintf_r+0x10e>
    77a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    77aa:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    77ac:	68bc      	ldr	r4, [r7, #8]
    77ae:	1a9b      	subs	r3, r3, r2
    77b0:	ae32      	add	r6, sp, #200	; 0xc8
    77b2:	e56a      	b.n	728a <_svfprintf_r+0xdfe>
    77b4:	4653      	mov	r3, sl
    77b6:	9307      	str	r3, [sp, #28]
    77b8:	2b06      	cmp	r3, #6
    77ba:	d901      	bls.n	77c0 <_svfprintf_r+0x1334>
    77bc:	2306      	movs	r3, #6
    77be:	9307      	str	r3, [sp, #28]
    77c0:	9b07      	ldr	r3, [sp, #28]
    77c2:	950f      	str	r5, [sp, #60]	; 0x3c
    77c4:	930e      	str	r3, [sp, #56]	; 0x38
    77c6:	2300      	movs	r3, #0
    77c8:	4698      	mov	r8, r3
    77ca:	469a      	mov	sl, r3
    77cc:	9313      	str	r3, [sp, #76]	; 0x4c
    77ce:	4b24      	ldr	r3, [pc, #144]	; (7860 <_svfprintf_r+0x13d4>)
    77d0:	9408      	str	r4, [sp, #32]
    77d2:	9311      	str	r3, [sp, #68]	; 0x44
    77d4:	f7fe ff78 	bl	66c8 <_svfprintf_r+0x23c>
    77d8:	2320      	movs	r3, #32
    77da:	9a12      	ldr	r2, [sp, #72]	; 0x48
    77dc:	439a      	bics	r2, r3
    77de:	3b1a      	subs	r3, #26
    77e0:	920e      	str	r2, [sp, #56]	; 0x38
    77e2:	469a      	mov	sl, r3
    77e4:	e5f1      	b.n	73ca <_svfprintf_r+0xf3e>
    77e6:	ab23      	add	r3, sp, #140	; 0x8c
    77e8:	931b      	str	r3, [sp, #108]	; 0x6c
    77ea:	9304      	str	r3, [sp, #16]
    77ec:	ab20      	add	r3, sp, #128	; 0x80
    77ee:	9303      	str	r3, [sp, #12]
    77f0:	ab1f      	add	r3, sp, #124	; 0x7c
    77f2:	9302      	str	r3, [sp, #8]
    77f4:	4653      	mov	r3, sl
    77f6:	9301      	str	r3, [sp, #4]
    77f8:	2303      	movs	r3, #3
    77fa:	464a      	mov	r2, r9
    77fc:	9300      	str	r3, [sp, #0]
    77fe:	9809      	ldr	r0, [sp, #36]	; 0x24
    7800:	9b07      	ldr	r3, [sp, #28]
    7802:	f001 f8ed 	bl	89e0 <_dtoa_r>
    7806:	0003      	movs	r3, r0
    7808:	4453      	add	r3, sl
    780a:	9011      	str	r0, [sp, #68]	; 0x44
    780c:	4698      	mov	r8, r3
    780e:	4655      	mov	r5, sl
    7810:	e6e4      	b.n	75dc <_svfprintf_r+0x1150>
    7812:	232d      	movs	r3, #45	; 0x2d
    7814:	aa16      	add	r2, sp, #88	; 0x58
    7816:	77d3      	strb	r3, [r2, #31]
    7818:	4698      	mov	r8, r3
    781a:	f7fe ffdb 	bl	67d4 <_svfprintf_r+0x348>
    781e:	2280      	movs	r2, #128	; 0x80
    7820:	0612      	lsls	r2, r2, #24
    7822:	4694      	mov	ip, r2
    7824:	9b16      	ldr	r3, [sp, #88]	; 0x58
    7826:	4699      	mov	r9, r3
    7828:	9b15      	ldr	r3, [sp, #84]	; 0x54
    782a:	4463      	add	r3, ip
    782c:	9307      	str	r3, [sp, #28]
    782e:	232d      	movs	r3, #45	; 0x2d
    7830:	9310      	str	r3, [sp, #64]	; 0x40
    7832:	e5d7      	b.n	73e4 <_svfprintf_r+0xf58>
    7834:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7836:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7838:	4694      	mov	ip, r2
    783a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    783c:	4463      	add	r3, ip
    783e:	930e      	str	r3, [sp, #56]	; 0x38
    7840:	2a00      	cmp	r2, #0
    7842:	dc00      	bgt.n	7846 <_svfprintf_r+0x13ba>
    7844:	e0ce      	b.n	79e4 <_svfprintf_r+0x1558>
    7846:	001a      	movs	r2, r3
    7848:	43db      	mvns	r3, r3
    784a:	17db      	asrs	r3, r3, #31
    784c:	401a      	ands	r2, r3
    784e:	2367      	movs	r3, #103	; 0x67
    7850:	9207      	str	r2, [sp, #28]
    7852:	9312      	str	r3, [sp, #72]	; 0x48
    7854:	e624      	b.n	74a0 <_svfprintf_r+0x1014>
    7856:	46c0      	nop			; (mov r8, r8)
    7858:	00010254 	.word	0x00010254
    785c:	00010218 	.word	0x00010218
    7860:	0001024c 	.word	0x0001024c
    7864:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    7866:	9313      	str	r3, [sp, #76]	; 0x4c
    7868:	2b00      	cmp	r3, #0
    786a:	dc00      	bgt.n	786e <_svfprintf_r+0x13e2>
    786c:	e0d5      	b.n	7a1a <_svfprintf_r+0x158e>
    786e:	4652      	mov	r2, sl
    7870:	2a00      	cmp	r2, #0
    7872:	d000      	beq.n	7876 <_svfprintf_r+0x13ea>
    7874:	e092      	b.n	799c <_svfprintf_r+0x1510>
    7876:	07e2      	lsls	r2, r4, #31
    7878:	d500      	bpl.n	787c <_svfprintf_r+0x13f0>
    787a:	e08f      	b.n	799c <_svfprintf_r+0x1510>
    787c:	9307      	str	r3, [sp, #28]
    787e:	930e      	str	r3, [sp, #56]	; 0x38
    7880:	e60e      	b.n	74a0 <_svfprintf_r+0x1014>
    7882:	ab16      	add	r3, sp, #88	; 0x58
    7884:	7fdb      	ldrb	r3, [r3, #31]
    7886:	950f      	str	r5, [sp, #60]	; 0x3c
    7888:	4698      	mov	r8, r3
    788a:	4653      	mov	r3, sl
    788c:	9307      	str	r3, [sp, #28]
    788e:	930e      	str	r3, [sp, #56]	; 0x38
    7890:	2300      	movs	r3, #0
    7892:	9408      	str	r4, [sp, #32]
    7894:	469a      	mov	sl, r3
    7896:	9313      	str	r3, [sp, #76]	; 0x4c
    7898:	f7fe ff10 	bl	66bc <_svfprintf_r+0x230>
    789c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    789e:	4698      	mov	r8, r3
    78a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    78a2:	44a8      	add	r8, r5
    78a4:	2b47      	cmp	r3, #71	; 0x47
    78a6:	d000      	beq.n	78aa <_svfprintf_r+0x141e>
    78a8:	e5c4      	b.n	7434 <_svfprintf_r+0xfa8>
    78aa:	07e3      	lsls	r3, r4, #31
    78ac:	d500      	bpl.n	78b0 <_svfprintf_r+0x1424>
    78ae:	e68e      	b.n	75ce <_svfprintf_r+0x1142>
    78b0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    78b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
    78b4:	1a9b      	subs	r3, r3, r2
    78b6:	9314      	str	r3, [sp, #80]	; 0x50
    78b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    78ba:	2b47      	cmp	r3, #71	; 0x47
    78bc:	d100      	bne.n	78c0 <_svfprintf_r+0x1434>
    78be:	e6cb      	b.n	7658 <_svfprintf_r+0x11cc>
    78c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    78c2:	9313      	str	r3, [sp, #76]	; 0x4c
    78c4:	e6d2      	b.n	766c <_svfprintf_r+0x11e0>
    78c6:	4244      	negs	r4, r0
    78c8:	3010      	adds	r0, #16
    78ca:	db00      	blt.n	78ce <_svfprintf_r+0x1442>
    78cc:	e0d0      	b.n	7a70 <_svfprintf_r+0x15e4>
    78ce:	486e      	ldr	r0, [pc, #440]	; (7a88 <_svfprintf_r+0x15fc>)
    78d0:	2610      	movs	r6, #16
    78d2:	0005      	movs	r5, r0
    78d4:	e003      	b.n	78de <_svfprintf_r+0x1452>
    78d6:	3208      	adds	r2, #8
    78d8:	3c10      	subs	r4, #16
    78da:	2c10      	cmp	r4, #16
    78dc:	dd38      	ble.n	7950 <_svfprintf_r+0x14c4>
    78de:	3110      	adds	r1, #16
    78e0:	3301      	adds	r3, #1
    78e2:	6015      	str	r5, [r2, #0]
    78e4:	6056      	str	r6, [r2, #4]
    78e6:	60b9      	str	r1, [r7, #8]
    78e8:	607b      	str	r3, [r7, #4]
    78ea:	2b07      	cmp	r3, #7
    78ec:	ddf3      	ble.n	78d6 <_svfprintf_r+0x144a>
    78ee:	003a      	movs	r2, r7
    78f0:	9906      	ldr	r1, [sp, #24]
    78f2:	9809      	ldr	r0, [sp, #36]	; 0x24
    78f4:	f004 fca2 	bl	c23c <__ssprint_r>
    78f8:	2800      	cmp	r0, #0
    78fa:	d001      	beq.n	7900 <_svfprintf_r+0x1474>
    78fc:	f7fe fe4d 	bl	659a <_svfprintf_r+0x10e>
    7900:	68b9      	ldr	r1, [r7, #8]
    7902:	687b      	ldr	r3, [r7, #4]
    7904:	aa32      	add	r2, sp, #200	; 0xc8
    7906:	e7e7      	b.n	78d8 <_svfprintf_r+0x144c>
    7908:	003a      	movs	r2, r7
    790a:	9906      	ldr	r1, [sp, #24]
    790c:	9809      	ldr	r0, [sp, #36]	; 0x24
    790e:	f004 fc95 	bl	c23c <__ssprint_r>
    7912:	2800      	cmp	r0, #0
    7914:	d001      	beq.n	791a <_svfprintf_r+0x148e>
    7916:	f7fe fe40 	bl	659a <_svfprintf_r+0x10e>
    791a:	981f      	ldr	r0, [sp, #124]	; 0x7c
    791c:	68b9      	ldr	r1, [r7, #8]
    791e:	687b      	ldr	r3, [r7, #4]
    7920:	aa32      	add	r2, sp, #200	; 0xc8
    7922:	e600      	b.n	7526 <_svfprintf_r+0x109a>
    7924:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7926:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    7928:	4694      	mov	ip, r2
    792a:	4463      	add	r3, ip
    792c:	001a      	movs	r2, r3
    792e:	930e      	str	r3, [sp, #56]	; 0x38
    7930:	e78a      	b.n	7848 <_svfprintf_r+0x13bc>
    7932:	212e      	movs	r1, #46	; 0x2e
    7934:	2330      	movs	r3, #48	; 0x30
    7936:	aa16      	add	r2, sp, #88	; 0x58
    7938:	1852      	adds	r2, r2, r1
    793a:	7013      	strb	r3, [r2, #0]
    793c:	002b      	movs	r3, r5
    793e:	aa16      	add	r2, sp, #88	; 0x58
    7940:	3101      	adds	r1, #1
    7942:	3330      	adds	r3, #48	; 0x30
    7944:	1852      	adds	r2, r2, r1
    7946:	7013      	strb	r3, [r2, #0]
    7948:	ab22      	add	r3, sp, #136	; 0x88
    794a:	e6e2      	b.n	7712 <_svfprintf_r+0x1286>
    794c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    794e:	e585      	b.n	745c <_svfprintf_r+0xfd0>
    7950:	46a9      	mov	r9, r5
    7952:	4648      	mov	r0, r9
    7954:	1909      	adds	r1, r1, r4
    7956:	3301      	adds	r3, #1
    7958:	6010      	str	r0, [r2, #0]
    795a:	6054      	str	r4, [r2, #4]
    795c:	60b9      	str	r1, [r7, #8]
    795e:	3208      	adds	r2, #8
    7960:	607b      	str	r3, [r7, #4]
    7962:	2b07      	cmp	r3, #7
    7964:	dc00      	bgt.n	7968 <_svfprintf_r+0x14dc>
    7966:	e5e1      	b.n	752c <_svfprintf_r+0x10a0>
    7968:	003a      	movs	r2, r7
    796a:	9906      	ldr	r1, [sp, #24]
    796c:	9809      	ldr	r0, [sp, #36]	; 0x24
    796e:	f004 fc65 	bl	c23c <__ssprint_r>
    7972:	2800      	cmp	r0, #0
    7974:	d001      	beq.n	797a <_svfprintf_r+0x14ee>
    7976:	f7fe fe10 	bl	659a <_svfprintf_r+0x10e>
    797a:	68b9      	ldr	r1, [r7, #8]
    797c:	687b      	ldr	r3, [r7, #4]
    797e:	aa32      	add	r2, sp, #200	; 0xc8
    7980:	e5d4      	b.n	752c <_svfprintf_r+0x10a0>
    7982:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7984:	2b00      	cmp	r3, #0
    7986:	db38      	blt.n	79fa <_svfprintf_r+0x156e>
    7988:	ab16      	add	r3, sp, #88	; 0x58
    798a:	7fdb      	ldrb	r3, [r3, #31]
    798c:	4698      	mov	r8, r3
    798e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7990:	2b47      	cmp	r3, #71	; 0x47
    7992:	dc2e      	bgt.n	79f2 <_svfprintf_r+0x1566>
    7994:	4b3d      	ldr	r3, [pc, #244]	; (7a8c <_svfprintf_r+0x1600>)
    7996:	9311      	str	r3, [sp, #68]	; 0x44
    7998:	f7fe ff23 	bl	67e2 <_svfprintf_r+0x356>
    799c:	9a18      	ldr	r2, [sp, #96]	; 0x60
    799e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    79a0:	4694      	mov	ip, r2
    79a2:	4463      	add	r3, ip
    79a4:	4453      	add	r3, sl
    79a6:	001a      	movs	r2, r3
    79a8:	930e      	str	r3, [sp, #56]	; 0x38
    79aa:	43db      	mvns	r3, r3
    79ac:	17db      	asrs	r3, r3, #31
    79ae:	401a      	ands	r2, r3
    79b0:	9207      	str	r2, [sp, #28]
    79b2:	e575      	b.n	74a0 <_svfprintf_r+0x1014>
    79b4:	2301      	movs	r3, #1
    79b6:	4023      	ands	r3, r4
    79b8:	9313      	str	r3, [sp, #76]	; 0x4c
    79ba:	d000      	beq.n	79be <_svfprintf_r+0x1532>
    79bc:	e6b4      	b.n	7728 <_svfprintf_r+0x129c>
    79be:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    79c0:	43d3      	mvns	r3, r2
    79c2:	17db      	asrs	r3, r3, #31
    79c4:	401a      	ands	r2, r3
    79c6:	9207      	str	r2, [sp, #28]
    79c8:	e56a      	b.n	74a0 <_svfprintf_r+0x1014>
    79ca:	4a2f      	ldr	r2, [pc, #188]	; (7a88 <_svfprintf_r+0x15fc>)
    79cc:	687b      	ldr	r3, [r7, #4]
    79ce:	4691      	mov	r9, r2
    79d0:	e42d      	b.n	722e <_svfprintf_r+0xda2>
    79d2:	2301      	movs	r3, #1
    79d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    79d6:	391b      	subs	r1, #27
    79d8:	1a9d      	subs	r5, r3, r2
    79da:	aa16      	add	r2, sp, #88	; 0x58
    79dc:	332c      	adds	r3, #44	; 0x2c
    79de:	1852      	adds	r2, r2, r1
    79e0:	7013      	strb	r3, [r2, #0]
    79e2:	e656      	b.n	7692 <_svfprintf_r+0x1206>
    79e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    79e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    79e8:	1a98      	subs	r0, r3, r2
    79ea:	1c43      	adds	r3, r0, #1
    79ec:	001a      	movs	r2, r3
    79ee:	930e      	str	r3, [sp, #56]	; 0x38
    79f0:	e72a      	b.n	7848 <_svfprintf_r+0x13bc>
    79f2:	4b27      	ldr	r3, [pc, #156]	; (7a90 <_svfprintf_r+0x1604>)
    79f4:	9311      	str	r3, [sp, #68]	; 0x44
    79f6:	f7fe fef4 	bl	67e2 <_svfprintf_r+0x356>
    79fa:	232d      	movs	r3, #45	; 0x2d
    79fc:	aa16      	add	r2, sp, #88	; 0x58
    79fe:	77d3      	strb	r3, [r2, #31]
    7a00:	4698      	mov	r8, r3
    7a02:	e7c4      	b.n	798e <_svfprintf_r+0x1502>
    7a04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7a06:	1d1a      	adds	r2, r3, #4
    7a08:	681b      	ldr	r3, [r3, #0]
    7a0a:	469a      	mov	sl, r3
    7a0c:	2b00      	cmp	r3, #0
    7a0e:	db36      	blt.n	7a7e <_svfprintf_r+0x15f2>
    7a10:	784b      	ldrb	r3, [r1, #1]
    7a12:	920f      	str	r2, [sp, #60]	; 0x3c
    7a14:	4659      	mov	r1, fp
    7a16:	f7fe fd9d 	bl	6554 <_svfprintf_r+0xc8>
    7a1a:	4653      	mov	r3, sl
    7a1c:	2b00      	cmp	r3, #0
    7a1e:	d101      	bne.n	7a24 <_svfprintf_r+0x1598>
    7a20:	07e3      	lsls	r3, r4, #31
    7a22:	d503      	bpl.n	7a2c <_svfprintf_r+0x15a0>
    7a24:	9b18      	ldr	r3, [sp, #96]	; 0x60
    7a26:	1c58      	adds	r0, r3, #1
    7a28:	0003      	movs	r3, r0
    7a2a:	e7bb      	b.n	79a4 <_svfprintf_r+0x1518>
    7a2c:	2301      	movs	r3, #1
    7a2e:	e725      	b.n	787c <_svfprintf_r+0x13f0>
    7a30:	ab16      	add	r3, sp, #88	; 0x58
    7a32:	77d8      	strb	r0, [r3, #31]
    7a34:	f7fe ff6c 	bl	6910 <_svfprintf_r+0x484>
    7a38:	ab16      	add	r3, sp, #88	; 0x58
    7a3a:	77d8      	strb	r0, [r3, #31]
    7a3c:	f7ff f814 	bl	6a68 <_svfprintf_r+0x5dc>
    7a40:	230c      	movs	r3, #12
    7a42:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7a44:	6013      	str	r3, [r2, #0]
    7a46:	3b0d      	subs	r3, #13
    7a48:	930a      	str	r3, [sp, #40]	; 0x28
    7a4a:	f7fe fdac 	bl	65a6 <_svfprintf_r+0x11a>
    7a4e:	aa16      	add	r2, sp, #88	; 0x58
    7a50:	232e      	movs	r3, #46	; 0x2e
    7a52:	4694      	mov	ip, r2
    7a54:	4463      	add	r3, ip
    7a56:	e65c      	b.n	7712 <_svfprintf_r+0x1286>
    7a58:	ab16      	add	r3, sp, #88	; 0x58
    7a5a:	77d8      	strb	r0, [r3, #31]
    7a5c:	f7fe fe85 	bl	676a <_svfprintf_r+0x2de>
    7a60:	ab16      	add	r3, sp, #88	; 0x58
    7a62:	77d8      	strb	r0, [r3, #31]
    7a64:	f7fe fddd 	bl	6622 <_svfprintf_r+0x196>
    7a68:	ab16      	add	r3, sp, #88	; 0x58
    7a6a:	77d8      	strb	r0, [r3, #31]
    7a6c:	f7ff f87d 	bl	6b6a <_svfprintf_r+0x6de>
    7a70:	4805      	ldr	r0, [pc, #20]	; (7a88 <_svfprintf_r+0x15fc>)
    7a72:	4681      	mov	r9, r0
    7a74:	e76d      	b.n	7952 <_svfprintf_r+0x14c6>
    7a76:	ab16      	add	r3, sp, #88	; 0x58
    7a78:	77d8      	strb	r0, [r3, #31]
    7a7a:	f7fe ff79 	bl	6970 <_svfprintf_r+0x4e4>
    7a7e:	2301      	movs	r3, #1
    7a80:	425b      	negs	r3, r3
    7a82:	469a      	mov	sl, r3
    7a84:	e7c4      	b.n	7a10 <_svfprintf_r+0x1584>
    7a86:	46c0      	nop			; (mov r8, r8)
    7a88:	00010268 	.word	0x00010268
    7a8c:	0001021c 	.word	0x0001021c
    7a90:	00010220 	.word	0x00010220

00007a94 <__ssvfscanf_r>:
    7a94:	b5f0      	push	{r4, r5, r6, r7, lr}
    7a96:	464e      	mov	r6, r9
    7a98:	4645      	mov	r5, r8
    7a9a:	46de      	mov	lr, fp
    7a9c:	4657      	mov	r7, sl
    7a9e:	b5e0      	push	{r5, r6, r7, lr}
    7aa0:	4cce      	ldr	r4, [pc, #824]	; (7ddc <__ssvfscanf_r+0x348>)
    7aa2:	000e      	movs	r6, r1
    7aa4:	44a5      	add	sp, r4
    7aa6:	9307      	str	r3, [sp, #28]
    7aa8:	230c      	movs	r3, #12
    7aaa:	5ec9      	ldrsh	r1, [r1, r3]
    7aac:	2380      	movs	r3, #128	; 0x80
    7aae:	019b      	lsls	r3, r3, #6
    7ab0:	4680      	mov	r8, r0
    7ab2:	4219      	tst	r1, r3
    7ab4:	d105      	bne.n	7ac2 <__ssvfscanf_r+0x2e>
    7ab6:	430b      	orrs	r3, r1
    7ab8:	81b3      	strh	r3, [r6, #12]
    7aba:	6e71      	ldr	r1, [r6, #100]	; 0x64
    7abc:	4bc8      	ldr	r3, [pc, #800]	; (7de0 <__ssvfscanf_r+0x34c>)
    7abe:	400b      	ands	r3, r1
    7ac0:	6673      	str	r3, [r6, #100]	; 0x64
    7ac2:	2300      	movs	r3, #0
    7ac4:	0014      	movs	r4, r2
    7ac6:	9309      	str	r3, [sp, #36]	; 0x24
    7ac8:	9305      	str	r3, [sp, #20]
    7aca:	9308      	str	r3, [sp, #32]
    7acc:	7823      	ldrb	r3, [r4, #0]
    7ace:	1c62      	adds	r2, r4, #1
    7ad0:	2700      	movs	r7, #0
    7ad2:	9311      	str	r3, [sp, #68]	; 0x44
    7ad4:	4692      	mov	sl, r2
    7ad6:	2b00      	cmp	r3, #0
    7ad8:	d029      	beq.n	7b2e <__ssvfscanf_r+0x9a>
    7ada:	f002 f8ad 	bl	9c38 <__locale_ctype_ptr>
    7ade:	2508      	movs	r5, #8
    7ae0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7ae2:	18c0      	adds	r0, r0, r3
    7ae4:	7842      	ldrb	r2, [r0, #1]
    7ae6:	4015      	ands	r5, r2
    7ae8:	d02b      	beq.n	7b42 <__ssvfscanf_r+0xae>
    7aea:	6873      	ldr	r3, [r6, #4]
    7aec:	2408      	movs	r4, #8
    7aee:	4645      	mov	r5, r8
    7af0:	e00d      	b.n	7b0e <__ssvfscanf_r+0x7a>
    7af2:	f002 f8a1 	bl	9c38 <__locale_ctype_ptr>
    7af6:	6832      	ldr	r2, [r6, #0]
    7af8:	7813      	ldrb	r3, [r2, #0]
    7afa:	18c0      	adds	r0, r0, r3
    7afc:	7843      	ldrb	r3, [r0, #1]
    7afe:	421c      	tst	r4, r3
    7b00:	d00d      	beq.n	7b1e <__ssvfscanf_r+0x8a>
    7b02:	6873      	ldr	r3, [r6, #4]
    7b04:	3201      	adds	r2, #1
    7b06:	3b01      	subs	r3, #1
    7b08:	3701      	adds	r7, #1
    7b0a:	6073      	str	r3, [r6, #4]
    7b0c:	6032      	str	r2, [r6, #0]
    7b0e:	2b00      	cmp	r3, #0
    7b10:	dcef      	bgt.n	7af2 <__ssvfscanf_r+0x5e>
    7b12:	0031      	movs	r1, r6
    7b14:	0028      	movs	r0, r5
    7b16:	f004 fc63 	bl	c3e0 <__ssrefill_r>
    7b1a:	2800      	cmp	r0, #0
    7b1c:	d0e9      	beq.n	7af2 <__ssvfscanf_r+0x5e>
    7b1e:	46a8      	mov	r8, r5
    7b20:	4654      	mov	r4, sl
    7b22:	7823      	ldrb	r3, [r4, #0]
    7b24:	1c62      	adds	r2, r4, #1
    7b26:	9311      	str	r3, [sp, #68]	; 0x44
    7b28:	4692      	mov	sl, r2
    7b2a:	2b00      	cmp	r3, #0
    7b2c:	d1d5      	bne.n	7ada <__ssvfscanf_r+0x46>
    7b2e:	9808      	ldr	r0, [sp, #32]
    7b30:	23ad      	movs	r3, #173	; 0xad
    7b32:	009b      	lsls	r3, r3, #2
    7b34:	449d      	add	sp, r3
    7b36:	bc3c      	pop	{r2, r3, r4, r5}
    7b38:	4690      	mov	r8, r2
    7b3a:	4699      	mov	r9, r3
    7b3c:	46a2      	mov	sl, r4
    7b3e:	46ab      	mov	fp, r5
    7b40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7b42:	2b25      	cmp	r3, #37	; 0x25
    7b44:	d116      	bne.n	7b74 <__ssvfscanf_r+0xe0>
    7b46:	7863      	ldrb	r3, [r4, #1]
    7b48:	2400      	movs	r4, #0
    7b4a:	469b      	mov	fp, r3
    7b4c:	2300      	movs	r3, #0
    7b4e:	4699      	mov	r9, r3
    7b50:	3301      	adds	r3, #1
    7b52:	9304      	str	r3, [sp, #16]
    7b54:	2004      	movs	r0, #4
    7b56:	465b      	mov	r3, fp
    7b58:	2202      	movs	r2, #2
    7b5a:	46a3      	mov	fp, r4
    7b5c:	4654      	mov	r4, sl
    7b5e:	3401      	adds	r4, #1
    7b60:	9403      	str	r4, [sp, #12]
    7b62:	2b78      	cmp	r3, #120	; 0x78
    7b64:	d900      	bls.n	7b68 <__ssvfscanf_r+0xd4>
    7b66:	e0d5      	b.n	7d14 <__ssvfscanf_r+0x280>
    7b68:	499e      	ldr	r1, [pc, #632]	; (7de4 <__ssvfscanf_r+0x350>)
    7b6a:	009c      	lsls	r4, r3, #2
    7b6c:	590c      	ldr	r4, [r1, r4]
    7b6e:	46a7      	mov	pc, r4
    7b70:	9b03      	ldr	r3, [sp, #12]
    7b72:	469a      	mov	sl, r3
    7b74:	6873      	ldr	r3, [r6, #4]
    7b76:	2b00      	cmp	r3, #0
    7b78:	dc01      	bgt.n	7b7e <__ssvfscanf_r+0xea>
    7b7a:	f000 fd64 	bl	8646 <__ssvfscanf_r+0xbb2>
    7b7e:	4652      	mov	r2, sl
    7b80:	6833      	ldr	r3, [r6, #0]
    7b82:	3a01      	subs	r2, #1
    7b84:	7811      	ldrb	r1, [r2, #0]
    7b86:	781a      	ldrb	r2, [r3, #0]
    7b88:	4291      	cmp	r1, r2
    7b8a:	d1d0      	bne.n	7b2e <__ssvfscanf_r+0x9a>
    7b8c:	6872      	ldr	r2, [r6, #4]
    7b8e:	3301      	adds	r3, #1
    7b90:	3a01      	subs	r2, #1
    7b92:	6072      	str	r2, [r6, #4]
    7b94:	6033      	str	r3, [r6, #0]
    7b96:	3701      	adds	r7, #1
    7b98:	4654      	mov	r4, sl
    7b9a:	e7c2      	b.n	7b22 <__ssvfscanf_r+0x8e>
    7b9c:	4655      	mov	r5, sl
    7b9e:	1c83      	adds	r3, r0, #2
    7ba0:	d001      	beq.n	7ba6 <__ssvfscanf_r+0x112>
    7ba2:	f000 fe1a 	bl	87da <__ssvfscanf_r+0xd46>
    7ba6:	6873      	ldr	r3, [r6, #4]
    7ba8:	2b00      	cmp	r3, #0
    7baa:	dd01      	ble.n	7bb0 <__ssvfscanf_r+0x11c>
    7bac:	f000 fc2a 	bl	8404 <__ssvfscanf_r+0x970>
    7bb0:	0031      	movs	r1, r6
    7bb2:	4640      	mov	r0, r8
    7bb4:	f004 fc14 	bl	c3e0 <__ssrefill_r>
    7bb8:	2800      	cmp	r0, #0
    7bba:	d101      	bne.n	7bc0 <__ssvfscanf_r+0x12c>
    7bbc:	f000 fc22 	bl	8404 <__ssvfscanf_r+0x970>
    7bc0:	2d00      	cmp	r5, #0
    7bc2:	d101      	bne.n	7bc8 <__ssvfscanf_r+0x134>
    7bc4:	f000 fc2a 	bl	841c <__ssvfscanf_r+0x988>
    7bc8:	9b08      	ldr	r3, [sp, #32]
    7bca:	2b00      	cmp	r3, #0
    7bcc:	d002      	beq.n	7bd4 <__ssvfscanf_r+0x140>
    7bce:	89b3      	ldrh	r3, [r6, #12]
    7bd0:	065b      	lsls	r3, r3, #25
    7bd2:	d5ac      	bpl.n	7b2e <__ssvfscanf_r+0x9a>
    7bd4:	2301      	movs	r3, #1
    7bd6:	425b      	negs	r3, r3
    7bd8:	9308      	str	r3, [sp, #32]
    7bda:	e7a8      	b.n	7b2e <__ssvfscanf_r+0x9a>
    7bdc:	4b82      	ldr	r3, [pc, #520]	; (7de8 <__ssvfscanf_r+0x354>)
    7bde:	465c      	mov	r4, fp
    7be0:	9309      	str	r3, [sp, #36]	; 0x24
    7be2:	2300      	movs	r3, #0
    7be4:	9305      	str	r3, [sp, #20]
    7be6:	3303      	adds	r3, #3
    7be8:	469b      	mov	fp, r3
    7bea:	6873      	ldr	r3, [r6, #4]
    7bec:	2b00      	cmp	r3, #0
    7bee:	dd27      	ble.n	7c40 <__ssvfscanf_r+0x1ac>
    7bf0:	464b      	mov	r3, r9
    7bf2:	065b      	lsls	r3, r3, #25
    7bf4:	d42d      	bmi.n	7c52 <__ssvfscanf_r+0x1be>
    7bf6:	2308      	movs	r3, #8
    7bf8:	469a      	mov	sl, r3
    7bfa:	e001      	b.n	7c00 <__ssvfscanf_r+0x16c>
    7bfc:	3201      	adds	r2, #1
    7bfe:	6032      	str	r2, [r6, #0]
    7c00:	f002 f81a 	bl	9c38 <__locale_ctype_ptr>
    7c04:	4651      	mov	r1, sl
    7c06:	6832      	ldr	r2, [r6, #0]
    7c08:	7813      	ldrb	r3, [r2, #0]
    7c0a:	18c0      	adds	r0, r0, r3
    7c0c:	7843      	ldrb	r3, [r0, #1]
    7c0e:	4219      	tst	r1, r3
    7c10:	d01f      	beq.n	7c52 <__ssvfscanf_r+0x1be>
    7c12:	6873      	ldr	r3, [r6, #4]
    7c14:	3701      	adds	r7, #1
    7c16:	3b01      	subs	r3, #1
    7c18:	6073      	str	r3, [r6, #4]
    7c1a:	2b00      	cmp	r3, #0
    7c1c:	dcee      	bgt.n	7bfc <__ssvfscanf_r+0x168>
    7c1e:	0031      	movs	r1, r6
    7c20:	4640      	mov	r0, r8
    7c22:	f004 fbdd 	bl	c3e0 <__ssrefill_r>
    7c26:	2800      	cmp	r0, #0
    7c28:	d0ea      	beq.n	7c00 <__ssvfscanf_r+0x16c>
    7c2a:	e7cd      	b.n	7bc8 <__ssvfscanf_r+0x134>
    7c2c:	465c      	mov	r4, fp
    7c2e:	4b6f      	ldr	r3, [pc, #444]	; (7dec <__ssvfscanf_r+0x358>)
    7c30:	9309      	str	r3, [sp, #36]	; 0x24
    7c32:	230a      	movs	r3, #10
    7c34:	9305      	str	r3, [sp, #20]
    7c36:	3b07      	subs	r3, #7
    7c38:	469b      	mov	fp, r3
    7c3a:	6873      	ldr	r3, [r6, #4]
    7c3c:	2b00      	cmp	r3, #0
    7c3e:	dcd7      	bgt.n	7bf0 <__ssvfscanf_r+0x15c>
    7c40:	0031      	movs	r1, r6
    7c42:	4640      	mov	r0, r8
    7c44:	f004 fbcc 	bl	c3e0 <__ssrefill_r>
    7c48:	2800      	cmp	r0, #0
    7c4a:	d1bd      	bne.n	7bc8 <__ssvfscanf_r+0x134>
    7c4c:	464b      	mov	r3, r9
    7c4e:	065b      	lsls	r3, r3, #25
    7c50:	d5d1      	bpl.n	7bf6 <__ssvfscanf_r+0x162>
    7c52:	465b      	mov	r3, fp
    7c54:	2b02      	cmp	r3, #2
    7c56:	d100      	bne.n	7c5a <__ssvfscanf_r+0x1c6>
    7c58:	e326      	b.n	82a8 <__ssvfscanf_r+0x814>
    7c5a:	dc00      	bgt.n	7c5e <__ssvfscanf_r+0x1ca>
    7c5c:	e21b      	b.n	8096 <__ssvfscanf_r+0x602>
    7c5e:	465b      	mov	r3, fp
    7c60:	2b03      	cmp	r3, #3
    7c62:	d100      	bne.n	7c66 <__ssvfscanf_r+0x1d2>
    7c64:	e28a      	b.n	817c <__ssvfscanf_r+0x6e8>
    7c66:	2b04      	cmp	r3, #4
    7c68:	d000      	beq.n	7c6c <__ssvfscanf_r+0x1d8>
    7c6a:	e25b      	b.n	8124 <__ssvfscanf_r+0x690>
    7c6c:	4640      	mov	r0, r8
    7c6e:	f001 fff3 	bl	9c58 <_localeconv_r>
    7c72:	22ae      	movs	r2, #174	; 0xae
    7c74:	2100      	movs	r1, #0
    7c76:	6803      	ldr	r3, [r0, #0]
    7c78:	0052      	lsls	r2, r2, #1
    7c7a:	930c      	str	r3, [sp, #48]	; 0x30
    7c7c:	1e63      	subs	r3, r4, #1
    7c7e:	910d      	str	r1, [sp, #52]	; 0x34
    7c80:	4293      	cmp	r3, r2
    7c82:	d904      	bls.n	7c8e <__ssvfscanf_r+0x1fa>
    7c84:	3c5e      	subs	r4, #94	; 0x5e
    7c86:	3cff      	subs	r4, #255	; 0xff
    7c88:	940d      	str	r4, [sp, #52]	; 0x34
    7c8a:	245e      	movs	r4, #94	; 0x5e
    7c8c:	34ff      	adds	r4, #255	; 0xff
    7c8e:	23f0      	movs	r3, #240	; 0xf0
    7c90:	464a      	mov	r2, r9
    7c92:	00db      	lsls	r3, r3, #3
    7c94:	431a      	orrs	r2, r3
    7c96:	2300      	movs	r3, #0
    7c98:	9304      	str	r3, [sp, #16]
    7c9a:	930e      	str	r3, [sp, #56]	; 0x38
    7c9c:	930f      	str	r3, [sp, #60]	; 0x3c
    7c9e:	9306      	str	r3, [sp, #24]
    7ca0:	930b      	str	r3, [sp, #44]	; 0x2c
    7ca2:	ab54      	add	r3, sp, #336	; 0x150
    7ca4:	469b      	mov	fp, r3
    7ca6:	930a      	str	r3, [sp, #40]	; 0x28
    7ca8:	4b51      	ldr	r3, [pc, #324]	; (7df0 <__ssvfscanf_r+0x35c>)
    7caa:	4691      	mov	r9, r2
    7cac:	469a      	mov	sl, r3
    7cae:	002b      	movs	r3, r5
    7cb0:	003d      	movs	r5, r7
    7cb2:	465f      	mov	r7, fp
    7cb4:	469b      	mov	fp, r3
    7cb6:	6832      	ldr	r2, [r6, #0]
    7cb8:	7811      	ldrb	r1, [r2, #0]
    7cba:	000b      	movs	r3, r1
    7cbc:	3b2b      	subs	r3, #43	; 0x2b
    7cbe:	b2db      	uxtb	r3, r3
    7cc0:	2b4e      	cmp	r3, #78	; 0x4e
    7cc2:	d900      	bls.n	7cc6 <__ssvfscanf_r+0x232>
    7cc4:	e1d6      	b.n	8074 <__ssvfscanf_r+0x5e0>
    7cc6:	4650      	mov	r0, sl
    7cc8:	009b      	lsls	r3, r3, #2
    7cca:	58c3      	ldr	r3, [r0, r3]
    7ccc:	469f      	mov	pc, r3
    7cce:	2302      	movs	r3, #2
    7cd0:	465c      	mov	r4, fp
    7cd2:	469b      	mov	fp, r3
    7cd4:	e789      	b.n	7bea <__ssvfscanf_r+0x156>
    7cd6:	465c      	mov	r4, fp
    7cd8:	2388      	movs	r3, #136	; 0x88
    7cda:	464a      	mov	r2, r9
    7cdc:	009b      	lsls	r3, r3, #2
    7cde:	431a      	orrs	r2, r3
    7ce0:	4b42      	ldr	r3, [pc, #264]	; (7dec <__ssvfscanf_r+0x358>)
    7ce2:	4691      	mov	r9, r2
    7ce4:	9309      	str	r3, [sp, #36]	; 0x24
    7ce6:	2310      	movs	r3, #16
    7ce8:	9305      	str	r3, [sp, #20]
    7cea:	3b0d      	subs	r3, #13
    7cec:	469b      	mov	fp, r3
    7cee:	e77c      	b.n	7bea <__ssvfscanf_r+0x156>
    7cf0:	4653      	mov	r3, sl
    7cf2:	785b      	ldrb	r3, [r3, #1]
    7cf4:	2b6c      	cmp	r3, #108	; 0x6c
    7cf6:	d101      	bne.n	7cfc <__ssvfscanf_r+0x268>
    7cf8:	f000 fcd0 	bl	869c <__ssvfscanf_r+0xc08>
    7cfc:	4649      	mov	r1, r9
    7cfe:	9c04      	ldr	r4, [sp, #16]
    7d00:	4321      	orrs	r1, r4
    7d02:	4689      	mov	r9, r1
    7d04:	9903      	ldr	r1, [sp, #12]
    7d06:	468a      	mov	sl, r1
    7d08:	4654      	mov	r4, sl
    7d0a:	3401      	adds	r4, #1
    7d0c:	9403      	str	r4, [sp, #12]
    7d0e:	2b78      	cmp	r3, #120	; 0x78
    7d10:	d800      	bhi.n	7d14 <__ssvfscanf_r+0x280>
    7d12:	e729      	b.n	7b68 <__ssvfscanf_r+0xd4>
    7d14:	465c      	mov	r4, fp
    7d16:	469b      	mov	fp, r3
    7d18:	f001 ff8e 	bl	9c38 <__locale_ctype_ptr>
    7d1c:	2303      	movs	r3, #3
    7d1e:	4458      	add	r0, fp
    7d20:	7842      	ldrb	r2, [r0, #1]
    7d22:	4013      	ands	r3, r2
    7d24:	2b01      	cmp	r3, #1
    7d26:	d100      	bne.n	7d2a <__ssvfscanf_r+0x296>
    7d28:	e30a      	b.n	8340 <__ssvfscanf_r+0x8ac>
    7d2a:	4b2f      	ldr	r3, [pc, #188]	; (7de8 <__ssvfscanf_r+0x354>)
    7d2c:	e780      	b.n	7c30 <__ssvfscanf_r+0x19c>
    7d2e:	465c      	mov	r4, fp
    7d30:	4b2e      	ldr	r3, [pc, #184]	; (7dec <__ssvfscanf_r+0x358>)
    7d32:	9309      	str	r3, [sp, #36]	; 0x24
    7d34:	2308      	movs	r3, #8
    7d36:	9305      	str	r3, [sp, #20]
    7d38:	3b05      	subs	r3, #5
    7d3a:	469b      	mov	fp, r3
    7d3c:	e755      	b.n	7bea <__ssvfscanf_r+0x156>
    7d3e:	9b03      	ldr	r3, [sp, #12]
    7d40:	469a      	mov	sl, r3
    7d42:	464b      	mov	r3, r9
    7d44:	06db      	lsls	r3, r3, #27
    7d46:	d500      	bpl.n	7d4a <__ssvfscanf_r+0x2b6>
    7d48:	e6ea      	b.n	7b20 <__ssvfscanf_r+0x8c>
    7d4a:	464b      	mov	r3, r9
    7d4c:	075b      	lsls	r3, r3, #29
    7d4e:	d501      	bpl.n	7d54 <__ssvfscanf_r+0x2c0>
    7d50:	f000 fce2 	bl	8718 <__ssvfscanf_r+0xc84>
    7d54:	464b      	mov	r3, r9
    7d56:	07db      	lsls	r3, r3, #31
    7d58:	d500      	bpl.n	7d5c <__ssvfscanf_r+0x2c8>
    7d5a:	e30e      	b.n	837a <__ssvfscanf_r+0x8e6>
    7d5c:	464b      	mov	r3, r9
    7d5e:	079b      	lsls	r3, r3, #30
    7d60:	d400      	bmi.n	7d64 <__ssvfscanf_r+0x2d0>
    7d62:	e30a      	b.n	837a <__ssvfscanf_r+0x8e6>
    7d64:	9907      	ldr	r1, [sp, #28]
    7d66:	17fa      	asrs	r2, r7, #31
    7d68:	680b      	ldr	r3, [r1, #0]
    7d6a:	4654      	mov	r4, sl
    7d6c:	601f      	str	r7, [r3, #0]
    7d6e:	605a      	str	r2, [r3, #4]
    7d70:	000b      	movs	r3, r1
    7d72:	3304      	adds	r3, #4
    7d74:	9307      	str	r3, [sp, #28]
    7d76:	e6d4      	b.n	7b22 <__ssvfscanf_r+0x8e>
    7d78:	464b      	mov	r3, r9
    7d7a:	4303      	orrs	r3, r0
    7d7c:	4699      	mov	r9, r3
    7d7e:	4653      	mov	r3, sl
    7d80:	9903      	ldr	r1, [sp, #12]
    7d82:	785b      	ldrb	r3, [r3, #1]
    7d84:	468a      	mov	sl, r1
    7d86:	e6e9      	b.n	7b5c <__ssvfscanf_r+0xc8>
    7d88:	465c      	mov	r4, fp
    7d8a:	4b17      	ldr	r3, [pc, #92]	; (7de8 <__ssvfscanf_r+0x354>)
    7d8c:	e750      	b.n	7c30 <__ssvfscanf_r+0x19c>
    7d8e:	2340      	movs	r3, #64	; 0x40
    7d90:	464a      	mov	r2, r9
    7d92:	431a      	orrs	r2, r3
    7d94:	2300      	movs	r3, #0
    7d96:	465c      	mov	r4, fp
    7d98:	4691      	mov	r9, r2
    7d9a:	469b      	mov	fp, r3
    7d9c:	e725      	b.n	7bea <__ssvfscanf_r+0x156>
    7d9e:	ab14      	add	r3, sp, #80	; 0x50
    7da0:	0018      	movs	r0, r3
    7da2:	9903      	ldr	r1, [sp, #12]
    7da4:	f002 ffde 	bl	ad64 <__sccl>
    7da8:	2340      	movs	r3, #64	; 0x40
    7daa:	464a      	mov	r2, r9
    7dac:	431a      	orrs	r2, r3
    7dae:	3b3f      	subs	r3, #63	; 0x3f
    7db0:	465c      	mov	r4, fp
    7db2:	9003      	str	r0, [sp, #12]
    7db4:	4691      	mov	r9, r2
    7db6:	469b      	mov	fp, r3
    7db8:	e717      	b.n	7bea <__ssvfscanf_r+0x156>
    7dba:	465c      	mov	r4, fp
    7dbc:	2380      	movs	r3, #128	; 0x80
    7dbe:	e78c      	b.n	7cda <__ssvfscanf_r+0x246>
    7dc0:	464a      	mov	r2, r9
    7dc2:	2301      	movs	r3, #1
    7dc4:	431a      	orrs	r2, r3
    7dc6:	465c      	mov	r4, fp
    7dc8:	4691      	mov	r9, r2
    7dca:	e7b1      	b.n	7d30 <__ssvfscanf_r+0x29c>
    7dcc:	464b      	mov	r3, r9
    7dce:	4313      	orrs	r3, r2
    7dd0:	e7d4      	b.n	7d7c <__ssvfscanf_r+0x2e8>
    7dd2:	2304      	movs	r3, #4
    7dd4:	465c      	mov	r4, fp
    7dd6:	469b      	mov	fp, r3
    7dd8:	e707      	b.n	7bea <__ssvfscanf_r+0x156>
    7dda:	46c0      	nop			; (mov r8, r8)
    7ddc:	fffffd4c 	.word	0xfffffd4c
    7de0:	ffffdfff 	.word	0xffffdfff
    7de4:	00010278 	.word	0x00010278
    7de8:	00006469 	.word	0x00006469
    7dec:	0000c031 	.word	0x0000c031
    7df0:	0001045c 	.word	0x0001045c
    7df4:	2301      	movs	r3, #1
    7df6:	464a      	mov	r2, r9
    7df8:	431a      	orrs	r2, r3
    7dfa:	465c      	mov	r4, fp
    7dfc:	4691      	mov	r9, r2
    7dfe:	4bc5      	ldr	r3, [pc, #788]	; (8114 <__ssvfscanf_r+0x680>)
    7e00:	e716      	b.n	7c30 <__ssvfscanf_r+0x19c>
    7e02:	4659      	mov	r1, fp
    7e04:	008c      	lsls	r4, r1, #2
    7e06:	2130      	movs	r1, #48	; 0x30
    7e08:	4249      	negs	r1, r1
    7e0a:	445c      	add	r4, fp
    7e0c:	468b      	mov	fp, r1
    7e0e:	0064      	lsls	r4, r4, #1
    7e10:	18e3      	adds	r3, r4, r3
    7e12:	449b      	add	fp, r3
    7e14:	4653      	mov	r3, sl
    7e16:	9903      	ldr	r1, [sp, #12]
    7e18:	785b      	ldrb	r3, [r3, #1]
    7e1a:	468a      	mov	sl, r1
    7e1c:	e69e      	b.n	7b5c <__ssvfscanf_r+0xc8>
    7e1e:	464b      	mov	r3, r9
    7e20:	2110      	movs	r1, #16
    7e22:	430b      	orrs	r3, r1
    7e24:	e7aa      	b.n	7d7c <__ssvfscanf_r+0x2e8>
    7e26:	9b04      	ldr	r3, [sp, #16]
    7e28:	445b      	add	r3, fp
    7e2a:	2b00      	cmp	r3, #0
    7e2c:	d111      	bne.n	7e52 <__ssvfscanf_r+0x3be>
    7e2e:	4648      	mov	r0, r9
    7e30:	4bb9      	ldr	r3, [pc, #740]	; (8118 <__ssvfscanf_r+0x684>)
    7e32:	4018      	ands	r0, r3
    7e34:	4681      	mov	r9, r0
    7e36:	7039      	strb	r1, [r7, #0]
    7e38:	3701      	adds	r7, #1
    7e3a:	6873      	ldr	r3, [r6, #4]
    7e3c:	3c01      	subs	r4, #1
    7e3e:	3b01      	subs	r3, #1
    7e40:	3501      	adds	r5, #1
    7e42:	6073      	str	r3, [r6, #4]
    7e44:	2b00      	cmp	r3, #0
    7e46:	dd23      	ble.n	7e90 <__ssvfscanf_r+0x3fc>
    7e48:	3201      	adds	r2, #1
    7e4a:	6032      	str	r2, [r6, #0]
    7e4c:	2c00      	cmp	r4, #0
    7e4e:	d000      	beq.n	7e52 <__ssvfscanf_r+0x3be>
    7e50:	e731      	b.n	7cb6 <__ssvfscanf_r+0x222>
    7e52:	465b      	mov	r3, fp
    7e54:	46bb      	mov	fp, r7
    7e56:	002f      	movs	r7, r5
    7e58:	001d      	movs	r5, r3
    7e5a:	9b06      	ldr	r3, [sp, #24]
    7e5c:	2b00      	cmp	r3, #0
    7e5e:	d056      	beq.n	7f0e <__ssvfscanf_r+0x47a>
    7e60:	e251      	b.n	8306 <__ssvfscanf_r+0x872>
    7e62:	464b      	mov	r3, r9
    7e64:	05db      	lsls	r3, r3, #23
    7e66:	d5de      	bpl.n	7e26 <__ssvfscanf_r+0x392>
    7e68:	2380      	movs	r3, #128	; 0x80
    7e6a:	4649      	mov	r1, r9
    7e6c:	4399      	bics	r1, r3
    7e6e:	9b06      	ldr	r3, [sp, #24]
    7e70:	4689      	mov	r9, r1
    7e72:	3301      	adds	r3, #1
    7e74:	9306      	str	r3, [sp, #24]
    7e76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7e78:	2b00      	cmp	r3, #0
    7e7a:	d0de      	beq.n	7e3a <__ssvfscanf_r+0x3a6>
    7e7c:	3b01      	subs	r3, #1
    7e7e:	930d      	str	r3, [sp, #52]	; 0x34
    7e80:	6873      	ldr	r3, [r6, #4]
    7e82:	3401      	adds	r4, #1
    7e84:	3b01      	subs	r3, #1
    7e86:	3c01      	subs	r4, #1
    7e88:	3501      	adds	r5, #1
    7e8a:	6073      	str	r3, [r6, #4]
    7e8c:	2b00      	cmp	r3, #0
    7e8e:	dcdb      	bgt.n	7e48 <__ssvfscanf_r+0x3b4>
    7e90:	0031      	movs	r1, r6
    7e92:	4640      	mov	r0, r8
    7e94:	f004 faa4 	bl	c3e0 <__ssrefill_r>
    7e98:	2800      	cmp	r0, #0
    7e9a:	d0d7      	beq.n	7e4c <__ssvfscanf_r+0x3b8>
    7e9c:	e7d9      	b.n	7e52 <__ssvfscanf_r+0x3be>
    7e9e:	2380      	movs	r3, #128	; 0x80
    7ea0:	4648      	mov	r0, r9
    7ea2:	4203      	tst	r3, r0
    7ea4:	d0d5      	beq.n	7e52 <__ssvfscanf_r+0x3be>
    7ea6:	4398      	bics	r0, r3
    7ea8:	4681      	mov	r9, r0
    7eaa:	e7c4      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    7eac:	465b      	mov	r3, fp
    7eae:	2b06      	cmp	r3, #6
    7eb0:	d1d0      	bne.n	7e54 <__ssvfscanf_r+0x3c0>
    7eb2:	2307      	movs	r3, #7
    7eb4:	469b      	mov	fp, r3
    7eb6:	e7be      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    7eb8:	9b04      	ldr	r3, [sp, #16]
    7eba:	2b00      	cmp	r3, #0
    7ebc:	d000      	beq.n	7ec0 <__ssvfscanf_r+0x42c>
    7ebe:	e121      	b.n	8104 <__ssvfscanf_r+0x670>
    7ec0:	9b06      	ldr	r3, [sp, #24]
    7ec2:	2b00      	cmp	r3, #0
    7ec4:	d106      	bne.n	7ed4 <__ssvfscanf_r+0x440>
    7ec6:	23e0      	movs	r3, #224	; 0xe0
    7ec8:	4648      	mov	r0, r9
    7eca:	00db      	lsls	r3, r3, #3
    7ecc:	4018      	ands	r0, r3
    7ece:	4298      	cmp	r0, r3
    7ed0:	d100      	bne.n	7ed4 <__ssvfscanf_r+0x440>
    7ed2:	e3db      	b.n	868c <__ssvfscanf_r+0xbf8>
    7ed4:	465b      	mov	r3, fp
    7ed6:	2b01      	cmp	r3, #1
    7ed8:	d001      	beq.n	7ede <__ssvfscanf_r+0x44a>
    7eda:	2b04      	cmp	r3, #4
    7edc:	d1b9      	bne.n	7e52 <__ssvfscanf_r+0x3be>
    7ede:	465b      	mov	r3, fp
    7ee0:	3301      	adds	r3, #1
    7ee2:	b2db      	uxtb	r3, r3
    7ee4:	469b      	mov	fp, r3
    7ee6:	e7a6      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    7ee8:	465b      	mov	r3, fp
    7eea:	2b00      	cmp	r3, #0
    7eec:	d000      	beq.n	7ef0 <__ssvfscanf_r+0x45c>
    7eee:	e0ff      	b.n	80f0 <__ssvfscanf_r+0x65c>
    7ef0:	9b06      	ldr	r3, [sp, #24]
    7ef2:	2b00      	cmp	r3, #0
    7ef4:	d000      	beq.n	7ef8 <__ssvfscanf_r+0x464>
    7ef6:	e202      	b.n	82fe <__ssvfscanf_r+0x86a>
    7ef8:	23e0      	movs	r3, #224	; 0xe0
    7efa:	4648      	mov	r0, r9
    7efc:	00db      	lsls	r3, r3, #3
    7efe:	4018      	ands	r0, r3
    7f00:	4298      	cmp	r0, r3
    7f02:	d100      	bne.n	7f06 <__ssvfscanf_r+0x472>
    7f04:	e3ba      	b.n	867c <__ssvfscanf_r+0xbe8>
    7f06:	465b      	mov	r3, fp
    7f08:	46bb      	mov	fp, r7
    7f0a:	002f      	movs	r7, r5
    7f0c:	001d      	movs	r5, r3
    7f0e:	9b04      	ldr	r3, [sp, #16]
    7f10:	3b01      	subs	r3, #1
    7f12:	2b01      	cmp	r3, #1
    7f14:	d801      	bhi.n	7f1a <__ssvfscanf_r+0x486>
    7f16:	f000 fc63 	bl	87e0 <__ssvfscanf_r+0xd4c>
    7f1a:	1e6b      	subs	r3, r5, #1
    7f1c:	2b06      	cmp	r3, #6
    7f1e:	d820      	bhi.n	7f62 <__ssvfscanf_r+0x4ce>
    7f20:	2d02      	cmp	r5, #2
    7f22:	d801      	bhi.n	7f28 <__ssvfscanf_r+0x494>
    7f24:	f000 fc6e 	bl	8804 <__ssvfscanf_r+0xd70>
    7f28:	2d03      	cmp	r5, #3
    7f2a:	d01a      	beq.n	7f62 <__ssvfscanf_r+0x4ce>
    7f2c:	3d04      	subs	r5, #4
    7f2e:	b2ed      	uxtb	r5, r5
    7f30:	43ec      	mvns	r4, r5
    7f32:	0033      	movs	r3, r6
    7f34:	445c      	add	r4, fp
    7f36:	46aa      	mov	sl, r5
    7f38:	4646      	mov	r6, r8
    7f3a:	0025      	movs	r5, r4
    7f3c:	46b8      	mov	r8, r7
    7f3e:	465c      	mov	r4, fp
    7f40:	001f      	movs	r7, r3
    7f42:	3c01      	subs	r4, #1
    7f44:	7821      	ldrb	r1, [r4, #0]
    7f46:	003a      	movs	r2, r7
    7f48:	0030      	movs	r0, r6
    7f4a:	f004 fa07 	bl	c35c <_sungetc_r>
    7f4e:	42a5      	cmp	r5, r4
    7f50:	d1f7      	bne.n	7f42 <__ssvfscanf_r+0x4ae>
    7f52:	003b      	movs	r3, r7
    7f54:	4647      	mov	r7, r8
    7f56:	4655      	mov	r5, sl
    7f58:	46b0      	mov	r8, r6
    7f5a:	46a3      	mov	fp, r4
    7f5c:	001e      	movs	r6, r3
    7f5e:	3f01      	subs	r7, #1
    7f60:	1b7f      	subs	r7, r7, r5
    7f62:	464b      	mov	r3, r9
    7f64:	05db      	lsls	r3, r3, #23
    7f66:	d519      	bpl.n	7f9c <__ssvfscanf_r+0x508>
    7f68:	464b      	mov	r3, r9
    7f6a:	055b      	lsls	r3, r3, #21
    7f6c:	d501      	bpl.n	7f72 <__ssvfscanf_r+0x4de>
    7f6e:	f000 fc5b 	bl	8828 <__ssvfscanf_r+0xd94>
    7f72:	465b      	mov	r3, fp
    7f74:	1e5c      	subs	r4, r3, #1
    7f76:	7821      	ldrb	r1, [r4, #0]
    7f78:	1e7d      	subs	r5, r7, #1
    7f7a:	2965      	cmp	r1, #101	; 0x65
    7f7c:	d008      	beq.n	7f90 <__ssvfscanf_r+0x4fc>
    7f7e:	2945      	cmp	r1, #69	; 0x45
    7f80:	d006      	beq.n	7f90 <__ssvfscanf_r+0x4fc>
    7f82:	0032      	movs	r2, r6
    7f84:	4640      	mov	r0, r8
    7f86:	3c01      	subs	r4, #1
    7f88:	f004 f9e8 	bl	c35c <_sungetc_r>
    7f8c:	7821      	ldrb	r1, [r4, #0]
    7f8e:	1ebd      	subs	r5, r7, #2
    7f90:	0032      	movs	r2, r6
    7f92:	4640      	mov	r0, r8
    7f94:	f004 f9e2 	bl	c35c <_sungetc_r>
    7f98:	002f      	movs	r7, r5
    7f9a:	46a3      	mov	fp, r4
    7f9c:	464a      	mov	r2, r9
    7f9e:	2310      	movs	r3, #16
    7fa0:	4013      	ands	r3, r2
    7fa2:	9a03      	ldr	r2, [sp, #12]
    7fa4:	4692      	mov	sl, r2
    7fa6:	d000      	beq.n	7faa <__ssvfscanf_r+0x516>
    7fa8:	e5ba      	b.n	7b20 <__ssvfscanf_r+0x8c>
    7faa:	465a      	mov	r2, fp
    7fac:	7013      	strb	r3, [r2, #0]
    7fae:	23c0      	movs	r3, #192	; 0xc0
    7fb0:	464a      	mov	r2, r9
    7fb2:	00db      	lsls	r3, r3, #3
    7fb4:	4013      	ands	r3, r2
    7fb6:	2280      	movs	r2, #128	; 0x80
    7fb8:	00d2      	lsls	r2, r2, #3
    7fba:	4293      	cmp	r3, r2
    7fbc:	d100      	bne.n	7fc0 <__ssvfscanf_r+0x52c>
    7fbe:	e389      	b.n	86d4 <__ssvfscanf_r+0xc40>
    7fc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7fc2:	2b00      	cmp	r3, #0
    7fc4:	d000      	beq.n	7fc8 <__ssvfscanf_r+0x534>
    7fc6:	e1c0      	b.n	834a <__ssvfscanf_r+0x8b6>
    7fc8:	2200      	movs	r2, #0
    7fca:	990a      	ldr	r1, [sp, #40]	; 0x28
    7fcc:	4640      	mov	r0, r8
    7fce:	f003 fe89 	bl	bce4 <_strtod_r>
    7fd2:	464b      	mov	r3, r9
    7fd4:	0004      	movs	r4, r0
    7fd6:	000d      	movs	r5, r1
    7fd8:	07db      	lsls	r3, r3, #31
    7fda:	d403      	bmi.n	7fe4 <__ssvfscanf_r+0x550>
    7fdc:	464b      	mov	r3, r9
    7fde:	079b      	lsls	r3, r3, #30
    7fe0:	d400      	bmi.n	7fe4 <__ssvfscanf_r+0x550>
    7fe2:	e198      	b.n	8316 <__ssvfscanf_r+0x882>
    7fe4:	9a07      	ldr	r2, [sp, #28]
    7fe6:	6813      	ldr	r3, [r2, #0]
    7fe8:	601c      	str	r4, [r3, #0]
    7fea:	605d      	str	r5, [r3, #4]
    7fec:	0013      	movs	r3, r2
    7fee:	3304      	adds	r3, #4
    7ff0:	9307      	str	r3, [sp, #28]
    7ff2:	9b08      	ldr	r3, [sp, #32]
    7ff4:	3301      	adds	r3, #1
    7ff6:	9308      	str	r3, [sp, #32]
    7ff8:	9b03      	ldr	r3, [sp, #12]
    7ffa:	469a      	mov	sl, r3
    7ffc:	4654      	mov	r4, sl
    7ffe:	e590      	b.n	7b22 <__ssvfscanf_r+0x8e>
    8000:	465b      	mov	r3, fp
    8002:	2b02      	cmp	r3, #2
    8004:	d000      	beq.n	8008 <__ssvfscanf_r+0x574>
    8006:	e725      	b.n	7e54 <__ssvfscanf_r+0x3c0>
    8008:	2303      	movs	r3, #3
    800a:	469b      	mov	fp, r3
    800c:	e713      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    800e:	23a0      	movs	r3, #160	; 0xa0
    8010:	4648      	mov	r0, r9
    8012:	00db      	lsls	r3, r3, #3
    8014:	4003      	ands	r3, r0
    8016:	2080      	movs	r0, #128	; 0x80
    8018:	00c0      	lsls	r0, r0, #3
    801a:	4283      	cmp	r3, r0
    801c:	d007      	beq.n	802e <__ssvfscanf_r+0x59a>
    801e:	464b      	mov	r3, r9
    8020:	4203      	tst	r3, r0
    8022:	d100      	bne.n	8026 <__ssvfscanf_r+0x592>
    8024:	e715      	b.n	7e52 <__ssvfscanf_r+0x3be>
    8026:	9b06      	ldr	r3, [sp, #24]
    8028:	2b00      	cmp	r3, #0
    802a:	d100      	bne.n	802e <__ssvfscanf_r+0x59a>
    802c:	e76b      	b.n	7f06 <__ssvfscanf_r+0x472>
    802e:	2080      	movs	r0, #128	; 0x80
    8030:	464b      	mov	r3, r9
    8032:	0080      	lsls	r0, r0, #2
    8034:	4203      	tst	r3, r0
    8036:	d104      	bne.n	8042 <__ssvfscanf_r+0x5ae>
    8038:	9b06      	ldr	r3, [sp, #24]
    803a:	980b      	ldr	r0, [sp, #44]	; 0x2c
    803c:	970e      	str	r7, [sp, #56]	; 0x38
    803e:	1a1b      	subs	r3, r3, r0
    8040:	930f      	str	r3, [sp, #60]	; 0x3c
    8042:	4648      	mov	r0, r9
    8044:	4b35      	ldr	r3, [pc, #212]	; (811c <__ssvfscanf_r+0x688>)
    8046:	4018      	ands	r0, r3
    8048:	0003      	movs	r3, r0
    804a:	20c0      	movs	r0, #192	; 0xc0
    804c:	0040      	lsls	r0, r0, #1
    804e:	4318      	orrs	r0, r3
    8050:	2300      	movs	r3, #0
    8052:	4681      	mov	r9, r0
    8054:	9306      	str	r3, [sp, #24]
    8056:	e6ee      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    8058:	9b04      	ldr	r3, [sp, #16]
    805a:	2b01      	cmp	r3, #1
    805c:	d000      	beq.n	8060 <__ssvfscanf_r+0x5cc>
    805e:	e6f8      	b.n	7e52 <__ssvfscanf_r+0x3be>
    8060:	2302      	movs	r3, #2
    8062:	9304      	str	r3, [sp, #16]
    8064:	e6e7      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    8066:	465b      	mov	r3, fp
    8068:	2b07      	cmp	r3, #7
    806a:	d000      	beq.n	806e <__ssvfscanf_r+0x5da>
    806c:	e6f2      	b.n	7e54 <__ssvfscanf_r+0x3c0>
    806e:	2308      	movs	r3, #8
    8070:	469b      	mov	fp, r3
    8072:	e6e0      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    8074:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8076:	781b      	ldrb	r3, [r3, #0]
    8078:	428b      	cmp	r3, r1
    807a:	d000      	beq.n	807e <__ssvfscanf_r+0x5ea>
    807c:	e6e9      	b.n	7e52 <__ssvfscanf_r+0x3be>
    807e:	2080      	movs	r0, #128	; 0x80
    8080:	464b      	mov	r3, r9
    8082:	0080      	lsls	r0, r0, #2
    8084:	4203      	tst	r3, r0
    8086:	d100      	bne.n	808a <__ssvfscanf_r+0x5f6>
    8088:	e6e3      	b.n	7e52 <__ssvfscanf_r+0x3be>
    808a:	4825      	ldr	r0, [pc, #148]	; (8120 <__ssvfscanf_r+0x68c>)
    808c:	4003      	ands	r3, r0
    808e:	4699      	mov	r9, r3
    8090:	9b06      	ldr	r3, [sp, #24]
    8092:	930b      	str	r3, [sp, #44]	; 0x2c
    8094:	e6cf      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    8096:	2b01      	cmp	r3, #1
    8098:	d144      	bne.n	8124 <__ssvfscanf_r+0x690>
    809a:	2c00      	cmp	r4, #0
    809c:	d100      	bne.n	80a0 <__ssvfscanf_r+0x60c>
    809e:	3c01      	subs	r4, #1
    80a0:	464b      	mov	r3, r9
    80a2:	06db      	lsls	r3, r3, #27
    80a4:	d400      	bmi.n	80a8 <__ssvfscanf_r+0x614>
    80a6:	e1c1      	b.n	842c <__ssvfscanf_r+0x998>
    80a8:	ab14      	add	r3, sp, #80	; 0x50
    80aa:	2500      	movs	r5, #0
    80ac:	469a      	mov	sl, r3
    80ae:	6832      	ldr	r2, [r6, #0]
    80b0:	4651      	mov	r1, sl
    80b2:	7813      	ldrb	r3, [r2, #0]
    80b4:	5ccb      	ldrb	r3, [r1, r3]
    80b6:	2b00      	cmp	r3, #0
    80b8:	d015      	beq.n	80e6 <__ssvfscanf_r+0x652>
    80ba:	6873      	ldr	r3, [r6, #4]
    80bc:	3201      	adds	r2, #1
    80be:	3b01      	subs	r3, #1
    80c0:	3501      	adds	r5, #1
    80c2:	6073      	str	r3, [r6, #4]
    80c4:	6032      	str	r2, [r6, #0]
    80c6:	42ac      	cmp	r4, r5
    80c8:	d010      	beq.n	80ec <__ssvfscanf_r+0x658>
    80ca:	2b00      	cmp	r3, #0
    80cc:	dcf0      	bgt.n	80b0 <__ssvfscanf_r+0x61c>
    80ce:	0031      	movs	r1, r6
    80d0:	4640      	mov	r0, r8
    80d2:	f004 f985 	bl	c3e0 <__ssrefill_r>
    80d6:	2800      	cmp	r0, #0
    80d8:	d108      	bne.n	80ec <__ssvfscanf_r+0x658>
    80da:	4651      	mov	r1, sl
    80dc:	6832      	ldr	r2, [r6, #0]
    80de:	7813      	ldrb	r3, [r2, #0]
    80e0:	5ccb      	ldrb	r3, [r1, r3]
    80e2:	2b00      	cmp	r3, #0
    80e4:	d1e9      	bne.n	80ba <__ssvfscanf_r+0x626>
    80e6:	2d00      	cmp	r5, #0
    80e8:	d100      	bne.n	80ec <__ssvfscanf_r+0x658>
    80ea:	e520      	b.n	7b2e <__ssvfscanf_r+0x9a>
    80ec:	197f      	adds	r7, r7, r5
    80ee:	e783      	b.n	7ff8 <__ssvfscanf_r+0x564>
    80f0:	465b      	mov	r3, fp
    80f2:	20fd      	movs	r0, #253	; 0xfd
    80f4:	3b03      	subs	r3, #3
    80f6:	4203      	tst	r3, r0
    80f8:	d000      	beq.n	80fc <__ssvfscanf_r+0x668>
    80fa:	e6aa      	b.n	7e52 <__ssvfscanf_r+0x3be>
    80fc:	3304      	adds	r3, #4
    80fe:	b2db      	uxtb	r3, r3
    8100:	469b      	mov	fp, r3
    8102:	e698      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    8104:	9b04      	ldr	r3, [sp, #16]
    8106:	2b02      	cmp	r3, #2
    8108:	d000      	beq.n	810c <__ssvfscanf_r+0x678>
    810a:	e6e3      	b.n	7ed4 <__ssvfscanf_r+0x440>
    810c:	2303      	movs	r3, #3
    810e:	9304      	str	r3, [sp, #16]
    8110:	e691      	b.n	7e36 <__ssvfscanf_r+0x3a2>
    8112:	46c0      	nop			; (mov r8, r8)
    8114:	00006469 	.word	0x00006469
    8118:	fffffe7f 	.word	0xfffffe7f
    811c:	fffff87f 	.word	0xfffff87f
    8120:	fffffd7f 	.word	0xfffffd7f
    8124:	2c00      	cmp	r4, #0
    8126:	d100      	bne.n	812a <__ssvfscanf_r+0x696>
    8128:	3401      	adds	r4, #1
    812a:	464b      	mov	r3, r9
    812c:	07db      	lsls	r3, r3, #31
    812e:	d500      	bpl.n	8132 <__ssvfscanf_r+0x69e>
    8130:	e1aa      	b.n	8488 <__ssvfscanf_r+0x9f4>
    8132:	464b      	mov	r3, r9
    8134:	06db      	lsls	r3, r3, #27
    8136:	d400      	bmi.n	813a <__ssvfscanf_r+0x6a6>
    8138:	e22f      	b.n	859a <__ssvfscanf_r+0xb06>
    813a:	4643      	mov	r3, r8
    813c:	2500      	movs	r5, #0
    813e:	46b8      	mov	r8, r7
    8140:	001f      	movs	r7, r3
    8142:	e00c      	b.n	815e <__ssvfscanf_r+0x6ca>
    8144:	6832      	ldr	r2, [r6, #0]
    8146:	18ed      	adds	r5, r5, r3
    8148:	4694      	mov	ip, r2
    814a:	1ae4      	subs	r4, r4, r3
    814c:	4463      	add	r3, ip
    814e:	6033      	str	r3, [r6, #0]
    8150:	0031      	movs	r1, r6
    8152:	0038      	movs	r0, r7
    8154:	f004 f944 	bl	c3e0 <__ssrefill_r>
    8158:	2800      	cmp	r0, #0
    815a:	d000      	beq.n	815e <__ssvfscanf_r+0x6ca>
    815c:	e214      	b.n	8588 <__ssvfscanf_r+0xaf4>
    815e:	6873      	ldr	r3, [r6, #4]
    8160:	42a3      	cmp	r3, r4
    8162:	dbef      	blt.n	8144 <__ssvfscanf_r+0x6b0>
    8164:	1b1b      	subs	r3, r3, r4
    8166:	6073      	str	r3, [r6, #4]
    8168:	6833      	ldr	r3, [r6, #0]
    816a:	003a      	movs	r2, r7
    816c:	469c      	mov	ip, r3
    816e:	4647      	mov	r7, r8
    8170:	192d      	adds	r5, r5, r4
    8172:	4464      	add	r4, ip
    8174:	4690      	mov	r8, r2
    8176:	6034      	str	r4, [r6, #0]
    8178:	197f      	adds	r7, r7, r5
    817a:	e73d      	b.n	7ff8 <__ssvfscanf_r+0x564>
    817c:	22ae      	movs	r2, #174	; 0xae
    817e:	2100      	movs	r1, #0
    8180:	1e63      	subs	r3, r4, #1
    8182:	0052      	lsls	r2, r2, #1
    8184:	468b      	mov	fp, r1
    8186:	4293      	cmp	r3, r2
    8188:	d904      	bls.n	8194 <__ssvfscanf_r+0x700>
    818a:	4bcb      	ldr	r3, [pc, #812]	; (84b8 <__ssvfscanf_r+0xa24>)
    818c:	469b      	mov	fp, r3
    818e:	44a3      	add	fp, r4
    8190:	245e      	movs	r4, #94	; 0x5e
    8192:	34ff      	adds	r4, #255	; 0xff
    8194:	23d8      	movs	r3, #216	; 0xd8
    8196:	464a      	mov	r2, r9
    8198:	011b      	lsls	r3, r3, #4
    819a:	431a      	orrs	r2, r3
    819c:	2300      	movs	r3, #0
    819e:	469a      	mov	sl, r3
    81a0:	ab54      	add	r3, sp, #336	; 0x150
    81a2:	930a      	str	r3, [sp, #40]	; 0x28
    81a4:	001d      	movs	r5, r3
    81a6:	003b      	movs	r3, r7
    81a8:	0017      	movs	r7, r2
    81aa:	4699      	mov	r9, r3
    81ac:	6832      	ldr	r2, [r6, #0]
    81ae:	7811      	ldrb	r1, [r2, #0]
    81b0:	000b      	movs	r3, r1
    81b2:	3b2b      	subs	r3, #43	; 0x2b
    81b4:	b2db      	uxtb	r3, r3
    81b6:	2b4d      	cmp	r3, #77	; 0x4d
    81b8:	d81d      	bhi.n	81f6 <__ssvfscanf_r+0x762>
    81ba:	48c0      	ldr	r0, [pc, #768]	; (84bc <__ssvfscanf_r+0xa28>)
    81bc:	009b      	lsls	r3, r3, #2
    81be:	58c3      	ldr	r3, [r0, r3]
    81c0:	469f      	mov	pc, r3
    81c2:	23c0      	movs	r3, #192	; 0xc0
    81c4:	2080      	movs	r0, #128	; 0x80
    81c6:	00db      	lsls	r3, r3, #3
    81c8:	403b      	ands	r3, r7
    81ca:	0080      	lsls	r0, r0, #2
    81cc:	4283      	cmp	r3, r0
    81ce:	d112      	bne.n	81f6 <__ssvfscanf_r+0x762>
    81d0:	4bbb      	ldr	r3, [pc, #748]	; (84c0 <__ssvfscanf_r+0xa2c>)
    81d2:	401f      	ands	r7, r3
    81d4:	23a0      	movs	r3, #160	; 0xa0
    81d6:	00db      	lsls	r3, r3, #3
    81d8:	431f      	orrs	r7, r3
    81da:	2310      	movs	r3, #16
    81dc:	9305      	str	r3, [sp, #20]
    81de:	6873      	ldr	r3, [r6, #4]
    81e0:	7029      	strb	r1, [r5, #0]
    81e2:	3b01      	subs	r3, #1
    81e4:	3501      	adds	r5, #1
    81e6:	6073      	str	r3, [r6, #4]
    81e8:	2b00      	cmp	r3, #0
    81ea:	dd49      	ble.n	8280 <__ssvfscanf_r+0x7ec>
    81ec:	3201      	adds	r2, #1
    81ee:	6032      	str	r2, [r6, #0]
    81f0:	3c01      	subs	r4, #1
    81f2:	2c00      	cmp	r4, #0
    81f4:	d1da      	bne.n	81ac <__ssvfscanf_r+0x718>
    81f6:	464b      	mov	r3, r9
    81f8:	46b9      	mov	r9, r7
    81fa:	001f      	movs	r7, r3
    81fc:	464b      	mov	r3, r9
    81fe:	05db      	lsls	r3, r3, #23
    8200:	d507      	bpl.n	8212 <__ssvfscanf_r+0x77e>
    8202:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8204:	429d      	cmp	r5, r3
    8206:	d900      	bls.n	820a <__ssvfscanf_r+0x776>
    8208:	e231      	b.n	866e <__ssvfscanf_r+0xbda>
    820a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    820c:	429d      	cmp	r5, r3
    820e:	d100      	bne.n	8212 <__ssvfscanf_r+0x77e>
    8210:	e48d      	b.n	7b2e <__ssvfscanf_r+0x9a>
    8212:	2310      	movs	r3, #16
    8214:	464a      	mov	r2, r9
    8216:	4013      	ands	r3, r2
    8218:	d100      	bne.n	821c <__ssvfscanf_r+0x788>
    821a:	e0b7      	b.n	838c <__ssvfscanf_r+0x8f8>
    821c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    821e:	1aed      	subs	r5, r5, r3
    8220:	4455      	add	r5, sl
    8222:	197f      	adds	r7, r7, r5
    8224:	e6e8      	b.n	7ff8 <__ssvfscanf_r+0x564>
    8226:	9b05      	ldr	r3, [sp, #20]
    8228:	2b0a      	cmp	r3, #10
    822a:	dde4      	ble.n	81f6 <__ssvfscanf_r+0x762>
    822c:	4ba5      	ldr	r3, [pc, #660]	; (84c4 <__ssvfscanf_r+0xa30>)
    822e:	401f      	ands	r7, r3
    8230:	e7d5      	b.n	81de <__ssvfscanf_r+0x74a>
    8232:	9b05      	ldr	r3, [sp, #20]
    8234:	48a4      	ldr	r0, [pc, #656]	; (84c8 <__ssvfscanf_r+0xa34>)
    8236:	005b      	lsls	r3, r3, #1
    8238:	5e1b      	ldrsh	r3, [r3, r0]
    823a:	9305      	str	r3, [sp, #20]
    823c:	4ba1      	ldr	r3, [pc, #644]	; (84c4 <__ssvfscanf_r+0xa30>)
    823e:	401f      	ands	r7, r3
    8240:	e7cd      	b.n	81de <__ssvfscanf_r+0x74a>
    8242:	053b      	lsls	r3, r7, #20
    8244:	d5cb      	bpl.n	81de <__ssvfscanf_r+0x74a>
    8246:	9b05      	ldr	r3, [sp, #20]
    8248:	2b00      	cmp	r3, #0
    824a:	d105      	bne.n	8258 <__ssvfscanf_r+0x7c4>
    824c:	2380      	movs	r3, #128	; 0x80
    824e:	009b      	lsls	r3, r3, #2
    8250:	431f      	orrs	r7, r3
    8252:	3bf9      	subs	r3, #249	; 0xf9
    8254:	3bff      	subs	r3, #255	; 0xff
    8256:	9305      	str	r3, [sp, #20]
    8258:	057b      	lsls	r3, r7, #21
    825a:	d459      	bmi.n	8310 <__ssvfscanf_r+0x87c>
    825c:	4b9b      	ldr	r3, [pc, #620]	; (84cc <__ssvfscanf_r+0xa38>)
    825e:	401f      	ands	r7, r3
    8260:	465b      	mov	r3, fp
    8262:	2b00      	cmp	r3, #0
    8264:	d004      	beq.n	8270 <__ssvfscanf_r+0x7dc>
    8266:	2301      	movs	r3, #1
    8268:	425b      	negs	r3, r3
    826a:	469c      	mov	ip, r3
    826c:	3401      	adds	r4, #1
    826e:	44e3      	add	fp, ip
    8270:	2301      	movs	r3, #1
    8272:	469c      	mov	ip, r3
    8274:	6873      	ldr	r3, [r6, #4]
    8276:	44e2      	add	sl, ip
    8278:	3b01      	subs	r3, #1
    827a:	6073      	str	r3, [r6, #4]
    827c:	2b00      	cmp	r3, #0
    827e:	dcb5      	bgt.n	81ec <__ssvfscanf_r+0x758>
    8280:	0031      	movs	r1, r6
    8282:	4640      	mov	r0, r8
    8284:	f004 f8ac 	bl	c3e0 <__ssrefill_r>
    8288:	2800      	cmp	r0, #0
    828a:	d0b1      	beq.n	81f0 <__ssvfscanf_r+0x75c>
    828c:	e7b3      	b.n	81f6 <__ssvfscanf_r+0x762>
    828e:	9b05      	ldr	r3, [sp, #20]
    8290:	488d      	ldr	r0, [pc, #564]	; (84c8 <__ssvfscanf_r+0xa34>)
    8292:	005b      	lsls	r3, r3, #1
    8294:	5e1b      	ldrsh	r3, [r3, r0]
    8296:	9305      	str	r3, [sp, #20]
    8298:	2b08      	cmp	r3, #8
    829a:	dcc7      	bgt.n	822c <__ssvfscanf_r+0x798>
    829c:	e7ab      	b.n	81f6 <__ssvfscanf_r+0x762>
    829e:	2380      	movs	r3, #128	; 0x80
    82a0:	423b      	tst	r3, r7
    82a2:	d0a8      	beq.n	81f6 <__ssvfscanf_r+0x762>
    82a4:	439f      	bics	r7, r3
    82a6:	e79a      	b.n	81de <__ssvfscanf_r+0x74a>
    82a8:	2c00      	cmp	r4, #0
    82aa:	d100      	bne.n	82ae <__ssvfscanf_r+0x81a>
    82ac:	3c01      	subs	r4, #1
    82ae:	2501      	movs	r5, #1
    82b0:	464b      	mov	r3, r9
    82b2:	401d      	ands	r5, r3
    82b4:	d000      	beq.n	82b8 <__ssvfscanf_r+0x824>
    82b6:	e093      	b.n	83e0 <__ssvfscanf_r+0x94c>
    82b8:	464b      	mov	r3, r9
    82ba:	06db      	lsls	r3, r3, #27
    82bc:	d400      	bmi.n	82c0 <__ssvfscanf_r+0x82c>
    82be:	e183      	b.n	85c8 <__ssvfscanf_r+0xb34>
    82c0:	2308      	movs	r3, #8
    82c2:	4699      	mov	r9, r3
    82c4:	f001 fcb8 	bl	9c38 <__locale_ctype_ptr>
    82c8:	4649      	mov	r1, r9
    82ca:	6833      	ldr	r3, [r6, #0]
    82cc:	781a      	ldrb	r2, [r3, #0]
    82ce:	1880      	adds	r0, r0, r2
    82d0:	7842      	ldrb	r2, [r0, #1]
    82d2:	4211      	tst	r1, r2
    82d4:	d000      	beq.n	82d8 <__ssvfscanf_r+0x844>
    82d6:	e709      	b.n	80ec <__ssvfscanf_r+0x658>
    82d8:	6872      	ldr	r2, [r6, #4]
    82da:	3301      	adds	r3, #1
    82dc:	3a01      	subs	r2, #1
    82de:	3501      	adds	r5, #1
    82e0:	6072      	str	r2, [r6, #4]
    82e2:	6033      	str	r3, [r6, #0]
    82e4:	42ac      	cmp	r4, r5
    82e6:	d100      	bne.n	82ea <__ssvfscanf_r+0x856>
    82e8:	e700      	b.n	80ec <__ssvfscanf_r+0x658>
    82ea:	2a00      	cmp	r2, #0
    82ec:	dcea      	bgt.n	82c4 <__ssvfscanf_r+0x830>
    82ee:	0031      	movs	r1, r6
    82f0:	4640      	mov	r0, r8
    82f2:	f004 f875 	bl	c3e0 <__ssrefill_r>
    82f6:	2800      	cmp	r0, #0
    82f8:	d0e4      	beq.n	82c4 <__ssvfscanf_r+0x830>
    82fa:	197f      	adds	r7, r7, r5
    82fc:	e67c      	b.n	7ff8 <__ssvfscanf_r+0x564>
    82fe:	465b      	mov	r3, fp
    8300:	46bb      	mov	fp, r7
    8302:	002f      	movs	r7, r5
    8304:	001d      	movs	r5, r3
    8306:	464a      	mov	r2, r9
    8308:	4b71      	ldr	r3, [pc, #452]	; (84d0 <__ssvfscanf_r+0xa3c>)
    830a:	401a      	ands	r2, r3
    830c:	4691      	mov	r9, r2
    830e:	e5fe      	b.n	7f0e <__ssvfscanf_r+0x47a>
    8310:	4b70      	ldr	r3, [pc, #448]	; (84d4 <__ssvfscanf_r+0xa40>)
    8312:	401f      	ands	r7, r3
    8314:	e763      	b.n	81de <__ssvfscanf_r+0x74a>
    8316:	9b07      	ldr	r3, [sp, #28]
    8318:	1d1a      	adds	r2, r3, #4
    831a:	681b      	ldr	r3, [r3, #0]
    831c:	4692      	mov	sl, r2
    831e:	4699      	mov	r9, r3
    8320:	0002      	movs	r2, r0
    8322:	000b      	movs	r3, r1
    8324:	f005 faf6 	bl	d914 <__aeabi_dcmpun>
    8328:	2800      	cmp	r0, #0
    832a:	d000      	beq.n	832e <__ssvfscanf_r+0x89a>
    832c:	e28e      	b.n	884c <__ssvfscanf_r+0xdb8>
    832e:	0020      	movs	r0, r4
    8330:	0029      	movs	r1, r5
    8332:	f7fd f9cb 	bl	56cc <__aeabi_d2f>
    8336:	464b      	mov	r3, r9
    8338:	6018      	str	r0, [r3, #0]
    833a:	4653      	mov	r3, sl
    833c:	9307      	str	r3, [sp, #28]
    833e:	e658      	b.n	7ff2 <__ssvfscanf_r+0x55e>
    8340:	464a      	mov	r2, r9
    8342:	431a      	orrs	r2, r3
    8344:	4691      	mov	r9, r2
    8346:	4b64      	ldr	r3, [pc, #400]	; (84d8 <__ssvfscanf_r+0xa44>)
    8348:	e472      	b.n	7c30 <__ssvfscanf_r+0x19c>
    834a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    834c:	2200      	movs	r2, #0
    834e:	1c59      	adds	r1, r3, #1
    8350:	4640      	mov	r0, r8
    8352:	230a      	movs	r3, #10
    8354:	f7fe f888 	bl	6468 <_strtol_r>
    8358:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    835a:	1ac2      	subs	r2, r0, r3
    835c:	a90e      	add	r1, sp, #56	; 0x38
    835e:	468c      	mov	ip, r1
    8360:	4b5e      	ldr	r3, [pc, #376]	; (84dc <__ssvfscanf_r+0xa48>)
    8362:	990e      	ldr	r1, [sp, #56]	; 0x38
    8364:	4463      	add	r3, ip
    8366:	4299      	cmp	r1, r3
    8368:	d302      	bcc.n	8370 <__ssvfscanf_r+0x8dc>
    836a:	4b5d      	ldr	r3, [pc, #372]	; (84e0 <__ssvfscanf_r+0xa4c>)
    836c:	4463      	add	r3, ip
    836e:	930e      	str	r3, [sp, #56]	; 0x38
    8370:	495c      	ldr	r1, [pc, #368]	; (84e4 <__ssvfscanf_r+0xa50>)
    8372:	980e      	ldr	r0, [sp, #56]	; 0x38
    8374:	f002 fd30 	bl	add8 <sprintf>
    8378:	e626      	b.n	7fc8 <__ssvfscanf_r+0x534>
    837a:	9a07      	ldr	r2, [sp, #28]
    837c:	4654      	mov	r4, sl
    837e:	6813      	ldr	r3, [r2, #0]
    8380:	601f      	str	r7, [r3, #0]
    8382:	0013      	movs	r3, r2
    8384:	3304      	adds	r3, #4
    8386:	9307      	str	r3, [sp, #28]
    8388:	f7ff fbcb 	bl	7b22 <__ssvfscanf_r+0x8e>
    838c:	702b      	strb	r3, [r5, #0]
    838e:	2200      	movs	r2, #0
    8390:	9b05      	ldr	r3, [sp, #20]
    8392:	990a      	ldr	r1, [sp, #40]	; 0x28
    8394:	4640      	mov	r0, r8
    8396:	9c09      	ldr	r4, [sp, #36]	; 0x24
    8398:	47a0      	blx	r4
    839a:	464b      	mov	r3, r9
    839c:	069b      	lsls	r3, r3, #26
    839e:	d500      	bpl.n	83a2 <__ssvfscanf_r+0x90e>
    83a0:	e15b      	b.n	865a <__ssvfscanf_r+0xbc6>
    83a2:	464b      	mov	r3, r9
    83a4:	075b      	lsls	r3, r3, #29
    83a6:	d500      	bpl.n	83aa <__ssvfscanf_r+0x916>
    83a8:	e1c6      	b.n	8738 <__ssvfscanf_r+0xca4>
    83aa:	464b      	mov	r3, r9
    83ac:	07db      	lsls	r3, r3, #31
    83ae:	d500      	bpl.n	83b2 <__ssvfscanf_r+0x91e>
    83b0:	e153      	b.n	865a <__ssvfscanf_r+0xbc6>
    83b2:	464b      	mov	r3, r9
    83b4:	079b      	lsls	r3, r3, #30
    83b6:	d400      	bmi.n	83ba <__ssvfscanf_r+0x926>
    83b8:	e14f      	b.n	865a <__ssvfscanf_r+0xbc6>
    83ba:	4b4b      	ldr	r3, [pc, #300]	; (84e8 <__ssvfscanf_r+0xa54>)
    83bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
    83be:	429a      	cmp	r2, r3
    83c0:	d100      	bne.n	83c4 <__ssvfscanf_r+0x930>
    83c2:	e1b2      	b.n	872a <__ssvfscanf_r+0xc96>
    83c4:	9b05      	ldr	r3, [sp, #20]
    83c6:	2200      	movs	r2, #0
    83c8:	990a      	ldr	r1, [sp, #40]	; 0x28
    83ca:	4640      	mov	r0, r8
    83cc:	f003 fd78 	bl	bec0 <_strtoll_r>
    83d0:	9a07      	ldr	r2, [sp, #28]
    83d2:	6813      	ldr	r3, [r2, #0]
    83d4:	6018      	str	r0, [r3, #0]
    83d6:	6059      	str	r1, [r3, #4]
    83d8:	0013      	movs	r3, r2
    83da:	3304      	adds	r3, #4
    83dc:	9307      	str	r3, [sp, #28]
    83de:	e142      	b.n	8666 <__ssvfscanf_r+0xbd2>
    83e0:	ab12      	add	r3, sp, #72	; 0x48
    83e2:	2208      	movs	r2, #8
    83e4:	0018      	movs	r0, r3
    83e6:	2100      	movs	r1, #0
    83e8:	9306      	str	r3, [sp, #24]
    83ea:	f7fd fba5 	bl	5b38 <memset>
    83ee:	2310      	movs	r3, #16
    83f0:	464a      	mov	r2, r9
    83f2:	401a      	ands	r2, r3
    83f4:	ab11      	add	r3, sp, #68	; 0x44
    83f6:	4693      	mov	fp, r2
    83f8:	4699      	mov	r9, r3
    83fa:	2a00      	cmp	r2, #0
    83fc:	d100      	bne.n	8400 <__ssvfscanf_r+0x96c>
    83fe:	e17f      	b.n	8700 <__ssvfscanf_r+0xc6c>
    8400:	2300      	movs	r3, #0
    8402:	001d      	movs	r5, r3
    8404:	f001 fc18 	bl	9c38 <__locale_ctype_ptr>
    8408:	2208      	movs	r2, #8
    840a:	6833      	ldr	r3, [r6, #0]
    840c:	781b      	ldrb	r3, [r3, #0]
    840e:	18c0      	adds	r0, r0, r3
    8410:	7843      	ldrb	r3, [r0, #1]
    8412:	421a      	tst	r2, r3
    8414:	d102      	bne.n	841c <__ssvfscanf_r+0x988>
    8416:	2c00      	cmp	r4, #0
    8418:	d000      	beq.n	841c <__ssvfscanf_r+0x988>
    841a:	e194      	b.n	8746 <__ssvfscanf_r+0xcb2>
    841c:	465b      	mov	r3, fp
    841e:	2b00      	cmp	r3, #0
    8420:	d000      	beq.n	8424 <__ssvfscanf_r+0x990>
    8422:	e5e9      	b.n	7ff8 <__ssvfscanf_r+0x564>
    8424:	464b      	mov	r3, r9
    8426:	465a      	mov	r2, fp
    8428:	601a      	str	r2, [r3, #0]
    842a:	e5e2      	b.n	7ff2 <__ssvfscanf_r+0x55e>
    842c:	9b07      	ldr	r3, [sp, #28]
    842e:	3c01      	subs	r4, #1
    8430:	1d1a      	adds	r2, r3, #4
    8432:	681b      	ldr	r3, [r3, #0]
    8434:	4693      	mov	fp, r2
    8436:	4699      	mov	r9, r3
    8438:	001a      	movs	r2, r3
    843a:	444c      	add	r4, r9
    843c:	ab14      	add	r3, sp, #80	; 0x50
    843e:	46ba      	mov	sl, r7
    8440:	001d      	movs	r5, r3
    8442:	0027      	movs	r7, r4
    8444:	6833      	ldr	r3, [r6, #0]
    8446:	7819      	ldrb	r1, [r3, #0]
    8448:	5c69      	ldrb	r1, [r5, r1]
    844a:	2900      	cmp	r1, #0
    844c:	d100      	bne.n	8450 <__ssvfscanf_r+0x9bc>
    844e:	e13e      	b.n	86ce <__ssvfscanf_r+0xc3a>
    8450:	6871      	ldr	r1, [r6, #4]
    8452:	1c54      	adds	r4, r2, #1
    8454:	3901      	subs	r1, #1
    8456:	6071      	str	r1, [r6, #4]
    8458:	1c59      	adds	r1, r3, #1
    845a:	6031      	str	r1, [r6, #0]
    845c:	781b      	ldrb	r3, [r3, #0]
    845e:	7013      	strb	r3, [r2, #0]
    8460:	42ba      	cmp	r2, r7
    8462:	d100      	bne.n	8466 <__ssvfscanf_r+0x9d2>
    8464:	e124      	b.n	86b0 <__ssvfscanf_r+0xc1c>
    8466:	6873      	ldr	r3, [r6, #4]
    8468:	2b00      	cmp	r3, #0
    846a:	dd01      	ble.n	8470 <__ssvfscanf_r+0x9dc>
    846c:	0022      	movs	r2, r4
    846e:	e7e9      	b.n	8444 <__ssvfscanf_r+0x9b0>
    8470:	0031      	movs	r1, r6
    8472:	4640      	mov	r0, r8
    8474:	f003 ffb4 	bl	c3e0 <__ssrefill_r>
    8478:	2800      	cmp	r0, #0
    847a:	d0f7      	beq.n	846c <__ssvfscanf_r+0x9d8>
    847c:	4657      	mov	r7, sl
    847e:	45a1      	cmp	r9, r4
    8480:	d000      	beq.n	8484 <__ssvfscanf_r+0x9f0>
    8482:	e116      	b.n	86b2 <__ssvfscanf_r+0xc1e>
    8484:	f7ff fba0 	bl	7bc8 <__ssvfscanf_r+0x134>
    8488:	ab12      	add	r3, sp, #72	; 0x48
    848a:	2208      	movs	r2, #8
    848c:	0018      	movs	r0, r3
    848e:	2100      	movs	r1, #0
    8490:	9306      	str	r3, [sp, #24]
    8492:	f7fd fb51 	bl	5b38 <memset>
    8496:	2310      	movs	r3, #16
    8498:	464a      	mov	r2, r9
    849a:	401a      	ands	r2, r3
    849c:	9204      	str	r2, [sp, #16]
    849e:	d100      	bne.n	84a2 <__ssvfscanf_r+0xa0e>
    84a0:	e124      	b.n	86ec <__ssvfscanf_r+0xc58>
    84a2:	2300      	movs	r3, #0
    84a4:	469b      	mov	fp, r3
    84a6:	2c00      	cmp	r4, #0
    84a8:	d100      	bne.n	84ac <__ssvfscanf_r+0xa18>
    84aa:	e5a5      	b.n	7ff8 <__ssvfscanf_r+0x564>
    84ac:	9b06      	ldr	r3, [sp, #24]
    84ae:	46b9      	mov	r9, r7
    84b0:	2500      	movs	r5, #0
    84b2:	0027      	movs	r7, r4
    84b4:	469a      	mov	sl, r3
    84b6:	e02a      	b.n	850e <__ssvfscanf_r+0xa7a>
    84b8:	fffffea3 	.word	0xfffffea3
    84bc:	00010598 	.word	0x00010598
    84c0:	fffffdff 	.word	0xfffffdff
    84c4:	fffff47f 	.word	0xfffff47f
    84c8:	000106d8 	.word	0x000106d8
    84cc:	fffffc7f 	.word	0xfffffc7f
    84d0:	fffffeff 	.word	0xfffffeff
    84d4:	fffffa7f 	.word	0xfffffa7f
    84d8:	00006469 	.word	0x00006469
    84dc:	0000026b 	.word	0x0000026b
    84e0:	0000026a 	.word	0x0000026a
    84e4:	000106d0 	.word	0x000106d0
    84e8:	0000c031 	.word	0x0000c031
    84ec:	9b04      	ldr	r3, [sp, #16]
    84ee:	2b00      	cmp	r3, #0
    84f0:	d146      	bne.n	8580 <__ssvfscanf_r+0xaec>
    84f2:	465a      	mov	r2, fp
    84f4:	44a1      	add	r9, r4
    84f6:	6013      	str	r3, [r2, #0]
    84f8:	3f01      	subs	r7, #1
    84fa:	2304      	movs	r3, #4
    84fc:	469c      	mov	ip, r3
    84fe:	2500      	movs	r5, #0
    8500:	44e3      	add	fp, ip
    8502:	6873      	ldr	r3, [r6, #4]
    8504:	2b00      	cmp	r3, #0
    8506:	dd2f      	ble.n	8568 <__ssvfscanf_r+0xad4>
    8508:	2f00      	cmp	r7, #0
    850a:	d100      	bne.n	850e <__ssvfscanf_r+0xa7a>
    850c:	e0fe      	b.n	870c <__ssvfscanf_r+0xc78>
    850e:	f001 fb7f 	bl	9c10 <__locale_mb_cur_max>
    8512:	42a8      	cmp	r0, r5
    8514:	d101      	bne.n	851a <__ssvfscanf_r+0xa86>
    8516:	f7ff fb57 	bl	7bc8 <__ssvfscanf_r+0x134>
    851a:	208c      	movs	r0, #140	; 0x8c
    851c:	6833      	ldr	r3, [r6, #0]
    851e:	0040      	lsls	r0, r0, #1
    8520:	781a      	ldrb	r2, [r3, #0]
    8522:	3301      	adds	r3, #1
    8524:	6033      	str	r3, [r6, #0]
    8526:	4653      	mov	r3, sl
    8528:	a90e      	add	r1, sp, #56	; 0x38
    852a:	1809      	adds	r1, r1, r0
    852c:	554a      	strb	r2, [r1, r5]
    852e:	6872      	ldr	r2, [r6, #4]
    8530:	1c6c      	adds	r4, r5, #1
    8532:	3a01      	subs	r2, #1
    8534:	6072      	str	r2, [r6, #4]
    8536:	4659      	mov	r1, fp
    8538:	9300      	str	r3, [sp, #0]
    853a:	aa54      	add	r2, sp, #336	; 0x150
    853c:	0023      	movs	r3, r4
    853e:	4640      	mov	r0, r8
    8540:	f001 fe50 	bl	a1e4 <_mbrtowc_r>
    8544:	1c43      	adds	r3, r0, #1
    8546:	d101      	bne.n	854c <__ssvfscanf_r+0xab8>
    8548:	f7ff fb3e 	bl	7bc8 <__ssvfscanf_r+0x134>
    854c:	2800      	cmp	r0, #0
    854e:	d0cd      	beq.n	84ec <__ssvfscanf_r+0xa58>
    8550:	0025      	movs	r5, r4
    8552:	1c83      	adds	r3, r0, #2
    8554:	d0d5      	beq.n	8502 <__ssvfscanf_r+0xa6e>
    8556:	9b04      	ldr	r3, [sp, #16]
    8558:	44a1      	add	r9, r4
    855a:	3f01      	subs	r7, #1
    855c:	2500      	movs	r5, #0
    855e:	2b00      	cmp	r3, #0
    8560:	d0cb      	beq.n	84fa <__ssvfscanf_r+0xa66>
    8562:	6873      	ldr	r3, [r6, #4]
    8564:	2b00      	cmp	r3, #0
    8566:	dccf      	bgt.n	8508 <__ssvfscanf_r+0xa74>
    8568:	0031      	movs	r1, r6
    856a:	4640      	mov	r0, r8
    856c:	f003 ff38 	bl	c3e0 <__ssrefill_r>
    8570:	2800      	cmp	r0, #0
    8572:	d0c9      	beq.n	8508 <__ssvfscanf_r+0xa74>
    8574:	464f      	mov	r7, r9
    8576:	2d00      	cmp	r5, #0
    8578:	d100      	bne.n	857c <__ssvfscanf_r+0xae8>
    857a:	e0c8      	b.n	870e <__ssvfscanf_r+0xc7a>
    857c:	f7ff fb24 	bl	7bc8 <__ssvfscanf_r+0x134>
    8580:	44a1      	add	r9, r4
    8582:	3f01      	subs	r7, #1
    8584:	2500      	movs	r5, #0
    8586:	e7bc      	b.n	8502 <__ssvfscanf_r+0xa6e>
    8588:	003b      	movs	r3, r7
    858a:	4647      	mov	r7, r8
    858c:	4698      	mov	r8, r3
    858e:	2d00      	cmp	r5, #0
    8590:	d101      	bne.n	8596 <__ssvfscanf_r+0xb02>
    8592:	f7ff fb19 	bl	7bc8 <__ssvfscanf_r+0x134>
    8596:	197f      	adds	r7, r7, r5
    8598:	e52e      	b.n	7ff8 <__ssvfscanf_r+0x564>
    859a:	9b07      	ldr	r3, [sp, #28]
    859c:	2201      	movs	r2, #1
    859e:	6819      	ldr	r1, [r3, #0]
    85a0:	1d1d      	adds	r5, r3, #4
    85a2:	9600      	str	r6, [sp, #0]
    85a4:	0023      	movs	r3, r4
    85a6:	4640      	mov	r0, r8
    85a8:	f003 ff3a 	bl	c420 <_sfread_r>
    85ac:	2800      	cmp	r0, #0
    85ae:	d101      	bne.n	85b4 <__ssvfscanf_r+0xb20>
    85b0:	f7ff fb0a 	bl	7bc8 <__ssvfscanf_r+0x134>
    85b4:	9b08      	ldr	r3, [sp, #32]
    85b6:	183f      	adds	r7, r7, r0
    85b8:	3301      	adds	r3, #1
    85ba:	9308      	str	r3, [sp, #32]
    85bc:	9b03      	ldr	r3, [sp, #12]
    85be:	9507      	str	r5, [sp, #28]
    85c0:	469a      	mov	sl, r3
    85c2:	4654      	mov	r4, sl
    85c4:	f7ff faad 	bl	7b22 <__ssvfscanf_r+0x8e>
    85c8:	9b07      	ldr	r3, [sp, #28]
    85ca:	46b9      	mov	r9, r7
    85cc:	1d1a      	adds	r2, r3, #4
    85ce:	681b      	ldr	r3, [r3, #0]
    85d0:	3c01      	subs	r4, #1
    85d2:	469a      	mov	sl, r3
    85d4:	9306      	str	r3, [sp, #24]
    85d6:	001d      	movs	r5, r3
    85d8:	2308      	movs	r3, #8
    85da:	469b      	mov	fp, r3
    85dc:	9204      	str	r2, [sp, #16]
    85de:	44a2      	add	sl, r4
    85e0:	f001 fb2a 	bl	9c38 <__locale_ctype_ptr>
    85e4:	4659      	mov	r1, fp
    85e6:	6833      	ldr	r3, [r6, #0]
    85e8:	781a      	ldrb	r2, [r3, #0]
    85ea:	1880      	adds	r0, r0, r2
    85ec:	7842      	ldrb	r2, [r0, #1]
    85ee:	4211      	tst	r1, r2
    85f0:	d179      	bne.n	86e6 <__ssvfscanf_r+0xc52>
    85f2:	6872      	ldr	r2, [r6, #4]
    85f4:	1c6c      	adds	r4, r5, #1
    85f6:	3a01      	subs	r2, #1
    85f8:	6072      	str	r2, [r6, #4]
    85fa:	1c5a      	adds	r2, r3, #1
    85fc:	6032      	str	r2, [r6, #0]
    85fe:	781b      	ldrb	r3, [r3, #0]
    8600:	0027      	movs	r7, r4
    8602:	702b      	strb	r3, [r5, #0]
    8604:	4555      	cmp	r5, sl
    8606:	d00a      	beq.n	861e <__ssvfscanf_r+0xb8a>
    8608:	6873      	ldr	r3, [r6, #4]
    860a:	2b00      	cmp	r3, #0
    860c:	dd01      	ble.n	8612 <__ssvfscanf_r+0xb7e>
    860e:	0025      	movs	r5, r4
    8610:	e7e6      	b.n	85e0 <__ssvfscanf_r+0xb4c>
    8612:	0031      	movs	r1, r6
    8614:	4640      	mov	r0, r8
    8616:	f003 fee3 	bl	c3e0 <__ssrefill_r>
    861a:	2800      	cmp	r0, #0
    861c:	d0f7      	beq.n	860e <__ssvfscanf_r+0xb7a>
    861e:	464b      	mov	r3, r9
    8620:	46b9      	mov	r9, r7
    8622:	001f      	movs	r7, r3
    8624:	2300      	movs	r3, #0
    8626:	464a      	mov	r2, r9
    8628:	7013      	strb	r3, [r2, #0]
    862a:	464b      	mov	r3, r9
    862c:	9a06      	ldr	r2, [sp, #24]
    862e:	1a9b      	subs	r3, r3, r2
    8630:	18ff      	adds	r7, r7, r3
    8632:	9b08      	ldr	r3, [sp, #32]
    8634:	3301      	adds	r3, #1
    8636:	9308      	str	r3, [sp, #32]
    8638:	9b04      	ldr	r3, [sp, #16]
    863a:	9307      	str	r3, [sp, #28]
    863c:	9b03      	ldr	r3, [sp, #12]
    863e:	469a      	mov	sl, r3
    8640:	4654      	mov	r4, sl
    8642:	f7ff fa6e 	bl	7b22 <__ssvfscanf_r+0x8e>
    8646:	0031      	movs	r1, r6
    8648:	4640      	mov	r0, r8
    864a:	f003 fec9 	bl	c3e0 <__ssrefill_r>
    864e:	2800      	cmp	r0, #0
    8650:	d101      	bne.n	8656 <__ssvfscanf_r+0xbc2>
    8652:	f7ff fa94 	bl	7b7e <__ssvfscanf_r+0xea>
    8656:	f7ff fab7 	bl	7bc8 <__ssvfscanf_r+0x134>
    865a:	9a07      	ldr	r2, [sp, #28]
    865c:	6813      	ldr	r3, [r2, #0]
    865e:	6018      	str	r0, [r3, #0]
    8660:	0013      	movs	r3, r2
    8662:	3304      	adds	r3, #4
    8664:	9307      	str	r3, [sp, #28]
    8666:	9b08      	ldr	r3, [sp, #32]
    8668:	3301      	adds	r3, #1
    866a:	9308      	str	r3, [sp, #32]
    866c:	e5d6      	b.n	821c <__ssvfscanf_r+0x788>
    866e:	3d01      	subs	r5, #1
    8670:	7829      	ldrb	r1, [r5, #0]
    8672:	0032      	movs	r2, r6
    8674:	4640      	mov	r0, r8
    8676:	f003 fe71 	bl	c35c <_sungetc_r>
    867a:	e5c6      	b.n	820a <__ssvfscanf_r+0x776>
    867c:	4648      	mov	r0, r9
    867e:	4b78      	ldr	r3, [pc, #480]	; (8860 <__ssvfscanf_r+0xdcc>)
    8680:	4018      	ands	r0, r3
    8682:	2301      	movs	r3, #1
    8684:	4681      	mov	r9, r0
    8686:	469b      	mov	fp, r3
    8688:	f7ff fbd5 	bl	7e36 <__ssvfscanf_r+0x3a2>
    868c:	4648      	mov	r0, r9
    868e:	4b74      	ldr	r3, [pc, #464]	; (8860 <__ssvfscanf_r+0xdcc>)
    8690:	4018      	ands	r0, r3
    8692:	2301      	movs	r3, #1
    8694:	4681      	mov	r9, r0
    8696:	9304      	str	r3, [sp, #16]
    8698:	f7ff fbcd 	bl	7e36 <__ssvfscanf_r+0x3a2>
    869c:	464b      	mov	r3, r9
    869e:	2102      	movs	r1, #2
    86a0:	4313      	orrs	r3, r2
    86a2:	4699      	mov	r9, r3
    86a4:	468c      	mov	ip, r1
    86a6:	4653      	mov	r3, sl
    86a8:	44e2      	add	sl, ip
    86aa:	789b      	ldrb	r3, [r3, #2]
    86ac:	f7ff fa56 	bl	7b5c <__ssvfscanf_r+0xc8>
    86b0:	4657      	mov	r7, sl
    86b2:	464b      	mov	r3, r9
    86b4:	1ae5      	subs	r5, r4, r3
    86b6:	d101      	bne.n	86bc <__ssvfscanf_r+0xc28>
    86b8:	f7ff fa39 	bl	7b2e <__ssvfscanf_r+0x9a>
    86bc:	2300      	movs	r3, #0
    86be:	7023      	strb	r3, [r4, #0]
    86c0:	9b08      	ldr	r3, [sp, #32]
    86c2:	197f      	adds	r7, r7, r5
    86c4:	3301      	adds	r3, #1
    86c6:	9308      	str	r3, [sp, #32]
    86c8:	465b      	mov	r3, fp
    86ca:	9307      	str	r3, [sp, #28]
    86cc:	e494      	b.n	7ff8 <__ssvfscanf_r+0x564>
    86ce:	4657      	mov	r7, sl
    86d0:	0014      	movs	r4, r2
    86d2:	e7ee      	b.n	86b2 <__ssvfscanf_r+0xc1e>
    86d4:	9b06      	ldr	r3, [sp, #24]
    86d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    86d8:	1a9a      	subs	r2, r3, r2
    86da:	d100      	bne.n	86de <__ssvfscanf_r+0xc4a>
    86dc:	e474      	b.n	7fc8 <__ssvfscanf_r+0x534>
    86de:	465b      	mov	r3, fp
    86e0:	4252      	negs	r2, r2
    86e2:	930e      	str	r3, [sp, #56]	; 0x38
    86e4:	e63a      	b.n	835c <__ssvfscanf_r+0x8c8>
    86e6:	464f      	mov	r7, r9
    86e8:	46a9      	mov	r9, r5
    86ea:	e79b      	b.n	8624 <__ssvfscanf_r+0xb90>
    86ec:	9a07      	ldr	r2, [sp, #28]
    86ee:	0013      	movs	r3, r2
    86f0:	6812      	ldr	r2, [r2, #0]
    86f2:	3304      	adds	r3, #4
    86f4:	4693      	mov	fp, r2
    86f6:	9307      	str	r3, [sp, #28]
    86f8:	2c00      	cmp	r4, #0
    86fa:	d000      	beq.n	86fe <__ssvfscanf_r+0xc6a>
    86fc:	e6d6      	b.n	84ac <__ssvfscanf_r+0xa18>
    86fe:	e478      	b.n	7ff2 <__ssvfscanf_r+0x55e>
    8700:	9b07      	ldr	r3, [sp, #28]
    8702:	681a      	ldr	r2, [r3, #0]
    8704:	3304      	adds	r3, #4
    8706:	4691      	mov	r9, r2
    8708:	9307      	str	r3, [sp, #28]
    870a:	e679      	b.n	8400 <__ssvfscanf_r+0x96c>
    870c:	464f      	mov	r7, r9
    870e:	9b04      	ldr	r3, [sp, #16]
    8710:	2b00      	cmp	r3, #0
    8712:	d100      	bne.n	8716 <__ssvfscanf_r+0xc82>
    8714:	e46d      	b.n	7ff2 <__ssvfscanf_r+0x55e>
    8716:	e46f      	b.n	7ff8 <__ssvfscanf_r+0x564>
    8718:	9b07      	ldr	r3, [sp, #28]
    871a:	4654      	mov	r4, sl
    871c:	681a      	ldr	r2, [r3, #0]
    871e:	3304      	adds	r3, #4
    8720:	9203      	str	r2, [sp, #12]
    8722:	8017      	strh	r7, [r2, #0]
    8724:	9307      	str	r3, [sp, #28]
    8726:	f7ff f9fc 	bl	7b22 <__ssvfscanf_r+0x8e>
    872a:	9b05      	ldr	r3, [sp, #20]
    872c:	2200      	movs	r2, #0
    872e:	990a      	ldr	r1, [sp, #40]	; 0x28
    8730:	4640      	mov	r0, r8
    8732:	f003 fd71 	bl	c218 <_strtoull_r>
    8736:	e64b      	b.n	83d0 <__ssvfscanf_r+0x93c>
    8738:	9b07      	ldr	r3, [sp, #28]
    873a:	681a      	ldr	r2, [r3, #0]
    873c:	3304      	adds	r3, #4
    873e:	9204      	str	r2, [sp, #16]
    8740:	8010      	strh	r0, [r2, #0]
    8742:	9307      	str	r3, [sp, #28]
    8744:	e78f      	b.n	8666 <__ssvfscanf_r+0xbd2>
    8746:	f001 fa63 	bl	9c10 <__locale_mb_cur_max>
    874a:	4285      	cmp	r5, r0
    874c:	d101      	bne.n	8752 <__ssvfscanf_r+0xcbe>
    874e:	f7ff fa3b 	bl	7bc8 <__ssvfscanf_r+0x134>
    8752:	208c      	movs	r0, #140	; 0x8c
    8754:	1c6b      	adds	r3, r5, #1
    8756:	469a      	mov	sl, r3
    8758:	6833      	ldr	r3, [r6, #0]
    875a:	0040      	lsls	r0, r0, #1
    875c:	781a      	ldrb	r2, [r3, #0]
    875e:	a90e      	add	r1, sp, #56	; 0x38
    8760:	1809      	adds	r1, r1, r0
    8762:	554a      	strb	r2, [r1, r5]
    8764:	3301      	adds	r3, #1
    8766:	6872      	ldr	r2, [r6, #4]
    8768:	6033      	str	r3, [r6, #0]
    876a:	9b06      	ldr	r3, [sp, #24]
    876c:	3a01      	subs	r2, #1
    876e:	6072      	str	r2, [r6, #4]
    8770:	4649      	mov	r1, r9
    8772:	9300      	str	r3, [sp, #0]
    8774:	aa54      	add	r2, sp, #336	; 0x150
    8776:	4653      	mov	r3, sl
    8778:	4640      	mov	r0, r8
    877a:	f001 fd33 	bl	a1e4 <_mbrtowc_r>
    877e:	1c43      	adds	r3, r0, #1
    8780:	d101      	bne.n	8786 <__ssvfscanf_r+0xcf2>
    8782:	f7ff fa21 	bl	7bc8 <__ssvfscanf_r+0x134>
    8786:	2800      	cmp	r0, #0
    8788:	d001      	beq.n	878e <__ssvfscanf_r+0xcfa>
    878a:	f7ff fa07 	bl	7b9c <__ssvfscanf_r+0x108>
    878e:	464b      	mov	r3, r9
    8790:	6018      	str	r0, [r3, #0]
    8792:	f001 fa31 	bl	9bf8 <iswspace>
    8796:	1e05      	subs	r5, r0, #0
    8798:	d012      	beq.n	87c0 <__ssvfscanf_r+0xd2c>
    879a:	4655      	mov	r5, sl
    879c:	2d00      	cmp	r5, #0
    879e:	d100      	bne.n	87a2 <__ssvfscanf_r+0xd0e>
    87a0:	e63c      	b.n	841c <__ssvfscanf_r+0x988>
    87a2:	4644      	mov	r4, r8
    87a4:	228c      	movs	r2, #140	; 0x8c
    87a6:	ab0e      	add	r3, sp, #56	; 0x38
    87a8:	0052      	lsls	r2, r2, #1
    87aa:	3d01      	subs	r5, #1
    87ac:	189b      	adds	r3, r3, r2
    87ae:	5d59      	ldrb	r1, [r3, r5]
    87b0:	0032      	movs	r2, r6
    87b2:	0020      	movs	r0, r4
    87b4:	f003 fdd2 	bl	c35c <_sungetc_r>
    87b8:	2d00      	cmp	r5, #0
    87ba:	d1f3      	bne.n	87a4 <__ssvfscanf_r+0xd10>
    87bc:	46a0      	mov	r8, r4
    87be:	e62d      	b.n	841c <__ssvfscanf_r+0x988>
    87c0:	465b      	mov	r3, fp
    87c2:	4457      	add	r7, sl
    87c4:	3c01      	subs	r4, #1
    87c6:	2b00      	cmp	r3, #0
    87c8:	d001      	beq.n	87ce <__ssvfscanf_r+0xd3a>
    87ca:	f7ff f9ec 	bl	7ba6 <__ssvfscanf_r+0x112>
    87ce:	3304      	adds	r3, #4
    87d0:	469c      	mov	ip, r3
    87d2:	465d      	mov	r5, fp
    87d4:	44e1      	add	r9, ip
    87d6:	f7ff f9e6 	bl	7ba6 <__ssvfscanf_r+0x112>
    87da:	464b      	mov	r3, r9
    87dc:	6818      	ldr	r0, [r3, #0]
    87de:	e7d8      	b.n	8792 <__ssvfscanf_r+0xcfe>
    87e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    87e2:	459b      	cmp	fp, r3
    87e4:	d801      	bhi.n	87ea <__ssvfscanf_r+0xd56>
    87e6:	f7ff f9a2 	bl	7b2e <__ssvfscanf_r+0x9a>
    87ea:	465c      	mov	r4, fp
    87ec:	4645      	mov	r5, r8
    87ee:	3c01      	subs	r4, #1
    87f0:	7821      	ldrb	r1, [r4, #0]
    87f2:	0032      	movs	r2, r6
    87f4:	0028      	movs	r0, r5
    87f6:	f003 fdb1 	bl	c35c <_sungetc_r>
    87fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    87fc:	429c      	cmp	r4, r3
    87fe:	d1f6      	bne.n	87ee <__ssvfscanf_r+0xd5a>
    8800:	f7ff f995 	bl	7b2e <__ssvfscanf_r+0x9a>
    8804:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8806:	465c      	mov	r4, fp
    8808:	4645      	mov	r5, r8
    880a:	459b      	cmp	fp, r3
    880c:	d801      	bhi.n	8812 <__ssvfscanf_r+0xd7e>
    880e:	f7ff f98e 	bl	7b2e <__ssvfscanf_r+0x9a>
    8812:	3c01      	subs	r4, #1
    8814:	7821      	ldrb	r1, [r4, #0]
    8816:	0032      	movs	r2, r6
    8818:	0028      	movs	r0, r5
    881a:	f003 fd9f 	bl	c35c <_sungetc_r>
    881e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8820:	429c      	cmp	r4, r3
    8822:	d1f6      	bne.n	8812 <__ssvfscanf_r+0xd7e>
    8824:	f7ff f983 	bl	7b2e <__ssvfscanf_r+0x9a>
    8828:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    882a:	459b      	cmp	fp, r3
    882c:	d801      	bhi.n	8832 <__ssvfscanf_r+0xd9e>
    882e:	f7ff f97e 	bl	7b2e <__ssvfscanf_r+0x9a>
    8832:	465c      	mov	r4, fp
    8834:	4645      	mov	r5, r8
    8836:	3c01      	subs	r4, #1
    8838:	7821      	ldrb	r1, [r4, #0]
    883a:	0032      	movs	r2, r6
    883c:	0028      	movs	r0, r5
    883e:	f003 fd8d 	bl	c35c <_sungetc_r>
    8842:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8844:	429c      	cmp	r4, r3
    8846:	d1f6      	bne.n	8836 <__ssvfscanf_r+0xda2>
    8848:	f7ff f971 	bl	7b2e <__ssvfscanf_r+0x9a>
    884c:	2000      	movs	r0, #0
    884e:	f002 fabf 	bl	add0 <nanf>
    8852:	464b      	mov	r3, r9
    8854:	6018      	str	r0, [r3, #0]
    8856:	4653      	mov	r3, sl
    8858:	9307      	str	r3, [sp, #28]
    885a:	f7ff fbca 	bl	7ff2 <__ssvfscanf_r+0x55e>
    885e:	46c0      	nop			; (mov r8, r8)
    8860:	fffff87f 	.word	0xfffff87f

00008864 <register_fini>:
    8864:	4b03      	ldr	r3, [pc, #12]	; (8874 <register_fini+0x10>)
    8866:	b510      	push	{r4, lr}
    8868:	2b00      	cmp	r3, #0
    886a:	d002      	beq.n	8872 <register_fini+0xe>
    886c:	4802      	ldr	r0, [pc, #8]	; (8878 <register_fini+0x14>)
    886e:	f000 f805 	bl	887c <atexit>
    8872:	bd10      	pop	{r4, pc}
    8874:	00000000 	.word	0x00000000
    8878:	00009969 	.word	0x00009969

0000887c <atexit>:
    887c:	b510      	push	{r4, lr}
    887e:	0001      	movs	r1, r0
    8880:	2300      	movs	r3, #0
    8882:	2200      	movs	r2, #0
    8884:	2000      	movs	r0, #0
    8886:	f003 fe63 	bl	c550 <__register_exitproc>
    888a:	bd10      	pop	{r4, pc}

0000888c <quorem>:
    888c:	b5f0      	push	{r4, r5, r6, r7, lr}
    888e:	4645      	mov	r5, r8
    8890:	4680      	mov	r8, r0
    8892:	46de      	mov	lr, fp
    8894:	4657      	mov	r7, sl
    8896:	464e      	mov	r6, r9
    8898:	4642      	mov	r2, r8
    889a:	b5e0      	push	{r5, r6, r7, lr}
    889c:	690c      	ldr	r4, [r1, #16]
    889e:	6912      	ldr	r2, [r2, #16]
    88a0:	b085      	sub	sp, #20
    88a2:	000b      	movs	r3, r1
    88a4:	9102      	str	r1, [sp, #8]
    88a6:	2000      	movs	r0, #0
    88a8:	4294      	cmp	r4, r2
    88aa:	dd00      	ble.n	88ae <quorem+0x22>
    88ac:	e090      	b.n	89d0 <quorem+0x144>
    88ae:	2214      	movs	r2, #20
    88b0:	4694      	mov	ip, r2
    88b2:	4463      	add	r3, ip
    88b4:	4699      	mov	r9, r3
    88b6:	464a      	mov	r2, r9
    88b8:	3c01      	subs	r4, #1
    88ba:	00a3      	lsls	r3, r4, #2
    88bc:	18d6      	adds	r6, r2, r3
    88be:	2214      	movs	r2, #20
    88c0:	4442      	add	r2, r8
    88c2:	4693      	mov	fp, r2
    88c4:	449b      	add	fp, r3
    88c6:	6833      	ldr	r3, [r6, #0]
    88c8:	0015      	movs	r5, r2
    88ca:	1c59      	adds	r1, r3, #1
    88cc:	465b      	mov	r3, fp
    88ce:	6818      	ldr	r0, [r3, #0]
    88d0:	9201      	str	r2, [sp, #4]
    88d2:	f7fb f919 	bl	3b08 <__udivsi3>
    88d6:	1e03      	subs	r3, r0, #0
    88d8:	9000      	str	r0, [sp, #0]
    88da:	d042      	beq.n	8962 <quorem+0xd6>
    88dc:	0029      	movs	r1, r5
    88de:	2700      	movs	r7, #0
    88e0:	464d      	mov	r5, r9
    88e2:	2000      	movs	r0, #0
    88e4:	46b1      	mov	r9, r6
    88e6:	46a2      	mov	sl, r4
    88e8:	003e      	movs	r6, r7
    88ea:	0004      	movs	r4, r0
    88ec:	469c      	mov	ip, r3
    88ee:	002f      	movs	r7, r5
    88f0:	0008      	movs	r0, r1
    88f2:	9503      	str	r5, [sp, #12]
    88f4:	4663      	mov	r3, ip
    88f6:	cf04      	ldmia	r7!, {r2}
    88f8:	0415      	lsls	r5, r2, #16
    88fa:	0c2d      	lsrs	r5, r5, #16
    88fc:	435d      	muls	r5, r3
    88fe:	0c12      	lsrs	r2, r2, #16
    8900:	435a      	muls	r2, r3
    8902:	19ad      	adds	r5, r5, r6
    8904:	0c2b      	lsrs	r3, r5, #16
    8906:	18d2      	adds	r2, r2, r3
    8908:	6803      	ldr	r3, [r0, #0]
    890a:	042d      	lsls	r5, r5, #16
    890c:	0419      	lsls	r1, r3, #16
    890e:	0c09      	lsrs	r1, r1, #16
    8910:	1909      	adds	r1, r1, r4
    8912:	0c16      	lsrs	r6, r2, #16
    8914:	0c2d      	lsrs	r5, r5, #16
    8916:	0412      	lsls	r2, r2, #16
    8918:	1b49      	subs	r1, r1, r5
    891a:	0c12      	lsrs	r2, r2, #16
    891c:	0c1b      	lsrs	r3, r3, #16
    891e:	1a9b      	subs	r3, r3, r2
    8920:	140a      	asrs	r2, r1, #16
    8922:	189b      	adds	r3, r3, r2
    8924:	0409      	lsls	r1, r1, #16
    8926:	141c      	asrs	r4, r3, #16
    8928:	0c09      	lsrs	r1, r1, #16
    892a:	041b      	lsls	r3, r3, #16
    892c:	4319      	orrs	r1, r3
    892e:	c002      	stmia	r0!, {r1}
    8930:	45b9      	cmp	r9, r7
    8932:	d2df      	bcs.n	88f4 <quorem+0x68>
    8934:	9b03      	ldr	r3, [sp, #12]
    8936:	464e      	mov	r6, r9
    8938:	4699      	mov	r9, r3
    893a:	465b      	mov	r3, fp
    893c:	681b      	ldr	r3, [r3, #0]
    893e:	4654      	mov	r4, sl
    8940:	2b00      	cmp	r3, #0
    8942:	d10e      	bne.n	8962 <quorem+0xd6>
    8944:	465b      	mov	r3, fp
    8946:	9a01      	ldr	r2, [sp, #4]
    8948:	3b04      	subs	r3, #4
    894a:	429a      	cmp	r2, r3
    894c:	d304      	bcc.n	8958 <quorem+0xcc>
    894e:	e006      	b.n	895e <quorem+0xd2>
    8950:	3b04      	subs	r3, #4
    8952:	3c01      	subs	r4, #1
    8954:	429a      	cmp	r2, r3
    8956:	d202      	bcs.n	895e <quorem+0xd2>
    8958:	6819      	ldr	r1, [r3, #0]
    895a:	2900      	cmp	r1, #0
    895c:	d0f8      	beq.n	8950 <quorem+0xc4>
    895e:	4643      	mov	r3, r8
    8960:	611c      	str	r4, [r3, #16]
    8962:	9902      	ldr	r1, [sp, #8]
    8964:	4640      	mov	r0, r8
    8966:	f001 ffbb 	bl	a8e0 <__mcmp>
    896a:	2800      	cmp	r0, #0
    896c:	db2f      	blt.n	89ce <quorem+0x142>
    896e:	464f      	mov	r7, r9
    8970:	2000      	movs	r0, #0
    8972:	9b00      	ldr	r3, [sp, #0]
    8974:	9d01      	ldr	r5, [sp, #4]
    8976:	3301      	adds	r3, #1
    8978:	9300      	str	r3, [sp, #0]
    897a:	682b      	ldr	r3, [r5, #0]
    897c:	cf02      	ldmia	r7!, {r1}
    897e:	041a      	lsls	r2, r3, #16
    8980:	0c12      	lsrs	r2, r2, #16
    8982:	1810      	adds	r0, r2, r0
    8984:	040a      	lsls	r2, r1, #16
    8986:	0c12      	lsrs	r2, r2, #16
    8988:	1a82      	subs	r2, r0, r2
    898a:	0c09      	lsrs	r1, r1, #16
    898c:	0c1b      	lsrs	r3, r3, #16
    898e:	1a5b      	subs	r3, r3, r1
    8990:	1411      	asrs	r1, r2, #16
    8992:	185b      	adds	r3, r3, r1
    8994:	0412      	lsls	r2, r2, #16
    8996:	1418      	asrs	r0, r3, #16
    8998:	0c12      	lsrs	r2, r2, #16
    899a:	041b      	lsls	r3, r3, #16
    899c:	4313      	orrs	r3, r2
    899e:	c508      	stmia	r5!, {r3}
    89a0:	42be      	cmp	r6, r7
    89a2:	d2ea      	bcs.n	897a <quorem+0xee>
    89a4:	9901      	ldr	r1, [sp, #4]
    89a6:	00a3      	lsls	r3, r4, #2
    89a8:	468c      	mov	ip, r1
    89aa:	4463      	add	r3, ip
    89ac:	681a      	ldr	r2, [r3, #0]
    89ae:	2a00      	cmp	r2, #0
    89b0:	d10d      	bne.n	89ce <quorem+0x142>
    89b2:	3b04      	subs	r3, #4
    89b4:	000a      	movs	r2, r1
    89b6:	4299      	cmp	r1, r3
    89b8:	d304      	bcc.n	89c4 <quorem+0x138>
    89ba:	e006      	b.n	89ca <quorem+0x13e>
    89bc:	3b04      	subs	r3, #4
    89be:	3c01      	subs	r4, #1
    89c0:	429a      	cmp	r2, r3
    89c2:	d202      	bcs.n	89ca <quorem+0x13e>
    89c4:	6819      	ldr	r1, [r3, #0]
    89c6:	2900      	cmp	r1, #0
    89c8:	d0f8      	beq.n	89bc <quorem+0x130>
    89ca:	4643      	mov	r3, r8
    89cc:	611c      	str	r4, [r3, #16]
    89ce:	9800      	ldr	r0, [sp, #0]
    89d0:	b005      	add	sp, #20
    89d2:	bc3c      	pop	{r2, r3, r4, r5}
    89d4:	4690      	mov	r8, r2
    89d6:	4699      	mov	r9, r3
    89d8:	46a2      	mov	sl, r4
    89da:	46ab      	mov	fp, r5
    89dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    89de:	46c0      	nop			; (mov r8, r8)

000089e0 <_dtoa_r>:
    89e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    89e2:	4657      	mov	r7, sl
    89e4:	464e      	mov	r6, r9
    89e6:	4645      	mov	r5, r8
    89e8:	46de      	mov	lr, fp
    89ea:	b5e0      	push	{r5, r6, r7, lr}
    89ec:	6c01      	ldr	r1, [r0, #64]	; 0x40
    89ee:	b099      	sub	sp, #100	; 0x64
    89f0:	4682      	mov	sl, r0
    89f2:	001d      	movs	r5, r3
    89f4:	0016      	movs	r6, r2
    89f6:	001f      	movs	r7, r3
    89f8:	2900      	cmp	r1, #0
    89fa:	d009      	beq.n	8a10 <_dtoa_r+0x30>
    89fc:	2301      	movs	r3, #1
    89fe:	6c42      	ldr	r2, [r0, #68]	; 0x44
    8a00:	4093      	lsls	r3, r2
    8a02:	604a      	str	r2, [r1, #4]
    8a04:	608b      	str	r3, [r1, #8]
    8a06:	f001 fd15 	bl	a434 <_Bfree>
    8a0a:	2300      	movs	r3, #0
    8a0c:	4652      	mov	r2, sl
    8a0e:	6413      	str	r3, [r2, #64]	; 0x40
    8a10:	46b8      	mov	r8, r7
    8a12:	2f00      	cmp	r7, #0
    8a14:	db37      	blt.n	8a86 <_dtoa_r+0xa6>
    8a16:	2300      	movs	r3, #0
    8a18:	9a25      	ldr	r2, [sp, #148]	; 0x94
    8a1a:	6013      	str	r3, [r2, #0]
    8a1c:	4642      	mov	r2, r8
    8a1e:	4bd6      	ldr	r3, [pc, #856]	; (8d78 <_dtoa_r+0x398>)
    8a20:	401a      	ands	r2, r3
    8a22:	429a      	cmp	r2, r3
    8a24:	d018      	beq.n	8a58 <_dtoa_r+0x78>
    8a26:	2200      	movs	r2, #0
    8a28:	2300      	movs	r3, #0
    8a2a:	0030      	movs	r0, r6
    8a2c:	0039      	movs	r1, r7
    8a2e:	f7fc fee7 	bl	5800 <__aeabi_dcmpeq>
    8a32:	2800      	cmp	r0, #0
    8a34:	d02f      	beq.n	8a96 <_dtoa_r+0xb6>
    8a36:	2301      	movs	r3, #1
    8a38:	9a24      	ldr	r2, [sp, #144]	; 0x90
    8a3a:	6013      	str	r3, [r2, #0]
    8a3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
    8a3e:	2b00      	cmp	r3, #0
    8a40:	d100      	bne.n	8a44 <_dtoa_r+0x64>
    8a42:	e22a      	b.n	8e9a <_dtoa_r+0x4ba>
    8a44:	48cd      	ldr	r0, [pc, #820]	; (8d7c <_dtoa_r+0x39c>)
    8a46:	6018      	str	r0, [r3, #0]
    8a48:	3801      	subs	r0, #1
    8a4a:	b019      	add	sp, #100	; 0x64
    8a4c:	bc3c      	pop	{r2, r3, r4, r5}
    8a4e:	4690      	mov	r8, r2
    8a50:	4699      	mov	r9, r3
    8a52:	46a2      	mov	sl, r4
    8a54:	46ab      	mov	fp, r5
    8a56:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8a58:	4bc9      	ldr	r3, [pc, #804]	; (8d80 <_dtoa_r+0x3a0>)
    8a5a:	9a24      	ldr	r2, [sp, #144]	; 0x90
    8a5c:	6013      	str	r3, [r2, #0]
    8a5e:	2e00      	cmp	r6, #0
    8a60:	d10b      	bne.n	8a7a <_dtoa_r+0x9a>
    8a62:	4643      	mov	r3, r8
    8a64:	0318      	lsls	r0, r3, #12
    8a66:	d108      	bne.n	8a7a <_dtoa_r+0x9a>
    8a68:	9b26      	ldr	r3, [sp, #152]	; 0x98
    8a6a:	48c6      	ldr	r0, [pc, #792]	; (8d84 <_dtoa_r+0x3a4>)
    8a6c:	2b00      	cmp	r3, #0
    8a6e:	d0ec      	beq.n	8a4a <_dtoa_r+0x6a>
    8a70:	0003      	movs	r3, r0
    8a72:	3308      	adds	r3, #8
    8a74:	9a26      	ldr	r2, [sp, #152]	; 0x98
    8a76:	6013      	str	r3, [r2, #0]
    8a78:	e7e7      	b.n	8a4a <_dtoa_r+0x6a>
    8a7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    8a7c:	48c2      	ldr	r0, [pc, #776]	; (8d88 <_dtoa_r+0x3a8>)
    8a7e:	2b00      	cmp	r3, #0
    8a80:	d0e3      	beq.n	8a4a <_dtoa_r+0x6a>
    8a82:	1cc3      	adds	r3, r0, #3
    8a84:	e7f6      	b.n	8a74 <_dtoa_r+0x94>
    8a86:	2301      	movs	r3, #1
    8a88:	9a25      	ldr	r2, [sp, #148]	; 0x94
    8a8a:	0068      	lsls	r0, r5, #1
    8a8c:	6013      	str	r3, [r2, #0]
    8a8e:	0843      	lsrs	r3, r0, #1
    8a90:	4698      	mov	r8, r3
    8a92:	001f      	movs	r7, r3
    8a94:	e7c2      	b.n	8a1c <_dtoa_r+0x3c>
    8a96:	ab16      	add	r3, sp, #88	; 0x58
    8a98:	9301      	str	r3, [sp, #4]
    8a9a:	ab17      	add	r3, sp, #92	; 0x5c
    8a9c:	9300      	str	r3, [sp, #0]
    8a9e:	0032      	movs	r2, r6
    8aa0:	003b      	movs	r3, r7
    8aa2:	4650      	mov	r0, sl
    8aa4:	f002 f864 	bl	ab70 <__d2b>
    8aa8:	4643      	mov	r3, r8
    8aaa:	4683      	mov	fp, r0
    8aac:	0d1a      	lsrs	r2, r3, #20
    8aae:	d100      	bne.n	8ab2 <_dtoa_r+0xd2>
    8ab0:	e1d6      	b.n	8e60 <_dtoa_r+0x480>
    8ab2:	033b      	lsls	r3, r7, #12
    8ab4:	4cb5      	ldr	r4, [pc, #724]	; (8d8c <_dtoa_r+0x3ac>)
    8ab6:	0b1b      	lsrs	r3, r3, #12
    8ab8:	431c      	orrs	r4, r3
    8aba:	4bb5      	ldr	r3, [pc, #724]	; (8d90 <_dtoa_r+0x3b0>)
    8abc:	0030      	movs	r0, r6
    8abe:	4698      	mov	r8, r3
    8ac0:	9b16      	ldr	r3, [sp, #88]	; 0x58
    8ac2:	0021      	movs	r1, r4
    8ac4:	4699      	mov	r9, r3
    8ac6:	2300      	movs	r3, #0
    8ac8:	4490      	add	r8, r2
    8aca:	930f      	str	r3, [sp, #60]	; 0x3c
    8acc:	2200      	movs	r2, #0
    8ace:	4bb1      	ldr	r3, [pc, #708]	; (8d94 <_dtoa_r+0x3b4>)
    8ad0:	f7fc f9e6 	bl	4ea0 <__aeabi_dsub>
    8ad4:	4ab0      	ldr	r2, [pc, #704]	; (8d98 <_dtoa_r+0x3b8>)
    8ad6:	4bb1      	ldr	r3, [pc, #708]	; (8d9c <_dtoa_r+0x3bc>)
    8ad8:	f7fb ff62 	bl	49a0 <__aeabi_dmul>
    8adc:	4ab0      	ldr	r2, [pc, #704]	; (8da0 <_dtoa_r+0x3c0>)
    8ade:	4bb1      	ldr	r3, [pc, #708]	; (8da4 <_dtoa_r+0x3c4>)
    8ae0:	f004 fc08 	bl	d2f4 <__aeabi_dadd>
    8ae4:	0004      	movs	r4, r0
    8ae6:	4640      	mov	r0, r8
    8ae8:	000d      	movs	r5, r1
    8aea:	f7fc fd23 	bl	5534 <__aeabi_i2d>
    8aee:	4aae      	ldr	r2, [pc, #696]	; (8da8 <_dtoa_r+0x3c8>)
    8af0:	4bae      	ldr	r3, [pc, #696]	; (8dac <_dtoa_r+0x3cc>)
    8af2:	f7fb ff55 	bl	49a0 <__aeabi_dmul>
    8af6:	0002      	movs	r2, r0
    8af8:	000b      	movs	r3, r1
    8afa:	0020      	movs	r0, r4
    8afc:	0029      	movs	r1, r5
    8afe:	f004 fbf9 	bl	d2f4 <__aeabi_dadd>
    8b02:	0004      	movs	r4, r0
    8b04:	000d      	movs	r5, r1
    8b06:	f7fc fce1 	bl	54cc <__aeabi_d2iz>
    8b0a:	2200      	movs	r2, #0
    8b0c:	9003      	str	r0, [sp, #12]
    8b0e:	2300      	movs	r3, #0
    8b10:	0020      	movs	r0, r4
    8b12:	0029      	movs	r1, r5
    8b14:	f7fc fe7a 	bl	580c <__aeabi_dcmplt>
    8b18:	2800      	cmp	r0, #0
    8b1a:	d000      	beq.n	8b1e <_dtoa_r+0x13e>
    8b1c:	e2b1      	b.n	9082 <_dtoa_r+0x6a2>
    8b1e:	2301      	movs	r3, #1
    8b20:	9c03      	ldr	r4, [sp, #12]
    8b22:	930c      	str	r3, [sp, #48]	; 0x30
    8b24:	2c16      	cmp	r4, #22
    8b26:	d810      	bhi.n	8b4a <_dtoa_r+0x16a>
    8b28:	49a1      	ldr	r1, [pc, #644]	; (8db0 <_dtoa_r+0x3d0>)
    8b2a:	00e3      	lsls	r3, r4, #3
    8b2c:	18c9      	adds	r1, r1, r3
    8b2e:	0032      	movs	r2, r6
    8b30:	6808      	ldr	r0, [r1, #0]
    8b32:	6849      	ldr	r1, [r1, #4]
    8b34:	003b      	movs	r3, r7
    8b36:	f7fc fe7d 	bl	5834 <__aeabi_dcmpgt>
    8b3a:	2800      	cmp	r0, #0
    8b3c:	d100      	bne.n	8b40 <_dtoa_r+0x160>
    8b3e:	e31d      	b.n	917c <_dtoa_r+0x79c>
    8b40:	0023      	movs	r3, r4
    8b42:	3b01      	subs	r3, #1
    8b44:	9303      	str	r3, [sp, #12]
    8b46:	2300      	movs	r3, #0
    8b48:	930c      	str	r3, [sp, #48]	; 0x30
    8b4a:	464b      	mov	r3, r9
    8b4c:	4642      	mov	r2, r8
    8b4e:	1a9a      	subs	r2, r3, r2
    8b50:	2300      	movs	r3, #0
    8b52:	9306      	str	r3, [sp, #24]
    8b54:	0013      	movs	r3, r2
    8b56:	3b01      	subs	r3, #1
    8b58:	9304      	str	r3, [sp, #16]
    8b5a:	d500      	bpl.n	8b5e <_dtoa_r+0x17e>
    8b5c:	e2a1      	b.n	90a2 <_dtoa_r+0x6c2>
    8b5e:	9b03      	ldr	r3, [sp, #12]
    8b60:	2b00      	cmp	r3, #0
    8b62:	da00      	bge.n	8b66 <_dtoa_r+0x186>
    8b64:	e284      	b.n	9070 <_dtoa_r+0x690>
    8b66:	469c      	mov	ip, r3
    8b68:	930d      	str	r3, [sp, #52]	; 0x34
    8b6a:	2300      	movs	r3, #0
    8b6c:	9a04      	ldr	r2, [sp, #16]
    8b6e:	4699      	mov	r9, r3
    8b70:	0011      	movs	r1, r2
    8b72:	4461      	add	r1, ip
    8b74:	9104      	str	r1, [sp, #16]
    8b76:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8b78:	2b09      	cmp	r3, #9
    8b7a:	d900      	bls.n	8b7e <_dtoa_r+0x19e>
    8b7c:	e18f      	b.n	8e9e <_dtoa_r+0x4be>
    8b7e:	2401      	movs	r4, #1
    8b80:	2b05      	cmp	r3, #5
    8b82:	dd02      	ble.n	8b8a <_dtoa_r+0x1aa>
    8b84:	2400      	movs	r4, #0
    8b86:	3b04      	subs	r3, #4
    8b88:	9322      	str	r3, [sp, #136]	; 0x88
    8b8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8b8c:	2b03      	cmp	r3, #3
    8b8e:	d101      	bne.n	8b94 <_dtoa_r+0x1b4>
    8b90:	f000 fcce 	bl	9530 <_dtoa_r+0xb50>
    8b94:	dc01      	bgt.n	8b9a <_dtoa_r+0x1ba>
    8b96:	f000 fc92 	bl	94be <_dtoa_r+0xade>
    8b9a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8b9c:	2b04      	cmp	r3, #4
    8b9e:	d101      	bne.n	8ba4 <_dtoa_r+0x1c4>
    8ba0:	f000 fc40 	bl	9424 <_dtoa_r+0xa44>
    8ba4:	2301      	movs	r3, #1
    8ba6:	930b      	str	r3, [sp, #44]	; 0x2c
    8ba8:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8baa:	2b05      	cmp	r3, #5
    8bac:	d001      	beq.n	8bb2 <_dtoa_r+0x1d2>
    8bae:	f000 fc8b 	bl	94c8 <_dtoa_r+0xae8>
    8bb2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    8bb4:	9b03      	ldr	r3, [sp, #12]
    8bb6:	4694      	mov	ip, r2
    8bb8:	4463      	add	r3, ip
    8bba:	930e      	str	r3, [sp, #56]	; 0x38
    8bbc:	3301      	adds	r3, #1
    8bbe:	9307      	str	r3, [sp, #28]
    8bc0:	1e1d      	subs	r5, r3, #0
    8bc2:	dc01      	bgt.n	8bc8 <_dtoa_r+0x1e8>
    8bc4:	f000 fd49 	bl	965a <_dtoa_r+0xc7a>
    8bc8:	9b07      	ldr	r3, [sp, #28]
    8bca:	4698      	mov	r8, r3
    8bcc:	2300      	movs	r3, #0
    8bce:	4652      	mov	r2, sl
    8bd0:	2100      	movs	r1, #0
    8bd2:	6453      	str	r3, [r2, #68]	; 0x44
    8bd4:	2d17      	cmp	r5, #23
    8bd6:	d90a      	bls.n	8bee <_dtoa_r+0x20e>
    8bd8:	2201      	movs	r2, #1
    8bda:	3304      	adds	r3, #4
    8bdc:	005b      	lsls	r3, r3, #1
    8bde:	0018      	movs	r0, r3
    8be0:	3014      	adds	r0, #20
    8be2:	0011      	movs	r1, r2
    8be4:	3201      	adds	r2, #1
    8be6:	4285      	cmp	r5, r0
    8be8:	d2f8      	bcs.n	8bdc <_dtoa_r+0x1fc>
    8bea:	4653      	mov	r3, sl
    8bec:	6459      	str	r1, [r3, #68]	; 0x44
    8bee:	4650      	mov	r0, sl
    8bf0:	f001 fbf8 	bl	a3e4 <_Balloc>
    8bf4:	4653      	mov	r3, sl
    8bf6:	6418      	str	r0, [r3, #64]	; 0x40
    8bf8:	4643      	mov	r3, r8
    8bfa:	900a      	str	r0, [sp, #40]	; 0x28
    8bfc:	2b0e      	cmp	r3, #14
    8bfe:	d900      	bls.n	8c02 <_dtoa_r+0x222>
    8c00:	e161      	b.n	8ec6 <_dtoa_r+0x4e6>
    8c02:	2c00      	cmp	r4, #0
    8c04:	d100      	bne.n	8c08 <_dtoa_r+0x228>
    8c06:	e15e      	b.n	8ec6 <_dtoa_r+0x4e6>
    8c08:	9610      	str	r6, [sp, #64]	; 0x40
    8c0a:	9711      	str	r7, [sp, #68]	; 0x44
    8c0c:	9e03      	ldr	r6, [sp, #12]
    8c0e:	2e00      	cmp	r6, #0
    8c10:	dc01      	bgt.n	8c16 <_dtoa_r+0x236>
    8c12:	f000 fd25 	bl	9660 <_dtoa_r+0xc80>
    8c16:	0032      	movs	r2, r6
    8c18:	210f      	movs	r1, #15
    8c1a:	4b65      	ldr	r3, [pc, #404]	; (8db0 <_dtoa_r+0x3d0>)
    8c1c:	400a      	ands	r2, r1
    8c1e:	00d2      	lsls	r2, r2, #3
    8c20:	189b      	adds	r3, r3, r2
    8c22:	1136      	asrs	r6, r6, #4
    8c24:	681c      	ldr	r4, [r3, #0]
    8c26:	685d      	ldr	r5, [r3, #4]
    8c28:	06f3      	lsls	r3, r6, #27
    8c2a:	d401      	bmi.n	8c30 <_dtoa_r+0x250>
    8c2c:	f000 fcca 	bl	95c4 <_dtoa_r+0xbe4>
    8c30:	4b60      	ldr	r3, [pc, #384]	; (8db4 <_dtoa_r+0x3d4>)
    8c32:	400e      	ands	r6, r1
    8c34:	6a1a      	ldr	r2, [r3, #32]
    8c36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    8c38:	9810      	ldr	r0, [sp, #64]	; 0x40
    8c3a:	9911      	ldr	r1, [sp, #68]	; 0x44
    8c3c:	f7fb fb7c 	bl	4338 <__aeabi_ddiv>
    8c40:	2303      	movs	r3, #3
    8c42:	4698      	mov	r8, r3
    8c44:	9008      	str	r0, [sp, #32]
    8c46:	9109      	str	r1, [sp, #36]	; 0x24
    8c48:	2e00      	cmp	r6, #0
    8c4a:	d011      	beq.n	8c70 <_dtoa_r+0x290>
    8c4c:	4f59      	ldr	r7, [pc, #356]	; (8db4 <_dtoa_r+0x3d4>)
    8c4e:	2301      	movs	r3, #1
    8c50:	4233      	tst	r3, r6
    8c52:	d009      	beq.n	8c68 <_dtoa_r+0x288>
    8c54:	469c      	mov	ip, r3
    8c56:	683a      	ldr	r2, [r7, #0]
    8c58:	687b      	ldr	r3, [r7, #4]
    8c5a:	0020      	movs	r0, r4
    8c5c:	0029      	movs	r1, r5
    8c5e:	44e0      	add	r8, ip
    8c60:	f7fb fe9e 	bl	49a0 <__aeabi_dmul>
    8c64:	0004      	movs	r4, r0
    8c66:	000d      	movs	r5, r1
    8c68:	1076      	asrs	r6, r6, #1
    8c6a:	3708      	adds	r7, #8
    8c6c:	2e00      	cmp	r6, #0
    8c6e:	d1ee      	bne.n	8c4e <_dtoa_r+0x26e>
    8c70:	0022      	movs	r2, r4
    8c72:	9808      	ldr	r0, [sp, #32]
    8c74:	9909      	ldr	r1, [sp, #36]	; 0x24
    8c76:	002b      	movs	r3, r5
    8c78:	f7fb fb5e 	bl	4338 <__aeabi_ddiv>
    8c7c:	0006      	movs	r6, r0
    8c7e:	000f      	movs	r7, r1
    8c80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8c82:	2b00      	cmp	r3, #0
    8c84:	d009      	beq.n	8c9a <_dtoa_r+0x2ba>
    8c86:	2200      	movs	r2, #0
    8c88:	4b40      	ldr	r3, [pc, #256]	; (8d8c <_dtoa_r+0x3ac>)
    8c8a:	0030      	movs	r0, r6
    8c8c:	0039      	movs	r1, r7
    8c8e:	f7fc fdbd 	bl	580c <__aeabi_dcmplt>
    8c92:	2800      	cmp	r0, #0
    8c94:	d001      	beq.n	8c9a <_dtoa_r+0x2ba>
    8c96:	f000 fdc2 	bl	981e <_dtoa_r+0xe3e>
    8c9a:	4640      	mov	r0, r8
    8c9c:	f7fc fc4a 	bl	5534 <__aeabi_i2d>
    8ca0:	0032      	movs	r2, r6
    8ca2:	003b      	movs	r3, r7
    8ca4:	f7fb fe7c 	bl	49a0 <__aeabi_dmul>
    8ca8:	2200      	movs	r2, #0
    8caa:	4b43      	ldr	r3, [pc, #268]	; (8db8 <_dtoa_r+0x3d8>)
    8cac:	f004 fb22 	bl	d2f4 <__aeabi_dadd>
    8cb0:	4a42      	ldr	r2, [pc, #264]	; (8dbc <_dtoa_r+0x3dc>)
    8cb2:	000b      	movs	r3, r1
    8cb4:	4694      	mov	ip, r2
    8cb6:	4463      	add	r3, ip
    8cb8:	9008      	str	r0, [sp, #32]
    8cba:	9109      	str	r1, [sp, #36]	; 0x24
    8cbc:	9309      	str	r3, [sp, #36]	; 0x24
    8cbe:	9b07      	ldr	r3, [sp, #28]
    8cc0:	2b00      	cmp	r3, #0
    8cc2:	d101      	bne.n	8cc8 <_dtoa_r+0x2e8>
    8cc4:	f000 fc50 	bl	9568 <_dtoa_r+0xb88>
    8cc8:	9b03      	ldr	r3, [sp, #12]
    8cca:	9313      	str	r3, [sp, #76]	; 0x4c
    8ccc:	9b07      	ldr	r3, [sp, #28]
    8cce:	9312      	str	r3, [sp, #72]	; 0x48
    8cd0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8cd2:	2b00      	cmp	r3, #0
    8cd4:	d101      	bne.n	8cda <_dtoa_r+0x2fa>
    8cd6:	f000 fd1d 	bl	9714 <_dtoa_r+0xd34>
    8cda:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8cdc:	2000      	movs	r0, #0
    8cde:	1e5a      	subs	r2, r3, #1
    8ce0:	4b33      	ldr	r3, [pc, #204]	; (8db0 <_dtoa_r+0x3d0>)
    8ce2:	00d2      	lsls	r2, r2, #3
    8ce4:	189b      	adds	r3, r3, r2
    8ce6:	681a      	ldr	r2, [r3, #0]
    8ce8:	685b      	ldr	r3, [r3, #4]
    8cea:	4935      	ldr	r1, [pc, #212]	; (8dc0 <_dtoa_r+0x3e0>)
    8cec:	f7fb fb24 	bl	4338 <__aeabi_ddiv>
    8cf0:	9a08      	ldr	r2, [sp, #32]
    8cf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8cf4:	f7fc f8d4 	bl	4ea0 <__aeabi_dsub>
    8cf8:	9008      	str	r0, [sp, #32]
    8cfa:	9109      	str	r1, [sp, #36]	; 0x24
    8cfc:	0039      	movs	r1, r7
    8cfe:	0030      	movs	r0, r6
    8d00:	f7fc fbe4 	bl	54cc <__aeabi_d2iz>
    8d04:	0004      	movs	r4, r0
    8d06:	f7fc fc15 	bl	5534 <__aeabi_i2d>
    8d0a:	0002      	movs	r2, r0
    8d0c:	000b      	movs	r3, r1
    8d0e:	0030      	movs	r0, r6
    8d10:	0039      	movs	r1, r7
    8d12:	f7fc f8c5 	bl	4ea0 <__aeabi_dsub>
    8d16:	0005      	movs	r5, r0
    8d18:	000e      	movs	r6, r1
    8d1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8d1c:	3430      	adds	r4, #48	; 0x30
    8d1e:	1c51      	adds	r1, r2, #1
    8d20:	b2e7      	uxtb	r7, r4
    8d22:	9114      	str	r1, [sp, #80]	; 0x50
    8d24:	7017      	strb	r7, [r2, #0]
    8d26:	0033      	movs	r3, r6
    8d28:	9808      	ldr	r0, [sp, #32]
    8d2a:	9909      	ldr	r1, [sp, #36]	; 0x24
    8d2c:	002a      	movs	r2, r5
    8d2e:	f7fc fd81 	bl	5834 <__aeabi_dcmpgt>
    8d32:	2800      	cmp	r0, #0
    8d34:	d001      	beq.n	8d3a <_dtoa_r+0x35a>
    8d36:	f000 fdfe 	bl	9936 <_dtoa_r+0xf56>
    8d3a:	002a      	movs	r2, r5
    8d3c:	0033      	movs	r3, r6
    8d3e:	2000      	movs	r0, #0
    8d40:	4912      	ldr	r1, [pc, #72]	; (8d8c <_dtoa_r+0x3ac>)
    8d42:	f7fc f8ad 	bl	4ea0 <__aeabi_dsub>
    8d46:	0002      	movs	r2, r0
    8d48:	000b      	movs	r3, r1
    8d4a:	9808      	ldr	r0, [sp, #32]
    8d4c:	9909      	ldr	r1, [sp, #36]	; 0x24
    8d4e:	f7fc fd71 	bl	5834 <__aeabi_dcmpgt>
    8d52:	2800      	cmp	r0, #0
    8d54:	d001      	beq.n	8d5a <_dtoa_r+0x37a>
    8d56:	f000 fde7 	bl	9928 <_dtoa_r+0xf48>
    8d5a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8d5c:	2b01      	cmp	r3, #1
    8d5e:	d101      	bne.n	8d64 <_dtoa_r+0x384>
    8d60:	f000 fc78 	bl	9654 <_dtoa_r+0xc74>
    8d64:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8d66:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8d68:	4694      	mov	ip, r2
    8d6a:	4463      	add	r3, ip
    8d6c:	4698      	mov	r8, r3
    8d6e:	464b      	mov	r3, r9
    8d70:	9312      	str	r3, [sp, #72]	; 0x48
    8d72:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8d74:	4699      	mov	r9, r3
    8d76:	e038      	b.n	8dea <_dtoa_r+0x40a>
    8d78:	7ff00000 	.word	0x7ff00000
    8d7c:	00010255 	.word	0x00010255
    8d80:	0000270f 	.word	0x0000270f
    8d84:	000106fc 	.word	0x000106fc
    8d88:	00010708 	.word	0x00010708
    8d8c:	3ff00000 	.word	0x3ff00000
    8d90:	fffffc01 	.word	0xfffffc01
    8d94:	3ff80000 	.word	0x3ff80000
    8d98:	636f4361 	.word	0x636f4361
    8d9c:	3fd287a7 	.word	0x3fd287a7
    8da0:	8b60c8b3 	.word	0x8b60c8b3
    8da4:	3fc68a28 	.word	0x3fc68a28
    8da8:	509f79fb 	.word	0x509f79fb
    8dac:	3fd34413 	.word	0x3fd34413
    8db0:	00010748 	.word	0x00010748
    8db4:	00010720 	.word	0x00010720
    8db8:	401c0000 	.word	0x401c0000
    8dbc:	fcc00000 	.word	0xfcc00000
    8dc0:	3fe00000 	.word	0x3fe00000
    8dc4:	002a      	movs	r2, r5
    8dc6:	0033      	movs	r3, r6
    8dc8:	2000      	movs	r0, #0
    8dca:	49b9      	ldr	r1, [pc, #740]	; (90b0 <_dtoa_r+0x6d0>)
    8dcc:	f7fc f868 	bl	4ea0 <__aeabi_dsub>
    8dd0:	9a08      	ldr	r2, [sp, #32]
    8dd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8dd4:	f7fc fd1a 	bl	580c <__aeabi_dcmplt>
    8dd8:	2800      	cmp	r0, #0
    8dda:	d001      	beq.n	8de0 <_dtoa_r+0x400>
    8ddc:	f000 fd74 	bl	98c8 <_dtoa_r+0xee8>
    8de0:	46a1      	mov	r9, r4
    8de2:	4544      	cmp	r4, r8
    8de4:	d101      	bne.n	8dea <_dtoa_r+0x40a>
    8de6:	f000 fc33 	bl	9650 <_dtoa_r+0xc70>
    8dea:	9808      	ldr	r0, [sp, #32]
    8dec:	9909      	ldr	r1, [sp, #36]	; 0x24
    8dee:	2200      	movs	r2, #0
    8df0:	4bb0      	ldr	r3, [pc, #704]	; (90b4 <_dtoa_r+0x6d4>)
    8df2:	f7fb fdd5 	bl	49a0 <__aeabi_dmul>
    8df6:	2200      	movs	r2, #0
    8df8:	4bae      	ldr	r3, [pc, #696]	; (90b4 <_dtoa_r+0x6d4>)
    8dfa:	9008      	str	r0, [sp, #32]
    8dfc:	9109      	str	r1, [sp, #36]	; 0x24
    8dfe:	0028      	movs	r0, r5
    8e00:	0031      	movs	r1, r6
    8e02:	f7fb fdcd 	bl	49a0 <__aeabi_dmul>
    8e06:	000d      	movs	r5, r1
    8e08:	0004      	movs	r4, r0
    8e0a:	f7fc fb5f 	bl	54cc <__aeabi_d2iz>
    8e0e:	0007      	movs	r7, r0
    8e10:	f7fc fb90 	bl	5534 <__aeabi_i2d>
    8e14:	0002      	movs	r2, r0
    8e16:	000b      	movs	r3, r1
    8e18:	0020      	movs	r0, r4
    8e1a:	0029      	movs	r1, r5
    8e1c:	f7fc f840 	bl	4ea0 <__aeabi_dsub>
    8e20:	464b      	mov	r3, r9
    8e22:	3730      	adds	r7, #48	; 0x30
    8e24:	b2ff      	uxtb	r7, r7
    8e26:	1c5c      	adds	r4, r3, #1
    8e28:	701f      	strb	r7, [r3, #0]
    8e2a:	9a08      	ldr	r2, [sp, #32]
    8e2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8e2e:	0005      	movs	r5, r0
    8e30:	000e      	movs	r6, r1
    8e32:	f7fc fceb 	bl	580c <__aeabi_dcmplt>
    8e36:	2800      	cmp	r0, #0
    8e38:	d0c4      	beq.n	8dc4 <_dtoa_r+0x3e4>
    8e3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8e3c:	9303      	str	r3, [sp, #12]
    8e3e:	4659      	mov	r1, fp
    8e40:	4650      	mov	r0, sl
    8e42:	f001 faf7 	bl	a434 <_Bfree>
    8e46:	2300      	movs	r3, #0
    8e48:	7023      	strb	r3, [r4, #0]
    8e4a:	9b03      	ldr	r3, [sp, #12]
    8e4c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    8e4e:	3301      	adds	r3, #1
    8e50:	6013      	str	r3, [r2, #0]
    8e52:	9b26      	ldr	r3, [sp, #152]	; 0x98
    8e54:	2b00      	cmp	r3, #0
    8e56:	d100      	bne.n	8e5a <_dtoa_r+0x47a>
    8e58:	e3a8      	b.n	95ac <_dtoa_r+0xbcc>
    8e5a:	601c      	str	r4, [r3, #0]
    8e5c:	980a      	ldr	r0, [sp, #40]	; 0x28
    8e5e:	e5f4      	b.n	8a4a <_dtoa_r+0x6a>
    8e60:	9b16      	ldr	r3, [sp, #88]	; 0x58
    8e62:	4699      	mov	r9, r3
    8e64:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    8e66:	444b      	add	r3, r9
    8e68:	001c      	movs	r4, r3
    8e6a:	4b93      	ldr	r3, [pc, #588]	; (90b8 <_dtoa_r+0x6d8>)
    8e6c:	18e3      	adds	r3, r4, r3
    8e6e:	2b20      	cmp	r3, #32
    8e70:	dc00      	bgt.n	8e74 <_dtoa_r+0x494>
    8e72:	e17e      	b.n	9172 <_dtoa_r+0x792>
    8e74:	0031      	movs	r1, r6
    8e76:	4a91      	ldr	r2, [pc, #580]	; (90bc <_dtoa_r+0x6dc>)
    8e78:	4640      	mov	r0, r8
    8e7a:	18a2      	adds	r2, r4, r2
    8e7c:	40d1      	lsrs	r1, r2
    8e7e:	000a      	movs	r2, r1
    8e80:	2140      	movs	r1, #64	; 0x40
    8e82:	1acb      	subs	r3, r1, r3
    8e84:	4098      	lsls	r0, r3
    8e86:	4310      	orrs	r0, r2
    8e88:	f7fc fb96 	bl	55b8 <__aeabi_ui2d>
    8e8c:	1e63      	subs	r3, r4, #1
    8e8e:	4698      	mov	r8, r3
    8e90:	2301      	movs	r3, #1
    8e92:	4d8b      	ldr	r5, [pc, #556]	; (90c0 <_dtoa_r+0x6e0>)
    8e94:	930f      	str	r3, [sp, #60]	; 0x3c
    8e96:	1949      	adds	r1, r1, r5
    8e98:	e618      	b.n	8acc <_dtoa_r+0xec>
    8e9a:	488a      	ldr	r0, [pc, #552]	; (90c4 <_dtoa_r+0x6e4>)
    8e9c:	e5d5      	b.n	8a4a <_dtoa_r+0x6a>
    8e9e:	2300      	movs	r3, #0
    8ea0:	4652      	mov	r2, sl
    8ea2:	2100      	movs	r1, #0
    8ea4:	6453      	str	r3, [r2, #68]	; 0x44
    8ea6:	4650      	mov	r0, sl
    8ea8:	f001 fa9c 	bl	a3e4 <_Balloc>
    8eac:	4653      	mov	r3, sl
    8eae:	6418      	str	r0, [r3, #64]	; 0x40
    8eb0:	2301      	movs	r3, #1
    8eb2:	425b      	negs	r3, r3
    8eb4:	9307      	str	r3, [sp, #28]
    8eb6:	930e      	str	r3, [sp, #56]	; 0x38
    8eb8:	3302      	adds	r3, #2
    8eba:	2200      	movs	r2, #0
    8ebc:	930b      	str	r3, [sp, #44]	; 0x2c
    8ebe:	2300      	movs	r3, #0
    8ec0:	900a      	str	r0, [sp, #40]	; 0x28
    8ec2:	9223      	str	r2, [sp, #140]	; 0x8c
    8ec4:	9322      	str	r3, [sp, #136]	; 0x88
    8ec6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    8ec8:	2b00      	cmp	r3, #0
    8eca:	da00      	bge.n	8ece <_dtoa_r+0x4ee>
    8ecc:	e0ab      	b.n	9026 <_dtoa_r+0x646>
    8ece:	9a03      	ldr	r2, [sp, #12]
    8ed0:	2a0e      	cmp	r2, #14
    8ed2:	dd00      	ble.n	8ed6 <_dtoa_r+0x4f6>
    8ed4:	e0a7      	b.n	9026 <_dtoa_r+0x646>
    8ed6:	4b7c      	ldr	r3, [pc, #496]	; (90c8 <_dtoa_r+0x6e8>)
    8ed8:	00d2      	lsls	r2, r2, #3
    8eda:	189b      	adds	r3, r3, r2
    8edc:	685c      	ldr	r4, [r3, #4]
    8ede:	681b      	ldr	r3, [r3, #0]
    8ee0:	9304      	str	r3, [sp, #16]
    8ee2:	9405      	str	r4, [sp, #20]
    8ee4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8ee6:	2b00      	cmp	r3, #0
    8ee8:	da00      	bge.n	8eec <_dtoa_r+0x50c>
    8eea:	e2a7      	b.n	943c <_dtoa_r+0xa5c>
    8eec:	9c04      	ldr	r4, [sp, #16]
    8eee:	9d05      	ldr	r5, [sp, #20]
    8ef0:	0030      	movs	r0, r6
    8ef2:	0022      	movs	r2, r4
    8ef4:	002b      	movs	r3, r5
    8ef6:	0039      	movs	r1, r7
    8ef8:	f7fb fa1e 	bl	4338 <__aeabi_ddiv>
    8efc:	f7fc fae6 	bl	54cc <__aeabi_d2iz>
    8f00:	4680      	mov	r8, r0
    8f02:	f7fc fb17 	bl	5534 <__aeabi_i2d>
    8f06:	0022      	movs	r2, r4
    8f08:	002b      	movs	r3, r5
    8f0a:	f7fb fd49 	bl	49a0 <__aeabi_dmul>
    8f0e:	0002      	movs	r2, r0
    8f10:	000b      	movs	r3, r1
    8f12:	0030      	movs	r0, r6
    8f14:	0039      	movs	r1, r7
    8f16:	f7fb ffc3 	bl	4ea0 <__aeabi_dsub>
    8f1a:	4643      	mov	r3, r8
    8f1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8f1e:	3330      	adds	r3, #48	; 0x30
    8f20:	7013      	strb	r3, [r2, #0]
    8f22:	9b07      	ldr	r3, [sp, #28]
    8f24:	0006      	movs	r6, r0
    8f26:	000f      	movs	r7, r1
    8f28:	1c54      	adds	r4, r2, #1
    8f2a:	2b01      	cmp	r3, #1
    8f2c:	d04e      	beq.n	8fcc <_dtoa_r+0x5ec>
    8f2e:	2200      	movs	r2, #0
    8f30:	4b60      	ldr	r3, [pc, #384]	; (90b4 <_dtoa_r+0x6d4>)
    8f32:	f7fb fd35 	bl	49a0 <__aeabi_dmul>
    8f36:	2200      	movs	r2, #0
    8f38:	2300      	movs	r3, #0
    8f3a:	0006      	movs	r6, r0
    8f3c:	000f      	movs	r7, r1
    8f3e:	f7fc fc5f 	bl	5800 <__aeabi_dcmpeq>
    8f42:	2800      	cmp	r0, #0
    8f44:	d000      	beq.n	8f48 <_dtoa_r+0x568>
    8f46:	e77a      	b.n	8e3e <_dtoa_r+0x45e>
    8f48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8f4a:	9a07      	ldr	r2, [sp, #28]
    8f4c:	1c9d      	adds	r5, r3, #2
    8f4e:	469c      	mov	ip, r3
    8f50:	465b      	mov	r3, fp
    8f52:	9306      	str	r3, [sp, #24]
    8f54:	4653      	mov	r3, sl
    8f56:	4462      	add	r2, ip
    8f58:	46aa      	mov	sl, r5
    8f5a:	9c04      	ldr	r4, [sp, #16]
    8f5c:	9d05      	ldr	r5, [sp, #20]
    8f5e:	4691      	mov	r9, r2
    8f60:	9307      	str	r3, [sp, #28]
    8f62:	e00f      	b.n	8f84 <_dtoa_r+0x5a4>
    8f64:	2200      	movs	r2, #0
    8f66:	4b53      	ldr	r3, [pc, #332]	; (90b4 <_dtoa_r+0x6d4>)
    8f68:	f7fb fd1a 	bl	49a0 <__aeabi_dmul>
    8f6c:	2301      	movs	r3, #1
    8f6e:	469c      	mov	ip, r3
    8f70:	2200      	movs	r2, #0
    8f72:	2300      	movs	r3, #0
    8f74:	0006      	movs	r6, r0
    8f76:	000f      	movs	r7, r1
    8f78:	44e2      	add	sl, ip
    8f7a:	f7fc fc41 	bl	5800 <__aeabi_dcmpeq>
    8f7e:	2800      	cmp	r0, #0
    8f80:	d000      	beq.n	8f84 <_dtoa_r+0x5a4>
    8f82:	e2d9      	b.n	9538 <_dtoa_r+0xb58>
    8f84:	0022      	movs	r2, r4
    8f86:	002b      	movs	r3, r5
    8f88:	0030      	movs	r0, r6
    8f8a:	0039      	movs	r1, r7
    8f8c:	f7fb f9d4 	bl	4338 <__aeabi_ddiv>
    8f90:	f7fc fa9c 	bl	54cc <__aeabi_d2iz>
    8f94:	4680      	mov	r8, r0
    8f96:	f7fc facd 	bl	5534 <__aeabi_i2d>
    8f9a:	0022      	movs	r2, r4
    8f9c:	002b      	movs	r3, r5
    8f9e:	f7fb fcff 	bl	49a0 <__aeabi_dmul>
    8fa2:	0002      	movs	r2, r0
    8fa4:	000b      	movs	r3, r1
    8fa6:	0030      	movs	r0, r6
    8fa8:	0039      	movs	r1, r7
    8faa:	f7fb ff79 	bl	4ea0 <__aeabi_dsub>
    8fae:	4653      	mov	r3, sl
    8fb0:	4642      	mov	r2, r8
    8fb2:	3b01      	subs	r3, #1
    8fb4:	3230      	adds	r2, #48	; 0x30
    8fb6:	0006      	movs	r6, r0
    8fb8:	000f      	movs	r7, r1
    8fba:	46d3      	mov	fp, sl
    8fbc:	701a      	strb	r2, [r3, #0]
    8fbe:	45d1      	cmp	r9, sl
    8fc0:	d1d0      	bne.n	8f64 <_dtoa_r+0x584>
    8fc2:	9b06      	ldr	r3, [sp, #24]
    8fc4:	4654      	mov	r4, sl
    8fc6:	469b      	mov	fp, r3
    8fc8:	9b07      	ldr	r3, [sp, #28]
    8fca:	469a      	mov	sl, r3
    8fcc:	0032      	movs	r2, r6
    8fce:	003b      	movs	r3, r7
    8fd0:	0030      	movs	r0, r6
    8fd2:	0039      	movs	r1, r7
    8fd4:	f004 f98e 	bl	d2f4 <__aeabi_dadd>
    8fd8:	0006      	movs	r6, r0
    8fda:	000f      	movs	r7, r1
    8fdc:	0002      	movs	r2, r0
    8fde:	000b      	movs	r3, r1
    8fe0:	9804      	ldr	r0, [sp, #16]
    8fe2:	9905      	ldr	r1, [sp, #20]
    8fe4:	f7fc fc12 	bl	580c <__aeabi_dcmplt>
    8fe8:	2800      	cmp	r0, #0
    8fea:	d10c      	bne.n	9006 <_dtoa_r+0x626>
    8fec:	9804      	ldr	r0, [sp, #16]
    8fee:	9905      	ldr	r1, [sp, #20]
    8ff0:	0032      	movs	r2, r6
    8ff2:	003b      	movs	r3, r7
    8ff4:	f7fc fc04 	bl	5800 <__aeabi_dcmpeq>
    8ff8:	2800      	cmp	r0, #0
    8ffa:	d100      	bne.n	8ffe <_dtoa_r+0x61e>
    8ffc:	e71f      	b.n	8e3e <_dtoa_r+0x45e>
    8ffe:	4643      	mov	r3, r8
    9000:	07db      	lsls	r3, r3, #31
    9002:	d400      	bmi.n	9006 <_dtoa_r+0x626>
    9004:	e71b      	b.n	8e3e <_dtoa_r+0x45e>
    9006:	1e65      	subs	r5, r4, #1
    9008:	782f      	ldrb	r7, [r5, #0]
    900a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    900c:	e006      	b.n	901c <_dtoa_r+0x63c>
    900e:	429d      	cmp	r5, r3
    9010:	d100      	bne.n	9014 <_dtoa_r+0x634>
    9012:	e351      	b.n	96b8 <_dtoa_r+0xcd8>
    9014:	3c02      	subs	r4, #2
    9016:	7827      	ldrb	r7, [r4, #0]
    9018:	002c      	movs	r4, r5
    901a:	3d01      	subs	r5, #1
    901c:	2f39      	cmp	r7, #57	; 0x39
    901e:	d0f6      	beq.n	900e <_dtoa_r+0x62e>
    9020:	3701      	adds	r7, #1
    9022:	702f      	strb	r7, [r5, #0]
    9024:	e70b      	b.n	8e3e <_dtoa_r+0x45e>
    9026:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    9028:	2a00      	cmp	r2, #0
    902a:	d04f      	beq.n	90cc <_dtoa_r+0x6ec>
    902c:	9a22      	ldr	r2, [sp, #136]	; 0x88
    902e:	2a01      	cmp	r2, #1
    9030:	dc00      	bgt.n	9034 <_dtoa_r+0x654>
    9032:	e22c      	b.n	948e <_dtoa_r+0xaae>
    9034:	9b07      	ldr	r3, [sp, #28]
    9036:	1e5c      	subs	r4, r3, #1
    9038:	464b      	mov	r3, r9
    903a:	45a1      	cmp	r9, r4
    903c:	da00      	bge.n	9040 <_dtoa_r+0x660>
    903e:	e2b8      	b.n	95b2 <_dtoa_r+0xbd2>
    9040:	1b1c      	subs	r4, r3, r4
    9042:	9b07      	ldr	r3, [sp, #28]
    9044:	2b00      	cmp	r3, #0
    9046:	da00      	bge.n	904a <_dtoa_r+0x66a>
    9048:	e3d4      	b.n	97f4 <_dtoa_r+0xe14>
    904a:	9b06      	ldr	r3, [sp, #24]
    904c:	9308      	str	r3, [sp, #32]
    904e:	9b07      	ldr	r3, [sp, #28]
    9050:	9a06      	ldr	r2, [sp, #24]
    9052:	2101      	movs	r1, #1
    9054:	4694      	mov	ip, r2
    9056:	449c      	add	ip, r3
    9058:	4662      	mov	r2, ip
    905a:	9206      	str	r2, [sp, #24]
    905c:	9a04      	ldr	r2, [sp, #16]
    905e:	4650      	mov	r0, sl
    9060:	4694      	mov	ip, r2
    9062:	449c      	add	ip, r3
    9064:	4663      	mov	r3, ip
    9066:	9304      	str	r3, [sp, #16]
    9068:	f001 fac6 	bl	a5f8 <__i2b>
    906c:	4680      	mov	r8, r0
    906e:	e032      	b.n	90d6 <_dtoa_r+0x6f6>
    9070:	9a06      	ldr	r2, [sp, #24]
    9072:	9b03      	ldr	r3, [sp, #12]
    9074:	1ad2      	subs	r2, r2, r3
    9076:	425b      	negs	r3, r3
    9078:	4699      	mov	r9, r3
    907a:	2300      	movs	r3, #0
    907c:	9206      	str	r2, [sp, #24]
    907e:	930d      	str	r3, [sp, #52]	; 0x34
    9080:	e579      	b.n	8b76 <_dtoa_r+0x196>
    9082:	9803      	ldr	r0, [sp, #12]
    9084:	f7fc fa56 	bl	5534 <__aeabi_i2d>
    9088:	000b      	movs	r3, r1
    908a:	0002      	movs	r2, r0
    908c:	0029      	movs	r1, r5
    908e:	0020      	movs	r0, r4
    9090:	f7fc fbb6 	bl	5800 <__aeabi_dcmpeq>
    9094:	0002      	movs	r2, r0
    9096:	4250      	negs	r0, r2
    9098:	4150      	adcs	r0, r2
    909a:	9b03      	ldr	r3, [sp, #12]
    909c:	1a1b      	subs	r3, r3, r0
    909e:	9303      	str	r3, [sp, #12]
    90a0:	e53d      	b.n	8b1e <_dtoa_r+0x13e>
    90a2:	2301      	movs	r3, #1
    90a4:	1a9b      	subs	r3, r3, r2
    90a6:	9306      	str	r3, [sp, #24]
    90a8:	2300      	movs	r3, #0
    90aa:	9304      	str	r3, [sp, #16]
    90ac:	e557      	b.n	8b5e <_dtoa_r+0x17e>
    90ae:	46c0      	nop			; (mov r8, r8)
    90b0:	3ff00000 	.word	0x3ff00000
    90b4:	40240000 	.word	0x40240000
    90b8:	00000432 	.word	0x00000432
    90bc:	00000412 	.word	0x00000412
    90c0:	fe100000 	.word	0xfe100000
    90c4:	00010254 	.word	0x00010254
    90c8:	00010748 	.word	0x00010748
    90cc:	9b06      	ldr	r3, [sp, #24]
    90ce:	464c      	mov	r4, r9
    90d0:	9308      	str	r3, [sp, #32]
    90d2:	2300      	movs	r3, #0
    90d4:	4698      	mov	r8, r3
    90d6:	9908      	ldr	r1, [sp, #32]
    90d8:	1e0b      	subs	r3, r1, #0
    90da:	dd0e      	ble.n	90fa <_dtoa_r+0x71a>
    90dc:	9a04      	ldr	r2, [sp, #16]
    90de:	2a00      	cmp	r2, #0
    90e0:	dd0b      	ble.n	90fa <_dtoa_r+0x71a>
    90e2:	4293      	cmp	r3, r2
    90e4:	dd00      	ble.n	90e8 <_dtoa_r+0x708>
    90e6:	e187      	b.n	93f8 <_dtoa_r+0xa18>
    90e8:	9a06      	ldr	r2, [sp, #24]
    90ea:	1ad2      	subs	r2, r2, r3
    90ec:	9206      	str	r2, [sp, #24]
    90ee:	9a08      	ldr	r2, [sp, #32]
    90f0:	1ad2      	subs	r2, r2, r3
    90f2:	9208      	str	r2, [sp, #32]
    90f4:	9a04      	ldr	r2, [sp, #16]
    90f6:	1ad3      	subs	r3, r2, r3
    90f8:	9304      	str	r3, [sp, #16]
    90fa:	464b      	mov	r3, r9
    90fc:	2b00      	cmp	r3, #0
    90fe:	d01a      	beq.n	9136 <_dtoa_r+0x756>
    9100:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9102:	2b00      	cmp	r3, #0
    9104:	d100      	bne.n	9108 <_dtoa_r+0x728>
    9106:	e1bb      	b.n	9480 <_dtoa_r+0xaa0>
    9108:	2c00      	cmp	r4, #0
    910a:	dd10      	ble.n	912e <_dtoa_r+0x74e>
    910c:	4641      	mov	r1, r8
    910e:	0022      	movs	r2, r4
    9110:	4650      	mov	r0, sl
    9112:	f001 fb25 	bl	a760 <__pow5mult>
    9116:	465a      	mov	r2, fp
    9118:	0001      	movs	r1, r0
    911a:	4680      	mov	r8, r0
    911c:	4650      	mov	r0, sl
    911e:	f001 fa75 	bl	a60c <__multiply>
    9122:	0005      	movs	r5, r0
    9124:	4659      	mov	r1, fp
    9126:	4650      	mov	r0, sl
    9128:	f001 f984 	bl	a434 <_Bfree>
    912c:	46ab      	mov	fp, r5
    912e:	464b      	mov	r3, r9
    9130:	1b1a      	subs	r2, r3, r4
    9132:	d000      	beq.n	9136 <_dtoa_r+0x756>
    9134:	e1a5      	b.n	9482 <_dtoa_r+0xaa2>
    9136:	2101      	movs	r1, #1
    9138:	4650      	mov	r0, sl
    913a:	f001 fa5d 	bl	a5f8 <__i2b>
    913e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9140:	4681      	mov	r9, r0
    9142:	2b00      	cmp	r3, #0
    9144:	dd1d      	ble.n	9182 <_dtoa_r+0x7a2>
    9146:	001a      	movs	r2, r3
    9148:	0001      	movs	r1, r0
    914a:	4650      	mov	r0, sl
    914c:	f001 fb08 	bl	a760 <__pow5mult>
    9150:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9152:	4681      	mov	r9, r0
    9154:	2b01      	cmp	r3, #1
    9156:	dc00      	bgt.n	915a <_dtoa_r+0x77a>
    9158:	e150      	b.n	93fc <_dtoa_r+0xa1c>
    915a:	2400      	movs	r4, #0
    915c:	464b      	mov	r3, r9
    915e:	691b      	ldr	r3, [r3, #16]
    9160:	3303      	adds	r3, #3
    9162:	009b      	lsls	r3, r3, #2
    9164:	444b      	add	r3, r9
    9166:	6858      	ldr	r0, [r3, #4]
    9168:	f001 f9fe 	bl	a568 <__hi0bits>
    916c:	2320      	movs	r3, #32
    916e:	1a1b      	subs	r3, r3, r0
    9170:	e010      	b.n	9194 <_dtoa_r+0x7b4>
    9172:	2220      	movs	r2, #32
    9174:	0030      	movs	r0, r6
    9176:	1ad3      	subs	r3, r2, r3
    9178:	4098      	lsls	r0, r3
    917a:	e685      	b.n	8e88 <_dtoa_r+0x4a8>
    917c:	2300      	movs	r3, #0
    917e:	930c      	str	r3, [sp, #48]	; 0x30
    9180:	e4e3      	b.n	8b4a <_dtoa_r+0x16a>
    9182:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9184:	2400      	movs	r4, #0
    9186:	2b01      	cmp	r3, #1
    9188:	dc00      	bgt.n	918c <_dtoa_r+0x7ac>
    918a:	e18b      	b.n	94a4 <_dtoa_r+0xac4>
    918c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    918e:	2301      	movs	r3, #1
    9190:	2a00      	cmp	r2, #0
    9192:	d1e3      	bne.n	915c <_dtoa_r+0x77c>
    9194:	9904      	ldr	r1, [sp, #16]
    9196:	201f      	movs	r0, #31
    9198:	468c      	mov	ip, r1
    919a:	4463      	add	r3, ip
    919c:	4018      	ands	r0, r3
    919e:	d100      	bne.n	91a2 <_dtoa_r+0x7c2>
    91a0:	e0ae      	b.n	9300 <_dtoa_r+0x920>
    91a2:	2320      	movs	r3, #32
    91a4:	1a1b      	subs	r3, r3, r0
    91a6:	2b04      	cmp	r3, #4
    91a8:	dc00      	bgt.n	91ac <_dtoa_r+0x7cc>
    91aa:	e3cc      	b.n	9946 <_dtoa_r+0xf66>
    91ac:	231c      	movs	r3, #28
    91ae:	1a18      	subs	r0, r3, r0
    91b0:	9b06      	ldr	r3, [sp, #24]
    91b2:	469c      	mov	ip, r3
    91b4:	4484      	add	ip, r0
    91b6:	4663      	mov	r3, ip
    91b8:	9306      	str	r3, [sp, #24]
    91ba:	9b08      	ldr	r3, [sp, #32]
    91bc:	469c      	mov	ip, r3
    91be:	4484      	add	ip, r0
    91c0:	4663      	mov	r3, ip
    91c2:	468c      	mov	ip, r1
    91c4:	4484      	add	ip, r0
    91c6:	9308      	str	r3, [sp, #32]
    91c8:	4663      	mov	r3, ip
    91ca:	9304      	str	r3, [sp, #16]
    91cc:	9b06      	ldr	r3, [sp, #24]
    91ce:	2b00      	cmp	r3, #0
    91d0:	dd05      	ble.n	91de <_dtoa_r+0x7fe>
    91d2:	4659      	mov	r1, fp
    91d4:	001a      	movs	r2, r3
    91d6:	4650      	mov	r0, sl
    91d8:	f001 fb22 	bl	a820 <__lshift>
    91dc:	4683      	mov	fp, r0
    91de:	9b04      	ldr	r3, [sp, #16]
    91e0:	2b00      	cmp	r3, #0
    91e2:	dd05      	ble.n	91f0 <_dtoa_r+0x810>
    91e4:	4649      	mov	r1, r9
    91e6:	001a      	movs	r2, r3
    91e8:	4650      	mov	r0, sl
    91ea:	f001 fb19 	bl	a820 <__lshift>
    91ee:	4681      	mov	r9, r0
    91f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    91f2:	2b00      	cmp	r3, #0
    91f4:	d000      	beq.n	91f8 <_dtoa_r+0x818>
    91f6:	e094      	b.n	9322 <_dtoa_r+0x942>
    91f8:	9b07      	ldr	r3, [sp, #28]
    91fa:	2b00      	cmp	r3, #0
    91fc:	dc00      	bgt.n	9200 <_dtoa_r+0x820>
    91fe:	e175      	b.n	94ec <_dtoa_r+0xb0c>
    9200:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9202:	2b00      	cmp	r3, #0
    9204:	d100      	bne.n	9208 <_dtoa_r+0x828>
    9206:	e0a6      	b.n	9356 <_dtoa_r+0x976>
    9208:	9b08      	ldr	r3, [sp, #32]
    920a:	2b00      	cmp	r3, #0
    920c:	dd05      	ble.n	921a <_dtoa_r+0x83a>
    920e:	4641      	mov	r1, r8
    9210:	001a      	movs	r2, r3
    9212:	4650      	mov	r0, sl
    9214:	f001 fb04 	bl	a820 <__lshift>
    9218:	4680      	mov	r8, r0
    921a:	4643      	mov	r3, r8
    921c:	930c      	str	r3, [sp, #48]	; 0x30
    921e:	2c00      	cmp	r4, #0
    9220:	d000      	beq.n	9224 <_dtoa_r+0x844>
    9222:	e250      	b.n	96c6 <_dtoa_r+0xce6>
    9224:	9c07      	ldr	r4, [sp, #28]
    9226:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9228:	3c01      	subs	r4, #1
    922a:	0023      	movs	r3, r4
    922c:	4694      	mov	ip, r2
    922e:	4463      	add	r3, ip
    9230:	9308      	str	r3, [sp, #32]
    9232:	2301      	movs	r3, #1
    9234:	4033      	ands	r3, r6
    9236:	9307      	str	r3, [sp, #28]
    9238:	464b      	mov	r3, r9
    923a:	9306      	str	r3, [sp, #24]
    923c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    923e:	4657      	mov	r7, sl
    9240:	4645      	mov	r5, r8
    9242:	465e      	mov	r6, fp
    9244:	4692      	mov	sl, r2
    9246:	4698      	mov	r8, r3
    9248:	9b06      	ldr	r3, [sp, #24]
    924a:	0030      	movs	r0, r6
    924c:	0019      	movs	r1, r3
    924e:	4699      	mov	r9, r3
    9250:	f7ff fb1c 	bl	888c <quorem>
    9254:	0003      	movs	r3, r0
    9256:	900b      	str	r0, [sp, #44]	; 0x2c
    9258:	3330      	adds	r3, #48	; 0x30
    925a:	0029      	movs	r1, r5
    925c:	0030      	movs	r0, r6
    925e:	9304      	str	r3, [sp, #16]
    9260:	f001 fb3e 	bl	a8e0 <__mcmp>
    9264:	4649      	mov	r1, r9
    9266:	0004      	movs	r4, r0
    9268:	4642      	mov	r2, r8
    926a:	0038      	movs	r0, r7
    926c:	f001 fb52 	bl	a914 <__mdiff>
    9270:	68c3      	ldr	r3, [r0, #12]
    9272:	4681      	mov	r9, r0
    9274:	2b00      	cmp	r3, #0
    9276:	d000      	beq.n	927a <_dtoa_r+0x89a>
    9278:	e11e      	b.n	94b8 <_dtoa_r+0xad8>
    927a:	0001      	movs	r1, r0
    927c:	0030      	movs	r0, r6
    927e:	f001 fb2f 	bl	a8e0 <__mcmp>
    9282:	4683      	mov	fp, r0
    9284:	4649      	mov	r1, r9
    9286:	0038      	movs	r0, r7
    9288:	f001 f8d4 	bl	a434 <_Bfree>
    928c:	465b      	mov	r3, fp
    928e:	9a22      	ldr	r2, [sp, #136]	; 0x88
    9290:	4313      	orrs	r3, r2
    9292:	d103      	bne.n	929c <_dtoa_r+0x8bc>
    9294:	9b07      	ldr	r3, [sp, #28]
    9296:	2b00      	cmp	r3, #0
    9298:	d100      	bne.n	929c <_dtoa_r+0x8bc>
    929a:	e306      	b.n	98aa <_dtoa_r+0xeca>
    929c:	2c00      	cmp	r4, #0
    929e:	da00      	bge.n	92a2 <_dtoa_r+0x8c2>
    92a0:	e1a8      	b.n	95f4 <_dtoa_r+0xc14>
    92a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    92a4:	431c      	orrs	r4, r3
    92a6:	d103      	bne.n	92b0 <_dtoa_r+0x8d0>
    92a8:	9b07      	ldr	r3, [sp, #28]
    92aa:	2b00      	cmp	r3, #0
    92ac:	d100      	bne.n	92b0 <_dtoa_r+0x8d0>
    92ae:	e1a1      	b.n	95f4 <_dtoa_r+0xc14>
    92b0:	465b      	mov	r3, fp
    92b2:	2b00      	cmp	r3, #0
    92b4:	dd00      	ble.n	92b8 <_dtoa_r+0x8d8>
    92b6:	e282      	b.n	97be <_dtoa_r+0xdde>
    92b8:	4669      	mov	r1, sp
    92ba:	4652      	mov	r2, sl
    92bc:	4653      	mov	r3, sl
    92be:	7c09      	ldrb	r1, [r1, #16]
    92c0:	1c5c      	adds	r4, r3, #1
    92c2:	7011      	strb	r1, [r2, #0]
    92c4:	9a08      	ldr	r2, [sp, #32]
    92c6:	4552      	cmp	r2, sl
    92c8:	d100      	bne.n	92cc <_dtoa_r+0x8ec>
    92ca:	e28a      	b.n	97e2 <_dtoa_r+0xe02>
    92cc:	0031      	movs	r1, r6
    92ce:	2300      	movs	r3, #0
    92d0:	220a      	movs	r2, #10
    92d2:	0038      	movs	r0, r7
    92d4:	f001 f8b8 	bl	a448 <__multadd>
    92d8:	2300      	movs	r3, #0
    92da:	0006      	movs	r6, r0
    92dc:	220a      	movs	r2, #10
    92de:	0029      	movs	r1, r5
    92e0:	0038      	movs	r0, r7
    92e2:	4545      	cmp	r5, r8
    92e4:	d100      	bne.n	92e8 <_dtoa_r+0x908>
    92e6:	e0e1      	b.n	94ac <_dtoa_r+0xacc>
    92e8:	f001 f8ae 	bl	a448 <__multadd>
    92ec:	4641      	mov	r1, r8
    92ee:	0005      	movs	r5, r0
    92f0:	2300      	movs	r3, #0
    92f2:	220a      	movs	r2, #10
    92f4:	0038      	movs	r0, r7
    92f6:	f001 f8a7 	bl	a448 <__multadd>
    92fa:	46a2      	mov	sl, r4
    92fc:	4680      	mov	r8, r0
    92fe:	e7a3      	b.n	9248 <_dtoa_r+0x868>
    9300:	201c      	movs	r0, #28
    9302:	9b06      	ldr	r3, [sp, #24]
    9304:	469c      	mov	ip, r3
    9306:	4484      	add	ip, r0
    9308:	4663      	mov	r3, ip
    930a:	9306      	str	r3, [sp, #24]
    930c:	9b08      	ldr	r3, [sp, #32]
    930e:	469c      	mov	ip, r3
    9310:	4484      	add	ip, r0
    9312:	4663      	mov	r3, ip
    9314:	9308      	str	r3, [sp, #32]
    9316:	9b04      	ldr	r3, [sp, #16]
    9318:	469c      	mov	ip, r3
    931a:	4484      	add	ip, r0
    931c:	4663      	mov	r3, ip
    931e:	9304      	str	r3, [sp, #16]
    9320:	e754      	b.n	91cc <_dtoa_r+0x7ec>
    9322:	4649      	mov	r1, r9
    9324:	4658      	mov	r0, fp
    9326:	f001 fadb 	bl	a8e0 <__mcmp>
    932a:	2800      	cmp	r0, #0
    932c:	db00      	blt.n	9330 <_dtoa_r+0x950>
    932e:	e763      	b.n	91f8 <_dtoa_r+0x818>
    9330:	9b03      	ldr	r3, [sp, #12]
    9332:	4659      	mov	r1, fp
    9334:	3b01      	subs	r3, #1
    9336:	9303      	str	r3, [sp, #12]
    9338:	220a      	movs	r2, #10
    933a:	2300      	movs	r3, #0
    933c:	4650      	mov	r0, sl
    933e:	f001 f883 	bl	a448 <__multadd>
    9342:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9344:	4683      	mov	fp, r0
    9346:	2b00      	cmp	r3, #0
    9348:	d000      	beq.n	934c <_dtoa_r+0x96c>
    934a:	e2ca      	b.n	98e2 <_dtoa_r+0xf02>
    934c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    934e:	2b00      	cmp	r3, #0
    9350:	dc00      	bgt.n	9354 <_dtoa_r+0x974>
    9352:	e2d8      	b.n	9906 <_dtoa_r+0xf26>
    9354:	9307      	str	r3, [sp, #28]
    9356:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9358:	465d      	mov	r5, fp
    935a:	2400      	movs	r4, #0
    935c:	9f07      	ldr	r7, [sp, #28]
    935e:	469b      	mov	fp, r3
    9360:	e006      	b.n	9370 <_dtoa_r+0x990>
    9362:	0029      	movs	r1, r5
    9364:	2300      	movs	r3, #0
    9366:	220a      	movs	r2, #10
    9368:	4650      	mov	r0, sl
    936a:	f001 f86d 	bl	a448 <__multadd>
    936e:	0005      	movs	r5, r0
    9370:	4649      	mov	r1, r9
    9372:	0028      	movs	r0, r5
    9374:	f7ff fa8a 	bl	888c <quorem>
    9378:	465b      	mov	r3, fp
    937a:	3030      	adds	r0, #48	; 0x30
    937c:	5518      	strb	r0, [r3, r4]
    937e:	3401      	adds	r4, #1
    9380:	42bc      	cmp	r4, r7
    9382:	dbee      	blt.n	9362 <_dtoa_r+0x982>
    9384:	46ab      	mov	fp, r5
    9386:	0006      	movs	r6, r0
    9388:	9c07      	ldr	r4, [sp, #28]
    938a:	2c00      	cmp	r4, #0
    938c:	dc00      	bgt.n	9390 <_dtoa_r+0x9b0>
    938e:	e237      	b.n	9800 <_dtoa_r+0xe20>
    9390:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9392:	2700      	movs	r7, #0
    9394:	469c      	mov	ip, r3
    9396:	4464      	add	r4, ip
    9398:	4659      	mov	r1, fp
    939a:	2201      	movs	r2, #1
    939c:	4650      	mov	r0, sl
    939e:	f001 fa3f 	bl	a820 <__lshift>
    93a2:	4649      	mov	r1, r9
    93a4:	4683      	mov	fp, r0
    93a6:	f001 fa9b 	bl	a8e0 <__mcmp>
    93aa:	2800      	cmp	r0, #0
    93ac:	dc00      	bgt.n	93b0 <_dtoa_r+0x9d0>
    93ae:	e144      	b.n	963a <_dtoa_r+0xc5a>
    93b0:	1e65      	subs	r5, r4, #1
    93b2:	782b      	ldrb	r3, [r5, #0]
    93b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    93b6:	e006      	b.n	93c6 <_dtoa_r+0x9e6>
    93b8:	4295      	cmp	r5, r2
    93ba:	d100      	bne.n	93be <_dtoa_r+0x9de>
    93bc:	e0b1      	b.n	9522 <_dtoa_r+0xb42>
    93be:	3c02      	subs	r4, #2
    93c0:	7823      	ldrb	r3, [r4, #0]
    93c2:	002c      	movs	r4, r5
    93c4:	3d01      	subs	r5, #1
    93c6:	2b39      	cmp	r3, #57	; 0x39
    93c8:	d0f6      	beq.n	93b8 <_dtoa_r+0x9d8>
    93ca:	3301      	adds	r3, #1
    93cc:	702b      	strb	r3, [r5, #0]
    93ce:	4649      	mov	r1, r9
    93d0:	4650      	mov	r0, sl
    93d2:	f001 f82f 	bl	a434 <_Bfree>
    93d6:	4643      	mov	r3, r8
    93d8:	2b00      	cmp	r3, #0
    93da:	d100      	bne.n	93de <_dtoa_r+0x9fe>
    93dc:	e52f      	b.n	8e3e <_dtoa_r+0x45e>
    93de:	2f00      	cmp	r7, #0
    93e0:	d005      	beq.n	93ee <_dtoa_r+0xa0e>
    93e2:	4547      	cmp	r7, r8
    93e4:	d003      	beq.n	93ee <_dtoa_r+0xa0e>
    93e6:	0039      	movs	r1, r7
    93e8:	4650      	mov	r0, sl
    93ea:	f001 f823 	bl	a434 <_Bfree>
    93ee:	4641      	mov	r1, r8
    93f0:	4650      	mov	r0, sl
    93f2:	f001 f81f 	bl	a434 <_Bfree>
    93f6:	e522      	b.n	8e3e <_dtoa_r+0x45e>
    93f8:	0013      	movs	r3, r2
    93fa:	e675      	b.n	90e8 <_dtoa_r+0x708>
    93fc:	2e00      	cmp	r6, #0
    93fe:	d000      	beq.n	9402 <_dtoa_r+0xa22>
    9400:	e6ab      	b.n	915a <_dtoa_r+0x77a>
    9402:	033b      	lsls	r3, r7, #12
    9404:	2400      	movs	r4, #0
    9406:	2b00      	cmp	r3, #0
    9408:	d000      	beq.n	940c <_dtoa_r+0xa2c>
    940a:	e6bf      	b.n	918c <_dtoa_r+0x7ac>
    940c:	4bba      	ldr	r3, [pc, #744]	; (96f8 <_dtoa_r+0xd18>)
    940e:	423b      	tst	r3, r7
    9410:	d100      	bne.n	9414 <_dtoa_r+0xa34>
    9412:	e6bb      	b.n	918c <_dtoa_r+0x7ac>
    9414:	9b06      	ldr	r3, [sp, #24]
    9416:	3401      	adds	r4, #1
    9418:	3301      	adds	r3, #1
    941a:	9306      	str	r3, [sp, #24]
    941c:	9b04      	ldr	r3, [sp, #16]
    941e:	3301      	adds	r3, #1
    9420:	9304      	str	r3, [sp, #16]
    9422:	e6b3      	b.n	918c <_dtoa_r+0x7ac>
    9424:	2301      	movs	r3, #1
    9426:	930b      	str	r3, [sp, #44]	; 0x2c
    9428:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    942a:	2b00      	cmp	r3, #0
    942c:	dc00      	bgt.n	9430 <_dtoa_r+0xa50>
    942e:	e0d1      	b.n	95d4 <_dtoa_r+0xbf4>
    9430:	001d      	movs	r5, r3
    9432:	4698      	mov	r8, r3
    9434:	930e      	str	r3, [sp, #56]	; 0x38
    9436:	9307      	str	r3, [sp, #28]
    9438:	f7ff fbc8 	bl	8bcc <_dtoa_r+0x1ec>
    943c:	9b07      	ldr	r3, [sp, #28]
    943e:	2b00      	cmp	r3, #0
    9440:	dd00      	ble.n	9444 <_dtoa_r+0xa64>
    9442:	e553      	b.n	8eec <_dtoa_r+0x50c>
    9444:	d000      	beq.n	9448 <_dtoa_r+0xa68>
    9446:	e0ad      	b.n	95a4 <_dtoa_r+0xbc4>
    9448:	9804      	ldr	r0, [sp, #16]
    944a:	9905      	ldr	r1, [sp, #20]
    944c:	2200      	movs	r2, #0
    944e:	4bab      	ldr	r3, [pc, #684]	; (96fc <_dtoa_r+0xd1c>)
    9450:	f7fb faa6 	bl	49a0 <__aeabi_dmul>
    9454:	003b      	movs	r3, r7
    9456:	0032      	movs	r2, r6
    9458:	f7fc f9f6 	bl	5848 <__aeabi_dcmpge>
    945c:	2300      	movs	r3, #0
    945e:	4699      	mov	r9, r3
    9460:	4698      	mov	r8, r3
    9462:	2800      	cmp	r0, #0
    9464:	d055      	beq.n	9512 <_dtoa_r+0xb32>
    9466:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    9468:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    946a:	43db      	mvns	r3, r3
    946c:	9303      	str	r3, [sp, #12]
    946e:	4649      	mov	r1, r9
    9470:	4650      	mov	r0, sl
    9472:	f000 ffdf 	bl	a434 <_Bfree>
    9476:	4643      	mov	r3, r8
    9478:	2b00      	cmp	r3, #0
    947a:	d100      	bne.n	947e <_dtoa_r+0xa9e>
    947c:	e4df      	b.n	8e3e <_dtoa_r+0x45e>
    947e:	e7b6      	b.n	93ee <_dtoa_r+0xa0e>
    9480:	464a      	mov	r2, r9
    9482:	4659      	mov	r1, fp
    9484:	4650      	mov	r0, sl
    9486:	f001 f96b 	bl	a760 <__pow5mult>
    948a:	4683      	mov	fp, r0
    948c:	e653      	b.n	9136 <_dtoa_r+0x756>
    948e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    9490:	2a00      	cmp	r2, #0
    9492:	d100      	bne.n	9496 <_dtoa_r+0xab6>
    9494:	e1b6      	b.n	9804 <_dtoa_r+0xe24>
    9496:	4a9a      	ldr	r2, [pc, #616]	; (9700 <_dtoa_r+0xd20>)
    9498:	464c      	mov	r4, r9
    949a:	4694      	mov	ip, r2
    949c:	9a06      	ldr	r2, [sp, #24]
    949e:	4463      	add	r3, ip
    94a0:	9208      	str	r2, [sp, #32]
    94a2:	e5d5      	b.n	9050 <_dtoa_r+0x670>
    94a4:	2e00      	cmp	r6, #0
    94a6:	d000      	beq.n	94aa <_dtoa_r+0xaca>
    94a8:	e670      	b.n	918c <_dtoa_r+0x7ac>
    94aa:	e7aa      	b.n	9402 <_dtoa_r+0xa22>
    94ac:	f000 ffcc 	bl	a448 <__multadd>
    94b0:	46a2      	mov	sl, r4
    94b2:	0005      	movs	r5, r0
    94b4:	4680      	mov	r8, r0
    94b6:	e6c7      	b.n	9248 <_dtoa_r+0x868>
    94b8:	2301      	movs	r3, #1
    94ba:	469b      	mov	fp, r3
    94bc:	e6e2      	b.n	9284 <_dtoa_r+0x8a4>
    94be:	2300      	movs	r3, #0
    94c0:	930b      	str	r3, [sp, #44]	; 0x2c
    94c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    94c4:	2b02      	cmp	r3, #2
    94c6:	d0af      	beq.n	9428 <_dtoa_r+0xa48>
    94c8:	2400      	movs	r4, #0
    94ca:	4653      	mov	r3, sl
    94cc:	0021      	movs	r1, r4
    94ce:	645c      	str	r4, [r3, #68]	; 0x44
    94d0:	4650      	mov	r0, sl
    94d2:	f000 ff87 	bl	a3e4 <_Balloc>
    94d6:	4653      	mov	r3, sl
    94d8:	6418      	str	r0, [r3, #64]	; 0x40
    94da:	2301      	movs	r3, #1
    94dc:	425b      	negs	r3, r3
    94de:	9307      	str	r3, [sp, #28]
    94e0:	930e      	str	r3, [sp, #56]	; 0x38
    94e2:	3302      	adds	r3, #2
    94e4:	900a      	str	r0, [sp, #40]	; 0x28
    94e6:	9423      	str	r4, [sp, #140]	; 0x8c
    94e8:	930b      	str	r3, [sp, #44]	; 0x2c
    94ea:	e4ec      	b.n	8ec6 <_dtoa_r+0x4e6>
    94ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
    94ee:	2b02      	cmp	r3, #2
    94f0:	dc00      	bgt.n	94f4 <_dtoa_r+0xb14>
    94f2:	e685      	b.n	9200 <_dtoa_r+0x820>
    94f4:	9b07      	ldr	r3, [sp, #28]
    94f6:	2b00      	cmp	r3, #0
    94f8:	d1b5      	bne.n	9466 <_dtoa_r+0xa86>
    94fa:	4649      	mov	r1, r9
    94fc:	2205      	movs	r2, #5
    94fe:	4650      	mov	r0, sl
    9500:	f000 ffa2 	bl	a448 <__multadd>
    9504:	4681      	mov	r9, r0
    9506:	0001      	movs	r1, r0
    9508:	4658      	mov	r0, fp
    950a:	f001 f9e9 	bl	a8e0 <__mcmp>
    950e:	2800      	cmp	r0, #0
    9510:	dda9      	ble.n	9466 <_dtoa_r+0xa86>
    9512:	2331      	movs	r3, #49	; 0x31
    9514:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9516:	7013      	strb	r3, [r2, #0]
    9518:	9b03      	ldr	r3, [sp, #12]
    951a:	1c54      	adds	r4, r2, #1
    951c:	3301      	adds	r3, #1
    951e:	9303      	str	r3, [sp, #12]
    9520:	e7a5      	b.n	946e <_dtoa_r+0xa8e>
    9522:	9b03      	ldr	r3, [sp, #12]
    9524:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9526:	3301      	adds	r3, #1
    9528:	9303      	str	r3, [sp, #12]
    952a:	2331      	movs	r3, #49	; 0x31
    952c:	7013      	strb	r3, [r2, #0]
    952e:	e74e      	b.n	93ce <_dtoa_r+0x9ee>
    9530:	2300      	movs	r3, #0
    9532:	930b      	str	r3, [sp, #44]	; 0x2c
    9534:	f7ff fb3d 	bl	8bb2 <_dtoa_r+0x1d2>
    9538:	9b06      	ldr	r3, [sp, #24]
    953a:	465c      	mov	r4, fp
    953c:	469b      	mov	fp, r3
    953e:	9b07      	ldr	r3, [sp, #28]
    9540:	469a      	mov	sl, r3
    9542:	e47c      	b.n	8e3e <_dtoa_r+0x45e>
    9544:	4640      	mov	r0, r8
    9546:	f7fb fff5 	bl	5534 <__aeabi_i2d>
    954a:	0032      	movs	r2, r6
    954c:	003b      	movs	r3, r7
    954e:	f7fb fa27 	bl	49a0 <__aeabi_dmul>
    9552:	2200      	movs	r2, #0
    9554:	4b6b      	ldr	r3, [pc, #428]	; (9704 <_dtoa_r+0xd24>)
    9556:	f003 fecd 	bl	d2f4 <__aeabi_dadd>
    955a:	4a6b      	ldr	r2, [pc, #428]	; (9708 <_dtoa_r+0xd28>)
    955c:	000b      	movs	r3, r1
    955e:	4694      	mov	ip, r2
    9560:	4463      	add	r3, ip
    9562:	9008      	str	r0, [sp, #32]
    9564:	9109      	str	r1, [sp, #36]	; 0x24
    9566:	9309      	str	r3, [sp, #36]	; 0x24
    9568:	2200      	movs	r2, #0
    956a:	4b64      	ldr	r3, [pc, #400]	; (96fc <_dtoa_r+0xd1c>)
    956c:	0030      	movs	r0, r6
    956e:	0039      	movs	r1, r7
    9570:	f7fb fc96 	bl	4ea0 <__aeabi_dsub>
    9574:	9e08      	ldr	r6, [sp, #32]
    9576:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9578:	0032      	movs	r2, r6
    957a:	003b      	movs	r3, r7
    957c:	0004      	movs	r4, r0
    957e:	000d      	movs	r5, r1
    9580:	f7fc f958 	bl	5834 <__aeabi_dcmpgt>
    9584:	2800      	cmp	r0, #0
    9586:	d000      	beq.n	958a <_dtoa_r+0xbaa>
    9588:	e0b2      	b.n	96f0 <_dtoa_r+0xd10>
    958a:	2080      	movs	r0, #128	; 0x80
    958c:	0600      	lsls	r0, r0, #24
    958e:	4684      	mov	ip, r0
    9590:	0039      	movs	r1, r7
    9592:	4461      	add	r1, ip
    9594:	000b      	movs	r3, r1
    9596:	0032      	movs	r2, r6
    9598:	0020      	movs	r0, r4
    959a:	0029      	movs	r1, r5
    959c:	f7fc f936 	bl	580c <__aeabi_dcmplt>
    95a0:	2800      	cmp	r0, #0
    95a2:	d057      	beq.n	9654 <_dtoa_r+0xc74>
    95a4:	2300      	movs	r3, #0
    95a6:	4699      	mov	r9, r3
    95a8:	4698      	mov	r8, r3
    95aa:	e75c      	b.n	9466 <_dtoa_r+0xa86>
    95ac:	980a      	ldr	r0, [sp, #40]	; 0x28
    95ae:	f7ff fa4c 	bl	8a4a <_dtoa_r+0x6a>
    95b2:	1ae2      	subs	r2, r4, r3
    95b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    95b6:	46a1      	mov	r9, r4
    95b8:	469c      	mov	ip, r3
    95ba:	4494      	add	ip, r2
    95bc:	4663      	mov	r3, ip
    95be:	2400      	movs	r4, #0
    95c0:	930d      	str	r3, [sp, #52]	; 0x34
    95c2:	e53e      	b.n	9042 <_dtoa_r+0x662>
    95c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
    95c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    95c8:	9208      	str	r2, [sp, #32]
    95ca:	9309      	str	r3, [sp, #36]	; 0x24
    95cc:	2302      	movs	r3, #2
    95ce:	4698      	mov	r8, r3
    95d0:	f7ff fb3a 	bl	8c48 <_dtoa_r+0x268>
    95d4:	2300      	movs	r3, #0
    95d6:	4652      	mov	r2, sl
    95d8:	2100      	movs	r1, #0
    95da:	6453      	str	r3, [r2, #68]	; 0x44
    95dc:	4650      	mov	r0, sl
    95de:	f000 ff01 	bl	a3e4 <_Balloc>
    95e2:	4653      	mov	r3, sl
    95e4:	6418      	str	r0, [r3, #64]	; 0x40
    95e6:	2301      	movs	r3, #1
    95e8:	900a      	str	r0, [sp, #40]	; 0x28
    95ea:	9307      	str	r3, [sp, #28]
    95ec:	9323      	str	r3, [sp, #140]	; 0x8c
    95ee:	930e      	str	r3, [sp, #56]	; 0x38
    95f0:	f7ff fb07 	bl	8c02 <_dtoa_r+0x222>
    95f4:	4643      	mov	r3, r8
    95f6:	930c      	str	r3, [sp, #48]	; 0x30
    95f8:	465b      	mov	r3, fp
    95fa:	9a06      	ldr	r2, [sp, #24]
    95fc:	46a8      	mov	r8, r5
    95fe:	46b3      	mov	fp, r6
    9600:	4655      	mov	r5, sl
    9602:	9e04      	ldr	r6, [sp, #16]
    9604:	4691      	mov	r9, r2
    9606:	46ba      	mov	sl, r7
    9608:	2b00      	cmp	r3, #0
    960a:	dd10      	ble.n	962e <_dtoa_r+0xc4e>
    960c:	4659      	mov	r1, fp
    960e:	2201      	movs	r2, #1
    9610:	0038      	movs	r0, r7
    9612:	f001 f905 	bl	a820 <__lshift>
    9616:	4649      	mov	r1, r9
    9618:	4683      	mov	fp, r0
    961a:	f001 f961 	bl	a8e0 <__mcmp>
    961e:	2800      	cmp	r0, #0
    9620:	dc00      	bgt.n	9624 <_dtoa_r+0xc44>
    9622:	e157      	b.n	98d4 <_dtoa_r+0xef4>
    9624:	2e39      	cmp	r6, #57	; 0x39
    9626:	d100      	bne.n	962a <_dtoa_r+0xc4a>
    9628:	e122      	b.n	9870 <_dtoa_r+0xe90>
    962a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    962c:	3631      	adds	r6, #49	; 0x31
    962e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9630:	4647      	mov	r7, r8
    9632:	1c6c      	adds	r4, r5, #1
    9634:	702e      	strb	r6, [r5, #0]
    9636:	4698      	mov	r8, r3
    9638:	e6c9      	b.n	93ce <_dtoa_r+0x9ee>
    963a:	2800      	cmp	r0, #0
    963c:	d103      	bne.n	9646 <_dtoa_r+0xc66>
    963e:	07f3      	lsls	r3, r6, #31
    9640:	d501      	bpl.n	9646 <_dtoa_r+0xc66>
    9642:	e6b5      	b.n	93b0 <_dtoa_r+0x9d0>
    9644:	001c      	movs	r4, r3
    9646:	1e63      	subs	r3, r4, #1
    9648:	781a      	ldrb	r2, [r3, #0]
    964a:	2a30      	cmp	r2, #48	; 0x30
    964c:	d0fa      	beq.n	9644 <_dtoa_r+0xc64>
    964e:	e6be      	b.n	93ce <_dtoa_r+0x9ee>
    9650:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9652:	4699      	mov	r9, r3
    9654:	9e10      	ldr	r6, [sp, #64]	; 0x40
    9656:	9f11      	ldr	r7, [sp, #68]	; 0x44
    9658:	e435      	b.n	8ec6 <_dtoa_r+0x4e6>
    965a:	2501      	movs	r5, #1
    965c:	f7ff fab4 	bl	8bc8 <_dtoa_r+0x1e8>
    9660:	9b03      	ldr	r3, [sp, #12]
    9662:	2b00      	cmp	r3, #0
    9664:	d100      	bne.n	9668 <_dtoa_r+0xc88>
    9666:	e0d4      	b.n	9812 <_dtoa_r+0xe32>
    9668:	9810      	ldr	r0, [sp, #64]	; 0x40
    966a:	9911      	ldr	r1, [sp, #68]	; 0x44
    966c:	425c      	negs	r4, r3
    966e:	230f      	movs	r3, #15
    9670:	4a26      	ldr	r2, [pc, #152]	; (970c <_dtoa_r+0xd2c>)
    9672:	4023      	ands	r3, r4
    9674:	00db      	lsls	r3, r3, #3
    9676:	18d3      	adds	r3, r2, r3
    9678:	681a      	ldr	r2, [r3, #0]
    967a:	685b      	ldr	r3, [r3, #4]
    967c:	f7fb f990 	bl	49a0 <__aeabi_dmul>
    9680:	1124      	asrs	r4, r4, #4
    9682:	0006      	movs	r6, r0
    9684:	000f      	movs	r7, r1
    9686:	2c00      	cmp	r4, #0
    9688:	d100      	bne.n	968c <_dtoa_r+0xcac>
    968a:	e149      	b.n	9920 <_dtoa_r+0xf40>
    968c:	2302      	movs	r3, #2
    968e:	4698      	mov	r8, r3
    9690:	4d1f      	ldr	r5, [pc, #124]	; (9710 <_dtoa_r+0xd30>)
    9692:	2301      	movs	r3, #1
    9694:	4223      	tst	r3, r4
    9696:	d009      	beq.n	96ac <_dtoa_r+0xccc>
    9698:	469c      	mov	ip, r3
    969a:	682a      	ldr	r2, [r5, #0]
    969c:	686b      	ldr	r3, [r5, #4]
    969e:	0030      	movs	r0, r6
    96a0:	0039      	movs	r1, r7
    96a2:	44e0      	add	r8, ip
    96a4:	f7fb f97c 	bl	49a0 <__aeabi_dmul>
    96a8:	0006      	movs	r6, r0
    96aa:	000f      	movs	r7, r1
    96ac:	1064      	asrs	r4, r4, #1
    96ae:	3508      	adds	r5, #8
    96b0:	2c00      	cmp	r4, #0
    96b2:	d1ee      	bne.n	9692 <_dtoa_r+0xcb2>
    96b4:	f7ff fae4 	bl	8c80 <_dtoa_r+0x2a0>
    96b8:	9b03      	ldr	r3, [sp, #12]
    96ba:	2730      	movs	r7, #48	; 0x30
    96bc:	3301      	adds	r3, #1
    96be:	9303      	str	r3, [sp, #12]
    96c0:	2330      	movs	r3, #48	; 0x30
    96c2:	702b      	strb	r3, [r5, #0]
    96c4:	e4ac      	b.n	9020 <_dtoa_r+0x640>
    96c6:	6859      	ldr	r1, [r3, #4]
    96c8:	4650      	mov	r0, sl
    96ca:	f000 fe8b 	bl	a3e4 <_Balloc>
    96ce:	4643      	mov	r3, r8
    96d0:	4641      	mov	r1, r8
    96d2:	0004      	movs	r4, r0
    96d4:	691b      	ldr	r3, [r3, #16]
    96d6:	310c      	adds	r1, #12
    96d8:	1c9a      	adds	r2, r3, #2
    96da:	0092      	lsls	r2, r2, #2
    96dc:	300c      	adds	r0, #12
    96de:	f000 fe2f 	bl	a340 <memcpy>
    96e2:	2201      	movs	r2, #1
    96e4:	0021      	movs	r1, r4
    96e6:	4650      	mov	r0, sl
    96e8:	f001 f89a 	bl	a820 <__lshift>
    96ec:	900c      	str	r0, [sp, #48]	; 0x30
    96ee:	e599      	b.n	9224 <_dtoa_r+0x844>
    96f0:	2300      	movs	r3, #0
    96f2:	4699      	mov	r9, r3
    96f4:	4698      	mov	r8, r3
    96f6:	e70c      	b.n	9512 <_dtoa_r+0xb32>
    96f8:	7ff00000 	.word	0x7ff00000
    96fc:	40140000 	.word	0x40140000
    9700:	00000433 	.word	0x00000433
    9704:	401c0000 	.word	0x401c0000
    9708:	fcc00000 	.word	0xfcc00000
    970c:	00010748 	.word	0x00010748
    9710:	00010720 	.word	0x00010720
    9714:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9716:	498f      	ldr	r1, [pc, #572]	; (9954 <_dtoa_r+0xf74>)
    9718:	3b01      	subs	r3, #1
    971a:	00db      	lsls	r3, r3, #3
    971c:	18c9      	adds	r1, r1, r3
    971e:	6808      	ldr	r0, [r1, #0]
    9720:	6849      	ldr	r1, [r1, #4]
    9722:	9a08      	ldr	r2, [sp, #32]
    9724:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9726:	f7fb f93b 	bl	49a0 <__aeabi_dmul>
    972a:	9014      	str	r0, [sp, #80]	; 0x50
    972c:	9115      	str	r1, [sp, #84]	; 0x54
    972e:	0039      	movs	r1, r7
    9730:	0030      	movs	r0, r6
    9732:	f7fb fecb 	bl	54cc <__aeabi_d2iz>
    9736:	0005      	movs	r5, r0
    9738:	f7fb fefc 	bl	5534 <__aeabi_i2d>
    973c:	0002      	movs	r2, r0
    973e:	000b      	movs	r3, r1
    9740:	0030      	movs	r0, r6
    9742:	0039      	movs	r1, r7
    9744:	f7fb fbac 	bl	4ea0 <__aeabi_dsub>
    9748:	9b12      	ldr	r3, [sp, #72]	; 0x48
    974a:	9008      	str	r0, [sp, #32]
    974c:	9109      	str	r1, [sp, #36]	; 0x24
    974e:	990a      	ldr	r1, [sp, #40]	; 0x28
    9750:	001a      	movs	r2, r3
    9752:	468c      	mov	ip, r1
    9754:	3530      	adds	r5, #48	; 0x30
    9756:	4462      	add	r2, ip
    9758:	1c4c      	adds	r4, r1, #1
    975a:	700d      	strb	r5, [r1, #0]
    975c:	4690      	mov	r8, r2
    975e:	2b01      	cmp	r3, #1
    9760:	d01b      	beq.n	979a <_dtoa_r+0xdba>
    9762:	9808      	ldr	r0, [sp, #32]
    9764:	9909      	ldr	r1, [sp, #36]	; 0x24
    9766:	0025      	movs	r5, r4
    9768:	2200      	movs	r2, #0
    976a:	4b7b      	ldr	r3, [pc, #492]	; (9958 <_dtoa_r+0xf78>)
    976c:	f7fb f918 	bl	49a0 <__aeabi_dmul>
    9770:	000f      	movs	r7, r1
    9772:	0006      	movs	r6, r0
    9774:	f7fb feaa 	bl	54cc <__aeabi_d2iz>
    9778:	0004      	movs	r4, r0
    977a:	f7fb fedb 	bl	5534 <__aeabi_i2d>
    977e:	3430      	adds	r4, #48	; 0x30
    9780:	0002      	movs	r2, r0
    9782:	000b      	movs	r3, r1
    9784:	0030      	movs	r0, r6
    9786:	0039      	movs	r1, r7
    9788:	f7fb fb8a 	bl	4ea0 <__aeabi_dsub>
    978c:	702c      	strb	r4, [r5, #0]
    978e:	3501      	adds	r5, #1
    9790:	45a8      	cmp	r8, r5
    9792:	d1e9      	bne.n	9768 <_dtoa_r+0xd88>
    9794:	4644      	mov	r4, r8
    9796:	9008      	str	r0, [sp, #32]
    9798:	9109      	str	r1, [sp, #36]	; 0x24
    979a:	9814      	ldr	r0, [sp, #80]	; 0x50
    979c:	9915      	ldr	r1, [sp, #84]	; 0x54
    979e:	2200      	movs	r2, #0
    97a0:	4b6e      	ldr	r3, [pc, #440]	; (995c <_dtoa_r+0xf7c>)
    97a2:	f003 fda7 	bl	d2f4 <__aeabi_dadd>
    97a6:	9a08      	ldr	r2, [sp, #32]
    97a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    97aa:	f7fc f82f 	bl	580c <__aeabi_dcmplt>
    97ae:	2800      	cmp	r0, #0
    97b0:	d067      	beq.n	9882 <_dtoa_r+0xea2>
    97b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    97b4:	1e65      	subs	r5, r4, #1
    97b6:	9303      	str	r3, [sp, #12]
    97b8:	782f      	ldrb	r7, [r5, #0]
    97ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    97bc:	e42e      	b.n	901c <_dtoa_r+0x63c>
    97be:	4643      	mov	r3, r8
    97c0:	46b3      	mov	fp, r6
    97c2:	930c      	str	r3, [sp, #48]	; 0x30
    97c4:	9e04      	ldr	r6, [sp, #16]
    97c6:	9b06      	ldr	r3, [sp, #24]
    97c8:	46a8      	mov	r8, r5
    97ca:	4699      	mov	r9, r3
    97cc:	4655      	mov	r5, sl
    97ce:	46ba      	mov	sl, r7
    97d0:	2e39      	cmp	r6, #57	; 0x39
    97d2:	d04d      	beq.n	9870 <_dtoa_r+0xe90>
    97d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    97d6:	3601      	adds	r6, #1
    97d8:	4647      	mov	r7, r8
    97da:	1c6c      	adds	r4, r5, #1
    97dc:	702e      	strb	r6, [r5, #0]
    97de:	4698      	mov	r8, r3
    97e0:	e5f5      	b.n	93ce <_dtoa_r+0x9ee>
    97e2:	4642      	mov	r2, r8
    97e4:	9b06      	ldr	r3, [sp, #24]
    97e6:	46b3      	mov	fp, r6
    97e8:	46ba      	mov	sl, r7
    97ea:	9e04      	ldr	r6, [sp, #16]
    97ec:	4699      	mov	r9, r3
    97ee:	002f      	movs	r7, r5
    97f0:	4690      	mov	r8, r2
    97f2:	e5d1      	b.n	9398 <_dtoa_r+0x9b8>
    97f4:	9b06      	ldr	r3, [sp, #24]
    97f6:	9a07      	ldr	r2, [sp, #28]
    97f8:	1a9b      	subs	r3, r3, r2
    97fa:	9308      	str	r3, [sp, #32]
    97fc:	2300      	movs	r3, #0
    97fe:	e427      	b.n	9050 <_dtoa_r+0x670>
    9800:	2401      	movs	r4, #1
    9802:	e5c5      	b.n	9390 <_dtoa_r+0x9b0>
    9804:	2336      	movs	r3, #54	; 0x36
    9806:	9a16      	ldr	r2, [sp, #88]	; 0x58
    9808:	464c      	mov	r4, r9
    980a:	1a9b      	subs	r3, r3, r2
    980c:	9a06      	ldr	r2, [sp, #24]
    980e:	9208      	str	r2, [sp, #32]
    9810:	e41e      	b.n	9050 <_dtoa_r+0x670>
    9812:	2302      	movs	r3, #2
    9814:	9e10      	ldr	r6, [sp, #64]	; 0x40
    9816:	9f11      	ldr	r7, [sp, #68]	; 0x44
    9818:	4698      	mov	r8, r3
    981a:	f7ff fa31 	bl	8c80 <_dtoa_r+0x2a0>
    981e:	9b07      	ldr	r3, [sp, #28]
    9820:	2b00      	cmp	r3, #0
    9822:	d100      	bne.n	9826 <_dtoa_r+0xe46>
    9824:	e68e      	b.n	9544 <_dtoa_r+0xb64>
    9826:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    9828:	2c00      	cmp	r4, #0
    982a:	dc00      	bgt.n	982e <_dtoa_r+0xe4e>
    982c:	e712      	b.n	9654 <_dtoa_r+0xc74>
    982e:	9b03      	ldr	r3, [sp, #12]
    9830:	2200      	movs	r2, #0
    9832:	3b01      	subs	r3, #1
    9834:	9313      	str	r3, [sp, #76]	; 0x4c
    9836:	0030      	movs	r0, r6
    9838:	4b47      	ldr	r3, [pc, #284]	; (9958 <_dtoa_r+0xf78>)
    983a:	0039      	movs	r1, r7
    983c:	f7fb f8b0 	bl	49a0 <__aeabi_dmul>
    9840:	0006      	movs	r6, r0
    9842:	4640      	mov	r0, r8
    9844:	000f      	movs	r7, r1
    9846:	3001      	adds	r0, #1
    9848:	f7fb fe74 	bl	5534 <__aeabi_i2d>
    984c:	0032      	movs	r2, r6
    984e:	003b      	movs	r3, r7
    9850:	f7fb f8a6 	bl	49a0 <__aeabi_dmul>
    9854:	2200      	movs	r2, #0
    9856:	4b42      	ldr	r3, [pc, #264]	; (9960 <_dtoa_r+0xf80>)
    9858:	f003 fd4c 	bl	d2f4 <__aeabi_dadd>
    985c:	4a41      	ldr	r2, [pc, #260]	; (9964 <_dtoa_r+0xf84>)
    985e:	000b      	movs	r3, r1
    9860:	4694      	mov	ip, r2
    9862:	4463      	add	r3, ip
    9864:	9008      	str	r0, [sp, #32]
    9866:	9109      	str	r1, [sp, #36]	; 0x24
    9868:	9412      	str	r4, [sp, #72]	; 0x48
    986a:	9309      	str	r3, [sp, #36]	; 0x24
    986c:	f7ff fa30 	bl	8cd0 <_dtoa_r+0x2f0>
    9870:	2339      	movs	r3, #57	; 0x39
    9872:	702b      	strb	r3, [r5, #0]
    9874:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9876:	4647      	mov	r7, r8
    9878:	1c6c      	adds	r4, r5, #1
    987a:	4698      	mov	r8, r3
    987c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    987e:	2339      	movs	r3, #57	; 0x39
    9880:	e5a1      	b.n	93c6 <_dtoa_r+0x9e6>
    9882:	9a14      	ldr	r2, [sp, #80]	; 0x50
    9884:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9886:	2000      	movs	r0, #0
    9888:	4934      	ldr	r1, [pc, #208]	; (995c <_dtoa_r+0xf7c>)
    988a:	f7fb fb09 	bl	4ea0 <__aeabi_dsub>
    988e:	9a08      	ldr	r2, [sp, #32]
    9890:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9892:	f7fb ffcf 	bl	5834 <__aeabi_dcmpgt>
    9896:	2800      	cmp	r0, #0
    9898:	d101      	bne.n	989e <_dtoa_r+0xebe>
    989a:	e6db      	b.n	9654 <_dtoa_r+0xc74>
    989c:	001c      	movs	r4, r3
    989e:	1e63      	subs	r3, r4, #1
    98a0:	781a      	ldrb	r2, [r3, #0]
    98a2:	2a30      	cmp	r2, #48	; 0x30
    98a4:	d0fa      	beq.n	989c <_dtoa_r+0xebc>
    98a6:	f7ff fac8 	bl	8e3a <_dtoa_r+0x45a>
    98aa:	4643      	mov	r3, r8
    98ac:	46b3      	mov	fp, r6
    98ae:	930c      	str	r3, [sp, #48]	; 0x30
    98b0:	9e04      	ldr	r6, [sp, #16]
    98b2:	9b06      	ldr	r3, [sp, #24]
    98b4:	46a8      	mov	r8, r5
    98b6:	4699      	mov	r9, r3
    98b8:	4655      	mov	r5, sl
    98ba:	46ba      	mov	sl, r7
    98bc:	2e39      	cmp	r6, #57	; 0x39
    98be:	d0d7      	beq.n	9870 <_dtoa_r+0xe90>
    98c0:	2c00      	cmp	r4, #0
    98c2:	dd00      	ble.n	98c6 <_dtoa_r+0xee6>
    98c4:	e6b1      	b.n	962a <_dtoa_r+0xc4a>
    98c6:	e6b2      	b.n	962e <_dtoa_r+0xc4e>
    98c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    98ca:	464d      	mov	r5, r9
    98cc:	9203      	str	r2, [sp, #12]
    98ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    98d0:	f7ff fba4 	bl	901c <_dtoa_r+0x63c>
    98d4:	2800      	cmp	r0, #0
    98d6:	d000      	beq.n	98da <_dtoa_r+0xefa>
    98d8:	e6a9      	b.n	962e <_dtoa_r+0xc4e>
    98da:	07f3      	lsls	r3, r6, #31
    98dc:	d400      	bmi.n	98e0 <_dtoa_r+0xf00>
    98de:	e6a6      	b.n	962e <_dtoa_r+0xc4e>
    98e0:	e6a0      	b.n	9624 <_dtoa_r+0xc44>
    98e2:	2300      	movs	r3, #0
    98e4:	4641      	mov	r1, r8
    98e6:	220a      	movs	r2, #10
    98e8:	4650      	mov	r0, sl
    98ea:	f000 fdad 	bl	a448 <__multadd>
    98ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    98f0:	4680      	mov	r8, r0
    98f2:	2b00      	cmp	r3, #0
    98f4:	dd01      	ble.n	98fa <_dtoa_r+0xf1a>
    98f6:	9307      	str	r3, [sp, #28]
    98f8:	e486      	b.n	9208 <_dtoa_r+0x828>
    98fa:	9b22      	ldr	r3, [sp, #136]	; 0x88
    98fc:	2b02      	cmp	r3, #2
    98fe:	dc1f      	bgt.n	9940 <_dtoa_r+0xf60>
    9900:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9902:	9307      	str	r3, [sp, #28]
    9904:	e480      	b.n	9208 <_dtoa_r+0x828>
    9906:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9908:	2b02      	cmp	r3, #2
    990a:	dc19      	bgt.n	9940 <_dtoa_r+0xf60>
    990c:	4649      	mov	r1, r9
    990e:	f7fe ffbd 	bl	888c <quorem>
    9912:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9914:	3030      	adds	r0, #48	; 0x30
    9916:	7018      	strb	r0, [r3, #0]
    9918:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    991a:	0006      	movs	r6, r0
    991c:	9307      	str	r3, [sp, #28]
    991e:	e533      	b.n	9388 <_dtoa_r+0x9a8>
    9920:	2302      	movs	r3, #2
    9922:	4698      	mov	r8, r3
    9924:	f7ff f9ac 	bl	8c80 <_dtoa_r+0x2a0>
    9928:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    992a:	9c14      	ldr	r4, [sp, #80]	; 0x50
    992c:	9303      	str	r3, [sp, #12]
    992e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9930:	001d      	movs	r5, r3
    9932:	f7ff fb73 	bl	901c <_dtoa_r+0x63c>
    9936:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9938:	9c14      	ldr	r4, [sp, #80]	; 0x50
    993a:	9303      	str	r3, [sp, #12]
    993c:	f7ff fa7f 	bl	8e3e <_dtoa_r+0x45e>
    9940:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9942:	9307      	str	r3, [sp, #28]
    9944:	e5d6      	b.n	94f4 <_dtoa_r+0xb14>
    9946:	2b04      	cmp	r3, #4
    9948:	d100      	bne.n	994c <_dtoa_r+0xf6c>
    994a:	e43f      	b.n	91cc <_dtoa_r+0x7ec>
    994c:	233c      	movs	r3, #60	; 0x3c
    994e:	1a18      	subs	r0, r3, r0
    9950:	e4d7      	b.n	9302 <_dtoa_r+0x922>
    9952:	46c0      	nop			; (mov r8, r8)
    9954:	00010748 	.word	0x00010748
    9958:	40240000 	.word	0x40240000
    995c:	3fe00000 	.word	0x3fe00000
    9960:	401c0000 	.word	0x401c0000
    9964:	fcc00000 	.word	0xfcc00000

00009968 <__libc_fini_array>:
    9968:	b570      	push	{r4, r5, r6, lr}
    996a:	4b09      	ldr	r3, [pc, #36]	; (9990 <__libc_fini_array+0x28>)
    996c:	4c09      	ldr	r4, [pc, #36]	; (9994 <__libc_fini_array+0x2c>)
    996e:	1ae4      	subs	r4, r4, r3
    9970:	10a4      	asrs	r4, r4, #2
    9972:	d009      	beq.n	9988 <__libc_fini_array+0x20>
    9974:	4a08      	ldr	r2, [pc, #32]	; (9998 <__libc_fini_array+0x30>)
    9976:	18a5      	adds	r5, r4, r2
    9978:	00ad      	lsls	r5, r5, #2
    997a:	18ed      	adds	r5, r5, r3
    997c:	682b      	ldr	r3, [r5, #0]
    997e:	3c01      	subs	r4, #1
    9980:	4798      	blx	r3
    9982:	3d04      	subs	r5, #4
    9984:	2c00      	cmp	r4, #0
    9986:	d1f9      	bne.n	997c <__libc_fini_array+0x14>
    9988:	f007 f8ee 	bl	10b68 <_fini>
    998c:	bd70      	pop	{r4, r5, r6, pc}
    998e:	46c0      	nop			; (mov r8, r8)
    9990:	00010b74 	.word	0x00010b74
    9994:	00010b78 	.word	0x00010b78
    9998:	3fffffff 	.word	0x3fffffff

0000999c <_malloc_trim_r>:
    999c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    999e:	000c      	movs	r4, r1
    99a0:	0006      	movs	r6, r0
    99a2:	f000 fd0f 	bl	a3c4 <__malloc_lock>
    99a6:	4f20      	ldr	r7, [pc, #128]	; (9a28 <_malloc_trim_r+0x8c>)
    99a8:	68bb      	ldr	r3, [r7, #8]
    99aa:	685d      	ldr	r5, [r3, #4]
    99ac:	2303      	movs	r3, #3
    99ae:	439d      	bics	r5, r3
    99b0:	4b1e      	ldr	r3, [pc, #120]	; (9a2c <_malloc_trim_r+0x90>)
    99b2:	1b2c      	subs	r4, r5, r4
    99b4:	469c      	mov	ip, r3
    99b6:	4464      	add	r4, ip
    99b8:	0b24      	lsrs	r4, r4, #12
    99ba:	4b1d      	ldr	r3, [pc, #116]	; (9a30 <_malloc_trim_r+0x94>)
    99bc:	3c01      	subs	r4, #1
    99be:	0324      	lsls	r4, r4, #12
    99c0:	429c      	cmp	r4, r3
    99c2:	dd07      	ble.n	99d4 <_malloc_trim_r+0x38>
    99c4:	2100      	movs	r1, #0
    99c6:	0030      	movs	r0, r6
    99c8:	f001 f9ba 	bl	ad40 <_sbrk_r>
    99cc:	68bb      	ldr	r3, [r7, #8]
    99ce:	195b      	adds	r3, r3, r5
    99d0:	4298      	cmp	r0, r3
    99d2:	d004      	beq.n	99de <_malloc_trim_r+0x42>
    99d4:	0030      	movs	r0, r6
    99d6:	f000 fcfd 	bl	a3d4 <__malloc_unlock>
    99da:	2000      	movs	r0, #0
    99dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    99de:	4261      	negs	r1, r4
    99e0:	0030      	movs	r0, r6
    99e2:	f001 f9ad 	bl	ad40 <_sbrk_r>
    99e6:	1c43      	adds	r3, r0, #1
    99e8:	d00d      	beq.n	9a06 <_malloc_trim_r+0x6a>
    99ea:	2201      	movs	r2, #1
    99ec:	68bb      	ldr	r3, [r7, #8]
    99ee:	1b2d      	subs	r5, r5, r4
    99f0:	4315      	orrs	r5, r2
    99f2:	605d      	str	r5, [r3, #4]
    99f4:	4b0f      	ldr	r3, [pc, #60]	; (9a34 <_malloc_trim_r+0x98>)
    99f6:	0030      	movs	r0, r6
    99f8:	681a      	ldr	r2, [r3, #0]
    99fa:	1b14      	subs	r4, r2, r4
    99fc:	601c      	str	r4, [r3, #0]
    99fe:	f000 fce9 	bl	a3d4 <__malloc_unlock>
    9a02:	2001      	movs	r0, #1
    9a04:	e7ea      	b.n	99dc <_malloc_trim_r+0x40>
    9a06:	2100      	movs	r1, #0
    9a08:	0030      	movs	r0, r6
    9a0a:	f001 f999 	bl	ad40 <_sbrk_r>
    9a0e:	68ba      	ldr	r2, [r7, #8]
    9a10:	1a83      	subs	r3, r0, r2
    9a12:	2b0f      	cmp	r3, #15
    9a14:	ddde      	ble.n	99d4 <_malloc_trim_r+0x38>
    9a16:	4908      	ldr	r1, [pc, #32]	; (9a38 <_malloc_trim_r+0x9c>)
    9a18:	6809      	ldr	r1, [r1, #0]
    9a1a:	1a40      	subs	r0, r0, r1
    9a1c:	4905      	ldr	r1, [pc, #20]	; (9a34 <_malloc_trim_r+0x98>)
    9a1e:	6008      	str	r0, [r1, #0]
    9a20:	2101      	movs	r1, #1
    9a22:	430b      	orrs	r3, r1
    9a24:	6053      	str	r3, [r2, #4]
    9a26:	e7d5      	b.n	99d4 <_malloc_trim_r+0x38>
    9a28:	20000638 	.word	0x20000638
    9a2c:	00000fef 	.word	0x00000fef
    9a30:	00000fff 	.word	0x00000fff
    9a34:	20000ae4 	.word	0x20000ae4
    9a38:	20000a40 	.word	0x20000a40

00009a3c <_free_r>:
    9a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9a3e:	0004      	movs	r4, r0
    9a40:	1e0d      	subs	r5, r1, #0
    9a42:	d03c      	beq.n	9abe <_free_r+0x82>
    9a44:	f000 fcbe 	bl	a3c4 <__malloc_lock>
    9a48:	0029      	movs	r1, r5
    9a4a:	3908      	subs	r1, #8
    9a4c:	6848      	ldr	r0, [r1, #4]
    9a4e:	2301      	movs	r3, #1
    9a50:	0005      	movs	r5, r0
    9a52:	2603      	movs	r6, #3
    9a54:	439d      	bics	r5, r3
    9a56:	194a      	adds	r2, r1, r5
    9a58:	469c      	mov	ip, r3
    9a5a:	4f61      	ldr	r7, [pc, #388]	; (9be0 <_free_r+0x1a4>)
    9a5c:	6853      	ldr	r3, [r2, #4]
    9a5e:	43b3      	bics	r3, r6
    9a60:	68be      	ldr	r6, [r7, #8]
    9a62:	42b2      	cmp	r2, r6
    9a64:	d056      	beq.n	9b14 <_free_r+0xd8>
    9a66:	4666      	mov	r6, ip
    9a68:	6053      	str	r3, [r2, #4]
    9a6a:	4206      	tst	r6, r0
    9a6c:	d10a      	bne.n	9a84 <_free_r+0x48>
    9a6e:	003e      	movs	r6, r7
    9a70:	6808      	ldr	r0, [r1, #0]
    9a72:	3608      	adds	r6, #8
    9a74:	1a09      	subs	r1, r1, r0
    9a76:	182d      	adds	r5, r5, r0
    9a78:	6888      	ldr	r0, [r1, #8]
    9a7a:	42b0      	cmp	r0, r6
    9a7c:	d065      	beq.n	9b4a <_free_r+0x10e>
    9a7e:	68ce      	ldr	r6, [r1, #12]
    9a80:	60c6      	str	r6, [r0, #12]
    9a82:	60b0      	str	r0, [r6, #8]
    9a84:	2001      	movs	r0, #1
    9a86:	18d6      	adds	r6, r2, r3
    9a88:	6876      	ldr	r6, [r6, #4]
    9a8a:	4206      	tst	r6, r0
    9a8c:	d033      	beq.n	9af6 <_free_r+0xba>
    9a8e:	4b55      	ldr	r3, [pc, #340]	; (9be4 <_free_r+0x1a8>)
    9a90:	4328      	orrs	r0, r5
    9a92:	6048      	str	r0, [r1, #4]
    9a94:	514d      	str	r5, [r1, r5]
    9a96:	429d      	cmp	r5, r3
    9a98:	d812      	bhi.n	9ac0 <_free_r+0x84>
    9a9a:	08ed      	lsrs	r5, r5, #3
    9a9c:	3bff      	subs	r3, #255	; 0xff
    9a9e:	10aa      	asrs	r2, r5, #2
    9aa0:	3bff      	subs	r3, #255	; 0xff
    9aa2:	4093      	lsls	r3, r2
    9aa4:	687a      	ldr	r2, [r7, #4]
    9aa6:	00ed      	lsls	r5, r5, #3
    9aa8:	4313      	orrs	r3, r2
    9aaa:	607b      	str	r3, [r7, #4]
    9aac:	19ef      	adds	r7, r5, r7
    9aae:	68bb      	ldr	r3, [r7, #8]
    9ab0:	60cf      	str	r7, [r1, #12]
    9ab2:	608b      	str	r3, [r1, #8]
    9ab4:	60b9      	str	r1, [r7, #8]
    9ab6:	60d9      	str	r1, [r3, #12]
    9ab8:	0020      	movs	r0, r4
    9aba:	f000 fc8b 	bl	a3d4 <__malloc_unlock>
    9abe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9ac0:	0a68      	lsrs	r0, r5, #9
    9ac2:	2804      	cmp	r0, #4
    9ac4:	d850      	bhi.n	9b68 <_free_r+0x12c>
    9ac6:	09a8      	lsrs	r0, r5, #6
    9ac8:	0002      	movs	r2, r0
    9aca:	3039      	adds	r0, #57	; 0x39
    9acc:	3238      	adds	r2, #56	; 0x38
    9ace:	00c0      	lsls	r0, r0, #3
    9ad0:	1838      	adds	r0, r7, r0
    9ad2:	3808      	subs	r0, #8
    9ad4:	6883      	ldr	r3, [r0, #8]
    9ad6:	2603      	movs	r6, #3
    9ad8:	4298      	cmp	r0, r3
    9ada:	d04c      	beq.n	9b76 <_free_r+0x13a>
    9adc:	685a      	ldr	r2, [r3, #4]
    9ade:	43b2      	bics	r2, r6
    9ae0:	4295      	cmp	r5, r2
    9ae2:	d230      	bcs.n	9b46 <_free_r+0x10a>
    9ae4:	689b      	ldr	r3, [r3, #8]
    9ae6:	4298      	cmp	r0, r3
    9ae8:	d1f8      	bne.n	9adc <_free_r+0xa0>
    9aea:	68c3      	ldr	r3, [r0, #12]
    9aec:	60cb      	str	r3, [r1, #12]
    9aee:	6088      	str	r0, [r1, #8]
    9af0:	6099      	str	r1, [r3, #8]
    9af2:	60c1      	str	r1, [r0, #12]
    9af4:	e7e0      	b.n	9ab8 <_free_r+0x7c>
    9af6:	18ed      	adds	r5, r5, r3
    9af8:	4e3b      	ldr	r6, [pc, #236]	; (9be8 <_free_r+0x1ac>)
    9afa:	6893      	ldr	r3, [r2, #8]
    9afc:	42b3      	cmp	r3, r6
    9afe:	d042      	beq.n	9b86 <_free_r+0x14a>
    9b00:	68d2      	ldr	r2, [r2, #12]
    9b02:	4328      	orrs	r0, r5
    9b04:	60da      	str	r2, [r3, #12]
    9b06:	6093      	str	r3, [r2, #8]
    9b08:	4b36      	ldr	r3, [pc, #216]	; (9be4 <_free_r+0x1a8>)
    9b0a:	6048      	str	r0, [r1, #4]
    9b0c:	514d      	str	r5, [r1, r5]
    9b0e:	429d      	cmp	r5, r3
    9b10:	d8d6      	bhi.n	9ac0 <_free_r+0x84>
    9b12:	e7c2      	b.n	9a9a <_free_r+0x5e>
    9b14:	4662      	mov	r2, ip
    9b16:	18eb      	adds	r3, r5, r3
    9b18:	4202      	tst	r2, r0
    9b1a:	d106      	bne.n	9b2a <_free_r+0xee>
    9b1c:	680a      	ldr	r2, [r1, #0]
    9b1e:	1a89      	subs	r1, r1, r2
    9b20:	6888      	ldr	r0, [r1, #8]
    9b22:	189b      	adds	r3, r3, r2
    9b24:	68ca      	ldr	r2, [r1, #12]
    9b26:	60c2      	str	r2, [r0, #12]
    9b28:	6090      	str	r0, [r2, #8]
    9b2a:	2201      	movs	r2, #1
    9b2c:	431a      	orrs	r2, r3
    9b2e:	604a      	str	r2, [r1, #4]
    9b30:	4a2e      	ldr	r2, [pc, #184]	; (9bec <_free_r+0x1b0>)
    9b32:	60b9      	str	r1, [r7, #8]
    9b34:	6812      	ldr	r2, [r2, #0]
    9b36:	4293      	cmp	r3, r2
    9b38:	d3be      	bcc.n	9ab8 <_free_r+0x7c>
    9b3a:	4b2d      	ldr	r3, [pc, #180]	; (9bf0 <_free_r+0x1b4>)
    9b3c:	0020      	movs	r0, r4
    9b3e:	6819      	ldr	r1, [r3, #0]
    9b40:	f7ff ff2c 	bl	999c <_malloc_trim_r>
    9b44:	e7b8      	b.n	9ab8 <_free_r+0x7c>
    9b46:	0018      	movs	r0, r3
    9b48:	e7cf      	b.n	9aea <_free_r+0xae>
    9b4a:	4666      	mov	r6, ip
    9b4c:	18d0      	adds	r0, r2, r3
    9b4e:	6840      	ldr	r0, [r0, #4]
    9b50:	4230      	tst	r0, r6
    9b52:	d13f      	bne.n	9bd4 <_free_r+0x198>
    9b54:	6890      	ldr	r0, [r2, #8]
    9b56:	195d      	adds	r5, r3, r5
    9b58:	68d3      	ldr	r3, [r2, #12]
    9b5a:	60c3      	str	r3, [r0, #12]
    9b5c:	6098      	str	r0, [r3, #8]
    9b5e:	4663      	mov	r3, ip
    9b60:	432b      	orrs	r3, r5
    9b62:	604b      	str	r3, [r1, #4]
    9b64:	514d      	str	r5, [r1, r5]
    9b66:	e7a7      	b.n	9ab8 <_free_r+0x7c>
    9b68:	2814      	cmp	r0, #20
    9b6a:	d814      	bhi.n	9b96 <_free_r+0x15a>
    9b6c:	0002      	movs	r2, r0
    9b6e:	305c      	adds	r0, #92	; 0x5c
    9b70:	325b      	adds	r2, #91	; 0x5b
    9b72:	00c0      	lsls	r0, r0, #3
    9b74:	e7ac      	b.n	9ad0 <_free_r+0x94>
    9b76:	2301      	movs	r3, #1
    9b78:	1092      	asrs	r2, r2, #2
    9b7a:	4093      	lsls	r3, r2
    9b7c:	687a      	ldr	r2, [r7, #4]
    9b7e:	4313      	orrs	r3, r2
    9b80:	607b      	str	r3, [r7, #4]
    9b82:	0003      	movs	r3, r0
    9b84:	e7b2      	b.n	9aec <_free_r+0xb0>
    9b86:	4328      	orrs	r0, r5
    9b88:	60d9      	str	r1, [r3, #12]
    9b8a:	6099      	str	r1, [r3, #8]
    9b8c:	60cb      	str	r3, [r1, #12]
    9b8e:	608b      	str	r3, [r1, #8]
    9b90:	6048      	str	r0, [r1, #4]
    9b92:	514d      	str	r5, [r1, r5]
    9b94:	e790      	b.n	9ab8 <_free_r+0x7c>
    9b96:	2854      	cmp	r0, #84	; 0x54
    9b98:	d805      	bhi.n	9ba6 <_free_r+0x16a>
    9b9a:	0b28      	lsrs	r0, r5, #12
    9b9c:	0002      	movs	r2, r0
    9b9e:	306f      	adds	r0, #111	; 0x6f
    9ba0:	326e      	adds	r2, #110	; 0x6e
    9ba2:	00c0      	lsls	r0, r0, #3
    9ba4:	e794      	b.n	9ad0 <_free_r+0x94>
    9ba6:	22aa      	movs	r2, #170	; 0xaa
    9ba8:	0052      	lsls	r2, r2, #1
    9baa:	4290      	cmp	r0, r2
    9bac:	d805      	bhi.n	9bba <_free_r+0x17e>
    9bae:	0be8      	lsrs	r0, r5, #15
    9bb0:	0002      	movs	r2, r0
    9bb2:	3078      	adds	r0, #120	; 0x78
    9bb4:	3277      	adds	r2, #119	; 0x77
    9bb6:	00c0      	lsls	r0, r0, #3
    9bb8:	e78a      	b.n	9ad0 <_free_r+0x94>
    9bba:	4a0e      	ldr	r2, [pc, #56]	; (9bf4 <_free_r+0x1b8>)
    9bbc:	4290      	cmp	r0, r2
    9bbe:	d805      	bhi.n	9bcc <_free_r+0x190>
    9bc0:	0ca8      	lsrs	r0, r5, #18
    9bc2:	0002      	movs	r2, r0
    9bc4:	307d      	adds	r0, #125	; 0x7d
    9bc6:	327c      	adds	r2, #124	; 0x7c
    9bc8:	00c0      	lsls	r0, r0, #3
    9bca:	e781      	b.n	9ad0 <_free_r+0x94>
    9bcc:	20fe      	movs	r0, #254	; 0xfe
    9bce:	227e      	movs	r2, #126	; 0x7e
    9bd0:	0080      	lsls	r0, r0, #2
    9bd2:	e77d      	b.n	9ad0 <_free_r+0x94>
    9bd4:	4663      	mov	r3, ip
    9bd6:	432b      	orrs	r3, r5
    9bd8:	604b      	str	r3, [r1, #4]
    9bda:	6015      	str	r5, [r2, #0]
    9bdc:	e76c      	b.n	9ab8 <_free_r+0x7c>
    9bde:	46c0      	nop			; (mov r8, r8)
    9be0:	20000638 	.word	0x20000638
    9be4:	000001ff 	.word	0x000001ff
    9be8:	20000640 	.word	0x20000640
    9bec:	20000a44 	.word	0x20000a44
    9bf0:	20000b14 	.word	0x20000b14
    9bf4:	00000554 	.word	0x00000554

00009bf8 <iswspace>:
    9bf8:	b510      	push	{r4, lr}
    9bfa:	0004      	movs	r4, r0
    9bfc:	2000      	movs	r0, #0
    9bfe:	2cff      	cmp	r4, #255	; 0xff
    9c00:	d805      	bhi.n	9c0e <iswspace+0x16>
    9c02:	f000 f819 	bl	9c38 <__locale_ctype_ptr>
    9c06:	1904      	adds	r4, r0, r4
    9c08:	2008      	movs	r0, #8
    9c0a:	7863      	ldrb	r3, [r4, #1]
    9c0c:	4018      	ands	r0, r3
    9c0e:	bd10      	pop	{r4, pc}

00009c10 <__locale_mb_cur_max>:
    9c10:	4b05      	ldr	r3, [pc, #20]	; (9c28 <__locale_mb_cur_max+0x18>)
    9c12:	681b      	ldr	r3, [r3, #0]
    9c14:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9c16:	2b00      	cmp	r3, #0
    9c18:	d003      	beq.n	9c22 <__locale_mb_cur_max+0x12>
    9c1a:	2294      	movs	r2, #148	; 0x94
    9c1c:	0052      	lsls	r2, r2, #1
    9c1e:	5c98      	ldrb	r0, [r3, r2]
    9c20:	4770      	bx	lr
    9c22:	4b02      	ldr	r3, [pc, #8]	; (9c2c <__locale_mb_cur_max+0x1c>)
    9c24:	e7f9      	b.n	9c1a <__locale_mb_cur_max+0xa>
    9c26:	46c0      	nop			; (mov r8, r8)
    9c28:	20000098 	.word	0x20000098
    9c2c:	200004cc 	.word	0x200004cc

00009c30 <__locale_ctype_ptr_l>:
    9c30:	23ec      	movs	r3, #236	; 0xec
    9c32:	58c0      	ldr	r0, [r0, r3]
    9c34:	4770      	bx	lr
    9c36:	46c0      	nop			; (mov r8, r8)

00009c38 <__locale_ctype_ptr>:
    9c38:	4b04      	ldr	r3, [pc, #16]	; (9c4c <__locale_ctype_ptr+0x14>)
    9c3a:	681b      	ldr	r3, [r3, #0]
    9c3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9c3e:	2b00      	cmp	r3, #0
    9c40:	d002      	beq.n	9c48 <__locale_ctype_ptr+0x10>
    9c42:	22ec      	movs	r2, #236	; 0xec
    9c44:	5898      	ldr	r0, [r3, r2]
    9c46:	4770      	bx	lr
    9c48:	4b01      	ldr	r3, [pc, #4]	; (9c50 <__locale_ctype_ptr+0x18>)
    9c4a:	e7fa      	b.n	9c42 <__locale_ctype_ptr+0xa>
    9c4c:	20000098 	.word	0x20000098
    9c50:	200004cc 	.word	0x200004cc

00009c54 <__localeconv_l>:
    9c54:	30f0      	adds	r0, #240	; 0xf0
    9c56:	4770      	bx	lr

00009c58 <_localeconv_r>:
    9c58:	4b04      	ldr	r3, [pc, #16]	; (9c6c <_localeconv_r+0x14>)
    9c5a:	681b      	ldr	r3, [r3, #0]
    9c5c:	6b58      	ldr	r0, [r3, #52]	; 0x34
    9c5e:	2800      	cmp	r0, #0
    9c60:	d001      	beq.n	9c66 <_localeconv_r+0xe>
    9c62:	30f0      	adds	r0, #240	; 0xf0
    9c64:	4770      	bx	lr
    9c66:	4802      	ldr	r0, [pc, #8]	; (9c70 <_localeconv_r+0x18>)
    9c68:	e7fb      	b.n	9c62 <_localeconv_r+0xa>
    9c6a:	46c0      	nop			; (mov r8, r8)
    9c6c:	20000098 	.word	0x20000098
    9c70:	200004cc 	.word	0x200004cc

00009c74 <__retarget_lock_acquire_recursive>:
    9c74:	4770      	bx	lr
    9c76:	46c0      	nop			; (mov r8, r8)

00009c78 <__retarget_lock_release_recursive>:
    9c78:	4770      	bx	lr
    9c7a:	46c0      	nop			; (mov r8, r8)

00009c7c <_malloc_r>:
    9c7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    9c7e:	4657      	mov	r7, sl
    9c80:	4645      	mov	r5, r8
    9c82:	46de      	mov	lr, fp
    9c84:	464e      	mov	r6, r9
    9c86:	b5e0      	push	{r5, r6, r7, lr}
    9c88:	000d      	movs	r5, r1
    9c8a:	350b      	adds	r5, #11
    9c8c:	b083      	sub	sp, #12
    9c8e:	0007      	movs	r7, r0
    9c90:	2d16      	cmp	r5, #22
    9c92:	d800      	bhi.n	9c96 <_malloc_r+0x1a>
    9c94:	e09f      	b.n	9dd6 <_malloc_r+0x15a>
    9c96:	2307      	movs	r3, #7
    9c98:	439d      	bics	r5, r3
    9c9a:	d500      	bpl.n	9c9e <_malloc_r+0x22>
    9c9c:	e0c4      	b.n	9e28 <_malloc_r+0x1ac>
    9c9e:	42a9      	cmp	r1, r5
    9ca0:	d900      	bls.n	9ca4 <_malloc_r+0x28>
    9ca2:	e0c1      	b.n	9e28 <_malloc_r+0x1ac>
    9ca4:	f000 fb8e 	bl	a3c4 <__malloc_lock>
    9ca8:	23f8      	movs	r3, #248	; 0xf8
    9caa:	33ff      	adds	r3, #255	; 0xff
    9cac:	429d      	cmp	r5, r3
    9cae:	d800      	bhi.n	9cb2 <_malloc_r+0x36>
    9cb0:	e28f      	b.n	a1d2 <_malloc_r+0x556>
    9cb2:	0a68      	lsrs	r0, r5, #9
    9cb4:	d100      	bne.n	9cb8 <_malloc_r+0x3c>
    9cb6:	e0bb      	b.n	9e30 <_malloc_r+0x1b4>
    9cb8:	2804      	cmp	r0, #4
    9cba:	d900      	bls.n	9cbe <_malloc_r+0x42>
    9cbc:	e162      	b.n	9f84 <_malloc_r+0x308>
    9cbe:	2338      	movs	r3, #56	; 0x38
    9cc0:	4698      	mov	r8, r3
    9cc2:	09a8      	lsrs	r0, r5, #6
    9cc4:	4480      	add	r8, r0
    9cc6:	3039      	adds	r0, #57	; 0x39
    9cc8:	00c1      	lsls	r1, r0, #3
    9cca:	4ed2      	ldr	r6, [pc, #840]	; (a014 <_malloc_r+0x398>)
    9ccc:	1871      	adds	r1, r6, r1
    9cce:	3908      	subs	r1, #8
    9cd0:	68cc      	ldr	r4, [r1, #12]
    9cd2:	42a1      	cmp	r1, r4
    9cd4:	d019      	beq.n	9d0a <_malloc_r+0x8e>
    9cd6:	2303      	movs	r3, #3
    9cd8:	6862      	ldr	r2, [r4, #4]
    9cda:	439a      	bics	r2, r3
    9cdc:	0013      	movs	r3, r2
    9cde:	1b52      	subs	r2, r2, r5
    9ce0:	2a0f      	cmp	r2, #15
    9ce2:	dd00      	ble.n	9ce6 <_malloc_r+0x6a>
    9ce4:	e0aa      	b.n	9e3c <_malloc_r+0x1c0>
    9ce6:	2a00      	cmp	r2, #0
    9ce8:	db00      	blt.n	9cec <_malloc_r+0x70>
    9cea:	e088      	b.n	9dfe <_malloc_r+0x182>
    9cec:	2303      	movs	r3, #3
    9cee:	469c      	mov	ip, r3
    9cf0:	e008      	b.n	9d04 <_malloc_r+0x88>
    9cf2:	4662      	mov	r2, ip
    9cf4:	6863      	ldr	r3, [r4, #4]
    9cf6:	4393      	bics	r3, r2
    9cf8:	1b5a      	subs	r2, r3, r5
    9cfa:	2a0f      	cmp	r2, #15
    9cfc:	dd00      	ble.n	9d00 <_malloc_r+0x84>
    9cfe:	e09d      	b.n	9e3c <_malloc_r+0x1c0>
    9d00:	2a00      	cmp	r2, #0
    9d02:	da7c      	bge.n	9dfe <_malloc_r+0x182>
    9d04:	68e4      	ldr	r4, [r4, #12]
    9d06:	42a1      	cmp	r1, r4
    9d08:	d1f3      	bne.n	9cf2 <_malloc_r+0x76>
    9d0a:	0032      	movs	r2, r6
    9d0c:	6934      	ldr	r4, [r6, #16]
    9d0e:	3208      	adds	r2, #8
    9d10:	4294      	cmp	r4, r2
    9d12:	d100      	bne.n	9d16 <_malloc_r+0x9a>
    9d14:	e190      	b.n	a038 <_malloc_r+0x3bc>
    9d16:	2303      	movs	r3, #3
    9d18:	6861      	ldr	r1, [r4, #4]
    9d1a:	4399      	bics	r1, r3
    9d1c:	4689      	mov	r9, r1
    9d1e:	1b49      	subs	r1, r1, r5
    9d20:	290f      	cmp	r1, #15
    9d22:	dd00      	ble.n	9d26 <_malloc_r+0xaa>
    9d24:	e162      	b.n	9fec <_malloc_r+0x370>
    9d26:	6172      	str	r2, [r6, #20]
    9d28:	6132      	str	r2, [r6, #16]
    9d2a:	2900      	cmp	r1, #0
    9d2c:	db00      	blt.n	9d30 <_malloc_r+0xb4>
    9d2e:	e087      	b.n	9e40 <_malloc_r+0x1c4>
    9d30:	4ab9      	ldr	r2, [pc, #740]	; (a018 <_malloc_r+0x39c>)
    9d32:	464b      	mov	r3, r9
    9d34:	4591      	cmp	r9, r2
    9d36:	d900      	bls.n	9d3a <_malloc_r+0xbe>
    9d38:	e130      	b.n	9f9c <_malloc_r+0x320>
    9d3a:	08db      	lsrs	r3, r3, #3
    9d3c:	3aff      	subs	r2, #255	; 0xff
    9d3e:	1099      	asrs	r1, r3, #2
    9d40:	3aff      	subs	r2, #255	; 0xff
    9d42:	408a      	lsls	r2, r1
    9d44:	00db      	lsls	r3, r3, #3
    9d46:	6871      	ldr	r1, [r6, #4]
    9d48:	199b      	adds	r3, r3, r6
    9d4a:	430a      	orrs	r2, r1
    9d4c:	6899      	ldr	r1, [r3, #8]
    9d4e:	6072      	str	r2, [r6, #4]
    9d50:	60e3      	str	r3, [r4, #12]
    9d52:	60a1      	str	r1, [r4, #8]
    9d54:	609c      	str	r4, [r3, #8]
    9d56:	0013      	movs	r3, r2
    9d58:	60cc      	str	r4, [r1, #12]
    9d5a:	2101      	movs	r1, #1
    9d5c:	1082      	asrs	r2, r0, #2
    9d5e:	4091      	lsls	r1, r2
    9d60:	4299      	cmp	r1, r3
    9d62:	d86f      	bhi.n	9e44 <_malloc_r+0x1c8>
    9d64:	420b      	tst	r3, r1
    9d66:	d105      	bne.n	9d74 <_malloc_r+0xf8>
    9d68:	2203      	movs	r2, #3
    9d6a:	4390      	bics	r0, r2
    9d6c:	0049      	lsls	r1, r1, #1
    9d6e:	3004      	adds	r0, #4
    9d70:	420b      	tst	r3, r1
    9d72:	d0fb      	beq.n	9d6c <_malloc_r+0xf0>
    9d74:	2303      	movs	r3, #3
    9d76:	4698      	mov	r8, r3
    9d78:	00c3      	lsls	r3, r0, #3
    9d7a:	4699      	mov	r9, r3
    9d7c:	44b1      	add	r9, r6
    9d7e:	46cc      	mov	ip, r9
    9d80:	4682      	mov	sl, r0
    9d82:	4663      	mov	r3, ip
    9d84:	68dc      	ldr	r4, [r3, #12]
    9d86:	45a4      	cmp	ip, r4
    9d88:	d107      	bne.n	9d9a <_malloc_r+0x11e>
    9d8a:	e157      	b.n	a03c <_malloc_r+0x3c0>
    9d8c:	2a00      	cmp	r2, #0
    9d8e:	db00      	blt.n	9d92 <_malloc_r+0x116>
    9d90:	e166      	b.n	a060 <_malloc_r+0x3e4>
    9d92:	68e4      	ldr	r4, [r4, #12]
    9d94:	45a4      	cmp	ip, r4
    9d96:	d100      	bne.n	9d9a <_malloc_r+0x11e>
    9d98:	e150      	b.n	a03c <_malloc_r+0x3c0>
    9d9a:	4642      	mov	r2, r8
    9d9c:	6863      	ldr	r3, [r4, #4]
    9d9e:	4393      	bics	r3, r2
    9da0:	1b5a      	subs	r2, r3, r5
    9da2:	2a0f      	cmp	r2, #15
    9da4:	ddf2      	ble.n	9d8c <_malloc_r+0x110>
    9da6:	2001      	movs	r0, #1
    9da8:	4680      	mov	r8, r0
    9daa:	1961      	adds	r1, r4, r5
    9dac:	4305      	orrs	r5, r0
    9dae:	6065      	str	r5, [r4, #4]
    9db0:	68a0      	ldr	r0, [r4, #8]
    9db2:	68e5      	ldr	r5, [r4, #12]
    9db4:	3608      	adds	r6, #8
    9db6:	60c5      	str	r5, [r0, #12]
    9db8:	60a8      	str	r0, [r5, #8]
    9dba:	4640      	mov	r0, r8
    9dbc:	60f1      	str	r1, [r6, #12]
    9dbe:	60b1      	str	r1, [r6, #8]
    9dc0:	4310      	orrs	r0, r2
    9dc2:	6048      	str	r0, [r1, #4]
    9dc4:	60ce      	str	r6, [r1, #12]
    9dc6:	608e      	str	r6, [r1, #8]
    9dc8:	0038      	movs	r0, r7
    9dca:	50e2      	str	r2, [r4, r3]
    9dcc:	f000 fb02 	bl	a3d4 <__malloc_unlock>
    9dd0:	0020      	movs	r0, r4
    9dd2:	3008      	adds	r0, #8
    9dd4:	e021      	b.n	9e1a <_malloc_r+0x19e>
    9dd6:	2910      	cmp	r1, #16
    9dd8:	d826      	bhi.n	9e28 <_malloc_r+0x1ac>
    9dda:	0038      	movs	r0, r7
    9ddc:	f000 faf2 	bl	a3c4 <__malloc_lock>
    9de0:	2510      	movs	r5, #16
    9de2:	2318      	movs	r3, #24
    9de4:	2002      	movs	r0, #2
    9de6:	4e8b      	ldr	r6, [pc, #556]	; (a014 <_malloc_r+0x398>)
    9de8:	18f3      	adds	r3, r6, r3
    9dea:	001a      	movs	r2, r3
    9dec:	685c      	ldr	r4, [r3, #4]
    9dee:	3a08      	subs	r2, #8
    9df0:	4294      	cmp	r4, r2
    9df2:	d100      	bne.n	9df6 <_malloc_r+0x17a>
    9df4:	e12e      	b.n	a054 <_malloc_r+0x3d8>
    9df6:	2303      	movs	r3, #3
    9df8:	6862      	ldr	r2, [r4, #4]
    9dfa:	439a      	bics	r2, r3
    9dfc:	0013      	movs	r3, r2
    9dfe:	68e2      	ldr	r2, [r4, #12]
    9e00:	68a1      	ldr	r1, [r4, #8]
    9e02:	60ca      	str	r2, [r1, #12]
    9e04:	6091      	str	r1, [r2, #8]
    9e06:	2201      	movs	r2, #1
    9e08:	18e3      	adds	r3, r4, r3
    9e0a:	6859      	ldr	r1, [r3, #4]
    9e0c:	0038      	movs	r0, r7
    9e0e:	430a      	orrs	r2, r1
    9e10:	605a      	str	r2, [r3, #4]
    9e12:	f000 fadf 	bl	a3d4 <__malloc_unlock>
    9e16:	0020      	movs	r0, r4
    9e18:	3008      	adds	r0, #8
    9e1a:	b003      	add	sp, #12
    9e1c:	bc3c      	pop	{r2, r3, r4, r5}
    9e1e:	4690      	mov	r8, r2
    9e20:	4699      	mov	r9, r3
    9e22:	46a2      	mov	sl, r4
    9e24:	46ab      	mov	fp, r5
    9e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9e28:	230c      	movs	r3, #12
    9e2a:	2000      	movs	r0, #0
    9e2c:	603b      	str	r3, [r7, #0]
    9e2e:	e7f4      	b.n	9e1a <_malloc_r+0x19e>
    9e30:	2180      	movs	r1, #128	; 0x80
    9e32:	233f      	movs	r3, #63	; 0x3f
    9e34:	2040      	movs	r0, #64	; 0x40
    9e36:	0089      	lsls	r1, r1, #2
    9e38:	4698      	mov	r8, r3
    9e3a:	e746      	b.n	9cca <_malloc_r+0x4e>
    9e3c:	4640      	mov	r0, r8
    9e3e:	e764      	b.n	9d0a <_malloc_r+0x8e>
    9e40:	464b      	mov	r3, r9
    9e42:	e7e0      	b.n	9e06 <_malloc_r+0x18a>
    9e44:	2303      	movs	r3, #3
    9e46:	68b4      	ldr	r4, [r6, #8]
    9e48:	6862      	ldr	r2, [r4, #4]
    9e4a:	439a      	bics	r2, r3
    9e4c:	4690      	mov	r8, r2
    9e4e:	42aa      	cmp	r2, r5
    9e50:	d303      	bcc.n	9e5a <_malloc_r+0x1de>
    9e52:	1b53      	subs	r3, r2, r5
    9e54:	2b0f      	cmp	r3, #15
    9e56:	dd00      	ble.n	9e5a <_malloc_r+0x1de>
    9e58:	e086      	b.n	9f68 <_malloc_r+0x2ec>
    9e5a:	0023      	movs	r3, r4
    9e5c:	4443      	add	r3, r8
    9e5e:	4a6f      	ldr	r2, [pc, #444]	; (a01c <_malloc_r+0x3a0>)
    9e60:	9301      	str	r3, [sp, #4]
    9e62:	4b6f      	ldr	r3, [pc, #444]	; (a020 <_malloc_r+0x3a4>)
    9e64:	4693      	mov	fp, r2
    9e66:	681b      	ldr	r3, [r3, #0]
    9e68:	6812      	ldr	r2, [r2, #0]
    9e6a:	18eb      	adds	r3, r5, r3
    9e6c:	3201      	adds	r2, #1
    9e6e:	d100      	bne.n	9e72 <_malloc_r+0x1f6>
    9e70:	e168      	b.n	a144 <_malloc_r+0x4c8>
    9e72:	4a6c      	ldr	r2, [pc, #432]	; (a024 <_malloc_r+0x3a8>)
    9e74:	4694      	mov	ip, r2
    9e76:	4463      	add	r3, ip
    9e78:	0b1b      	lsrs	r3, r3, #12
    9e7a:	031b      	lsls	r3, r3, #12
    9e7c:	9300      	str	r3, [sp, #0]
    9e7e:	9900      	ldr	r1, [sp, #0]
    9e80:	0038      	movs	r0, r7
    9e82:	f000 ff5d 	bl	ad40 <_sbrk_r>
    9e86:	0003      	movs	r3, r0
    9e88:	4681      	mov	r9, r0
    9e8a:	3301      	adds	r3, #1
    9e8c:	d061      	beq.n	9f52 <_malloc_r+0x2d6>
    9e8e:	9b01      	ldr	r3, [sp, #4]
    9e90:	4283      	cmp	r3, r0
    9e92:	d900      	bls.n	9e96 <_malloc_r+0x21a>
    9e94:	e0ff      	b.n	a096 <_malloc_r+0x41a>
    9e96:	4b64      	ldr	r3, [pc, #400]	; (a028 <_malloc_r+0x3ac>)
    9e98:	9a00      	ldr	r2, [sp, #0]
    9e9a:	469a      	mov	sl, r3
    9e9c:	681b      	ldr	r3, [r3, #0]
    9e9e:	469c      	mov	ip, r3
    9ea0:	4653      	mov	r3, sl
    9ea2:	4462      	add	r2, ip
    9ea4:	601a      	str	r2, [r3, #0]
    9ea6:	9b01      	ldr	r3, [sp, #4]
    9ea8:	0011      	movs	r1, r2
    9eaa:	4283      	cmp	r3, r0
    9eac:	d100      	bne.n	9eb0 <_malloc_r+0x234>
    9eae:	e155      	b.n	a15c <_malloc_r+0x4e0>
    9eb0:	465b      	mov	r3, fp
    9eb2:	681b      	ldr	r3, [r3, #0]
    9eb4:	3301      	adds	r3, #1
    9eb6:	d100      	bne.n	9eba <_malloc_r+0x23e>
    9eb8:	e16c      	b.n	a194 <_malloc_r+0x518>
    9eba:	464b      	mov	r3, r9
    9ebc:	9a01      	ldr	r2, [sp, #4]
    9ebe:	1a9b      	subs	r3, r3, r2
    9ec0:	1859      	adds	r1, r3, r1
    9ec2:	4653      	mov	r3, sl
    9ec4:	6019      	str	r1, [r3, #0]
    9ec6:	2307      	movs	r3, #7
    9ec8:	464a      	mov	r2, r9
    9eca:	4013      	ands	r3, r2
    9ecc:	d100      	bne.n	9ed0 <_malloc_r+0x254>
    9ece:	e124      	b.n	a11a <_malloc_r+0x49e>
    9ed0:	2108      	movs	r1, #8
    9ed2:	4689      	mov	r9, r1
    9ed4:	4955      	ldr	r1, [pc, #340]	; (a02c <_malloc_r+0x3b0>)
    9ed6:	1ad2      	subs	r2, r2, r3
    9ed8:	4491      	add	r9, r2
    9eda:	1acb      	subs	r3, r1, r3
    9edc:	9a00      	ldr	r2, [sp, #0]
    9ede:	0038      	movs	r0, r7
    9ee0:	444a      	add	r2, r9
    9ee2:	0511      	lsls	r1, r2, #20
    9ee4:	0d09      	lsrs	r1, r1, #20
    9ee6:	1a5b      	subs	r3, r3, r1
    9ee8:	0019      	movs	r1, r3
    9eea:	469b      	mov	fp, r3
    9eec:	f000 ff28 	bl	ad40 <_sbrk_r>
    9ef0:	1c43      	adds	r3, r0, #1
    9ef2:	d100      	bne.n	9ef6 <_malloc_r+0x27a>
    9ef4:	e142      	b.n	a17c <_malloc_r+0x500>
    9ef6:	464b      	mov	r3, r9
    9ef8:	1ac0      	subs	r0, r0, r3
    9efa:	2301      	movs	r3, #1
    9efc:	4458      	add	r0, fp
    9efe:	4318      	orrs	r0, r3
    9f00:	4653      	mov	r3, sl
    9f02:	681b      	ldr	r3, [r3, #0]
    9f04:	445b      	add	r3, fp
    9f06:	0019      	movs	r1, r3
    9f08:	4653      	mov	r3, sl
    9f0a:	6019      	str	r1, [r3, #0]
    9f0c:	464b      	mov	r3, r9
    9f0e:	60b3      	str	r3, [r6, #8]
    9f10:	6058      	str	r0, [r3, #4]
    9f12:	42b4      	cmp	r4, r6
    9f14:	d013      	beq.n	9f3e <_malloc_r+0x2c2>
    9f16:	4643      	mov	r3, r8
    9f18:	2b0f      	cmp	r3, #15
    9f1a:	d800      	bhi.n	9f1e <_malloc_r+0x2a2>
    9f1c:	e0e8      	b.n	a0f0 <_malloc_r+0x474>
    9f1e:	4643      	mov	r3, r8
    9f20:	2207      	movs	r2, #7
    9f22:	6860      	ldr	r0, [r4, #4]
    9f24:	3b0c      	subs	r3, #12
    9f26:	4393      	bics	r3, r2
    9f28:	3a06      	subs	r2, #6
    9f2a:	4002      	ands	r2, r0
    9f2c:	2005      	movs	r0, #5
    9f2e:	431a      	orrs	r2, r3
    9f30:	6062      	str	r2, [r4, #4]
    9f32:	18e2      	adds	r2, r4, r3
    9f34:	6050      	str	r0, [r2, #4]
    9f36:	6090      	str	r0, [r2, #8]
    9f38:	2b0f      	cmp	r3, #15
    9f3a:	d900      	bls.n	9f3e <_malloc_r+0x2c2>
    9f3c:	e122      	b.n	a184 <_malloc_r+0x508>
    9f3e:	4b3c      	ldr	r3, [pc, #240]	; (a030 <_malloc_r+0x3b4>)
    9f40:	681a      	ldr	r2, [r3, #0]
    9f42:	4291      	cmp	r1, r2
    9f44:	d900      	bls.n	9f48 <_malloc_r+0x2cc>
    9f46:	6019      	str	r1, [r3, #0]
    9f48:	4b3a      	ldr	r3, [pc, #232]	; (a034 <_malloc_r+0x3b8>)
    9f4a:	681a      	ldr	r2, [r3, #0]
    9f4c:	4291      	cmp	r1, r2
    9f4e:	d900      	bls.n	9f52 <_malloc_r+0x2d6>
    9f50:	6019      	str	r1, [r3, #0]
    9f52:	2303      	movs	r3, #3
    9f54:	68b4      	ldr	r4, [r6, #8]
    9f56:	6862      	ldr	r2, [r4, #4]
    9f58:	439a      	bics	r2, r3
    9f5a:	1b53      	subs	r3, r2, r5
    9f5c:	4295      	cmp	r5, r2
    9f5e:	d900      	bls.n	9f62 <_malloc_r+0x2e6>
    9f60:	e0c9      	b.n	a0f6 <_malloc_r+0x47a>
    9f62:	2b0f      	cmp	r3, #15
    9f64:	dc00      	bgt.n	9f68 <_malloc_r+0x2ec>
    9f66:	e0c6      	b.n	a0f6 <_malloc_r+0x47a>
    9f68:	2201      	movs	r2, #1
    9f6a:	0029      	movs	r1, r5
    9f6c:	4313      	orrs	r3, r2
    9f6e:	4311      	orrs	r1, r2
    9f70:	1965      	adds	r5, r4, r5
    9f72:	6061      	str	r1, [r4, #4]
    9f74:	0038      	movs	r0, r7
    9f76:	60b5      	str	r5, [r6, #8]
    9f78:	606b      	str	r3, [r5, #4]
    9f7a:	f000 fa2b 	bl	a3d4 <__malloc_unlock>
    9f7e:	0020      	movs	r0, r4
    9f80:	3008      	adds	r0, #8
    9f82:	e74a      	b.n	9e1a <_malloc_r+0x19e>
    9f84:	2814      	cmp	r0, #20
    9f86:	d97a      	bls.n	a07e <_malloc_r+0x402>
    9f88:	2854      	cmp	r0, #84	; 0x54
    9f8a:	d900      	bls.n	9f8e <_malloc_r+0x312>
    9f8c:	e0ba      	b.n	a104 <_malloc_r+0x488>
    9f8e:	236e      	movs	r3, #110	; 0x6e
    9f90:	4698      	mov	r8, r3
    9f92:	0b28      	lsrs	r0, r5, #12
    9f94:	4480      	add	r8, r0
    9f96:	306f      	adds	r0, #111	; 0x6f
    9f98:	00c1      	lsls	r1, r0, #3
    9f9a:	e696      	b.n	9cca <_malloc_r+0x4e>
    9f9c:	0a5a      	lsrs	r2, r3, #9
    9f9e:	2a04      	cmp	r2, #4
    9fa0:	d973      	bls.n	a08a <_malloc_r+0x40e>
    9fa2:	2a14      	cmp	r2, #20
    9fa4:	d900      	bls.n	9fa8 <_malloc_r+0x32c>
    9fa6:	e0d0      	b.n	a14a <_malloc_r+0x4ce>
    9fa8:	0011      	movs	r1, r2
    9faa:	325c      	adds	r2, #92	; 0x5c
    9fac:	315b      	adds	r1, #91	; 0x5b
    9fae:	00d2      	lsls	r2, r2, #3
    9fb0:	2308      	movs	r3, #8
    9fb2:	425b      	negs	r3, r3
    9fb4:	469c      	mov	ip, r3
    9fb6:	18b2      	adds	r2, r6, r2
    9fb8:	4494      	add	ip, r2
    9fba:	4663      	mov	r3, ip
    9fbc:	689a      	ldr	r2, [r3, #8]
    9fbe:	2303      	movs	r3, #3
    9fc0:	4698      	mov	r8, r3
    9fc2:	4594      	cmp	ip, r2
    9fc4:	d100      	bne.n	9fc8 <_malloc_r+0x34c>
    9fc6:	e0ab      	b.n	a120 <_malloc_r+0x4a4>
    9fc8:	4643      	mov	r3, r8
    9fca:	6851      	ldr	r1, [r2, #4]
    9fcc:	4399      	bics	r1, r3
    9fce:	4589      	cmp	r9, r1
    9fd0:	d300      	bcc.n	9fd4 <_malloc_r+0x358>
    9fd2:	e095      	b.n	a100 <_malloc_r+0x484>
    9fd4:	6892      	ldr	r2, [r2, #8]
    9fd6:	4594      	cmp	ip, r2
    9fd8:	d1f6      	bne.n	9fc8 <_malloc_r+0x34c>
    9fda:	4663      	mov	r3, ip
    9fdc:	68da      	ldr	r2, [r3, #12]
    9fde:	6873      	ldr	r3, [r6, #4]
    9fe0:	4661      	mov	r1, ip
    9fe2:	60e2      	str	r2, [r4, #12]
    9fe4:	60a1      	str	r1, [r4, #8]
    9fe6:	6094      	str	r4, [r2, #8]
    9fe8:	60cc      	str	r4, [r1, #12]
    9fea:	e6b6      	b.n	9d5a <_malloc_r+0xde>
    9fec:	2301      	movs	r3, #1
    9fee:	1960      	adds	r0, r4, r5
    9ff0:	431d      	orrs	r5, r3
    9ff2:	6065      	str	r5, [r4, #4]
    9ff4:	6170      	str	r0, [r6, #20]
    9ff6:	6130      	str	r0, [r6, #16]
    9ff8:	60c2      	str	r2, [r0, #12]
    9ffa:	6082      	str	r2, [r0, #8]
    9ffc:	001a      	movs	r2, r3
    9ffe:	464b      	mov	r3, r9
    a000:	430a      	orrs	r2, r1
    a002:	6042      	str	r2, [r0, #4]
    a004:	0038      	movs	r0, r7
    a006:	50e1      	str	r1, [r4, r3]
    a008:	f000 f9e4 	bl	a3d4 <__malloc_unlock>
    a00c:	0020      	movs	r0, r4
    a00e:	3008      	adds	r0, #8
    a010:	e703      	b.n	9e1a <_malloc_r+0x19e>
    a012:	46c0      	nop			; (mov r8, r8)
    a014:	20000638 	.word	0x20000638
    a018:	000001ff 	.word	0x000001ff
    a01c:	20000a40 	.word	0x20000a40
    a020:	20000b14 	.word	0x20000b14
    a024:	0000100f 	.word	0x0000100f
    a028:	20000ae4 	.word	0x20000ae4
    a02c:	00001008 	.word	0x00001008
    a030:	20000b0c 	.word	0x20000b0c
    a034:	20000b10 	.word	0x20000b10
    a038:	6873      	ldr	r3, [r6, #4]
    a03a:	e68e      	b.n	9d5a <_malloc_r+0xde>
    a03c:	2308      	movs	r3, #8
    a03e:	469b      	mov	fp, r3
    a040:	3b07      	subs	r3, #7
    a042:	44dc      	add	ip, fp
    a044:	469b      	mov	fp, r3
    a046:	44da      	add	sl, fp
    a048:	4643      	mov	r3, r8
    a04a:	4652      	mov	r2, sl
    a04c:	4213      	tst	r3, r2
    a04e:	d000      	beq.n	a052 <_malloc_r+0x3d6>
    a050:	e697      	b.n	9d82 <_malloc_r+0x106>
    a052:	e037      	b.n	a0c4 <_malloc_r+0x448>
    a054:	68dc      	ldr	r4, [r3, #12]
    a056:	3002      	adds	r0, #2
    a058:	42a3      	cmp	r3, r4
    a05a:	d100      	bne.n	a05e <_malloc_r+0x3e2>
    a05c:	e655      	b.n	9d0a <_malloc_r+0x8e>
    a05e:	e6ca      	b.n	9df6 <_malloc_r+0x17a>
    a060:	2201      	movs	r2, #1
    a062:	18e3      	adds	r3, r4, r3
    a064:	6859      	ldr	r1, [r3, #4]
    a066:	0038      	movs	r0, r7
    a068:	430a      	orrs	r2, r1
    a06a:	605a      	str	r2, [r3, #4]
    a06c:	68e3      	ldr	r3, [r4, #12]
    a06e:	68a2      	ldr	r2, [r4, #8]
    a070:	60d3      	str	r3, [r2, #12]
    a072:	609a      	str	r2, [r3, #8]
    a074:	f000 f9ae 	bl	a3d4 <__malloc_unlock>
    a078:	0020      	movs	r0, r4
    a07a:	3008      	adds	r0, #8
    a07c:	e6cd      	b.n	9e1a <_malloc_r+0x19e>
    a07e:	235b      	movs	r3, #91	; 0x5b
    a080:	4698      	mov	r8, r3
    a082:	4480      	add	r8, r0
    a084:	305c      	adds	r0, #92	; 0x5c
    a086:	00c1      	lsls	r1, r0, #3
    a088:	e61f      	b.n	9cca <_malloc_r+0x4e>
    a08a:	099a      	lsrs	r2, r3, #6
    a08c:	0011      	movs	r1, r2
    a08e:	3239      	adds	r2, #57	; 0x39
    a090:	3138      	adds	r1, #56	; 0x38
    a092:	00d2      	lsls	r2, r2, #3
    a094:	e78c      	b.n	9fb0 <_malloc_r+0x334>
    a096:	42b4      	cmp	r4, r6
    a098:	d000      	beq.n	a09c <_malloc_r+0x420>
    a09a:	e75a      	b.n	9f52 <_malloc_r+0x2d6>
    a09c:	4b4f      	ldr	r3, [pc, #316]	; (a1dc <_malloc_r+0x560>)
    a09e:	9a00      	ldr	r2, [sp, #0]
    a0a0:	469a      	mov	sl, r3
    a0a2:	681b      	ldr	r3, [r3, #0]
    a0a4:	469c      	mov	ip, r3
    a0a6:	4653      	mov	r3, sl
    a0a8:	4462      	add	r2, ip
    a0aa:	0011      	movs	r1, r2
    a0ac:	601a      	str	r2, [r3, #0]
    a0ae:	e6ff      	b.n	9eb0 <_malloc_r+0x234>
    a0b0:	2308      	movs	r3, #8
    a0b2:	425b      	negs	r3, r3
    a0b4:	469c      	mov	ip, r3
    a0b6:	44e1      	add	r9, ip
    a0b8:	464b      	mov	r3, r9
    a0ba:	689b      	ldr	r3, [r3, #8]
    a0bc:	3801      	subs	r0, #1
    a0be:	4599      	cmp	r9, r3
    a0c0:	d000      	beq.n	a0c4 <_malloc_r+0x448>
    a0c2:	e084      	b.n	a1ce <_malloc_r+0x552>
    a0c4:	4643      	mov	r3, r8
    a0c6:	4203      	tst	r3, r0
    a0c8:	d1f2      	bne.n	a0b0 <_malloc_r+0x434>
    a0ca:	6873      	ldr	r3, [r6, #4]
    a0cc:	438b      	bics	r3, r1
    a0ce:	6073      	str	r3, [r6, #4]
    a0d0:	0049      	lsls	r1, r1, #1
    a0d2:	4299      	cmp	r1, r3
    a0d4:	d900      	bls.n	a0d8 <_malloc_r+0x45c>
    a0d6:	e6b5      	b.n	9e44 <_malloc_r+0x1c8>
    a0d8:	2900      	cmp	r1, #0
    a0da:	d100      	bne.n	a0de <_malloc_r+0x462>
    a0dc:	e6b2      	b.n	9e44 <_malloc_r+0x1c8>
    a0de:	4650      	mov	r0, sl
    a0e0:	420b      	tst	r3, r1
    a0e2:	d000      	beq.n	a0e6 <_malloc_r+0x46a>
    a0e4:	e648      	b.n	9d78 <_malloc_r+0xfc>
    a0e6:	0049      	lsls	r1, r1, #1
    a0e8:	3004      	adds	r0, #4
    a0ea:	420b      	tst	r3, r1
    a0ec:	d0fb      	beq.n	a0e6 <_malloc_r+0x46a>
    a0ee:	e643      	b.n	9d78 <_malloc_r+0xfc>
    a0f0:	2301      	movs	r3, #1
    a0f2:	464a      	mov	r2, r9
    a0f4:	6053      	str	r3, [r2, #4]
    a0f6:	0038      	movs	r0, r7
    a0f8:	f000 f96c 	bl	a3d4 <__malloc_unlock>
    a0fc:	2000      	movs	r0, #0
    a0fe:	e68c      	b.n	9e1a <_malloc_r+0x19e>
    a100:	4694      	mov	ip, r2
    a102:	e76a      	b.n	9fda <_malloc_r+0x35e>
    a104:	23aa      	movs	r3, #170	; 0xaa
    a106:	005b      	lsls	r3, r3, #1
    a108:	4298      	cmp	r0, r3
    a10a:	d811      	bhi.n	a130 <_malloc_r+0x4b4>
    a10c:	3bdd      	subs	r3, #221	; 0xdd
    a10e:	4698      	mov	r8, r3
    a110:	0be8      	lsrs	r0, r5, #15
    a112:	4480      	add	r8, r0
    a114:	3078      	adds	r0, #120	; 0x78
    a116:	00c1      	lsls	r1, r0, #3
    a118:	e5d7      	b.n	9cca <_malloc_r+0x4e>
    a11a:	2380      	movs	r3, #128	; 0x80
    a11c:	015b      	lsls	r3, r3, #5
    a11e:	e6dd      	b.n	9edc <_malloc_r+0x260>
    a120:	1089      	asrs	r1, r1, #2
    a122:	3b02      	subs	r3, #2
    a124:	408b      	lsls	r3, r1
    a126:	6872      	ldr	r2, [r6, #4]
    a128:	4313      	orrs	r3, r2
    a12a:	6073      	str	r3, [r6, #4]
    a12c:	4662      	mov	r2, ip
    a12e:	e757      	b.n	9fe0 <_malloc_r+0x364>
    a130:	4b2b      	ldr	r3, [pc, #172]	; (a1e0 <_malloc_r+0x564>)
    a132:	4298      	cmp	r0, r3
    a134:	d81c      	bhi.n	a170 <_malloc_r+0x4f4>
    a136:	237c      	movs	r3, #124	; 0x7c
    a138:	4698      	mov	r8, r3
    a13a:	0ca8      	lsrs	r0, r5, #18
    a13c:	4480      	add	r8, r0
    a13e:	307d      	adds	r0, #125	; 0x7d
    a140:	00c1      	lsls	r1, r0, #3
    a142:	e5c2      	b.n	9cca <_malloc_r+0x4e>
    a144:	3310      	adds	r3, #16
    a146:	9300      	str	r3, [sp, #0]
    a148:	e699      	b.n	9e7e <_malloc_r+0x202>
    a14a:	2a54      	cmp	r2, #84	; 0x54
    a14c:	d826      	bhi.n	a19c <_malloc_r+0x520>
    a14e:	464b      	mov	r3, r9
    a150:	0b1a      	lsrs	r2, r3, #12
    a152:	0011      	movs	r1, r2
    a154:	326f      	adds	r2, #111	; 0x6f
    a156:	316e      	adds	r1, #110	; 0x6e
    a158:	00d2      	lsls	r2, r2, #3
    a15a:	e729      	b.n	9fb0 <_malloc_r+0x334>
    a15c:	051b      	lsls	r3, r3, #20
    a15e:	d000      	beq.n	a162 <_malloc_r+0x4e6>
    a160:	e6a6      	b.n	9eb0 <_malloc_r+0x234>
    a162:	2001      	movs	r0, #1
    a164:	9b00      	ldr	r3, [sp, #0]
    a166:	68b2      	ldr	r2, [r6, #8]
    a168:	4443      	add	r3, r8
    a16a:	4303      	orrs	r3, r0
    a16c:	6053      	str	r3, [r2, #4]
    a16e:	e6e6      	b.n	9f3e <_malloc_r+0x2c2>
    a170:	21fe      	movs	r1, #254	; 0xfe
    a172:	237e      	movs	r3, #126	; 0x7e
    a174:	207f      	movs	r0, #127	; 0x7f
    a176:	0089      	lsls	r1, r1, #2
    a178:	4698      	mov	r8, r3
    a17a:	e5a6      	b.n	9cca <_malloc_r+0x4e>
    a17c:	2300      	movs	r3, #0
    a17e:	2001      	movs	r0, #1
    a180:	469b      	mov	fp, r3
    a182:	e6bd      	b.n	9f00 <_malloc_r+0x284>
    a184:	0021      	movs	r1, r4
    a186:	0038      	movs	r0, r7
    a188:	3108      	adds	r1, #8
    a18a:	f7ff fc57 	bl	9a3c <_free_r>
    a18e:	4653      	mov	r3, sl
    a190:	6819      	ldr	r1, [r3, #0]
    a192:	e6d4      	b.n	9f3e <_malloc_r+0x2c2>
    a194:	465b      	mov	r3, fp
    a196:	464a      	mov	r2, r9
    a198:	601a      	str	r2, [r3, #0]
    a19a:	e694      	b.n	9ec6 <_malloc_r+0x24a>
    a19c:	21aa      	movs	r1, #170	; 0xaa
    a19e:	0049      	lsls	r1, r1, #1
    a1a0:	428a      	cmp	r2, r1
    a1a2:	d806      	bhi.n	a1b2 <_malloc_r+0x536>
    a1a4:	464b      	mov	r3, r9
    a1a6:	0bda      	lsrs	r2, r3, #15
    a1a8:	0011      	movs	r1, r2
    a1aa:	3278      	adds	r2, #120	; 0x78
    a1ac:	3177      	adds	r1, #119	; 0x77
    a1ae:	00d2      	lsls	r2, r2, #3
    a1b0:	e6fe      	b.n	9fb0 <_malloc_r+0x334>
    a1b2:	490b      	ldr	r1, [pc, #44]	; (a1e0 <_malloc_r+0x564>)
    a1b4:	428a      	cmp	r2, r1
    a1b6:	d806      	bhi.n	a1c6 <_malloc_r+0x54a>
    a1b8:	464b      	mov	r3, r9
    a1ba:	0c9a      	lsrs	r2, r3, #18
    a1bc:	0011      	movs	r1, r2
    a1be:	327d      	adds	r2, #125	; 0x7d
    a1c0:	317c      	adds	r1, #124	; 0x7c
    a1c2:	00d2      	lsls	r2, r2, #3
    a1c4:	e6f4      	b.n	9fb0 <_malloc_r+0x334>
    a1c6:	22fe      	movs	r2, #254	; 0xfe
    a1c8:	217e      	movs	r1, #126	; 0x7e
    a1ca:	0092      	lsls	r2, r2, #2
    a1cc:	e6f0      	b.n	9fb0 <_malloc_r+0x334>
    a1ce:	6873      	ldr	r3, [r6, #4]
    a1d0:	e77e      	b.n	a0d0 <_malloc_r+0x454>
    a1d2:	002b      	movs	r3, r5
    a1d4:	08e8      	lsrs	r0, r5, #3
    a1d6:	3308      	adds	r3, #8
    a1d8:	e605      	b.n	9de6 <_malloc_r+0x16a>
    a1da:	46c0      	nop			; (mov r8, r8)
    a1dc:	20000ae4 	.word	0x20000ae4
    a1e0:	00000554 	.word	0x00000554

0000a1e4 <_mbrtowc_r>:
    a1e4:	b530      	push	{r4, r5, lr}
    a1e6:	0004      	movs	r4, r0
    a1e8:	b083      	sub	sp, #12
    a1ea:	2a00      	cmp	r2, #0
    a1ec:	d013      	beq.n	a216 <_mbrtowc_r+0x32>
    a1ee:	4813      	ldr	r0, [pc, #76]	; (a23c <_mbrtowc_r+0x58>)
    a1f0:	6800      	ldr	r0, [r0, #0]
    a1f2:	6b40      	ldr	r0, [r0, #52]	; 0x34
    a1f4:	2800      	cmp	r0, #0
    a1f6:	d01d      	beq.n	a234 <_mbrtowc_r+0x50>
    a1f8:	9d06      	ldr	r5, [sp, #24]
    a1fa:	9500      	str	r5, [sp, #0]
    a1fc:	25e4      	movs	r5, #228	; 0xe4
    a1fe:	5945      	ldr	r5, [r0, r5]
    a200:	0020      	movs	r0, r4
    a202:	47a8      	blx	r5
    a204:	1c43      	adds	r3, r0, #1
    a206:	d104      	bne.n	a212 <_mbrtowc_r+0x2e>
    a208:	2300      	movs	r3, #0
    a20a:	9a06      	ldr	r2, [sp, #24]
    a20c:	6013      	str	r3, [r2, #0]
    a20e:	338a      	adds	r3, #138	; 0x8a
    a210:	6023      	str	r3, [r4, #0]
    a212:	b003      	add	sp, #12
    a214:	bd30      	pop	{r4, r5, pc}
    a216:	4b09      	ldr	r3, [pc, #36]	; (a23c <_mbrtowc_r+0x58>)
    a218:	681b      	ldr	r3, [r3, #0]
    a21a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    a21c:	2b00      	cmp	r3, #0
    a21e:	d00b      	beq.n	a238 <_mbrtowc_r+0x54>
    a220:	9a06      	ldr	r2, [sp, #24]
    a222:	2100      	movs	r1, #0
    a224:	9200      	str	r2, [sp, #0]
    a226:	22e4      	movs	r2, #228	; 0xe4
    a228:	0020      	movs	r0, r4
    a22a:	589d      	ldr	r5, [r3, r2]
    a22c:	2301      	movs	r3, #1
    a22e:	4a04      	ldr	r2, [pc, #16]	; (a240 <_mbrtowc_r+0x5c>)
    a230:	47a8      	blx	r5
    a232:	e7e7      	b.n	a204 <_mbrtowc_r+0x20>
    a234:	4803      	ldr	r0, [pc, #12]	; (a244 <_mbrtowc_r+0x60>)
    a236:	e7df      	b.n	a1f8 <_mbrtowc_r+0x14>
    a238:	4b02      	ldr	r3, [pc, #8]	; (a244 <_mbrtowc_r+0x60>)
    a23a:	e7f1      	b.n	a220 <_mbrtowc_r+0x3c>
    a23c:	20000098 	.word	0x20000098
    a240:	00010234 	.word	0x00010234
    a244:	200004cc 	.word	0x200004cc

0000a248 <__ascii_mbtowc>:
    a248:	b082      	sub	sp, #8
    a24a:	2900      	cmp	r1, #0
    a24c:	d00a      	beq.n	a264 <__ascii_mbtowc+0x1c>
    a24e:	2a00      	cmp	r2, #0
    a250:	d00b      	beq.n	a26a <__ascii_mbtowc+0x22>
    a252:	2b00      	cmp	r3, #0
    a254:	d00b      	beq.n	a26e <__ascii_mbtowc+0x26>
    a256:	7813      	ldrb	r3, [r2, #0]
    a258:	600b      	str	r3, [r1, #0]
    a25a:	7810      	ldrb	r0, [r2, #0]
    a25c:	1e43      	subs	r3, r0, #1
    a25e:	4198      	sbcs	r0, r3
    a260:	b002      	add	sp, #8
    a262:	4770      	bx	lr
    a264:	a901      	add	r1, sp, #4
    a266:	2a00      	cmp	r2, #0
    a268:	d1f3      	bne.n	a252 <__ascii_mbtowc+0xa>
    a26a:	2000      	movs	r0, #0
    a26c:	e7f8      	b.n	a260 <__ascii_mbtowc+0x18>
    a26e:	2002      	movs	r0, #2
    a270:	4240      	negs	r0, r0
    a272:	e7f5      	b.n	a260 <__ascii_mbtowc+0x18>

0000a274 <memchr>:
    a274:	b570      	push	{r4, r5, r6, lr}
    a276:	b2cd      	uxtb	r5, r1
    a278:	0783      	lsls	r3, r0, #30
    a27a:	d034      	beq.n	a2e6 <memchr+0x72>
    a27c:	1e54      	subs	r4, r2, #1
    a27e:	2a00      	cmp	r2, #0
    a280:	d01b      	beq.n	a2ba <memchr+0x46>
    a282:	7803      	ldrb	r3, [r0, #0]
    a284:	42ab      	cmp	r3, r5
    a286:	d019      	beq.n	a2bc <memchr+0x48>
    a288:	2203      	movs	r2, #3
    a28a:	e004      	b.n	a296 <memchr+0x22>
    a28c:	3c01      	subs	r4, #1
    a28e:	d314      	bcc.n	a2ba <memchr+0x46>
    a290:	7803      	ldrb	r3, [r0, #0]
    a292:	42ab      	cmp	r3, r5
    a294:	d012      	beq.n	a2bc <memchr+0x48>
    a296:	3001      	adds	r0, #1
    a298:	4210      	tst	r0, r2
    a29a:	d1f7      	bne.n	a28c <memchr+0x18>
    a29c:	2c03      	cmp	r4, #3
    a29e:	d80e      	bhi.n	a2be <memchr+0x4a>
    a2a0:	2c00      	cmp	r4, #0
    a2a2:	d00a      	beq.n	a2ba <memchr+0x46>
    a2a4:	7803      	ldrb	r3, [r0, #0]
    a2a6:	42ab      	cmp	r3, r5
    a2a8:	d008      	beq.n	a2bc <memchr+0x48>
    a2aa:	1904      	adds	r4, r0, r4
    a2ac:	e002      	b.n	a2b4 <memchr+0x40>
    a2ae:	7803      	ldrb	r3, [r0, #0]
    a2b0:	42ab      	cmp	r3, r5
    a2b2:	d003      	beq.n	a2bc <memchr+0x48>
    a2b4:	3001      	adds	r0, #1
    a2b6:	4284      	cmp	r4, r0
    a2b8:	d1f9      	bne.n	a2ae <memchr+0x3a>
    a2ba:	2000      	movs	r0, #0
    a2bc:	bd70      	pop	{r4, r5, r6, pc}
    a2be:	22ff      	movs	r2, #255	; 0xff
    a2c0:	060b      	lsls	r3, r1, #24
    a2c2:	0c1b      	lsrs	r3, r3, #16
    a2c4:	4011      	ands	r1, r2
    a2c6:	4319      	orrs	r1, r3
    a2c8:	040b      	lsls	r3, r1, #16
    a2ca:	4e08      	ldr	r6, [pc, #32]	; (a2ec <memchr+0x78>)
    a2cc:	4319      	orrs	r1, r3
    a2ce:	6803      	ldr	r3, [r0, #0]
    a2d0:	4a07      	ldr	r2, [pc, #28]	; (a2f0 <memchr+0x7c>)
    a2d2:	404b      	eors	r3, r1
    a2d4:	189a      	adds	r2, r3, r2
    a2d6:	439a      	bics	r2, r3
    a2d8:	4232      	tst	r2, r6
    a2da:	d1e3      	bne.n	a2a4 <memchr+0x30>
    a2dc:	3c04      	subs	r4, #4
    a2de:	3004      	adds	r0, #4
    a2e0:	2c03      	cmp	r4, #3
    a2e2:	d8f4      	bhi.n	a2ce <memchr+0x5a>
    a2e4:	e7dc      	b.n	a2a0 <memchr+0x2c>
    a2e6:	0014      	movs	r4, r2
    a2e8:	e7d8      	b.n	a29c <memchr+0x28>
    a2ea:	46c0      	nop			; (mov r8, r8)
    a2ec:	80808080 	.word	0x80808080
    a2f0:	fefefeff 	.word	0xfefefeff

0000a2f4 <memcmp>:
    a2f4:	b510      	push	{r4, lr}
    a2f6:	2a03      	cmp	r2, #3
    a2f8:	d91c      	bls.n	a334 <memcmp+0x40>
    a2fa:	0003      	movs	r3, r0
    a2fc:	430b      	orrs	r3, r1
    a2fe:	079b      	lsls	r3, r3, #30
    a300:	d00f      	beq.n	a322 <memcmp+0x2e>
    a302:	7803      	ldrb	r3, [r0, #0]
    a304:	780c      	ldrb	r4, [r1, #0]
    a306:	1882      	adds	r2, r0, r2
    a308:	42a3      	cmp	r3, r4
    a30a:	d004      	beq.n	a316 <memcmp+0x22>
    a30c:	e015      	b.n	a33a <memcmp+0x46>
    a30e:	7803      	ldrb	r3, [r0, #0]
    a310:	780c      	ldrb	r4, [r1, #0]
    a312:	42a3      	cmp	r3, r4
    a314:	d111      	bne.n	a33a <memcmp+0x46>
    a316:	3001      	adds	r0, #1
    a318:	3101      	adds	r1, #1
    a31a:	4282      	cmp	r2, r0
    a31c:	d1f7      	bne.n	a30e <memcmp+0x1a>
    a31e:	2000      	movs	r0, #0
    a320:	bd10      	pop	{r4, pc}
    a322:	6803      	ldr	r3, [r0, #0]
    a324:	680c      	ldr	r4, [r1, #0]
    a326:	42a3      	cmp	r3, r4
    a328:	d1eb      	bne.n	a302 <memcmp+0xe>
    a32a:	3a04      	subs	r2, #4
    a32c:	3004      	adds	r0, #4
    a32e:	3104      	adds	r1, #4
    a330:	2a03      	cmp	r2, #3
    a332:	d8f6      	bhi.n	a322 <memcmp+0x2e>
    a334:	2a00      	cmp	r2, #0
    a336:	d1e4      	bne.n	a302 <memcmp+0xe>
    a338:	e7f1      	b.n	a31e <memcmp+0x2a>
    a33a:	1b18      	subs	r0, r3, r4
    a33c:	e7f0      	b.n	a320 <memcmp+0x2c>
    a33e:	46c0      	nop			; (mov r8, r8)

0000a340 <memcpy>:
    a340:	b5f0      	push	{r4, r5, r6, r7, lr}
    a342:	0005      	movs	r5, r0
    a344:	2a0f      	cmp	r2, #15
    a346:	d92f      	bls.n	a3a8 <memcpy+0x68>
    a348:	000b      	movs	r3, r1
    a34a:	4303      	orrs	r3, r0
    a34c:	079b      	lsls	r3, r3, #30
    a34e:	d134      	bne.n	a3ba <memcpy+0x7a>
    a350:	0016      	movs	r6, r2
    a352:	000c      	movs	r4, r1
    a354:	0003      	movs	r3, r0
    a356:	3e10      	subs	r6, #16
    a358:	0935      	lsrs	r5, r6, #4
    a35a:	3501      	adds	r5, #1
    a35c:	012d      	lsls	r5, r5, #4
    a35e:	1945      	adds	r5, r0, r5
    a360:	6827      	ldr	r7, [r4, #0]
    a362:	601f      	str	r7, [r3, #0]
    a364:	6867      	ldr	r7, [r4, #4]
    a366:	605f      	str	r7, [r3, #4]
    a368:	68a7      	ldr	r7, [r4, #8]
    a36a:	609f      	str	r7, [r3, #8]
    a36c:	68e7      	ldr	r7, [r4, #12]
    a36e:	3410      	adds	r4, #16
    a370:	60df      	str	r7, [r3, #12]
    a372:	3310      	adds	r3, #16
    a374:	429d      	cmp	r5, r3
    a376:	d1f3      	bne.n	a360 <memcpy+0x20>
    a378:	230f      	movs	r3, #15
    a37a:	439e      	bics	r6, r3
    a37c:	3610      	adds	r6, #16
    a37e:	1985      	adds	r5, r0, r6
    a380:	1989      	adds	r1, r1, r6
    a382:	4013      	ands	r3, r2
    a384:	2b03      	cmp	r3, #3
    a386:	d91a      	bls.n	a3be <memcpy+0x7e>
    a388:	1f1e      	subs	r6, r3, #4
    a38a:	2300      	movs	r3, #0
    a38c:	08b4      	lsrs	r4, r6, #2
    a38e:	3401      	adds	r4, #1
    a390:	00a4      	lsls	r4, r4, #2
    a392:	58cf      	ldr	r7, [r1, r3]
    a394:	50ef      	str	r7, [r5, r3]
    a396:	3304      	adds	r3, #4
    a398:	42a3      	cmp	r3, r4
    a39a:	d1fa      	bne.n	a392 <memcpy+0x52>
    a39c:	2403      	movs	r4, #3
    a39e:	43a6      	bics	r6, r4
    a3a0:	1d33      	adds	r3, r6, #4
    a3a2:	4022      	ands	r2, r4
    a3a4:	18c9      	adds	r1, r1, r3
    a3a6:	18ed      	adds	r5, r5, r3
    a3a8:	2a00      	cmp	r2, #0
    a3aa:	d005      	beq.n	a3b8 <memcpy+0x78>
    a3ac:	2300      	movs	r3, #0
    a3ae:	5ccc      	ldrb	r4, [r1, r3]
    a3b0:	54ec      	strb	r4, [r5, r3]
    a3b2:	3301      	adds	r3, #1
    a3b4:	4293      	cmp	r3, r2
    a3b6:	d1fa      	bne.n	a3ae <memcpy+0x6e>
    a3b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a3ba:	0005      	movs	r5, r0
    a3bc:	e7f6      	b.n	a3ac <memcpy+0x6c>
    a3be:	001a      	movs	r2, r3
    a3c0:	e7f2      	b.n	a3a8 <memcpy+0x68>
    a3c2:	46c0      	nop			; (mov r8, r8)

0000a3c4 <__malloc_lock>:
    a3c4:	b510      	push	{r4, lr}
    a3c6:	4802      	ldr	r0, [pc, #8]	; (a3d0 <__malloc_lock+0xc>)
    a3c8:	f7ff fc54 	bl	9c74 <__retarget_lock_acquire_recursive>
    a3cc:	bd10      	pop	{r4, pc}
    a3ce:	46c0      	nop			; (mov r8, r8)
    a3d0:	2000156c 	.word	0x2000156c

0000a3d4 <__malloc_unlock>:
    a3d4:	b510      	push	{r4, lr}
    a3d6:	4802      	ldr	r0, [pc, #8]	; (a3e0 <__malloc_unlock+0xc>)
    a3d8:	f7ff fc4e 	bl	9c78 <__retarget_lock_release_recursive>
    a3dc:	bd10      	pop	{r4, pc}
    a3de:	46c0      	nop			; (mov r8, r8)
    a3e0:	2000156c 	.word	0x2000156c

0000a3e4 <_Balloc>:
    a3e4:	b570      	push	{r4, r5, r6, lr}
    a3e6:	0004      	movs	r4, r0
    a3e8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    a3ea:	000d      	movs	r5, r1
    a3ec:	2800      	cmp	r0, #0
    a3ee:	d00a      	beq.n	a406 <_Balloc+0x22>
    a3f0:	00ab      	lsls	r3, r5, #2
    a3f2:	18c3      	adds	r3, r0, r3
    a3f4:	6818      	ldr	r0, [r3, #0]
    a3f6:	2800      	cmp	r0, #0
    a3f8:	d00f      	beq.n	a41a <_Balloc+0x36>
    a3fa:	6802      	ldr	r2, [r0, #0]
    a3fc:	601a      	str	r2, [r3, #0]
    a3fe:	2300      	movs	r3, #0
    a400:	6103      	str	r3, [r0, #16]
    a402:	60c3      	str	r3, [r0, #12]
    a404:	bd70      	pop	{r4, r5, r6, pc}
    a406:	2221      	movs	r2, #33	; 0x21
    a408:	2104      	movs	r1, #4
    a40a:	0020      	movs	r0, r4
    a40c:	f002 f91a 	bl	c644 <_calloc_r>
    a410:	64e0      	str	r0, [r4, #76]	; 0x4c
    a412:	2800      	cmp	r0, #0
    a414:	d1ec      	bne.n	a3f0 <_Balloc+0xc>
    a416:	2000      	movs	r0, #0
    a418:	e7f4      	b.n	a404 <_Balloc+0x20>
    a41a:	2601      	movs	r6, #1
    a41c:	40ae      	lsls	r6, r5
    a41e:	1d72      	adds	r2, r6, #5
    a420:	0092      	lsls	r2, r2, #2
    a422:	2101      	movs	r1, #1
    a424:	0020      	movs	r0, r4
    a426:	f002 f90d 	bl	c644 <_calloc_r>
    a42a:	2800      	cmp	r0, #0
    a42c:	d0f3      	beq.n	a416 <_Balloc+0x32>
    a42e:	6045      	str	r5, [r0, #4]
    a430:	6086      	str	r6, [r0, #8]
    a432:	e7e4      	b.n	a3fe <_Balloc+0x1a>

0000a434 <_Bfree>:
    a434:	2900      	cmp	r1, #0
    a436:	d006      	beq.n	a446 <_Bfree+0x12>
    a438:	684b      	ldr	r3, [r1, #4]
    a43a:	009a      	lsls	r2, r3, #2
    a43c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    a43e:	189b      	adds	r3, r3, r2
    a440:	681a      	ldr	r2, [r3, #0]
    a442:	600a      	str	r2, [r1, #0]
    a444:	6019      	str	r1, [r3, #0]
    a446:	4770      	bx	lr

0000a448 <__multadd>:
    a448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a44a:	46ce      	mov	lr, r9
    a44c:	4647      	mov	r7, r8
    a44e:	4681      	mov	r9, r0
    a450:	0008      	movs	r0, r1
    a452:	b580      	push	{r7, lr}
    a454:	000d      	movs	r5, r1
    a456:	690c      	ldr	r4, [r1, #16]
    a458:	001f      	movs	r7, r3
    a45a:	2100      	movs	r1, #0
    a45c:	3014      	adds	r0, #20
    a45e:	6803      	ldr	r3, [r0, #0]
    a460:	3101      	adds	r1, #1
    a462:	041e      	lsls	r6, r3, #16
    a464:	0c36      	lsrs	r6, r6, #16
    a466:	4356      	muls	r6, r2
    a468:	0c1b      	lsrs	r3, r3, #16
    a46a:	4353      	muls	r3, r2
    a46c:	19f6      	adds	r6, r6, r7
    a46e:	0c37      	lsrs	r7, r6, #16
    a470:	19db      	adds	r3, r3, r7
    a472:	0436      	lsls	r6, r6, #16
    a474:	0c1f      	lsrs	r7, r3, #16
    a476:	0c36      	lsrs	r6, r6, #16
    a478:	041b      	lsls	r3, r3, #16
    a47a:	199b      	adds	r3, r3, r6
    a47c:	c008      	stmia	r0!, {r3}
    a47e:	428c      	cmp	r4, r1
    a480:	dced      	bgt.n	a45e <__multadd+0x16>
    a482:	2f00      	cmp	r7, #0
    a484:	d008      	beq.n	a498 <__multadd+0x50>
    a486:	68ab      	ldr	r3, [r5, #8]
    a488:	429c      	cmp	r4, r3
    a48a:	da0a      	bge.n	a4a2 <__multadd+0x5a>
    a48c:	1d23      	adds	r3, r4, #4
    a48e:	009b      	lsls	r3, r3, #2
    a490:	18eb      	adds	r3, r5, r3
    a492:	3401      	adds	r4, #1
    a494:	605f      	str	r7, [r3, #4]
    a496:	612c      	str	r4, [r5, #16]
    a498:	0028      	movs	r0, r5
    a49a:	bc0c      	pop	{r2, r3}
    a49c:	4690      	mov	r8, r2
    a49e:	4699      	mov	r9, r3
    a4a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a4a2:	686b      	ldr	r3, [r5, #4]
    a4a4:	4648      	mov	r0, r9
    a4a6:	1c59      	adds	r1, r3, #1
    a4a8:	f7ff ff9c 	bl	a3e4 <_Balloc>
    a4ac:	0029      	movs	r1, r5
    a4ae:	692b      	ldr	r3, [r5, #16]
    a4b0:	4680      	mov	r8, r0
    a4b2:	1c9a      	adds	r2, r3, #2
    a4b4:	0092      	lsls	r2, r2, #2
    a4b6:	310c      	adds	r1, #12
    a4b8:	300c      	adds	r0, #12
    a4ba:	f7ff ff41 	bl	a340 <memcpy>
    a4be:	686b      	ldr	r3, [r5, #4]
    a4c0:	009a      	lsls	r2, r3, #2
    a4c2:	464b      	mov	r3, r9
    a4c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    a4c6:	189b      	adds	r3, r3, r2
    a4c8:	681a      	ldr	r2, [r3, #0]
    a4ca:	602a      	str	r2, [r5, #0]
    a4cc:	601d      	str	r5, [r3, #0]
    a4ce:	4645      	mov	r5, r8
    a4d0:	e7dc      	b.n	a48c <__multadd+0x44>
    a4d2:	46c0      	nop			; (mov r8, r8)

0000a4d4 <__s2b>:
    a4d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a4d6:	4647      	mov	r7, r8
    a4d8:	46ce      	mov	lr, r9
    a4da:	0006      	movs	r6, r0
    a4dc:	0018      	movs	r0, r3
    a4de:	b580      	push	{r7, lr}
    a4e0:	000d      	movs	r5, r1
    a4e2:	3008      	adds	r0, #8
    a4e4:	2109      	movs	r1, #9
    a4e6:	4690      	mov	r8, r2
    a4e8:	001f      	movs	r7, r3
    a4ea:	f7f9 fb97 	bl	3c1c <__divsi3>
    a4ee:	2801      	cmp	r0, #1
    a4f0:	dd38      	ble.n	a564 <__s2b+0x90>
    a4f2:	2201      	movs	r2, #1
    a4f4:	2100      	movs	r1, #0
    a4f6:	0052      	lsls	r2, r2, #1
    a4f8:	3101      	adds	r1, #1
    a4fa:	4290      	cmp	r0, r2
    a4fc:	dcfb      	bgt.n	a4f6 <__s2b+0x22>
    a4fe:	0030      	movs	r0, r6
    a500:	f7ff ff70 	bl	a3e4 <_Balloc>
    a504:	9b08      	ldr	r3, [sp, #32]
    a506:	6143      	str	r3, [r0, #20]
    a508:	2301      	movs	r3, #1
    a50a:	6103      	str	r3, [r0, #16]
    a50c:	4643      	mov	r3, r8
    a50e:	2b09      	cmp	r3, #9
    a510:	dd24      	ble.n	a55c <__s2b+0x88>
    a512:	2309      	movs	r3, #9
    a514:	4699      	mov	r9, r3
    a516:	44a9      	add	r9, r5
    a518:	464c      	mov	r4, r9
    a51a:	4445      	add	r5, r8
    a51c:	7823      	ldrb	r3, [r4, #0]
    a51e:	0001      	movs	r1, r0
    a520:	3b30      	subs	r3, #48	; 0x30
    a522:	220a      	movs	r2, #10
    a524:	0030      	movs	r0, r6
    a526:	3401      	adds	r4, #1
    a528:	f7ff ff8e 	bl	a448 <__multadd>
    a52c:	42ac      	cmp	r4, r5
    a52e:	d1f5      	bne.n	a51c <__s2b+0x48>
    a530:	4645      	mov	r5, r8
    a532:	3d08      	subs	r5, #8
    a534:	444d      	add	r5, r9
    a536:	4547      	cmp	r7, r8
    a538:	dd0c      	ble.n	a554 <__s2b+0x80>
    a53a:	4643      	mov	r3, r8
    a53c:	1aff      	subs	r7, r7, r3
    a53e:	19ef      	adds	r7, r5, r7
    a540:	782b      	ldrb	r3, [r5, #0]
    a542:	0001      	movs	r1, r0
    a544:	3b30      	subs	r3, #48	; 0x30
    a546:	220a      	movs	r2, #10
    a548:	0030      	movs	r0, r6
    a54a:	3501      	adds	r5, #1
    a54c:	f7ff ff7c 	bl	a448 <__multadd>
    a550:	42bd      	cmp	r5, r7
    a552:	d1f5      	bne.n	a540 <__s2b+0x6c>
    a554:	bc0c      	pop	{r2, r3}
    a556:	4690      	mov	r8, r2
    a558:	4699      	mov	r9, r3
    a55a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a55c:	2309      	movs	r3, #9
    a55e:	350a      	adds	r5, #10
    a560:	4698      	mov	r8, r3
    a562:	e7e8      	b.n	a536 <__s2b+0x62>
    a564:	2100      	movs	r1, #0
    a566:	e7ca      	b.n	a4fe <__s2b+0x2a>

0000a568 <__hi0bits>:
    a568:	0003      	movs	r3, r0
    a56a:	0c02      	lsrs	r2, r0, #16
    a56c:	2000      	movs	r0, #0
    a56e:	2a00      	cmp	r2, #0
    a570:	d101      	bne.n	a576 <__hi0bits+0xe>
    a572:	041b      	lsls	r3, r3, #16
    a574:	3010      	adds	r0, #16
    a576:	0e1a      	lsrs	r2, r3, #24
    a578:	d101      	bne.n	a57e <__hi0bits+0x16>
    a57a:	3008      	adds	r0, #8
    a57c:	021b      	lsls	r3, r3, #8
    a57e:	0f1a      	lsrs	r2, r3, #28
    a580:	d101      	bne.n	a586 <__hi0bits+0x1e>
    a582:	3004      	adds	r0, #4
    a584:	011b      	lsls	r3, r3, #4
    a586:	0f9a      	lsrs	r2, r3, #30
    a588:	d101      	bne.n	a58e <__hi0bits+0x26>
    a58a:	3002      	adds	r0, #2
    a58c:	009b      	lsls	r3, r3, #2
    a58e:	2b00      	cmp	r3, #0
    a590:	db03      	blt.n	a59a <__hi0bits+0x32>
    a592:	3001      	adds	r0, #1
    a594:	005b      	lsls	r3, r3, #1
    a596:	d400      	bmi.n	a59a <__hi0bits+0x32>
    a598:	2020      	movs	r0, #32
    a59a:	4770      	bx	lr

0000a59c <__lo0bits>:
    a59c:	6803      	ldr	r3, [r0, #0]
    a59e:	075a      	lsls	r2, r3, #29
    a5a0:	d009      	beq.n	a5b6 <__lo0bits+0x1a>
    a5a2:	2200      	movs	r2, #0
    a5a4:	07d9      	lsls	r1, r3, #31
    a5a6:	d404      	bmi.n	a5b2 <__lo0bits+0x16>
    a5a8:	079a      	lsls	r2, r3, #30
    a5aa:	d420      	bmi.n	a5ee <__lo0bits+0x52>
    a5ac:	2202      	movs	r2, #2
    a5ae:	089b      	lsrs	r3, r3, #2
    a5b0:	6003      	str	r3, [r0, #0]
    a5b2:	0010      	movs	r0, r2
    a5b4:	4770      	bx	lr
    a5b6:	0419      	lsls	r1, r3, #16
    a5b8:	2200      	movs	r2, #0
    a5ba:	2900      	cmp	r1, #0
    a5bc:	d101      	bne.n	a5c2 <__lo0bits+0x26>
    a5be:	0c1b      	lsrs	r3, r3, #16
    a5c0:	3210      	adds	r2, #16
    a5c2:	21ff      	movs	r1, #255	; 0xff
    a5c4:	4219      	tst	r1, r3
    a5c6:	d101      	bne.n	a5cc <__lo0bits+0x30>
    a5c8:	3208      	adds	r2, #8
    a5ca:	0a1b      	lsrs	r3, r3, #8
    a5cc:	0719      	lsls	r1, r3, #28
    a5ce:	d101      	bne.n	a5d4 <__lo0bits+0x38>
    a5d0:	3204      	adds	r2, #4
    a5d2:	091b      	lsrs	r3, r3, #4
    a5d4:	0799      	lsls	r1, r3, #30
    a5d6:	d101      	bne.n	a5dc <__lo0bits+0x40>
    a5d8:	3202      	adds	r2, #2
    a5da:	089b      	lsrs	r3, r3, #2
    a5dc:	07d9      	lsls	r1, r3, #31
    a5de:	d404      	bmi.n	a5ea <__lo0bits+0x4e>
    a5e0:	085b      	lsrs	r3, r3, #1
    a5e2:	d101      	bne.n	a5e8 <__lo0bits+0x4c>
    a5e4:	2220      	movs	r2, #32
    a5e6:	e7e4      	b.n	a5b2 <__lo0bits+0x16>
    a5e8:	3201      	adds	r2, #1
    a5ea:	6003      	str	r3, [r0, #0]
    a5ec:	e7e1      	b.n	a5b2 <__lo0bits+0x16>
    a5ee:	085b      	lsrs	r3, r3, #1
    a5f0:	6003      	str	r3, [r0, #0]
    a5f2:	2201      	movs	r2, #1
    a5f4:	e7dd      	b.n	a5b2 <__lo0bits+0x16>
    a5f6:	46c0      	nop			; (mov r8, r8)

0000a5f8 <__i2b>:
    a5f8:	b510      	push	{r4, lr}
    a5fa:	000c      	movs	r4, r1
    a5fc:	2101      	movs	r1, #1
    a5fe:	f7ff fef1 	bl	a3e4 <_Balloc>
    a602:	2301      	movs	r3, #1
    a604:	6144      	str	r4, [r0, #20]
    a606:	6103      	str	r3, [r0, #16]
    a608:	bd10      	pop	{r4, pc}
    a60a:	46c0      	nop			; (mov r8, r8)

0000a60c <__multiply>:
    a60c:	b5f0      	push	{r4, r5, r6, r7, lr}
    a60e:	4657      	mov	r7, sl
    a610:	464e      	mov	r6, r9
    a612:	4645      	mov	r5, r8
    a614:	46de      	mov	lr, fp
    a616:	b5e0      	push	{r5, r6, r7, lr}
    a618:	6914      	ldr	r4, [r2, #16]
    a61a:	690e      	ldr	r6, [r1, #16]
    a61c:	b085      	sub	sp, #20
    a61e:	000f      	movs	r7, r1
    a620:	0015      	movs	r5, r2
    a622:	42a6      	cmp	r6, r4
    a624:	da04      	bge.n	a630 <__multiply+0x24>
    a626:	0033      	movs	r3, r6
    a628:	0017      	movs	r7, r2
    a62a:	0026      	movs	r6, r4
    a62c:	000d      	movs	r5, r1
    a62e:	001c      	movs	r4, r3
    a630:	1933      	adds	r3, r6, r4
    a632:	4698      	mov	r8, r3
    a634:	68bb      	ldr	r3, [r7, #8]
    a636:	6879      	ldr	r1, [r7, #4]
    a638:	4598      	cmp	r8, r3
    a63a:	dd00      	ble.n	a63e <__multiply+0x32>
    a63c:	3101      	adds	r1, #1
    a63e:	f7ff fed1 	bl	a3e4 <_Balloc>
    a642:	2214      	movs	r2, #20
    a644:	0003      	movs	r3, r0
    a646:	4694      	mov	ip, r2
    a648:	4463      	add	r3, ip
    a64a:	469b      	mov	fp, r3
    a64c:	4643      	mov	r3, r8
    a64e:	009b      	lsls	r3, r3, #2
    a650:	445b      	add	r3, fp
    a652:	0019      	movs	r1, r3
    a654:	9302      	str	r3, [sp, #8]
    a656:	9003      	str	r0, [sp, #12]
    a658:	465b      	mov	r3, fp
    a65a:	2200      	movs	r2, #0
    a65c:	458b      	cmp	fp, r1
    a65e:	d203      	bcs.n	a668 <__multiply+0x5c>
    a660:	9902      	ldr	r1, [sp, #8]
    a662:	c304      	stmia	r3!, {r2}
    a664:	4299      	cmp	r1, r3
    a666:	d8fc      	bhi.n	a662 <__multiply+0x56>
    a668:	2314      	movs	r3, #20
    a66a:	00a4      	lsls	r4, r4, #2
    a66c:	469a      	mov	sl, r3
    a66e:	3714      	adds	r7, #20
    a670:	0023      	movs	r3, r4
    a672:	46bc      	mov	ip, r7
    a674:	44aa      	add	sl, r5
    a676:	00b6      	lsls	r6, r6, #2
    a678:	4453      	add	r3, sl
    a67a:	9700      	str	r7, [sp, #0]
    a67c:	44b4      	add	ip, r6
    a67e:	9301      	str	r3, [sp, #4]
    a680:	459a      	cmp	sl, r3
    a682:	d24f      	bcs.n	a724 <__multiply+0x118>
    a684:	4653      	mov	r3, sl
    a686:	681b      	ldr	r3, [r3, #0]
    a688:	041e      	lsls	r6, r3, #16
    a68a:	0c36      	lsrs	r6, r6, #16
    a68c:	d020      	beq.n	a6d0 <__multiply+0xc4>
    a68e:	465c      	mov	r4, fp
    a690:	2700      	movs	r7, #0
    a692:	9d00      	ldr	r5, [sp, #0]
    a694:	0021      	movs	r1, r4
    a696:	cc08      	ldmia	r4!, {r3}
    a698:	cd04      	ldmia	r5!, {r2}
    a69a:	4699      	mov	r9, r3
    a69c:	4648      	mov	r0, r9
    a69e:	0413      	lsls	r3, r2, #16
    a6a0:	0c1b      	lsrs	r3, r3, #16
    a6a2:	4373      	muls	r3, r6
    a6a4:	0400      	lsls	r0, r0, #16
    a6a6:	0c00      	lsrs	r0, r0, #16
    a6a8:	181b      	adds	r3, r3, r0
    a6aa:	19d8      	adds	r0, r3, r7
    a6ac:	0c13      	lsrs	r3, r2, #16
    a6ae:	464a      	mov	r2, r9
    a6b0:	4373      	muls	r3, r6
    a6b2:	0c12      	lsrs	r2, r2, #16
    a6b4:	189b      	adds	r3, r3, r2
    a6b6:	0c02      	lsrs	r2, r0, #16
    a6b8:	189b      	adds	r3, r3, r2
    a6ba:	0402      	lsls	r2, r0, #16
    a6bc:	0c1f      	lsrs	r7, r3, #16
    a6be:	0c12      	lsrs	r2, r2, #16
    a6c0:	041b      	lsls	r3, r3, #16
    a6c2:	4313      	orrs	r3, r2
    a6c4:	600b      	str	r3, [r1, #0]
    a6c6:	45ac      	cmp	ip, r5
    a6c8:	d8e4      	bhi.n	a694 <__multiply+0x88>
    a6ca:	4653      	mov	r3, sl
    a6cc:	6027      	str	r7, [r4, #0]
    a6ce:	681b      	ldr	r3, [r3, #0]
    a6d0:	0c1e      	lsrs	r6, r3, #16
    a6d2:	d020      	beq.n	a716 <__multiply+0x10a>
    a6d4:	465b      	mov	r3, fp
    a6d6:	2100      	movs	r1, #0
    a6d8:	681b      	ldr	r3, [r3, #0]
    a6da:	465c      	mov	r4, fp
    a6dc:	0018      	movs	r0, r3
    a6de:	000f      	movs	r7, r1
    a6e0:	4662      	mov	r2, ip
    a6e2:	9d00      	ldr	r5, [sp, #0]
    a6e4:	8829      	ldrh	r1, [r5, #0]
    a6e6:	0c00      	lsrs	r0, r0, #16
    a6e8:	4371      	muls	r1, r6
    a6ea:	1809      	adds	r1, r1, r0
    a6ec:	19c9      	adds	r1, r1, r7
    a6ee:	041b      	lsls	r3, r3, #16
    a6f0:	0408      	lsls	r0, r1, #16
    a6f2:	0c1b      	lsrs	r3, r3, #16
    a6f4:	4303      	orrs	r3, r0
    a6f6:	6023      	str	r3, [r4, #0]
    a6f8:	cd08      	ldmia	r5!, {r3}
    a6fa:	6860      	ldr	r0, [r4, #4]
    a6fc:	0c1b      	lsrs	r3, r3, #16
    a6fe:	4373      	muls	r3, r6
    a700:	0407      	lsls	r7, r0, #16
    a702:	0c3f      	lsrs	r7, r7, #16
    a704:	19db      	adds	r3, r3, r7
    a706:	0c09      	lsrs	r1, r1, #16
    a708:	185b      	adds	r3, r3, r1
    a70a:	0c1f      	lsrs	r7, r3, #16
    a70c:	3404      	adds	r4, #4
    a70e:	42aa      	cmp	r2, r5
    a710:	d8e8      	bhi.n	a6e4 <__multiply+0xd8>
    a712:	4694      	mov	ip, r2
    a714:	6023      	str	r3, [r4, #0]
    a716:	2304      	movs	r3, #4
    a718:	4699      	mov	r9, r3
    a71a:	9b01      	ldr	r3, [sp, #4]
    a71c:	44ca      	add	sl, r9
    a71e:	44cb      	add	fp, r9
    a720:	4553      	cmp	r3, sl
    a722:	d8af      	bhi.n	a684 <__multiply+0x78>
    a724:	4643      	mov	r3, r8
    a726:	2b00      	cmp	r3, #0
    a728:	dd0e      	ble.n	a748 <__multiply+0x13c>
    a72a:	9b02      	ldr	r3, [sp, #8]
    a72c:	3b04      	subs	r3, #4
    a72e:	681a      	ldr	r2, [r3, #0]
    a730:	2a00      	cmp	r2, #0
    a732:	d109      	bne.n	a748 <__multiply+0x13c>
    a734:	4642      	mov	r2, r8
    a736:	e003      	b.n	a740 <__multiply+0x134>
    a738:	3b04      	subs	r3, #4
    a73a:	6819      	ldr	r1, [r3, #0]
    a73c:	2900      	cmp	r1, #0
    a73e:	d102      	bne.n	a746 <__multiply+0x13a>
    a740:	3a01      	subs	r2, #1
    a742:	2a00      	cmp	r2, #0
    a744:	d1f8      	bne.n	a738 <__multiply+0x12c>
    a746:	4690      	mov	r8, r2
    a748:	9b03      	ldr	r3, [sp, #12]
    a74a:	4642      	mov	r2, r8
    a74c:	0018      	movs	r0, r3
    a74e:	611a      	str	r2, [r3, #16]
    a750:	b005      	add	sp, #20
    a752:	bc3c      	pop	{r2, r3, r4, r5}
    a754:	4690      	mov	r8, r2
    a756:	4699      	mov	r9, r3
    a758:	46a2      	mov	sl, r4
    a75a:	46ab      	mov	fp, r5
    a75c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a75e:	46c0      	nop			; (mov r8, r8)

0000a760 <__pow5mult>:
    a760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a762:	4647      	mov	r7, r8
    a764:	46ce      	mov	lr, r9
    a766:	2303      	movs	r3, #3
    a768:	b580      	push	{r7, lr}
    a76a:	4680      	mov	r8, r0
    a76c:	000f      	movs	r7, r1
    a76e:	0014      	movs	r4, r2
    a770:	4013      	ands	r3, r2
    a772:	d13a      	bne.n	a7ea <__pow5mult+0x8a>
    a774:	10a4      	asrs	r4, r4, #2
    a776:	003e      	movs	r6, r7
    a778:	2c00      	cmp	r4, #0
    a77a:	d025      	beq.n	a7c8 <__pow5mult+0x68>
    a77c:	4643      	mov	r3, r8
    a77e:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    a780:	2d00      	cmp	r5, #0
    a782:	d03b      	beq.n	a7fc <__pow5mult+0x9c>
    a784:	003e      	movs	r6, r7
    a786:	2300      	movs	r3, #0
    a788:	2701      	movs	r7, #1
    a78a:	4699      	mov	r9, r3
    a78c:	4227      	tst	r7, r4
    a78e:	d107      	bne.n	a7a0 <__pow5mult+0x40>
    a790:	1064      	asrs	r4, r4, #1
    a792:	d019      	beq.n	a7c8 <__pow5mult+0x68>
    a794:	6828      	ldr	r0, [r5, #0]
    a796:	2800      	cmp	r0, #0
    a798:	d01b      	beq.n	a7d2 <__pow5mult+0x72>
    a79a:	0005      	movs	r5, r0
    a79c:	4227      	tst	r7, r4
    a79e:	d0f7      	beq.n	a790 <__pow5mult+0x30>
    a7a0:	002a      	movs	r2, r5
    a7a2:	0031      	movs	r1, r6
    a7a4:	4640      	mov	r0, r8
    a7a6:	f7ff ff31 	bl	a60c <__multiply>
    a7aa:	2e00      	cmp	r6, #0
    a7ac:	d01b      	beq.n	a7e6 <__pow5mult+0x86>
    a7ae:	4642      	mov	r2, r8
    a7b0:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    a7b2:	6873      	ldr	r3, [r6, #4]
    a7b4:	4694      	mov	ip, r2
    a7b6:	009b      	lsls	r3, r3, #2
    a7b8:	4463      	add	r3, ip
    a7ba:	681a      	ldr	r2, [r3, #0]
    a7bc:	1064      	asrs	r4, r4, #1
    a7be:	6032      	str	r2, [r6, #0]
    a7c0:	601e      	str	r6, [r3, #0]
    a7c2:	0006      	movs	r6, r0
    a7c4:	2c00      	cmp	r4, #0
    a7c6:	d1e5      	bne.n	a794 <__pow5mult+0x34>
    a7c8:	0030      	movs	r0, r6
    a7ca:	bc0c      	pop	{r2, r3}
    a7cc:	4690      	mov	r8, r2
    a7ce:	4699      	mov	r9, r3
    a7d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a7d2:	002a      	movs	r2, r5
    a7d4:	0029      	movs	r1, r5
    a7d6:	4640      	mov	r0, r8
    a7d8:	f7ff ff18 	bl	a60c <__multiply>
    a7dc:	464b      	mov	r3, r9
    a7de:	6028      	str	r0, [r5, #0]
    a7e0:	6003      	str	r3, [r0, #0]
    a7e2:	0005      	movs	r5, r0
    a7e4:	e7da      	b.n	a79c <__pow5mult+0x3c>
    a7e6:	0006      	movs	r6, r0
    a7e8:	e7d2      	b.n	a790 <__pow5mult+0x30>
    a7ea:	4a0b      	ldr	r2, [pc, #44]	; (a818 <__pow5mult+0xb8>)
    a7ec:	3b01      	subs	r3, #1
    a7ee:	009b      	lsls	r3, r3, #2
    a7f0:	589a      	ldr	r2, [r3, r2]
    a7f2:	2300      	movs	r3, #0
    a7f4:	f7ff fe28 	bl	a448 <__multadd>
    a7f8:	0007      	movs	r7, r0
    a7fa:	e7bb      	b.n	a774 <__pow5mult+0x14>
    a7fc:	2101      	movs	r1, #1
    a7fe:	4640      	mov	r0, r8
    a800:	f7ff fdf0 	bl	a3e4 <_Balloc>
    a804:	4b05      	ldr	r3, [pc, #20]	; (a81c <__pow5mult+0xbc>)
    a806:	0005      	movs	r5, r0
    a808:	6143      	str	r3, [r0, #20]
    a80a:	2301      	movs	r3, #1
    a80c:	6103      	str	r3, [r0, #16]
    a80e:	4643      	mov	r3, r8
    a810:	6498      	str	r0, [r3, #72]	; 0x48
    a812:	2300      	movs	r3, #0
    a814:	6003      	str	r3, [r0, #0]
    a816:	e7b5      	b.n	a784 <__pow5mult+0x24>
    a818:	00010810 	.word	0x00010810
    a81c:	00000271 	.word	0x00000271

0000a820 <__lshift>:
    a820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a822:	464e      	mov	r6, r9
    a824:	4645      	mov	r5, r8
    a826:	46de      	mov	lr, fp
    a828:	4657      	mov	r7, sl
    a82a:	b5e0      	push	{r5, r6, r7, lr}
    a82c:	000e      	movs	r6, r1
    a82e:	6933      	ldr	r3, [r6, #16]
    a830:	1154      	asrs	r4, r2, #5
    a832:	4698      	mov	r8, r3
    a834:	44a0      	add	r8, r4
    a836:	4643      	mov	r3, r8
    a838:	1c5d      	adds	r5, r3, #1
    a83a:	68b3      	ldr	r3, [r6, #8]
    a83c:	4683      	mov	fp, r0
    a83e:	4691      	mov	r9, r2
    a840:	6849      	ldr	r1, [r1, #4]
    a842:	429d      	cmp	r5, r3
    a844:	dd03      	ble.n	a84e <__lshift+0x2e>
    a846:	3101      	adds	r1, #1
    a848:	005b      	lsls	r3, r3, #1
    a84a:	429d      	cmp	r5, r3
    a84c:	dcfb      	bgt.n	a846 <__lshift+0x26>
    a84e:	4658      	mov	r0, fp
    a850:	f7ff fdc8 	bl	a3e4 <_Balloc>
    a854:	0003      	movs	r3, r0
    a856:	4684      	mov	ip, r0
    a858:	3314      	adds	r3, #20
    a85a:	2c00      	cmp	r4, #0
    a85c:	dd06      	ble.n	a86c <__lshift+0x4c>
    a85e:	2100      	movs	r1, #0
    a860:	00a4      	lsls	r4, r4, #2
    a862:	001a      	movs	r2, r3
    a864:	191b      	adds	r3, r3, r4
    a866:	c202      	stmia	r2!, {r1}
    a868:	4293      	cmp	r3, r2
    a86a:	d1fc      	bne.n	a866 <__lshift+0x46>
    a86c:	6932      	ldr	r2, [r6, #16]
    a86e:	4648      	mov	r0, r9
    a870:	0097      	lsls	r7, r2, #2
    a872:	0031      	movs	r1, r6
    a874:	221f      	movs	r2, #31
    a876:	3114      	adds	r1, #20
    a878:	4010      	ands	r0, r2
    a87a:	19cf      	adds	r7, r1, r7
    a87c:	4681      	mov	r9, r0
    a87e:	2800      	cmp	r0, #0
    a880:	d025      	beq.n	a8ce <__lshift+0xae>
    a882:	2220      	movs	r2, #32
    a884:	1a12      	subs	r2, r2, r0
    a886:	4692      	mov	sl, r2
    a888:	2200      	movs	r2, #0
    a88a:	4648      	mov	r0, r9
    a88c:	680c      	ldr	r4, [r1, #0]
    a88e:	4084      	lsls	r4, r0
    a890:	4650      	mov	r0, sl
    a892:	4314      	orrs	r4, r2
    a894:	601c      	str	r4, [r3, #0]
    a896:	c904      	ldmia	r1!, {r2}
    a898:	3304      	adds	r3, #4
    a89a:	40c2      	lsrs	r2, r0
    a89c:	428f      	cmp	r7, r1
    a89e:	d8f4      	bhi.n	a88a <__lshift+0x6a>
    a8a0:	601a      	str	r2, [r3, #0]
    a8a2:	2a00      	cmp	r2, #0
    a8a4:	d001      	beq.n	a8aa <__lshift+0x8a>
    a8a6:	4645      	mov	r5, r8
    a8a8:	3502      	adds	r5, #2
    a8aa:	4663      	mov	r3, ip
    a8ac:	3d01      	subs	r5, #1
    a8ae:	611d      	str	r5, [r3, #16]
    a8b0:	6873      	ldr	r3, [r6, #4]
    a8b2:	4660      	mov	r0, ip
    a8b4:	009a      	lsls	r2, r3, #2
    a8b6:	465b      	mov	r3, fp
    a8b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    a8ba:	189b      	adds	r3, r3, r2
    a8bc:	681a      	ldr	r2, [r3, #0]
    a8be:	6032      	str	r2, [r6, #0]
    a8c0:	601e      	str	r6, [r3, #0]
    a8c2:	bc3c      	pop	{r2, r3, r4, r5}
    a8c4:	4690      	mov	r8, r2
    a8c6:	4699      	mov	r9, r3
    a8c8:	46a2      	mov	sl, r4
    a8ca:	46ab      	mov	fp, r5
    a8cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a8ce:	c904      	ldmia	r1!, {r2}
    a8d0:	c304      	stmia	r3!, {r2}
    a8d2:	428f      	cmp	r7, r1
    a8d4:	d9e9      	bls.n	a8aa <__lshift+0x8a>
    a8d6:	c904      	ldmia	r1!, {r2}
    a8d8:	c304      	stmia	r3!, {r2}
    a8da:	428f      	cmp	r7, r1
    a8dc:	d8f7      	bhi.n	a8ce <__lshift+0xae>
    a8de:	e7e4      	b.n	a8aa <__lshift+0x8a>

0000a8e0 <__mcmp>:
    a8e0:	690a      	ldr	r2, [r1, #16]
    a8e2:	6903      	ldr	r3, [r0, #16]
    a8e4:	b530      	push	{r4, r5, lr}
    a8e6:	0005      	movs	r5, r0
    a8e8:	1a98      	subs	r0, r3, r2
    a8ea:	d111      	bne.n	a910 <__mcmp+0x30>
    a8ec:	0092      	lsls	r2, r2, #2
    a8ee:	3514      	adds	r5, #20
    a8f0:	3114      	adds	r1, #20
    a8f2:	18ab      	adds	r3, r5, r2
    a8f4:	1889      	adds	r1, r1, r2
    a8f6:	e001      	b.n	a8fc <__mcmp+0x1c>
    a8f8:	429d      	cmp	r5, r3
    a8fa:	d209      	bcs.n	a910 <__mcmp+0x30>
    a8fc:	3b04      	subs	r3, #4
    a8fe:	3904      	subs	r1, #4
    a900:	681c      	ldr	r4, [r3, #0]
    a902:	680a      	ldr	r2, [r1, #0]
    a904:	4294      	cmp	r4, r2
    a906:	d0f7      	beq.n	a8f8 <__mcmp+0x18>
    a908:	4294      	cmp	r4, r2
    a90a:	4180      	sbcs	r0, r0
    a90c:	2201      	movs	r2, #1
    a90e:	4310      	orrs	r0, r2
    a910:	bd30      	pop	{r4, r5, pc}
    a912:	46c0      	nop			; (mov r8, r8)

0000a914 <__mdiff>:
    a914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a916:	4645      	mov	r5, r8
    a918:	46de      	mov	lr, fp
    a91a:	4657      	mov	r7, sl
    a91c:	464e      	mov	r6, r9
    a91e:	0014      	movs	r4, r2
    a920:	690b      	ldr	r3, [r1, #16]
    a922:	6912      	ldr	r2, [r2, #16]
    a924:	b5e0      	push	{r5, r6, r7, lr}
    a926:	4688      	mov	r8, r1
    a928:	1a9d      	subs	r5, r3, r2
    a92a:	d11a      	bne.n	a962 <__mdiff+0x4e>
    a92c:	000f      	movs	r7, r1
    a92e:	2114      	movs	r1, #20
    a930:	468c      	mov	ip, r1
    a932:	0092      	lsls	r2, r2, #2
    a934:	3714      	adds	r7, #20
    a936:	44a4      	add	ip, r4
    a938:	18bb      	adds	r3, r7, r2
    a93a:	4462      	add	r2, ip
    a93c:	e002      	b.n	a944 <__mdiff+0x30>
    a93e:	429f      	cmp	r7, r3
    a940:	d300      	bcc.n	a944 <__mdiff+0x30>
    a942:	e070      	b.n	aa26 <__mdiff+0x112>
    a944:	3b04      	subs	r3, #4
    a946:	3a04      	subs	r2, #4
    a948:	681e      	ldr	r6, [r3, #0]
    a94a:	6811      	ldr	r1, [r2, #0]
    a94c:	428e      	cmp	r6, r1
    a94e:	d0f6      	beq.n	a93e <__mdiff+0x2a>
    a950:	d300      	bcc.n	a954 <__mdiff+0x40>
    a952:	e071      	b.n	aa38 <__mdiff+0x124>
    a954:	4643      	mov	r3, r8
    a956:	003e      	movs	r6, r7
    a958:	46a0      	mov	r8, r4
    a95a:	4667      	mov	r7, ip
    a95c:	001c      	movs	r4, r3
    a95e:	2501      	movs	r5, #1
    a960:	e006      	b.n	a970 <__mdiff+0x5c>
    a962:	2d00      	cmp	r5, #0
    a964:	db6a      	blt.n	aa3c <__mdiff+0x128>
    a966:	4647      	mov	r7, r8
    a968:	0026      	movs	r6, r4
    a96a:	2500      	movs	r5, #0
    a96c:	3714      	adds	r7, #20
    a96e:	3614      	adds	r6, #20
    a970:	4643      	mov	r3, r8
    a972:	6859      	ldr	r1, [r3, #4]
    a974:	f7ff fd36 	bl	a3e4 <_Balloc>
    a978:	4643      	mov	r3, r8
    a97a:	4681      	mov	r9, r0
    a97c:	60c5      	str	r5, [r0, #12]
    a97e:	6918      	ldr	r0, [r3, #16]
    a980:	464d      	mov	r5, r9
    a982:	0083      	lsls	r3, r0, #2
    a984:	469c      	mov	ip, r3
    a986:	6923      	ldr	r3, [r4, #16]
    a988:	44bc      	add	ip, r7
    a98a:	009b      	lsls	r3, r3, #2
    a98c:	4698      	mov	r8, r3
    a98e:	2300      	movs	r3, #0
    a990:	44b0      	add	r8, r6
    a992:	3514      	adds	r5, #20
    a994:	469a      	mov	sl, r3
    a996:	e000      	b.n	a99a <__mdiff+0x86>
    a998:	0027      	movs	r7, r4
    a99a:	ce04      	ldmia	r6!, {r2}
    a99c:	003c      	movs	r4, r7
    a99e:	4693      	mov	fp, r2
    a9a0:	4659      	mov	r1, fp
    a9a2:	cc08      	ldmia	r4!, {r3}
    a9a4:	0409      	lsls	r1, r1, #16
    a9a6:	041a      	lsls	r2, r3, #16
    a9a8:	0c12      	lsrs	r2, r2, #16
    a9aa:	4452      	add	r2, sl
    a9ac:	0c09      	lsrs	r1, r1, #16
    a9ae:	1a52      	subs	r2, r2, r1
    a9b0:	0c19      	lsrs	r1, r3, #16
    a9b2:	465b      	mov	r3, fp
    a9b4:	0c1b      	lsrs	r3, r3, #16
    a9b6:	1acb      	subs	r3, r1, r3
    a9b8:	1411      	asrs	r1, r2, #16
    a9ba:	185b      	adds	r3, r3, r1
    a9bc:	0412      	lsls	r2, r2, #16
    a9be:	1419      	asrs	r1, r3, #16
    a9c0:	0c12      	lsrs	r2, r2, #16
    a9c2:	041b      	lsls	r3, r3, #16
    a9c4:	468a      	mov	sl, r1
    a9c6:	4313      	orrs	r3, r2
    a9c8:	1d29      	adds	r1, r5, #4
    a9ca:	602b      	str	r3, [r5, #0]
    a9cc:	000d      	movs	r5, r1
    a9ce:	45b0      	cmp	r8, r6
    a9d0:	d8e2      	bhi.n	a998 <__mdiff+0x84>
    a9d2:	45a4      	cmp	ip, r4
    a9d4:	d916      	bls.n	aa04 <__mdiff+0xf0>
    a9d6:	cc08      	ldmia	r4!, {r3}
    a9d8:	041a      	lsls	r2, r3, #16
    a9da:	0c12      	lsrs	r2, r2, #16
    a9dc:	4452      	add	r2, sl
    a9de:	1416      	asrs	r6, r2, #16
    a9e0:	0c1b      	lsrs	r3, r3, #16
    a9e2:	199b      	adds	r3, r3, r6
    a9e4:	0412      	lsls	r2, r2, #16
    a9e6:	141e      	asrs	r6, r3, #16
    a9e8:	0c12      	lsrs	r2, r2, #16
    a9ea:	041b      	lsls	r3, r3, #16
    a9ec:	4313      	orrs	r3, r2
    a9ee:	46b2      	mov	sl, r6
    a9f0:	c508      	stmia	r5!, {r3}
    a9f2:	45a4      	cmp	ip, r4
    a9f4:	d8ef      	bhi.n	a9d6 <__mdiff+0xc2>
    a9f6:	4662      	mov	r2, ip
    a9f8:	2403      	movs	r4, #3
    a9fa:	1bd2      	subs	r2, r2, r7
    a9fc:	3a05      	subs	r2, #5
    a9fe:	43a2      	bics	r2, r4
    aa00:	3204      	adds	r2, #4
    aa02:	1889      	adds	r1, r1, r2
    aa04:	3904      	subs	r1, #4
    aa06:	2b00      	cmp	r3, #0
    aa08:	d104      	bne.n	aa14 <__mdiff+0x100>
    aa0a:	3904      	subs	r1, #4
    aa0c:	680b      	ldr	r3, [r1, #0]
    aa0e:	3801      	subs	r0, #1
    aa10:	2b00      	cmp	r3, #0
    aa12:	d0fa      	beq.n	aa0a <__mdiff+0xf6>
    aa14:	464b      	mov	r3, r9
    aa16:	6118      	str	r0, [r3, #16]
    aa18:	4648      	mov	r0, r9
    aa1a:	bc3c      	pop	{r2, r3, r4, r5}
    aa1c:	4690      	mov	r8, r2
    aa1e:	4699      	mov	r9, r3
    aa20:	46a2      	mov	sl, r4
    aa22:	46ab      	mov	fp, r5
    aa24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    aa26:	2100      	movs	r1, #0
    aa28:	f7ff fcdc 	bl	a3e4 <_Balloc>
    aa2c:	2301      	movs	r3, #1
    aa2e:	6103      	str	r3, [r0, #16]
    aa30:	2300      	movs	r3, #0
    aa32:	4681      	mov	r9, r0
    aa34:	6143      	str	r3, [r0, #20]
    aa36:	e7ef      	b.n	aa18 <__mdiff+0x104>
    aa38:	4666      	mov	r6, ip
    aa3a:	e799      	b.n	a970 <__mdiff+0x5c>
    aa3c:	0027      	movs	r7, r4
    aa3e:	000e      	movs	r6, r1
    aa40:	46a0      	mov	r8, r4
    aa42:	3714      	adds	r7, #20
    aa44:	3614      	adds	r6, #20
    aa46:	000c      	movs	r4, r1
    aa48:	2501      	movs	r5, #1
    aa4a:	e791      	b.n	a970 <__mdiff+0x5c>

0000aa4c <__ulp>:
    aa4c:	4b10      	ldr	r3, [pc, #64]	; (aa90 <__ulp+0x44>)
    aa4e:	b510      	push	{r4, lr}
    aa50:	4019      	ands	r1, r3
    aa52:	4b10      	ldr	r3, [pc, #64]	; (aa94 <__ulp+0x48>)
    aa54:	469c      	mov	ip, r3
    aa56:	4461      	add	r1, ip
    aa58:	2900      	cmp	r1, #0
    aa5a:	dd04      	ble.n	aa66 <__ulp+0x1a>
    aa5c:	2200      	movs	r2, #0
    aa5e:	000b      	movs	r3, r1
    aa60:	0010      	movs	r0, r2
    aa62:	0019      	movs	r1, r3
    aa64:	bd10      	pop	{r4, pc}
    aa66:	4249      	negs	r1, r1
    aa68:	1509      	asrs	r1, r1, #20
    aa6a:	2200      	movs	r2, #0
    aa6c:	2300      	movs	r3, #0
    aa6e:	2913      	cmp	r1, #19
    aa70:	dd08      	ble.n	aa84 <__ulp+0x38>
    aa72:	3914      	subs	r1, #20
    aa74:	2001      	movs	r0, #1
    aa76:	291e      	cmp	r1, #30
    aa78:	dc02      	bgt.n	aa80 <__ulp+0x34>
    aa7a:	241f      	movs	r4, #31
    aa7c:	1a61      	subs	r1, r4, r1
    aa7e:	4088      	lsls	r0, r1
    aa80:	0002      	movs	r2, r0
    aa82:	e7ed      	b.n	aa60 <__ulp+0x14>
    aa84:	2080      	movs	r0, #128	; 0x80
    aa86:	0300      	lsls	r0, r0, #12
    aa88:	4108      	asrs	r0, r1
    aa8a:	0003      	movs	r3, r0
    aa8c:	e7e8      	b.n	aa60 <__ulp+0x14>
    aa8e:	46c0      	nop			; (mov r8, r8)
    aa90:	7ff00000 	.word	0x7ff00000
    aa94:	fcc00000 	.word	0xfcc00000

0000aa98 <__b2d>:
    aa98:	b5f0      	push	{r4, r5, r6, r7, lr}
    aa9a:	464f      	mov	r7, r9
    aa9c:	4646      	mov	r6, r8
    aa9e:	46d6      	mov	lr, sl
    aaa0:	6904      	ldr	r4, [r0, #16]
    aaa2:	b5c0      	push	{r6, r7, lr}
    aaa4:	00a4      	lsls	r4, r4, #2
    aaa6:	0006      	movs	r6, r0
    aaa8:	46a1      	mov	r9, r4
    aaaa:	3614      	adds	r6, #20
    aaac:	44b1      	add	r9, r6
    aaae:	464b      	mov	r3, r9
    aab0:	4688      	mov	r8, r1
    aab2:	1f1f      	subs	r7, r3, #4
    aab4:	683d      	ldr	r5, [r7, #0]
    aab6:	0028      	movs	r0, r5
    aab8:	f7ff fd56 	bl	a568 <__hi0bits>
    aabc:	2120      	movs	r1, #32
    aabe:	4643      	mov	r3, r8
    aac0:	1a0a      	subs	r2, r1, r0
    aac2:	601a      	str	r2, [r3, #0]
    aac4:	280a      	cmp	r0, #10
    aac6:	dc20      	bgt.n	ab0a <__b2d+0x72>
    aac8:	3915      	subs	r1, #21
    aaca:	1a0b      	subs	r3, r1, r0
    aacc:	469a      	mov	sl, r3
    aace:	002b      	movs	r3, r5
    aad0:	4652      	mov	r2, sl
    aad2:	4926      	ldr	r1, [pc, #152]	; (ab6c <__b2d+0xd4>)
    aad4:	40d3      	lsrs	r3, r2
    aad6:	4688      	mov	r8, r1
    aad8:	0019      	movs	r1, r3
    aada:	4644      	mov	r4, r8
    aadc:	4321      	orrs	r1, r4
    aade:	000b      	movs	r3, r1
    aae0:	2100      	movs	r1, #0
    aae2:	468c      	mov	ip, r1
    aae4:	42be      	cmp	r6, r7
    aae6:	d204      	bcs.n	aaf2 <__b2d+0x5a>
    aae8:	464c      	mov	r4, r9
    aaea:	3c08      	subs	r4, #8
    aaec:	6824      	ldr	r4, [r4, #0]
    aaee:	40d4      	lsrs	r4, r2
    aaf0:	46a4      	mov	ip, r4
    aaf2:	3015      	adds	r0, #21
    aaf4:	4085      	lsls	r5, r0
    aaf6:	4661      	mov	r1, ip
    aaf8:	4329      	orrs	r1, r5
    aafa:	000a      	movs	r2, r1
    aafc:	0010      	movs	r0, r2
    aafe:	0019      	movs	r1, r3
    ab00:	bc1c      	pop	{r2, r3, r4}
    ab02:	4690      	mov	r8, r2
    ab04:	4699      	mov	r9, r3
    ab06:	46a2      	mov	sl, r4
    ab08:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ab0a:	42be      	cmp	r6, r7
    ab0c:	d21b      	bcs.n	ab46 <__b2d+0xae>
    ab0e:	2308      	movs	r3, #8
    ab10:	425b      	negs	r3, r3
    ab12:	469c      	mov	ip, r3
    ab14:	44cc      	add	ip, r9
    ab16:	4663      	mov	r3, ip
    ab18:	380b      	subs	r0, #11
    ab1a:	681f      	ldr	r7, [r3, #0]
    ab1c:	2800      	cmp	r0, #0
    ab1e:	d016      	beq.n	ab4e <__b2d+0xb6>
    ab20:	4085      	lsls	r5, r0
    ab22:	4b12      	ldr	r3, [pc, #72]	; (ab6c <__b2d+0xd4>)
    ab24:	1a09      	subs	r1, r1, r0
    ab26:	431d      	orrs	r5, r3
    ab28:	003b      	movs	r3, r7
    ab2a:	40cb      	lsrs	r3, r1
    ab2c:	001c      	movs	r4, r3
    ab2e:	432c      	orrs	r4, r5
    ab30:	0023      	movs	r3, r4
    ab32:	4566      	cmp	r6, ip
    ab34:	d217      	bcs.n	ab66 <__b2d+0xce>
    ab36:	464c      	mov	r4, r9
    ab38:	3c0c      	subs	r4, #12
    ab3a:	6824      	ldr	r4, [r4, #0]
    ab3c:	4087      	lsls	r7, r0
    ab3e:	40cc      	lsrs	r4, r1
    ab40:	4327      	orrs	r7, r4
    ab42:	003a      	movs	r2, r7
    ab44:	e7da      	b.n	aafc <__b2d+0x64>
    ab46:	380b      	subs	r0, #11
    ab48:	2700      	movs	r7, #0
    ab4a:	2800      	cmp	r0, #0
    ab4c:	d104      	bne.n	ab58 <__b2d+0xc0>
    ab4e:	4907      	ldr	r1, [pc, #28]	; (ab6c <__b2d+0xd4>)
    ab50:	003a      	movs	r2, r7
    ab52:	4329      	orrs	r1, r5
    ab54:	000b      	movs	r3, r1
    ab56:	e7d1      	b.n	aafc <__b2d+0x64>
    ab58:	4085      	lsls	r5, r0
    ab5a:	2700      	movs	r7, #0
    ab5c:	4903      	ldr	r1, [pc, #12]	; (ab6c <__b2d+0xd4>)
    ab5e:	003a      	movs	r2, r7
    ab60:	4329      	orrs	r1, r5
    ab62:	000b      	movs	r3, r1
    ab64:	e7ca      	b.n	aafc <__b2d+0x64>
    ab66:	4087      	lsls	r7, r0
    ab68:	003a      	movs	r2, r7
    ab6a:	e7c7      	b.n	aafc <__b2d+0x64>
    ab6c:	3ff00000 	.word	0x3ff00000

0000ab70 <__d2b>:
    ab70:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab72:	2101      	movs	r1, #1
    ab74:	001c      	movs	r4, r3
    ab76:	b083      	sub	sp, #12
    ab78:	9e08      	ldr	r6, [sp, #32]
    ab7a:	0015      	movs	r5, r2
    ab7c:	f7ff fc32 	bl	a3e4 <_Balloc>
    ab80:	0323      	lsls	r3, r4, #12
    ab82:	0064      	lsls	r4, r4, #1
    ab84:	0007      	movs	r7, r0
    ab86:	0b1b      	lsrs	r3, r3, #12
    ab88:	0d64      	lsrs	r4, r4, #21
    ab8a:	d002      	beq.n	ab92 <__d2b+0x22>
    ab8c:	2280      	movs	r2, #128	; 0x80
    ab8e:	0352      	lsls	r2, r2, #13
    ab90:	4313      	orrs	r3, r2
    ab92:	9301      	str	r3, [sp, #4]
    ab94:	2d00      	cmp	r5, #0
    ab96:	d019      	beq.n	abcc <__d2b+0x5c>
    ab98:	4668      	mov	r0, sp
    ab9a:	9500      	str	r5, [sp, #0]
    ab9c:	f7ff fcfe 	bl	a59c <__lo0bits>
    aba0:	2800      	cmp	r0, #0
    aba2:	d130      	bne.n	ac06 <__d2b+0x96>
    aba4:	9b00      	ldr	r3, [sp, #0]
    aba6:	617b      	str	r3, [r7, #20]
    aba8:	9b01      	ldr	r3, [sp, #4]
    abaa:	61bb      	str	r3, [r7, #24]
    abac:	1e5a      	subs	r2, r3, #1
    abae:	4193      	sbcs	r3, r2
    abb0:	1c5d      	adds	r5, r3, #1
    abb2:	613d      	str	r5, [r7, #16]
    abb4:	2c00      	cmp	r4, #0
    abb6:	d014      	beq.n	abe2 <__d2b+0x72>
    abb8:	4b19      	ldr	r3, [pc, #100]	; (ac20 <__d2b+0xb0>)
    abba:	469c      	mov	ip, r3
    abbc:	2335      	movs	r3, #53	; 0x35
    abbe:	4464      	add	r4, ip
    abc0:	1824      	adds	r4, r4, r0
    abc2:	1a18      	subs	r0, r3, r0
    abc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    abc6:	6034      	str	r4, [r6, #0]
    abc8:	6018      	str	r0, [r3, #0]
    abca:	e019      	b.n	ac00 <__d2b+0x90>
    abcc:	a801      	add	r0, sp, #4
    abce:	f7ff fce5 	bl	a59c <__lo0bits>
    abd2:	9b01      	ldr	r3, [sp, #4]
    abd4:	3020      	adds	r0, #32
    abd6:	617b      	str	r3, [r7, #20]
    abd8:	2301      	movs	r3, #1
    abda:	2501      	movs	r5, #1
    abdc:	613b      	str	r3, [r7, #16]
    abde:	2c00      	cmp	r4, #0
    abe0:	d1ea      	bne.n	abb8 <__d2b+0x48>
    abe2:	4b10      	ldr	r3, [pc, #64]	; (ac24 <__d2b+0xb4>)
    abe4:	469c      	mov	ip, r3
    abe6:	4b10      	ldr	r3, [pc, #64]	; (ac28 <__d2b+0xb8>)
    abe8:	4460      	add	r0, ip
    abea:	18eb      	adds	r3, r5, r3
    abec:	009b      	lsls	r3, r3, #2
    abee:	18fb      	adds	r3, r7, r3
    abf0:	6030      	str	r0, [r6, #0]
    abf2:	6958      	ldr	r0, [r3, #20]
    abf4:	f7ff fcb8 	bl	a568 <__hi0bits>
    abf8:	016b      	lsls	r3, r5, #5
    abfa:	1a18      	subs	r0, r3, r0
    abfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    abfe:	6018      	str	r0, [r3, #0]
    ac00:	0038      	movs	r0, r7
    ac02:	b003      	add	sp, #12
    ac04:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ac06:	9b01      	ldr	r3, [sp, #4]
    ac08:	2220      	movs	r2, #32
    ac0a:	0019      	movs	r1, r3
    ac0c:	1a12      	subs	r2, r2, r0
    ac0e:	4091      	lsls	r1, r2
    ac10:	000a      	movs	r2, r1
    ac12:	40c3      	lsrs	r3, r0
    ac14:	9900      	ldr	r1, [sp, #0]
    ac16:	9301      	str	r3, [sp, #4]
    ac18:	430a      	orrs	r2, r1
    ac1a:	617a      	str	r2, [r7, #20]
    ac1c:	e7c5      	b.n	abaa <__d2b+0x3a>
    ac1e:	46c0      	nop			; (mov r8, r8)
    ac20:	fffffbcd 	.word	0xfffffbcd
    ac24:	fffffbce 	.word	0xfffffbce
    ac28:	3fffffff 	.word	0x3fffffff

0000ac2c <__ratio>:
    ac2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    ac2e:	46ce      	mov	lr, r9
    ac30:	4647      	mov	r7, r8
    ac32:	b580      	push	{r7, lr}
    ac34:	b085      	sub	sp, #20
    ac36:	4688      	mov	r8, r1
    ac38:	a902      	add	r1, sp, #8
    ac3a:	4681      	mov	r9, r0
    ac3c:	f7ff ff2c 	bl	aa98 <__b2d>
    ac40:	0006      	movs	r6, r0
    ac42:	000f      	movs	r7, r1
    ac44:	4640      	mov	r0, r8
    ac46:	a903      	add	r1, sp, #12
    ac48:	f7ff ff26 	bl	aa98 <__b2d>
    ac4c:	464b      	mov	r3, r9
    ac4e:	691b      	ldr	r3, [r3, #16]
    ac50:	9000      	str	r0, [sp, #0]
    ac52:	9101      	str	r1, [sp, #4]
    ac54:	469c      	mov	ip, r3
    ac56:	4643      	mov	r3, r8
    ac58:	691b      	ldr	r3, [r3, #16]
    ac5a:	4698      	mov	r8, r3
    ac5c:	4663      	mov	r3, ip
    ac5e:	4642      	mov	r2, r8
    ac60:	1a9b      	subs	r3, r3, r2
    ac62:	015b      	lsls	r3, r3, #5
    ac64:	469c      	mov	ip, r3
    ac66:	9a03      	ldr	r2, [sp, #12]
    ac68:	9b02      	ldr	r3, [sp, #8]
    ac6a:	1a9b      	subs	r3, r3, r2
    ac6c:	4698      	mov	r8, r3
    ac6e:	44c4      	add	ip, r8
    ac70:	4663      	mov	r3, ip
    ac72:	2b00      	cmp	r3, #0
    ac74:	dd0d      	ble.n	ac92 <__ratio+0x66>
    ac76:	051b      	lsls	r3, r3, #20
    ac78:	19dd      	adds	r5, r3, r7
    ac7a:	002f      	movs	r7, r5
    ac7c:	0002      	movs	r2, r0
    ac7e:	000b      	movs	r3, r1
    ac80:	0030      	movs	r0, r6
    ac82:	0039      	movs	r1, r7
    ac84:	f7f9 fb58 	bl	4338 <__aeabi_ddiv>
    ac88:	b005      	add	sp, #20
    ac8a:	bc0c      	pop	{r2, r3}
    ac8c:	4690      	mov	r8, r2
    ac8e:	4699      	mov	r9, r3
    ac90:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ac92:	4663      	mov	r3, ip
    ac94:	0518      	lsls	r0, r3, #20
    ac96:	1a0b      	subs	r3, r1, r0
    ac98:	9301      	str	r3, [sp, #4]
    ac9a:	9800      	ldr	r0, [sp, #0]
    ac9c:	9901      	ldr	r1, [sp, #4]
    ac9e:	e7ed      	b.n	ac7c <__ratio+0x50>

0000aca0 <__copybits>:
    aca0:	0013      	movs	r3, r2
    aca2:	b570      	push	{r4, r5, r6, lr}
    aca4:	1e4c      	subs	r4, r1, #1
    aca6:	6911      	ldr	r1, [r2, #16]
    aca8:	1164      	asrs	r4, r4, #5
    acaa:	3401      	adds	r4, #1
    acac:	3314      	adds	r3, #20
    acae:	0089      	lsls	r1, r1, #2
    acb0:	00a4      	lsls	r4, r4, #2
    acb2:	1859      	adds	r1, r3, r1
    acb4:	1904      	adds	r4, r0, r4
    acb6:	428b      	cmp	r3, r1
    acb8:	d20b      	bcs.n	acd2 <__copybits+0x32>
    acba:	0005      	movs	r5, r0
    acbc:	cb40      	ldmia	r3!, {r6}
    acbe:	c540      	stmia	r5!, {r6}
    acc0:	4299      	cmp	r1, r3
    acc2:	d8fb      	bhi.n	acbc <__copybits+0x1c>
    acc4:	2303      	movs	r3, #3
    acc6:	3218      	adds	r2, #24
    acc8:	1a9a      	subs	r2, r3, r2
    acca:	1889      	adds	r1, r1, r2
    accc:	4399      	bics	r1, r3
    acce:	3104      	adds	r1, #4
    acd0:	1840      	adds	r0, r0, r1
    acd2:	2300      	movs	r3, #0
    acd4:	4284      	cmp	r4, r0
    acd6:	d902      	bls.n	acde <__copybits+0x3e>
    acd8:	c008      	stmia	r0!, {r3}
    acda:	4284      	cmp	r4, r0
    acdc:	d8fc      	bhi.n	acd8 <__copybits+0x38>
    acde:	bd70      	pop	{r4, r5, r6, pc}

0000ace0 <__any_on>:
    ace0:	0002      	movs	r2, r0
    ace2:	6903      	ldr	r3, [r0, #16]
    ace4:	b510      	push	{r4, lr}
    ace6:	3214      	adds	r2, #20
    ace8:	1148      	asrs	r0, r1, #5
    acea:	4283      	cmp	r3, r0
    acec:	da0f      	bge.n	ad0e <__any_on+0x2e>
    acee:	009b      	lsls	r3, r3, #2
    acf0:	18d3      	adds	r3, r2, r3
    acf2:	429a      	cmp	r2, r3
    acf4:	d221      	bcs.n	ad3a <__any_on+0x5a>
    acf6:	3b04      	subs	r3, #4
    acf8:	6818      	ldr	r0, [r3, #0]
    acfa:	2800      	cmp	r0, #0
    acfc:	d004      	beq.n	ad08 <__any_on+0x28>
    acfe:	e01a      	b.n	ad36 <__any_on+0x56>
    ad00:	3b04      	subs	r3, #4
    ad02:	6819      	ldr	r1, [r3, #0]
    ad04:	2900      	cmp	r1, #0
    ad06:	d116      	bne.n	ad36 <__any_on+0x56>
    ad08:	429a      	cmp	r2, r3
    ad0a:	d3f9      	bcc.n	ad00 <__any_on+0x20>
    ad0c:	bd10      	pop	{r4, pc}
    ad0e:	4283      	cmp	r3, r0
    ad10:	dd0e      	ble.n	ad30 <__any_on+0x50>
    ad12:	231f      	movs	r3, #31
    ad14:	4019      	ands	r1, r3
    ad16:	0083      	lsls	r3, r0, #2
    ad18:	18d3      	adds	r3, r2, r3
    ad1a:	2900      	cmp	r1, #0
    ad1c:	d0e9      	beq.n	acf2 <__any_on+0x12>
    ad1e:	681c      	ldr	r4, [r3, #0]
    ad20:	0020      	movs	r0, r4
    ad22:	40c8      	lsrs	r0, r1
    ad24:	4088      	lsls	r0, r1
    ad26:	0001      	movs	r1, r0
    ad28:	2001      	movs	r0, #1
    ad2a:	428c      	cmp	r4, r1
    ad2c:	d1ee      	bne.n	ad0c <__any_on+0x2c>
    ad2e:	e7e0      	b.n	acf2 <__any_on+0x12>
    ad30:	0083      	lsls	r3, r0, #2
    ad32:	18d3      	adds	r3, r2, r3
    ad34:	e7dd      	b.n	acf2 <__any_on+0x12>
    ad36:	2001      	movs	r0, #1
    ad38:	e7e8      	b.n	ad0c <__any_on+0x2c>
    ad3a:	2000      	movs	r0, #0
    ad3c:	e7e6      	b.n	ad0c <__any_on+0x2c>
    ad3e:	46c0      	nop			; (mov r8, r8)

0000ad40 <_sbrk_r>:
    ad40:	2300      	movs	r3, #0
    ad42:	b570      	push	{r4, r5, r6, lr}
    ad44:	4c06      	ldr	r4, [pc, #24]	; (ad60 <_sbrk_r+0x20>)
    ad46:	0005      	movs	r5, r0
    ad48:	0008      	movs	r0, r1
    ad4a:	6023      	str	r3, [r4, #0]
    ad4c:	f7f5 fe52 	bl	9f4 <_sbrk>
    ad50:	1c43      	adds	r3, r0, #1
    ad52:	d000      	beq.n	ad56 <_sbrk_r+0x16>
    ad54:	bd70      	pop	{r4, r5, r6, pc}
    ad56:	6823      	ldr	r3, [r4, #0]
    ad58:	2b00      	cmp	r3, #0
    ad5a:	d0fb      	beq.n	ad54 <_sbrk_r+0x14>
    ad5c:	602b      	str	r3, [r5, #0]
    ad5e:	e7f9      	b.n	ad54 <_sbrk_r+0x14>
    ad60:	20001580 	.word	0x20001580

0000ad64 <__sccl>:
    ad64:	b570      	push	{r4, r5, r6, lr}
    ad66:	780c      	ldrb	r4, [r1, #0]
    ad68:	2c5e      	cmp	r4, #94	; 0x5e
    ad6a:	d028      	beq.n	adbe <__sccl+0x5a>
    ad6c:	1c4e      	adds	r6, r1, #1
    ad6e:	2500      	movs	r5, #0
    ad70:	2100      	movs	r1, #0
    ad72:	0003      	movs	r3, r0
    ad74:	1c42      	adds	r2, r0, #1
    ad76:	32ff      	adds	r2, #255	; 0xff
    ad78:	7019      	strb	r1, [r3, #0]
    ad7a:	3301      	adds	r3, #1
    ad7c:	429a      	cmp	r2, r3
    ad7e:	d1fb      	bne.n	ad78 <__sccl+0x14>
    ad80:	1e71      	subs	r1, r6, #1
    ad82:	2c00      	cmp	r4, #0
    ad84:	d00e      	beq.n	ada4 <__sccl+0x40>
    ad86:	2301      	movs	r3, #1
    ad88:	406b      	eors	r3, r5
    ad8a:	5503      	strb	r3, [r0, r4]
    ad8c:	7832      	ldrb	r2, [r6, #0]
    ad8e:	1c71      	adds	r1, r6, #1
    ad90:	2a2d      	cmp	r2, #45	; 0x2d
    ad92:	d009      	beq.n	ada8 <__sccl+0x44>
    ad94:	2a5d      	cmp	r2, #93	; 0x5d
    ad96:	d005      	beq.n	ada4 <__sccl+0x40>
    ad98:	2a00      	cmp	r2, #0
    ad9a:	d002      	beq.n	ada2 <__sccl+0x3e>
    ad9c:	0014      	movs	r4, r2
    ad9e:	000e      	movs	r6, r1
    ada0:	e7f3      	b.n	ad8a <__sccl+0x26>
    ada2:	0031      	movs	r1, r6
    ada4:	0008      	movs	r0, r1
    ada6:	bd70      	pop	{r4, r5, r6, pc}
    ada8:	7872      	ldrb	r2, [r6, #1]
    adaa:	2a5d      	cmp	r2, #93	; 0x5d
    adac:	d00c      	beq.n	adc8 <__sccl+0x64>
    adae:	4294      	cmp	r4, r2
    adb0:	dc0a      	bgt.n	adc8 <__sccl+0x64>
    adb2:	3602      	adds	r6, #2
    adb4:	3401      	adds	r4, #1
    adb6:	5503      	strb	r3, [r0, r4]
    adb8:	42a2      	cmp	r2, r4
    adba:	dcfb      	bgt.n	adb4 <__sccl+0x50>
    adbc:	e7e6      	b.n	ad8c <__sccl+0x28>
    adbe:	1c8e      	adds	r6, r1, #2
    adc0:	784c      	ldrb	r4, [r1, #1]
    adc2:	2501      	movs	r5, #1
    adc4:	2101      	movs	r1, #1
    adc6:	e7d4      	b.n	ad72 <__sccl+0xe>
    adc8:	242d      	movs	r4, #45	; 0x2d
    adca:	000e      	movs	r6, r1
    adcc:	e7dd      	b.n	ad8a <__sccl+0x26>
    adce:	46c0      	nop			; (mov r8, r8)

0000add0 <nanf>:
    add0:	4800      	ldr	r0, [pc, #0]	; (add4 <nanf+0x4>)
    add2:	4770      	bx	lr
    add4:	7fc00000 	.word	0x7fc00000

0000add8 <sprintf>:
    add8:	b40e      	push	{r1, r2, r3}
    adda:	b510      	push	{r4, lr}
    addc:	b09d      	sub	sp, #116	; 0x74
    adde:	a902      	add	r1, sp, #8
    ade0:	9002      	str	r0, [sp, #8]
    ade2:	6108      	str	r0, [r1, #16]
    ade4:	480b      	ldr	r0, [pc, #44]	; (ae14 <sprintf+0x3c>)
    ade6:	2482      	movs	r4, #130	; 0x82
    ade8:	6088      	str	r0, [r1, #8]
    adea:	6148      	str	r0, [r1, #20]
    adec:	2001      	movs	r0, #1
    adee:	4240      	negs	r0, r0
    adf0:	ab1f      	add	r3, sp, #124	; 0x7c
    adf2:	81c8      	strh	r0, [r1, #14]
    adf4:	4808      	ldr	r0, [pc, #32]	; (ae18 <sprintf+0x40>)
    adf6:	cb04      	ldmia	r3!, {r2}
    adf8:	00a4      	lsls	r4, r4, #2
    adfa:	6800      	ldr	r0, [r0, #0]
    adfc:	9301      	str	r3, [sp, #4]
    adfe:	818c      	strh	r4, [r1, #12]
    ae00:	f7fb fb44 	bl	648c <_svfprintf_r>
    ae04:	2300      	movs	r3, #0
    ae06:	9a02      	ldr	r2, [sp, #8]
    ae08:	7013      	strb	r3, [r2, #0]
    ae0a:	b01d      	add	sp, #116	; 0x74
    ae0c:	bc10      	pop	{r4}
    ae0e:	bc08      	pop	{r3}
    ae10:	b003      	add	sp, #12
    ae12:	4718      	bx	r3
    ae14:	7fffffff 	.word	0x7fffffff
    ae18:	20000098 	.word	0x20000098

0000ae1c <sulp>:
    ae1c:	b570      	push	{r4, r5, r6, lr}
    ae1e:	0016      	movs	r6, r2
    ae20:	000d      	movs	r5, r1
    ae22:	f7ff fe13 	bl	aa4c <__ulp>
    ae26:	2e00      	cmp	r6, #0
    ae28:	d00d      	beq.n	ae46 <sulp+0x2a>
    ae2a:	236b      	movs	r3, #107	; 0x6b
    ae2c:	006a      	lsls	r2, r5, #1
    ae2e:	0d52      	lsrs	r2, r2, #21
    ae30:	1a9b      	subs	r3, r3, r2
    ae32:	2b00      	cmp	r3, #0
    ae34:	dd07      	ble.n	ae46 <sulp+0x2a>
    ae36:	2400      	movs	r4, #0
    ae38:	4a03      	ldr	r2, [pc, #12]	; (ae48 <sulp+0x2c>)
    ae3a:	051b      	lsls	r3, r3, #20
    ae3c:	189d      	adds	r5, r3, r2
    ae3e:	002b      	movs	r3, r5
    ae40:	0022      	movs	r2, r4
    ae42:	f7f9 fdad 	bl	49a0 <__aeabi_dmul>
    ae46:	bd70      	pop	{r4, r5, r6, pc}
    ae48:	3ff00000 	.word	0x3ff00000

0000ae4c <_strtod_l>:
    ae4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    ae4e:	46de      	mov	lr, fp
    ae50:	4657      	mov	r7, sl
    ae52:	464e      	mov	r6, r9
    ae54:	4645      	mov	r5, r8
    ae56:	b5e0      	push	{r5, r6, r7, lr}
    ae58:	001d      	movs	r5, r3
    ae5a:	2300      	movs	r3, #0
    ae5c:	b0a3      	sub	sp, #140	; 0x8c
    ae5e:	9009      	str	r0, [sp, #36]	; 0x24
    ae60:	0028      	movs	r0, r5
    ae62:	000e      	movs	r6, r1
    ae64:	931e      	str	r3, [sp, #120]	; 0x78
    ae66:	4693      	mov	fp, r2
    ae68:	f7fe fef4 	bl	9c54 <__localeconv_l>
    ae6c:	0007      	movs	r7, r0
    ae6e:	6800      	ldr	r0, [r0, #0]
    ae70:	f7fa ffca 	bl	5e08 <strlen>
    ae74:	2400      	movs	r4, #0
    ae76:	2300      	movs	r3, #0
    ae78:	9304      	str	r3, [sp, #16]
    ae7a:	9405      	str	r4, [sp, #20]
    ae7c:	0033      	movs	r3, r6
    ae7e:	961d      	str	r6, [sp, #116]	; 0x74
    ae80:	781c      	ldrb	r4, [r3, #0]
    ae82:	9008      	str	r0, [sp, #32]
    ae84:	49c4      	ldr	r1, [pc, #784]	; (b198 <_strtod_l+0x34c>)
    ae86:	2c2d      	cmp	r4, #45	; 0x2d
    ae88:	d900      	bls.n	ae8c <_strtod_l+0x40>
    ae8a:	e070      	b.n	af6e <_strtod_l+0x122>
    ae8c:	00a2      	lsls	r2, r4, #2
    ae8e:	588a      	ldr	r2, [r1, r2]
    ae90:	4697      	mov	pc, r2
    ae92:	4689      	mov	r9, r1
    ae94:	0014      	movs	r4, r2
    ae96:	6839      	ldr	r1, [r7, #0]
    ae98:	9a08      	ldr	r2, [sp, #32]
    ae9a:	4698      	mov	r8, r3
    ae9c:	f002 f9e0 	bl	d260 <strncmp>
    aea0:	2800      	cmp	r0, #0
    aea2:	d100      	bne.n	aea6 <_strtod_l+0x5a>
    aea4:	e084      	b.n	afb0 <_strtod_l+0x164>
    aea6:	2200      	movs	r2, #0
    aea8:	2300      	movs	r3, #0
    aeaa:	2000      	movs	r0, #0
    aeac:	950a      	str	r5, [sp, #40]	; 0x28
    aeae:	9208      	str	r2, [sp, #32]
    aeb0:	2220      	movs	r2, #32
    aeb2:	0021      	movs	r1, r4
    aeb4:	4391      	bics	r1, r2
    aeb6:	2200      	movs	r2, #0
    aeb8:	2945      	cmp	r1, #69	; 0x45
    aeba:	d100      	bne.n	aebe <_strtod_l+0x72>
    aebc:	e0a6      	b.n	b00c <_strtod_l+0x1c0>
    aebe:	2d00      	cmp	r5, #0
    aec0:	d000      	beq.n	aec4 <_strtod_l+0x78>
    aec2:	e104      	b.n	b0ce <_strtod_l+0x282>
    aec4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    aec6:	4313      	orrs	r3, r2
    aec8:	d000      	beq.n	aecc <_strtod_l+0x80>
    aeca:	e0f8      	b.n	b0be <_strtod_l+0x272>
    aecc:	9b08      	ldr	r3, [sp, #32]
    aece:	2b00      	cmp	r3, #0
    aed0:	d100      	bne.n	aed4 <_strtod_l+0x88>
    aed2:	e13d      	b.n	b150 <_strtod_l+0x304>
    aed4:	465b      	mov	r3, fp
    aed6:	2400      	movs	r4, #0
    aed8:	2500      	movs	r5, #0
    aeda:	2b00      	cmp	r3, #0
    aedc:	d006      	beq.n	aeec <_strtod_l+0xa0>
    aede:	2300      	movs	r3, #0
    aee0:	9307      	str	r3, [sp, #28]
    aee2:	465b      	mov	r3, fp
    aee4:	601e      	str	r6, [r3, #0]
    aee6:	9b07      	ldr	r3, [sp, #28]
    aee8:	2b00      	cmp	r3, #0
    aeea:	d108      	bne.n	aefe <_strtod_l+0xb2>
    aeec:	0020      	movs	r0, r4
    aeee:	0029      	movs	r1, r5
    aef0:	b023      	add	sp, #140	; 0x8c
    aef2:	bc3c      	pop	{r2, r3, r4, r5}
    aef4:	4690      	mov	r8, r2
    aef6:	4699      	mov	r9, r3
    aef8:	46a2      	mov	sl, r4
    aefa:	46ab      	mov	fp, r5
    aefc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    aefe:	2180      	movs	r1, #128	; 0x80
    af00:	0609      	lsls	r1, r1, #24
    af02:	186b      	adds	r3, r5, r1
    af04:	001d      	movs	r5, r3
    af06:	e7f1      	b.n	aeec <_strtod_l+0xa0>
    af08:	2200      	movs	r2, #0
    af0a:	9207      	str	r2, [sp, #28]
    af0c:	1c5a      	adds	r2, r3, #1
    af0e:	921d      	str	r2, [sp, #116]	; 0x74
    af10:	785c      	ldrb	r4, [r3, #1]
    af12:	4692      	mov	sl, r2
    af14:	2c00      	cmp	r4, #0
    af16:	d0dd      	beq.n	aed4 <_strtod_l+0x88>
    af18:	2300      	movs	r3, #0
    af1a:	930c      	str	r3, [sp, #48]	; 0x30
    af1c:	2c30      	cmp	r4, #48	; 0x30
    af1e:	d02d      	beq.n	af7c <_strtod_l+0x130>
    af20:	0023      	movs	r3, r4
    af22:	3b30      	subs	r3, #48	; 0x30
    af24:	2b09      	cmp	r3, #9
    af26:	d900      	bls.n	af2a <_strtod_l+0xde>
    af28:	e38c      	b.n	b644 <_strtod_l+0x7f8>
    af2a:	2300      	movs	r3, #0
    af2c:	4650      	mov	r0, sl
    af2e:	2500      	movs	r5, #0
    af30:	0019      	movs	r1, r3
    af32:	0022      	movs	r2, r4
    af34:	e00c      	b.n	af50 <_strtod_l+0x104>
    af36:	009c      	lsls	r4, r3, #2
    af38:	18e3      	adds	r3, r4, r3
    af3a:	005b      	lsls	r3, r3, #1
    af3c:	189b      	adds	r3, r3, r2
    af3e:	3b30      	subs	r3, #48	; 0x30
    af40:	3001      	adds	r0, #1
    af42:	901d      	str	r0, [sp, #116]	; 0x74
    af44:	7802      	ldrb	r2, [r0, #0]
    af46:	3501      	adds	r5, #1
    af48:	0014      	movs	r4, r2
    af4a:	3c30      	subs	r4, #48	; 0x30
    af4c:	2c09      	cmp	r4, #9
    af4e:	d8a0      	bhi.n	ae92 <_strtod_l+0x46>
    af50:	2d08      	cmp	r5, #8
    af52:	ddf0      	ble.n	af36 <_strtod_l+0xea>
    af54:	008c      	lsls	r4, r1, #2
    af56:	1864      	adds	r4, r4, r1
    af58:	0064      	lsls	r4, r4, #1
    af5a:	18a4      	adds	r4, r4, r2
    af5c:	0021      	movs	r1, r4
    af5e:	3930      	subs	r1, #48	; 0x30
    af60:	e7ee      	b.n	af40 <_strtod_l+0xf4>
    af62:	3301      	adds	r3, #1
    af64:	931d      	str	r3, [sp, #116]	; 0x74
    af66:	781c      	ldrb	r4, [r3, #0]
    af68:	2c2d      	cmp	r4, #45	; 0x2d
    af6a:	d800      	bhi.n	af6e <_strtod_l+0x122>
    af6c:	e78e      	b.n	ae8c <_strtod_l+0x40>
    af6e:	469a      	mov	sl, r3
    af70:	2300      	movs	r3, #0
    af72:	9307      	str	r3, [sp, #28]
    af74:	2300      	movs	r3, #0
    af76:	930c      	str	r3, [sp, #48]	; 0x30
    af78:	2c30      	cmp	r4, #48	; 0x30
    af7a:	d1d1      	bne.n	af20 <_strtod_l+0xd4>
    af7c:	4653      	mov	r3, sl
    af7e:	785b      	ldrb	r3, [r3, #1]
    af80:	2b58      	cmp	r3, #88	; 0x58
    af82:	d100      	bne.n	af86 <_strtod_l+0x13a>
    af84:	e334      	b.n	b5f0 <_strtod_l+0x7a4>
    af86:	2b78      	cmp	r3, #120	; 0x78
    af88:	d100      	bne.n	af8c <_strtod_l+0x140>
    af8a:	e331      	b.n	b5f0 <_strtod_l+0x7a4>
    af8c:	4653      	mov	r3, sl
    af8e:	3301      	adds	r3, #1
    af90:	001a      	movs	r2, r3
    af92:	931d      	str	r3, [sp, #116]	; 0x74
    af94:	7814      	ldrb	r4, [r2, #0]
    af96:	3301      	adds	r3, #1
    af98:	2c30      	cmp	r4, #48	; 0x30
    af9a:	d0f9      	beq.n	af90 <_strtod_l+0x144>
    af9c:	4692      	mov	sl, r2
    af9e:	2c00      	cmp	r4, #0
    afa0:	d100      	bne.n	afa4 <_strtod_l+0x158>
    afa2:	e08c      	b.n	b0be <_strtod_l+0x272>
    afa4:	2301      	movs	r3, #1
    afa6:	930c      	str	r3, [sp, #48]	; 0x30
    afa8:	e7ba      	b.n	af20 <_strtod_l+0xd4>
    afaa:	2201      	movs	r2, #1
    afac:	9207      	str	r2, [sp, #28]
    afae:	e7ad      	b.n	af0c <_strtod_l+0xc0>
    afb0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    afb2:	9b08      	ldr	r3, [sp, #32]
    afb4:	4694      	mov	ip, r2
    afb6:	4463      	add	r3, ip
    afb8:	931d      	str	r3, [sp, #116]	; 0x74
    afba:	781c      	ldrb	r4, [r3, #0]
    afbc:	2300      	movs	r3, #0
    afbe:	950a      	str	r5, [sp, #40]	; 0x28
    afc0:	0022      	movs	r2, r4
    afc2:	3a30      	subs	r2, #48	; 0x30
    afc4:	2a09      	cmp	r2, #9
    afc6:	d900      	bls.n	afca <_strtod_l+0x17e>
    afc8:	e0e2      	b.n	b190 <_strtod_l+0x344>
    afca:	1c5c      	adds	r4, r3, #1
    afcc:	4694      	mov	ip, r2
    afce:	2a00      	cmp	r2, #0
    afd0:	d101      	bne.n	afd6 <_strtod_l+0x18a>
    afd2:	f000 fe76 	bl	bcc2 <_strtod_l+0xe76>
    afd6:	1900      	adds	r0, r0, r4
    afd8:	195b      	adds	r3, r3, r5
    afda:	2c01      	cmp	r4, #1
    afdc:	d101      	bne.n	afe2 <_strtod_l+0x196>
    afde:	f000 fe6c 	bl	bcba <_strtod_l+0xe6e>
    afe2:	4644      	mov	r4, r8
    afe4:	e007      	b.n	aff6 <_strtod_l+0x1aa>
    afe6:	00a1      	lsls	r1, r4, #2
    afe8:	190c      	adds	r4, r1, r4
    afea:	0064      	lsls	r4, r4, #1
    afec:	429f      	cmp	r7, r3
    afee:	d101      	bne.n	aff4 <_strtod_l+0x1a8>
    aff0:	f000 fbef 	bl	b7d2 <_strtod_l+0x986>
    aff4:	003d      	movs	r5, r7
    aff6:	1c6f      	adds	r7, r5, #1
    aff8:	2d08      	cmp	r5, #8
    affa:	ddf4      	ble.n	afe6 <_strtod_l+0x19a>
    affc:	2f10      	cmp	r7, #16
    affe:	dcf5      	bgt.n	afec <_strtod_l+0x1a0>
    b000:	4649      	mov	r1, r9
    b002:	0089      	lsls	r1, r1, #2
    b004:	4449      	add	r1, r9
    b006:	0049      	lsls	r1, r1, #1
    b008:	4689      	mov	r9, r1
    b00a:	e7ef      	b.n	afec <_strtod_l+0x1a0>
    b00c:	002a      	movs	r2, r5
    b00e:	990c      	ldr	r1, [sp, #48]	; 0x30
    b010:	431a      	orrs	r2, r3
    b012:	430a      	orrs	r2, r1
    b014:	d100      	bne.n	b018 <_strtod_l+0x1cc>
    b016:	e75d      	b.n	aed4 <_strtod_l+0x88>
    b018:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    b01a:	1c72      	adds	r2, r6, #1
    b01c:	921d      	str	r2, [sp, #116]	; 0x74
    b01e:	7874      	ldrb	r4, [r6, #1]
    b020:	2c2b      	cmp	r4, #43	; 0x2b
    b022:	d100      	bne.n	b026 <_strtod_l+0x1da>
    b024:	e39a      	b.n	b75c <_strtod_l+0x910>
    b026:	2c2d      	cmp	r4, #45	; 0x2d
    b028:	d100      	bne.n	b02c <_strtod_l+0x1e0>
    b02a:	e230      	b.n	b48e <_strtod_l+0x642>
    b02c:	2200      	movs	r2, #0
    b02e:	920d      	str	r2, [sp, #52]	; 0x34
    b030:	0022      	movs	r2, r4
    b032:	3a30      	subs	r2, #48	; 0x30
    b034:	2a09      	cmp	r2, #9
    b036:	d900      	bls.n	b03a <_strtod_l+0x1ee>
    b038:	e2f5      	b.n	b626 <_strtod_l+0x7da>
    b03a:	2c30      	cmp	r4, #48	; 0x30
    b03c:	d106      	bne.n	b04c <_strtod_l+0x200>
    b03e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    b040:	3201      	adds	r2, #1
    b042:	921d      	str	r2, [sp, #116]	; 0x74
    b044:	7814      	ldrb	r4, [r2, #0]
    b046:	3201      	adds	r2, #1
    b048:	2c30      	cmp	r4, #48	; 0x30
    b04a:	d0fa      	beq.n	b042 <_strtod_l+0x1f6>
    b04c:	0021      	movs	r1, r4
    b04e:	3931      	subs	r1, #49	; 0x31
    b050:	2200      	movs	r2, #0
    b052:	2908      	cmp	r1, #8
    b054:	d900      	bls.n	b058 <_strtod_l+0x20c>
    b056:	e732      	b.n	aebe <_strtod_l+0x72>
    b058:	991d      	ldr	r1, [sp, #116]	; 0x74
    b05a:	0022      	movs	r2, r4
    b05c:	1c4c      	adds	r4, r1, #1
    b05e:	941d      	str	r4, [sp, #116]	; 0x74
    b060:	46a4      	mov	ip, r4
    b062:	784c      	ldrb	r4, [r1, #1]
    b064:	000f      	movs	r7, r1
    b066:	910e      	str	r1, [sp, #56]	; 0x38
    b068:	0021      	movs	r1, r4
    b06a:	3930      	subs	r1, #48	; 0x30
    b06c:	3a30      	subs	r2, #48	; 0x30
    b06e:	2909      	cmp	r1, #9
    b070:	d815      	bhi.n	b09e <_strtod_l+0x252>
    b072:	0039      	movs	r1, r7
    b074:	469c      	mov	ip, r3
    b076:	0027      	movs	r7, r4
    b078:	3102      	adds	r1, #2
    b07a:	0094      	lsls	r4, r2, #2
    b07c:	18a4      	adds	r4, r4, r2
    b07e:	911d      	str	r1, [sp, #116]	; 0x74
    b080:	0064      	lsls	r4, r4, #1
    b082:	19e4      	adds	r4, r4, r7
    b084:	780f      	ldrb	r7, [r1, #0]
    b086:	0022      	movs	r2, r4
    b088:	003c      	movs	r4, r7
    b08a:	3c30      	subs	r4, #48	; 0x30
    b08c:	000b      	movs	r3, r1
    b08e:	3a30      	subs	r2, #48	; 0x30
    b090:	3101      	adds	r1, #1
    b092:	2c09      	cmp	r4, #9
    b094:	d9f1      	bls.n	b07a <_strtod_l+0x22e>
    b096:	0019      	movs	r1, r3
    b098:	003c      	movs	r4, r7
    b09a:	4663      	mov	r3, ip
    b09c:	468c      	mov	ip, r1
    b09e:	4661      	mov	r1, ip
    b0a0:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    b0a2:	1bc9      	subs	r1, r1, r7
    b0a4:	2908      	cmp	r1, #8
    b0a6:	dd00      	ble.n	b0aa <_strtod_l+0x25e>
    b0a8:	e256      	b.n	b558 <_strtod_l+0x70c>
    b0aa:	493c      	ldr	r1, [pc, #240]	; (b19c <_strtod_l+0x350>)
    b0ac:	428a      	cmp	r2, r1
    b0ae:	dd00      	ble.n	b0b2 <_strtod_l+0x266>
    b0b0:	e252      	b.n	b558 <_strtod_l+0x70c>
    b0b2:	990d      	ldr	r1, [sp, #52]	; 0x34
    b0b4:	2900      	cmp	r1, #0
    b0b6:	d100      	bne.n	b0ba <_strtod_l+0x26e>
    b0b8:	e701      	b.n	aebe <_strtod_l+0x72>
    b0ba:	4252      	negs	r2, r2
    b0bc:	e6ff      	b.n	aebe <_strtod_l+0x72>
    b0be:	2400      	movs	r4, #0
    b0c0:	2500      	movs	r5, #0
    b0c2:	465b      	mov	r3, fp
    b0c4:	2b00      	cmp	r3, #0
    b0c6:	d100      	bne.n	b0ca <_strtod_l+0x27e>
    b0c8:	e70d      	b.n	aee6 <_strtod_l+0x9a>
    b0ca:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    b0cc:	e709      	b.n	aee2 <_strtod_l+0x96>
    b0ce:	1a13      	subs	r3, r2, r0
    b0d0:	9308      	str	r3, [sp, #32]
    b0d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b0d4:	2b00      	cmp	r3, #0
    b0d6:	d100      	bne.n	b0da <_strtod_l+0x28e>
    b0d8:	950a      	str	r5, [sp, #40]	; 0x28
    b0da:	002c      	movs	r4, r5
    b0dc:	2d10      	cmp	r5, #16
    b0de:	dd00      	ble.n	b0e2 <_strtod_l+0x296>
    b0e0:	2410      	movs	r4, #16
    b0e2:	4640      	mov	r0, r8
    b0e4:	f7fa fa68 	bl	55b8 <__aeabi_ui2d>
    b0e8:	9004      	str	r0, [sp, #16]
    b0ea:	9105      	str	r1, [sp, #20]
    b0ec:	2c09      	cmp	r4, #9
    b0ee:	dd15      	ble.n	b11c <_strtod_l+0x2d0>
    b0f0:	0022      	movs	r2, r4
    b0f2:	4b2b      	ldr	r3, [pc, #172]	; (b1a0 <_strtod_l+0x354>)
    b0f4:	3a09      	subs	r2, #9
    b0f6:	00d2      	lsls	r2, r2, #3
    b0f8:	189b      	adds	r3, r3, r2
    b0fa:	681a      	ldr	r2, [r3, #0]
    b0fc:	685b      	ldr	r3, [r3, #4]
    b0fe:	f7f9 fc4f 	bl	49a0 <__aeabi_dmul>
    b102:	0006      	movs	r6, r0
    b104:	4648      	mov	r0, r9
    b106:	000f      	movs	r7, r1
    b108:	f7fa fa56 	bl	55b8 <__aeabi_ui2d>
    b10c:	0002      	movs	r2, r0
    b10e:	000b      	movs	r3, r1
    b110:	0030      	movs	r0, r6
    b112:	0039      	movs	r1, r7
    b114:	f002 f8ee 	bl	d2f4 <__aeabi_dadd>
    b118:	9004      	str	r0, [sp, #16]
    b11a:	9105      	str	r1, [sp, #20]
    b11c:	2d0f      	cmp	r5, #15
    b11e:	dc45      	bgt.n	b1ac <_strtod_l+0x360>
    b120:	9b08      	ldr	r3, [sp, #32]
    b122:	2b00      	cmp	r3, #0
    b124:	d031      	beq.n	b18a <_strtod_l+0x33e>
    b126:	9b08      	ldr	r3, [sp, #32]
    b128:	2b00      	cmp	r3, #0
    b12a:	dc01      	bgt.n	b130 <_strtod_l+0x2e4>
    b12c:	f000 fc69 	bl	ba02 <_strtod_l+0xbb6>
    b130:	2b16      	cmp	r3, #22
    b132:	dd01      	ble.n	b138 <_strtod_l+0x2ec>
    b134:	f000 fc15 	bl	b962 <_strtod_l+0xb16>
    b138:	4919      	ldr	r1, [pc, #100]	; (b1a0 <_strtod_l+0x354>)
    b13a:	00da      	lsls	r2, r3, #3
    b13c:	1889      	adds	r1, r1, r2
    b13e:	6808      	ldr	r0, [r1, #0]
    b140:	6849      	ldr	r1, [r1, #4]
    b142:	9a04      	ldr	r2, [sp, #16]
    b144:	9b05      	ldr	r3, [sp, #20]
    b146:	f7f9 fc2b 	bl	49a0 <__aeabi_dmul>
    b14a:	0004      	movs	r4, r0
    b14c:	000d      	movs	r5, r1
    b14e:	e7b8      	b.n	b0c2 <_strtod_l+0x276>
    b150:	2c4e      	cmp	r4, #78	; 0x4e
    b152:	d009      	beq.n	b168 <_strtod_l+0x31c>
    b154:	dc01      	bgt.n	b15a <_strtod_l+0x30e>
    b156:	f000 fc2b 	bl	b9b0 <_strtod_l+0xb64>
    b15a:	2c69      	cmp	r4, #105	; 0x69
    b15c:	d101      	bne.n	b162 <_strtod_l+0x316>
    b15e:	f000 fc2b 	bl	b9b8 <_strtod_l+0xb6c>
    b162:	2c6e      	cmp	r4, #110	; 0x6e
    b164:	d000      	beq.n	b168 <_strtod_l+0x31c>
    b166:	e6b5      	b.n	aed4 <_strtod_l+0x88>
    b168:	490e      	ldr	r1, [pc, #56]	; (b1a4 <_strtod_l+0x358>)
    b16a:	a81d      	add	r0, sp, #116	; 0x74
    b16c:	f001 fd80 	bl	cc70 <__match>
    b170:	2800      	cmp	r0, #0
    b172:	d100      	bne.n	b176 <_strtod_l+0x32a>
    b174:	e6ae      	b.n	aed4 <_strtod_l+0x88>
    b176:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b178:	781b      	ldrb	r3, [r3, #0]
    b17a:	2b28      	cmp	r3, #40	; 0x28
    b17c:	d101      	bne.n	b182 <_strtod_l+0x336>
    b17e:	f000 fd0d 	bl	bb9c <_strtod_l+0xd50>
    b182:	4b09      	ldr	r3, [pc, #36]	; (b1a8 <_strtod_l+0x35c>)
    b184:	9305      	str	r3, [sp, #20]
    b186:	2300      	movs	r3, #0
    b188:	9304      	str	r3, [sp, #16]
    b18a:	9c04      	ldr	r4, [sp, #16]
    b18c:	9d05      	ldr	r5, [sp, #20]
    b18e:	e798      	b.n	b0c2 <_strtod_l+0x276>
    b190:	2201      	movs	r2, #1
    b192:	9208      	str	r2, [sp, #32]
    b194:	e68c      	b.n	aeb0 <_strtod_l+0x64>
    b196:	46c0      	nop			; (mov r8, r8)
    b198:	0001081c 	.word	0x0001081c
    b19c:	00004e1f 	.word	0x00004e1f
    b1a0:	00010748 	.word	0x00010748
    b1a4:	000108f8 	.word	0x000108f8
    b1a8:	fff80000 	.word	0xfff80000
    b1ac:	9b08      	ldr	r3, [sp, #32]
    b1ae:	1b2c      	subs	r4, r5, r4
    b1b0:	469c      	mov	ip, r3
    b1b2:	4464      	add	r4, ip
    b1b4:	2c00      	cmp	r4, #0
    b1b6:	dc00      	bgt.n	b1ba <_strtod_l+0x36e>
    b1b8:	e31f      	b.n	b7fa <_strtod_l+0x9ae>
    b1ba:	230f      	movs	r3, #15
    b1bc:	4023      	ands	r3, r4
    b1be:	d00a      	beq.n	b1d6 <_strtod_l+0x38a>
    b1c0:	49d9      	ldr	r1, [pc, #868]	; (b528 <_strtod_l+0x6dc>)
    b1c2:	00db      	lsls	r3, r3, #3
    b1c4:	18c9      	adds	r1, r1, r3
    b1c6:	6808      	ldr	r0, [r1, #0]
    b1c8:	6849      	ldr	r1, [r1, #4]
    b1ca:	9a04      	ldr	r2, [sp, #16]
    b1cc:	9b05      	ldr	r3, [sp, #20]
    b1ce:	f7f9 fbe7 	bl	49a0 <__aeabi_dmul>
    b1d2:	9004      	str	r0, [sp, #16]
    b1d4:	9105      	str	r1, [sp, #20]
    b1d6:	230f      	movs	r3, #15
    b1d8:	439c      	bics	r4, r3
    b1da:	d000      	beq.n	b1de <_strtod_l+0x392>
    b1dc:	e15d      	b.n	b49a <_strtod_l+0x64e>
    b1de:	2300      	movs	r3, #0
    b1e0:	930c      	str	r3, [sp, #48]	; 0x30
    b1e2:	4643      	mov	r3, r8
    b1e4:	9300      	str	r3, [sp, #0]
    b1e6:	002b      	movs	r3, r5
    b1e8:	9d09      	ldr	r5, [sp, #36]	; 0x24
    b1ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b1ec:	4651      	mov	r1, sl
    b1ee:	0028      	movs	r0, r5
    b1f0:	f7ff f970 	bl	a4d4 <__s2b>
    b1f4:	2800      	cmp	r0, #0
    b1f6:	d100      	bne.n	b1fa <_strtod_l+0x3ae>
    b1f8:	e255      	b.n	b6a6 <_strtod_l+0x85a>
    b1fa:	9908      	ldr	r1, [sp, #32]
    b1fc:	424b      	negs	r3, r1
    b1fe:	17ca      	asrs	r2, r1, #31
    b200:	401a      	ands	r2, r3
    b202:	920e      	str	r2, [sp, #56]	; 0x38
    b204:	43ca      	mvns	r2, r1
    b206:	000b      	movs	r3, r1
    b208:	17d2      	asrs	r2, r2, #31
    b20a:	4013      	ands	r3, r2
    b20c:	930d      	str	r3, [sp, #52]	; 0x34
    b20e:	2300      	movs	r3, #0
    b210:	4699      	mov	r9, r3
    b212:	4698      	mov	r8, r3
    b214:	465b      	mov	r3, fp
    b216:	4683      	mov	fp, r0
    b218:	9315      	str	r3, [sp, #84]	; 0x54
    b21a:	e0f4      	b.n	b406 <_strtod_l+0x5ba>
    b21c:	1ac9      	subs	r1, r1, r3
    b21e:	1a52      	subs	r2, r2, r1
    b220:	291f      	cmp	r1, #31
    b222:	dd00      	ble.n	b226 <_strtod_l+0x3da>
    b224:	e1b5      	b.n	b592 <_strtod_l+0x746>
    b226:	2301      	movs	r3, #1
    b228:	408b      	lsls	r3, r1
    b22a:	9310      	str	r3, [sp, #64]	; 0x40
    b22c:	2300      	movs	r3, #0
    b22e:	9311      	str	r3, [sp, #68]	; 0x44
    b230:	18bb      	adds	r3, r7, r2
    b232:	469a      	mov	sl, r3
    b234:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b236:	18b6      	adds	r6, r6, r2
    b238:	469c      	mov	ip, r3
    b23a:	003b      	movs	r3, r7
    b23c:	4466      	add	r6, ip
    b23e:	4557      	cmp	r7, sl
    b240:	dd00      	ble.n	b244 <_strtod_l+0x3f8>
    b242:	4653      	mov	r3, sl
    b244:	42b3      	cmp	r3, r6
    b246:	dd00      	ble.n	b24a <_strtod_l+0x3fe>
    b248:	0033      	movs	r3, r6
    b24a:	2b00      	cmp	r3, #0
    b24c:	dd04      	ble.n	b258 <_strtod_l+0x40c>
    b24e:	4652      	mov	r2, sl
    b250:	1ad2      	subs	r2, r2, r3
    b252:	4692      	mov	sl, r2
    b254:	1af6      	subs	r6, r6, r3
    b256:	1aff      	subs	r7, r7, r3
    b258:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b25a:	2b00      	cmp	r3, #0
    b25c:	d015      	beq.n	b28a <_strtod_l+0x43e>
    b25e:	4641      	mov	r1, r8
    b260:	001a      	movs	r2, r3
    b262:	0028      	movs	r0, r5
    b264:	f7ff fa7c 	bl	a760 <__pow5mult>
    b268:	4680      	mov	r8, r0
    b26a:	2800      	cmp	r0, #0
    b26c:	d100      	bne.n	b270 <_strtod_l+0x424>
    b26e:	e252      	b.n	b716 <_strtod_l+0x8ca>
    b270:	0001      	movs	r1, r0
    b272:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    b274:	0028      	movs	r0, r5
    b276:	f7ff f9c9 	bl	a60c <__multiply>
    b27a:	1e04      	subs	r4, r0, #0
    b27c:	d100      	bne.n	b280 <_strtod_l+0x434>
    b27e:	e24a      	b.n	b716 <_strtod_l+0x8ca>
    b280:	991e      	ldr	r1, [sp, #120]	; 0x78
    b282:	0028      	movs	r0, r5
    b284:	f7ff f8d6 	bl	a434 <_Bfree>
    b288:	941e      	str	r4, [sp, #120]	; 0x78
    b28a:	4653      	mov	r3, sl
    b28c:	2b00      	cmp	r3, #0
    b28e:	dd08      	ble.n	b2a2 <_strtod_l+0x456>
    b290:	4652      	mov	r2, sl
    b292:	991e      	ldr	r1, [sp, #120]	; 0x78
    b294:	0028      	movs	r0, r5
    b296:	f7ff fac3 	bl	a820 <__lshift>
    b29a:	901e      	str	r0, [sp, #120]	; 0x78
    b29c:	2800      	cmp	r0, #0
    b29e:	d100      	bne.n	b2a2 <_strtod_l+0x456>
    b2a0:	e3c2      	b.n	ba28 <_strtod_l+0xbdc>
    b2a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b2a4:	2b00      	cmp	r3, #0
    b2a6:	d008      	beq.n	b2ba <_strtod_l+0x46e>
    b2a8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    b2aa:	9908      	ldr	r1, [sp, #32]
    b2ac:	0028      	movs	r0, r5
    b2ae:	f7ff fa57 	bl	a760 <__pow5mult>
    b2b2:	9008      	str	r0, [sp, #32]
    b2b4:	2800      	cmp	r0, #0
    b2b6:	d100      	bne.n	b2ba <_strtod_l+0x46e>
    b2b8:	e22d      	b.n	b716 <_strtod_l+0x8ca>
    b2ba:	2e00      	cmp	r6, #0
    b2bc:	dd08      	ble.n	b2d0 <_strtod_l+0x484>
    b2be:	0032      	movs	r2, r6
    b2c0:	9908      	ldr	r1, [sp, #32]
    b2c2:	0028      	movs	r0, r5
    b2c4:	f7ff faac 	bl	a820 <__lshift>
    b2c8:	9008      	str	r0, [sp, #32]
    b2ca:	2800      	cmp	r0, #0
    b2cc:	d100      	bne.n	b2d0 <_strtod_l+0x484>
    b2ce:	e222      	b.n	b716 <_strtod_l+0x8ca>
    b2d0:	2f00      	cmp	r7, #0
    b2d2:	dd08      	ble.n	b2e6 <_strtod_l+0x49a>
    b2d4:	4641      	mov	r1, r8
    b2d6:	003a      	movs	r2, r7
    b2d8:	0028      	movs	r0, r5
    b2da:	f7ff faa1 	bl	a820 <__lshift>
    b2de:	4680      	mov	r8, r0
    b2e0:	2800      	cmp	r0, #0
    b2e2:	d100      	bne.n	b2e6 <_strtod_l+0x49a>
    b2e4:	e217      	b.n	b716 <_strtod_l+0x8ca>
    b2e6:	9a08      	ldr	r2, [sp, #32]
    b2e8:	991e      	ldr	r1, [sp, #120]	; 0x78
    b2ea:	0028      	movs	r0, r5
    b2ec:	f7ff fb12 	bl	a914 <__mdiff>
    b2f0:	4681      	mov	r9, r0
    b2f2:	2800      	cmp	r0, #0
    b2f4:	d100      	bne.n	b2f8 <_strtod_l+0x4ac>
    b2f6:	e20e      	b.n	b716 <_strtod_l+0x8ca>
    b2f8:	68c3      	ldr	r3, [r0, #12]
    b2fa:	4641      	mov	r1, r8
    b2fc:	930f      	str	r3, [sp, #60]	; 0x3c
    b2fe:	2300      	movs	r3, #0
    b300:	60c3      	str	r3, [r0, #12]
    b302:	f7ff faed 	bl	a8e0 <__mcmp>
    b306:	2800      	cmp	r0, #0
    b308:	da01      	bge.n	b30e <_strtod_l+0x4c2>
    b30a:	f000 fbd8 	bl	babe <_strtod_l+0xc72>
    b30e:	d100      	bne.n	b312 <_strtod_l+0x4c6>
    b310:	e38e      	b.n	ba30 <_strtod_l+0xbe4>
    b312:	4641      	mov	r1, r8
    b314:	4648      	mov	r0, r9
    b316:	f7ff fc89 	bl	ac2c <__ratio>
    b31a:	2380      	movs	r3, #128	; 0x80
    b31c:	2200      	movs	r2, #0
    b31e:	05db      	lsls	r3, r3, #23
    b320:	0006      	movs	r6, r0
    b322:	000f      	movs	r7, r1
    b324:	f7fa fa7c 	bl	5820 <__aeabi_dcmple>
    b328:	2800      	cmp	r0, #0
    b32a:	d100      	bne.n	b32e <_strtod_l+0x4e2>
    b32c:	e116      	b.n	b55c <_strtod_l+0x710>
    b32e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b330:	2b00      	cmp	r3, #0
    b332:	d100      	bne.n	b336 <_strtod_l+0x4ea>
    b334:	e135      	b.n	b5a2 <_strtod_l+0x756>
    b336:	9b05      	ldr	r3, [sp, #20]
    b338:	2600      	movs	r6, #0
    b33a:	9310      	str	r3, [sp, #64]	; 0x40
    b33c:	2300      	movs	r3, #0
    b33e:	9311      	str	r3, [sp, #68]	; 0x44
    b340:	4b7a      	ldr	r3, [pc, #488]	; (b52c <_strtod_l+0x6e0>)
    b342:	4f7a      	ldr	r7, [pc, #488]	; (b52c <_strtod_l+0x6e0>)
    b344:	9314      	str	r3, [sp, #80]	; 0x50
    b346:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b348:	4a79      	ldr	r2, [pc, #484]	; (b530 <_strtod_l+0x6e4>)
    b34a:	4013      	ands	r3, r2
    b34c:	469a      	mov	sl, r3
    b34e:	4b79      	ldr	r3, [pc, #484]	; (b534 <_strtod_l+0x6e8>)
    b350:	459a      	cmp	sl, r3
    b352:	d100      	bne.n	b356 <_strtod_l+0x50a>
    b354:	e1af      	b.n	b6b6 <_strtod_l+0x86a>
    b356:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b358:	2b00      	cmp	r3, #0
    b35a:	d02a      	beq.n	b3b2 <_strtod_l+0x566>
    b35c:	23d4      	movs	r3, #212	; 0xd4
    b35e:	04db      	lsls	r3, r3, #19
    b360:	459a      	cmp	sl, r3
    b362:	d826      	bhi.n	b3b2 <_strtod_l+0x566>
    b364:	9c14      	ldr	r4, [sp, #80]	; 0x50
    b366:	4a74      	ldr	r2, [pc, #464]	; (b538 <_strtod_l+0x6ec>)
    b368:	4b74      	ldr	r3, [pc, #464]	; (b53c <_strtod_l+0x6f0>)
    b36a:	9811      	ldr	r0, [sp, #68]	; 0x44
    b36c:	0021      	movs	r1, r4
    b36e:	f7fa fa57 	bl	5820 <__aeabi_dcmple>
    b372:	2800      	cmp	r0, #0
    b374:	d018      	beq.n	b3a8 <_strtod_l+0x55c>
    b376:	9811      	ldr	r0, [sp, #68]	; 0x44
    b378:	0021      	movs	r1, r4
    b37a:	f7f8 fd8f 	bl	3e9c <__aeabi_d2uiz>
    b37e:	2800      	cmp	r0, #0
    b380:	d100      	bne.n	b384 <_strtod_l+0x538>
    b382:	e310      	b.n	b9a6 <_strtod_l+0xb5a>
    b384:	f7fa f918 	bl	55b8 <__aeabi_ui2d>
    b388:	9011      	str	r0, [sp, #68]	; 0x44
    b38a:	9114      	str	r1, [sp, #80]	; 0x50
    b38c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b38e:	2b00      	cmp	r3, #0
    b390:	d000      	beq.n	b394 <_strtod_l+0x548>
    b392:	e303      	b.n	b99c <_strtod_l+0xb50>
    b394:	2280      	movs	r2, #128	; 0x80
    b396:	0612      	lsls	r2, r2, #24
    b398:	4694      	mov	ip, r2
    b39a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b39c:	9318      	str	r3, [sp, #96]	; 0x60
    b39e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b3a0:	4463      	add	r3, ip
    b3a2:	9319      	str	r3, [sp, #100]	; 0x64
    b3a4:	9e18      	ldr	r6, [sp, #96]	; 0x60
    b3a6:	9f19      	ldr	r7, [sp, #100]	; 0x64
    b3a8:	23d6      	movs	r3, #214	; 0xd6
    b3aa:	4652      	mov	r2, sl
    b3ac:	04db      	lsls	r3, r3, #19
    b3ae:	18fb      	adds	r3, r7, r3
    b3b0:	1a9f      	subs	r7, r3, r2
    b3b2:	980a      	ldr	r0, [sp, #40]	; 0x28
    b3b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
    b3b6:	f7ff fb49 	bl	aa4c <__ulp>
    b3ba:	0002      	movs	r2, r0
    b3bc:	000b      	movs	r3, r1
    b3be:	0030      	movs	r0, r6
    b3c0:	0039      	movs	r1, r7
    b3c2:	f7f9 faed 	bl	49a0 <__aeabi_dmul>
    b3c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b3c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b3ca:	f001 ff93 	bl	d2f4 <__aeabi_dadd>
    b3ce:	0003      	movs	r3, r0
    b3d0:	000c      	movs	r4, r1
    b3d2:	9304      	str	r3, [sp, #16]
    b3d4:	9405      	str	r4, [sp, #20]
    b3d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b3d8:	2b00      	cmp	r3, #0
    b3da:	d104      	bne.n	b3e6 <_strtod_l+0x59a>
    b3dc:	4b54      	ldr	r3, [pc, #336]	; (b530 <_strtod_l+0x6e4>)
    b3de:	4023      	ands	r3, r4
    b3e0:	459a      	cmp	sl, r3
    b3e2:	d100      	bne.n	b3e6 <_strtod_l+0x59a>
    b3e4:	e1bd      	b.n	b762 <_strtod_l+0x916>
    b3e6:	991e      	ldr	r1, [sp, #120]	; 0x78
    b3e8:	0028      	movs	r0, r5
    b3ea:	f7ff f823 	bl	a434 <_Bfree>
    b3ee:	9908      	ldr	r1, [sp, #32]
    b3f0:	0028      	movs	r0, r5
    b3f2:	f7ff f81f 	bl	a434 <_Bfree>
    b3f6:	4641      	mov	r1, r8
    b3f8:	0028      	movs	r0, r5
    b3fa:	f7ff f81b 	bl	a434 <_Bfree>
    b3fe:	4649      	mov	r1, r9
    b400:	0028      	movs	r0, r5
    b402:	f7ff f817 	bl	a434 <_Bfree>
    b406:	465b      	mov	r3, fp
    b408:	0028      	movs	r0, r5
    b40a:	6859      	ldr	r1, [r3, #4]
    b40c:	f7fe ffea 	bl	a3e4 <_Balloc>
    b410:	9008      	str	r0, [sp, #32]
    b412:	2800      	cmp	r0, #0
    b414:	d100      	bne.n	b418 <_strtod_l+0x5cc>
    b416:	e17e      	b.n	b716 <_strtod_l+0x8ca>
    b418:	465a      	mov	r2, fp
    b41a:	4659      	mov	r1, fp
    b41c:	6912      	ldr	r2, [r2, #16]
    b41e:	310c      	adds	r1, #12
    b420:	3202      	adds	r2, #2
    b422:	0092      	lsls	r2, r2, #2
    b424:	300c      	adds	r0, #12
    b426:	f7fe ff8b 	bl	a340 <memcpy>
    b42a:	9b04      	ldr	r3, [sp, #16]
    b42c:	9c05      	ldr	r4, [sp, #20]
    b42e:	0019      	movs	r1, r3
    b430:	0022      	movs	r2, r4
    b432:	ab20      	add	r3, sp, #128	; 0x80
    b434:	9301      	str	r3, [sp, #4]
    b436:	ab1f      	add	r3, sp, #124	; 0x7c
    b438:	910a      	str	r1, [sp, #40]	; 0x28
    b43a:	920b      	str	r2, [sp, #44]	; 0x2c
    b43c:	9300      	str	r3, [sp, #0]
    b43e:	000a      	movs	r2, r1
    b440:	0023      	movs	r3, r4
    b442:	0028      	movs	r0, r5
    b444:	f7ff fb94 	bl	ab70 <__d2b>
    b448:	901e      	str	r0, [sp, #120]	; 0x78
    b44a:	2800      	cmp	r0, #0
    b44c:	d100      	bne.n	b450 <_strtod_l+0x604>
    b44e:	e2eb      	b.n	ba28 <_strtod_l+0xbdc>
    b450:	2101      	movs	r1, #1
    b452:	0028      	movs	r0, r5
    b454:	f7ff f8d0 	bl	a5f8 <__i2b>
    b458:	4680      	mov	r8, r0
    b45a:	2800      	cmp	r0, #0
    b45c:	d100      	bne.n	b460 <_strtod_l+0x614>
    b45e:	e15a      	b.n	b716 <_strtod_l+0x8ca>
    b460:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b462:	2b00      	cmp	r3, #0
    b464:	da00      	bge.n	b468 <_strtod_l+0x61c>
    b466:	e090      	b.n	b58a <_strtod_l+0x73e>
    b468:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    b46a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
    b46c:	18d7      	adds	r7, r2, r3
    b46e:	990c      	ldr	r1, [sp, #48]	; 0x30
    b470:	9a20      	ldr	r2, [sp, #128]	; 0x80
    b472:	1a5b      	subs	r3, r3, r1
    b474:	2136      	movs	r1, #54	; 0x36
    b476:	189b      	adds	r3, r3, r2
    b478:	1a8a      	subs	r2, r1, r2
    b47a:	4931      	ldr	r1, [pc, #196]	; (b540 <_strtod_l+0x6f4>)
    b47c:	3b01      	subs	r3, #1
    b47e:	428b      	cmp	r3, r1
    b480:	da00      	bge.n	b484 <_strtod_l+0x638>
    b482:	e6cb      	b.n	b21c <_strtod_l+0x3d0>
    b484:	2300      	movs	r3, #0
    b486:	9311      	str	r3, [sp, #68]	; 0x44
    b488:	3301      	adds	r3, #1
    b48a:	9310      	str	r3, [sp, #64]	; 0x40
    b48c:	e6d0      	b.n	b230 <_strtod_l+0x3e4>
    b48e:	2201      	movs	r2, #1
    b490:	920d      	str	r2, [sp, #52]	; 0x34
    b492:	1cb2      	adds	r2, r6, #2
    b494:	921d      	str	r2, [sp, #116]	; 0x74
    b496:	78b4      	ldrb	r4, [r6, #2]
    b498:	e5ca      	b.n	b030 <_strtod_l+0x1e4>
    b49a:	239a      	movs	r3, #154	; 0x9a
    b49c:	005b      	lsls	r3, r3, #1
    b49e:	429c      	cmp	r4, r3
    b4a0:	dd00      	ble.n	b4a4 <_strtod_l+0x658>
    b4a2:	e100      	b.n	b6a6 <_strtod_l+0x85a>
    b4a4:	1124      	asrs	r4, r4, #4
    b4a6:	2c01      	cmp	r4, #1
    b4a8:	dc00      	bgt.n	b4ac <_strtod_l+0x660>
    b4aa:	e361      	b.n	bb70 <_strtod_l+0xd24>
    b4ac:	9804      	ldr	r0, [sp, #16]
    b4ae:	9905      	ldr	r1, [sp, #20]
    b4b0:	2201      	movs	r2, #1
    b4b2:	4b24      	ldr	r3, [pc, #144]	; (b544 <_strtod_l+0x6f8>)
    b4b4:	2700      	movs	r7, #0
    b4b6:	930c      	str	r3, [sp, #48]	; 0x30
    b4b8:	001e      	movs	r6, r3
    b4ba:	4691      	mov	r9, r2
    b4bc:	2300      	movs	r3, #0
    b4be:	464a      	mov	r2, r9
    b4c0:	4222      	tst	r2, r4
    b4c2:	d004      	beq.n	b4ce <_strtod_l+0x682>
    b4c4:	6832      	ldr	r2, [r6, #0]
    b4c6:	6873      	ldr	r3, [r6, #4]
    b4c8:	f7f9 fa6a 	bl	49a0 <__aeabi_dmul>
    b4cc:	2301      	movs	r3, #1
    b4ce:	3701      	adds	r7, #1
    b4d0:	1064      	asrs	r4, r4, #1
    b4d2:	3608      	adds	r6, #8
    b4d4:	2c01      	cmp	r4, #1
    b4d6:	d1f2      	bne.n	b4be <_strtod_l+0x672>
    b4d8:	2b00      	cmp	r3, #0
    b4da:	d001      	beq.n	b4e0 <_strtod_l+0x694>
    b4dc:	f000 fbf4 	bl	bcc8 <_strtod_l+0xe7c>
    b4e0:	4a19      	ldr	r2, [pc, #100]	; (b548 <_strtod_l+0x6fc>)
    b4e2:	9b05      	ldr	r3, [sp, #20]
    b4e4:	4694      	mov	ip, r2
    b4e6:	4463      	add	r3, ip
    b4e8:	9305      	str	r3, [sp, #20]
    b4ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b4ec:	00ff      	lsls	r7, r7, #3
    b4ee:	469c      	mov	ip, r3
    b4f0:	9a04      	ldr	r2, [sp, #16]
    b4f2:	9b05      	ldr	r3, [sp, #20]
    b4f4:	4467      	add	r7, ip
    b4f6:	6838      	ldr	r0, [r7, #0]
    b4f8:	6879      	ldr	r1, [r7, #4]
    b4fa:	f7f9 fa51 	bl	49a0 <__aeabi_dmul>
    b4fe:	000a      	movs	r2, r1
    b500:	0003      	movs	r3, r0
    b502:	0014      	movs	r4, r2
    b504:	9304      	str	r3, [sp, #16]
    b506:	9405      	str	r4, [sp, #20]
    b508:	4b09      	ldr	r3, [pc, #36]	; (b530 <_strtod_l+0x6e4>)
    b50a:	4013      	ands	r3, r2
    b50c:	4a0f      	ldr	r2, [pc, #60]	; (b54c <_strtod_l+0x700>)
    b50e:	4293      	cmp	r3, r2
    b510:	d900      	bls.n	b514 <_strtod_l+0x6c8>
    b512:	e0c8      	b.n	b6a6 <_strtod_l+0x85a>
    b514:	4a0e      	ldr	r2, [pc, #56]	; (b550 <_strtod_l+0x704>)
    b516:	4293      	cmp	r3, r2
    b518:	d800      	bhi.n	b51c <_strtod_l+0x6d0>
    b51a:	e308      	b.n	bb2e <_strtod_l+0xce2>
    b51c:	4b0d      	ldr	r3, [pc, #52]	; (b554 <_strtod_l+0x708>)
    b51e:	9305      	str	r3, [sp, #20]
    b520:	2301      	movs	r3, #1
    b522:	425b      	negs	r3, r3
    b524:	9304      	str	r3, [sp, #16]
    b526:	e65a      	b.n	b1de <_strtod_l+0x392>
    b528:	00010748 	.word	0x00010748
    b52c:	3ff00000 	.word	0x3ff00000
    b530:	7ff00000 	.word	0x7ff00000
    b534:	7fe00000 	.word	0x7fe00000
    b538:	ffc00000 	.word	0xffc00000
    b53c:	41dfffff 	.word	0x41dfffff
    b540:	fffffc02 	.word	0xfffffc02
    b544:	00010720 	.word	0x00010720
    b548:	fcb00000 	.word	0xfcb00000
    b54c:	7ca00000 	.word	0x7ca00000
    b550:	7c900000 	.word	0x7c900000
    b554:	7fefffff 	.word	0x7fefffff
    b558:	4ace      	ldr	r2, [pc, #824]	; (b894 <_strtod_l+0xa48>)
    b55a:	e5aa      	b.n	b0b2 <_strtod_l+0x266>
    b55c:	4bce      	ldr	r3, [pc, #824]	; (b898 <_strtod_l+0xa4c>)
    b55e:	2200      	movs	r2, #0
    b560:	0030      	movs	r0, r6
    b562:	0039      	movs	r1, r7
    b564:	f7f9 fa1c 	bl	49a0 <__aeabi_dmul>
    b568:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b56a:	9011      	str	r0, [sp, #68]	; 0x44
    b56c:	9114      	str	r1, [sp, #80]	; 0x50
    b56e:	2b00      	cmp	r3, #0
    b570:	d139      	bne.n	b5e6 <_strtod_l+0x79a>
    b572:	2280      	movs	r2, #128	; 0x80
    b574:	0612      	lsls	r2, r2, #24
    b576:	000b      	movs	r3, r1
    b578:	4694      	mov	ip, r2
    b57a:	4463      	add	r3, ip
    b57c:	9012      	str	r0, [sp, #72]	; 0x48
    b57e:	9313      	str	r3, [sp, #76]	; 0x4c
    b580:	9b05      	ldr	r3, [sp, #20]
    b582:	9e12      	ldr	r6, [sp, #72]	; 0x48
    b584:	9f13      	ldr	r7, [sp, #76]	; 0x4c
    b586:	9310      	str	r3, [sp, #64]	; 0x40
    b588:	e6dd      	b.n	b346 <_strtod_l+0x4fa>
    b58a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    b58c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    b58e:	1ad6      	subs	r6, r2, r3
    b590:	e76d      	b.n	b46e <_strtod_l+0x622>
    b592:	49c2      	ldr	r1, [pc, #776]	; (b89c <_strtod_l+0xa50>)
    b594:	1acb      	subs	r3, r1, r3
    b596:	2101      	movs	r1, #1
    b598:	4099      	lsls	r1, r3
    b59a:	2301      	movs	r3, #1
    b59c:	9111      	str	r1, [sp, #68]	; 0x44
    b59e:	9310      	str	r3, [sp, #64]	; 0x40
    b5a0:	e646      	b.n	b230 <_strtod_l+0x3e4>
    b5a2:	9904      	ldr	r1, [sp, #16]
    b5a4:	9a05      	ldr	r2, [sp, #20]
    b5a6:	2900      	cmp	r1, #0
    b5a8:	d140      	bne.n	b62c <_strtod_l+0x7e0>
    b5aa:	9210      	str	r2, [sp, #64]	; 0x40
    b5ac:	0313      	lsls	r3, r2, #12
    b5ae:	d142      	bne.n	b636 <_strtod_l+0x7ea>
    b5b0:	2200      	movs	r2, #0
    b5b2:	4bbb      	ldr	r3, [pc, #748]	; (b8a0 <_strtod_l+0xa54>)
    b5b4:	0030      	movs	r0, r6
    b5b6:	0039      	movs	r1, r7
    b5b8:	f7fa f928 	bl	580c <__aeabi_dcmplt>
    b5bc:	2800      	cmp	r0, #0
    b5be:	d000      	beq.n	b5c2 <_strtod_l+0x776>
    b5c0:	e2bf      	b.n	bb42 <_strtod_l+0xcf6>
    b5c2:	2200      	movs	r2, #0
    b5c4:	4bb4      	ldr	r3, [pc, #720]	; (b898 <_strtod_l+0xa4c>)
    b5c6:	0030      	movs	r0, r6
    b5c8:	0039      	movs	r1, r7
    b5ca:	f7f9 f9e9 	bl	49a0 <__aeabi_dmul>
    b5ce:	2280      	movs	r2, #128	; 0x80
    b5d0:	0612      	lsls	r2, r2, #24
    b5d2:	000b      	movs	r3, r1
    b5d4:	4694      	mov	ip, r2
    b5d6:	4463      	add	r3, ip
    b5d8:	9011      	str	r0, [sp, #68]	; 0x44
    b5da:	9114      	str	r1, [sp, #80]	; 0x50
    b5dc:	901a      	str	r0, [sp, #104]	; 0x68
    b5de:	931b      	str	r3, [sp, #108]	; 0x6c
    b5e0:	9e1a      	ldr	r6, [sp, #104]	; 0x68
    b5e2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
    b5e4:	e6af      	b.n	b346 <_strtod_l+0x4fa>
    b5e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
    b5e8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b5ea:	9212      	str	r2, [sp, #72]	; 0x48
    b5ec:	9313      	str	r3, [sp, #76]	; 0x4c
    b5ee:	e7c7      	b.n	b580 <_strtod_l+0x734>
    b5f0:	9b07      	ldr	r3, [sp, #28]
    b5f2:	9502      	str	r5, [sp, #8]
    b5f4:	9301      	str	r3, [sp, #4]
    b5f6:	ab1e      	add	r3, sp, #120	; 0x78
    b5f8:	9300      	str	r3, [sp, #0]
    b5fa:	4aaa      	ldr	r2, [pc, #680]	; (b8a4 <_strtod_l+0xa58>)
    b5fc:	ab1f      	add	r3, sp, #124	; 0x7c
    b5fe:	a91d      	add	r1, sp, #116	; 0x74
    b600:	9809      	ldr	r0, [sp, #36]	; 0x24
    b602:	f001 f8a1 	bl	c748 <__gethex>
    b606:	2407      	movs	r4, #7
    b608:	0005      	movs	r5, r0
    b60a:	4004      	ands	r4, r0
    b60c:	d100      	bne.n	b610 <_strtod_l+0x7c4>
    b60e:	e556      	b.n	b0be <_strtod_l+0x272>
    b610:	2c06      	cmp	r4, #6
    b612:	d000      	beq.n	b616 <_strtod_l+0x7ca>
    b614:	e15e      	b.n	b8d4 <_strtod_l+0xa88>
    b616:	4653      	mov	r3, sl
    b618:	3301      	adds	r3, #1
    b61a:	931d      	str	r3, [sp, #116]	; 0x74
    b61c:	2300      	movs	r3, #0
    b61e:	2400      	movs	r4, #0
    b620:	2500      	movs	r5, #0
    b622:	9307      	str	r3, [sp, #28]
    b624:	e54d      	b.n	b0c2 <_strtod_l+0x276>
    b626:	961d      	str	r6, [sp, #116]	; 0x74
    b628:	2200      	movs	r2, #0
    b62a:	e448      	b.n	aebe <_strtod_l+0x72>
    b62c:	2901      	cmp	r1, #1
    b62e:	d100      	bne.n	b632 <_strtod_l+0x7e6>
    b630:	e1d8      	b.n	b9e4 <_strtod_l+0xb98>
    b632:	9b05      	ldr	r3, [sp, #20]
    b634:	9310      	str	r3, [sp, #64]	; 0x40
    b636:	2300      	movs	r3, #0
    b638:	9311      	str	r3, [sp, #68]	; 0x44
    b63a:	4b99      	ldr	r3, [pc, #612]	; (b8a0 <_strtod_l+0xa54>)
    b63c:	2600      	movs	r6, #0
    b63e:	4f9a      	ldr	r7, [pc, #616]	; (b8a8 <_strtod_l+0xa5c>)
    b640:	9314      	str	r3, [sp, #80]	; 0x50
    b642:	e680      	b.n	b346 <_strtod_l+0x4fa>
    b644:	6839      	ldr	r1, [r7, #0]
    b646:	9a08      	ldr	r2, [sp, #32]
    b648:	4650      	mov	r0, sl
    b64a:	f001 fe09 	bl	d260 <strncmp>
    b64e:	900a      	str	r0, [sp, #40]	; 0x28
    b650:	2800      	cmp	r0, #0
    b652:	d009      	beq.n	b668 <_strtod_l+0x81c>
    b654:	2300      	movs	r3, #0
    b656:	2200      	movs	r2, #0
    b658:	930a      	str	r3, [sp, #40]	; 0x28
    b65a:	4699      	mov	r9, r3
    b65c:	4698      	mov	r8, r3
    b65e:	2000      	movs	r0, #0
    b660:	2500      	movs	r5, #0
    b662:	9208      	str	r2, [sp, #32]
    b664:	f7ff fc24 	bl	aeb0 <_strtod_l+0x64>
    b668:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    b66a:	9b08      	ldr	r3, [sp, #32]
    b66c:	4694      	mov	ip, r2
    b66e:	4463      	add	r3, ip
    b670:	931d      	str	r3, [sp, #116]	; 0x74
    b672:	781c      	ldrb	r4, [r3, #0]
    b674:	0019      	movs	r1, r3
    b676:	1c5a      	adds	r2, r3, #1
    b678:	2300      	movs	r3, #0
    b67a:	2c30      	cmp	r4, #48	; 0x30
    b67c:	d105      	bne.n	b68a <_strtod_l+0x83e>
    b67e:	921d      	str	r2, [sp, #116]	; 0x74
    b680:	7814      	ldrb	r4, [r2, #0]
    b682:	1a53      	subs	r3, r2, r1
    b684:	3201      	adds	r2, #1
    b686:	2c30      	cmp	r4, #48	; 0x30
    b688:	d0f9      	beq.n	b67e <_strtod_l+0x832>
    b68a:	0022      	movs	r2, r4
    b68c:	3a31      	subs	r2, #49	; 0x31
    b68e:	2a08      	cmp	r2, #8
    b690:	d800      	bhi.n	b694 <_strtod_l+0x848>
    b692:	e153      	b.n	b93c <_strtod_l+0xaf0>
    b694:	2200      	movs	r2, #0
    b696:	4691      	mov	r9, r2
    b698:	4690      	mov	r8, r2
    b69a:	3201      	adds	r2, #1
    b69c:	2000      	movs	r0, #0
    b69e:	2500      	movs	r5, #0
    b6a0:	9208      	str	r2, [sp, #32]
    b6a2:	f7ff fc05 	bl	aeb0 <_strtod_l+0x64>
    b6a6:	2322      	movs	r3, #34	; 0x22
    b6a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b6aa:	6013      	str	r3, [r2, #0]
    b6ac:	4b7f      	ldr	r3, [pc, #508]	; (b8ac <_strtod_l+0xa60>)
    b6ae:	9305      	str	r3, [sp, #20]
    b6b0:	2300      	movs	r3, #0
    b6b2:	9304      	str	r3, [sp, #16]
    b6b4:	e569      	b.n	b18a <_strtod_l+0x33e>
    b6b6:	497e      	ldr	r1, [pc, #504]	; (b8b0 <_strtod_l+0xa64>)
    b6b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
    b6ba:	468c      	mov	ip, r1
    b6bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b6be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    b6c0:	4462      	add	r2, ip
    b6c2:	9205      	str	r2, [sp, #20]
    b6c4:	960a      	str	r6, [sp, #40]	; 0x28
    b6c6:	970b      	str	r7, [sp, #44]	; 0x2c
    b6c8:	9e04      	ldr	r6, [sp, #16]
    b6ca:	9f05      	ldr	r7, [sp, #20]
    b6cc:	0030      	movs	r0, r6
    b6ce:	0039      	movs	r1, r7
    b6d0:	9316      	str	r3, [sp, #88]	; 0x58
    b6d2:	9417      	str	r4, [sp, #92]	; 0x5c
    b6d4:	f7ff f9ba 	bl	aa4c <__ulp>
    b6d8:	0002      	movs	r2, r0
    b6da:	000b      	movs	r3, r1
    b6dc:	980a      	ldr	r0, [sp, #40]	; 0x28
    b6de:	990b      	ldr	r1, [sp, #44]	; 0x2c
    b6e0:	f7f9 f95e 	bl	49a0 <__aeabi_dmul>
    b6e4:	0032      	movs	r2, r6
    b6e6:	003b      	movs	r3, r7
    b6e8:	f001 fe04 	bl	d2f4 <__aeabi_dadd>
    b6ec:	4b6f      	ldr	r3, [pc, #444]	; (b8ac <_strtod_l+0xa60>)
    b6ee:	4a71      	ldr	r2, [pc, #452]	; (b8b4 <_strtod_l+0xa68>)
    b6f0:	9004      	str	r0, [sp, #16]
    b6f2:	9105      	str	r1, [sp, #20]
    b6f4:	400b      	ands	r3, r1
    b6f6:	4293      	cmp	r3, r2
    b6f8:	d800      	bhi.n	b6fc <_strtod_l+0x8b0>
    b6fa:	e0c6      	b.n	b88a <_strtod_l+0xa3e>
    b6fc:	4b6e      	ldr	r3, [pc, #440]	; (b8b8 <_strtod_l+0xa6c>)
    b6fe:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    b700:	429a      	cmp	r2, r3
    b702:	d005      	beq.n	b710 <_strtod_l+0x8c4>
    b704:	4b6c      	ldr	r3, [pc, #432]	; (b8b8 <_strtod_l+0xa6c>)
    b706:	9305      	str	r3, [sp, #20]
    b708:	2301      	movs	r3, #1
    b70a:	425b      	negs	r3, r3
    b70c:	9304      	str	r3, [sp, #16]
    b70e:	e66a      	b.n	b3e6 <_strtod_l+0x59a>
    b710:	9b16      	ldr	r3, [sp, #88]	; 0x58
    b712:	3301      	adds	r3, #1
    b714:	d1f6      	bne.n	b704 <_strtod_l+0x8b8>
    b716:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b718:	46da      	mov	sl, fp
    b71a:	469b      	mov	fp, r3
    b71c:	981e      	ldr	r0, [sp, #120]	; 0x78
    b71e:	2322      	movs	r3, #34	; 0x22
    b720:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b722:	6013      	str	r3, [r2, #0]
    b724:	4b61      	ldr	r3, [pc, #388]	; (b8ac <_strtod_l+0xa60>)
    b726:	9305      	str	r3, [sp, #20]
    b728:	2300      	movs	r3, #0
    b72a:	9304      	str	r3, [sp, #16]
    b72c:	9c04      	ldr	r4, [sp, #16]
    b72e:	9d05      	ldr	r5, [sp, #20]
    b730:	9e09      	ldr	r6, [sp, #36]	; 0x24
    b732:	0001      	movs	r1, r0
    b734:	0030      	movs	r0, r6
    b736:	f7fe fe7d 	bl	a434 <_Bfree>
    b73a:	9908      	ldr	r1, [sp, #32]
    b73c:	0030      	movs	r0, r6
    b73e:	f7fe fe79 	bl	a434 <_Bfree>
    b742:	4641      	mov	r1, r8
    b744:	0030      	movs	r0, r6
    b746:	f7fe fe75 	bl	a434 <_Bfree>
    b74a:	4651      	mov	r1, sl
    b74c:	0030      	movs	r0, r6
    b74e:	f7fe fe71 	bl	a434 <_Bfree>
    b752:	4649      	mov	r1, r9
    b754:	0030      	movs	r0, r6
    b756:	f7fe fe6d 	bl	a434 <_Bfree>
    b75a:	e4b2      	b.n	b0c2 <_strtod_l+0x276>
    b75c:	2200      	movs	r2, #0
    b75e:	920d      	str	r2, [sp, #52]	; 0x34
    b760:	e697      	b.n	b492 <_strtod_l+0x646>
    b762:	9f11      	ldr	r7, [sp, #68]	; 0x44
    b764:	9e14      	ldr	r6, [sp, #80]	; 0x50
    b766:	0038      	movs	r0, r7
    b768:	0031      	movs	r1, r6
    b76a:	f7f9 feaf 	bl	54cc <__aeabi_d2iz>
    b76e:	f7f9 fee1 	bl	5534 <__aeabi_i2d>
    b772:	000b      	movs	r3, r1
    b774:	0002      	movs	r2, r0
    b776:	0031      	movs	r1, r6
    b778:	0038      	movs	r0, r7
    b77a:	f7f9 fb91 	bl	4ea0 <__aeabi_dsub>
    b77e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b780:	0006      	movs	r6, r0
    b782:	000f      	movs	r7, r1
    b784:	2b00      	cmp	r3, #0
    b786:	d112      	bne.n	b7ae <_strtod_l+0x962>
    b788:	9b04      	ldr	r3, [sp, #16]
    b78a:	2b00      	cmp	r3, #0
    b78c:	d10f      	bne.n	b7ae <_strtod_l+0x962>
    b78e:	0324      	lsls	r4, r4, #12
    b790:	d10d      	bne.n	b7ae <_strtod_l+0x962>
    b792:	4a4a      	ldr	r2, [pc, #296]	; (b8bc <_strtod_l+0xa70>)
    b794:	4b4a      	ldr	r3, [pc, #296]	; (b8c0 <_strtod_l+0xa74>)
    b796:	f7fa f839 	bl	580c <__aeabi_dcmplt>
    b79a:	2800      	cmp	r0, #0
    b79c:	d100      	bne.n	b7a0 <_strtod_l+0x954>
    b79e:	e622      	b.n	b3e6 <_strtod_l+0x59a>
    b7a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b7a2:	46da      	mov	sl, fp
    b7a4:	9c04      	ldr	r4, [sp, #16]
    b7a6:	9d05      	ldr	r5, [sp, #20]
    b7a8:	469b      	mov	fp, r3
    b7aa:	981e      	ldr	r0, [sp, #120]	; 0x78
    b7ac:	e7c0      	b.n	b730 <_strtod_l+0x8e4>
    b7ae:	4a43      	ldr	r2, [pc, #268]	; (b8bc <_strtod_l+0xa70>)
    b7b0:	4b44      	ldr	r3, [pc, #272]	; (b8c4 <_strtod_l+0xa78>)
    b7b2:	0030      	movs	r0, r6
    b7b4:	0039      	movs	r1, r7
    b7b6:	f7fa f829 	bl	580c <__aeabi_dcmplt>
    b7ba:	2800      	cmp	r0, #0
    b7bc:	d1f0      	bne.n	b7a0 <_strtod_l+0x954>
    b7be:	4a42      	ldr	r2, [pc, #264]	; (b8c8 <_strtod_l+0xa7c>)
    b7c0:	4b35      	ldr	r3, [pc, #212]	; (b898 <_strtod_l+0xa4c>)
    b7c2:	0030      	movs	r0, r6
    b7c4:	0039      	movs	r1, r7
    b7c6:	f7fa f835 	bl	5834 <__aeabi_dcmpgt>
    b7ca:	2800      	cmp	r0, #0
    b7cc:	d100      	bne.n	b7d0 <_strtod_l+0x984>
    b7ce:	e60a      	b.n	b3e6 <_strtod_l+0x59a>
    b7d0:	e7e6      	b.n	b7a0 <_strtod_l+0x954>
    b7d2:	46a0      	mov	r8, r4
    b7d4:	991d      	ldr	r1, [sp, #116]	; 0x74
    b7d6:	3502      	adds	r5, #2
    b7d8:	2f08      	cmp	r7, #8
    b7da:	dc00      	bgt.n	b7de <_strtod_l+0x992>
    b7dc:	e0b9      	b.n	b952 <_strtod_l+0xb06>
    b7de:	2300      	movs	r3, #0
    b7e0:	2d10      	cmp	r5, #16
    b7e2:	dc05      	bgt.n	b7f0 <_strtod_l+0x9a4>
    b7e4:	464c      	mov	r4, r9
    b7e6:	00a4      	lsls	r4, r4, #2
    b7e8:	444c      	add	r4, r9
    b7ea:	4691      	mov	r9, r2
    b7ec:	0064      	lsls	r4, r4, #1
    b7ee:	44a1      	add	r9, r4
    b7f0:	1c4a      	adds	r2, r1, #1
    b7f2:	921d      	str	r2, [sp, #116]	; 0x74
    b7f4:	784c      	ldrb	r4, [r1, #1]
    b7f6:	f7ff fbe3 	bl	afc0 <_strtod_l+0x174>
    b7fa:	2c00      	cmp	r4, #0
    b7fc:	d100      	bne.n	b800 <_strtod_l+0x9b4>
    b7fe:	e4ee      	b.n	b1de <_strtod_l+0x392>
    b800:	230f      	movs	r3, #15
    b802:	4264      	negs	r4, r4
    b804:	4023      	ands	r3, r4
    b806:	d00a      	beq.n	b81e <_strtod_l+0x9d2>
    b808:	9804      	ldr	r0, [sp, #16]
    b80a:	9905      	ldr	r1, [sp, #20]
    b80c:	4a2f      	ldr	r2, [pc, #188]	; (b8cc <_strtod_l+0xa80>)
    b80e:	00db      	lsls	r3, r3, #3
    b810:	18d3      	adds	r3, r2, r3
    b812:	681a      	ldr	r2, [r3, #0]
    b814:	685b      	ldr	r3, [r3, #4]
    b816:	f7f8 fd8f 	bl	4338 <__aeabi_ddiv>
    b81a:	9004      	str	r0, [sp, #16]
    b81c:	9105      	str	r1, [sp, #20]
    b81e:	1124      	asrs	r4, r4, #4
    b820:	d100      	bne.n	b824 <_strtod_l+0x9d8>
    b822:	e4dc      	b.n	b1de <_strtod_l+0x392>
    b824:	2c1f      	cmp	r4, #31
    b826:	dc29      	bgt.n	b87c <_strtod_l+0xa30>
    b828:	2310      	movs	r3, #16
    b82a:	4023      	ands	r3, r4
    b82c:	930c      	str	r3, [sp, #48]	; 0x30
    b82e:	d100      	bne.n	b832 <_strtod_l+0x9e6>
    b830:	e1c5      	b.n	bbbe <_strtod_l+0xd72>
    b832:	236a      	movs	r3, #106	; 0x6a
    b834:	930c      	str	r3, [sp, #48]	; 0x30
    b836:	2c00      	cmp	r4, #0
    b838:	dc00      	bgt.n	b83c <_strtod_l+0x9f0>
    b83a:	e1c4      	b.n	bbc6 <_strtod_l+0xd7a>
    b83c:	9804      	ldr	r0, [sp, #16]
    b83e:	9905      	ldr	r1, [sp, #20]
    b840:	2300      	movs	r3, #0
    b842:	2701      	movs	r7, #1
    b844:	4e22      	ldr	r6, [pc, #136]	; (b8d0 <_strtod_l+0xa84>)
    b846:	4227      	tst	r7, r4
    b848:	d004      	beq.n	b854 <_strtod_l+0xa08>
    b84a:	6832      	ldr	r2, [r6, #0]
    b84c:	6873      	ldr	r3, [r6, #4]
    b84e:	f7f9 f8a7 	bl	49a0 <__aeabi_dmul>
    b852:	2301      	movs	r3, #1
    b854:	1064      	asrs	r4, r4, #1
    b856:	3608      	adds	r6, #8
    b858:	2c00      	cmp	r4, #0
    b85a:	d1f4      	bne.n	b846 <_strtod_l+0x9fa>
    b85c:	2b00      	cmp	r3, #0
    b85e:	d000      	beq.n	b862 <_strtod_l+0xa16>
    b860:	e221      	b.n	bca6 <_strtod_l+0xe5a>
    b862:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b864:	2b00      	cmp	r3, #0
    b866:	d000      	beq.n	b86a <_strtod_l+0xa1e>
    b868:	e1ad      	b.n	bbc6 <_strtod_l+0xd7a>
    b86a:	9804      	ldr	r0, [sp, #16]
    b86c:	9905      	ldr	r1, [sp, #20]
    b86e:	2200      	movs	r2, #0
    b870:	2300      	movs	r3, #0
    b872:	f7f9 ffc5 	bl	5800 <__aeabi_dcmpeq>
    b876:	2800      	cmp	r0, #0
    b878:	d100      	bne.n	b87c <_strtod_l+0xa30>
    b87a:	e4b2      	b.n	b1e2 <_strtod_l+0x396>
    b87c:	2322      	movs	r3, #34	; 0x22
    b87e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b880:	2400      	movs	r4, #0
    b882:	6013      	str	r3, [r2, #0]
    b884:	2500      	movs	r5, #0
    b886:	f7ff fc1c 	bl	b0c2 <_strtod_l+0x276>
    b88a:	23d4      	movs	r3, #212	; 0xd4
    b88c:	049b      	lsls	r3, r3, #18
    b88e:	18cc      	adds	r4, r1, r3
    b890:	9405      	str	r4, [sp, #20]
    b892:	e5a0      	b.n	b3d6 <_strtod_l+0x58a>
    b894:	00004e1f 	.word	0x00004e1f
    b898:	3fe00000 	.word	0x3fe00000
    b89c:	fffffbe2 	.word	0xfffffbe2
    b8a0:	3ff00000 	.word	0x3ff00000
    b8a4:	000108fc 	.word	0x000108fc
    b8a8:	bff00000 	.word	0xbff00000
    b8ac:	7ff00000 	.word	0x7ff00000
    b8b0:	fcb00000 	.word	0xfcb00000
    b8b4:	7c9fffff 	.word	0x7c9fffff
    b8b8:	7fefffff 	.word	0x7fefffff
    b8bc:	94a03595 	.word	0x94a03595
    b8c0:	3fcfffff 	.word	0x3fcfffff
    b8c4:	3fdfffff 	.word	0x3fdfffff
    b8c8:	35afe535 	.word	0x35afe535
    b8cc:	00010748 	.word	0x00010748
    b8d0:	00010928 	.word	0x00010928
    b8d4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    b8d6:	2a00      	cmp	r2, #0
    b8d8:	d007      	beq.n	b8ea <_strtod_l+0xa9e>
    b8da:	2135      	movs	r1, #53	; 0x35
    b8dc:	a820      	add	r0, sp, #128	; 0x80
    b8de:	f7ff f9df 	bl	aca0 <__copybits>
    b8e2:	991e      	ldr	r1, [sp, #120]	; 0x78
    b8e4:	9809      	ldr	r0, [sp, #36]	; 0x24
    b8e6:	f7fe fda5 	bl	a434 <_Bfree>
    b8ea:	2c05      	cmp	r4, #5
    b8ec:	d808      	bhi.n	b900 <_strtod_l+0xab4>
    b8ee:	4bd1      	ldr	r3, [pc, #836]	; (bc34 <_strtod_l+0xde8>)
    b8f0:	00a4      	lsls	r4, r4, #2
    b8f2:	591b      	ldr	r3, [r3, r4]
    b8f4:	469f      	mov	pc, r3
    b8f6:	4bd0      	ldr	r3, [pc, #832]	; (bc38 <_strtod_l+0xdec>)
    b8f8:	9305      	str	r3, [sp, #20]
    b8fa:	2301      	movs	r3, #1
    b8fc:	425b      	negs	r3, r3
    b8fe:	9304      	str	r3, [sp, #16]
    b900:	072b      	lsls	r3, r5, #28
    b902:	d400      	bmi.n	b906 <_strtod_l+0xaba>
    b904:	e441      	b.n	b18a <_strtod_l+0x33e>
    b906:	2380      	movs	r3, #128	; 0x80
    b908:	9a05      	ldr	r2, [sp, #20]
    b90a:	061b      	lsls	r3, r3, #24
    b90c:	431a      	orrs	r2, r3
    b90e:	9205      	str	r2, [sp, #20]
    b910:	e43b      	b.n	b18a <_strtod_l+0x33e>
    b912:	4bca      	ldr	r3, [pc, #808]	; (bc3c <_strtod_l+0xdf0>)
    b914:	9305      	str	r3, [sp, #20]
    b916:	e7f3      	b.n	b900 <_strtod_l+0xab4>
    b918:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b91a:	9304      	str	r3, [sp, #16]
    b91c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b91e:	9305      	str	r3, [sp, #20]
    b920:	e7ee      	b.n	b900 <_strtod_l+0xab4>
    b922:	49c7      	ldr	r1, [pc, #796]	; (bc40 <_strtod_l+0xdf4>)
    b924:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b926:	468c      	mov	ip, r1
    b928:	9304      	str	r3, [sp, #16]
    b92a:	4ac6      	ldr	r2, [pc, #792]	; (bc44 <_strtod_l+0xdf8>)
    b92c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b92e:	401a      	ands	r2, r3
    b930:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b932:	4463      	add	r3, ip
    b934:	051b      	lsls	r3, r3, #20
    b936:	431a      	orrs	r2, r3
    b938:	9205      	str	r2, [sp, #20]
    b93a:	e7e1      	b.n	b900 <_strtod_l+0xab4>
    b93c:	2230      	movs	r2, #48	; 0x30
    b93e:	1c58      	adds	r0, r3, #1
    b940:	2300      	movs	r3, #0
    b942:	991d      	ldr	r1, [sp, #116]	; 0x74
    b944:	4252      	negs	r2, r2
    b946:	4694      	mov	ip, r2
    b948:	468a      	mov	sl, r1
    b94a:	4698      	mov	r8, r3
    b94c:	2501      	movs	r5, #1
    b94e:	4699      	mov	r9, r3
    b950:	44a4      	add	ip, r4
    b952:	4643      	mov	r3, r8
    b954:	009c      	lsls	r4, r3, #2
    b956:	4444      	add	r4, r8
    b958:	0064      	lsls	r4, r4, #1
    b95a:	4464      	add	r4, ip
    b95c:	46a0      	mov	r8, r4
    b95e:	2300      	movs	r3, #0
    b960:	e746      	b.n	b7f0 <_strtod_l+0x9a4>
    b962:	2325      	movs	r3, #37	; 0x25
    b964:	9e08      	ldr	r6, [sp, #32]
    b966:	1b5b      	subs	r3, r3, r5
    b968:	429e      	cmp	r6, r3
    b96a:	dd01      	ble.n	b970 <_strtod_l+0xb24>
    b96c:	f7ff fc1e 	bl	b1ac <_strtod_l+0x360>
    b970:	230f      	movs	r3, #15
    b972:	4cb5      	ldr	r4, [pc, #724]	; (bc48 <_strtod_l+0xdfc>)
    b974:	1b5d      	subs	r5, r3, r5
    b976:	00e9      	lsls	r1, r5, #3
    b978:	1b75      	subs	r5, r6, r5
    b97a:	1861      	adds	r1, r4, r1
    b97c:	00ed      	lsls	r5, r5, #3
    b97e:	1964      	adds	r4, r4, r5
    b980:	9a04      	ldr	r2, [sp, #16]
    b982:	9b05      	ldr	r3, [sp, #20]
    b984:	6808      	ldr	r0, [r1, #0]
    b986:	6849      	ldr	r1, [r1, #4]
    b988:	f7f9 f80a 	bl	49a0 <__aeabi_dmul>
    b98c:	6822      	ldr	r2, [r4, #0]
    b98e:	6863      	ldr	r3, [r4, #4]
    b990:	f7f9 f806 	bl	49a0 <__aeabi_dmul>
    b994:	0004      	movs	r4, r0
    b996:	000d      	movs	r5, r1
    b998:	f7ff fb93 	bl	b0c2 <_strtod_l+0x276>
    b99c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    b99e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b9a0:	9218      	str	r2, [sp, #96]	; 0x60
    b9a2:	9319      	str	r3, [sp, #100]	; 0x64
    b9a4:	e4fe      	b.n	b3a4 <_strtod_l+0x558>
    b9a6:	2300      	movs	r3, #0
    b9a8:	9311      	str	r3, [sp, #68]	; 0x44
    b9aa:	4ba8      	ldr	r3, [pc, #672]	; (bc4c <_strtod_l+0xe00>)
    b9ac:	9314      	str	r3, [sp, #80]	; 0x50
    b9ae:	e4ed      	b.n	b38c <_strtod_l+0x540>
    b9b0:	2c49      	cmp	r4, #73	; 0x49
    b9b2:	d001      	beq.n	b9b8 <_strtod_l+0xb6c>
    b9b4:	f7ff fa8e 	bl	aed4 <_strtod_l+0x88>
    b9b8:	49a5      	ldr	r1, [pc, #660]	; (bc50 <_strtod_l+0xe04>)
    b9ba:	a81d      	add	r0, sp, #116	; 0x74
    b9bc:	f001 f958 	bl	cc70 <__match>
    b9c0:	2800      	cmp	r0, #0
    b9c2:	d101      	bne.n	b9c8 <_strtod_l+0xb7c>
    b9c4:	f7ff fa86 	bl	aed4 <_strtod_l+0x88>
    b9c8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b9ca:	49a2      	ldr	r1, [pc, #648]	; (bc54 <_strtod_l+0xe08>)
    b9cc:	3b01      	subs	r3, #1
    b9ce:	a81d      	add	r0, sp, #116	; 0x74
    b9d0:	931d      	str	r3, [sp, #116]	; 0x74
    b9d2:	f001 f94d 	bl	cc70 <__match>
    b9d6:	2800      	cmp	r0, #0
    b9d8:	d000      	beq.n	b9dc <_strtod_l+0xb90>
    b9da:	e667      	b.n	b6ac <_strtod_l+0x860>
    b9dc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b9de:	3301      	adds	r3, #1
    b9e0:	931d      	str	r3, [sp, #116]	; 0x74
    b9e2:	e663      	b.n	b6ac <_strtod_l+0x860>
    b9e4:	9b05      	ldr	r3, [sp, #20]
    b9e6:	9310      	str	r3, [sp, #64]	; 0x40
    b9e8:	2b00      	cmp	r3, #0
    b9ea:	d000      	beq.n	b9ee <_strtod_l+0xba2>
    b9ec:	e623      	b.n	b636 <_strtod_l+0x7ea>
    b9ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b9f0:	46da      	mov	sl, fp
    b9f2:	469b      	mov	fp, r3
    b9f4:	2322      	movs	r3, #34	; 0x22
    b9f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b9f8:	981e      	ldr	r0, [sp, #120]	; 0x78
    b9fa:	6013      	str	r3, [r2, #0]
    b9fc:	2400      	movs	r4, #0
    b9fe:	2500      	movs	r5, #0
    ba00:	e696      	b.n	b730 <_strtod_l+0x8e4>
    ba02:	9a08      	ldr	r2, [sp, #32]
    ba04:	0013      	movs	r3, r2
    ba06:	3316      	adds	r3, #22
    ba08:	da01      	bge.n	ba0e <_strtod_l+0xbc2>
    ba0a:	f7ff fbcf 	bl	b1ac <_strtod_l+0x360>
    ba0e:	00d0      	lsls	r0, r2, #3
    ba10:	4a8d      	ldr	r2, [pc, #564]	; (bc48 <_strtod_l+0xdfc>)
    ba12:	1a12      	subs	r2, r2, r0
    ba14:	6853      	ldr	r3, [r2, #4]
    ba16:	6812      	ldr	r2, [r2, #0]
    ba18:	9804      	ldr	r0, [sp, #16]
    ba1a:	9905      	ldr	r1, [sp, #20]
    ba1c:	f7f8 fc8c 	bl	4338 <__aeabi_ddiv>
    ba20:	0004      	movs	r4, r0
    ba22:	000d      	movs	r5, r1
    ba24:	f7ff fb4d 	bl	b0c2 <_strtod_l+0x276>
    ba28:	9b15      	ldr	r3, [sp, #84]	; 0x54
    ba2a:	46da      	mov	sl, fp
    ba2c:	469b      	mov	fp, r3
    ba2e:	e676      	b.n	b71e <_strtod_l+0x8d2>
    ba30:	9b15      	ldr	r3, [sp, #84]	; 0x54
    ba32:	46da      	mov	sl, fp
    ba34:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    ba36:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    ba38:	469b      	mov	fp, r3
    ba3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ba3c:	2b00      	cmp	r3, #0
    ba3e:	d100      	bne.n	ba42 <_strtod_l+0xbf6>
    ba40:	e08d      	b.n	bb5e <_strtod_l+0xd12>
    ba42:	9804      	ldr	r0, [sp, #16]
    ba44:	9905      	ldr	r1, [sp, #20]
    ba46:	030b      	lsls	r3, r1, #12
    ba48:	000a      	movs	r2, r1
    ba4a:	4983      	ldr	r1, [pc, #524]	; (bc58 <_strtod_l+0xe0c>)
    ba4c:	0b1b      	lsrs	r3, r3, #12
    ba4e:	428b      	cmp	r3, r1
    ba50:	d100      	bne.n	ba54 <_strtod_l+0xc08>
    ba52:	e0cc      	b.n	bbee <_strtod_l+0xda2>
    ba54:	9b11      	ldr	r3, [sp, #68]	; 0x44
    ba56:	2b00      	cmp	r3, #0
    ba58:	d100      	bne.n	ba5c <_strtod_l+0xc10>
    ba5a:	e07b      	b.n	bb54 <_strtod_l+0xd08>
    ba5c:	9a05      	ldr	r2, [sp, #20]
    ba5e:	4213      	tst	r3, r2
    ba60:	d010      	beq.n	ba84 <_strtod_l+0xc38>
    ba62:	9804      	ldr	r0, [sp, #16]
    ba64:	9905      	ldr	r1, [sp, #20]
    ba66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ba68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    ba6a:	2b00      	cmp	r3, #0
    ba6c:	d100      	bne.n	ba70 <_strtod_l+0xc24>
    ba6e:	e083      	b.n	bb78 <_strtod_l+0xd2c>
    ba70:	f7ff f9d4 	bl	ae1c <sulp>
    ba74:	0002      	movs	r2, r0
    ba76:	000b      	movs	r3, r1
    ba78:	0020      	movs	r0, r4
    ba7a:	0029      	movs	r1, r5
    ba7c:	f001 fc3a 	bl	d2f4 <__aeabi_dadd>
    ba80:	0004      	movs	r4, r0
    ba82:	000d      	movs	r5, r1
    ba84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ba86:	2b00      	cmp	r3, #0
    ba88:	d017      	beq.n	baba <_strtod_l+0xc6e>
    ba8a:	4b74      	ldr	r3, [pc, #464]	; (bc5c <_strtod_l+0xe10>)
    ba8c:	0020      	movs	r0, r4
    ba8e:	9317      	str	r3, [sp, #92]	; 0x5c
    ba90:	2300      	movs	r3, #0
    ba92:	9316      	str	r3, [sp, #88]	; 0x58
    ba94:	9a16      	ldr	r2, [sp, #88]	; 0x58
    ba96:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    ba98:	0029      	movs	r1, r5
    ba9a:	f7f8 ff81 	bl	49a0 <__aeabi_dmul>
    ba9e:	0002      	movs	r2, r0
    baa0:	000b      	movs	r3, r1
    baa2:	0004      	movs	r4, r0
    baa4:	000d      	movs	r5, r1
    baa6:	9204      	str	r2, [sp, #16]
    baa8:	9305      	str	r3, [sp, #20]
    baaa:	2900      	cmp	r1, #0
    baac:	d105      	bne.n	baba <_strtod_l+0xc6e>
    baae:	9b04      	ldr	r3, [sp, #16]
    bab0:	2b00      	cmp	r3, #0
    bab2:	d102      	bne.n	baba <_strtod_l+0xc6e>
    bab4:	2322      	movs	r3, #34	; 0x22
    bab6:	9a09      	ldr	r2, [sp, #36]	; 0x24
    bab8:	6013      	str	r3, [r2, #0]
    baba:	981e      	ldr	r0, [sp, #120]	; 0x78
    babc:	e638      	b.n	b730 <_strtod_l+0x8e4>
    babe:	9b15      	ldr	r3, [sp, #84]	; 0x54
    bac0:	46da      	mov	sl, fp
    bac2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    bac4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    bac6:	469b      	mov	fp, r3
    bac8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    baca:	2b00      	cmp	r3, #0
    bacc:	d1da      	bne.n	ba84 <_strtod_l+0xc38>
    bace:	9904      	ldr	r1, [sp, #16]
    bad0:	9a05      	ldr	r2, [sp, #20]
    bad2:	2900      	cmp	r1, #0
    bad4:	d1d6      	bne.n	ba84 <_strtod_l+0xc38>
    bad6:	0313      	lsls	r3, r2, #12
    bad8:	d1d4      	bne.n	ba84 <_strtod_l+0xc38>
    bada:	4b58      	ldr	r3, [pc, #352]	; (bc3c <_strtod_l+0xdf0>)
    badc:	4013      	ands	r3, r2
    bade:	22d6      	movs	r2, #214	; 0xd6
    bae0:	04d2      	lsls	r2, r2, #19
    bae2:	4293      	cmp	r3, r2
    bae4:	d9ce      	bls.n	ba84 <_strtod_l+0xc38>
    bae6:	464b      	mov	r3, r9
    bae8:	695b      	ldr	r3, [r3, #20]
    baea:	2b00      	cmp	r3, #0
    baec:	d103      	bne.n	baf6 <_strtod_l+0xcaa>
    baee:	464b      	mov	r3, r9
    baf0:	691b      	ldr	r3, [r3, #16]
    baf2:	2b01      	cmp	r3, #1
    baf4:	ddc6      	ble.n	ba84 <_strtod_l+0xc38>
    baf6:	4649      	mov	r1, r9
    baf8:	2201      	movs	r2, #1
    bafa:	9809      	ldr	r0, [sp, #36]	; 0x24
    bafc:	f7fe fe90 	bl	a820 <__lshift>
    bb00:	4641      	mov	r1, r8
    bb02:	4681      	mov	r9, r0
    bb04:	f7fe feec 	bl	a8e0 <__mcmp>
    bb08:	2800      	cmp	r0, #0
    bb0a:	ddbb      	ble.n	ba84 <_strtod_l+0xc38>
    bb0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bb0e:	2b00      	cmp	r3, #0
    bb10:	d100      	bne.n	bb14 <_strtod_l+0xcc8>
    bb12:	e0b2      	b.n	bc7a <_strtod_l+0xe2e>
    bb14:	9a05      	ldr	r2, [sp, #20]
    bb16:	4b49      	ldr	r3, [pc, #292]	; (bc3c <_strtod_l+0xdf0>)
    bb18:	4013      	ands	r3, r2
    bb1a:	22d6      	movs	r2, #214	; 0xd6
    bb1c:	04d2      	lsls	r2, r2, #19
    bb1e:	4293      	cmp	r3, r2
    bb20:	dd00      	ble.n	bb24 <_strtod_l+0xcd8>
    bb22:	e0aa      	b.n	bc7a <_strtod_l+0xe2e>
    bb24:	22dc      	movs	r2, #220	; 0xdc
    bb26:	0492      	lsls	r2, r2, #18
    bb28:	4293      	cmp	r3, r2
    bb2a:	dcae      	bgt.n	ba8a <_strtod_l+0xc3e>
    bb2c:	e762      	b.n	b9f4 <_strtod_l+0xba8>
    bb2e:	22d4      	movs	r2, #212	; 0xd4
    bb30:	0492      	lsls	r2, r2, #18
    bb32:	0023      	movs	r3, r4
    bb34:	4694      	mov	ip, r2
    bb36:	4463      	add	r3, ip
    bb38:	9305      	str	r3, [sp, #20]
    bb3a:	2300      	movs	r3, #0
    bb3c:	930c      	str	r3, [sp, #48]	; 0x30
    bb3e:	f7ff fb50 	bl	b1e2 <_strtod_l+0x396>
    bb42:	2300      	movs	r3, #0
    bb44:	4c46      	ldr	r4, [pc, #280]	; (bc60 <_strtod_l+0xe14>)
    bb46:	931a      	str	r3, [sp, #104]	; 0x68
    bb48:	941b      	str	r4, [sp, #108]	; 0x6c
    bb4a:	2300      	movs	r3, #0
    bb4c:	9311      	str	r3, [sp, #68]	; 0x44
    bb4e:	4b45      	ldr	r3, [pc, #276]	; (bc64 <_strtod_l+0xe18>)
    bb50:	9314      	str	r3, [sp, #80]	; 0x50
    bb52:	e545      	b.n	b5e0 <_strtod_l+0x794>
    bb54:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bb56:	9a04      	ldr	r2, [sp, #16]
    bb58:	4213      	tst	r3, r2
    bb5a:	d093      	beq.n	ba84 <_strtod_l+0xc38>
    bb5c:	e781      	b.n	ba62 <_strtod_l+0xc16>
    bb5e:	9904      	ldr	r1, [sp, #16]
    bb60:	9a05      	ldr	r2, [sp, #20]
    bb62:	0313      	lsls	r3, r2, #12
    bb64:	d000      	beq.n	bb68 <_strtod_l+0xd1c>
    bb66:	e775      	b.n	ba54 <_strtod_l+0xc08>
    bb68:	2900      	cmp	r1, #0
    bb6a:	d000      	beq.n	bb6e <_strtod_l+0xd22>
    bb6c:	e772      	b.n	ba54 <_strtod_l+0xc08>
    bb6e:	e7cd      	b.n	bb0c <_strtod_l+0xcc0>
    bb70:	4b3d      	ldr	r3, [pc, #244]	; (bc68 <_strtod_l+0xe1c>)
    bb72:	2700      	movs	r7, #0
    bb74:	930c      	str	r3, [sp, #48]	; 0x30
    bb76:	e4b3      	b.n	b4e0 <_strtod_l+0x694>
    bb78:	f7ff f950 	bl	ae1c <sulp>
    bb7c:	0002      	movs	r2, r0
    bb7e:	000b      	movs	r3, r1
    bb80:	0020      	movs	r0, r4
    bb82:	0029      	movs	r1, r5
    bb84:	f7f9 f98c 	bl	4ea0 <__aeabi_dsub>
    bb88:	2200      	movs	r2, #0
    bb8a:	2300      	movs	r3, #0
    bb8c:	0004      	movs	r4, r0
    bb8e:	000d      	movs	r5, r1
    bb90:	f7f9 fe36 	bl	5800 <__aeabi_dcmpeq>
    bb94:	2800      	cmp	r0, #0
    bb96:	d000      	beq.n	bb9a <_strtod_l+0xd4e>
    bb98:	e72c      	b.n	b9f4 <_strtod_l+0xba8>
    bb9a:	e773      	b.n	ba84 <_strtod_l+0xc38>
    bb9c:	aa20      	add	r2, sp, #128	; 0x80
    bb9e:	4933      	ldr	r1, [pc, #204]	; (bc6c <_strtod_l+0xe20>)
    bba0:	a81d      	add	r0, sp, #116	; 0x74
    bba2:	f001 f87b 	bl	cc9c <__hexnan>
    bba6:	2805      	cmp	r0, #5
    bba8:	d001      	beq.n	bbae <_strtod_l+0xd62>
    bbaa:	f7ff faea 	bl	b182 <_strtod_l+0x336>
    bbae:	9b21      	ldr	r3, [sp, #132]	; 0x84
    bbb0:	4a22      	ldr	r2, [pc, #136]	; (bc3c <_strtod_l+0xdf0>)
    bbb2:	431a      	orrs	r2, r3
    bbb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bbb6:	9205      	str	r2, [sp, #20]
    bbb8:	9304      	str	r3, [sp, #16]
    bbba:	f7ff fae6 	bl	b18a <_strtod_l+0x33e>
    bbbe:	2c00      	cmp	r4, #0
    bbc0:	dd00      	ble.n	bbc4 <_strtod_l+0xd78>
    bbc2:	e63b      	b.n	b83c <_strtod_l+0x9f0>
    bbc4:	e651      	b.n	b86a <_strtod_l+0xa1e>
    bbc6:	9b04      	ldr	r3, [sp, #16]
    bbc8:	9c05      	ldr	r4, [sp, #20]
    bbca:	236b      	movs	r3, #107	; 0x6b
    bbcc:	0061      	lsls	r1, r4, #1
    bbce:	0d49      	lsrs	r1, r1, #21
    bbd0:	0022      	movs	r2, r4
    bbd2:	1a5b      	subs	r3, r3, r1
    bbd4:	2b00      	cmp	r3, #0
    bbd6:	dc00      	bgt.n	bbda <_strtod_l+0xd8e>
    bbd8:	e647      	b.n	b86a <_strtod_l+0xa1e>
    bbda:	2b1f      	cmp	r3, #31
    bbdc:	dd5c      	ble.n	bc98 <_strtod_l+0xe4c>
    bbde:	2100      	movs	r1, #0
    bbe0:	9104      	str	r1, [sp, #16]
    bbe2:	2b34      	cmp	r3, #52	; 0x34
    bbe4:	dd62      	ble.n	bcac <_strtod_l+0xe60>
    bbe6:	23dc      	movs	r3, #220	; 0xdc
    bbe8:	049b      	lsls	r3, r3, #18
    bbea:	9305      	str	r3, [sp, #20]
    bbec:	e63d      	b.n	b86a <_strtod_l+0xa1e>
    bbee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bbf0:	9904      	ldr	r1, [sp, #16]
    bbf2:	2b00      	cmp	r3, #0
    bbf4:	d03e      	beq.n	bc74 <_strtod_l+0xe28>
    bbf6:	20d4      	movs	r0, #212	; 0xd4
    bbf8:	4b10      	ldr	r3, [pc, #64]	; (bc3c <_strtod_l+0xdf0>)
    bbfa:	04c0      	lsls	r0, r0, #19
    bbfc:	4013      	ands	r3, r2
    bbfe:	4283      	cmp	r3, r0
    bc00:	d838      	bhi.n	bc74 <_strtod_l+0xe28>
    bc02:	206b      	movs	r0, #107	; 0x6b
    bc04:	0d1b      	lsrs	r3, r3, #20
    bc06:	1ac0      	subs	r0, r0, r3
    bc08:	2301      	movs	r3, #1
    bc0a:	425b      	negs	r3, r3
    bc0c:	4083      	lsls	r3, r0
    bc0e:	428b      	cmp	r3, r1
    bc10:	d000      	beq.n	bc14 <_strtod_l+0xdc8>
    bc12:	e71f      	b.n	ba54 <_strtod_l+0xc08>
    bc14:	4916      	ldr	r1, [pc, #88]	; (bc70 <_strtod_l+0xe24>)
    bc16:	428a      	cmp	r2, r1
    bc18:	d05a      	beq.n	bcd0 <_strtod_l+0xe84>
    bc1a:	2180      	movs	r1, #128	; 0x80
    bc1c:	4b07      	ldr	r3, [pc, #28]	; (bc3c <_strtod_l+0xdf0>)
    bc1e:	0349      	lsls	r1, r1, #13
    bc20:	401a      	ands	r2, r3
    bc22:	0013      	movs	r3, r2
    bc24:	468c      	mov	ip, r1
    bc26:	4463      	add	r3, ip
    bc28:	9305      	str	r3, [sp, #20]
    bc2a:	2300      	movs	r3, #0
    bc2c:	9304      	str	r3, [sp, #16]
    bc2e:	9c04      	ldr	r4, [sp, #16]
    bc30:	9d05      	ldr	r5, [sp, #20]
    bc32:	e727      	b.n	ba84 <_strtod_l+0xc38>
    bc34:	000108d4 	.word	0x000108d4
    bc38:	7fffffff 	.word	0x7fffffff
    bc3c:	7ff00000 	.word	0x7ff00000
    bc40:	00000433 	.word	0x00000433
    bc44:	ffefffff 	.word	0xffefffff
    bc48:	00010748 	.word	0x00010748
    bc4c:	3ff00000 	.word	0x3ff00000
    bc50:	000108ec 	.word	0x000108ec
    bc54:	000108f0 	.word	0x000108f0
    bc58:	000fffff 	.word	0x000fffff
    bc5c:	39500000 	.word	0x39500000
    bc60:	bfe00000 	.word	0xbfe00000
    bc64:	3fe00000 	.word	0x3fe00000
    bc68:	00010720 	.word	0x00010720
    bc6c:	00010910 	.word	0x00010910
    bc70:	7fefffff 	.word	0x7fefffff
    bc74:	2301      	movs	r3, #1
    bc76:	425b      	negs	r3, r3
    bc78:	e7c9      	b.n	bc0e <_strtod_l+0xdc2>
    bc7a:	9a05      	ldr	r2, [sp, #20]
    bc7c:	4b16      	ldr	r3, [pc, #88]	; (bcd8 <_strtod_l+0xe8c>)
    bc7e:	4013      	ands	r3, r2
    bc80:	4a16      	ldr	r2, [pc, #88]	; (bcdc <_strtod_l+0xe90>)
    bc82:	4694      	mov	ip, r2
    bc84:	4a16      	ldr	r2, [pc, #88]	; (bce0 <_strtod_l+0xe94>)
    bc86:	4463      	add	r3, ip
    bc88:	431a      	orrs	r2, r3
    bc8a:	2301      	movs	r3, #1
    bc8c:	425b      	negs	r3, r3
    bc8e:	9205      	str	r2, [sp, #20]
    bc90:	9304      	str	r3, [sp, #16]
    bc92:	9c04      	ldr	r4, [sp, #16]
    bc94:	9d05      	ldr	r5, [sp, #20]
    bc96:	e6f5      	b.n	ba84 <_strtod_l+0xc38>
    bc98:	2201      	movs	r2, #1
    bc9a:	4252      	negs	r2, r2
    bc9c:	409a      	lsls	r2, r3
    bc9e:	9b04      	ldr	r3, [sp, #16]
    bca0:	4013      	ands	r3, r2
    bca2:	9304      	str	r3, [sp, #16]
    bca4:	e5e1      	b.n	b86a <_strtod_l+0xa1e>
    bca6:	9004      	str	r0, [sp, #16]
    bca8:	9105      	str	r1, [sp, #20]
    bcaa:	e5da      	b.n	b862 <_strtod_l+0xa16>
    bcac:	2101      	movs	r1, #1
    bcae:	3b20      	subs	r3, #32
    bcb0:	4249      	negs	r1, r1
    bcb2:	4099      	lsls	r1, r3
    bcb4:	400a      	ands	r2, r1
    bcb6:	9205      	str	r2, [sp, #20]
    bcb8:	e5d7      	b.n	b86a <_strtod_l+0xa1e>
    bcba:	002f      	movs	r7, r5
    bcbc:	991d      	ldr	r1, [sp, #116]	; 0x74
    bcbe:	3501      	adds	r5, #1
    bcc0:	e58a      	b.n	b7d8 <_strtod_l+0x98c>
    bcc2:	991d      	ldr	r1, [sp, #116]	; 0x74
    bcc4:	0023      	movs	r3, r4
    bcc6:	e593      	b.n	b7f0 <_strtod_l+0x9a4>
    bcc8:	9004      	str	r0, [sp, #16]
    bcca:	9105      	str	r1, [sp, #20]
    bccc:	f7ff fc08 	bl	b4e0 <_strtod_l+0x694>
    bcd0:	3301      	adds	r3, #1
    bcd2:	d1a2      	bne.n	bc1a <_strtod_l+0xdce>
    bcd4:	e522      	b.n	b71c <_strtod_l+0x8d0>
    bcd6:	46c0      	nop			; (mov r8, r8)
    bcd8:	7ff00000 	.word	0x7ff00000
    bcdc:	fff00000 	.word	0xfff00000
    bce0:	000fffff 	.word	0x000fffff

0000bce4 <_strtod_r>:
    bce4:	4b05      	ldr	r3, [pc, #20]	; (bcfc <_strtod_r+0x18>)
    bce6:	b510      	push	{r4, lr}
    bce8:	681b      	ldr	r3, [r3, #0]
    bcea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    bcec:	2b00      	cmp	r3, #0
    bcee:	d002      	beq.n	bcf6 <_strtod_r+0x12>
    bcf0:	f7ff f8ac 	bl	ae4c <_strtod_l>
    bcf4:	bd10      	pop	{r4, pc}
    bcf6:	4b02      	ldr	r3, [pc, #8]	; (bd00 <_strtod_r+0x1c>)
    bcf8:	e7fa      	b.n	bcf0 <_strtod_r+0xc>
    bcfa:	46c0      	nop			; (mov r8, r8)
    bcfc:	20000098 	.word	0x20000098
    bd00:	200004cc 	.word	0x200004cc

0000bd04 <_strtoll_l.isra.0>:
    bd04:	b5f0      	push	{r4, r5, r6, r7, lr}
    bd06:	46de      	mov	lr, fp
    bd08:	4657      	mov	r7, sl
    bd0a:	464e      	mov	r6, r9
    bd0c:	4645      	mov	r5, r8
    bd0e:	b5e0      	push	{r5, r6, r7, lr}
    bd10:	001f      	movs	r7, r3
    bd12:	2308      	movs	r3, #8
    bd14:	b089      	sub	sp, #36	; 0x24
    bd16:	9007      	str	r0, [sp, #28]
    bd18:	9106      	str	r1, [sp, #24]
    bd1a:	4693      	mov	fp, r2
    bd1c:	000e      	movs	r6, r1
    bd1e:	4698      	mov	r8, r3
    bd20:	e000      	b.n	bd24 <_strtoll_l.isra.0+0x20>
    bd22:	002e      	movs	r6, r5
    bd24:	9812      	ldr	r0, [sp, #72]	; 0x48
    bd26:	7834      	ldrb	r4, [r6, #0]
    bd28:	f7fd ff82 	bl	9c30 <__locale_ctype_ptr_l>
    bd2c:	4642      	mov	r2, r8
    bd2e:	1900      	adds	r0, r0, r4
    bd30:	7843      	ldrb	r3, [r0, #1]
    bd32:	1c75      	adds	r5, r6, #1
    bd34:	421a      	tst	r2, r3
    bd36:	d1f4      	bne.n	bd22 <_strtoll_l.isra.0+0x1e>
    bd38:	2c2d      	cmp	r4, #45	; 0x2d
    bd3a:	d100      	bne.n	bd3e <_strtoll_l.isra.0+0x3a>
    bd3c:	e087      	b.n	be4e <_strtoll_l.isra.0+0x14a>
    bd3e:	2300      	movs	r3, #0
    bd40:	9303      	str	r3, [sp, #12]
    bd42:	2c2b      	cmp	r4, #43	; 0x2b
    bd44:	d100      	bne.n	bd48 <_strtoll_l.isra.0+0x44>
    bd46:	e094      	b.n	be72 <_strtoll_l.isra.0+0x16e>
    bd48:	2f00      	cmp	r7, #0
    bd4a:	d00e      	beq.n	bd6a <_strtoll_l.isra.0+0x66>
    bd4c:	2f10      	cmp	r7, #16
    bd4e:	d100      	bne.n	bd52 <_strtoll_l.isra.0+0x4e>
    bd50:	e092      	b.n	be78 <_strtoll_l.isra.0+0x174>
    bd52:	17fb      	asrs	r3, r7, #31
    bd54:	4699      	mov	r9, r3
    bd56:	9b03      	ldr	r3, [sp, #12]
    bd58:	46ba      	mov	sl, r7
    bd5a:	2b00      	cmp	r3, #0
    bd5c:	d110      	bne.n	bd80 <_strtoll_l.isra.0+0x7c>
    bd5e:	2301      	movs	r3, #1
    bd60:	425b      	negs	r3, r3
    bd62:	9304      	str	r3, [sp, #16]
    bd64:	4b55      	ldr	r3, [pc, #340]	; (bebc <_strtoll_l.isra.0+0x1b8>)
    bd66:	9305      	str	r3, [sp, #20]
    bd68:	e00f      	b.n	bd8a <_strtoll_l.isra.0+0x86>
    bd6a:	2c30      	cmp	r4, #48	; 0x30
    bd6c:	d100      	bne.n	bd70 <_strtoll_l.isra.0+0x6c>
    bd6e:	e092      	b.n	be96 <_strtoll_l.isra.0+0x192>
    bd70:	230a      	movs	r3, #10
    bd72:	469a      	mov	sl, r3
    bd74:	2300      	movs	r3, #0
    bd76:	270a      	movs	r7, #10
    bd78:	4699      	mov	r9, r3
    bd7a:	9b03      	ldr	r3, [sp, #12]
    bd7c:	2b00      	cmp	r3, #0
    bd7e:	d0ee      	beq.n	bd5e <_strtoll_l.isra.0+0x5a>
    bd80:	2300      	movs	r3, #0
    bd82:	9304      	str	r3, [sp, #16]
    bd84:	2380      	movs	r3, #128	; 0x80
    bd86:	061b      	lsls	r3, r3, #24
    bd88:	9305      	str	r3, [sp, #20]
    bd8a:	9904      	ldr	r1, [sp, #16]
    bd8c:	9e05      	ldr	r6, [sp, #20]
    bd8e:	4688      	mov	r8, r1
    bd90:	0008      	movs	r0, r1
    bd92:	4652      	mov	r2, sl
    bd94:	0031      	movs	r1, r6
    bd96:	464b      	mov	r3, r9
    bd98:	f7f8 f82c 	bl	3df4 <__aeabi_uldivmod>
    bd9c:	4640      	mov	r0, r8
    bd9e:	9202      	str	r2, [sp, #8]
    bda0:	0031      	movs	r1, r6
    bda2:	4652      	mov	r2, sl
    bda4:	464b      	mov	r3, r9
    bda6:	f7f8 f825 	bl	3df4 <__aeabi_uldivmod>
    bdaa:	2200      	movs	r2, #0
    bdac:	4680      	mov	r8, r0
    bdae:	000e      	movs	r6, r1
    bdb0:	2000      	movs	r0, #0
    bdb2:	2100      	movs	r1, #0
    bdb4:	e019      	b.n	bdea <_strtoll_l.isra.0+0xe6>
    bdb6:	001c      	movs	r4, r3
    bdb8:	42a7      	cmp	r7, r4
    bdba:	dd21      	ble.n	be00 <_strtoll_l.isra.0+0xfc>
    bdbc:	1c53      	adds	r3, r2, #1
    bdbe:	d012      	beq.n	bde6 <_strtoll_l.isra.0+0xe2>
    bdc0:	42b1      	cmp	r1, r6
    bdc2:	d83b      	bhi.n	be3c <_strtoll_l.isra.0+0x138>
    bdc4:	d101      	bne.n	bdca <_strtoll_l.isra.0+0xc6>
    bdc6:	4540      	cmp	r0, r8
    bdc8:	d838      	bhi.n	be3c <_strtoll_l.isra.0+0x138>
    bdca:	4580      	cmp	r8, r0
    bdcc:	d031      	beq.n	be32 <_strtoll_l.isra.0+0x12e>
    bdce:	4652      	mov	r2, sl
    bdd0:	464b      	mov	r3, r9
    bdd2:	f7f8 f82f 	bl	3e34 <__aeabi_lmul>
    bdd6:	17e3      	asrs	r3, r4, #31
    bdd8:	9400      	str	r4, [sp, #0]
    bdda:	9301      	str	r3, [sp, #4]
    bddc:	9b00      	ldr	r3, [sp, #0]
    bdde:	9c01      	ldr	r4, [sp, #4]
    bde0:	2201      	movs	r2, #1
    bde2:	18c0      	adds	r0, r0, r3
    bde4:	4161      	adcs	r1, r4
    bde6:	782c      	ldrb	r4, [r5, #0]
    bde8:	3501      	adds	r5, #1
    bdea:	0023      	movs	r3, r4
    bdec:	3b30      	subs	r3, #48	; 0x30
    bdee:	2b09      	cmp	r3, #9
    bdf0:	d9e1      	bls.n	bdb6 <_strtoll_l.isra.0+0xb2>
    bdf2:	0023      	movs	r3, r4
    bdf4:	3b41      	subs	r3, #65	; 0x41
    bdf6:	2b19      	cmp	r3, #25
    bdf8:	d823      	bhi.n	be42 <_strtoll_l.isra.0+0x13e>
    bdfa:	3c37      	subs	r4, #55	; 0x37
    bdfc:	42a7      	cmp	r7, r4
    bdfe:	dcdd      	bgt.n	bdbc <_strtoll_l.isra.0+0xb8>
    be00:	1c53      	adds	r3, r2, #1
    be02:	d029      	beq.n	be58 <_strtoll_l.isra.0+0x154>
    be04:	9b03      	ldr	r3, [sp, #12]
    be06:	2b00      	cmp	r3, #0
    be08:	d004      	beq.n	be14 <_strtoll_l.isra.0+0x110>
    be0a:	0003      	movs	r3, r0
    be0c:	000c      	movs	r4, r1
    be0e:	2100      	movs	r1, #0
    be10:	4258      	negs	r0, r3
    be12:	41a1      	sbcs	r1, r4
    be14:	465b      	mov	r3, fp
    be16:	2b00      	cmp	r3, #0
    be18:	d004      	beq.n	be24 <_strtoll_l.isra.0+0x120>
    be1a:	9b06      	ldr	r3, [sp, #24]
    be1c:	2a00      	cmp	r2, #0
    be1e:	d125      	bne.n	be6c <_strtoll_l.isra.0+0x168>
    be20:	465a      	mov	r2, fp
    be22:	6013      	str	r3, [r2, #0]
    be24:	b009      	add	sp, #36	; 0x24
    be26:	bc3c      	pop	{r2, r3, r4, r5}
    be28:	4690      	mov	r8, r2
    be2a:	4699      	mov	r9, r3
    be2c:	46a2      	mov	sl, r4
    be2e:	46ab      	mov	fp, r5
    be30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    be32:	428e      	cmp	r6, r1
    be34:	d1cb      	bne.n	bdce <_strtoll_l.isra.0+0xca>
    be36:	9b02      	ldr	r3, [sp, #8]
    be38:	42a3      	cmp	r3, r4
    be3a:	dac8      	bge.n	bdce <_strtoll_l.isra.0+0xca>
    be3c:	2201      	movs	r2, #1
    be3e:	4252      	negs	r2, r2
    be40:	e7d1      	b.n	bde6 <_strtoll_l.isra.0+0xe2>
    be42:	0023      	movs	r3, r4
    be44:	3b61      	subs	r3, #97	; 0x61
    be46:	2b19      	cmp	r3, #25
    be48:	d8da      	bhi.n	be00 <_strtoll_l.isra.0+0xfc>
    be4a:	3c57      	subs	r4, #87	; 0x57
    be4c:	e7b4      	b.n	bdb8 <_strtoll_l.isra.0+0xb4>
    be4e:	2301      	movs	r3, #1
    be50:	782c      	ldrb	r4, [r5, #0]
    be52:	9303      	str	r3, [sp, #12]
    be54:	1cb5      	adds	r5, r6, #2
    be56:	e777      	b.n	bd48 <_strtoll_l.isra.0+0x44>
    be58:	2322      	movs	r3, #34	; 0x22
    be5a:	9a07      	ldr	r2, [sp, #28]
    be5c:	6013      	str	r3, [r2, #0]
    be5e:	465b      	mov	r3, fp
    be60:	2b00      	cmp	r3, #0
    be62:	d028      	beq.n	beb6 <_strtoll_l.isra.0+0x1b2>
    be64:	1e6b      	subs	r3, r5, #1
    be66:	9804      	ldr	r0, [sp, #16]
    be68:	9905      	ldr	r1, [sp, #20]
    be6a:	e7d9      	b.n	be20 <_strtoll_l.isra.0+0x11c>
    be6c:	9004      	str	r0, [sp, #16]
    be6e:	9105      	str	r1, [sp, #20]
    be70:	e7f8      	b.n	be64 <_strtoll_l.isra.0+0x160>
    be72:	782c      	ldrb	r4, [r5, #0]
    be74:	1cb5      	adds	r5, r6, #2
    be76:	e767      	b.n	bd48 <_strtoll_l.isra.0+0x44>
    be78:	2c30      	cmp	r4, #48	; 0x30
    be7a:	d117      	bne.n	beac <_strtoll_l.isra.0+0x1a8>
    be7c:	2220      	movs	r2, #32
    be7e:	782b      	ldrb	r3, [r5, #0]
    be80:	4393      	bics	r3, r2
    be82:	2b58      	cmp	r3, #88	; 0x58
    be84:	d112      	bne.n	beac <_strtoll_l.isra.0+0x1a8>
    be86:	2310      	movs	r3, #16
    be88:	469a      	mov	sl, r3
    be8a:	2300      	movs	r3, #0
    be8c:	786c      	ldrb	r4, [r5, #1]
    be8e:	4699      	mov	r9, r3
    be90:	3502      	adds	r5, #2
    be92:	2710      	movs	r7, #16
    be94:	e771      	b.n	bd7a <_strtoll_l.isra.0+0x76>
    be96:	2220      	movs	r2, #32
    be98:	782b      	ldrb	r3, [r5, #0]
    be9a:	4393      	bics	r3, r2
    be9c:	2b58      	cmp	r3, #88	; 0x58
    be9e:	d0f2      	beq.n	be86 <_strtoll_l.isra.0+0x182>
    bea0:	2308      	movs	r3, #8
    bea2:	469a      	mov	sl, r3
    bea4:	2300      	movs	r3, #0
    bea6:	2708      	movs	r7, #8
    bea8:	4699      	mov	r9, r3
    beaa:	e766      	b.n	bd7a <_strtoll_l.isra.0+0x76>
    beac:	2310      	movs	r3, #16
    beae:	469a      	mov	sl, r3
    beb0:	2300      	movs	r3, #0
    beb2:	4699      	mov	r9, r3
    beb4:	e761      	b.n	bd7a <_strtoll_l.isra.0+0x76>
    beb6:	9804      	ldr	r0, [sp, #16]
    beb8:	9905      	ldr	r1, [sp, #20]
    beba:	e7b3      	b.n	be24 <_strtoll_l.isra.0+0x120>
    bebc:	7fffffff 	.word	0x7fffffff

0000bec0 <_strtoll_r>:
    bec0:	b510      	push	{r4, lr}
    bec2:	4c06      	ldr	r4, [pc, #24]	; (bedc <_strtoll_r+0x1c>)
    bec4:	b082      	sub	sp, #8
    bec6:	6824      	ldr	r4, [r4, #0]
    bec8:	6b64      	ldr	r4, [r4, #52]	; 0x34
    beca:	2c00      	cmp	r4, #0
    becc:	d004      	beq.n	bed8 <_strtoll_r+0x18>
    bece:	9400      	str	r4, [sp, #0]
    bed0:	f7ff ff18 	bl	bd04 <_strtoll_l.isra.0>
    bed4:	b002      	add	sp, #8
    bed6:	bd10      	pop	{r4, pc}
    bed8:	4c01      	ldr	r4, [pc, #4]	; (bee0 <_strtoll_r+0x20>)
    beda:	e7f8      	b.n	bece <_strtoll_r+0xe>
    bedc:	20000098 	.word	0x20000098
    bee0:	200004cc 	.word	0x200004cc

0000bee4 <_strtoul_l.isra.0>:
    bee4:	b5f0      	push	{r4, r5, r6, r7, lr}
    bee6:	4657      	mov	r7, sl
    bee8:	464e      	mov	r6, r9
    beea:	46de      	mov	lr, fp
    beec:	4645      	mov	r5, r8
    beee:	b5e0      	push	{r5, r6, r7, lr}
    bef0:	001e      	movs	r6, r3
    bef2:	2308      	movs	r3, #8
    bef4:	b083      	sub	sp, #12
    bef6:	4683      	mov	fp, r0
    bef8:	4689      	mov	r9, r1
    befa:	4692      	mov	sl, r2
    befc:	000f      	movs	r7, r1
    befe:	4698      	mov	r8, r3
    bf00:	e000      	b.n	bf04 <_strtoul_l.isra.0+0x20>
    bf02:	002f      	movs	r7, r5
    bf04:	980c      	ldr	r0, [sp, #48]	; 0x30
    bf06:	783c      	ldrb	r4, [r7, #0]
    bf08:	f7fd fe92 	bl	9c30 <__locale_ctype_ptr_l>
    bf0c:	4642      	mov	r2, r8
    bf0e:	1900      	adds	r0, r0, r4
    bf10:	7843      	ldrb	r3, [r0, #1]
    bf12:	1c7d      	adds	r5, r7, #1
    bf14:	421a      	tst	r2, r3
    bf16:	d1f4      	bne.n	bf02 <_strtoul_l.isra.0+0x1e>
    bf18:	2c2d      	cmp	r4, #45	; 0x2d
    bf1a:	d05b      	beq.n	bfd4 <_strtoul_l.isra.0+0xf0>
    bf1c:	2300      	movs	r3, #0
    bf1e:	9301      	str	r3, [sp, #4]
    bf20:	2c2b      	cmp	r4, #43	; 0x2b
    bf22:	d05c      	beq.n	bfde <_strtoul_l.isra.0+0xfa>
    bf24:	2e00      	cmp	r6, #0
    bf26:	d00e      	beq.n	bf46 <_strtoul_l.isra.0+0x62>
    bf28:	2e10      	cmp	r6, #16
    bf2a:	d05b      	beq.n	bfe4 <_strtoul_l.isra.0+0x100>
    bf2c:	2001      	movs	r0, #1
    bf2e:	0031      	movs	r1, r6
    bf30:	4240      	negs	r0, r0
    bf32:	f7f7 fde9 	bl	3b08 <__udivsi3>
    bf36:	0007      	movs	r7, r0
    bf38:	2001      	movs	r0, #1
    bf3a:	0031      	movs	r1, r6
    bf3c:	4240      	negs	r0, r0
    bf3e:	46b0      	mov	r8, r6
    bf40:	f7f7 fe68 	bl	3c14 <__aeabi_uidivmod>
    bf44:	e006      	b.n	bf54 <_strtoul_l.isra.0+0x70>
    bf46:	2c30      	cmp	r4, #48	; 0x30
    bf48:	d05b      	beq.n	c002 <_strtoul_l.isra.0+0x11e>
    bf4a:	230a      	movs	r3, #10
    bf4c:	2105      	movs	r1, #5
    bf4e:	4698      	mov	r8, r3
    bf50:	260a      	movs	r6, #10
    bf52:	4f34      	ldr	r7, [pc, #208]	; (c024 <_strtoul_l.isra.0+0x140>)
    bf54:	2200      	movs	r2, #0
    bf56:	2000      	movs	r0, #0
    bf58:	0023      	movs	r3, r4
    bf5a:	3b30      	subs	r3, #48	; 0x30
    bf5c:	2b09      	cmp	r3, #9
    bf5e:	d907      	bls.n	bf70 <_strtoul_l.isra.0+0x8c>
    bf60:	3b11      	subs	r3, #17
    bf62:	2b19      	cmp	r3, #25
    bf64:	d903      	bls.n	bf6e <_strtoul_l.isra.0+0x8a>
    bf66:	0023      	movs	r3, r4
    bf68:	3b61      	subs	r3, #97	; 0x61
    bf6a:	2b19      	cmp	r3, #25
    bf6c:	d80e      	bhi.n	bf8c <_strtoul_l.isra.0+0xa8>
    bf6e:	330a      	adds	r3, #10
    bf70:	429e      	cmp	r6, r3
    bf72:	dd0b      	ble.n	bf8c <_strtoul_l.isra.0+0xa8>
    bf74:	2a00      	cmp	r2, #0
    bf76:	db20      	blt.n	bfba <_strtoul_l.isra.0+0xd6>
    bf78:	42b8      	cmp	r0, r7
    bf7a:	d81e      	bhi.n	bfba <_strtoul_l.isra.0+0xd6>
    bf7c:	d01b      	beq.n	bfb6 <_strtoul_l.isra.0+0xd2>
    bf7e:	4642      	mov	r2, r8
    bf80:	4350      	muls	r0, r2
    bf82:	2201      	movs	r2, #1
    bf84:	1818      	adds	r0, r3, r0
    bf86:	782c      	ldrb	r4, [r5, #0]
    bf88:	3501      	adds	r5, #1
    bf8a:	e7e5      	b.n	bf58 <_strtoul_l.isra.0+0x74>
    bf8c:	2a00      	cmp	r2, #0
    bf8e:	db17      	blt.n	bfc0 <_strtoul_l.isra.0+0xdc>
    bf90:	9b01      	ldr	r3, [sp, #4]
    bf92:	2b00      	cmp	r3, #0
    bf94:	d000      	beq.n	bf98 <_strtoul_l.isra.0+0xb4>
    bf96:	4240      	negs	r0, r0
    bf98:	4653      	mov	r3, sl
    bf9a:	2b00      	cmp	r3, #0
    bf9c:	d004      	beq.n	bfa8 <_strtoul_l.isra.0+0xc4>
    bf9e:	464b      	mov	r3, r9
    bfa0:	2a00      	cmp	r2, #0
    bfa2:	d115      	bne.n	bfd0 <_strtoul_l.isra.0+0xec>
    bfa4:	4652      	mov	r2, sl
    bfa6:	6013      	str	r3, [r2, #0]
    bfa8:	b003      	add	sp, #12
    bfaa:	bc3c      	pop	{r2, r3, r4, r5}
    bfac:	4690      	mov	r8, r2
    bfae:	4699      	mov	r9, r3
    bfb0:	46a2      	mov	sl, r4
    bfb2:	46ab      	mov	fp, r5
    bfb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bfb6:	428b      	cmp	r3, r1
    bfb8:	dde1      	ble.n	bf7e <_strtoul_l.isra.0+0x9a>
    bfba:	2201      	movs	r2, #1
    bfbc:	4252      	negs	r2, r2
    bfbe:	e7e2      	b.n	bf86 <_strtoul_l.isra.0+0xa2>
    bfc0:	2322      	movs	r3, #34	; 0x22
    bfc2:	465a      	mov	r2, fp
    bfc4:	2001      	movs	r0, #1
    bfc6:	6013      	str	r3, [r2, #0]
    bfc8:	4653      	mov	r3, sl
    bfca:	4240      	negs	r0, r0
    bfcc:	2b00      	cmp	r3, #0
    bfce:	d0eb      	beq.n	bfa8 <_strtoul_l.isra.0+0xc4>
    bfd0:	1e6b      	subs	r3, r5, #1
    bfd2:	e7e7      	b.n	bfa4 <_strtoul_l.isra.0+0xc0>
    bfd4:	2301      	movs	r3, #1
    bfd6:	782c      	ldrb	r4, [r5, #0]
    bfd8:	9301      	str	r3, [sp, #4]
    bfda:	1cbd      	adds	r5, r7, #2
    bfdc:	e7a2      	b.n	bf24 <_strtoul_l.isra.0+0x40>
    bfde:	782c      	ldrb	r4, [r5, #0]
    bfe0:	1cbd      	adds	r5, r7, #2
    bfe2:	e79f      	b.n	bf24 <_strtoul_l.isra.0+0x40>
    bfe4:	2c30      	cmp	r4, #48	; 0x30
    bfe6:	d117      	bne.n	c018 <_strtoul_l.isra.0+0x134>
    bfe8:	2220      	movs	r2, #32
    bfea:	782b      	ldrb	r3, [r5, #0]
    bfec:	4393      	bics	r3, r2
    bfee:	2b58      	cmp	r3, #88	; 0x58
    bff0:	d112      	bne.n	c018 <_strtoul_l.isra.0+0x134>
    bff2:	2310      	movs	r3, #16
    bff4:	786c      	ldrb	r4, [r5, #1]
    bff6:	210f      	movs	r1, #15
    bff8:	3502      	adds	r5, #2
    bffa:	4f0b      	ldr	r7, [pc, #44]	; (c028 <_strtoul_l.isra.0+0x144>)
    bffc:	4698      	mov	r8, r3
    bffe:	2610      	movs	r6, #16
    c000:	e7a8      	b.n	bf54 <_strtoul_l.isra.0+0x70>
    c002:	2220      	movs	r2, #32
    c004:	782b      	ldrb	r3, [r5, #0]
    c006:	4393      	bics	r3, r2
    c008:	2b58      	cmp	r3, #88	; 0x58
    c00a:	d0f2      	beq.n	bff2 <_strtoul_l.isra.0+0x10e>
    c00c:	2308      	movs	r3, #8
    c00e:	2107      	movs	r1, #7
    c010:	4f06      	ldr	r7, [pc, #24]	; (c02c <_strtoul_l.isra.0+0x148>)
    c012:	4698      	mov	r8, r3
    c014:	2608      	movs	r6, #8
    c016:	e79d      	b.n	bf54 <_strtoul_l.isra.0+0x70>
    c018:	2310      	movs	r3, #16
    c01a:	210f      	movs	r1, #15
    c01c:	4f02      	ldr	r7, [pc, #8]	; (c028 <_strtoul_l.isra.0+0x144>)
    c01e:	4698      	mov	r8, r3
    c020:	e798      	b.n	bf54 <_strtoul_l.isra.0+0x70>
    c022:	46c0      	nop			; (mov r8, r8)
    c024:	19999999 	.word	0x19999999
    c028:	0fffffff 	.word	0x0fffffff
    c02c:	1fffffff 	.word	0x1fffffff

0000c030 <_strtoul_r>:
    c030:	b510      	push	{r4, lr}
    c032:	4c06      	ldr	r4, [pc, #24]	; (c04c <_strtoul_r+0x1c>)
    c034:	b082      	sub	sp, #8
    c036:	6824      	ldr	r4, [r4, #0]
    c038:	6b64      	ldr	r4, [r4, #52]	; 0x34
    c03a:	2c00      	cmp	r4, #0
    c03c:	d004      	beq.n	c048 <_strtoul_r+0x18>
    c03e:	9400      	str	r4, [sp, #0]
    c040:	f7ff ff50 	bl	bee4 <_strtoul_l.isra.0>
    c044:	b002      	add	sp, #8
    c046:	bd10      	pop	{r4, pc}
    c048:	4c01      	ldr	r4, [pc, #4]	; (c050 <_strtoul_r+0x20>)
    c04a:	e7f8      	b.n	c03e <_strtoul_r+0xe>
    c04c:	20000098 	.word	0x20000098
    c050:	200004cc 	.word	0x200004cc

0000c054 <_strtoull_l.isra.0>:
    c054:	b5f0      	push	{r4, r5, r6, r7, lr}
    c056:	46de      	mov	lr, fp
    c058:	4657      	mov	r7, sl
    c05a:	464e      	mov	r6, r9
    c05c:	4645      	mov	r5, r8
    c05e:	b5e0      	push	{r5, r6, r7, lr}
    c060:	001e      	movs	r6, r3
    c062:	2308      	movs	r3, #8
    c064:	b087      	sub	sp, #28
    c066:	9005      	str	r0, [sp, #20]
    c068:	9104      	str	r1, [sp, #16]
    c06a:	4693      	mov	fp, r2
    c06c:	000f      	movs	r7, r1
    c06e:	4698      	mov	r8, r3
    c070:	e000      	b.n	c074 <_strtoull_l.isra.0+0x20>
    c072:	002f      	movs	r7, r5
    c074:	9810      	ldr	r0, [sp, #64]	; 0x40
    c076:	783c      	ldrb	r4, [r7, #0]
    c078:	f7fd fdda 	bl	9c30 <__locale_ctype_ptr_l>
    c07c:	4642      	mov	r2, r8
    c07e:	1900      	adds	r0, r0, r4
    c080:	7843      	ldrb	r3, [r0, #1]
    c082:	1c7d      	adds	r5, r7, #1
    c084:	421a      	tst	r2, r3
    c086:	d1f4      	bne.n	c072 <_strtoull_l.isra.0+0x1e>
    c088:	2c2d      	cmp	r4, #45	; 0x2d
    c08a:	d100      	bne.n	c08e <_strtoull_l.isra.0+0x3a>
    c08c:	e085      	b.n	c19a <_strtoull_l.isra.0+0x146>
    c08e:	2300      	movs	r3, #0
    c090:	9303      	str	r3, [sp, #12]
    c092:	2c2b      	cmp	r4, #43	; 0x2b
    c094:	d100      	bne.n	c098 <_strtoull_l.isra.0+0x44>
    c096:	e085      	b.n	c1a4 <_strtoull_l.isra.0+0x150>
    c098:	2e00      	cmp	r6, #0
    c09a:	d016      	beq.n	c0ca <_strtoull_l.isra.0+0x76>
    c09c:	2e10      	cmp	r6, #16
    c09e:	d100      	bne.n	c0a2 <_strtoull_l.isra.0+0x4e>
    c0a0:	e083      	b.n	c1aa <_strtoull_l.isra.0+0x156>
    c0a2:	17f3      	asrs	r3, r6, #31
    c0a4:	0032      	movs	r2, r6
    c0a6:	2001      	movs	r0, #1
    c0a8:	4240      	negs	r0, r0
    c0aa:	17c1      	asrs	r1, r0, #31
    c0ac:	4699      	mov	r9, r3
    c0ae:	f7f7 fea1 	bl	3df4 <__aeabi_uldivmod>
    c0b2:	0032      	movs	r2, r6
    c0b4:	4680      	mov	r8, r0
    c0b6:	000f      	movs	r7, r1
    c0b8:	464b      	mov	r3, r9
    c0ba:	2001      	movs	r0, #1
    c0bc:	4240      	negs	r0, r0
    c0be:	17c1      	asrs	r1, r0, #31
    c0c0:	f7f7 fe98 	bl	3df4 <__aeabi_uldivmod>
    c0c4:	46b2      	mov	sl, r6
    c0c6:	9202      	str	r2, [sp, #8]
    c0c8:	e00c      	b.n	c0e4 <_strtoull_l.isra.0+0x90>
    c0ca:	2c30      	cmp	r4, #48	; 0x30
    c0cc:	d100      	bne.n	c0d0 <_strtoull_l.isra.0+0x7c>
    c0ce:	e080      	b.n	c1d2 <_strtoull_l.isra.0+0x17e>
    c0d0:	2305      	movs	r3, #5
    c0d2:	9302      	str	r3, [sp, #8]
    c0d4:	4b4c      	ldr	r3, [pc, #304]	; (c208 <_strtoull_l.isra.0+0x1b4>)
    c0d6:	260a      	movs	r6, #10
    c0d8:	4698      	mov	r8, r3
    c0da:	230a      	movs	r3, #10
    c0dc:	469a      	mov	sl, r3
    c0de:	2300      	movs	r3, #0
    c0e0:	4699      	mov	r9, r3
    c0e2:	4f4a      	ldr	r7, [pc, #296]	; (c20c <_strtoull_l.isra.0+0x1b8>)
    c0e4:	2200      	movs	r2, #0
    c0e6:	2000      	movs	r0, #0
    c0e8:	2100      	movs	r1, #0
    c0ea:	e019      	b.n	c120 <_strtoull_l.isra.0+0xcc>
    c0ec:	001c      	movs	r4, r3
    c0ee:	42a6      	cmp	r6, r4
    c0f0:	dd21      	ble.n	c136 <_strtoull_l.isra.0+0xe2>
    c0f2:	2a00      	cmp	r2, #0
    c0f4:	db3d      	blt.n	c172 <_strtoull_l.isra.0+0x11e>
    c0f6:	42b9      	cmp	r1, r7
    c0f8:	d83b      	bhi.n	c172 <_strtoull_l.isra.0+0x11e>
    c0fa:	d101      	bne.n	c100 <_strtoull_l.isra.0+0xac>
    c0fc:	4540      	cmp	r0, r8
    c0fe:	d838      	bhi.n	c172 <_strtoull_l.isra.0+0x11e>
    c100:	4540      	cmp	r0, r8
    c102:	d031      	beq.n	c168 <_strtoull_l.isra.0+0x114>
    c104:	4652      	mov	r2, sl
    c106:	464b      	mov	r3, r9
    c108:	f7f7 fe94 	bl	3e34 <__aeabi_lmul>
    c10c:	17e3      	asrs	r3, r4, #31
    c10e:	9400      	str	r4, [sp, #0]
    c110:	9301      	str	r3, [sp, #4]
    c112:	9b00      	ldr	r3, [sp, #0]
    c114:	9c01      	ldr	r4, [sp, #4]
    c116:	2201      	movs	r2, #1
    c118:	18c0      	adds	r0, r0, r3
    c11a:	4161      	adcs	r1, r4
    c11c:	782c      	ldrb	r4, [r5, #0]
    c11e:	3501      	adds	r5, #1
    c120:	0023      	movs	r3, r4
    c122:	3b30      	subs	r3, #48	; 0x30
    c124:	2b09      	cmp	r3, #9
    c126:	d9e1      	bls.n	c0ec <_strtoull_l.isra.0+0x98>
    c128:	0023      	movs	r3, r4
    c12a:	3b41      	subs	r3, #65	; 0x41
    c12c:	2b19      	cmp	r3, #25
    c12e:	d823      	bhi.n	c178 <_strtoull_l.isra.0+0x124>
    c130:	3c37      	subs	r4, #55	; 0x37
    c132:	42a6      	cmp	r6, r4
    c134:	dcdd      	bgt.n	c0f2 <_strtoull_l.isra.0+0x9e>
    c136:	2a00      	cmp	r2, #0
    c138:	db24      	blt.n	c184 <_strtoull_l.isra.0+0x130>
    c13a:	9b03      	ldr	r3, [sp, #12]
    c13c:	2b00      	cmp	r3, #0
    c13e:	d004      	beq.n	c14a <_strtoull_l.isra.0+0xf6>
    c140:	0003      	movs	r3, r0
    c142:	000c      	movs	r4, r1
    c144:	2100      	movs	r1, #0
    c146:	4258      	negs	r0, r3
    c148:	41a1      	sbcs	r1, r4
    c14a:	465b      	mov	r3, fp
    c14c:	2b00      	cmp	r3, #0
    c14e:	d004      	beq.n	c15a <_strtoull_l.isra.0+0x106>
    c150:	9b04      	ldr	r3, [sp, #16]
    c152:	2a00      	cmp	r2, #0
    c154:	d11f      	bne.n	c196 <_strtoull_l.isra.0+0x142>
    c156:	465a      	mov	r2, fp
    c158:	6013      	str	r3, [r2, #0]
    c15a:	b007      	add	sp, #28
    c15c:	bc3c      	pop	{r2, r3, r4, r5}
    c15e:	4690      	mov	r8, r2
    c160:	4699      	mov	r9, r3
    c162:	46a2      	mov	sl, r4
    c164:	46ab      	mov	fp, r5
    c166:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c168:	42b9      	cmp	r1, r7
    c16a:	d1cb      	bne.n	c104 <_strtoull_l.isra.0+0xb0>
    c16c:	9b02      	ldr	r3, [sp, #8]
    c16e:	429c      	cmp	r4, r3
    c170:	ddc8      	ble.n	c104 <_strtoull_l.isra.0+0xb0>
    c172:	2201      	movs	r2, #1
    c174:	4252      	negs	r2, r2
    c176:	e7d1      	b.n	c11c <_strtoull_l.isra.0+0xc8>
    c178:	0023      	movs	r3, r4
    c17a:	3b61      	subs	r3, #97	; 0x61
    c17c:	2b19      	cmp	r3, #25
    c17e:	d8da      	bhi.n	c136 <_strtoull_l.isra.0+0xe2>
    c180:	3c57      	subs	r4, #87	; 0x57
    c182:	e7b4      	b.n	c0ee <_strtoull_l.isra.0+0x9a>
    c184:	2322      	movs	r3, #34	; 0x22
    c186:	9a05      	ldr	r2, [sp, #20]
    c188:	2001      	movs	r0, #1
    c18a:	4240      	negs	r0, r0
    c18c:	17c1      	asrs	r1, r0, #31
    c18e:	6013      	str	r3, [r2, #0]
    c190:	465b      	mov	r3, fp
    c192:	2b00      	cmp	r3, #0
    c194:	d0e1      	beq.n	c15a <_strtoull_l.isra.0+0x106>
    c196:	1e6b      	subs	r3, r5, #1
    c198:	e7dd      	b.n	c156 <_strtoull_l.isra.0+0x102>
    c19a:	2301      	movs	r3, #1
    c19c:	782c      	ldrb	r4, [r5, #0]
    c19e:	9303      	str	r3, [sp, #12]
    c1a0:	1cbd      	adds	r5, r7, #2
    c1a2:	e779      	b.n	c098 <_strtoull_l.isra.0+0x44>
    c1a4:	782c      	ldrb	r4, [r5, #0]
    c1a6:	1cbd      	adds	r5, r7, #2
    c1a8:	e776      	b.n	c098 <_strtoull_l.isra.0+0x44>
    c1aa:	2c30      	cmp	r4, #48	; 0x30
    c1ac:	d121      	bne.n	c1f2 <_strtoull_l.isra.0+0x19e>
    c1ae:	2220      	movs	r2, #32
    c1b0:	782b      	ldrb	r3, [r5, #0]
    c1b2:	4393      	bics	r3, r2
    c1b4:	2b58      	cmp	r3, #88	; 0x58
    c1b6:	d11c      	bne.n	c1f2 <_strtoull_l.isra.0+0x19e>
    c1b8:	230f      	movs	r3, #15
    c1ba:	9302      	str	r3, [sp, #8]
    c1bc:	3b10      	subs	r3, #16
    c1be:	4698      	mov	r8, r3
    c1c0:	3311      	adds	r3, #17
    c1c2:	469a      	mov	sl, r3
    c1c4:	2300      	movs	r3, #0
    c1c6:	786c      	ldrb	r4, [r5, #1]
    c1c8:	4f11      	ldr	r7, [pc, #68]	; (c210 <_strtoull_l.isra.0+0x1bc>)
    c1ca:	3502      	adds	r5, #2
    c1cc:	4699      	mov	r9, r3
    c1ce:	2610      	movs	r6, #16
    c1d0:	e788      	b.n	c0e4 <_strtoull_l.isra.0+0x90>
    c1d2:	2220      	movs	r2, #32
    c1d4:	782b      	ldrb	r3, [r5, #0]
    c1d6:	4393      	bics	r3, r2
    c1d8:	2b58      	cmp	r3, #88	; 0x58
    c1da:	d0ed      	beq.n	c1b8 <_strtoull_l.isra.0+0x164>
    c1dc:	2307      	movs	r3, #7
    c1de:	9302      	str	r3, [sp, #8]
    c1e0:	3b08      	subs	r3, #8
    c1e2:	4698      	mov	r8, r3
    c1e4:	3309      	adds	r3, #9
    c1e6:	469a      	mov	sl, r3
    c1e8:	2300      	movs	r3, #0
    c1ea:	4f0a      	ldr	r7, [pc, #40]	; (c214 <_strtoull_l.isra.0+0x1c0>)
    c1ec:	4699      	mov	r9, r3
    c1ee:	2608      	movs	r6, #8
    c1f0:	e778      	b.n	c0e4 <_strtoull_l.isra.0+0x90>
    c1f2:	230f      	movs	r3, #15
    c1f4:	9302      	str	r3, [sp, #8]
    c1f6:	3b10      	subs	r3, #16
    c1f8:	4698      	mov	r8, r3
    c1fa:	3311      	adds	r3, #17
    c1fc:	469a      	mov	sl, r3
    c1fe:	2300      	movs	r3, #0
    c200:	4f03      	ldr	r7, [pc, #12]	; (c210 <_strtoull_l.isra.0+0x1bc>)
    c202:	4699      	mov	r9, r3
    c204:	e76e      	b.n	c0e4 <_strtoull_l.isra.0+0x90>
    c206:	46c0      	nop			; (mov r8, r8)
    c208:	99999999 	.word	0x99999999
    c20c:	19999999 	.word	0x19999999
    c210:	0fffffff 	.word	0x0fffffff
    c214:	1fffffff 	.word	0x1fffffff

0000c218 <_strtoull_r>:
    c218:	b510      	push	{r4, lr}
    c21a:	4c06      	ldr	r4, [pc, #24]	; (c234 <_strtoull_r+0x1c>)
    c21c:	b082      	sub	sp, #8
    c21e:	6824      	ldr	r4, [r4, #0]
    c220:	6b64      	ldr	r4, [r4, #52]	; 0x34
    c222:	2c00      	cmp	r4, #0
    c224:	d004      	beq.n	c230 <_strtoull_r+0x18>
    c226:	9400      	str	r4, [sp, #0]
    c228:	f7ff ff14 	bl	c054 <_strtoull_l.isra.0>
    c22c:	b002      	add	sp, #8
    c22e:	bd10      	pop	{r4, pc}
    c230:	4c01      	ldr	r4, [pc, #4]	; (c238 <_strtoull_r+0x20>)
    c232:	e7f8      	b.n	c226 <_strtoull_r+0xe>
    c234:	20000098 	.word	0x20000098
    c238:	200004cc 	.word	0x200004cc

0000c23c <__ssprint_r>:
    c23c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c23e:	4657      	mov	r7, sl
    c240:	464e      	mov	r6, r9
    c242:	46de      	mov	lr, fp
    c244:	4645      	mov	r5, r8
    c246:	b5e0      	push	{r5, r6, r7, lr}
    c248:	6893      	ldr	r3, [r2, #8]
    c24a:	b083      	sub	sp, #12
    c24c:	9001      	str	r0, [sp, #4]
    c24e:	000e      	movs	r6, r1
    c250:	4692      	mov	sl, r2
    c252:	2b00      	cmp	r3, #0
    c254:	d070      	beq.n	c338 <__ssprint_r+0xfc>
    c256:	688d      	ldr	r5, [r1, #8]
    c258:	6813      	ldr	r3, [r2, #0]
    c25a:	002c      	movs	r4, r5
    c25c:	6808      	ldr	r0, [r1, #0]
    c25e:	001d      	movs	r5, r3
    c260:	e046      	b.n	c2f0 <__ssprint_r+0xb4>
    c262:	2290      	movs	r2, #144	; 0x90
    c264:	89b3      	ldrh	r3, [r6, #12]
    c266:	00d2      	lsls	r2, r2, #3
    c268:	4213      	tst	r3, r2
    c26a:	d030      	beq.n	c2ce <__ssprint_r+0x92>
    c26c:	6931      	ldr	r1, [r6, #16]
    c26e:	1a42      	subs	r2, r0, r1
    c270:	4693      	mov	fp, r2
    c272:	6970      	ldr	r0, [r6, #20]
    c274:	0042      	lsls	r2, r0, #1
    c276:	1812      	adds	r2, r2, r0
    c278:	0fd0      	lsrs	r0, r2, #31
    c27a:	1882      	adds	r2, r0, r2
    c27c:	1052      	asrs	r2, r2, #1
    c27e:	4690      	mov	r8, r2
    c280:	465a      	mov	r2, fp
    c282:	1c50      	adds	r0, r2, #1
    c284:	19c0      	adds	r0, r0, r7
    c286:	4642      	mov	r2, r8
    c288:	4540      	cmp	r0, r8
    c28a:	d901      	bls.n	c290 <__ssprint_r+0x54>
    c28c:	4680      	mov	r8, r0
    c28e:	0002      	movs	r2, r0
    c290:	2080      	movs	r0, #128	; 0x80
    c292:	00c0      	lsls	r0, r0, #3
    c294:	4203      	tst	r3, r0
    c296:	d038      	beq.n	c30a <__ssprint_r+0xce>
    c298:	0011      	movs	r1, r2
    c29a:	9801      	ldr	r0, [sp, #4]
    c29c:	f7fd fcee 	bl	9c7c <_malloc_r>
    c2a0:	1e04      	subs	r4, r0, #0
    c2a2:	d054      	beq.n	c34e <__ssprint_r+0x112>
    c2a4:	465a      	mov	r2, fp
    c2a6:	6931      	ldr	r1, [r6, #16]
    c2a8:	f7fe f84a 	bl	a340 <memcpy>
    c2ac:	89b3      	ldrh	r3, [r6, #12]
    c2ae:	4a2a      	ldr	r2, [pc, #168]	; (c358 <__ssprint_r+0x11c>)
    c2b0:	4013      	ands	r3, r2
    c2b2:	2280      	movs	r2, #128	; 0x80
    c2b4:	4313      	orrs	r3, r2
    c2b6:	81b3      	strh	r3, [r6, #12]
    c2b8:	4643      	mov	r3, r8
    c2ba:	0020      	movs	r0, r4
    c2bc:	465a      	mov	r2, fp
    c2be:	6134      	str	r4, [r6, #16]
    c2c0:	46b8      	mov	r8, r7
    c2c2:	003c      	movs	r4, r7
    c2c4:	4458      	add	r0, fp
    c2c6:	6173      	str	r3, [r6, #20]
    c2c8:	1a9b      	subs	r3, r3, r2
    c2ca:	6030      	str	r0, [r6, #0]
    c2cc:	60b3      	str	r3, [r6, #8]
    c2ce:	4642      	mov	r2, r8
    c2d0:	4649      	mov	r1, r9
    c2d2:	f000 fdb7 	bl	ce44 <memmove>
    c2d6:	68b3      	ldr	r3, [r6, #8]
    c2d8:	1b1c      	subs	r4, r3, r4
    c2da:	6833      	ldr	r3, [r6, #0]
    c2dc:	60b4      	str	r4, [r6, #8]
    c2de:	4443      	add	r3, r8
    c2e0:	6033      	str	r3, [r6, #0]
    c2e2:	0018      	movs	r0, r3
    c2e4:	4653      	mov	r3, sl
    c2e6:	689b      	ldr	r3, [r3, #8]
    c2e8:	1bdf      	subs	r7, r3, r7
    c2ea:	4653      	mov	r3, sl
    c2ec:	609f      	str	r7, [r3, #8]
    c2ee:	d023      	beq.n	c338 <__ssprint_r+0xfc>
    c2f0:	686f      	ldr	r7, [r5, #4]
    c2f2:	002b      	movs	r3, r5
    c2f4:	3508      	adds	r5, #8
    c2f6:	2f00      	cmp	r7, #0
    c2f8:	d0fa      	beq.n	c2f0 <__ssprint_r+0xb4>
    c2fa:	681b      	ldr	r3, [r3, #0]
    c2fc:	46a0      	mov	r8, r4
    c2fe:	4699      	mov	r9, r3
    c300:	42a7      	cmp	r7, r4
    c302:	d2ae      	bcs.n	c262 <__ssprint_r+0x26>
    c304:	003c      	movs	r4, r7
    c306:	46b8      	mov	r8, r7
    c308:	e7e1      	b.n	c2ce <__ssprint_r+0x92>
    c30a:	9801      	ldr	r0, [sp, #4]
    c30c:	f000 fdea 	bl	cee4 <_realloc_r>
    c310:	1e04      	subs	r4, r0, #0
    c312:	d1d1      	bne.n	c2b8 <__ssprint_r+0x7c>
    c314:	9c01      	ldr	r4, [sp, #4]
    c316:	6931      	ldr	r1, [r6, #16]
    c318:	0020      	movs	r0, r4
    c31a:	f7fd fb8f 	bl	9a3c <_free_r>
    c31e:	230c      	movs	r3, #12
    c320:	6023      	str	r3, [r4, #0]
    c322:	2240      	movs	r2, #64	; 0x40
    c324:	89b3      	ldrh	r3, [r6, #12]
    c326:	2001      	movs	r0, #1
    c328:	4313      	orrs	r3, r2
    c32a:	81b3      	strh	r3, [r6, #12]
    c32c:	4652      	mov	r2, sl
    c32e:	2300      	movs	r3, #0
    c330:	4240      	negs	r0, r0
    c332:	6093      	str	r3, [r2, #8]
    c334:	6053      	str	r3, [r2, #4]
    c336:	e003      	b.n	c340 <__ssprint_r+0x104>
    c338:	2300      	movs	r3, #0
    c33a:	4652      	mov	r2, sl
    c33c:	2000      	movs	r0, #0
    c33e:	6053      	str	r3, [r2, #4]
    c340:	b003      	add	sp, #12
    c342:	bc3c      	pop	{r2, r3, r4, r5}
    c344:	4690      	mov	r8, r2
    c346:	4699      	mov	r9, r3
    c348:	46a2      	mov	sl, r4
    c34a:	46ab      	mov	fp, r5
    c34c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c34e:	230c      	movs	r3, #12
    c350:	9a01      	ldr	r2, [sp, #4]
    c352:	6013      	str	r3, [r2, #0]
    c354:	e7e5      	b.n	c322 <__ssprint_r+0xe6>
    c356:	46c0      	nop			; (mov r8, r8)
    c358:	fffffb7f 	.word	0xfffffb7f

0000c35c <_sungetc_r>:
    c35c:	b570      	push	{r4, r5, r6, lr}
    c35e:	0014      	movs	r4, r2
    c360:	1c4b      	adds	r3, r1, #1
    c362:	d01b      	beq.n	c39c <_sungetc_r+0x40>
    c364:	8993      	ldrh	r3, [r2, #12]
    c366:	2220      	movs	r2, #32
    c368:	25ff      	movs	r5, #255	; 0xff
    c36a:	4393      	bics	r3, r2
    c36c:	81a3      	strh	r3, [r4, #12]
    c36e:	6b23      	ldr	r3, [r4, #48]	; 0x30
    c370:	b2ce      	uxtb	r6, r1
    c372:	400d      	ands	r5, r1
    c374:	2b00      	cmp	r3, #0
    c376:	d014      	beq.n	c3a2 <_sungetc_r+0x46>
    c378:	6863      	ldr	r3, [r4, #4]
    c37a:	6b62      	ldr	r2, [r4, #52]	; 0x34
    c37c:	4293      	cmp	r3, r2
    c37e:	da08      	bge.n	c392 <_sungetc_r+0x36>
    c380:	6823      	ldr	r3, [r4, #0]
    c382:	3b01      	subs	r3, #1
    c384:	6023      	str	r3, [r4, #0]
    c386:	701e      	strb	r6, [r3, #0]
    c388:	6863      	ldr	r3, [r4, #4]
    c38a:	3301      	adds	r3, #1
    c38c:	6063      	str	r3, [r4, #4]
    c38e:	0028      	movs	r0, r5
    c390:	bd70      	pop	{r4, r5, r6, pc}
    c392:	0021      	movs	r1, r4
    c394:	f000 f88c 	bl	c4b0 <__submore>
    c398:	2800      	cmp	r0, #0
    c39a:	d0f1      	beq.n	c380 <_sungetc_r+0x24>
    c39c:	2501      	movs	r5, #1
    c39e:	426d      	negs	r5, r5
    c3a0:	e7f5      	b.n	c38e <_sungetc_r+0x32>
    c3a2:	6922      	ldr	r2, [r4, #16]
    c3a4:	6823      	ldr	r3, [r4, #0]
    c3a6:	2a00      	cmp	r2, #0
    c3a8:	d005      	beq.n	c3b6 <_sungetc_r+0x5a>
    c3aa:	429a      	cmp	r2, r3
    c3ac:	d203      	bcs.n	c3b6 <_sungetc_r+0x5a>
    c3ae:	1e5a      	subs	r2, r3, #1
    c3b0:	7811      	ldrb	r1, [r2, #0]
    c3b2:	428d      	cmp	r5, r1
    c3b4:	d00f      	beq.n	c3d6 <_sungetc_r+0x7a>
    c3b6:	63a3      	str	r3, [r4, #56]	; 0x38
    c3b8:	0023      	movs	r3, r4
    c3ba:	3340      	adds	r3, #64	; 0x40
    c3bc:	6323      	str	r3, [r4, #48]	; 0x30
    c3be:	2303      	movs	r3, #3
    c3c0:	6862      	ldr	r2, [r4, #4]
    c3c2:	6363      	str	r3, [r4, #52]	; 0x34
    c3c4:	333f      	adds	r3, #63	; 0x3f
    c3c6:	63e2      	str	r2, [r4, #60]	; 0x3c
    c3c8:	54e6      	strb	r6, [r4, r3]
    c3ca:	0023      	movs	r3, r4
    c3cc:	3342      	adds	r3, #66	; 0x42
    c3ce:	6023      	str	r3, [r4, #0]
    c3d0:	2301      	movs	r3, #1
    c3d2:	6063      	str	r3, [r4, #4]
    c3d4:	e7db      	b.n	c38e <_sungetc_r+0x32>
    c3d6:	6863      	ldr	r3, [r4, #4]
    c3d8:	6022      	str	r2, [r4, #0]
    c3da:	3301      	adds	r3, #1
    c3dc:	6063      	str	r3, [r4, #4]
    c3de:	e7d6      	b.n	c38e <_sungetc_r+0x32>

0000c3e0 <__ssrefill_r>:
    c3e0:	b510      	push	{r4, lr}
    c3e2:	000c      	movs	r4, r1
    c3e4:	6b09      	ldr	r1, [r1, #48]	; 0x30
    c3e6:	2900      	cmp	r1, #0
    c3e8:	d00f      	beq.n	c40a <__ssrefill_r+0x2a>
    c3ea:	0023      	movs	r3, r4
    c3ec:	3340      	adds	r3, #64	; 0x40
    c3ee:	4299      	cmp	r1, r3
    c3f0:	d001      	beq.n	c3f6 <__ssrefill_r+0x16>
    c3f2:	f7fd fb23 	bl	9a3c <_free_r>
    c3f6:	2300      	movs	r3, #0
    c3f8:	6323      	str	r3, [r4, #48]	; 0x30
    c3fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    c3fc:	6063      	str	r3, [r4, #4]
    c3fe:	2b00      	cmp	r3, #0
    c400:	d003      	beq.n	c40a <__ssrefill_r+0x2a>
    c402:	2000      	movs	r0, #0
    c404:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    c406:	6023      	str	r3, [r4, #0]
    c408:	bd10      	pop	{r4, pc}
    c40a:	6923      	ldr	r3, [r4, #16]
    c40c:	2220      	movs	r2, #32
    c40e:	6023      	str	r3, [r4, #0]
    c410:	2300      	movs	r3, #0
    c412:	2001      	movs	r0, #1
    c414:	6063      	str	r3, [r4, #4]
    c416:	89a3      	ldrh	r3, [r4, #12]
    c418:	4240      	negs	r0, r0
    c41a:	4313      	orrs	r3, r2
    c41c:	81a3      	strh	r3, [r4, #12]
    c41e:	e7f3      	b.n	c408 <__ssrefill_r+0x28>

0000c420 <_sfread_r>:
    c420:	b5f0      	push	{r4, r5, r6, r7, lr}
    c422:	46de      	mov	lr, fp
    c424:	4657      	mov	r7, sl
    c426:	4645      	mov	r5, r8
    c428:	464e      	mov	r6, r9
    c42a:	469b      	mov	fp, r3
    c42c:	b5e0      	push	{r5, r6, r7, lr}
    c42e:	b083      	sub	sp, #12
    c430:	0013      	movs	r3, r2
    c432:	9201      	str	r2, [sp, #4]
    c434:	465a      	mov	r2, fp
    c436:	4353      	muls	r3, r2
    c438:	4680      	mov	r8, r0
    c43a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    c43c:	469a      	mov	sl, r3
    c43e:	2b00      	cmp	r3, #0
    c440:	d026      	beq.n	c490 <_sfread_r+0x70>
    c442:	001f      	movs	r7, r3
    c444:	2300      	movs	r3, #0
    c446:	000e      	movs	r6, r1
    c448:	4699      	mov	r9, r3
    c44a:	e011      	b.n	c470 <_sfread_r+0x50>
    c44c:	6821      	ldr	r1, [r4, #0]
    c44e:	0030      	movs	r0, r6
    c450:	002a      	movs	r2, r5
    c452:	f7fd ff75 	bl	a340 <memcpy>
    c456:	6823      	ldr	r3, [r4, #0]
    c458:	0021      	movs	r1, r4
    c45a:	195b      	adds	r3, r3, r5
    c45c:	6023      	str	r3, [r4, #0]
    c45e:	464b      	mov	r3, r9
    c460:	4640      	mov	r0, r8
    c462:	6063      	str	r3, [r4, #4]
    c464:	1976      	adds	r6, r6, r5
    c466:	1b7f      	subs	r7, r7, r5
    c468:	f7ff ffba 	bl	c3e0 <__ssrefill_r>
    c46c:	2800      	cmp	r0, #0
    c46e:	d117      	bne.n	c4a0 <_sfread_r+0x80>
    c470:	6865      	ldr	r5, [r4, #4]
    c472:	42af      	cmp	r7, r5
    c474:	d8ea      	bhi.n	c44c <_sfread_r+0x2c>
    c476:	003a      	movs	r2, r7
    c478:	6821      	ldr	r1, [r4, #0]
    c47a:	0030      	movs	r0, r6
    c47c:	f7fd ff60 	bl	a340 <memcpy>
    c480:	6863      	ldr	r3, [r4, #4]
    c482:	46da      	mov	sl, fp
    c484:	1bdb      	subs	r3, r3, r7
    c486:	6063      	str	r3, [r4, #4]
    c488:	6823      	ldr	r3, [r4, #0]
    c48a:	469c      	mov	ip, r3
    c48c:	4467      	add	r7, ip
    c48e:	6027      	str	r7, [r4, #0]
    c490:	4650      	mov	r0, sl
    c492:	b003      	add	sp, #12
    c494:	bc3c      	pop	{r2, r3, r4, r5}
    c496:	4690      	mov	r8, r2
    c498:	4699      	mov	r9, r3
    c49a:	46a2      	mov	sl, r4
    c49c:	46ab      	mov	fp, r5
    c49e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c4a0:	4653      	mov	r3, sl
    c4a2:	9901      	ldr	r1, [sp, #4]
    c4a4:	1bd8      	subs	r0, r3, r7
    c4a6:	f7f7 fb2f 	bl	3b08 <__udivsi3>
    c4aa:	4682      	mov	sl, r0
    c4ac:	e7f0      	b.n	c490 <_sfread_r+0x70>
    c4ae:	46c0      	nop			; (mov r8, r8)

0000c4b0 <__submore>:
    c4b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    c4b2:	000c      	movs	r4, r1
    c4b4:	0023      	movs	r3, r4
    c4b6:	46c6      	mov	lr, r8
    c4b8:	6b09      	ldr	r1, [r1, #48]	; 0x30
    c4ba:	3340      	adds	r3, #64	; 0x40
    c4bc:	b500      	push	{lr}
    c4be:	4299      	cmp	r1, r3
    c4c0:	d015      	beq.n	c4ee <__submore+0x3e>
    c4c2:	6b66      	ldr	r6, [r4, #52]	; 0x34
    c4c4:	0077      	lsls	r7, r6, #1
    c4c6:	003a      	movs	r2, r7
    c4c8:	f000 fd0c 	bl	cee4 <_realloc_r>
    c4cc:	1e05      	subs	r5, r0, #0
    c4ce:	d028      	beq.n	c522 <__submore+0x72>
    c4d0:	1983      	adds	r3, r0, r6
    c4d2:	4698      	mov	r8, r3
    c4d4:	0001      	movs	r1, r0
    c4d6:	0032      	movs	r2, r6
    c4d8:	0018      	movs	r0, r3
    c4da:	f7fd ff31 	bl	a340 <memcpy>
    c4de:	4643      	mov	r3, r8
    c4e0:	2000      	movs	r0, #0
    c4e2:	6023      	str	r3, [r4, #0]
    c4e4:	6325      	str	r5, [r4, #48]	; 0x30
    c4e6:	6367      	str	r7, [r4, #52]	; 0x34
    c4e8:	bc04      	pop	{r2}
    c4ea:	4690      	mov	r8, r2
    c4ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c4ee:	2580      	movs	r5, #128	; 0x80
    c4f0:	00ed      	lsls	r5, r5, #3
    c4f2:	0029      	movs	r1, r5
    c4f4:	f7fd fbc2 	bl	9c7c <_malloc_r>
    c4f8:	2800      	cmp	r0, #0
    c4fa:	d012      	beq.n	c522 <__submore+0x72>
    c4fc:	2342      	movs	r3, #66	; 0x42
    c4fe:	6320      	str	r0, [r4, #48]	; 0x30
    c500:	6365      	str	r5, [r4, #52]	; 0x34
    c502:	5ce2      	ldrb	r2, [r4, r3]
    c504:	4b08      	ldr	r3, [pc, #32]	; (c528 <__submore+0x78>)
    c506:	54c2      	strb	r2, [r0, r3]
    c508:	2341      	movs	r3, #65	; 0x41
    c50a:	5ce2      	ldrb	r2, [r4, r3]
    c50c:	4b07      	ldr	r3, [pc, #28]	; (c52c <__submore+0x7c>)
    c50e:	54c2      	strb	r2, [r0, r3]
    c510:	2340      	movs	r3, #64	; 0x40
    c512:	5ce2      	ldrb	r2, [r4, r3]
    c514:	4b06      	ldr	r3, [pc, #24]	; (c530 <__submore+0x80>)
    c516:	469c      	mov	ip, r3
    c518:	54c2      	strb	r2, [r0, r3]
    c51a:	4460      	add	r0, ip
    c51c:	6020      	str	r0, [r4, #0]
    c51e:	2000      	movs	r0, #0
    c520:	e7e2      	b.n	c4e8 <__submore+0x38>
    c522:	2001      	movs	r0, #1
    c524:	4240      	negs	r0, r0
    c526:	e7df      	b.n	c4e8 <__submore+0x38>
    c528:	000003ff 	.word	0x000003ff
    c52c:	000003fe 	.word	0x000003fe
    c530:	000003fd 	.word	0x000003fd

0000c534 <__ascii_wctomb>:
    c534:	2900      	cmp	r1, #0
    c536:	d004      	beq.n	c542 <__ascii_wctomb+0xe>
    c538:	2aff      	cmp	r2, #255	; 0xff
    c53a:	d804      	bhi.n	c546 <__ascii_wctomb+0x12>
    c53c:	2001      	movs	r0, #1
    c53e:	700a      	strb	r2, [r1, #0]
    c540:	4770      	bx	lr
    c542:	2000      	movs	r0, #0
    c544:	e7fc      	b.n	c540 <__ascii_wctomb+0xc>
    c546:	238a      	movs	r3, #138	; 0x8a
    c548:	6003      	str	r3, [r0, #0]
    c54a:	2001      	movs	r0, #1
    c54c:	4240      	negs	r0, r0
    c54e:	e7f7      	b.n	c540 <__ascii_wctomb+0xc>

0000c550 <__register_exitproc>:
    c550:	b5f0      	push	{r4, r5, r6, r7, lr}
    c552:	464e      	mov	r6, r9
    c554:	4645      	mov	r5, r8
    c556:	46de      	mov	lr, fp
    c558:	4657      	mov	r7, sl
    c55a:	b5e0      	push	{r5, r6, r7, lr}
    c55c:	4d36      	ldr	r5, [pc, #216]	; (c638 <__register_exitproc+0xe8>)
    c55e:	b083      	sub	sp, #12
    c560:	0006      	movs	r6, r0
    c562:	6828      	ldr	r0, [r5, #0]
    c564:	4698      	mov	r8, r3
    c566:	000f      	movs	r7, r1
    c568:	4691      	mov	r9, r2
    c56a:	f7fd fb83 	bl	9c74 <__retarget_lock_acquire_recursive>
    c56e:	4b33      	ldr	r3, [pc, #204]	; (c63c <__register_exitproc+0xec>)
    c570:	681c      	ldr	r4, [r3, #0]
    c572:	23a4      	movs	r3, #164	; 0xa4
    c574:	005b      	lsls	r3, r3, #1
    c576:	58e0      	ldr	r0, [r4, r3]
    c578:	2800      	cmp	r0, #0
    c57a:	d052      	beq.n	c622 <__register_exitproc+0xd2>
    c57c:	6843      	ldr	r3, [r0, #4]
    c57e:	2b1f      	cmp	r3, #31
    c580:	dc13      	bgt.n	c5aa <__register_exitproc+0x5a>
    c582:	1c5a      	adds	r2, r3, #1
    c584:	9201      	str	r2, [sp, #4]
    c586:	2e00      	cmp	r6, #0
    c588:	d128      	bne.n	c5dc <__register_exitproc+0x8c>
    c58a:	9a01      	ldr	r2, [sp, #4]
    c58c:	3302      	adds	r3, #2
    c58e:	009b      	lsls	r3, r3, #2
    c590:	6042      	str	r2, [r0, #4]
    c592:	501f      	str	r7, [r3, r0]
    c594:	6828      	ldr	r0, [r5, #0]
    c596:	f7fd fb6f 	bl	9c78 <__retarget_lock_release_recursive>
    c59a:	2000      	movs	r0, #0
    c59c:	b003      	add	sp, #12
    c59e:	bc3c      	pop	{r2, r3, r4, r5}
    c5a0:	4690      	mov	r8, r2
    c5a2:	4699      	mov	r9, r3
    c5a4:	46a2      	mov	sl, r4
    c5a6:	46ab      	mov	fp, r5
    c5a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c5aa:	4b25      	ldr	r3, [pc, #148]	; (c640 <__register_exitproc+0xf0>)
    c5ac:	2b00      	cmp	r3, #0
    c5ae:	d03d      	beq.n	c62c <__register_exitproc+0xdc>
    c5b0:	20c8      	movs	r0, #200	; 0xc8
    c5b2:	0040      	lsls	r0, r0, #1
    c5b4:	e000      	b.n	c5b8 <__register_exitproc+0x68>
    c5b6:	bf00      	nop
    c5b8:	2800      	cmp	r0, #0
    c5ba:	d037      	beq.n	c62c <__register_exitproc+0xdc>
    c5bc:	22a4      	movs	r2, #164	; 0xa4
    c5be:	2300      	movs	r3, #0
    c5c0:	0052      	lsls	r2, r2, #1
    c5c2:	58a1      	ldr	r1, [r4, r2]
    c5c4:	6043      	str	r3, [r0, #4]
    c5c6:	6001      	str	r1, [r0, #0]
    c5c8:	50a0      	str	r0, [r4, r2]
    c5ca:	3240      	adds	r2, #64	; 0x40
    c5cc:	5083      	str	r3, [r0, r2]
    c5ce:	3204      	adds	r2, #4
    c5d0:	5083      	str	r3, [r0, r2]
    c5d2:	3301      	adds	r3, #1
    c5d4:	9301      	str	r3, [sp, #4]
    c5d6:	2300      	movs	r3, #0
    c5d8:	2e00      	cmp	r6, #0
    c5da:	d0d6      	beq.n	c58a <__register_exitproc+0x3a>
    c5dc:	009a      	lsls	r2, r3, #2
    c5de:	4692      	mov	sl, r2
    c5e0:	4482      	add	sl, r0
    c5e2:	464a      	mov	r2, r9
    c5e4:	2188      	movs	r1, #136	; 0x88
    c5e6:	4654      	mov	r4, sl
    c5e8:	5062      	str	r2, [r4, r1]
    c5ea:	22c4      	movs	r2, #196	; 0xc4
    c5ec:	0052      	lsls	r2, r2, #1
    c5ee:	4691      	mov	r9, r2
    c5f0:	4481      	add	r9, r0
    c5f2:	464a      	mov	r2, r9
    c5f4:	3987      	subs	r1, #135	; 0x87
    c5f6:	4099      	lsls	r1, r3
    c5f8:	6812      	ldr	r2, [r2, #0]
    c5fa:	468b      	mov	fp, r1
    c5fc:	430a      	orrs	r2, r1
    c5fe:	4694      	mov	ip, r2
    c600:	464a      	mov	r2, r9
    c602:	4661      	mov	r1, ip
    c604:	6011      	str	r1, [r2, #0]
    c606:	2284      	movs	r2, #132	; 0x84
    c608:	4641      	mov	r1, r8
    c60a:	0052      	lsls	r2, r2, #1
    c60c:	50a1      	str	r1, [r4, r2]
    c60e:	2e02      	cmp	r6, #2
    c610:	d1bb      	bne.n	c58a <__register_exitproc+0x3a>
    c612:	0002      	movs	r2, r0
    c614:	465c      	mov	r4, fp
    c616:	328d      	adds	r2, #141	; 0x8d
    c618:	32ff      	adds	r2, #255	; 0xff
    c61a:	6811      	ldr	r1, [r2, #0]
    c61c:	430c      	orrs	r4, r1
    c61e:	6014      	str	r4, [r2, #0]
    c620:	e7b3      	b.n	c58a <__register_exitproc+0x3a>
    c622:	0020      	movs	r0, r4
    c624:	304d      	adds	r0, #77	; 0x4d
    c626:	30ff      	adds	r0, #255	; 0xff
    c628:	50e0      	str	r0, [r4, r3]
    c62a:	e7a7      	b.n	c57c <__register_exitproc+0x2c>
    c62c:	6828      	ldr	r0, [r5, #0]
    c62e:	f7fd fb23 	bl	9c78 <__retarget_lock_release_recursive>
    c632:	2001      	movs	r0, #1
    c634:	4240      	negs	r0, r0
    c636:	e7b1      	b.n	c59c <__register_exitproc+0x4c>
    c638:	200004c8 	.word	0x200004c8
    c63c:	000100ac 	.word	0x000100ac
    c640:	00000000 	.word	0x00000000

0000c644 <_calloc_r>:
    c644:	b510      	push	{r4, lr}
    c646:	4351      	muls	r1, r2
    c648:	f7fd fb18 	bl	9c7c <_malloc_r>
    c64c:	1e04      	subs	r4, r0, #0
    c64e:	d01c      	beq.n	c68a <_calloc_r+0x46>
    c650:	0003      	movs	r3, r0
    c652:	3b08      	subs	r3, #8
    c654:	685a      	ldr	r2, [r3, #4]
    c656:	2303      	movs	r3, #3
    c658:	439a      	bics	r2, r3
    c65a:	3a04      	subs	r2, #4
    c65c:	2a24      	cmp	r2, #36	; 0x24
    c65e:	d816      	bhi.n	c68e <_calloc_r+0x4a>
    c660:	0003      	movs	r3, r0
    c662:	2a13      	cmp	r2, #19
    c664:	d90d      	bls.n	c682 <_calloc_r+0x3e>
    c666:	2100      	movs	r1, #0
    c668:	3308      	adds	r3, #8
    c66a:	6001      	str	r1, [r0, #0]
    c66c:	6041      	str	r1, [r0, #4]
    c66e:	2a1b      	cmp	r2, #27
    c670:	d907      	bls.n	c682 <_calloc_r+0x3e>
    c672:	6081      	str	r1, [r0, #8]
    c674:	60c1      	str	r1, [r0, #12]
    c676:	2a24      	cmp	r2, #36	; 0x24
    c678:	d10d      	bne.n	c696 <_calloc_r+0x52>
    c67a:	0003      	movs	r3, r0
    c67c:	6101      	str	r1, [r0, #16]
    c67e:	3318      	adds	r3, #24
    c680:	6141      	str	r1, [r0, #20]
    c682:	2200      	movs	r2, #0
    c684:	601a      	str	r2, [r3, #0]
    c686:	605a      	str	r2, [r3, #4]
    c688:	609a      	str	r2, [r3, #8]
    c68a:	0020      	movs	r0, r4
    c68c:	bd10      	pop	{r4, pc}
    c68e:	2100      	movs	r1, #0
    c690:	f7f9 fa52 	bl	5b38 <memset>
    c694:	e7f9      	b.n	c68a <_calloc_r+0x46>
    c696:	0003      	movs	r3, r0
    c698:	3310      	adds	r3, #16
    c69a:	e7f2      	b.n	c682 <_calloc_r+0x3e>

0000c69c <rshift>:
    c69c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c69e:	46ce      	mov	lr, r9
    c6a0:	4647      	mov	r7, r8
    c6a2:	0005      	movs	r5, r0
    c6a4:	6902      	ldr	r2, [r0, #16]
    c6a6:	b580      	push	{r7, lr}
    c6a8:	3514      	adds	r5, #20
    c6aa:	114c      	asrs	r4, r1, #5
    c6ac:	4294      	cmp	r4, r2
    c6ae:	da2c      	bge.n	c70a <rshift+0x6e>
    c6b0:	0092      	lsls	r2, r2, #2
    c6b2:	18af      	adds	r7, r5, r2
    c6b4:	231f      	movs	r3, #31
    c6b6:	00a2      	lsls	r2, r4, #2
    c6b8:	4691      	mov	r9, r2
    c6ba:	400b      	ands	r3, r1
    c6bc:	44a9      	add	r9, r5
    c6be:	469c      	mov	ip, r3
    c6c0:	2b00      	cmp	r3, #0
    c6c2:	d02a      	beq.n	c71a <rshift+0x7e>
    c6c4:	4662      	mov	r2, ip
    c6c6:	2320      	movs	r3, #32
    c6c8:	1a9b      	subs	r3, r3, r2
    c6ca:	4698      	mov	r8, r3
    c6cc:	464b      	mov	r3, r9
    c6ce:	681e      	ldr	r6, [r3, #0]
    c6d0:	1d1c      	adds	r4, r3, #4
    c6d2:	40d6      	lsrs	r6, r2
    c6d4:	42a7      	cmp	r7, r4
    c6d6:	d935      	bls.n	c744 <rshift+0xa8>
    c6d8:	0029      	movs	r1, r5
    c6da:	4642      	mov	r2, r8
    c6dc:	6823      	ldr	r3, [r4, #0]
    c6de:	4093      	lsls	r3, r2
    c6e0:	4333      	orrs	r3, r6
    c6e2:	c108      	stmia	r1!, {r3}
    c6e4:	4663      	mov	r3, ip
    c6e6:	cc40      	ldmia	r4!, {r6}
    c6e8:	40de      	lsrs	r6, r3
    c6ea:	42a7      	cmp	r7, r4
    c6ec:	d8f5      	bhi.n	c6da <rshift+0x3e>
    c6ee:	464b      	mov	r3, r9
    c6f0:	1afa      	subs	r2, r7, r3
    c6f2:	2303      	movs	r3, #3
    c6f4:	3a05      	subs	r2, #5
    c6f6:	439a      	bics	r2, r3
    c6f8:	3204      	adds	r2, #4
    c6fa:	18aa      	adds	r2, r5, r2
    c6fc:	6016      	str	r6, [r2, #0]
    c6fe:	2e00      	cmp	r6, #0
    c700:	d01d      	beq.n	c73e <rshift+0xa2>
    c702:	1d13      	adds	r3, r2, #4
    c704:	1b5b      	subs	r3, r3, r5
    c706:	109b      	asrs	r3, r3, #2
    c708:	e015      	b.n	c736 <rshift+0x9a>
    c70a:	2300      	movs	r3, #0
    c70c:	6103      	str	r3, [r0, #16]
    c70e:	2300      	movs	r3, #0
    c710:	6143      	str	r3, [r0, #20]
    c712:	bc0c      	pop	{r2, r3}
    c714:	4690      	mov	r8, r2
    c716:	4699      	mov	r9, r3
    c718:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c71a:	4649      	mov	r1, r9
    c71c:	454f      	cmp	r7, r9
    c71e:	d9f4      	bls.n	c70a <rshift+0x6e>
    c720:	c910      	ldmia	r1!, {r4}
    c722:	c510      	stmia	r5!, {r4}
    c724:	428f      	cmp	r7, r1
    c726:	d8fb      	bhi.n	c720 <rshift+0x84>
    c728:	464b      	mov	r3, r9
    c72a:	43db      	mvns	r3, r3
    c72c:	2203      	movs	r2, #3
    c72e:	19db      	adds	r3, r3, r7
    c730:	4393      	bics	r3, r2
    c732:	3304      	adds	r3, #4
    c734:	109b      	asrs	r3, r3, #2
    c736:	6103      	str	r3, [r0, #16]
    c738:	2b00      	cmp	r3, #0
    c73a:	d1ea      	bne.n	c712 <rshift+0x76>
    c73c:	e7e7      	b.n	c70e <rshift+0x72>
    c73e:	1b53      	subs	r3, r2, r5
    c740:	109b      	asrs	r3, r3, #2
    c742:	e7f8      	b.n	c736 <rshift+0x9a>
    c744:	002a      	movs	r2, r5
    c746:	e7d9      	b.n	c6fc <rshift+0x60>

0000c748 <__gethex>:
    c748:	b5f0      	push	{r4, r5, r6, r7, lr}
    c74a:	46de      	mov	lr, fp
    c74c:	464e      	mov	r6, r9
    c74e:	4657      	mov	r7, sl
    c750:	4645      	mov	r5, r8
    c752:	b5e0      	push	{r5, r6, r7, lr}
    c754:	b08b      	sub	sp, #44	; 0x2c
    c756:	9006      	str	r0, [sp, #24]
    c758:	9816      	ldr	r0, [sp, #88]	; 0x58
    c75a:	4689      	mov	r9, r1
    c75c:	4693      	mov	fp, r2
    c75e:	9309      	str	r3, [sp, #36]	; 0x24
    c760:	f7fd fa78 	bl	9c54 <__localeconv_l>
    c764:	6803      	ldr	r3, [r0, #0]
    c766:	0018      	movs	r0, r3
    c768:	001c      	movs	r4, r3
    c76a:	9304      	str	r3, [sp, #16]
    c76c:	f7f9 fb4c 	bl	5e08 <strlen>
    c770:	46a4      	mov	ip, r4
    c772:	0002      	movs	r2, r0
    c774:	4462      	add	r2, ip
    c776:	0013      	movs	r3, r2
    c778:	3b01      	subs	r3, #1
    c77a:	781b      	ldrb	r3, [r3, #0]
    c77c:	9002      	str	r0, [sp, #8]
    c77e:	9301      	str	r3, [sp, #4]
    c780:	464b      	mov	r3, r9
    c782:	681c      	ldr	r4, [r3, #0]
    c784:	78a2      	ldrb	r2, [r4, #2]
    c786:	2a30      	cmp	r2, #48	; 0x30
    c788:	d000      	beq.n	c78c <__gethex+0x44>
    c78a:	e1c4      	b.n	cb16 <__gethex+0x3ce>
    c78c:	2102      	movs	r1, #2
    c78e:	4249      	negs	r1, r1
    c790:	1ce3      	adds	r3, r4, #3
    c792:	1b09      	subs	r1, r1, r4
    c794:	18c8      	adds	r0, r1, r3
    c796:	001c      	movs	r4, r3
    c798:	3301      	adds	r3, #1
    c79a:	1e5a      	subs	r2, r3, #1
    c79c:	7812      	ldrb	r2, [r2, #0]
    c79e:	2a30      	cmp	r2, #48	; 0x30
    c7a0:	d0f8      	beq.n	c794 <__gethex+0x4c>
    c7a2:	4680      	mov	r8, r0
    c7a4:	4fbf      	ldr	r7, [pc, #764]	; (caa4 <__gethex+0x35c>)
    c7a6:	5cbb      	ldrb	r3, [r7, r2]
    c7a8:	2b00      	cmp	r3, #0
    c7aa:	d100      	bne.n	c7ae <__gethex+0x66>
    c7ac:	e0b0      	b.n	c910 <__gethex+0x1c8>
    c7ae:	2200      	movs	r2, #0
    c7b0:	2600      	movs	r6, #0
    c7b2:	4692      	mov	sl, r2
    c7b4:	7823      	ldrb	r3, [r4, #0]
    c7b6:	5cfb      	ldrb	r3, [r7, r3]
    c7b8:	0025      	movs	r5, r4
    c7ba:	2b00      	cmp	r3, #0
    c7bc:	d004      	beq.n	c7c8 <__gethex+0x80>
    c7be:	3501      	adds	r5, #1
    c7c0:	782b      	ldrb	r3, [r5, #0]
    c7c2:	5cfb      	ldrb	r3, [r7, r3]
    c7c4:	2b00      	cmp	r3, #0
    c7c6:	d1fa      	bne.n	c7be <__gethex+0x76>
    c7c8:	9a02      	ldr	r2, [sp, #8]
    c7ca:	9904      	ldr	r1, [sp, #16]
    c7cc:	0028      	movs	r0, r5
    c7ce:	f000 fd47 	bl	d260 <strncmp>
    c7d2:	2800      	cmp	r0, #0
    c7d4:	d100      	bne.n	c7d8 <__gethex+0x90>
    c7d6:	e08b      	b.n	c8f0 <__gethex+0x1a8>
    c7d8:	782b      	ldrb	r3, [r5, #0]
    c7da:	2e00      	cmp	r6, #0
    c7dc:	d100      	bne.n	c7e0 <__gethex+0x98>
    c7de:	e189      	b.n	caf4 <__gethex+0x3ac>
    c7e0:	1b76      	subs	r6, r6, r5
    c7e2:	00b2      	lsls	r2, r6, #2
    c7e4:	9203      	str	r2, [sp, #12]
    c7e6:	2b50      	cmp	r3, #80	; 0x50
    c7e8:	d100      	bne.n	c7ec <__gethex+0xa4>
    c7ea:	e0b4      	b.n	c956 <__gethex+0x20e>
    c7ec:	002e      	movs	r6, r5
    c7ee:	2b70      	cmp	r3, #112	; 0x70
    c7f0:	d100      	bne.n	c7f4 <__gethex+0xac>
    c7f2:	e0b0      	b.n	c956 <__gethex+0x20e>
    c7f4:	464b      	mov	r3, r9
    c7f6:	601d      	str	r5, [r3, #0]
    c7f8:	4653      	mov	r3, sl
    c7fa:	2b00      	cmp	r3, #0
    c7fc:	d000      	beq.n	c800 <__gethex+0xb8>
    c7fe:	e098      	b.n	c932 <__gethex+0x1ea>
    c800:	1b33      	subs	r3, r6, r4
    c802:	3b01      	subs	r3, #1
    c804:	2100      	movs	r1, #0
    c806:	2b07      	cmp	r3, #7
    c808:	dd03      	ble.n	c812 <__gethex+0xca>
    c80a:	3101      	adds	r1, #1
    c80c:	105b      	asrs	r3, r3, #1
    c80e:	2b07      	cmp	r3, #7
    c810:	dcfb      	bgt.n	c80a <__gethex+0xc2>
    c812:	9806      	ldr	r0, [sp, #24]
    c814:	f7fd fde6 	bl	a3e4 <_Balloc>
    c818:	0003      	movs	r3, r0
    c81a:	3314      	adds	r3, #20
    c81c:	9005      	str	r0, [sp, #20]
    c81e:	9308      	str	r3, [sp, #32]
    c820:	42b4      	cmp	r4, r6
    c822:	d300      	bcc.n	c826 <__gethex+0xde>
    c824:	e1c3      	b.n	cbae <__gethex+0x466>
    c826:	469a      	mov	sl, r3
    c828:	2300      	movs	r3, #0
    c82a:	9a02      	ldr	r2, [sp, #8]
    c82c:	4698      	mov	r8, r3
    c82e:	4699      	mov	r9, r3
    c830:	3301      	adds	r3, #1
    c832:	1a9b      	subs	r3, r3, r2
    c834:	9307      	str	r3, [sp, #28]
    c836:	0023      	movs	r3, r4
    c838:	4644      	mov	r4, r8
    c83a:	4698      	mov	r8, r3
    c83c:	e00e      	b.n	c85c <__gethex+0x114>
    c83e:	2c20      	cmp	r4, #32
    c840:	d05b      	beq.n	c8fa <__gethex+0x1b2>
    c842:	0022      	movs	r2, r4
    c844:	3404      	adds	r4, #4
    c846:	210f      	movs	r1, #15
    c848:	782b      	ldrb	r3, [r5, #0]
    c84a:	002e      	movs	r6, r5
    c84c:	5cfb      	ldrb	r3, [r7, r3]
    c84e:	400b      	ands	r3, r1
    c850:	4093      	lsls	r3, r2
    c852:	464a      	mov	r2, r9
    c854:	431a      	orrs	r2, r3
    c856:	4691      	mov	r9, r2
    c858:	4546      	cmp	r6, r8
    c85a:	d911      	bls.n	c880 <__gethex+0x138>
    c85c:	1e75      	subs	r5, r6, #1
    c85e:	782b      	ldrb	r3, [r5, #0]
    c860:	9a01      	ldr	r2, [sp, #4]
    c862:	4293      	cmp	r3, r2
    c864:	d1eb      	bne.n	c83e <__gethex+0xf6>
    c866:	9b07      	ldr	r3, [sp, #28]
    c868:	18ee      	adds	r6, r5, r3
    c86a:	4546      	cmp	r6, r8
    c86c:	d3e7      	bcc.n	c83e <__gethex+0xf6>
    c86e:	9a02      	ldr	r2, [sp, #8]
    c870:	9904      	ldr	r1, [sp, #16]
    c872:	0030      	movs	r0, r6
    c874:	f000 fcf4 	bl	d260 <strncmp>
    c878:	2800      	cmp	r0, #0
    c87a:	d1e0      	bne.n	c83e <__gethex+0xf6>
    c87c:	4546      	cmp	r6, r8
    c87e:	d8ed      	bhi.n	c85c <__gethex+0x114>
    c880:	4653      	mov	r3, sl
    c882:	464a      	mov	r2, r9
    c884:	c304      	stmia	r3!, {r2}
    c886:	9a08      	ldr	r2, [sp, #32]
    c888:	4648      	mov	r0, r9
    c88a:	1a9b      	subs	r3, r3, r2
    c88c:	9a05      	ldr	r2, [sp, #20]
    c88e:	109b      	asrs	r3, r3, #2
    c890:	6113      	str	r3, [r2, #16]
    c892:	015c      	lsls	r4, r3, #5
    c894:	f7fd fe68 	bl	a568 <__hi0bits>
    c898:	465b      	mov	r3, fp
    c89a:	681d      	ldr	r5, [r3, #0]
    c89c:	1a24      	subs	r4, r4, r0
    c89e:	42ac      	cmp	r4, r5
    c8a0:	dd00      	ble.n	c8a4 <__gethex+0x15c>
    c8a2:	e101      	b.n	caa8 <__gethex+0x360>
    c8a4:	2600      	movs	r6, #0
    c8a6:	42ac      	cmp	r4, r5
    c8a8:	da00      	bge.n	c8ac <__gethex+0x164>
    c8aa:	e126      	b.n	cafa <__gethex+0x3b2>
    c8ac:	465b      	mov	r3, fp
    c8ae:	9a03      	ldr	r2, [sp, #12]
    c8b0:	689b      	ldr	r3, [r3, #8]
    c8b2:	429a      	cmp	r2, r3
    c8b4:	dd00      	ble.n	c8b8 <__gethex+0x170>
    c8b6:	e0ba      	b.n	ca2e <__gethex+0x2e6>
    c8b8:	465b      	mov	r3, fp
    c8ba:	9903      	ldr	r1, [sp, #12]
    c8bc:	685b      	ldr	r3, [r3, #4]
    c8be:	4299      	cmp	r1, r3
    c8c0:	da00      	bge.n	c8c4 <__gethex+0x17c>
    c8c2:	e0d5      	b.n	ca70 <__gethex+0x328>
    c8c4:	2401      	movs	r4, #1
    c8c6:	2e00      	cmp	r6, #0
    c8c8:	d00b      	beq.n	c8e2 <__gethex+0x19a>
    c8ca:	465b      	mov	r3, fp
    c8cc:	68db      	ldr	r3, [r3, #12]
    c8ce:	2b02      	cmp	r3, #2
    c8d0:	d100      	bne.n	c8d4 <__gethex+0x18c>
    c8d2:	e152      	b.n	cb7a <__gethex+0x432>
    c8d4:	2b03      	cmp	r3, #3
    c8d6:	d100      	bne.n	c8da <__gethex+0x192>
    c8d8:	e153      	b.n	cb82 <__gethex+0x43a>
    c8da:	2b01      	cmp	r3, #1
    c8dc:	d069      	beq.n	c9b2 <__gethex+0x26a>
    c8de:	2310      	movs	r3, #16
    c8e0:	431c      	orrs	r4, r3
    c8e2:	9b14      	ldr	r3, [sp, #80]	; 0x50
    c8e4:	9a05      	ldr	r2, [sp, #20]
    c8e6:	601a      	str	r2, [r3, #0]
    c8e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c8ea:	9a03      	ldr	r2, [sp, #12]
    c8ec:	601a      	str	r2, [r3, #0]
    c8ee:	e026      	b.n	c93e <__gethex+0x1f6>
    c8f0:	2e00      	cmp	r6, #0
    c8f2:	d100      	bne.n	c8f6 <__gethex+0x1ae>
    c8f4:	e133      	b.n	cb5e <__gethex+0x416>
    c8f6:	782b      	ldrb	r3, [r5, #0]
    c8f8:	e772      	b.n	c7e0 <__gethex+0x98>
    c8fa:	4653      	mov	r3, sl
    c8fc:	464a      	mov	r2, r9
    c8fe:	601a      	str	r2, [r3, #0]
    c900:	2304      	movs	r3, #4
    c902:	469c      	mov	ip, r3
    c904:	2300      	movs	r3, #0
    c906:	44e2      	add	sl, ip
    c908:	2200      	movs	r2, #0
    c90a:	2404      	movs	r4, #4
    c90c:	4699      	mov	r9, r3
    c90e:	e79a      	b.n	c846 <__gethex+0xfe>
    c910:	9d02      	ldr	r5, [sp, #8]
    c912:	9904      	ldr	r1, [sp, #16]
    c914:	002a      	movs	r2, r5
    c916:	0020      	movs	r0, r4
    c918:	f000 fca2 	bl	d260 <strncmp>
    c91c:	2800      	cmp	r0, #0
    c91e:	d100      	bne.n	c922 <__gethex+0x1da>
    c920:	e091      	b.n	ca46 <__gethex+0x2fe>
    c922:	0025      	movs	r5, r4
    c924:	7822      	ldrb	r2, [r4, #0]
    c926:	2a50      	cmp	r2, #80	; 0x50
    c928:	d011      	beq.n	c94e <__gethex+0x206>
    c92a:	2a70      	cmp	r2, #112	; 0x70
    c92c:	d00f      	beq.n	c94e <__gethex+0x206>
    c92e:	464b      	mov	r3, r9
    c930:	601d      	str	r5, [r3, #0]
    c932:	4643      	mov	r3, r8
    c934:	425a      	negs	r2, r3
    c936:	4153      	adcs	r3, r2
    c938:	2406      	movs	r4, #6
    c93a:	425b      	negs	r3, r3
    c93c:	401c      	ands	r4, r3
    c93e:	0020      	movs	r0, r4
    c940:	b00b      	add	sp, #44	; 0x2c
    c942:	bc3c      	pop	{r2, r3, r4, r5}
    c944:	4690      	mov	r8, r2
    c946:	4699      	mov	r9, r3
    c948:	46a2      	mov	sl, r4
    c94a:	46ab      	mov	fp, r5
    c94c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c94e:	2300      	movs	r3, #0
    c950:	9303      	str	r3, [sp, #12]
    c952:	3301      	adds	r3, #1
    c954:	469a      	mov	sl, r3
    c956:	786b      	ldrb	r3, [r5, #1]
    c958:	2b2b      	cmp	r3, #43	; 0x2b
    c95a:	d100      	bne.n	c95e <__gethex+0x216>
    c95c:	e09f      	b.n	ca9e <__gethex+0x356>
    c95e:	2101      	movs	r1, #1
    c960:	2b2d      	cmp	r3, #45	; 0x2d
    c962:	d16d      	bne.n	ca40 <__gethex+0x2f8>
    c964:	78ab      	ldrb	r3, [r5, #2]
    c966:	1ca8      	adds	r0, r5, #2
    c968:	5cfb      	ldrb	r3, [r7, r3]
    c96a:	002e      	movs	r6, r5
    c96c:	1e5a      	subs	r2, r3, #1
    c96e:	2a18      	cmp	r2, #24
    c970:	d900      	bls.n	c974 <__gethex+0x22c>
    c972:	e73f      	b.n	c7f4 <__gethex+0xac>
    c974:	1c42      	adds	r2, r0, #1
    c976:	7840      	ldrb	r0, [r0, #1]
    c978:	3b10      	subs	r3, #16
    c97a:	5c38      	ldrb	r0, [r7, r0]
    c97c:	1e46      	subs	r6, r0, #1
    c97e:	2e18      	cmp	r6, #24
    c980:	d80c      	bhi.n	c99c <__gethex+0x254>
    c982:	0006      	movs	r6, r0
    c984:	0098      	lsls	r0, r3, #2
    c986:	18c0      	adds	r0, r0, r3
    c988:	0040      	lsls	r0, r0, #1
    c98a:	1980      	adds	r0, r0, r6
    c98c:	0003      	movs	r3, r0
    c98e:	3201      	adds	r2, #1
    c990:	7810      	ldrb	r0, [r2, #0]
    c992:	3b10      	subs	r3, #16
    c994:	5c3e      	ldrb	r6, [r7, r0]
    c996:	1e70      	subs	r0, r6, #1
    c998:	2818      	cmp	r0, #24
    c99a:	d9f3      	bls.n	c984 <__gethex+0x23c>
    c99c:	2900      	cmp	r1, #0
    c99e:	d000      	beq.n	c9a2 <__gethex+0x25a>
    c9a0:	425b      	negs	r3, r3
    c9a2:	9903      	ldr	r1, [sp, #12]
    c9a4:	002e      	movs	r6, r5
    c9a6:	468c      	mov	ip, r1
    c9a8:	449c      	add	ip, r3
    c9aa:	4663      	mov	r3, ip
    c9ac:	0015      	movs	r5, r2
    c9ae:	9303      	str	r3, [sp, #12]
    c9b0:	e720      	b.n	c7f4 <__gethex+0xac>
    c9b2:	07b2      	lsls	r2, r6, #30
    c9b4:	d593      	bpl.n	c8de <__gethex+0x196>
    c9b6:	9a08      	ldr	r2, [sp, #32]
    c9b8:	6812      	ldr	r2, [r2, #0]
    c9ba:	4316      	orrs	r6, r2
    c9bc:	9201      	str	r2, [sp, #4]
    c9be:	4233      	tst	r3, r6
    c9c0:	d100      	bne.n	c9c4 <__gethex+0x27c>
    c9c2:	e78c      	b.n	c8de <__gethex+0x196>
    c9c4:	9b05      	ldr	r3, [sp, #20]
    c9c6:	691f      	ldr	r7, [r3, #16]
    c9c8:	9b08      	ldr	r3, [sp, #32]
    c9ca:	00b9      	lsls	r1, r7, #2
    c9cc:	4688      	mov	r8, r1
    c9ce:	001a      	movs	r2, r3
    c9d0:	4442      	add	r2, r8
    c9d2:	0016      	movs	r6, r2
    c9d4:	2100      	movs	r1, #0
    c9d6:	469c      	mov	ip, r3
    c9d8:	e003      	b.n	c9e2 <__gethex+0x29a>
    c9da:	c302      	stmia	r3!, {r1}
    c9dc:	429e      	cmp	r6, r3
    c9de:	d800      	bhi.n	c9e2 <__gethex+0x29a>
    c9e0:	e0ff      	b.n	cbe2 <__gethex+0x49a>
    c9e2:	681a      	ldr	r2, [r3, #0]
    c9e4:	1c50      	adds	r0, r2, #1
    c9e6:	d0f8      	beq.n	c9da <__gethex+0x292>
    c9e8:	3201      	adds	r2, #1
    c9ea:	4660      	mov	r0, ip
    c9ec:	601a      	str	r2, [r3, #0]
    c9ee:	2c02      	cmp	r4, #2
    c9f0:	d100      	bne.n	c9f4 <__gethex+0x2ac>
    c9f2:	e10c      	b.n	cc0e <__gethex+0x4c6>
    c9f4:	231f      	movs	r3, #31
    c9f6:	2421      	movs	r4, #33	; 0x21
    c9f8:	401d      	ands	r5, r3
    c9fa:	d100      	bne.n	c9fe <__gethex+0x2b6>
    c9fc:	e771      	b.n	c8e2 <__gethex+0x19a>
    c9fe:	4440      	add	r0, r8
    ca00:	3804      	subs	r0, #4
    ca02:	6800      	ldr	r0, [r0, #0]
    ca04:	f7fd fdb0 	bl	a568 <__hi0bits>
    ca08:	2320      	movs	r3, #32
    ca0a:	1b5d      	subs	r5, r3, r5
    ca0c:	42a8      	cmp	r0, r5
    ca0e:	db00      	blt.n	ca12 <__gethex+0x2ca>
    ca10:	e767      	b.n	c8e2 <__gethex+0x19a>
    ca12:	2101      	movs	r1, #1
    ca14:	9805      	ldr	r0, [sp, #20]
    ca16:	f7ff fe41 	bl	c69c <rshift>
    ca1a:	9b03      	ldr	r3, [sp, #12]
    ca1c:	2421      	movs	r4, #33	; 0x21
    ca1e:	3301      	adds	r3, #1
    ca20:	001a      	movs	r2, r3
    ca22:	9303      	str	r3, [sp, #12]
    ca24:	465b      	mov	r3, fp
    ca26:	689b      	ldr	r3, [r3, #8]
    ca28:	429a      	cmp	r2, r3
    ca2a:	dc00      	bgt.n	ca2e <__gethex+0x2e6>
    ca2c:	e759      	b.n	c8e2 <__gethex+0x19a>
    ca2e:	9905      	ldr	r1, [sp, #20]
    ca30:	9806      	ldr	r0, [sp, #24]
    ca32:	f7fd fcff 	bl	a434 <_Bfree>
    ca36:	2300      	movs	r3, #0
    ca38:	9a14      	ldr	r2, [sp, #80]	; 0x50
    ca3a:	24a3      	movs	r4, #163	; 0xa3
    ca3c:	6013      	str	r3, [r2, #0]
    ca3e:	e77e      	b.n	c93e <__gethex+0x1f6>
    ca40:	1c68      	adds	r0, r5, #1
    ca42:	2100      	movs	r1, #0
    ca44:	e790      	b.n	c968 <__gethex+0x220>
    ca46:	1965      	adds	r5, r4, r5
    ca48:	782a      	ldrb	r2, [r5, #0]
    ca4a:	5cbb      	ldrb	r3, [r7, r2]
    ca4c:	2b00      	cmp	r3, #0
    ca4e:	d100      	bne.n	ca52 <__gethex+0x30a>
    ca50:	e769      	b.n	c926 <__gethex+0x1de>
    ca52:	002c      	movs	r4, r5
    ca54:	2a30      	cmp	r2, #48	; 0x30
    ca56:	d104      	bne.n	ca62 <__gethex+0x31a>
    ca58:	3401      	adds	r4, #1
    ca5a:	7823      	ldrb	r3, [r4, #0]
    ca5c:	2b30      	cmp	r3, #48	; 0x30
    ca5e:	d0fb      	beq.n	ca58 <__gethex+0x310>
    ca60:	5cfb      	ldrb	r3, [r7, r3]
    ca62:	4259      	negs	r1, r3
    ca64:	4159      	adcs	r1, r3
    ca66:	2201      	movs	r2, #1
    ca68:	468a      	mov	sl, r1
    ca6a:	002e      	movs	r6, r5
    ca6c:	4690      	mov	r8, r2
    ca6e:	e6a3      	b.n	c7b8 <__gethex+0x70>
    ca70:	1a5c      	subs	r4, r3, r1
    ca72:	42a5      	cmp	r5, r4
    ca74:	dc53      	bgt.n	cb1e <__gethex+0x3d6>
    ca76:	465a      	mov	r2, fp
    ca78:	68d2      	ldr	r2, [r2, #12]
    ca7a:	2a02      	cmp	r2, #2
    ca7c:	d100      	bne.n	ca80 <__gethex+0x338>
    ca7e:	e0ac      	b.n	cbda <__gethex+0x492>
    ca80:	2a03      	cmp	r2, #3
    ca82:	d100      	bne.n	ca86 <__gethex+0x33e>
    ca84:	e084      	b.n	cb90 <__gethex+0x448>
    ca86:	2a01      	cmp	r2, #1
    ca88:	d100      	bne.n	ca8c <__gethex+0x344>
    ca8a:	e097      	b.n	cbbc <__gethex+0x474>
    ca8c:	9905      	ldr	r1, [sp, #20]
    ca8e:	9806      	ldr	r0, [sp, #24]
    ca90:	f7fd fcd0 	bl	a434 <_Bfree>
    ca94:	2300      	movs	r3, #0
    ca96:	9a14      	ldr	r2, [sp, #80]	; 0x50
    ca98:	2450      	movs	r4, #80	; 0x50
    ca9a:	6013      	str	r3, [r2, #0]
    ca9c:	e74f      	b.n	c93e <__gethex+0x1f6>
    ca9e:	2100      	movs	r1, #0
    caa0:	e760      	b.n	c964 <__gethex+0x21c>
    caa2:	46c0      	nop			; (mov r8, r8)
    caa4:	00010a54 	.word	0x00010a54
    caa8:	1b64      	subs	r4, r4, r5
    caaa:	0021      	movs	r1, r4
    caac:	9805      	ldr	r0, [sp, #20]
    caae:	f7fe f917 	bl	ace0 <__any_on>
    cab2:	1e06      	subs	r6, r0, #0
    cab4:	d014      	beq.n	cae0 <__gethex+0x398>
    cab6:	211f      	movs	r1, #31
    cab8:	2301      	movs	r3, #1
    caba:	1e60      	subs	r0, r4, #1
    cabc:	4001      	ands	r1, r0
    cabe:	408b      	lsls	r3, r1
    cac0:	1142      	asrs	r2, r0, #5
    cac2:	9908      	ldr	r1, [sp, #32]
    cac4:	0092      	lsls	r2, r2, #2
    cac6:	588a      	ldr	r2, [r1, r2]
    cac8:	2601      	movs	r6, #1
    caca:	421a      	tst	r2, r3
    cacc:	d008      	beq.n	cae0 <__gethex+0x398>
    cace:	2801      	cmp	r0, #1
    cad0:	dd72      	ble.n	cbb8 <__gethex+0x470>
    cad2:	1ea1      	subs	r1, r4, #2
    cad4:	9805      	ldr	r0, [sp, #20]
    cad6:	f7fe f903 	bl	ace0 <__any_on>
    cada:	2800      	cmp	r0, #0
    cadc:	d06c      	beq.n	cbb8 <__gethex+0x470>
    cade:	2603      	movs	r6, #3
    cae0:	0021      	movs	r1, r4
    cae2:	9805      	ldr	r0, [sp, #20]
    cae4:	f7ff fdda 	bl	c69c <rshift>
    cae8:	9b03      	ldr	r3, [sp, #12]
    caea:	469c      	mov	ip, r3
    caec:	44a4      	add	ip, r4
    caee:	4663      	mov	r3, ip
    caf0:	9303      	str	r3, [sp, #12]
    caf2:	e6db      	b.n	c8ac <__gethex+0x164>
    caf4:	2200      	movs	r2, #0
    caf6:	9203      	str	r2, [sp, #12]
    caf8:	e675      	b.n	c7e6 <__gethex+0x9e>
    cafa:	1b2c      	subs	r4, r5, r4
    cafc:	0022      	movs	r2, r4
    cafe:	9905      	ldr	r1, [sp, #20]
    cb00:	9806      	ldr	r0, [sp, #24]
    cb02:	f7fd fe8d 	bl	a820 <__lshift>
    cb06:	0003      	movs	r3, r0
    cb08:	9a03      	ldr	r2, [sp, #12]
    cb0a:	3314      	adds	r3, #20
    cb0c:	1b12      	subs	r2, r2, r4
    cb0e:	9005      	str	r0, [sp, #20]
    cb10:	9203      	str	r2, [sp, #12]
    cb12:	9308      	str	r3, [sp, #32]
    cb14:	e6ca      	b.n	c8ac <__gethex+0x164>
    cb16:	2300      	movs	r3, #0
    cb18:	3402      	adds	r4, #2
    cb1a:	4698      	mov	r8, r3
    cb1c:	e642      	b.n	c7a4 <__gethex+0x5c>
    cb1e:	1e67      	subs	r7, r4, #1
    cb20:	2e00      	cmp	r6, #0
    cb22:	d133      	bne.n	cb8c <__gethex+0x444>
    cb24:	2f00      	cmp	r7, #0
    cb26:	d004      	beq.n	cb32 <__gethex+0x3ea>
    cb28:	0039      	movs	r1, r7
    cb2a:	9805      	ldr	r0, [sp, #20]
    cb2c:	f7fe f8d8 	bl	ace0 <__any_on>
    cb30:	0006      	movs	r6, r0
    cb32:	231f      	movs	r3, #31
    cb34:	117a      	asrs	r2, r7, #5
    cb36:	401f      	ands	r7, r3
    cb38:	3b1e      	subs	r3, #30
    cb3a:	40bb      	lsls	r3, r7
    cb3c:	9908      	ldr	r1, [sp, #32]
    cb3e:	0092      	lsls	r2, r2, #2
    cb40:	588a      	ldr	r2, [r1, r2]
    cb42:	421a      	tst	r2, r3
    cb44:	d001      	beq.n	cb4a <__gethex+0x402>
    cb46:	2302      	movs	r3, #2
    cb48:	431e      	orrs	r6, r3
    cb4a:	0021      	movs	r1, r4
    cb4c:	9805      	ldr	r0, [sp, #20]
    cb4e:	f7ff fda5 	bl	c69c <rshift>
    cb52:	465b      	mov	r3, fp
    cb54:	685b      	ldr	r3, [r3, #4]
    cb56:	1b2d      	subs	r5, r5, r4
    cb58:	9303      	str	r3, [sp, #12]
    cb5a:	2402      	movs	r4, #2
    cb5c:	e6b3      	b.n	c8c6 <__gethex+0x17e>
    cb5e:	9b02      	ldr	r3, [sp, #8]
    cb60:	18ee      	adds	r6, r5, r3
    cb62:	7833      	ldrb	r3, [r6, #0]
    cb64:	0035      	movs	r5, r6
    cb66:	5cfa      	ldrb	r2, [r7, r3]
    cb68:	2a00      	cmp	r2, #0
    cb6a:	d100      	bne.n	cb6e <__gethex+0x426>
    cb6c:	e638      	b.n	c7e0 <__gethex+0x98>
    cb6e:	3501      	adds	r5, #1
    cb70:	782b      	ldrb	r3, [r5, #0]
    cb72:	5cfa      	ldrb	r2, [r7, r3]
    cb74:	2a00      	cmp	r2, #0
    cb76:	d1fa      	bne.n	cb6e <__gethex+0x426>
    cb78:	e632      	b.n	c7e0 <__gethex+0x98>
    cb7a:	2301      	movs	r3, #1
    cb7c:	9a15      	ldr	r2, [sp, #84]	; 0x54
    cb7e:	1a9b      	subs	r3, r3, r2
    cb80:	9315      	str	r3, [sp, #84]	; 0x54
    cb82:	9b15      	ldr	r3, [sp, #84]	; 0x54
    cb84:	2b00      	cmp	r3, #0
    cb86:	d100      	bne.n	cb8a <__gethex+0x442>
    cb88:	e6a9      	b.n	c8de <__gethex+0x196>
    cb8a:	e71b      	b.n	c9c4 <__gethex+0x27c>
    cb8c:	2601      	movs	r6, #1
    cb8e:	e7d0      	b.n	cb32 <__gethex+0x3ea>
    cb90:	9a15      	ldr	r2, [sp, #84]	; 0x54
    cb92:	2a00      	cmp	r2, #0
    cb94:	d100      	bne.n	cb98 <__gethex+0x450>
    cb96:	e779      	b.n	ca8c <__gethex+0x344>
    cb98:	9a09      	ldr	r2, [sp, #36]	; 0x24
    cb9a:	9908      	ldr	r1, [sp, #32]
    cb9c:	6013      	str	r3, [r2, #0]
    cb9e:	2301      	movs	r3, #1
    cba0:	9a05      	ldr	r2, [sp, #20]
    cba2:	2462      	movs	r4, #98	; 0x62
    cba4:	6113      	str	r3, [r2, #16]
    cba6:	600b      	str	r3, [r1, #0]
    cba8:	9b14      	ldr	r3, [sp, #80]	; 0x50
    cbaa:	601a      	str	r2, [r3, #0]
    cbac:	e6c7      	b.n	c93e <__gethex+0x1f6>
    cbae:	9b08      	ldr	r3, [sp, #32]
    cbb0:	469a      	mov	sl, r3
    cbb2:	2300      	movs	r3, #0
    cbb4:	4699      	mov	r9, r3
    cbb6:	e663      	b.n	c880 <__gethex+0x138>
    cbb8:	2602      	movs	r6, #2
    cbba:	e791      	b.n	cae0 <__gethex+0x398>
    cbbc:	42a5      	cmp	r5, r4
    cbbe:	d000      	beq.n	cbc2 <__gethex+0x47a>
    cbc0:	e764      	b.n	ca8c <__gethex+0x344>
    cbc2:	2d01      	cmp	r5, #1
    cbc4:	dde8      	ble.n	cb98 <__gethex+0x450>
    cbc6:	1e69      	subs	r1, r5, #1
    cbc8:	9805      	ldr	r0, [sp, #20]
    cbca:	f7fe f889 	bl	ace0 <__any_on>
    cbce:	2800      	cmp	r0, #0
    cbd0:	d100      	bne.n	cbd4 <__gethex+0x48c>
    cbd2:	e75b      	b.n	ca8c <__gethex+0x344>
    cbd4:	465b      	mov	r3, fp
    cbd6:	685b      	ldr	r3, [r3, #4]
    cbd8:	e7de      	b.n	cb98 <__gethex+0x450>
    cbda:	9a15      	ldr	r2, [sp, #84]	; 0x54
    cbdc:	2a00      	cmp	r2, #0
    cbde:	d0db      	beq.n	cb98 <__gethex+0x450>
    cbe0:	e754      	b.n	ca8c <__gethex+0x344>
    cbe2:	9b05      	ldr	r3, [sp, #20]
    cbe4:	689b      	ldr	r3, [r3, #8]
    cbe6:	9301      	str	r3, [sp, #4]
    cbe8:	429f      	cmp	r7, r3
    cbea:	da23      	bge.n	cc34 <__gethex+0x4ec>
    cbec:	003b      	movs	r3, r7
    cbee:	9808      	ldr	r0, [sp, #32]
    cbf0:	9905      	ldr	r1, [sp, #20]
    cbf2:	1c5a      	adds	r2, r3, #1
    cbf4:	468c      	mov	ip, r1
    cbf6:	610a      	str	r2, [r1, #16]
    cbf8:	2101      	movs	r1, #1
    cbfa:	3304      	adds	r3, #4
    cbfc:	009b      	lsls	r3, r3, #2
    cbfe:	4463      	add	r3, ip
    cc00:	6059      	str	r1, [r3, #4]
    cc02:	2c02      	cmp	r4, #2
    cc04:	d003      	beq.n	cc0e <__gethex+0x4c6>
    cc06:	4297      	cmp	r7, r2
    cc08:	da00      	bge.n	cc0c <__gethex+0x4c4>
    cc0a:	e702      	b.n	ca12 <__gethex+0x2ca>
    cc0c:	e6f2      	b.n	c9f4 <__gethex+0x2ac>
    cc0e:	465b      	mov	r3, fp
    cc10:	681b      	ldr	r3, [r3, #0]
    cc12:	2422      	movs	r4, #34	; 0x22
    cc14:	3b01      	subs	r3, #1
    cc16:	429d      	cmp	r5, r3
    cc18:	d000      	beq.n	cc1c <__gethex+0x4d4>
    cc1a:	e662      	b.n	c8e2 <__gethex+0x19a>
    cc1c:	231f      	movs	r3, #31
    cc1e:	116a      	asrs	r2, r5, #5
    cc20:	401d      	ands	r5, r3
    cc22:	3b1e      	subs	r3, #30
    cc24:	40ab      	lsls	r3, r5
    cc26:	0092      	lsls	r2, r2, #2
    cc28:	5814      	ldr	r4, [r2, r0]
    cc2a:	4023      	ands	r3, r4
    cc2c:	425c      	negs	r4, r3
    cc2e:	415c      	adcs	r4, r3
    cc30:	3421      	adds	r4, #33	; 0x21
    cc32:	e656      	b.n	c8e2 <__gethex+0x19a>
    cc34:	9b05      	ldr	r3, [sp, #20]
    cc36:	685a      	ldr	r2, [r3, #4]
    cc38:	9b06      	ldr	r3, [sp, #24]
    cc3a:	1c51      	adds	r1, r2, #1
    cc3c:	0018      	movs	r0, r3
    cc3e:	4699      	mov	r9, r3
    cc40:	9201      	str	r2, [sp, #4]
    cc42:	f7fd fbcf 	bl	a3e4 <_Balloc>
    cc46:	0006      	movs	r6, r0
    cc48:	9b05      	ldr	r3, [sp, #20]
    cc4a:	300c      	adds	r0, #12
    cc4c:	691a      	ldr	r2, [r3, #16]
    cc4e:	330c      	adds	r3, #12
    cc50:	9201      	str	r2, [sp, #4]
    cc52:	3202      	adds	r2, #2
    cc54:	0019      	movs	r1, r3
    cc56:	0092      	lsls	r2, r2, #2
    cc58:	f7fd fb72 	bl	a340 <memcpy>
    cc5c:	4648      	mov	r0, r9
    cc5e:	9905      	ldr	r1, [sp, #20]
    cc60:	f7fd fbe8 	bl	a434 <_Bfree>
    cc64:	0030      	movs	r0, r6
    cc66:	6933      	ldr	r3, [r6, #16]
    cc68:	3014      	adds	r0, #20
    cc6a:	9605      	str	r6, [sp, #20]
    cc6c:	e7c0      	b.n	cbf0 <__gethex+0x4a8>
    cc6e:	46c0      	nop			; (mov r8, r8)

0000cc70 <__match>:
    cc70:	b530      	push	{r4, r5, lr}
    cc72:	6802      	ldr	r2, [r0, #0]
    cc74:	e008      	b.n	cc88 <__match+0x18>
    cc76:	7813      	ldrb	r3, [r2, #0]
    cc78:	001d      	movs	r5, r3
    cc7a:	3d41      	subs	r5, #65	; 0x41
    cc7c:	2d19      	cmp	r5, #25
    cc7e:	d800      	bhi.n	cc82 <__match+0x12>
    cc80:	3320      	adds	r3, #32
    cc82:	3101      	adds	r1, #1
    cc84:	42a3      	cmp	r3, r4
    cc86:	d106      	bne.n	cc96 <__match+0x26>
    cc88:	780c      	ldrb	r4, [r1, #0]
    cc8a:	3201      	adds	r2, #1
    cc8c:	2c00      	cmp	r4, #0
    cc8e:	d1f2      	bne.n	cc76 <__match+0x6>
    cc90:	6002      	str	r2, [r0, #0]
    cc92:	2001      	movs	r0, #1
    cc94:	bd30      	pop	{r4, r5, pc}
    cc96:	2000      	movs	r0, #0
    cc98:	e7fc      	b.n	cc94 <__match+0x24>
    cc9a:	46c0      	nop			; (mov r8, r8)

0000cc9c <__hexnan>:
    cc9c:	b5f0      	push	{r4, r5, r6, r7, lr}
    cc9e:	4657      	mov	r7, sl
    cca0:	46de      	mov	lr, fp
    cca2:	464e      	mov	r6, r9
    cca4:	4645      	mov	r5, r8
    cca6:	4692      	mov	sl, r2
    cca8:	680a      	ldr	r2, [r1, #0]
    ccaa:	211f      	movs	r1, #31
    ccac:	b5e0      	push	{r5, r6, r7, lr}
    ccae:	1153      	asrs	r3, r2, #5
    ccb0:	b085      	sub	sp, #20
    ccb2:	009b      	lsls	r3, r3, #2
    ccb4:	4011      	ands	r1, r2
    ccb6:	9001      	str	r0, [sp, #4]
    ccb8:	4453      	add	r3, sl
    ccba:	9103      	str	r1, [sp, #12]
    ccbc:	2900      	cmp	r1, #0
    ccbe:	d000      	beq.n	ccc2 <__hexnan+0x26>
    ccc0:	3304      	adds	r3, #4
    ccc2:	3b04      	subs	r3, #4
    ccc4:	469b      	mov	fp, r3
    ccc6:	2300      	movs	r3, #0
    ccc8:	465a      	mov	r2, fp
    ccca:	6013      	str	r3, [r2, #0]
    cccc:	9b01      	ldr	r3, [sp, #4]
    ccce:	465c      	mov	r4, fp
    ccd0:	6818      	ldr	r0, [r3, #0]
    ccd2:	2300      	movs	r3, #0
    ccd4:	7841      	ldrb	r1, [r0, #1]
    ccd6:	9300      	str	r3, [sp, #0]
    ccd8:	4b59      	ldr	r3, [pc, #356]	; (ce40 <__hexnan+0x1a4>)
    ccda:	46d8      	mov	r8, fp
    ccdc:	2500      	movs	r5, #0
    ccde:	2200      	movs	r2, #0
    cce0:	4699      	mov	r9, r3
    cce2:	9402      	str	r4, [sp, #8]
    cce4:	1c46      	adds	r6, r0, #1
    cce6:	2900      	cmp	r1, #0
    cce8:	d036      	beq.n	cd58 <__hexnan+0xbc>
    ccea:	464b      	mov	r3, r9
    ccec:	5c5b      	ldrb	r3, [r3, r1]
    ccee:	2b00      	cmp	r3, #0
    ccf0:	d158      	bne.n	cda4 <__hexnan+0x108>
    ccf2:	2920      	cmp	r1, #32
    ccf4:	d868      	bhi.n	cdc8 <__hexnan+0x12c>
    ccf6:	9b00      	ldr	r3, [sp, #0]
    ccf8:	429a      	cmp	r2, r3
    ccfa:	dd28      	ble.n	cd4e <__hexnan+0xb2>
    ccfc:	4544      	cmp	r4, r8
    ccfe:	d21c      	bcs.n	cd3a <__hexnan+0x9e>
    cd00:	2d07      	cmp	r5, #7
    cd02:	dc1a      	bgt.n	cd3a <__hexnan+0x9e>
    cd04:	2308      	movs	r3, #8
    cd06:	1b5d      	subs	r5, r3, r5
    cd08:	00ad      	lsls	r5, r5, #2
    cd0a:	3318      	adds	r3, #24
    cd0c:	1b5b      	subs	r3, r3, r5
    cd0e:	469c      	mov	ip, r3
    cd10:	4661      	mov	r1, ip
    cd12:	6823      	ldr	r3, [r4, #0]
    cd14:	0020      	movs	r0, r4
    cd16:	4647      	mov	r7, r8
    cd18:	4694      	mov	ip, r2
    cd1a:	46a0      	mov	r8, r4
    cd1c:	000a      	movs	r2, r1
    cd1e:	001c      	movs	r4, r3
    cd20:	6841      	ldr	r1, [r0, #4]
    cd22:	000b      	movs	r3, r1
    cd24:	4093      	lsls	r3, r2
    cd26:	40e9      	lsrs	r1, r5
    cd28:	4323      	orrs	r3, r4
    cd2a:	c008      	stmia	r0!, {r3}
    cd2c:	000c      	movs	r4, r1
    cd2e:	6001      	str	r1, [r0, #0]
    cd30:	4287      	cmp	r7, r0
    cd32:	d8f5      	bhi.n	cd20 <__hexnan+0x84>
    cd34:	4644      	mov	r4, r8
    cd36:	4662      	mov	r2, ip
    cd38:	46b8      	mov	r8, r7
    cd3a:	2508      	movs	r5, #8
    cd3c:	4554      	cmp	r4, sl
    cd3e:	d906      	bls.n	cd4e <__hexnan+0xb2>
    cd40:	1f23      	subs	r3, r4, #4
    cd42:	2100      	movs	r1, #0
    cd44:	4698      	mov	r8, r3
    cd46:	001c      	movs	r4, r3
    cd48:	2500      	movs	r5, #0
    cd4a:	6019      	str	r1, [r3, #0]
    cd4c:	9200      	str	r2, [sp, #0]
    cd4e:	0030      	movs	r0, r6
    cd50:	7841      	ldrb	r1, [r0, #1]
    cd52:	1c46      	adds	r6, r0, #1
    cd54:	2900      	cmp	r1, #0
    cd56:	d1c8      	bne.n	ccea <__hexnan+0x4e>
    cd58:	9b02      	ldr	r3, [sp, #8]
    cd5a:	469c      	mov	ip, r3
    cd5c:	2a00      	cmp	r2, #0
    cd5e:	d037      	beq.n	cdd0 <__hexnan+0x134>
    cd60:	4544      	cmp	r4, r8
    cd62:	d201      	bcs.n	cd68 <__hexnan+0xcc>
    cd64:	2d07      	cmp	r5, #7
    cd66:	dd57      	ble.n	ce18 <__hexnan+0x17c>
    cd68:	4554      	cmp	r4, sl
    cd6a:	d939      	bls.n	cde0 <__hexnan+0x144>
    cd6c:	4653      	mov	r3, sl
    cd6e:	4659      	mov	r1, fp
    cd70:	cc04      	ldmia	r4!, {r2}
    cd72:	601a      	str	r2, [r3, #0]
    cd74:	3304      	adds	r3, #4
    cd76:	42a1      	cmp	r1, r4
    cd78:	d2fa      	bcs.n	cd70 <__hexnan+0xd4>
    cd7a:	2200      	movs	r2, #0
    cd7c:	c304      	stmia	r3!, {r2}
    cd7e:	4299      	cmp	r1, r3
    cd80:	d2fc      	bcs.n	cd7c <__hexnan+0xe0>
    cd82:	468b      	mov	fp, r1
    cd84:	680b      	ldr	r3, [r1, #0]
    cd86:	2b00      	cmp	r3, #0
    cd88:	d10a      	bne.n	cda0 <__hexnan+0x104>
    cd8a:	4663      	mov	r3, ip
    cd8c:	4652      	mov	r2, sl
    cd8e:	45da      	cmp	sl, fp
    cd90:	d102      	bne.n	cd98 <__hexnan+0xfc>
    cd92:	e035      	b.n	ce00 <__hexnan+0x164>
    cd94:	429a      	cmp	r2, r3
    cd96:	d032      	beq.n	cdfe <__hexnan+0x162>
    cd98:	3b04      	subs	r3, #4
    cd9a:	6819      	ldr	r1, [r3, #0]
    cd9c:	2900      	cmp	r1, #0
    cd9e:	d0f9      	beq.n	cd94 <__hexnan+0xf8>
    cda0:	2005      	movs	r0, #5
    cda2:	e016      	b.n	cdd2 <__hexnan+0x136>
    cda4:	3501      	adds	r5, #1
    cda6:	3201      	adds	r2, #1
    cda8:	2d08      	cmp	r5, #8
    cdaa:	dd05      	ble.n	cdb8 <__hexnan+0x11c>
    cdac:	4554      	cmp	r4, sl
    cdae:	d9ce      	bls.n	cd4e <__hexnan+0xb2>
    cdb0:	2100      	movs	r1, #0
    cdb2:	2501      	movs	r5, #1
    cdb4:	3c04      	subs	r4, #4
    cdb6:	6021      	str	r1, [r4, #0]
    cdb8:	200f      	movs	r0, #15
    cdba:	6821      	ldr	r1, [r4, #0]
    cdbc:	4003      	ands	r3, r0
    cdbe:	0109      	lsls	r1, r1, #4
    cdc0:	430b      	orrs	r3, r1
    cdc2:	6023      	str	r3, [r4, #0]
    cdc4:	0030      	movs	r0, r6
    cdc6:	e7c3      	b.n	cd50 <__hexnan+0xb4>
    cdc8:	9b02      	ldr	r3, [sp, #8]
    cdca:	469c      	mov	ip, r3
    cdcc:	2929      	cmp	r1, #41	; 0x29
    cdce:	d01f      	beq.n	ce10 <__hexnan+0x174>
    cdd0:	2004      	movs	r0, #4
    cdd2:	b005      	add	sp, #20
    cdd4:	bc3c      	pop	{r2, r3, r4, r5}
    cdd6:	4690      	mov	r8, r2
    cdd8:	4699      	mov	r9, r3
    cdda:	46a2      	mov	sl, r4
    cddc:	46ab      	mov	fp, r5
    cdde:	bdf0      	pop	{r4, r5, r6, r7, pc}
    cde0:	9b03      	ldr	r3, [sp, #12]
    cde2:	2b00      	cmp	r3, #0
    cde4:	d011      	beq.n	ce0a <__hexnan+0x16e>
    cde6:	2220      	movs	r2, #32
    cde8:	9b03      	ldr	r3, [sp, #12]
    cdea:	1ad2      	subs	r2, r2, r3
    cdec:	2301      	movs	r3, #1
    cdee:	425b      	negs	r3, r3
    cdf0:	40d3      	lsrs	r3, r2
    cdf2:	465a      	mov	r2, fp
    cdf4:	6812      	ldr	r2, [r2, #0]
    cdf6:	4013      	ands	r3, r2
    cdf8:	465a      	mov	r2, fp
    cdfa:	6013      	str	r3, [r2, #0]
    cdfc:	e7c3      	b.n	cd86 <__hexnan+0xea>
    cdfe:	4692      	mov	sl, r2
    ce00:	2301      	movs	r3, #1
    ce02:	4652      	mov	r2, sl
    ce04:	2005      	movs	r0, #5
    ce06:	6013      	str	r3, [r2, #0]
    ce08:	e7e3      	b.n	cdd2 <__hexnan+0x136>
    ce0a:	465b      	mov	r3, fp
    ce0c:	681b      	ldr	r3, [r3, #0]
    ce0e:	e7ba      	b.n	cd86 <__hexnan+0xea>
    ce10:	9b01      	ldr	r3, [sp, #4]
    ce12:	3002      	adds	r0, #2
    ce14:	6018      	str	r0, [r3, #0]
    ce16:	e7a1      	b.n	cd5c <__hexnan+0xc0>
    ce18:	2308      	movs	r3, #8
    ce1a:	1b5d      	subs	r5, r3, r5
    ce1c:	6823      	ldr	r3, [r4, #0]
    ce1e:	2620      	movs	r6, #32
    ce20:	0021      	movs	r1, r4
    ce22:	4647      	mov	r7, r8
    ce24:	001a      	movs	r2, r3
    ce26:	00ad      	lsls	r5, r5, #2
    ce28:	1b76      	subs	r6, r6, r5
    ce2a:	6848      	ldr	r0, [r1, #4]
    ce2c:	0003      	movs	r3, r0
    ce2e:	40b3      	lsls	r3, r6
    ce30:	4313      	orrs	r3, r2
    ce32:	0002      	movs	r2, r0
    ce34:	40ea      	lsrs	r2, r5
    ce36:	c108      	stmia	r1!, {r3}
    ce38:	600a      	str	r2, [r1, #0]
    ce3a:	428f      	cmp	r7, r1
    ce3c:	d8f5      	bhi.n	ce2a <__hexnan+0x18e>
    ce3e:	e793      	b.n	cd68 <__hexnan+0xcc>
    ce40:	00010a54 	.word	0x00010a54

0000ce44 <memmove>:
    ce44:	b5f0      	push	{r4, r5, r6, r7, lr}
    ce46:	4288      	cmp	r0, r1
    ce48:	d90a      	bls.n	ce60 <memmove+0x1c>
    ce4a:	188b      	adds	r3, r1, r2
    ce4c:	4298      	cmp	r0, r3
    ce4e:	d207      	bcs.n	ce60 <memmove+0x1c>
    ce50:	1e53      	subs	r3, r2, #1
    ce52:	2a00      	cmp	r2, #0
    ce54:	d003      	beq.n	ce5e <memmove+0x1a>
    ce56:	5cca      	ldrb	r2, [r1, r3]
    ce58:	54c2      	strb	r2, [r0, r3]
    ce5a:	3b01      	subs	r3, #1
    ce5c:	d2fb      	bcs.n	ce56 <memmove+0x12>
    ce5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ce60:	0005      	movs	r5, r0
    ce62:	2a0f      	cmp	r2, #15
    ce64:	d808      	bhi.n	ce78 <memmove+0x34>
    ce66:	2a00      	cmp	r2, #0
    ce68:	d0f9      	beq.n	ce5e <memmove+0x1a>
    ce6a:	2300      	movs	r3, #0
    ce6c:	5ccc      	ldrb	r4, [r1, r3]
    ce6e:	54ec      	strb	r4, [r5, r3]
    ce70:	3301      	adds	r3, #1
    ce72:	4293      	cmp	r3, r2
    ce74:	d1fa      	bne.n	ce6c <memmove+0x28>
    ce76:	e7f2      	b.n	ce5e <memmove+0x1a>
    ce78:	000b      	movs	r3, r1
    ce7a:	4303      	orrs	r3, r0
    ce7c:	079b      	lsls	r3, r3, #30
    ce7e:	d12d      	bne.n	cedc <memmove+0x98>
    ce80:	0015      	movs	r5, r2
    ce82:	000c      	movs	r4, r1
    ce84:	0003      	movs	r3, r0
    ce86:	3d10      	subs	r5, #16
    ce88:	092f      	lsrs	r7, r5, #4
    ce8a:	3701      	adds	r7, #1
    ce8c:	013f      	lsls	r7, r7, #4
    ce8e:	19c7      	adds	r7, r0, r7
    ce90:	6826      	ldr	r6, [r4, #0]
    ce92:	601e      	str	r6, [r3, #0]
    ce94:	6866      	ldr	r6, [r4, #4]
    ce96:	605e      	str	r6, [r3, #4]
    ce98:	68a6      	ldr	r6, [r4, #8]
    ce9a:	609e      	str	r6, [r3, #8]
    ce9c:	68e6      	ldr	r6, [r4, #12]
    ce9e:	3410      	adds	r4, #16
    cea0:	60de      	str	r6, [r3, #12]
    cea2:	3310      	adds	r3, #16
    cea4:	429f      	cmp	r7, r3
    cea6:	d1f3      	bne.n	ce90 <memmove+0x4c>
    cea8:	240f      	movs	r4, #15
    ceaa:	43a5      	bics	r5, r4
    ceac:	3510      	adds	r5, #16
    ceae:	1949      	adds	r1, r1, r5
    ceb0:	4014      	ands	r4, r2
    ceb2:	1945      	adds	r5, r0, r5
    ceb4:	2c03      	cmp	r4, #3
    ceb6:	d913      	bls.n	cee0 <memmove+0x9c>
    ceb8:	2300      	movs	r3, #0
    ceba:	1f27      	subs	r7, r4, #4
    cebc:	08be      	lsrs	r6, r7, #2
    cebe:	3601      	adds	r6, #1
    cec0:	00b6      	lsls	r6, r6, #2
    cec2:	58cc      	ldr	r4, [r1, r3]
    cec4:	50ec      	str	r4, [r5, r3]
    cec6:	3304      	adds	r3, #4
    cec8:	42b3      	cmp	r3, r6
    ceca:	d1fa      	bne.n	cec2 <memmove+0x7e>
    cecc:	2603      	movs	r6, #3
    cece:	43b7      	bics	r7, r6
    ced0:	1d3c      	adds	r4, r7, #4
    ced2:	1909      	adds	r1, r1, r4
    ced4:	192d      	adds	r5, r5, r4
    ced6:	4032      	ands	r2, r6
    ced8:	d1c7      	bne.n	ce6a <memmove+0x26>
    ceda:	e7c0      	b.n	ce5e <memmove+0x1a>
    cedc:	0005      	movs	r5, r0
    cede:	e7c4      	b.n	ce6a <memmove+0x26>
    cee0:	0022      	movs	r2, r4
    cee2:	e7c0      	b.n	ce66 <memmove+0x22>

0000cee4 <_realloc_r>:
    cee4:	b5f0      	push	{r4, r5, r6, r7, lr}
    cee6:	464e      	mov	r6, r9
    cee8:	4645      	mov	r5, r8
    ceea:	46de      	mov	lr, fp
    ceec:	4657      	mov	r7, sl
    ceee:	b5e0      	push	{r5, r6, r7, lr}
    cef0:	b085      	sub	sp, #20
    cef2:	9001      	str	r0, [sp, #4]
    cef4:	000e      	movs	r6, r1
    cef6:	0015      	movs	r5, r2
    cef8:	2900      	cmp	r1, #0
    cefa:	d100      	bne.n	cefe <_realloc_r+0x1a>
    cefc:	e09e      	b.n	d03c <_realloc_r+0x158>
    cefe:	0037      	movs	r7, r6
    cf00:	9801      	ldr	r0, [sp, #4]
    cf02:	3f08      	subs	r7, #8
    cf04:	f7fd fa5e 	bl	a3c4 <__malloc_lock>
    cf08:	687a      	ldr	r2, [r7, #4]
    cf0a:	2303      	movs	r3, #3
    cf0c:	0014      	movs	r4, r2
    cf0e:	439c      	bics	r4, r3
    cf10:	002b      	movs	r3, r5
    cf12:	330b      	adds	r3, #11
    cf14:	46b9      	mov	r9, r7
    cf16:	2b16      	cmp	r3, #22
    cf18:	d847      	bhi.n	cfaa <_realloc_r+0xc6>
    cf1a:	2110      	movs	r1, #16
    cf1c:	2310      	movs	r3, #16
    cf1e:	4688      	mov	r8, r1
    cf20:	4545      	cmp	r5, r8
    cf22:	d846      	bhi.n	cfb2 <_realloc_r+0xce>
    cf24:	429c      	cmp	r4, r3
    cf26:	da49      	bge.n	cfbc <_realloc_r+0xd8>
    cf28:	49cc      	ldr	r1, [pc, #816]	; (d25c <_realloc_r+0x378>)
    cf2a:	1938      	adds	r0, r7, r4
    cf2c:	468b      	mov	fp, r1
    cf2e:	6889      	ldr	r1, [r1, #8]
    cf30:	9002      	str	r0, [sp, #8]
    cf32:	4288      	cmp	r0, r1
    cf34:	d100      	bne.n	cf38 <_realloc_r+0x54>
    cf36:	e0c2      	b.n	d0be <_realloc_r+0x1da>
    cf38:	2101      	movs	r1, #1
    cf3a:	468a      	mov	sl, r1
    cf3c:	6840      	ldr	r0, [r0, #4]
    cf3e:	0001      	movs	r1, r0
    cf40:	9003      	str	r0, [sp, #12]
    cf42:	4650      	mov	r0, sl
    cf44:	4381      	bics	r1, r0
    cf46:	468c      	mov	ip, r1
    cf48:	9902      	ldr	r1, [sp, #8]
    cf4a:	468b      	mov	fp, r1
    cf4c:	44dc      	add	ip, fp
    cf4e:	4661      	mov	r1, ip
    cf50:	6849      	ldr	r1, [r1, #4]
    cf52:	4201      	tst	r1, r0
    cf54:	d04d      	beq.n	cff2 <_realloc_r+0x10e>
    cf56:	4210      	tst	r0, r2
    cf58:	d100      	bne.n	cf5c <_realloc_r+0x78>
    cf5a:	e0a2      	b.n	d0a2 <_realloc_r+0x1be>
    cf5c:	0029      	movs	r1, r5
    cf5e:	9801      	ldr	r0, [sp, #4]
    cf60:	f7fc fe8c 	bl	9c7c <_malloc_r>
    cf64:	1e05      	subs	r5, r0, #0
    cf66:	d039      	beq.n	cfdc <_realloc_r+0xf8>
    cf68:	2301      	movs	r3, #1
    cf6a:	0002      	movs	r2, r0
    cf6c:	6879      	ldr	r1, [r7, #4]
    cf6e:	3a08      	subs	r2, #8
    cf70:	4399      	bics	r1, r3
    cf72:	187f      	adds	r7, r7, r1
    cf74:	42ba      	cmp	r2, r7
    cf76:	d100      	bne.n	cf7a <_realloc_r+0x96>
    cf78:	e12e      	b.n	d1d8 <_realloc_r+0x2f4>
    cf7a:	1f22      	subs	r2, r4, #4
    cf7c:	2a24      	cmp	r2, #36	; 0x24
    cf7e:	d900      	bls.n	cf82 <_realloc_r+0x9e>
    cf80:	e114      	b.n	d1ac <_realloc_r+0x2c8>
    cf82:	2a13      	cmp	r2, #19
    cf84:	d900      	bls.n	cf88 <_realloc_r+0xa4>
    cf86:	e0e8      	b.n	d15a <_realloc_r+0x276>
    cf88:	0003      	movs	r3, r0
    cf8a:	0032      	movs	r2, r6
    cf8c:	6811      	ldr	r1, [r2, #0]
    cf8e:	6019      	str	r1, [r3, #0]
    cf90:	6851      	ldr	r1, [r2, #4]
    cf92:	6059      	str	r1, [r3, #4]
    cf94:	6892      	ldr	r2, [r2, #8]
    cf96:	609a      	str	r2, [r3, #8]
    cf98:	9c01      	ldr	r4, [sp, #4]
    cf9a:	0031      	movs	r1, r6
    cf9c:	0020      	movs	r0, r4
    cf9e:	f7fc fd4d 	bl	9a3c <_free_r>
    cfa2:	0020      	movs	r0, r4
    cfa4:	f7fd fa16 	bl	a3d4 <__malloc_unlock>
    cfa8:	e01b      	b.n	cfe2 <_realloc_r+0xfe>
    cfaa:	2107      	movs	r1, #7
    cfac:	438b      	bics	r3, r1
    cfae:	4698      	mov	r8, r3
    cfb0:	d5b6      	bpl.n	cf20 <_realloc_r+0x3c>
    cfb2:	230c      	movs	r3, #12
    cfb4:	9a01      	ldr	r2, [sp, #4]
    cfb6:	2500      	movs	r5, #0
    cfb8:	6013      	str	r3, [r2, #0]
    cfba:	e012      	b.n	cfe2 <_realloc_r+0xfe>
    cfbc:	0035      	movs	r5, r6
    cfbe:	4643      	mov	r3, r8
    cfc0:	1ae3      	subs	r3, r4, r3
    cfc2:	2b0f      	cmp	r3, #15
    cfc4:	d825      	bhi.n	d012 <_realloc_r+0x12e>
    cfc6:	464b      	mov	r3, r9
    cfc8:	2201      	movs	r2, #1
    cfca:	4649      	mov	r1, r9
    cfcc:	685b      	ldr	r3, [r3, #4]
    cfce:	4013      	ands	r3, r2
    cfd0:	4323      	orrs	r3, r4
    cfd2:	604b      	str	r3, [r1, #4]
    cfd4:	444c      	add	r4, r9
    cfd6:	6863      	ldr	r3, [r4, #4]
    cfd8:	431a      	orrs	r2, r3
    cfda:	6062      	str	r2, [r4, #4]
    cfdc:	9801      	ldr	r0, [sp, #4]
    cfde:	f7fd f9f9 	bl	a3d4 <__malloc_unlock>
    cfe2:	0028      	movs	r0, r5
    cfe4:	b005      	add	sp, #20
    cfe6:	bc3c      	pop	{r2, r3, r4, r5}
    cfe8:	4690      	mov	r8, r2
    cfea:	4699      	mov	r9, r3
    cfec:	46a2      	mov	sl, r4
    cfee:	46ab      	mov	fp, r5
    cff0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    cff2:	2103      	movs	r1, #3
    cff4:	9803      	ldr	r0, [sp, #12]
    cff6:	468c      	mov	ip, r1
    cff8:	4388      	bics	r0, r1
    cffa:	1821      	adds	r1, r4, r0
    cffc:	468b      	mov	fp, r1
    cffe:	4299      	cmp	r1, r3
    d000:	db21      	blt.n	d046 <_realloc_r+0x162>
    d002:	9a02      	ldr	r2, [sp, #8]
    d004:	0035      	movs	r5, r6
    d006:	68d3      	ldr	r3, [r2, #12]
    d008:	6892      	ldr	r2, [r2, #8]
    d00a:	465c      	mov	r4, fp
    d00c:	60d3      	str	r3, [r2, #12]
    d00e:	609a      	str	r2, [r3, #8]
    d010:	e7d5      	b.n	cfbe <_realloc_r+0xda>
    d012:	464a      	mov	r2, r9
    d014:	2001      	movs	r0, #1
    d016:	4646      	mov	r6, r8
    d018:	6852      	ldr	r2, [r2, #4]
    d01a:	4649      	mov	r1, r9
    d01c:	4002      	ands	r2, r0
    d01e:	4332      	orrs	r2, r6
    d020:	464e      	mov	r6, r9
    d022:	4441      	add	r1, r8
    d024:	4303      	orrs	r3, r0
    d026:	6072      	str	r2, [r6, #4]
    d028:	444c      	add	r4, r9
    d02a:	604b      	str	r3, [r1, #4]
    d02c:	6863      	ldr	r3, [r4, #4]
    d02e:	3108      	adds	r1, #8
    d030:	4318      	orrs	r0, r3
    d032:	6060      	str	r0, [r4, #4]
    d034:	9801      	ldr	r0, [sp, #4]
    d036:	f7fc fd01 	bl	9a3c <_free_r>
    d03a:	e7cf      	b.n	cfdc <_realloc_r+0xf8>
    d03c:	0011      	movs	r1, r2
    d03e:	f7fc fe1d 	bl	9c7c <_malloc_r>
    d042:	0005      	movs	r5, r0
    d044:	e7cd      	b.n	cfe2 <_realloc_r+0xfe>
    d046:	4651      	mov	r1, sl
    d048:	4211      	tst	r1, r2
    d04a:	d000      	beq.n	d04e <_realloc_r+0x16a>
    d04c:	e786      	b.n	cf5c <_realloc_r+0x78>
    d04e:	4661      	mov	r1, ip
    d050:	683a      	ldr	r2, [r7, #0]
    d052:	1aba      	subs	r2, r7, r2
    d054:	4692      	mov	sl, r2
    d056:	6852      	ldr	r2, [r2, #4]
    d058:	438a      	bics	r2, r1
    d05a:	1880      	adds	r0, r0, r2
    d05c:	4683      	mov	fp, r0
    d05e:	44a3      	add	fp, r4
    d060:	459b      	cmp	fp, r3
    d062:	db26      	blt.n	d0b2 <_realloc_r+0x1ce>
    d064:	9a02      	ldr	r2, [sp, #8]
    d066:	68d3      	ldr	r3, [r2, #12]
    d068:	6892      	ldr	r2, [r2, #8]
    d06a:	60d3      	str	r3, [r2, #12]
    d06c:	609a      	str	r2, [r3, #8]
    d06e:	4653      	mov	r3, sl
    d070:	4652      	mov	r2, sl
    d072:	4655      	mov	r5, sl
    d074:	6892      	ldr	r2, [r2, #8]
    d076:	68db      	ldr	r3, [r3, #12]
    d078:	3508      	adds	r5, #8
    d07a:	60d3      	str	r3, [r2, #12]
    d07c:	609a      	str	r2, [r3, #8]
    d07e:	1f22      	subs	r2, r4, #4
    d080:	2a24      	cmp	r2, #36	; 0x24
    d082:	d900      	bls.n	d086 <_realloc_r+0x1a2>
    d084:	e096      	b.n	d1b4 <_realloc_r+0x2d0>
    d086:	2a13      	cmp	r2, #19
    d088:	d972      	bls.n	d170 <_realloc_r+0x28c>
    d08a:	4653      	mov	r3, sl
    d08c:	6831      	ldr	r1, [r6, #0]
    d08e:	6099      	str	r1, [r3, #8]
    d090:	6871      	ldr	r1, [r6, #4]
    d092:	60d9      	str	r1, [r3, #12]
    d094:	2a1b      	cmp	r2, #27
    d096:	d900      	bls.n	d09a <_realloc_r+0x1b6>
    d098:	e0a4      	b.n	d1e4 <_realloc_r+0x300>
    d09a:	0032      	movs	r2, r6
    d09c:	3310      	adds	r3, #16
    d09e:	3208      	adds	r2, #8
    d0a0:	e068      	b.n	d174 <_realloc_r+0x290>
    d0a2:	683a      	ldr	r2, [r7, #0]
    d0a4:	1aba      	subs	r2, r7, r2
    d0a6:	4692      	mov	sl, r2
    d0a8:	4651      	mov	r1, sl
    d0aa:	2203      	movs	r2, #3
    d0ac:	6849      	ldr	r1, [r1, #4]
    d0ae:	4391      	bics	r1, r2
    d0b0:	000a      	movs	r2, r1
    d0b2:	4693      	mov	fp, r2
    d0b4:	44a3      	add	fp, r4
    d0b6:	459b      	cmp	fp, r3
    d0b8:	da00      	bge.n	d0bc <_realloc_r+0x1d8>
    d0ba:	e74f      	b.n	cf5c <_realloc_r+0x78>
    d0bc:	e7d7      	b.n	d06e <_realloc_r+0x18a>
    d0be:	2003      	movs	r0, #3
    d0c0:	9902      	ldr	r1, [sp, #8]
    d0c2:	4684      	mov	ip, r0
    d0c4:	6849      	ldr	r1, [r1, #4]
    d0c6:	4381      	bics	r1, r0
    d0c8:	4640      	mov	r0, r8
    d0ca:	1909      	adds	r1, r1, r4
    d0cc:	3010      	adds	r0, #16
    d0ce:	9002      	str	r0, [sp, #8]
    d0d0:	4281      	cmp	r1, r0
    d0d2:	da58      	bge.n	d186 <_realloc_r+0x2a2>
    d0d4:	07d2      	lsls	r2, r2, #31
    d0d6:	d500      	bpl.n	d0da <_realloc_r+0x1f6>
    d0d8:	e740      	b.n	cf5c <_realloc_r+0x78>
    d0da:	4660      	mov	r0, ip
    d0dc:	683a      	ldr	r2, [r7, #0]
    d0de:	1aba      	subs	r2, r7, r2
    d0e0:	4692      	mov	sl, r2
    d0e2:	6852      	ldr	r2, [r2, #4]
    d0e4:	4382      	bics	r2, r0
    d0e6:	9802      	ldr	r0, [sp, #8]
    d0e8:	1851      	adds	r1, r2, r1
    d0ea:	9103      	str	r1, [sp, #12]
    d0ec:	4288      	cmp	r0, r1
    d0ee:	dce0      	bgt.n	d0b2 <_realloc_r+0x1ce>
    d0f0:	4653      	mov	r3, sl
    d0f2:	4652      	mov	r2, sl
    d0f4:	4655      	mov	r5, sl
    d0f6:	6892      	ldr	r2, [r2, #8]
    d0f8:	68db      	ldr	r3, [r3, #12]
    d0fa:	3508      	adds	r5, #8
    d0fc:	60d3      	str	r3, [r2, #12]
    d0fe:	609a      	str	r2, [r3, #8]
    d100:	1f22      	subs	r2, r4, #4
    d102:	2a24      	cmp	r2, #36	; 0x24
    d104:	d900      	bls.n	d108 <_realloc_r+0x224>
    d106:	e08e      	b.n	d226 <_realloc_r+0x342>
    d108:	2a13      	cmp	r2, #19
    d10a:	d800      	bhi.n	d10e <_realloc_r+0x22a>
    d10c:	e088      	b.n	d220 <_realloc_r+0x33c>
    d10e:	4653      	mov	r3, sl
    d110:	6831      	ldr	r1, [r6, #0]
    d112:	6099      	str	r1, [r3, #8]
    d114:	6871      	ldr	r1, [r6, #4]
    d116:	60d9      	str	r1, [r3, #12]
    d118:	2a1b      	cmp	r2, #27
    d11a:	d900      	bls.n	d11e <_realloc_r+0x23a>
    d11c:	e088      	b.n	d230 <_realloc_r+0x34c>
    d11e:	0032      	movs	r2, r6
    d120:	3310      	adds	r3, #16
    d122:	3208      	adds	r2, #8
    d124:	6811      	ldr	r1, [r2, #0]
    d126:	6019      	str	r1, [r3, #0]
    d128:	6851      	ldr	r1, [r2, #4]
    d12a:	6059      	str	r1, [r3, #4]
    d12c:	6892      	ldr	r2, [r2, #8]
    d12e:	609a      	str	r2, [r3, #8]
    d130:	4651      	mov	r1, sl
    d132:	465b      	mov	r3, fp
    d134:	4642      	mov	r2, r8
    d136:	4441      	add	r1, r8
    d138:	6099      	str	r1, [r3, #8]
    d13a:	9b03      	ldr	r3, [sp, #12]
    d13c:	9801      	ldr	r0, [sp, #4]
    d13e:	1a9a      	subs	r2, r3, r2
    d140:	2301      	movs	r3, #1
    d142:	431a      	orrs	r2, r3
    d144:	604a      	str	r2, [r1, #4]
    d146:	4652      	mov	r2, sl
    d148:	6852      	ldr	r2, [r2, #4]
    d14a:	4013      	ands	r3, r2
    d14c:	4642      	mov	r2, r8
    d14e:	4313      	orrs	r3, r2
    d150:	4652      	mov	r2, sl
    d152:	6053      	str	r3, [r2, #4]
    d154:	f7fd f93e 	bl	a3d4 <__malloc_unlock>
    d158:	e743      	b.n	cfe2 <_realloc_r+0xfe>
    d15a:	6833      	ldr	r3, [r6, #0]
    d15c:	6003      	str	r3, [r0, #0]
    d15e:	6873      	ldr	r3, [r6, #4]
    d160:	6043      	str	r3, [r0, #4]
    d162:	2a1b      	cmp	r2, #27
    d164:	d82d      	bhi.n	d1c2 <_realloc_r+0x2de>
    d166:	0003      	movs	r3, r0
    d168:	0032      	movs	r2, r6
    d16a:	3308      	adds	r3, #8
    d16c:	3208      	adds	r2, #8
    d16e:	e70d      	b.n	cf8c <_realloc_r+0xa8>
    d170:	002b      	movs	r3, r5
    d172:	0032      	movs	r2, r6
    d174:	6811      	ldr	r1, [r2, #0]
    d176:	465c      	mov	r4, fp
    d178:	6019      	str	r1, [r3, #0]
    d17a:	6851      	ldr	r1, [r2, #4]
    d17c:	46d1      	mov	r9, sl
    d17e:	6059      	str	r1, [r3, #4]
    d180:	6892      	ldr	r2, [r2, #8]
    d182:	609a      	str	r2, [r3, #8]
    d184:	e71b      	b.n	cfbe <_realloc_r+0xda>
    d186:	4643      	mov	r3, r8
    d188:	18fa      	adds	r2, r7, r3
    d18a:	465b      	mov	r3, fp
    d18c:	609a      	str	r2, [r3, #8]
    d18e:	4643      	mov	r3, r8
    d190:	1ac9      	subs	r1, r1, r3
    d192:	2301      	movs	r3, #1
    d194:	4319      	orrs	r1, r3
    d196:	6051      	str	r1, [r2, #4]
    d198:	687a      	ldr	r2, [r7, #4]
    d19a:	9801      	ldr	r0, [sp, #4]
    d19c:	4013      	ands	r3, r2
    d19e:	4642      	mov	r2, r8
    d1a0:	4313      	orrs	r3, r2
    d1a2:	607b      	str	r3, [r7, #4]
    d1a4:	f7fd f916 	bl	a3d4 <__malloc_unlock>
    d1a8:	0035      	movs	r5, r6
    d1aa:	e71a      	b.n	cfe2 <_realloc_r+0xfe>
    d1ac:	0031      	movs	r1, r6
    d1ae:	f7ff fe49 	bl	ce44 <memmove>
    d1b2:	e6f1      	b.n	cf98 <_realloc_r+0xb4>
    d1b4:	0031      	movs	r1, r6
    d1b6:	0028      	movs	r0, r5
    d1b8:	f7ff fe44 	bl	ce44 <memmove>
    d1bc:	465c      	mov	r4, fp
    d1be:	46d1      	mov	r9, sl
    d1c0:	e6fd      	b.n	cfbe <_realloc_r+0xda>
    d1c2:	68b3      	ldr	r3, [r6, #8]
    d1c4:	6083      	str	r3, [r0, #8]
    d1c6:	68f3      	ldr	r3, [r6, #12]
    d1c8:	60c3      	str	r3, [r0, #12]
    d1ca:	2a24      	cmp	r2, #36	; 0x24
    d1cc:	d015      	beq.n	d1fa <_realloc_r+0x316>
    d1ce:	0003      	movs	r3, r0
    d1d0:	0032      	movs	r2, r6
    d1d2:	3310      	adds	r3, #16
    d1d4:	3210      	adds	r2, #16
    d1d6:	e6d9      	b.n	cf8c <_realloc_r+0xa8>
    d1d8:	6853      	ldr	r3, [r2, #4]
    d1da:	2203      	movs	r2, #3
    d1dc:	4393      	bics	r3, r2
    d1de:	18e4      	adds	r4, r4, r3
    d1e0:	0035      	movs	r5, r6
    d1e2:	e6ec      	b.n	cfbe <_realloc_r+0xda>
    d1e4:	4653      	mov	r3, sl
    d1e6:	68b1      	ldr	r1, [r6, #8]
    d1e8:	6119      	str	r1, [r3, #16]
    d1ea:	68f1      	ldr	r1, [r6, #12]
    d1ec:	6159      	str	r1, [r3, #20]
    d1ee:	2a24      	cmp	r2, #36	; 0x24
    d1f0:	d00c      	beq.n	d20c <_realloc_r+0x328>
    d1f2:	0032      	movs	r2, r6
    d1f4:	3318      	adds	r3, #24
    d1f6:	3210      	adds	r2, #16
    d1f8:	e7bc      	b.n	d174 <_realloc_r+0x290>
    d1fa:	6933      	ldr	r3, [r6, #16]
    d1fc:	0032      	movs	r2, r6
    d1fe:	6103      	str	r3, [r0, #16]
    d200:	0003      	movs	r3, r0
    d202:	6971      	ldr	r1, [r6, #20]
    d204:	3318      	adds	r3, #24
    d206:	3218      	adds	r2, #24
    d208:	6141      	str	r1, [r0, #20]
    d20a:	e6bf      	b.n	cf8c <_realloc_r+0xa8>
    d20c:	4653      	mov	r3, sl
    d20e:	6932      	ldr	r2, [r6, #16]
    d210:	4651      	mov	r1, sl
    d212:	619a      	str	r2, [r3, #24]
    d214:	0032      	movs	r2, r6
    d216:	6970      	ldr	r0, [r6, #20]
    d218:	3320      	adds	r3, #32
    d21a:	3218      	adds	r2, #24
    d21c:	61c8      	str	r0, [r1, #28]
    d21e:	e7a9      	b.n	d174 <_realloc_r+0x290>
    d220:	002b      	movs	r3, r5
    d222:	0032      	movs	r2, r6
    d224:	e77e      	b.n	d124 <_realloc_r+0x240>
    d226:	0031      	movs	r1, r6
    d228:	0028      	movs	r0, r5
    d22a:	f7ff fe0b 	bl	ce44 <memmove>
    d22e:	e77f      	b.n	d130 <_realloc_r+0x24c>
    d230:	4653      	mov	r3, sl
    d232:	68b1      	ldr	r1, [r6, #8]
    d234:	6119      	str	r1, [r3, #16]
    d236:	68f1      	ldr	r1, [r6, #12]
    d238:	6159      	str	r1, [r3, #20]
    d23a:	2a24      	cmp	r2, #36	; 0x24
    d23c:	d003      	beq.n	d246 <_realloc_r+0x362>
    d23e:	0032      	movs	r2, r6
    d240:	3318      	adds	r3, #24
    d242:	3210      	adds	r2, #16
    d244:	e76e      	b.n	d124 <_realloc_r+0x240>
    d246:	4653      	mov	r3, sl
    d248:	6932      	ldr	r2, [r6, #16]
    d24a:	4651      	mov	r1, sl
    d24c:	619a      	str	r2, [r3, #24]
    d24e:	0032      	movs	r2, r6
    d250:	6970      	ldr	r0, [r6, #20]
    d252:	3320      	adds	r3, #32
    d254:	3218      	adds	r2, #24
    d256:	61c8      	str	r0, [r1, #28]
    d258:	e764      	b.n	d124 <_realloc_r+0x240>
    d25a:	46c0      	nop			; (mov r8, r8)
    d25c:	20000638 	.word	0x20000638

0000d260 <strncmp>:
    d260:	b530      	push	{r4, r5, lr}
    d262:	2400      	movs	r4, #0
    d264:	2a00      	cmp	r2, #0
    d266:	d039      	beq.n	d2dc <strncmp+0x7c>
    d268:	0003      	movs	r3, r0
    d26a:	430b      	orrs	r3, r1
    d26c:	079b      	lsls	r3, r3, #30
    d26e:	d120      	bne.n	d2b2 <strncmp+0x52>
    d270:	2a03      	cmp	r2, #3
    d272:	d91e      	bls.n	d2b2 <strncmp+0x52>
    d274:	6803      	ldr	r3, [r0, #0]
    d276:	680d      	ldr	r5, [r1, #0]
    d278:	42ab      	cmp	r3, r5
    d27a:	d11a      	bne.n	d2b2 <strncmp+0x52>
    d27c:	3a04      	subs	r2, #4
    d27e:	2a00      	cmp	r2, #0
    d280:	d02c      	beq.n	d2dc <strncmp+0x7c>
    d282:	4d1a      	ldr	r5, [pc, #104]	; (d2ec <strncmp+0x8c>)
    d284:	195d      	adds	r5, r3, r5
    d286:	439d      	bics	r5, r3
    d288:	002b      	movs	r3, r5
    d28a:	4d19      	ldr	r5, [pc, #100]	; (d2f0 <strncmp+0x90>)
    d28c:	422b      	tst	r3, r5
    d28e:	d00c      	beq.n	d2aa <strncmp+0x4a>
    d290:	e024      	b.n	d2dc <strncmp+0x7c>
    d292:	6803      	ldr	r3, [r0, #0]
    d294:	680c      	ldr	r4, [r1, #0]
    d296:	42a3      	cmp	r3, r4
    d298:	d10b      	bne.n	d2b2 <strncmp+0x52>
    d29a:	3a04      	subs	r2, #4
    d29c:	2a00      	cmp	r2, #0
    d29e:	d01f      	beq.n	d2e0 <strncmp+0x80>
    d2a0:	4c12      	ldr	r4, [pc, #72]	; (d2ec <strncmp+0x8c>)
    d2a2:	191c      	adds	r4, r3, r4
    d2a4:	439c      	bics	r4, r3
    d2a6:	422c      	tst	r4, r5
    d2a8:	d11a      	bne.n	d2e0 <strncmp+0x80>
    d2aa:	3004      	adds	r0, #4
    d2ac:	3104      	adds	r1, #4
    d2ae:	2a03      	cmp	r2, #3
    d2b0:	d8ef      	bhi.n	d292 <strncmp+0x32>
    d2b2:	7803      	ldrb	r3, [r0, #0]
    d2b4:	780d      	ldrb	r5, [r1, #0]
    d2b6:	3a01      	subs	r2, #1
    d2b8:	429d      	cmp	r5, r3
    d2ba:	d113      	bne.n	d2e4 <strncmp+0x84>
    d2bc:	2a00      	cmp	r2, #0
    d2be:	d00f      	beq.n	d2e0 <strncmp+0x80>
    d2c0:	2d00      	cmp	r5, #0
    d2c2:	d00d      	beq.n	d2e0 <strncmp+0x80>
    d2c4:	2301      	movs	r3, #1
    d2c6:	e004      	b.n	d2d2 <strncmp+0x72>
    d2c8:	429a      	cmp	r2, r3
    d2ca:	d009      	beq.n	d2e0 <strncmp+0x80>
    d2cc:	3301      	adds	r3, #1
    d2ce:	2c00      	cmp	r4, #0
    d2d0:	d006      	beq.n	d2e0 <strncmp+0x80>
    d2d2:	5cc4      	ldrb	r4, [r0, r3]
    d2d4:	5ccd      	ldrb	r5, [r1, r3]
    d2d6:	42ac      	cmp	r4, r5
    d2d8:	d0f6      	beq.n	d2c8 <strncmp+0x68>
    d2da:	1b64      	subs	r4, r4, r5
    d2dc:	0020      	movs	r0, r4
    d2de:	bd30      	pop	{r4, r5, pc}
    d2e0:	2400      	movs	r4, #0
    d2e2:	e7fb      	b.n	d2dc <strncmp+0x7c>
    d2e4:	001c      	movs	r4, r3
    d2e6:	1b64      	subs	r4, r4, r5
    d2e8:	e7f8      	b.n	d2dc <strncmp+0x7c>
    d2ea:	46c0      	nop			; (mov r8, r8)
    d2ec:	fefefeff 	.word	0xfefefeff
    d2f0:	80808080 	.word	0x80808080

0000d2f4 <__aeabi_dadd>:
    d2f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    d2f6:	4645      	mov	r5, r8
    d2f8:	46de      	mov	lr, fp
    d2fa:	4657      	mov	r7, sl
    d2fc:	464e      	mov	r6, r9
    d2fe:	030c      	lsls	r4, r1, #12
    d300:	b5e0      	push	{r5, r6, r7, lr}
    d302:	004e      	lsls	r6, r1, #1
    d304:	0fc9      	lsrs	r1, r1, #31
    d306:	4688      	mov	r8, r1
    d308:	000d      	movs	r5, r1
    d30a:	0a61      	lsrs	r1, r4, #9
    d30c:	0f44      	lsrs	r4, r0, #29
    d30e:	430c      	orrs	r4, r1
    d310:	00c7      	lsls	r7, r0, #3
    d312:	0319      	lsls	r1, r3, #12
    d314:	0058      	lsls	r0, r3, #1
    d316:	0fdb      	lsrs	r3, r3, #31
    d318:	469b      	mov	fp, r3
    d31a:	0a4b      	lsrs	r3, r1, #9
    d31c:	0f51      	lsrs	r1, r2, #29
    d31e:	430b      	orrs	r3, r1
    d320:	0d76      	lsrs	r6, r6, #21
    d322:	0d40      	lsrs	r0, r0, #21
    d324:	0019      	movs	r1, r3
    d326:	00d2      	lsls	r2, r2, #3
    d328:	45d8      	cmp	r8, fp
    d32a:	d100      	bne.n	d32e <__aeabi_dadd+0x3a>
    d32c:	e0ae      	b.n	d48c <__aeabi_dadd+0x198>
    d32e:	1a35      	subs	r5, r6, r0
    d330:	2d00      	cmp	r5, #0
    d332:	dc00      	bgt.n	d336 <__aeabi_dadd+0x42>
    d334:	e0f6      	b.n	d524 <__aeabi_dadd+0x230>
    d336:	2800      	cmp	r0, #0
    d338:	d10f      	bne.n	d35a <__aeabi_dadd+0x66>
    d33a:	4313      	orrs	r3, r2
    d33c:	d100      	bne.n	d340 <__aeabi_dadd+0x4c>
    d33e:	e0db      	b.n	d4f8 <__aeabi_dadd+0x204>
    d340:	1e6b      	subs	r3, r5, #1
    d342:	2b00      	cmp	r3, #0
    d344:	d000      	beq.n	d348 <__aeabi_dadd+0x54>
    d346:	e137      	b.n	d5b8 <__aeabi_dadd+0x2c4>
    d348:	1aba      	subs	r2, r7, r2
    d34a:	4297      	cmp	r7, r2
    d34c:	41bf      	sbcs	r7, r7
    d34e:	1a64      	subs	r4, r4, r1
    d350:	427f      	negs	r7, r7
    d352:	1be4      	subs	r4, r4, r7
    d354:	2601      	movs	r6, #1
    d356:	0017      	movs	r7, r2
    d358:	e024      	b.n	d3a4 <__aeabi_dadd+0xb0>
    d35a:	4bc6      	ldr	r3, [pc, #792]	; (d674 <__aeabi_dadd+0x380>)
    d35c:	429e      	cmp	r6, r3
    d35e:	d04d      	beq.n	d3fc <__aeabi_dadd+0x108>
    d360:	2380      	movs	r3, #128	; 0x80
    d362:	041b      	lsls	r3, r3, #16
    d364:	4319      	orrs	r1, r3
    d366:	2d38      	cmp	r5, #56	; 0x38
    d368:	dd00      	ble.n	d36c <__aeabi_dadd+0x78>
    d36a:	e107      	b.n	d57c <__aeabi_dadd+0x288>
    d36c:	2d1f      	cmp	r5, #31
    d36e:	dd00      	ble.n	d372 <__aeabi_dadd+0x7e>
    d370:	e138      	b.n	d5e4 <__aeabi_dadd+0x2f0>
    d372:	2020      	movs	r0, #32
    d374:	1b43      	subs	r3, r0, r5
    d376:	469a      	mov	sl, r3
    d378:	000b      	movs	r3, r1
    d37a:	4650      	mov	r0, sl
    d37c:	4083      	lsls	r3, r0
    d37e:	4699      	mov	r9, r3
    d380:	0013      	movs	r3, r2
    d382:	4648      	mov	r0, r9
    d384:	40eb      	lsrs	r3, r5
    d386:	4318      	orrs	r0, r3
    d388:	0003      	movs	r3, r0
    d38a:	4650      	mov	r0, sl
    d38c:	4082      	lsls	r2, r0
    d38e:	1e50      	subs	r0, r2, #1
    d390:	4182      	sbcs	r2, r0
    d392:	40e9      	lsrs	r1, r5
    d394:	431a      	orrs	r2, r3
    d396:	1aba      	subs	r2, r7, r2
    d398:	1a61      	subs	r1, r4, r1
    d39a:	4297      	cmp	r7, r2
    d39c:	41a4      	sbcs	r4, r4
    d39e:	0017      	movs	r7, r2
    d3a0:	4264      	negs	r4, r4
    d3a2:	1b0c      	subs	r4, r1, r4
    d3a4:	0223      	lsls	r3, r4, #8
    d3a6:	d562      	bpl.n	d46e <__aeabi_dadd+0x17a>
    d3a8:	0264      	lsls	r4, r4, #9
    d3aa:	0a65      	lsrs	r5, r4, #9
    d3ac:	2d00      	cmp	r5, #0
    d3ae:	d100      	bne.n	d3b2 <__aeabi_dadd+0xbe>
    d3b0:	e0df      	b.n	d572 <__aeabi_dadd+0x27e>
    d3b2:	0028      	movs	r0, r5
    d3b4:	f7f8 fa52 	bl	585c <__clzsi2>
    d3b8:	0003      	movs	r3, r0
    d3ba:	3b08      	subs	r3, #8
    d3bc:	2b1f      	cmp	r3, #31
    d3be:	dd00      	ble.n	d3c2 <__aeabi_dadd+0xce>
    d3c0:	e0d2      	b.n	d568 <__aeabi_dadd+0x274>
    d3c2:	2220      	movs	r2, #32
    d3c4:	003c      	movs	r4, r7
    d3c6:	1ad2      	subs	r2, r2, r3
    d3c8:	409d      	lsls	r5, r3
    d3ca:	40d4      	lsrs	r4, r2
    d3cc:	409f      	lsls	r7, r3
    d3ce:	4325      	orrs	r5, r4
    d3d0:	429e      	cmp	r6, r3
    d3d2:	dd00      	ble.n	d3d6 <__aeabi_dadd+0xe2>
    d3d4:	e0c4      	b.n	d560 <__aeabi_dadd+0x26c>
    d3d6:	1b9e      	subs	r6, r3, r6
    d3d8:	1c73      	adds	r3, r6, #1
    d3da:	2b1f      	cmp	r3, #31
    d3dc:	dd00      	ble.n	d3e0 <__aeabi_dadd+0xec>
    d3de:	e0f1      	b.n	d5c4 <__aeabi_dadd+0x2d0>
    d3e0:	2220      	movs	r2, #32
    d3e2:	0038      	movs	r0, r7
    d3e4:	0029      	movs	r1, r5
    d3e6:	1ad2      	subs	r2, r2, r3
    d3e8:	40d8      	lsrs	r0, r3
    d3ea:	4091      	lsls	r1, r2
    d3ec:	4097      	lsls	r7, r2
    d3ee:	002c      	movs	r4, r5
    d3f0:	4301      	orrs	r1, r0
    d3f2:	1e78      	subs	r0, r7, #1
    d3f4:	4187      	sbcs	r7, r0
    d3f6:	40dc      	lsrs	r4, r3
    d3f8:	2600      	movs	r6, #0
    d3fa:	430f      	orrs	r7, r1
    d3fc:	077b      	lsls	r3, r7, #29
    d3fe:	d009      	beq.n	d414 <__aeabi_dadd+0x120>
    d400:	230f      	movs	r3, #15
    d402:	403b      	ands	r3, r7
    d404:	2b04      	cmp	r3, #4
    d406:	d005      	beq.n	d414 <__aeabi_dadd+0x120>
    d408:	1d3b      	adds	r3, r7, #4
    d40a:	42bb      	cmp	r3, r7
    d40c:	41bf      	sbcs	r7, r7
    d40e:	427f      	negs	r7, r7
    d410:	19e4      	adds	r4, r4, r7
    d412:	001f      	movs	r7, r3
    d414:	0223      	lsls	r3, r4, #8
    d416:	d52c      	bpl.n	d472 <__aeabi_dadd+0x17e>
    d418:	4b96      	ldr	r3, [pc, #600]	; (d674 <__aeabi_dadd+0x380>)
    d41a:	3601      	adds	r6, #1
    d41c:	429e      	cmp	r6, r3
    d41e:	d100      	bne.n	d422 <__aeabi_dadd+0x12e>
    d420:	e09a      	b.n	d558 <__aeabi_dadd+0x264>
    d422:	4645      	mov	r5, r8
    d424:	4b94      	ldr	r3, [pc, #592]	; (d678 <__aeabi_dadd+0x384>)
    d426:	08ff      	lsrs	r7, r7, #3
    d428:	401c      	ands	r4, r3
    d42a:	0760      	lsls	r0, r4, #29
    d42c:	0576      	lsls	r6, r6, #21
    d42e:	0264      	lsls	r4, r4, #9
    d430:	4307      	orrs	r7, r0
    d432:	0b24      	lsrs	r4, r4, #12
    d434:	0d76      	lsrs	r6, r6, #21
    d436:	2100      	movs	r1, #0
    d438:	0324      	lsls	r4, r4, #12
    d43a:	0b23      	lsrs	r3, r4, #12
    d43c:	0d0c      	lsrs	r4, r1, #20
    d43e:	4a8f      	ldr	r2, [pc, #572]	; (d67c <__aeabi_dadd+0x388>)
    d440:	0524      	lsls	r4, r4, #20
    d442:	431c      	orrs	r4, r3
    d444:	4014      	ands	r4, r2
    d446:	0533      	lsls	r3, r6, #20
    d448:	4323      	orrs	r3, r4
    d44a:	005b      	lsls	r3, r3, #1
    d44c:	07ed      	lsls	r5, r5, #31
    d44e:	085b      	lsrs	r3, r3, #1
    d450:	432b      	orrs	r3, r5
    d452:	0038      	movs	r0, r7
    d454:	0019      	movs	r1, r3
    d456:	bc3c      	pop	{r2, r3, r4, r5}
    d458:	4690      	mov	r8, r2
    d45a:	4699      	mov	r9, r3
    d45c:	46a2      	mov	sl, r4
    d45e:	46ab      	mov	fp, r5
    d460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    d462:	4664      	mov	r4, ip
    d464:	4304      	orrs	r4, r0
    d466:	d100      	bne.n	d46a <__aeabi_dadd+0x176>
    d468:	e211      	b.n	d88e <__aeabi_dadd+0x59a>
    d46a:	0004      	movs	r4, r0
    d46c:	4667      	mov	r7, ip
    d46e:	077b      	lsls	r3, r7, #29
    d470:	d1c6      	bne.n	d400 <__aeabi_dadd+0x10c>
    d472:	4645      	mov	r5, r8
    d474:	0760      	lsls	r0, r4, #29
    d476:	08ff      	lsrs	r7, r7, #3
    d478:	4307      	orrs	r7, r0
    d47a:	08e4      	lsrs	r4, r4, #3
    d47c:	4b7d      	ldr	r3, [pc, #500]	; (d674 <__aeabi_dadd+0x380>)
    d47e:	429e      	cmp	r6, r3
    d480:	d030      	beq.n	d4e4 <__aeabi_dadd+0x1f0>
    d482:	0324      	lsls	r4, r4, #12
    d484:	0576      	lsls	r6, r6, #21
    d486:	0b24      	lsrs	r4, r4, #12
    d488:	0d76      	lsrs	r6, r6, #21
    d48a:	e7d4      	b.n	d436 <__aeabi_dadd+0x142>
    d48c:	1a33      	subs	r3, r6, r0
    d48e:	469a      	mov	sl, r3
    d490:	2b00      	cmp	r3, #0
    d492:	dd78      	ble.n	d586 <__aeabi_dadd+0x292>
    d494:	2800      	cmp	r0, #0
    d496:	d031      	beq.n	d4fc <__aeabi_dadd+0x208>
    d498:	4876      	ldr	r0, [pc, #472]	; (d674 <__aeabi_dadd+0x380>)
    d49a:	4286      	cmp	r6, r0
    d49c:	d0ae      	beq.n	d3fc <__aeabi_dadd+0x108>
    d49e:	2080      	movs	r0, #128	; 0x80
    d4a0:	0400      	lsls	r0, r0, #16
    d4a2:	4301      	orrs	r1, r0
    d4a4:	4653      	mov	r3, sl
    d4a6:	2b38      	cmp	r3, #56	; 0x38
    d4a8:	dc00      	bgt.n	d4ac <__aeabi_dadd+0x1b8>
    d4aa:	e0e9      	b.n	d680 <__aeabi_dadd+0x38c>
    d4ac:	430a      	orrs	r2, r1
    d4ae:	1e51      	subs	r1, r2, #1
    d4b0:	418a      	sbcs	r2, r1
    d4b2:	2100      	movs	r1, #0
    d4b4:	19d2      	adds	r2, r2, r7
    d4b6:	42ba      	cmp	r2, r7
    d4b8:	41bf      	sbcs	r7, r7
    d4ba:	1909      	adds	r1, r1, r4
    d4bc:	427c      	negs	r4, r7
    d4be:	0017      	movs	r7, r2
    d4c0:	190c      	adds	r4, r1, r4
    d4c2:	0223      	lsls	r3, r4, #8
    d4c4:	d5d3      	bpl.n	d46e <__aeabi_dadd+0x17a>
    d4c6:	4b6b      	ldr	r3, [pc, #428]	; (d674 <__aeabi_dadd+0x380>)
    d4c8:	3601      	adds	r6, #1
    d4ca:	429e      	cmp	r6, r3
    d4cc:	d100      	bne.n	d4d0 <__aeabi_dadd+0x1dc>
    d4ce:	e13a      	b.n	d746 <__aeabi_dadd+0x452>
    d4d0:	2001      	movs	r0, #1
    d4d2:	4b69      	ldr	r3, [pc, #420]	; (d678 <__aeabi_dadd+0x384>)
    d4d4:	401c      	ands	r4, r3
    d4d6:	087b      	lsrs	r3, r7, #1
    d4d8:	4007      	ands	r7, r0
    d4da:	431f      	orrs	r7, r3
    d4dc:	07e0      	lsls	r0, r4, #31
    d4de:	4307      	orrs	r7, r0
    d4e0:	0864      	lsrs	r4, r4, #1
    d4e2:	e78b      	b.n	d3fc <__aeabi_dadd+0x108>
    d4e4:	0023      	movs	r3, r4
    d4e6:	433b      	orrs	r3, r7
    d4e8:	d100      	bne.n	d4ec <__aeabi_dadd+0x1f8>
    d4ea:	e1cb      	b.n	d884 <__aeabi_dadd+0x590>
    d4ec:	2280      	movs	r2, #128	; 0x80
    d4ee:	0312      	lsls	r2, r2, #12
    d4f0:	4314      	orrs	r4, r2
    d4f2:	0324      	lsls	r4, r4, #12
    d4f4:	0b24      	lsrs	r4, r4, #12
    d4f6:	e79e      	b.n	d436 <__aeabi_dadd+0x142>
    d4f8:	002e      	movs	r6, r5
    d4fa:	e77f      	b.n	d3fc <__aeabi_dadd+0x108>
    d4fc:	0008      	movs	r0, r1
    d4fe:	4310      	orrs	r0, r2
    d500:	d100      	bne.n	d504 <__aeabi_dadd+0x210>
    d502:	e0b4      	b.n	d66e <__aeabi_dadd+0x37a>
    d504:	1e58      	subs	r0, r3, #1
    d506:	2800      	cmp	r0, #0
    d508:	d000      	beq.n	d50c <__aeabi_dadd+0x218>
    d50a:	e0de      	b.n	d6ca <__aeabi_dadd+0x3d6>
    d50c:	18ba      	adds	r2, r7, r2
    d50e:	42ba      	cmp	r2, r7
    d510:	419b      	sbcs	r3, r3
    d512:	1864      	adds	r4, r4, r1
    d514:	425b      	negs	r3, r3
    d516:	18e4      	adds	r4, r4, r3
    d518:	0017      	movs	r7, r2
    d51a:	2601      	movs	r6, #1
    d51c:	0223      	lsls	r3, r4, #8
    d51e:	d5a6      	bpl.n	d46e <__aeabi_dadd+0x17a>
    d520:	2602      	movs	r6, #2
    d522:	e7d5      	b.n	d4d0 <__aeabi_dadd+0x1dc>
    d524:	2d00      	cmp	r5, #0
    d526:	d16e      	bne.n	d606 <__aeabi_dadd+0x312>
    d528:	1c70      	adds	r0, r6, #1
    d52a:	0540      	lsls	r0, r0, #21
    d52c:	0d40      	lsrs	r0, r0, #21
    d52e:	2801      	cmp	r0, #1
    d530:	dc00      	bgt.n	d534 <__aeabi_dadd+0x240>
    d532:	e0f9      	b.n	d728 <__aeabi_dadd+0x434>
    d534:	1ab8      	subs	r0, r7, r2
    d536:	4684      	mov	ip, r0
    d538:	4287      	cmp	r7, r0
    d53a:	4180      	sbcs	r0, r0
    d53c:	1ae5      	subs	r5, r4, r3
    d53e:	4240      	negs	r0, r0
    d540:	1a2d      	subs	r5, r5, r0
    d542:	0228      	lsls	r0, r5, #8
    d544:	d400      	bmi.n	d548 <__aeabi_dadd+0x254>
    d546:	e089      	b.n	d65c <__aeabi_dadd+0x368>
    d548:	1bd7      	subs	r7, r2, r7
    d54a:	42ba      	cmp	r2, r7
    d54c:	4192      	sbcs	r2, r2
    d54e:	1b1c      	subs	r4, r3, r4
    d550:	4252      	negs	r2, r2
    d552:	1aa5      	subs	r5, r4, r2
    d554:	46d8      	mov	r8, fp
    d556:	e729      	b.n	d3ac <__aeabi_dadd+0xb8>
    d558:	4645      	mov	r5, r8
    d55a:	2400      	movs	r4, #0
    d55c:	2700      	movs	r7, #0
    d55e:	e76a      	b.n	d436 <__aeabi_dadd+0x142>
    d560:	4c45      	ldr	r4, [pc, #276]	; (d678 <__aeabi_dadd+0x384>)
    d562:	1af6      	subs	r6, r6, r3
    d564:	402c      	ands	r4, r5
    d566:	e749      	b.n	d3fc <__aeabi_dadd+0x108>
    d568:	003d      	movs	r5, r7
    d56a:	3828      	subs	r0, #40	; 0x28
    d56c:	4085      	lsls	r5, r0
    d56e:	2700      	movs	r7, #0
    d570:	e72e      	b.n	d3d0 <__aeabi_dadd+0xdc>
    d572:	0038      	movs	r0, r7
    d574:	f7f8 f972 	bl	585c <__clzsi2>
    d578:	3020      	adds	r0, #32
    d57a:	e71d      	b.n	d3b8 <__aeabi_dadd+0xc4>
    d57c:	430a      	orrs	r2, r1
    d57e:	1e51      	subs	r1, r2, #1
    d580:	418a      	sbcs	r2, r1
    d582:	2100      	movs	r1, #0
    d584:	e707      	b.n	d396 <__aeabi_dadd+0xa2>
    d586:	2b00      	cmp	r3, #0
    d588:	d000      	beq.n	d58c <__aeabi_dadd+0x298>
    d58a:	e0f3      	b.n	d774 <__aeabi_dadd+0x480>
    d58c:	1c70      	adds	r0, r6, #1
    d58e:	0543      	lsls	r3, r0, #21
    d590:	0d5b      	lsrs	r3, r3, #21
    d592:	2b01      	cmp	r3, #1
    d594:	dc00      	bgt.n	d598 <__aeabi_dadd+0x2a4>
    d596:	e0ad      	b.n	d6f4 <__aeabi_dadd+0x400>
    d598:	4b36      	ldr	r3, [pc, #216]	; (d674 <__aeabi_dadd+0x380>)
    d59a:	4298      	cmp	r0, r3
    d59c:	d100      	bne.n	d5a0 <__aeabi_dadd+0x2ac>
    d59e:	e0d1      	b.n	d744 <__aeabi_dadd+0x450>
    d5a0:	18ba      	adds	r2, r7, r2
    d5a2:	42ba      	cmp	r2, r7
    d5a4:	41bf      	sbcs	r7, r7
    d5a6:	1864      	adds	r4, r4, r1
    d5a8:	427f      	negs	r7, r7
    d5aa:	19e4      	adds	r4, r4, r7
    d5ac:	07e7      	lsls	r7, r4, #31
    d5ae:	0852      	lsrs	r2, r2, #1
    d5b0:	4317      	orrs	r7, r2
    d5b2:	0864      	lsrs	r4, r4, #1
    d5b4:	0006      	movs	r6, r0
    d5b6:	e721      	b.n	d3fc <__aeabi_dadd+0x108>
    d5b8:	482e      	ldr	r0, [pc, #184]	; (d674 <__aeabi_dadd+0x380>)
    d5ba:	4285      	cmp	r5, r0
    d5bc:	d100      	bne.n	d5c0 <__aeabi_dadd+0x2cc>
    d5be:	e093      	b.n	d6e8 <__aeabi_dadd+0x3f4>
    d5c0:	001d      	movs	r5, r3
    d5c2:	e6d0      	b.n	d366 <__aeabi_dadd+0x72>
    d5c4:	0029      	movs	r1, r5
    d5c6:	3e1f      	subs	r6, #31
    d5c8:	40f1      	lsrs	r1, r6
    d5ca:	2b20      	cmp	r3, #32
    d5cc:	d100      	bne.n	d5d0 <__aeabi_dadd+0x2dc>
    d5ce:	e08d      	b.n	d6ec <__aeabi_dadd+0x3f8>
    d5d0:	2240      	movs	r2, #64	; 0x40
    d5d2:	1ad3      	subs	r3, r2, r3
    d5d4:	409d      	lsls	r5, r3
    d5d6:	432f      	orrs	r7, r5
    d5d8:	1e7d      	subs	r5, r7, #1
    d5da:	41af      	sbcs	r7, r5
    d5dc:	2400      	movs	r4, #0
    d5de:	430f      	orrs	r7, r1
    d5e0:	2600      	movs	r6, #0
    d5e2:	e744      	b.n	d46e <__aeabi_dadd+0x17a>
    d5e4:	002b      	movs	r3, r5
    d5e6:	0008      	movs	r0, r1
    d5e8:	3b20      	subs	r3, #32
    d5ea:	40d8      	lsrs	r0, r3
    d5ec:	0003      	movs	r3, r0
    d5ee:	2d20      	cmp	r5, #32
    d5f0:	d100      	bne.n	d5f4 <__aeabi_dadd+0x300>
    d5f2:	e07d      	b.n	d6f0 <__aeabi_dadd+0x3fc>
    d5f4:	2040      	movs	r0, #64	; 0x40
    d5f6:	1b45      	subs	r5, r0, r5
    d5f8:	40a9      	lsls	r1, r5
    d5fa:	430a      	orrs	r2, r1
    d5fc:	1e51      	subs	r1, r2, #1
    d5fe:	418a      	sbcs	r2, r1
    d600:	2100      	movs	r1, #0
    d602:	431a      	orrs	r2, r3
    d604:	e6c7      	b.n	d396 <__aeabi_dadd+0xa2>
    d606:	2e00      	cmp	r6, #0
    d608:	d050      	beq.n	d6ac <__aeabi_dadd+0x3b8>
    d60a:	4e1a      	ldr	r6, [pc, #104]	; (d674 <__aeabi_dadd+0x380>)
    d60c:	42b0      	cmp	r0, r6
    d60e:	d057      	beq.n	d6c0 <__aeabi_dadd+0x3cc>
    d610:	2680      	movs	r6, #128	; 0x80
    d612:	426b      	negs	r3, r5
    d614:	4699      	mov	r9, r3
    d616:	0436      	lsls	r6, r6, #16
    d618:	4334      	orrs	r4, r6
    d61a:	464b      	mov	r3, r9
    d61c:	2b38      	cmp	r3, #56	; 0x38
    d61e:	dd00      	ble.n	d622 <__aeabi_dadd+0x32e>
    d620:	e0d6      	b.n	d7d0 <__aeabi_dadd+0x4dc>
    d622:	2b1f      	cmp	r3, #31
    d624:	dd00      	ble.n	d628 <__aeabi_dadd+0x334>
    d626:	e135      	b.n	d894 <__aeabi_dadd+0x5a0>
    d628:	2620      	movs	r6, #32
    d62a:	1af5      	subs	r5, r6, r3
    d62c:	0026      	movs	r6, r4
    d62e:	40ae      	lsls	r6, r5
    d630:	46b2      	mov	sl, r6
    d632:	003e      	movs	r6, r7
    d634:	40de      	lsrs	r6, r3
    d636:	46ac      	mov	ip, r5
    d638:	0035      	movs	r5, r6
    d63a:	4656      	mov	r6, sl
    d63c:	432e      	orrs	r6, r5
    d63e:	4665      	mov	r5, ip
    d640:	40af      	lsls	r7, r5
    d642:	1e7d      	subs	r5, r7, #1
    d644:	41af      	sbcs	r7, r5
    d646:	40dc      	lsrs	r4, r3
    d648:	4337      	orrs	r7, r6
    d64a:	1bd7      	subs	r7, r2, r7
    d64c:	42ba      	cmp	r2, r7
    d64e:	4192      	sbcs	r2, r2
    d650:	1b0c      	subs	r4, r1, r4
    d652:	4252      	negs	r2, r2
    d654:	1aa4      	subs	r4, r4, r2
    d656:	0006      	movs	r6, r0
    d658:	46d8      	mov	r8, fp
    d65a:	e6a3      	b.n	d3a4 <__aeabi_dadd+0xb0>
    d65c:	4664      	mov	r4, ip
    d65e:	4667      	mov	r7, ip
    d660:	432c      	orrs	r4, r5
    d662:	d000      	beq.n	d666 <__aeabi_dadd+0x372>
    d664:	e6a2      	b.n	d3ac <__aeabi_dadd+0xb8>
    d666:	2500      	movs	r5, #0
    d668:	2600      	movs	r6, #0
    d66a:	2700      	movs	r7, #0
    d66c:	e706      	b.n	d47c <__aeabi_dadd+0x188>
    d66e:	001e      	movs	r6, r3
    d670:	e6c4      	b.n	d3fc <__aeabi_dadd+0x108>
    d672:	46c0      	nop			; (mov r8, r8)
    d674:	000007ff 	.word	0x000007ff
    d678:	ff7fffff 	.word	0xff7fffff
    d67c:	800fffff 	.word	0x800fffff
    d680:	2b1f      	cmp	r3, #31
    d682:	dc63      	bgt.n	d74c <__aeabi_dadd+0x458>
    d684:	2020      	movs	r0, #32
    d686:	1ac3      	subs	r3, r0, r3
    d688:	0008      	movs	r0, r1
    d68a:	4098      	lsls	r0, r3
    d68c:	469c      	mov	ip, r3
    d68e:	4683      	mov	fp, r0
    d690:	4653      	mov	r3, sl
    d692:	0010      	movs	r0, r2
    d694:	40d8      	lsrs	r0, r3
    d696:	0003      	movs	r3, r0
    d698:	4658      	mov	r0, fp
    d69a:	4318      	orrs	r0, r3
    d69c:	4663      	mov	r3, ip
    d69e:	409a      	lsls	r2, r3
    d6a0:	1e53      	subs	r3, r2, #1
    d6a2:	419a      	sbcs	r2, r3
    d6a4:	4653      	mov	r3, sl
    d6a6:	4302      	orrs	r2, r0
    d6a8:	40d9      	lsrs	r1, r3
    d6aa:	e703      	b.n	d4b4 <__aeabi_dadd+0x1c0>
    d6ac:	0026      	movs	r6, r4
    d6ae:	433e      	orrs	r6, r7
    d6b0:	d006      	beq.n	d6c0 <__aeabi_dadd+0x3cc>
    d6b2:	43eb      	mvns	r3, r5
    d6b4:	4699      	mov	r9, r3
    d6b6:	2b00      	cmp	r3, #0
    d6b8:	d0c7      	beq.n	d64a <__aeabi_dadd+0x356>
    d6ba:	4e94      	ldr	r6, [pc, #592]	; (d90c <__aeabi_dadd+0x618>)
    d6bc:	42b0      	cmp	r0, r6
    d6be:	d1ac      	bne.n	d61a <__aeabi_dadd+0x326>
    d6c0:	000c      	movs	r4, r1
    d6c2:	0017      	movs	r7, r2
    d6c4:	0006      	movs	r6, r0
    d6c6:	46d8      	mov	r8, fp
    d6c8:	e698      	b.n	d3fc <__aeabi_dadd+0x108>
    d6ca:	4b90      	ldr	r3, [pc, #576]	; (d90c <__aeabi_dadd+0x618>)
    d6cc:	459a      	cmp	sl, r3
    d6ce:	d00b      	beq.n	d6e8 <__aeabi_dadd+0x3f4>
    d6d0:	4682      	mov	sl, r0
    d6d2:	e6e7      	b.n	d4a4 <__aeabi_dadd+0x1b0>
    d6d4:	2800      	cmp	r0, #0
    d6d6:	d000      	beq.n	d6da <__aeabi_dadd+0x3e6>
    d6d8:	e09e      	b.n	d818 <__aeabi_dadd+0x524>
    d6da:	0018      	movs	r0, r3
    d6dc:	4310      	orrs	r0, r2
    d6de:	d100      	bne.n	d6e2 <__aeabi_dadd+0x3ee>
    d6e0:	e0e9      	b.n	d8b6 <__aeabi_dadd+0x5c2>
    d6e2:	001c      	movs	r4, r3
    d6e4:	0017      	movs	r7, r2
    d6e6:	46d8      	mov	r8, fp
    d6e8:	4e88      	ldr	r6, [pc, #544]	; (d90c <__aeabi_dadd+0x618>)
    d6ea:	e687      	b.n	d3fc <__aeabi_dadd+0x108>
    d6ec:	2500      	movs	r5, #0
    d6ee:	e772      	b.n	d5d6 <__aeabi_dadd+0x2e2>
    d6f0:	2100      	movs	r1, #0
    d6f2:	e782      	b.n	d5fa <__aeabi_dadd+0x306>
    d6f4:	0023      	movs	r3, r4
    d6f6:	433b      	orrs	r3, r7
    d6f8:	2e00      	cmp	r6, #0
    d6fa:	d000      	beq.n	d6fe <__aeabi_dadd+0x40a>
    d6fc:	e0ab      	b.n	d856 <__aeabi_dadd+0x562>
    d6fe:	2b00      	cmp	r3, #0
    d700:	d100      	bne.n	d704 <__aeabi_dadd+0x410>
    d702:	e0e7      	b.n	d8d4 <__aeabi_dadd+0x5e0>
    d704:	000b      	movs	r3, r1
    d706:	4313      	orrs	r3, r2
    d708:	d100      	bne.n	d70c <__aeabi_dadd+0x418>
    d70a:	e677      	b.n	d3fc <__aeabi_dadd+0x108>
    d70c:	18ba      	adds	r2, r7, r2
    d70e:	42ba      	cmp	r2, r7
    d710:	41bf      	sbcs	r7, r7
    d712:	1864      	adds	r4, r4, r1
    d714:	427f      	negs	r7, r7
    d716:	19e4      	adds	r4, r4, r7
    d718:	0223      	lsls	r3, r4, #8
    d71a:	d400      	bmi.n	d71e <__aeabi_dadd+0x42a>
    d71c:	e0f2      	b.n	d904 <__aeabi_dadd+0x610>
    d71e:	4b7c      	ldr	r3, [pc, #496]	; (d910 <__aeabi_dadd+0x61c>)
    d720:	0017      	movs	r7, r2
    d722:	401c      	ands	r4, r3
    d724:	0006      	movs	r6, r0
    d726:	e669      	b.n	d3fc <__aeabi_dadd+0x108>
    d728:	0020      	movs	r0, r4
    d72a:	4338      	orrs	r0, r7
    d72c:	2e00      	cmp	r6, #0
    d72e:	d1d1      	bne.n	d6d4 <__aeabi_dadd+0x3e0>
    d730:	2800      	cmp	r0, #0
    d732:	d15b      	bne.n	d7ec <__aeabi_dadd+0x4f8>
    d734:	001c      	movs	r4, r3
    d736:	4314      	orrs	r4, r2
    d738:	d100      	bne.n	d73c <__aeabi_dadd+0x448>
    d73a:	e0a8      	b.n	d88e <__aeabi_dadd+0x59a>
    d73c:	001c      	movs	r4, r3
    d73e:	0017      	movs	r7, r2
    d740:	46d8      	mov	r8, fp
    d742:	e65b      	b.n	d3fc <__aeabi_dadd+0x108>
    d744:	0006      	movs	r6, r0
    d746:	2400      	movs	r4, #0
    d748:	2700      	movs	r7, #0
    d74a:	e697      	b.n	d47c <__aeabi_dadd+0x188>
    d74c:	4650      	mov	r0, sl
    d74e:	000b      	movs	r3, r1
    d750:	3820      	subs	r0, #32
    d752:	40c3      	lsrs	r3, r0
    d754:	4699      	mov	r9, r3
    d756:	4653      	mov	r3, sl
    d758:	2b20      	cmp	r3, #32
    d75a:	d100      	bne.n	d75e <__aeabi_dadd+0x46a>
    d75c:	e095      	b.n	d88a <__aeabi_dadd+0x596>
    d75e:	2340      	movs	r3, #64	; 0x40
    d760:	4650      	mov	r0, sl
    d762:	1a1b      	subs	r3, r3, r0
    d764:	4099      	lsls	r1, r3
    d766:	430a      	orrs	r2, r1
    d768:	1e51      	subs	r1, r2, #1
    d76a:	418a      	sbcs	r2, r1
    d76c:	464b      	mov	r3, r9
    d76e:	2100      	movs	r1, #0
    d770:	431a      	orrs	r2, r3
    d772:	e69f      	b.n	d4b4 <__aeabi_dadd+0x1c0>
    d774:	2e00      	cmp	r6, #0
    d776:	d130      	bne.n	d7da <__aeabi_dadd+0x4e6>
    d778:	0026      	movs	r6, r4
    d77a:	433e      	orrs	r6, r7
    d77c:	d067      	beq.n	d84e <__aeabi_dadd+0x55a>
    d77e:	43db      	mvns	r3, r3
    d780:	469a      	mov	sl, r3
    d782:	2b00      	cmp	r3, #0
    d784:	d01c      	beq.n	d7c0 <__aeabi_dadd+0x4cc>
    d786:	4e61      	ldr	r6, [pc, #388]	; (d90c <__aeabi_dadd+0x618>)
    d788:	42b0      	cmp	r0, r6
    d78a:	d060      	beq.n	d84e <__aeabi_dadd+0x55a>
    d78c:	4653      	mov	r3, sl
    d78e:	2b38      	cmp	r3, #56	; 0x38
    d790:	dd00      	ble.n	d794 <__aeabi_dadd+0x4a0>
    d792:	e096      	b.n	d8c2 <__aeabi_dadd+0x5ce>
    d794:	2b1f      	cmp	r3, #31
    d796:	dd00      	ble.n	d79a <__aeabi_dadd+0x4a6>
    d798:	e09f      	b.n	d8da <__aeabi_dadd+0x5e6>
    d79a:	2620      	movs	r6, #32
    d79c:	1af3      	subs	r3, r6, r3
    d79e:	0026      	movs	r6, r4
    d7a0:	409e      	lsls	r6, r3
    d7a2:	469c      	mov	ip, r3
    d7a4:	46b3      	mov	fp, r6
    d7a6:	4653      	mov	r3, sl
    d7a8:	003e      	movs	r6, r7
    d7aa:	40de      	lsrs	r6, r3
    d7ac:	0033      	movs	r3, r6
    d7ae:	465e      	mov	r6, fp
    d7b0:	431e      	orrs	r6, r3
    d7b2:	4663      	mov	r3, ip
    d7b4:	409f      	lsls	r7, r3
    d7b6:	1e7b      	subs	r3, r7, #1
    d7b8:	419f      	sbcs	r7, r3
    d7ba:	4653      	mov	r3, sl
    d7bc:	40dc      	lsrs	r4, r3
    d7be:	4337      	orrs	r7, r6
    d7c0:	18bf      	adds	r7, r7, r2
    d7c2:	4297      	cmp	r7, r2
    d7c4:	4192      	sbcs	r2, r2
    d7c6:	1864      	adds	r4, r4, r1
    d7c8:	4252      	negs	r2, r2
    d7ca:	18a4      	adds	r4, r4, r2
    d7cc:	0006      	movs	r6, r0
    d7ce:	e678      	b.n	d4c2 <__aeabi_dadd+0x1ce>
    d7d0:	4327      	orrs	r7, r4
    d7d2:	1e7c      	subs	r4, r7, #1
    d7d4:	41a7      	sbcs	r7, r4
    d7d6:	2400      	movs	r4, #0
    d7d8:	e737      	b.n	d64a <__aeabi_dadd+0x356>
    d7da:	4e4c      	ldr	r6, [pc, #304]	; (d90c <__aeabi_dadd+0x618>)
    d7dc:	42b0      	cmp	r0, r6
    d7de:	d036      	beq.n	d84e <__aeabi_dadd+0x55a>
    d7e0:	2680      	movs	r6, #128	; 0x80
    d7e2:	425b      	negs	r3, r3
    d7e4:	0436      	lsls	r6, r6, #16
    d7e6:	469a      	mov	sl, r3
    d7e8:	4334      	orrs	r4, r6
    d7ea:	e7cf      	b.n	d78c <__aeabi_dadd+0x498>
    d7ec:	0018      	movs	r0, r3
    d7ee:	4310      	orrs	r0, r2
    d7f0:	d100      	bne.n	d7f4 <__aeabi_dadd+0x500>
    d7f2:	e603      	b.n	d3fc <__aeabi_dadd+0x108>
    d7f4:	1ab8      	subs	r0, r7, r2
    d7f6:	4684      	mov	ip, r0
    d7f8:	4567      	cmp	r7, ip
    d7fa:	41ad      	sbcs	r5, r5
    d7fc:	1ae0      	subs	r0, r4, r3
    d7fe:	426d      	negs	r5, r5
    d800:	1b40      	subs	r0, r0, r5
    d802:	0205      	lsls	r5, r0, #8
    d804:	d400      	bmi.n	d808 <__aeabi_dadd+0x514>
    d806:	e62c      	b.n	d462 <__aeabi_dadd+0x16e>
    d808:	1bd7      	subs	r7, r2, r7
    d80a:	42ba      	cmp	r2, r7
    d80c:	4192      	sbcs	r2, r2
    d80e:	1b1c      	subs	r4, r3, r4
    d810:	4252      	negs	r2, r2
    d812:	1aa4      	subs	r4, r4, r2
    d814:	46d8      	mov	r8, fp
    d816:	e5f1      	b.n	d3fc <__aeabi_dadd+0x108>
    d818:	0018      	movs	r0, r3
    d81a:	4310      	orrs	r0, r2
    d81c:	d100      	bne.n	d820 <__aeabi_dadd+0x52c>
    d81e:	e763      	b.n	d6e8 <__aeabi_dadd+0x3f4>
    d820:	08f8      	lsrs	r0, r7, #3
    d822:	0767      	lsls	r7, r4, #29
    d824:	4307      	orrs	r7, r0
    d826:	2080      	movs	r0, #128	; 0x80
    d828:	08e4      	lsrs	r4, r4, #3
    d82a:	0300      	lsls	r0, r0, #12
    d82c:	4204      	tst	r4, r0
    d82e:	d008      	beq.n	d842 <__aeabi_dadd+0x54e>
    d830:	08dd      	lsrs	r5, r3, #3
    d832:	4205      	tst	r5, r0
    d834:	d105      	bne.n	d842 <__aeabi_dadd+0x54e>
    d836:	08d2      	lsrs	r2, r2, #3
    d838:	0759      	lsls	r1, r3, #29
    d83a:	4311      	orrs	r1, r2
    d83c:	000f      	movs	r7, r1
    d83e:	002c      	movs	r4, r5
    d840:	46d8      	mov	r8, fp
    d842:	0f7b      	lsrs	r3, r7, #29
    d844:	00e4      	lsls	r4, r4, #3
    d846:	431c      	orrs	r4, r3
    d848:	00ff      	lsls	r7, r7, #3
    d84a:	4e30      	ldr	r6, [pc, #192]	; (d90c <__aeabi_dadd+0x618>)
    d84c:	e5d6      	b.n	d3fc <__aeabi_dadd+0x108>
    d84e:	000c      	movs	r4, r1
    d850:	0017      	movs	r7, r2
    d852:	0006      	movs	r6, r0
    d854:	e5d2      	b.n	d3fc <__aeabi_dadd+0x108>
    d856:	2b00      	cmp	r3, #0
    d858:	d038      	beq.n	d8cc <__aeabi_dadd+0x5d8>
    d85a:	000b      	movs	r3, r1
    d85c:	4313      	orrs	r3, r2
    d85e:	d100      	bne.n	d862 <__aeabi_dadd+0x56e>
    d860:	e742      	b.n	d6e8 <__aeabi_dadd+0x3f4>
    d862:	08f8      	lsrs	r0, r7, #3
    d864:	0767      	lsls	r7, r4, #29
    d866:	4307      	orrs	r7, r0
    d868:	2080      	movs	r0, #128	; 0x80
    d86a:	08e4      	lsrs	r4, r4, #3
    d86c:	0300      	lsls	r0, r0, #12
    d86e:	4204      	tst	r4, r0
    d870:	d0e7      	beq.n	d842 <__aeabi_dadd+0x54e>
    d872:	08cb      	lsrs	r3, r1, #3
    d874:	4203      	tst	r3, r0
    d876:	d1e4      	bne.n	d842 <__aeabi_dadd+0x54e>
    d878:	08d2      	lsrs	r2, r2, #3
    d87a:	0749      	lsls	r1, r1, #29
    d87c:	4311      	orrs	r1, r2
    d87e:	000f      	movs	r7, r1
    d880:	001c      	movs	r4, r3
    d882:	e7de      	b.n	d842 <__aeabi_dadd+0x54e>
    d884:	2700      	movs	r7, #0
    d886:	2400      	movs	r4, #0
    d888:	e5d5      	b.n	d436 <__aeabi_dadd+0x142>
    d88a:	2100      	movs	r1, #0
    d88c:	e76b      	b.n	d766 <__aeabi_dadd+0x472>
    d88e:	2500      	movs	r5, #0
    d890:	2700      	movs	r7, #0
    d892:	e5f3      	b.n	d47c <__aeabi_dadd+0x188>
    d894:	464e      	mov	r6, r9
    d896:	0025      	movs	r5, r4
    d898:	3e20      	subs	r6, #32
    d89a:	40f5      	lsrs	r5, r6
    d89c:	464b      	mov	r3, r9
    d89e:	002e      	movs	r6, r5
    d8a0:	2b20      	cmp	r3, #32
    d8a2:	d02d      	beq.n	d900 <__aeabi_dadd+0x60c>
    d8a4:	2540      	movs	r5, #64	; 0x40
    d8a6:	1aed      	subs	r5, r5, r3
    d8a8:	40ac      	lsls	r4, r5
    d8aa:	4327      	orrs	r7, r4
    d8ac:	1e7c      	subs	r4, r7, #1
    d8ae:	41a7      	sbcs	r7, r4
    d8b0:	2400      	movs	r4, #0
    d8b2:	4337      	orrs	r7, r6
    d8b4:	e6c9      	b.n	d64a <__aeabi_dadd+0x356>
    d8b6:	2480      	movs	r4, #128	; 0x80
    d8b8:	2500      	movs	r5, #0
    d8ba:	0324      	lsls	r4, r4, #12
    d8bc:	4e13      	ldr	r6, [pc, #76]	; (d90c <__aeabi_dadd+0x618>)
    d8be:	2700      	movs	r7, #0
    d8c0:	e5dc      	b.n	d47c <__aeabi_dadd+0x188>
    d8c2:	4327      	orrs	r7, r4
    d8c4:	1e7c      	subs	r4, r7, #1
    d8c6:	41a7      	sbcs	r7, r4
    d8c8:	2400      	movs	r4, #0
    d8ca:	e779      	b.n	d7c0 <__aeabi_dadd+0x4cc>
    d8cc:	000c      	movs	r4, r1
    d8ce:	0017      	movs	r7, r2
    d8d0:	4e0e      	ldr	r6, [pc, #56]	; (d90c <__aeabi_dadd+0x618>)
    d8d2:	e593      	b.n	d3fc <__aeabi_dadd+0x108>
    d8d4:	000c      	movs	r4, r1
    d8d6:	0017      	movs	r7, r2
    d8d8:	e590      	b.n	d3fc <__aeabi_dadd+0x108>
    d8da:	4656      	mov	r6, sl
    d8dc:	0023      	movs	r3, r4
    d8de:	3e20      	subs	r6, #32
    d8e0:	40f3      	lsrs	r3, r6
    d8e2:	4699      	mov	r9, r3
    d8e4:	4653      	mov	r3, sl
    d8e6:	2b20      	cmp	r3, #32
    d8e8:	d00e      	beq.n	d908 <__aeabi_dadd+0x614>
    d8ea:	2340      	movs	r3, #64	; 0x40
    d8ec:	4656      	mov	r6, sl
    d8ee:	1b9b      	subs	r3, r3, r6
    d8f0:	409c      	lsls	r4, r3
    d8f2:	4327      	orrs	r7, r4
    d8f4:	1e7c      	subs	r4, r7, #1
    d8f6:	41a7      	sbcs	r7, r4
    d8f8:	464b      	mov	r3, r9
    d8fa:	2400      	movs	r4, #0
    d8fc:	431f      	orrs	r7, r3
    d8fe:	e75f      	b.n	d7c0 <__aeabi_dadd+0x4cc>
    d900:	2400      	movs	r4, #0
    d902:	e7d2      	b.n	d8aa <__aeabi_dadd+0x5b6>
    d904:	0017      	movs	r7, r2
    d906:	e5b2      	b.n	d46e <__aeabi_dadd+0x17a>
    d908:	2400      	movs	r4, #0
    d90a:	e7f2      	b.n	d8f2 <__aeabi_dadd+0x5fe>
    d90c:	000007ff 	.word	0x000007ff
    d910:	ff7fffff 	.word	0xff7fffff

0000d914 <__aeabi_dcmpun>:
    d914:	b570      	push	{r4, r5, r6, lr}
    d916:	4e0e      	ldr	r6, [pc, #56]	; (d950 <__aeabi_dcmpun+0x3c>)
    d918:	030d      	lsls	r5, r1, #12
    d91a:	031c      	lsls	r4, r3, #12
    d91c:	0049      	lsls	r1, r1, #1
    d91e:	005b      	lsls	r3, r3, #1
    d920:	0b2d      	lsrs	r5, r5, #12
    d922:	0d49      	lsrs	r1, r1, #21
    d924:	0b24      	lsrs	r4, r4, #12
    d926:	0d5b      	lsrs	r3, r3, #21
    d928:	42b1      	cmp	r1, r6
    d92a:	d004      	beq.n	d936 <__aeabi_dcmpun+0x22>
    d92c:	4908      	ldr	r1, [pc, #32]	; (d950 <__aeabi_dcmpun+0x3c>)
    d92e:	2000      	movs	r0, #0
    d930:	428b      	cmp	r3, r1
    d932:	d008      	beq.n	d946 <__aeabi_dcmpun+0x32>
    d934:	bd70      	pop	{r4, r5, r6, pc}
    d936:	4305      	orrs	r5, r0
    d938:	2001      	movs	r0, #1
    d93a:	2d00      	cmp	r5, #0
    d93c:	d1fa      	bne.n	d934 <__aeabi_dcmpun+0x20>
    d93e:	4904      	ldr	r1, [pc, #16]	; (d950 <__aeabi_dcmpun+0x3c>)
    d940:	2000      	movs	r0, #0
    d942:	428b      	cmp	r3, r1
    d944:	d1f6      	bne.n	d934 <__aeabi_dcmpun+0x20>
    d946:	4314      	orrs	r4, r2
    d948:	0020      	movs	r0, r4
    d94a:	1e44      	subs	r4, r0, #1
    d94c:	41a0      	sbcs	r0, r4
    d94e:	e7f1      	b.n	d934 <__aeabi_dcmpun+0x20>
    d950:	000007ff 	.word	0x000007ff
    d954:	682f2e2e 	.word	0x682f2e2e
    d958:	732f6c61 	.word	0x732f6c61
    d95c:	682f6372 	.word	0x682f6372
    d960:	695f6c61 	.word	0x695f6c61
    d964:	6d5f6332 	.word	0x6d5f6332
    d968:	6e79735f 	.word	0x6e79735f
    d96c:	00632e63 	.word	0x00632e63
    d970:	682f2e2e 	.word	0x682f2e2e
    d974:	732f6c61 	.word	0x732f6c61
    d978:	682f6372 	.word	0x682f6372
    d97c:	695f6c61 	.word	0x695f6c61
    d980:	00632e6f 	.word	0x00632e6f
    d984:	682f2e2e 	.word	0x682f2e2e
    d988:	732f6c61 	.word	0x732f6c61
    d98c:	682f6372 	.word	0x682f6372
    d990:	705f6c61 	.word	0x705f6c61
    d994:	632e6d77 	.word	0x632e6d77
    d998:	00000000 	.word	0x00000000
    d99c:	682f2e2e 	.word	0x682f2e2e
    d9a0:	732f6c61 	.word	0x732f6c61
    d9a4:	682f6372 	.word	0x682f6372
    d9a8:	735f6c61 	.word	0x735f6c61
    d9ac:	6d5f6970 	.word	0x6d5f6970
    d9b0:	6e79735f 	.word	0x6e79735f
    d9b4:	00632e63 	.word	0x00632e63
    d9b8:	682f2e2e 	.word	0x682f2e2e
    d9bc:	732f6c61 	.word	0x732f6c61
    d9c0:	682f6372 	.word	0x682f6372
    d9c4:	745f6c61 	.word	0x745f6c61
    d9c8:	72656d69 	.word	0x72656d69
    d9cc:	0000632e 	.word	0x0000632e
    d9d0:	682f2e2e 	.word	0x682f2e2e
    d9d4:	732f6c61 	.word	0x732f6c61
    d9d8:	682f6372 	.word	0x682f6372
    d9dc:	755f6c61 	.word	0x755f6c61
    d9e0:	74726173 	.word	0x74726173
    d9e4:	6e79735f 	.word	0x6e79735f
    d9e8:	00632e63 	.word	0x00632e63
    d9ec:	682f2e2e 	.word	0x682f2e2e
    d9f0:	752f6c61 	.word	0x752f6c61
    d9f4:	736c6974 	.word	0x736c6974
    d9f8:	6372732f 	.word	0x6372732f
    d9fc:	6974752f 	.word	0x6974752f
    da00:	6c5f736c 	.word	0x6c5f736c
    da04:	2e747369 	.word	0x2e747369
    da08:	00000063 	.word	0x00000063
    da0c:	682f2e2e 	.word	0x682f2e2e
    da10:	652f6c70 	.word	0x652f6c70
    da14:	682f6369 	.word	0x682f6369
    da18:	655f6c70 	.word	0x655f6c70
    da1c:	632e6369 	.word	0x632e6369
    da20:	00000000 	.word	0x00000000

0000da24 <_map>:
    da24:	00000008 00000028 682f2e2e 722f6c70     ....(...../hpl/r
    da34:	682f6374 725f6c70 632e6374 00000000     tc/hpl_rtc.c....
    da44:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
    da54:	65735f6c 6d6f6372 0000632e              l_sercom.c..

0000da60 <_i2cms>:
    da60:	00000002 00200014 00000100 00003736     ...... .....67..
    da70:	000000d7 02dc6c00                       .....l..

0000da78 <_usarts>:
    da78:	00000004 40010004 00030000 0000d555     .......@....U...

0000da88 <sercomspi_regs>:
    da88:	0020000c 00020000 00000000 000000fe     .. .............
    da98:	0020000c 00020000 00000000 03000003     .. .............
    daa8:	682f2e2e 742f6c70 70682f63 63745f6c     ../hpl/tc/hpl_tc
    dab8:	0000632e 00002caa 00002cbe 00002cd6     .c...,...,...,..
    dac8:	00002cee 00002d18 00002d32 00002df0     .,...-..2-...-..
    dad8:	00002d5c 00002d80 00002d8a 00002d94     \-...-...-...-..
    dae8:	00002dac 00002dd2 000034d0 000034da     .-...-...4...4..
    daf8:	000034e4 000034ec 000034f6 00003500     .4...4...4...5..

0000db08 <favicon_ico>:
    db08:	474e5089 0a1a0a0d 0d000000 52444849     .PNG........IHDR
    db18:	20000000 20000000 00000608 7a7a7300     ... ... .....szz
    db28:	000000f4 49427304 08080854 64087c08     .....sBIT....|.d
    db38:	00000088 59487009 00000073 000000ec     .....pHYs.......
    db48:	287901ec 0000bd71 45741900 6f537458     ..y(q.....tEXtSo
    db58:	61777466 77006572 692e7777 63736b6e     ftware.www.inksc
    db68:	2e657061 9b67726f 001a3cee 49ff0400     ape.org..<.....I
    db78:	58544144 7997c585 1c57144c ec333fc7     DATX...yL.W..?3.
    db88:	2ebb5cb2 8882a2b0 45141647 d62ecf1a     .\......G..E....
    db98:	61ed5ab6 d5624a2b 1de34da6 dad46aaf     .Z.a+Jb..M...j..
    dba8:	6351b5a4 5a969b1b c6a26adb a53136da     ..Qc...Z.j...61.
    dbb8:	21a2d135 278d623d ada236b6 8820ae88     5..!=b.'.6.... .
    dbc8:	22c8825c ccc7b2c8 40ff4cce a8239017     \..".....L.@..#.
    dbd8:	4cffbf68 7efdef7e 3379fbef 819bdef3     h..L~..~..y3....
    dbe8:	ddc259ff fc10106b 80ddbd84 24860047     .Y..k.......G..$
    dbf8:	16fe2626 3da31313 f2f2f749 b76ed172     &&.....=I...r.n.
    dc08:	8480eaa7 b8d4d4d4 e2c763b1 aca8b972     .........c..r...
    dc18:	9336ecac 2458d8d8 74e9c249 08d8d8d2     ..6...X$I..t....
    dc28:	7d3e9f40 64ad5ab0 b7626666 5ae807db     @.>}.Z.dffb....Z
    dc38:	b6deec16 dd6d578e 7dac2377 3e5c384d     .....Wm.w#.}M8\>
    dc48:	9c246a2a 8f26beb5 76db02fd 228a2167     *j$...&....vg!."
    dc58:	2200ad00 a70b0a4d 001b7405 37b03034     ..."M....t..40.7
    dc68:	10004e8c 72a659d0 56c1d2e6 eb76ba19     .N...Y.r...V..v.
    dc78:	dbadd13a 782fa70a a8922bc8 d0d155ae     :...../x.+...U..
    dc88:	30053088 13206074 33d10546 0809e3bc     .0.0t` .F..3....
    dc98:	6d36c601 b1c8065d 50f6f97b 9110c603     ..6m]...{..P....
    dca8:	b10647e7 88899a60 0aaa221e 8a3ed565     .G..`...."..e.>.
    dcb8:	efd664ca 69248dba 62619e2c 4ba1a274     .d....$i,.abt..K
    dcc8:	b00a76e3 7a1ddf7d 2c5c8846 88310894     .v..}..zF.\,..1.
    dcd8:	8222b67c dfd110b0 034f75bf 1be6ab00     |."......uO.....
    dce8:	79eac6b1 a7042539 77f3654b ec3bec75     ...y9%..Ke.wu.;.
    dcf8:	11a5e3e4 1d0a0504 d8800f0d a99ce759     ............Y...
    dd08:	dfdcec61 1922a5c0 2b4370db 9972a2f3     a....."..pC+..r.
    dd18:	fc7da733 fb34dd95 110b0a7b 822cbcd9     3.}...4.{.....,.
    dd28:	31852fd9 ea2dc367 01c3ea9d 778d3ec8     ./.1g.-......>.w
    dd38:	c765acbf fa7e16fb b17b0a24 b74dfccc     ..e...~.$.{...M.
    dd48:	352abdc8 3290cbf5 67b8c75e db4ac875     ..*5...2^..gu.J.
    dd58:	621a8e59 6605c3e0 835a7d96 b2bc7724     Y..b...f.}Z.$w..
    dd68:	a8a805da ba4ef1f6 d1a48f03 830eb7af     ......N.........
    dd78:	ebe9605e 89aeb626 4689d0e4 083ba456     ^`..&......FV.;.
    dd88:	6f18120e 2dbc640b dbfdc190 46e1927f     ...o.d.-.......F
    dd98:	95805111 3cb81c5b a9b443ed 2361e80c     .Q..[..<.C....a#
    dda8:	37c150d6 f36b0f9f 9b0246d6 371b803e     .P.7..k..F..>..7
    ddb8:	22b1981b 02d5eb8b e64dcf89 6c55cb99     ..."......M...Ul
    ddc8:	9b54fc5c c147fbc1 639b3b8f 39d65bd5     \.T...G..;.c.[.9
    ddd8:	00742e80 73fdd773 2eda3a37 8ac93df1     ..t.s..s7:...=..
    dde8:	0f747448 642baae4 b8a4ac5d fcd3a4b0     Htt...+d].......
    ddf8:	021d1e96 557b7ecc 4ee90697 9e0aba75     .....~{U...Nu...
    de08:	27781e84 79fd507c ff4a77f8 fb9ff6ce     ..x'|P.y.wJ.....
    de18:	8d9c29b2 0fb476db 2e42ee70 8d3b1ebf     .)...v..p.B...;.
    de28:	3b98144e 8d010d2b 46befb83 4dc62553     N..;+......FS%.M
    de38:	f2524998 21451418 af1d3d3d 8a4a4bd7     .IR...E!==...KJ.
    de48:	70d54d0d 7bfc5dbb 48c5b721 a7a7d31a     .M.p.].{!..H....
    de58:	cc9c9c91 c967f395 80011a1c 6f34f490     ......g.......4o
    de68:	2ce4edec cd9a3ac8 c5ed1f0b 8c8778db     ...,.:.......x..
    de78:	a66356af 1a6b5d92 cc8a8531 52419f5a     .Vc..]k.1...Z.AR
    de88:	0e1c18f2 21a16107 626938bc 6270ca8b     .....a.!.8ib..pb
    de98:	a3f8c6fb 2e7afaba 9c92e6e6 aaa28c9c     ......z.........
    dea8:	ee7a735c 94e085ba f79696e4 434d023d     \sz.........=.MC
    deb8:	49141555 02451442 6b2bc008 f346aa28     U..IB.E...+k(.F.
    dec8:	251753c7 14dfe534 d5095e65 c37f1003     .S.%4...e^......
    ded8:	636f79ce a73300c7 d373224c 1d7a0c3c     .yoc..3.L"s.<.z.
    dee8:	01a66773 76c77ab0 899b927c c004de53     sg...z.v|...S...
    def8:	f6e0b162 fc763878 b2de8764 5a5a47cf     b...x8v.d....GZZ
    df08:	1816bd53 d79af040 85111be8 f82664c5     S...@........d&.
    df18:	dcab6e6c 83890056 9c1c4813 fe612ad0     ln..V....H...*a.
    df28:	62ad0d92 bb591451 e6cebdf6 10e64ade     ...bQ.Y......J..
    df38:	3fbf9713 207d6dce 7c10a6aa e018ea47     ...?.m} ...|G...
    df48:	82c96871 e7e7e495 7d35f3e3 f95ff511     qh........5}.._.
    df58:	f3805b56 70e1cee7 238dfc38 edc08c47     V[.....p8..#G...
    df68:	b8ad7376 d3c78f18 151540ad 16151415     vs.......@......
    df78:	d3939392 0a69a00c 8844d29a afd72500     ......i...D..%..
    df88:	b20a28a1 ef6e69e4 47474546 0335a023     .(...in.FEGG#.5.
    df98:	19c39b84 5e106834 633087af d51401f3     ....4h.^..0c....
    dfa8:	9bb757ab 0d252403 49d4fb23 01aa803f     .W...$%.#..I?...
    dfb8:	94f1f1f1 b5609694 d3163fc6 75adaa96     ......`..?.....u
    dfc8:	0064fb20 f1cc0055 1ea3d6f1 259fa7b7      .d.U..........%
    dfd8:	d3a8d232 9589fdeb 933e5555 b0f158d1     2.......UU>..X..
    dfe8:	c78f6e46 f6043060 df358636 43871ad5     Fn..`0..6.5....C
    dff8:	15f5ebd3 17d6a69a e89d5c14 e2e25ddf     .........\...]..
    e008:	5f2cf6e2 c59e6cbe 6f27f162 6145f2d9     ..,_.l..b.'o..Ea
    e018:	f59e5e5e c9800161 fc2d168b f9b366c5     ^^..a.....-..f..
    e028:	43f19567 471fcd46 2a070c8e 7432c5a1     g..CF..G...*..2t
    e038:	0ea75cb9 8a79f81c 57f66cd9 95d5d5d7     .\....y..l.W....
    e048:	4039823e 271389e1 cb4b4aab 05f900fc     >.9@...'.JK.....
    e058:	dd400d05 fdfef8bd b7d00c35 4780eb88     ..@.....5......G
    e068:	ffba55fd c809d7c7 793ee41d 971e07fd     .U........>y....
    e078:	2862fbd7 0000d764 45490000 42ae444e     ..b(d.....IEND.B
    e088:	00008260 20544547 0000202f 20544547     `...GET / ..GET 
    e098:	7661662f 6e6f6369 6f63692e 00000000     /favicon.ico....
    e0a8:	50545448 312e312f 30303220 0d4b4f20     HTTP/1.1 200 OK.
    e0b8:	6e6f430a 746e6574 7079542d 69203a65     .Content-Type: i
    e0c8:	6567616d 692d782f 0d6e6f63 000a0d0a     mage/x-icon.....
    e0d8:	20544547 7465732f 6c61765f 00000073     GET /set_vals...
    e0e8:	3d706d61 76266625 3d746c6f 00006625     amp=%f&volt=%f..
    e0f8:	50545448 312e312f 30303220 0d4b4f20     HTTP/1.1 200 OK.
    e108:	6e6f430a 746e6574 7079542d 61203a65     .Content-Type: a
    e118:	696c7070 69746163 6a2f6e6f 0d6e6f73     pplication/json.
    e128:	7b0a0d0a 63757322 73736563 72743a22     ...{"success":tr
    e138:	007d6575 20544547 7465672f 6c61765f     ue}.GET /get_val
    e148:	00000073 50545448 312e312f 30303220     s...HTTP/1.1 200
    e158:	0d4b4f20 6e6f430a 746e6574 7079542d      OK..Content-Typ
    e168:	61203a65 696c7070 69746163 6a2f6e6f     e: application/j
    e178:	0d6e6f73 7b0a0d0a 706d6122 2e253a22     son....{"amp":%.
    e188:	222c6632 746c6f76 2e253a22 222c6632     2f,"volt":%.2f,"
    e198:	74746177 2e253a22 222c6632 44706d61     watt":%.2f,"ampD
    e1a8:	3a224d4d 66322e25 6f76222c 4d44746c     MM":%.2f,"voltDM
    e1b8:	253a224d 2c66322e 74756f22 74617453     M":%.2f,"outStat
    e1c8:	253a2265 222c2064 226d6572 2c64253a     e":%d ,"rem":%d,
    e1d8:	72726522 64253a22 6e69222c 253a2230     "err":%d,"in0":%
    e1e8:	69222c64 3a22316e 222c6425 22326e69     d,"in1":%d,"in2"
    e1f8:	2064253a 0000007d 20544547 6e6f632f     :%d }...GET /con
    e208:	6c6f7274 00000000 69766564 253d6563     trol....device=%
    e218:	5d265e5b 74636126 3d6e6f69 00007325     [^&]&action=%s..
    e228:	006e6166 00006e6f 0066666f 006d6572     fan.on..off.rem.
    e238:	00757370                                psu.

0000e23c <psu_page>:
    e23c:	50545448 312e312f 30303220 0d4b4f20     HTTP/1.1 200 OK.
    e24c:	6e6f430a 746e6574 7079542d 74203a65     .Content-Type: t
    e25c:	2f747865 6c6d7468 0a0d0a0d 4f44213c     ext/html....<!DO
    e26c:	50595443 74682045 0a3e6c6d 6d74683c     CTYPE html>.<htm
    e27c:	616c206c 223d676e 3e226e65 65683c0a     l lang="en">.<he
    e28c:	0a3e6461 74656d3c 68632061 65737261     ad>.<meta charse
    e29c:	55223d74 382d4654 3c0a3e22 6c746974     t="UTF-8">.<titl
    e2ac:	6f503e65 20726577 70707553 4320796c     e>Power Supply C
    e2bc:	72746e6f 2f3c6c6f 6c746974 3c0a3e65     ontrol</title>.<
    e2cc:	6c797473 620a3e65 2079646f 6f660a7b     style>.body {.fo
    e2dc:	662d746e 6c696d61 41203a79 6c616972     nt-family: Arial
    e2ec:	6173202c 732d736e 66697265 69640a3b     , sans-serif;.di
    e2fc:	616c7073 66203a79 3b78656c 656c660a     splay: flex;.fle
    e30c:	69642d78 74636572 3a6e6f69 6c6f6320     x-direction: col
    e31c:	3b6e6d75 696c610a 692d6e67 736d6574     umn;.align-items
    e32c:	6563203a 7265746e 61700a3b 6e696464     : center;.paddin
    e33c:	32203a67 3b787030 6361620a 6f72676b     g: 20px;.backgro
    e34c:	3a646e75 30662320 30663066 0a7d0a3b     und: #f0f0f0;.}.
    e35c:	6e6f632e 6e696174 7b207265 78616d0a     .container {.max
    e36c:	6469772d 203a6874 70303034 770a3b78     -width: 400px;.w
    e37c:	68746469 3031203a 0a3b2530 6b636162     idth: 100%;.back
    e38c:	756f7267 203a646e 74696877 700a3b65     ground: white;.p
    e39c:	69646461 203a676e 78703032 6f620a3b     adding: 20px;.bo
    e3ac:	72656472 6461722d 3a737569 70303120     rder-radius: 10p
    e3bc:	620a3b78 732d786f 6f646168 30203a77     x;.box-shadow: 0
    e3cc:	31203020 20787030 61626772 202c3028      0 10px rgba(0, 
    e3dc:	30202c30 2e30202c 0a3b2931 742e0a7d     0, 0, 0.1);.}..t
    e3ec:	656c7469 740a7b20 2d747865 67696c61     itle {.text-alig
    e3fc:	63203a6e 65746e65 6d0a3b72 69677261     n: center;.margi
    e40c:	6f622d6e 6d6f7474 3032203a 0a3b7870     n-bottom: 20px;.
    e41c:	722e0a7d 202c776f 706e692e 722d7475     }..row, .input-r
    e42c:	202c776f 6572702e 2d746573 20776f72     ow, .preset-row 
    e43c:	69640a7b 616c7073 66203a79 3b78656c     {.display: flex;
    e44c:	73756a0a 79666974 6e6f632d 746e6574     .justify-content
    e45c:	7073203a 2d656361 77746562 3b6e6565     : space-between;
    e46c:	696c610a 692d6e67 736d6574 6563203a     .align-items: ce
    e47c:	7265746e 616d0a3b 6e696772 746f622d     nter;.margin-bot
    e48c:	3a6d6f74 70303120 7d0a3b78 6f722e0a     tom: 10px;.}..ro
    e49c:	616c2077 2c6c6562 6e692e20 2d747570     w label, .input-
    e4ac:	20776f72 6562616c 2e202c6c 73657270     row label, .pres
    e4bc:	722d7465 6c20776f 6c656261 660a7b20     et-row label {.f
    e4cc:	3a78656c 0a3b3120 722e0a7d 6920776f     lex: 1;.}..row i
    e4dc:	7475706e 692e202c 7475706e 776f722d     nput, .input-row
    e4ec:	706e6920 202c7475 6572702e 2d746573      input, .preset-
    e4fc:	20776f72 75706e69 0a7b2074 74646977     row input {.widt
    e50c:	31203a68 78703030 65740a3b 612d7478     h: 100px;.text-a
    e51c:	6e67696c 6563203a 7265746e 0a7d0a3b     lign: center;.}.
    e52c:	7475622e 2d6e6f74 20776f72 69640a7b     .button-row {.di
    e53c:	616c7073 66203a79 3b78656c 73756a0a     splay: flex;.jus
    e54c:	79666974 6e6f632d 746e6574 7073203a     tify-content: sp
    e55c:	2d656361 77746562 3b6e6565 72616d0a     ace-between;.mar
    e56c:	2d6e6967 3a706f74 70303220 7d0a3b78     gin-top: 20px;.}
    e57c:	75622e0a 6e6f7474 770a7b20 68746469     ..button {.width
    e58c:	3834203a 700a3b25 69646461 203a676e     : 48%;.padding: 
    e59c:	78703031 61620a3b 72676b63 646e756f     10px;.background
    e5ac:	3023203a 66623730 630a3b66 726f6c6f     : #007bff;.color
    e5bc:	6877203a 3b657469 726f620a 3a726564     : white;.border:
    e5cc:	6e6f6e20 620a3b65 6564726f 61722d72      none;.border-ra
    e5dc:	73756964 7035203a 630a3b78 6f737275     dius: 5px;.curso
    e5ec:	70203a72 746e696f 0a3b7265 622e0a7d     r: pointer;.}..b
    e5fc:	6f747475 6f683a6e 20726576 61620a7b     utton:hover {.ba
    e60c:	72676b63 646e756f 3023203a 62363530     ckground: #0056b
    e61c:	7d0a3b33 72702e0a 74657365 776f722d     3;.}..preset-row
    e62c:	640a7b20 6c707369 203a7961 78656c66      {.display: flex
    e63c:	756a0a3b 66697473 6f632d79 6e65746e     ;.justify-conten
    e64c:	73203a74 65636170 7465622d 6e656577     t: space-between
    e65c:	616d0a3b 6e696772 706f742d 3032203a     ;.margin-top: 20
    e66c:	0a3b7870 702e0a7d 65736572 75622d74     px;.}..preset-bu
    e67c:	6e6f7474 770a7b20 68746469 3233203a     tton {.width: 32
    e68c:	700a3b25 69646461 203a676e 78703031     %;.padding: 10px
    e69c:	61620a3b 72676b63 646e756f 3223203a     ;.background: #2
    e6ac:	34376138 630a3b35 726f6c6f 6877203a     8a745;.color: wh
    e6bc:	3b657469 726f620a 3a726564 6e6f6e20     ite;.border: non
    e6cc:	620a3b65 6564726f 61722d72 73756964     e;.border-radius
    e6dc:	7035203a 630a3b78 6f737275 70203a72     : 5px;.cursor: p
    e6ec:	746e696f 0a3b7265 702e0a7d 65736572     ointer;.}..prese
    e6fc:	75622d74 6e6f7474 766f683a 7b207265     t-button:hover {
    e70c:	6361620a 6f72676b 3a646e75 31322320     .background: #21
    e71c:	38333838 0a7d0a3b 7065732e 74617261     8838;.}..separat
    e72c:	7b20726f 6469770a 203a6874 25303031     or {.width: 100%
    e73c:	65680a3b 74686769 7031203a 620a3b78     ;.height: 1px;.b
    e74c:	676b6361 6e756f72 23203a64 3b646464     ackground: #ddd;
    e75c:	72616d0a 3a6e6967 70303220 3b302078     .margin: 20px 0;
    e76c:	2e0a7d0a 20776f72 6170732e 2d646563     .}..row .spaced-
    e77c:	75706e69 0a7b2074 6772616d 6c2d6e69     input {.margin-l
    e78c:	3a746665 70303120 7d0a3b78 74732e0a     eft: 10px;.}..st
    e79c:	73757461 646e692d 74616369 7b20726f     atus-indicator {
    e7ac:	6469770a 203a6874 78703032 65680a3b     .width: 20px;.he
    e7bc:	74686769 3032203a 0a3b7870 64726f62     ight: 20px;.bord
    e7cc:	722d7265 75696461 35203a73 0a3b2530     er-radius: 50%;.
    e7dc:	6b636162 756f7267 203a646e 63636323     background: #ccc
    e7ec:	2a2f203b 66654420 746c7561 206f7420     ; /* Default to 
    e7fc:	79617267 0a2f2a20 692e0a7d 6369646e     gray */.}..indic
    e80c:	726f7461 6e6f632d 6e696174 7b207265     ator-container {
    e81c:	7369640a 79616c70 6c66203a 0a3b7865     .display: flex;.
    e82c:	78656c66 7269642d 69746365 203a6e6f     flex-direction: 
    e83c:	756c6f63 0a3b6e6d 67696c61 74692d6e     column;.align-it
    e84c:	3a736d65 6e656320 3b726574 2e0a7d0a     ems: center;.}..
    e85c:	69646e69 6f746163 616c2d72 206c6562     indicator-label 
    e86c:	616d0a7b 6e696772 706f742d 7035203a     {.margin-top: 5p
    e87c:	740a3b78 2d747865 67696c61 63203a6e     x;.text-align: c
    e88c:	65746e65 7d0a3b72 68632e0a 626b6365     enter;.}..checkb
    e89c:	632d786f 61746e6f 72656e69 640a7b20     ox-container {.d
    e8ac:	6c707369 203a7961 78656c66 6c610a3b     isplay: flex;.al
    e8bc:	2d6e6769 6d657469 63203a73 65746e65     ign-items: cente
    e8cc:	6d0a3b72 69677261 656c2d6e 203a7466     r;.margin-left: 
    e8dc:	78703031 0a7d0a3b 6568632e 6f626b63     10px;.}..checkbo
    e8ec:	6f632d78 6961746e 2072656e 6562616c     x-container labe
    e8fc:	0a7b206c 6772616d 6c2d6e69 3a746665     l {.margin-left:
    e90c:	78703520 0a7d0a3b 74732f3c 3e656c79      5px;.}.</style>
    e91c:	682f3c0a 3e646165 6f623c0a 0a3e7964     .</head>.<body>.
    e92c:	7669643c 616c6320 223d7373 746e6f63     <div class="cont
    e93c:	656e6961 0a3e2272 2031683c 73616c63     ainer">.<h1 clas
    e94c:	74223d73 656c7469 6f503e22 20726577     s="title">Power 
    e95c:	70707553 4320796c 72746e6f 2f3c6c6f     Supply Control</
    e96c:	0a3e3168 7669643c 616c6320 223d7373     h1>.<div class="
    e97c:	22776f72 6c3c0a3e 6c656261 6572503e     row">.<label>Pre
    e98c:	20746573 20706d41 4d44202f 2f3c3a4d     set Amp / DMM:</
    e99c:	6562616c 3c0a3e6c 75706e69 79742074     label>.<input ty
    e9ac:	223d6570 74786574 64692022 6d61223d     pe="text" id="am
    e9bc:	65732d70 72202274 6f646165 20796c6e     p-set" readonly 
    e9cc:	73616c63 73223d73 65636170 6e692d64     class="spaced-in
    e9dc:	22747570 693c0a3e 7475706e 70797420     put">.<input typ
    e9ec:	74223d65 22747865 3d646920 706d6122     e="text" id="amp
    e9fc:	6d6d642d 65722022 6e6f6461 6320796c     -dmm" readonly c
    ea0c:	7373616c 7073223d 64656361 706e692d     lass="spaced-inp
    ea1c:	3e227475 642f3c0a 0a3e7669 7669643c     ut">.</div>.<div
    ea2c:	616c6320 223d7373 22776f72 6c3c0a3e      class="row">.<l
    ea3c:	6c656261 6572503e 20746573 746c6f56     abel>Preset Volt
    ea4c:	44202f20 3c3a4d4d 62616c2f 0a3e6c65      / DMM:</label>.
    ea5c:	706e693c 74207475 3d657079 78657422     <input type="tex
    ea6c:	69202274 76223d64 2d746c6f 22746573     t" id="volt-set"
    ea7c:	61657220 6c6e6f64 6c632079 3d737361      readonly class=
    ea8c:	61707322 2d646563 75706e69 0a3e2274     "spaced-input">.
    ea9c:	706e693c 74207475 3d657079 78657422     <input type="tex
    eaac:	69202274 76223d64 2d746c6f 226d6d64     t" id="volt-dmm"
    eabc:	61657220 6c6e6f64 6c632079 3d737361      readonly class=
    eacc:	61707322 2d646563 75706e69 0a3e2274     "spaced-input">.
    eadc:	69642f3c 3c0a3e76 20766964 73616c63     </div>.<div clas
    eaec:	72223d73 3e22776f 616c3c0a 3e6c6562     s="row">.<label>
    eafc:	74746157 57202d20 20747461 3a4d4d44     Watt - Watt DMM:
    eb0c:	616c2f3c 3e6c6562 6e693c0a 20747570     </label>.<input 
    eb1c:	65707974 6574223d 20227478 223d6469     type="text" id="
    eb2c:	74746177 7369642d 79616c70 65722022     watt-display" re
    eb3c:	6e6f6461 0a3e796c 69642f3c 3c0a3e76     adonly>.</div>.<
    eb4c:	20766964 73616c63 69223d73 7475706e     div class="input
    eb5c:	776f722d 3c0a3e22 6562616c 6f66206c     -row">.<label fo
    eb6c:	61223d72 692d706d 7475706e 65533e22     r="amp-input">Se
    eb7c:	654e2074 6d412077 2f3c3a70 6562616c     t New Amp:</labe
    eb8c:	3c0a3e6c 75706e69 79742074 223d6570     l>.<input type="
    eb9c:	74786574 64692022 6d61223d 6e692d70     text" id="amp-in
    ebac:	22747570 2f3c0a3e 3e766964 69643c0a     put">.</div>.<di
    ebbc:	6c632076 3d737361 706e6922 722d7475     v class="input-r
    ebcc:	3e22776f 616c3c0a 206c6562 3d726f66     ow">.<label for=
    ebdc:	6c6f7622 6e692d74 22747570 7465533e     "volt-input">Set
    ebec:	77654e20 6c6f5620 2f3c3a74 6562616c      New Volt:</labe
    ebfc:	3c0a3e6c 75706e69 79742074 223d6570     l>.<input type="
    ec0c:	74786574 64692022 6f76223d 692d746c     text" id="volt-i
    ec1c:	7475706e 3c0a3e22 7669642f 643c0a3e     nput">.</div>.<d
    ec2c:	63207669 7373616c 7562223d 6e6f7474     iv class="button
    ec3c:	776f722d 3c0a3e22 20766964 73616c63     -row">.<div clas
    ec4c:	69223d73 6369646e 726f7461 6e6f632d     s="indicator-con
    ec5c:	6e696174 3e227265 69643c0a 6c632076     tainer">.<div cl
    ec6c:	3d737361 61747322 2d737574 69646e69     ass="status-indi
    ec7c:	6f746163 69202272 73223d64 75746174     cator" id="statu
    ec8c:	6e692d73 61636964 22726f74 642f3c3e     s-indicator"></d
    ec9c:	0a3e7669 7669643c 616c6320 223d7373     iv>.<div class="
    ecac:	69646e69 6f746163 616c2d72 226c6562     indicator-label"
    ecbc:	74754f3e 69642f3c 3c0a3e76 7669642f     >Out</div>.</div
    eccc:	643c0a3e 63207669 7373616c 6e69223d     >.<div class="in
    ecdc:	61636964 2d726f74 746e6f63 656e6961     dicator-containe
    ecec:	0a3e2272 7669643c 616c6320 223d7373     r">.<div class="
    ecfc:	74617473 692d7375 6369646e 726f7461     status-indicator
    ed0c:	64692022 7265223d 6e692d72 61636964     " id="err-indica
    ed1c:	22726f74 642f3c3e 0a3e7669 7669643c     tor"></div>.<div
    ed2c:	616c6320 223d7373 69646e69 6f746163      class="indicato
    ed3c:	616c2d72 226c6562 7272453e 69642f3c     r-label">Err</di
    ed4c:	3c0a3e76 7669642f 643c0a3e 63207669     v>.</div>.<div c
    ed5c:	7373616c 6e69223d 61636964 2d726f74     lass="indicator-
    ed6c:	746e6f63 656e6961 0a3e2272 7669643c     container">.<div
    ed7c:	616c6320 223d7373 74617473 692d7375      class="status-i
    ed8c:	6369646e 726f7461 64692022 6e69223d     ndicator" id="in
    ed9c:	6e692d30 61636964 22726f74 642f3c3e     0-indicator"></d
    edac:	0a3e7669 7669643c 616c6320 223d7373     iv>.<div class="
    edbc:	69646e69 6f746163 616c2d72 226c6562     indicator-label"
    edcc:	304e493e 69642f3c 3c0a3e76 7669642f     >IN0</div>.</div
    eddc:	643c0a3e 63207669 7373616c 6e69223d     >.<div class="in
    edec:	61636964 2d726f74 746e6f63 656e6961     dicator-containe
    edfc:	0a3e2272 7669643c 616c6320 223d7373     r">.<div class="
    ee0c:	74617473 692d7375 6369646e 726f7461     status-indicator
    ee1c:	64692022 6e69223d 6e692d31 61636964     " id="in1-indica
    ee2c:	22726f74 642f3c3e 0a3e7669 7669643c     tor"></div>.<div
    ee3c:	616c6320 223d7373 69646e69 6f746163      class="indicato
    ee4c:	616c2d72 226c6562 314e493e 69642f3c     r-label">IN1</di
    ee5c:	3c0a3e76 7669642f 643c0a3e 63207669     v>.</div>.<div c
    ee6c:	7373616c 6e69223d 61636964 2d726f74     lass="indicator-
    ee7c:	746e6f63 656e6961 0a3e2272 7669643c     container">.<div
    ee8c:	616c6320 223d7373 74617473 692d7375      class="status-i
    ee9c:	6369646e 726f7461 64692022 6e69223d     ndicator" id="in
    eeac:	6e692d32 61636964 22726f74 642f3c3e     2-indicator"></d
    eebc:	0a3e7669 7669643c 616c6320 223d7373     iv>.<div class="
    eecc:	69646e69 6f746163 616c2d72 226c6562     indicator-label"
    eedc:	324e493e 69642f3c 3c0a3e76 7669642f     >IN2</div>.</div
    eeec:	3c0a0a3e 20766964 73616c63 63223d73     >..<div class="c
    eefc:	6b636568 2d786f62 746e6f63 656e6961     heckbox-containe
    ef0c:	0a3e2272 706e693c 74207475 3d657079     r">.<input type=
    ef1c:	65686322 6f626b63 69202278 72223d64     "checkbox" id="r
    ef2c:	746f6d65 6f632d65 6f72746e 68632d6c     emote-control-ch
    ef3c:	626b6365 3e22786f 616c3c0a 206c6562     eckbox">.<label 
    ef4c:	3d726f66 6d657222 2d65746f 746e6f63     for="remote-cont
    ef5c:	2d6c6f72 63656863 786f626b 65523e22     rol-checkbox">Re
    ef6c:	65746f6d 6e6f4320 6c6f7274 616c2f3c     mote Control</la
    ef7c:	3e6c6562 642f3c0a 0a3e7669 69642f3c     bel>.</div>.</di
    ef8c:	0a0a3e76 7669643c 616c6320 223d7373     v>..<div class="
    ef9c:	74747562 722d6e6f 3e22776f 75623c0a     button-row">.<bu
    efac:	6e6f7474 616c6320 223d7373 74747562     tton class="butt
    efbc:	20226e6f 6c797473 6d223d65 69677261     on" style="margi
    efcc:	656c2d6e 203a7466 6f747561 6f20223b     n-left: auto;" o
    efdc:	696c636e 223d6b63 56746573 65756c61     nclick="setValue
    efec:	22292873 7465533e 6c615620 3c736575     s()">Set Values<
    effc:	7475622f 3e6e6f74 642f3c0a 0a3e7669     /button>.</div>.
    f00c:	7669643c 616c6320 223d7373 74747562     <div class="butt
    f01c:	722d6e6f 3e22776f 75623c0a 6e6f7474     on-row">.<button
    f02c:	616c6320 223d7373 74747562 20226e6f      class="button" 
    f03c:	6c636e6f 3d6b6369 6e6f6322 6c6f7274     onclick="control
    f04c:	69766544 27286563 27757370 6e6f272c     Device('psu','on
    f05c:	3e222927 6e727554 55535020 3c6e4f20     ')">Turn PSU On<
    f06c:	7475622f 3e6e6f74 75623c0a 6e6f7474     /button>.<button
    f07c:	616c6320 223d7373 74747562 20226e6f      class="button" 
    f08c:	6c636e6f 3d6b6369 6e6f6322 6c6f7274     onclick="control
    f09c:	69766544 27286563 27757370 666f272c     Device('psu','of
    f0ac:	22292766 7275543e 5350206e 664f2055     f')">Turn PSU Of
    f0bc:	622f3c66 6f747475 3c0a3e6e 7669642f     f</button>.</div
    f0cc:	643c0a3e 63207669 7373616c 6573223d     >.<div class="se
    f0dc:	61726170 22726f74 642f3c3e 0a3e7669     parator"></div>.
    f0ec:	7669643c 616c6320 223d7373 74747562     <div class="butt
    f0fc:	722d6e6f 3e22776f 75623c0a 6e6f7474     on-row">.<button
    f10c:	616c6320 223d7373 74747562 20226e6f      class="button" 
    f11c:	6c636e6f 3d6b6369 6e6f6322 6c6f7274     onclick="control
    f12c:	69766544 27286563 276e6166 6e6f272c     Device('fan','on
    f13c:	3e222927 6e727554 6e614620 3c6e4f20     ')">Turn Fan On<
    f14c:	7475622f 3e6e6f74 75623c0a 6e6f7474     /button>.<button
    f15c:	616c6320 223d7373 74747562 20226e6f      class="button" 
    f16c:	6c636e6f 3d6b6369 6e6f6322 6c6f7274     onclick="control
    f17c:	69766544 27286563 276e6166 666f272c     Device('fan','of
    f18c:	22292766 7275543e 6146206e 664f206e     f')">Turn Fan Of
    f19c:	622f3c66 6f747475 3c0a3e6e 7669642f     f</button>.</div
    f1ac:	643c0a3e 63207669 7373616c 6573223d     >.<div class="se
    f1bc:	61726170 22726f74 642f3c3e 0a3e7669     parator"></div>.
    f1cc:	7669643c 616c6320 223d7373 73657270     <div class="pres
    f1dc:	722d7465 3e22776f 75623c0a 6e6f7474     et-row">.<button
    f1ec:	616c6320 223d7373 73657270 622d7465      class="preset-b
    f1fc:	6f747475 6f20226e 696c636e 223d6b63     utton" onclick="
    f20c:	50746573 65736572 29312874 56353e22     setPreset(1)">5V
    f21c:	3c413120 7475622f 3e6e6f74 75623c0a      1A</button>.<bu
    f22c:	6e6f7474 616c6320 223d7373 73657270     tton class="pres
    f23c:	622d7465 6f747475 6f20226e 696c636e     et-button" oncli
    f24c:	223d6b63 50746573 65736572 29322874     ck="setPreset(2)
    f25c:	32313e22 41322056 75622f3c 6e6f7474     ">12V 2A</button
    f26c:	623c0a3e 6f747475 6c63206e 3d737361     >.<button class=
    f27c:	65727022 2d746573 74747562 20226e6f     "preset-button" 
    f28c:	6c636e6f 3d6b6369 74657322 73657250     onclick="setPres
    f29c:	33287465 323e2229 32205634 622f3c41     et(3)">24V 2A</b
    f2ac:	6f747475 3c0a3e6e 7669642f 2f3c0a3e     utton>.</div>.</
    f2bc:	3e766964 63733c0a 74706972 75660a3e     div>.<script>.fu
    f2cc:	6974636e 66206e6f 68637465 756c6156     nction fetchValu
    f2dc:	29287365 660a7b20 68637465 672f2728     es() {.fetch('/g
    f2ec:	765f7465 27736c61 742e0a29 286e6568     et_vals')..then(
    f2fc:	70736572 65736e6f 203e3d20 70736572     response => resp
    f30c:	65736e6f 6f736a2e 2929286e 68742e0a     onse.json())..th
    f31c:	64286e65 20617461 7b203e3d 636f640a     en(data => {.doc
    f32c:	6e656d75 65672e74 656c4574 746e656d     ument.getElement
    f33c:	64497942 6d612728 65732d70 2e292774     ById('amp-set').
    f34c:	756c6176 203d2065 61746164 706d612e     value = data.amp
    f35c:	466f742e 64657869 3b293228 636f640a     .toFixed(2);.doc
    f36c:	6e656d75 65672e74 656c4574 746e656d     ument.getElement
    f37c:	64497942 6f762728 732d746c 29277465     ById('volt-set')
    f38c:	6c61762e 3d206575 74616420 6f762e61     .value = data.vo
    f39c:	742e746c 7869466f 32286465 640a3b29     lt.toFixed(2);.d
    f3ac:	6d75636f 2e746e65 45746567 656d656c     ocument.getEleme
    f3bc:	7942746e 27286449 74746177 7369642d     ntById('watt-dis
    f3cc:	79616c70 762e2927 65756c61 64203d20     play').value = d
    f3dc:	2e617461 74746177 466f742e 64657869     ata.watt.toFixed
    f3ec:	3b293228 636f640a 6e656d75 65672e74     (2);.document.ge
    f3fc:	656c4574 746e656d 64497942 6d612728     tElementById('am
    f40c:	6d642d70 2e29276d 756c6176 203d2065     p-dmm').value = 
    f41c:	61746164 706d612e 2e4d4d44 69466f74     data.ampDMM.toFi
    f42c:	28646578 0a3b2932 75636f64 746e656d     xed(2);.document
    f43c:	7465672e 6d656c45 42746e65 28644979     .getElementById(
    f44c:	6c6f7627 6d642d74 2e29276d 756c6176     'volt-dmm').valu
    f45c:	203d2065 61746164 6c6f762e 4d4d4474     e = data.voltDMM
    f46c:	466f742e 64657869 3b293228 2f2f0a0a     .toFixed(2);..//
    f47c:	64705520 20657461 20656874 74617473      Update the stat
    f48c:	69207375 6369646e 726f7461 6c6f6320     us indicator col
    f49c:	6220726f 64657361 206e6f20 5374756f     or based on outS
    f4ac:	65746174 6e6f630a 73207473 75746174     tate.const statu
    f4bc:	646e4973 74616369 3d20726f 636f6420     sIndicator = doc
    f4cc:	6e656d75 65672e74 656c4574 746e656d     ument.getElement
    f4dc:	64497942 74732728 73757461 646e692d     ById('status-ind
    f4ec:	74616369 2927726f 66690a3b 61642820     icator');.if (da
    f4fc:	6f2e6174 74537475 20657461 203d3d3d     ta.outState === 
    f50c:	7b202930 6174730a 49737574 6369646e     0) {.statusIndic
    f51c:	726f7461 7974732e 622e656c 676b6361     ator.style.backg
    f52c:	6e756f72 203d2064 63632327 203b2763     round = '#ccc'; 
    f53c:	67202f2f 0a796172 6c65207d 69206573     // gray.} else i
    f54c:	64282066 2e617461 5374756f 65746174     f (data.outState
    f55c:	3d3d3d20 20293120 74730a7b 73757461      === 1) {.status
    f56c:	69646e49 6f746163 74732e72 2e656c79     Indicator.style.
    f57c:	6b636162 756f7267 3d20646e 32232720     background = '#2
    f58c:	34376138 203b2735 67202f2f 6e656572     8a745'; // green
    f59c:	65207d0a 2065736c 28206669 61746164     .} else if (data
    f5ac:	74756f2e 74617453 3d3d2065 2932203d     .outState === 2)
    f5bc:	730a7b20 75746174 646e4973 74616369      {.statusIndicat
    f5cc:	732e726f 656c7974 6361622e 6f72676b     or.style.backgro
    f5dc:	20646e75 2327203d 35336364 3b273534     und = '#dc3545';
    f5ec:	202f2f20 0a646572 2f0a0a7d 7055202f      // red.}..// Up
    f5fc:	65746164 65687420 72726520 6920726f     date the error i
    f60c:	6369646e 726f7461 6c6f6320 6220726f     ndicator color b
    f61c:	64657361 206e6f20 0a727265 736e6f63     ased on err.cons
    f62c:	72652074 646e4972 74616369 3d20726f     t errIndicator =
    f63c:	636f6420 6e656d75 65672e74 656c4574      document.getEle
    f64c:	746e656d 64497942 72652728 6e692d72     mentById('err-in
    f65c:	61636964 27726f74 650a3b29 6e497272     dicator');.errIn
    f66c:	61636964 2e726f74 6c797473 61622e65     dicator.style.ba
    f67c:	72676b63 646e756f 64203d20 2e617461     ckground = data.
    f68c:	20727265 203d3d3d 203f2031 63642327     err === 1 ? '#dc
    f69c:	35343533 203a2027 63632327 203b2763     3545' : '#ccc'; 
    f6ac:	72202f2f 69206465 72652066 2c726f72     // red if error,
    f6bc:	61726720 746f2079 77726568 0a657369      gray otherwise.
    f6cc:	202f2f0a 61647055 74206574 49206568     .// Update the I
    f6dc:	202c304e 2c314e49 324e4920 646e6920     N0, IN1, IN2 ind
    f6ec:	74616369 2073726f 65736162 6e6f2064     icators based on
    f6fc:	306e6920 6e69202c 69202c31 630a326e      in0, in1, in2.c
    f70c:	74736e6f 306e6920 69646e49 6f746163     onst in0Indicato
    f71c:	203d2072 75636f64 746e656d 7465672e     r = document.get
    f72c:	6d656c45 42746e65 28644979 306e6927     ElementById('in0
    f73c:	646e692d 74616369 2927726f 6f630a3b     -indicator');.co
    f74c:	2074736e 49316e69 6369646e 726f7461     nst in1Indicator
    f75c:	64203d20 6d75636f 2e746e65 45746567      = document.getE
    f76c:	656d656c 7942746e 27286449 2d316e69     lementById('in1-
    f77c:	69646e69 6f746163 3b292772 6e6f630a     indicator');.con
    f78c:	69207473 6e49326e 61636964 20726f74     st in2Indicator 
    f79c:	6f64203d 656d7563 672e746e 6c457465     = document.getEl
    f7ac:	6e656d65 49794274 69272864 692d326e     ementById('in2-i
    f7bc:	6369646e 726f7461 0a3b2927 306e690a     ndicator');..in0
    f7cc:	69646e49 6f746163 74732e72 2e656c79     Indicator.style.
    f7dc:	6b636162 756f7267 3d20646e 74616420     background = dat
    f7ec:	6e692e61 3d3d2030 2031203d 2327203f     a.in0 === 1 ? '#
    f7fc:	37613832 20273534 2327203a 27636363     28a745' : '#ccc'
    f80c:	2f2f203b 65726720 69206e65 63612066     ; // green if ac
    f81c:	65766974 7267202c 6f207961 72656874     tive, gray other
    f82c:	65736977 316e690a 69646e49 6f746163     wise.in1Indicato
    f83c:	74732e72 2e656c79 6b636162 756f7267     r.style.backgrou
    f84c:	3d20646e 74616420 6e692e61 3d3d2031     nd = data.in1 ==
    f85c:	2031203d 2327203f 37613832 20273534     = 1 ? '#28a745' 
    f86c:	2327203a 27636363 2f2f203b 65726720     : '#ccc'; // gre
    f87c:	69206e65 63612066 65766974 7267202c     en if active, gr
    f88c:	6f207961 72656874 65736977 326e690a     ay otherwise.in2
    f89c:	69646e49 6f746163 74732e72 2e656c79     Indicator.style.
    f8ac:	6b636162 756f7267 3d20646e 74616420     background = dat
    f8bc:	6e692e61 3d3d2032 2031203d 2327203f     a.in2 === 1 ? '#
    f8cc:	37613832 20273534 2327203a 27636363     28a745' : '#ccc'
    f8dc:	2f2f203b 65726720 69206e65 63612066     ; // green if ac
    f8ec:	65766974 7267202c 6f207961 72656874     tive, gray other
    f8fc:	65736977 2f2f0a0a 64705520 20657461     wise..// Update 
    f90c:	20656874 63656863 786f626b 61747320     the checkbox sta
    f91c:	62206574 64657361 206e6f20 6f6d6572     te based on remo
    f92c:	74436574 640a6c72 6d75636f 2e746e65     teCtrl.document.
    f93c:	45746567 656d656c 7942746e 27286449     getElementById('
    f94c:	6f6d6572 632d6574 72746e6f 632d6c6f     remote-control-c
    f95c:	6b636568 27786f62 68632e29 656b6365     heckbox').checke
    f96c:	203d2064 61746164 6d65722e 3d3d3d20     d = data.rem ===
    f97c:	0a3b3120 2e0a297d 63746163 72652868      1;.})..catch(er
    f98c:	20726f72 63203e3d 6f736e6f 652e656c     ror => console.e
    f99c:	726f7272 72452728 20726f72 63746566     rror('Error fetc
    f9ac:	676e6968 6c617620 3a736575 65202c27     hing values:', e
    f9bc:	726f7272 0a3b2929 660a0a7d 74636e75     rror));.}..funct
    f9cc:	206e6f69 56746573 65756c61 20292873     ion setValues() 
    f9dc:	6f630a7b 2074736e 20706d61 6170203d     {.const amp = pa
    f9ec:	46657372 74616f6c 636f6428 6e656d75     rseFloat(documen
    f9fc:	65672e74 656c4574 746e656d 64497942     t.getElementById
    fa0c:	6d612728 6e692d70 27747570 61762e29     ('amp-input').va
    fa1c:	2965756c 6f630a3b 2074736e 746c6f76     lue);.const volt
    fa2c:	70203d20 65737261 616f6c46 6f642874      = parseFloat(do
    fa3c:	656d7563 672e746e 6c457465 6e656d65     cument.getElemen
    fa4c:	49794274 76272864 2d746c6f 75706e69     tById('volt-inpu
    fa5c:	2e292774 756c6176 0a3b2965 63746566     t').value);.fetc
    fa6c:	2f602868 5f746573 736c6176 706d613f     h(`/set_vals?amp
    fa7c:	617b243d 267d706d 746c6f76 767b243d     =${amp}&volt=${v
    fa8c:	7d746c6f 2e0a2960 6e656874 73657228     olt}`)..then(res
    fa9c:	736e6f70 3e3d2065 73657220 736e6f70     ponse => respons
    faac:	736a2e65 29286e6f 742e0a29 286e6568     e.json())..then(
    fabc:	61746164 203e3d20 66690a7b 61642820     data => {.if (da
    facc:	732e6174 65636375 20297373 65660a7b     ta.success) {.fe
    fadc:	56686374 65756c61 3b292873 65207d0a     tchValues();.} e
    faec:	2065736c 6c610a7b 28747265 72724527     lse {.alert('Err
    fafc:	7320726f 69747465 7620676e 65756c61     or setting value
    fb0c:	3b292773 7d0a7d0a 632e0a29 68637461     s');.}.})..catch
    fb1c:	72726528 3d20726f 6f63203e 6c6f736e     (error => consol
    fb2c:	72652e65 28726f72 72724527 7320726f     e.error('Error s
    fb3c:	69747465 7620676e 65756c61 2c273a73     etting values:',
    fb4c:	72726520 2929726f 0a7d0a3b 6e75660a      error));.}..fun
    fb5c:	6f697463 6f63206e 6f72746e 7665446c     ction controlDev
    fb6c:	28656369 69766564 202c6563 69746361     ice(device, acti
    fb7c:	20296e6f 65660a7b 28686374 6f632f60     on) {.fetch(`/co
    fb8c:	6f72746e 65643f6c 65636976 647b243d     ntrol?device=${d
    fb9c:	63697665 61267d65 6f697463 7b243d6e     evice}&action=${
    fbac:	69746361 607d6e6f 742e0a29 286e6568     action}`)..then(
    fbbc:	70736572 65736e6f 203e3d20 70736572     response => resp
    fbcc:	65736e6f 6f736a2e 2929286e 68742e0a     onse.json())..th
    fbdc:	64286e65 20617461 7b203e3d 2066690a     en(data => {.if 
    fbec:	74616428 75732e61 73656363 7b202973     (data.success) {
    fbfc:	656c610a 60287472 65647b24 65636976     .alert(`${device
    fc0c:	556f742e 72657070 65736143 207d2928     .toUpperCase()} 
    fc1c:	63617b24 6e6f6974 556f742e 72657070     ${action.toUpper
    fc2c:	65736143 207d2928 63637553 66737365     Case()} Successf
    fc3c:	29606c75 207d0a3b 65736c65 610a7b20     ul`);.} else {.a
    fc4c:	7472656c 72456028 20726f72 63617b24     lert(`Error ${ac
    fc5c:	6e6f6974 676e697d 647b2420 63697665     tion}ing ${devic
    fc6c:	29607d65 0a7d0a3b 2e0a297d 63746163     e}`);.}.})..catc
    fc7c:	72652868 20726f72 63203e3d 6f736e6f     h(error => conso
    fc8c:	652e656c 726f7272 72456028 20726f72     le.error(`Error 
    fc9c:	63617b24 6e6f6974 676e697d 647b2420     ${action}ing ${d
    fcac:	63697665 603a7d65 7265202c 29726f72     evice}:`, error)
    fcbc:	7d0a3b29 75660a0a 6974636e 73206e6f     );.}..function s
    fccc:	72507465 74657365 65727028 29746573     etPreset(preset)
    fcdc:	6c0a7b20 61207465 202c706d 746c6f76      {.let amp, volt
    fcec:	66690a3b 72702820 74657365 203d3d20     ;.if (preset == 
    fcfc:	7b202931 706d610a 31203d20 3b35322e     1) {.amp = 1.25;
    fd0c:	6c6f760a 203d2074 3b332e35 65207d0a     .volt = 5.3;.} e
    fd1c:	2065736c 28206669 73657270 3d207465     lse if (preset =
    fd2c:	2932203d 610a7b20 3d20706d 302e3220     = 2) {.amp = 2.0
    fd3c:	6f760a3b 3d20746c 2e323120 7d0a3b30     ;.volt = 12.0;.}
    fd4c:	736c6520 66692065 72702820 74657365      else if (preset
    fd5c:	203d3d20 7b202933 706d610a 32203d20      == 3) {.amp = 2
    fd6c:	0a3b302e 746c6f76 32203d20 3b302e34     .0;.volt = 24.0;
    fd7c:	640a7d0a 6d75636f 2e746e65 45746567     .}.document.getE
    fd8c:	656d656c 7942746e 27286449 2d706d61     lementById('amp-
    fd9c:	75706e69 2e292774 756c6176 203d2065     input').value = 
    fdac:	3b706d61 636f640a 6e656d75 65672e74     amp;.document.ge
    fdbc:	656c4574 746e656d 64497942 6f762728     tElementById('vo
    fdcc:	692d746c 7475706e 762e2927 65756c61     lt-input').value
    fddc:	76203d20 3b746c6f 7465730a 756c6156      = volt;.setValu
    fdec:	29287365 0a7d0a3b 636f640a 6e656d75     es();.}..documen
    fdfc:	65672e74 656c4574 746e656d 64497942     t.getElementById
    fe0c:	65722728 65746f6d 6e6f632d 6c6f7274     ('remote-control
    fe1c:	6568632d 6f626b63 2e292778 45646461     -checkbox').addE
    fe2c:	746e6576 7473694c 72656e65 68632728     ventListener('ch
    fe3c:	65676e61 66202c27 74636e75 286e6f69     ange', function(
    fe4c:	0a7b2029 736e6f63 63612074 6e6f6974     ) {.const action
    fe5c:	74203d20 2e736968 63656863 2064656b      = this.checked 
    fe6c:	6f27203f 3a20276e 666f2720 0a3b2766     ? 'on' : 'off';.
    fe7c:	63746566 2f602868 746e6f63 3f6c6f72     fetch(`/control?
    fe8c:	69766564 723d6563 61266d65 6f697463     device=rem&actio
    fe9c:	7b243d6e 69746361 607d6e6f 742e0a29     n=${action}`)..t
    feac:	286e6568 70736572 65736e6f 203e3d20     hen(response => 
    febc:	70736572 65736e6f 6f736a2e 2929286e     response.json())
    fecc:	68742e0a 64286e65 20617461 7b203e3d     ..then(data => {
    fedc:	2066690a 74616428 75732e61 73656363     .if (data.succes
    feec:	7b202973 6e6f630a 656c6f73 676f6c2e     s) {.console.log
    fefc:	65526028 65746f6d 6e6f6320 6c6f7274     (`Remote control
    ff0c:	617b2420 6f697463 73207d6e 65636375      ${action} succe
    ff1c:	75667373 3b29606c 65207d0a 2065736c     ssful`);.} else 
    ff2c:	6c610a7b 28747265 72724560 2420726f     {.alert(`Error $
    ff3c:	7463617b 7d6e6f69 20676e69 6f6d6572     {action}ing remo
    ff4c:	63206574 72746e6f 29606c6f 0a7d0a3b     te control`);.}.
    ff5c:	2e0a297d 63746163 72652868 20726f72     })..catch(error 
    ff6c:	63203e3d 6f736e6f 652e656c 726f7272     => console.error
    ff7c:	72456028 20726f72 63617b24 6e6f6974     (`Error ${action
    ff8c:	676e697d 6d657220 2065746f 746e6f63     }ing remote cont
    ff9c:	3a6c6f72 65202c60 726f7272 0a3b2929     rol:`, error));.
    ffac:	0a3b297d 7465730a 65746e49 6c617672     });..setInterval
    ffbc:	74656628 61566863 7365756c 3031202c     (fetchValues, 10
    ffcc:	3b293030 732f3c0a 70697263 3c0a3e74     00);.</script>.<
    ffdc:	646f622f 3c0a3e79 6d74682f 000a3e6c     /body>.</html>..
    ffec:	00004184 000040d4 000040d4 000040d2     .A...@...@...@..
    fffc:	00004176 00004176 0000416c 000040d2     vA..vA..lA...@..
   1000c:	00004176 0000416c 00004176 000040d2     vA..lA..vA...@..
   1001c:	0000417c 0000417c 0000417c 0000420c     |A..|A..|A...B..
   1002c:	00004530 00004512 000044cc 000043ea     0E...E...D...C..
   1003c:	000044cc 00004504 000044cc 000043ea     .D...E...D...C..
   1004c:	00004512 00004512 00004504 000043ea     .E...E...E...C..
   1005c:	000043e2 000043e2 000043e2 00004748     .C...C...C..HG..
   1006c:	00004b90 00004a50 00004a50 00004a4c     .K..PJ..PJ..LJ..
   1007c:	00004b68 00004b68 00004b5a 00004a4c     hK..hK..ZK..LJ..
   1008c:	00004b68 00004b5a 00004b68 00004a4c     hK..ZK..hK..LJ..
   1009c:	00004b70 00004b70 00004b70 00004d74     pK..pK..pK..tM..

000100ac <_global_impure_ptr>:
   100ac:	200000a0 00006ae8 00006b5c 00006b5c     ... .j..\k..\k..
   100bc:	00006acc 00006b5c 00006b5c 00006b5c     .j..\k..\k..\k..
   100cc:	00006b5c 00006b5c 00006b5c 00006ad4     \k..\k..\k...j..
   100dc:	000065b6 00006b5c 00006570 000065c0     .e..\k..pe...e..
   100ec:	00006b5c 0000660c 000067f6 000067f6     \k...f...g...g..
   100fc:	000067f6 000067f6 000067f6 000067f6     .g...g...g...g..
   1010c:	000067f6 000067f6 000067f6 00006b5c     .g...g...g..\k..
   1011c:	00006b5c 00006b5c 00006b5c 00006b5c     \k..\k..\k..\k..
   1012c:	00006b5c 00006b5c 00006b5c 00006b5c     \k..\k..\k..\k..
   1013c:	00006b5c 00006614 0000675c 00006b5c     \k...f..\g..\k..
   1014c:	0000675c 00006b5c 00006b5c 00006b5c     \g..\k..\k..\k..
   1015c:	00006b5c 00006826 00006b5c 00006b5c     \k..&h..\k..\k..
   1016c:	0000682e 00006b5c 00006b5c 00006b5c     .h..\k..\k..\k..
   1017c:	00006b5c 00006b5c 000068d0 00006b5c     \k..\k...h..\k..
   1018c:	00006b5c 00006902 00006b5c 00006b5c     \k...i..\k..\k..
   1019c:	00006b5c 00006b5c 00006b5c 00006b5c     \k..\k..\k..\k..
   101ac:	00006b5c 00006b5c 00006b5c 00006b5c     \k..\k..\k..\k..
   101bc:	000069fc 00006a30 0000675c 0000675c     .i..0j..\g..\g..
   101cc:	0000675c 00006a42 00006a30 00006b5c     \g..Bj..0j..\k..
   101dc:	00006b5c 00006a4a 00006b5c 00006964     \k..Jj..\k..di..
   101ec:	00006b2a 00006aa0 0000699a 00006b5c     *k...j...i..\k..
   101fc:	000069a2 00006b5c 00006af8 00006b5c     .i..\k...j..\k..
   1020c:	00006b5c 00006a5a 00464e49 00666e69     \k..Zj..INF.inf.
   1021c:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
   1022c:	42413938 46454443 00000000 33323130     89ABCDEF....0123
   1023c:	37363534 62613938 66656463 00000000     456789abcdef....
   1024c:	6c756e28 0000296c 00000030              (null)..0...

00010258 <blanks.7223>:
   10258:	20202020 20202020 20202020 20202020                     

00010268 <zeroes.7224>:
   10268:	30303030 30303030 30303030 30303030     0000000000000000
   10278:	00007bd4 00007d14 00007d14 00007d14     .{...}...}...}..
   10288:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   10298:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   102a8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   102b8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   102c8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   102d8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   102e8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   102f8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   10308:	00007d14 00007b70 00007d14 00007d14     .}..p{...}...}..
   10318:	00007d14 00007d14 00007e1e 00007d14     .}...}...~...}..
   10328:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   10338:	00007e02 00007e02 00007e02 00007e02     .~...~...~...~..
   10348:	00007e02 00007e02 00007e02 00007e02     .~...~...~...~..
   10358:	00007e02 00007e02 00007d14 00007d14     .~...~...}...}..
   10368:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   10378:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   10388:	00007df4 00007dd2 00007d14 00007dd2     .}...}...}...}..
   10398:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   103a8:	00007dcc 00007d14 00007d14 00007dc0     .}...}...}...}..
   103b8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   103c8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   103d8:	00007dba 00007d14 00007d14 00007d9e     .}...}...}...}..
   103e8:	00007d14 00007d14 00007d14 00007d14     .}...}...}...}..
   103f8:	00007d14 00007d14 00007d14 00007d8e     .}...}...}...}..
   10408:	00007d88 00007dd2 00007dd2 00007dd2     .}...}...}...}..
   10418:	00007d78 00007bdc 00007d14 00007d14     x}...{...}...}..
   10428:	00007cf0 00007d14 00007d3e 00007d2e     .|...}..>}...}..
   10438:	00007cd6 00007d14 00007d14 00007cce     .|...}...}...|..
   10448:	00007d14 00007c2c 00007d14 00007d14     .}..,|...}...}..
   10458:	00007dba 00007e9e 00008074 00007e9e     .}...~..t....~..
   10468:	00008074 00008074 00007e62 00007e26     t...t...b~..&~..
   10478:	00007e26 00007e26 00007e26 00007e26     &~..&~..&~..&~..
   10488:	00007e26 00007e26 00007e26 00007e26     &~..&~..&~..&~..
   10498:	00008074 00008074 00008074 00008074     t...t...t...t...
   104a8:	00008074 00008074 00008074 00008058     t...t...t...X...
   104b8:	00008074 00008074 00008074 0000800e     t...t...t.......
   104c8:	00008000 00008074 00008074 00007ee8     ....t...t....~..
   104d8:	00008074 00008074 00008074 00008074     t...t...t...t...
   104e8:	00007eb8 00008074 00008074 00008074     .~..t...t...t...
   104f8:	00008074 00008074 00007eac 00008074     t...t....~..t...
   10508:	00008074 00008074 00008074 00008066     t...t...t...f...
   10518:	00008074 00008074 00008074 00008074     t...t...t...t...
   10528:	00008074 00008074 00008074 00008058     t...t...t...X...
   10538:	00008074 00008074 00008074 0000800e     t...t...t.......
   10548:	00008000 00008074 00008074 00007ee8     ....t...t....~..
   10558:	00008074 00008074 00008074 00008074     t...t...t...t...
   10568:	00007eb8 00008074 00008074 00008074     .~..t...t...t...
   10578:	00008074 00008074 00007eac 00008074     t...t....~..t...
   10588:	00008074 00008074 00008074 00008066     t...t...t...f...
   10598:	0000829e 000081f6 0000829e 000081f6     ................
   105a8:	000081f6 00008242 00008232 00008232     ....B...2...2...
   105b8:	00008232 00008232 00008232 00008232     2...2...2...2...
   105c8:	00008232 0000828e 0000828e 000081f6     2...............
   105d8:	000081f6 000081f6 000081f6 000081f6     ................
   105e8:	000081f6 000081f6 00008226 00008226     ........&...&...
   105f8:	00008226 00008226 00008226 00008226     &...&...&...&...
   10608:	000081f6 000081f6 000081f6 000081f6     ................
   10618:	000081f6 000081f6 000081f6 000081f6     ................
   10628:	000081f6 000081f6 000081f6 000081f6     ................
   10638:	000081f6 000081f6 000081f6 000081f6     ................
   10648:	000081f6 000081c2 000081f6 000081f6     ................
   10658:	000081f6 000081f6 000081f6 000081f6     ................
   10668:	000081f6 000081f6 00008226 00008226     ........&...&...
   10678:	00008226 00008226 00008226 00008226     &...&...&...&...
   10688:	000081f6 000081f6 000081f6 000081f6     ................
   10698:	000081f6 000081f6 000081f6 000081f6     ................
   106a8:	000081f6 000081f6 000081f6 000081f6     ................
   106b8:	000081f6 000081f6 000081f6 000081f6     ................
   106c8:	000081f6 000081c2 646c2565 00000000     ........e%ld....

000106d8 <basefix.7294>:
   106d8:	0001000a 00030002 00050004 00070006     ................
   106e8:	00090008 000b000a 000d000c 000f000e     ................
   106f8:	00000010 69666e49 7974696e 00000000     ....Infinity....
   10708:	004e614e 00000043 49534f50 00000058     NaN.C...POSIX...
   10718:	0000002e 00000000                       ........

00010720 <__mprec_bigtens>:
   10720:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   10730:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   10740:	7f73bf3c 75154fdd                       <.s..O.u

00010748 <__mprec_tens>:
   10748:	00000000 3ff00000 00000000 40240000     .......?......$@
   10758:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   10768:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   10778:	00000000 412e8480 00000000 416312d0     .......A......cA
   10788:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   10798:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   107a8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   107b8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   107c8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   107d8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   107e8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   107f8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   10808:	79d99db4 44ea7843                       ...yCx.D

00010810 <p05.6055>:
   10810:	00000005 00000019 0000007d 0000aed4     ........}.......
   10820:	0000af6e 0000af6e 0000af6e 0000af6e     n...n...n...n...
   10830:	0000af6e 0000af6e 0000af6e 0000af6e     n...n...n...n...
   10840:	0000af62 0000af62 0000af62 0000af62     b...b...b...b...
   10850:	0000af62 0000af6e 0000af6e 0000af6e     b...n...n...n...
   10860:	0000af6e 0000af6e 0000af6e 0000af6e     n...n...n...n...
   10870:	0000af6e 0000af6e 0000af6e 0000af6e     n...n...n...n...
   10880:	0000af6e 0000af6e 0000af6e 0000af6e     n...n...n...n...
   10890:	0000af6e 0000af6e 0000af6e 0000af62     n...n...n...b...
   108a0:	0000af6e 0000af6e 0000af6e 0000af6e     n...n...n...n...
   108b0:	0000af6e 0000af6e 0000af6e 0000af6e     n...n...n...n...
   108c0:	0000af6e 0000af6e 0000af08 0000af6e     n...n.......n...
   108d0:	0000afaa 0000b900 0000b922 0000b918     ........".......
   108e0:	0000b912 0000b8f6 0000b922 0000666e     ........"...nf..
   108f0:	74696e69 00000079 00006e61              inity...an..

000108fc <fpi.6141>:
   108fc:	00000035 fffffbce 000003cb 00000001     5...............
   1090c:	00000000                                ....

00010910 <fpinan.6177>:
   10910:	00000034 fffffbce 000003cb 00000001     4...............
	...

00010928 <tinytens>:
   10928:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   10938:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   10948:	64ac6f43 11680628                       Co.d(.h.

00010950 <_ctype_>:
   10950:	20202000 20202020 28282020 20282828     .         ((((( 
   10960:	20202020 20202020 20202020 20202020                     
   10970:	10108820 10101010 10101010 10101010      ...............
   10980:	04040410 04040404 10040404 10101010     ................
   10990:	41411010 41414141 01010101 01010101     ..AAAAAA........
   109a0:	01010101 01010101 01010101 10101010     ................
   109b0:	42421010 42424242 02020202 02020202     ..BBBBBB........
   109c0:	02020202 02020202 02020202 10101010     ................
   109d0:	00000020 00000000 00000000 00000000      ...............
	...

00010a54 <__hexdig>:
	...
   10a84:	13121110 17161514 00001918 00000000     ................
   10a94:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
   10ab4:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

00010b54 <_init>:
   10b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10b56:	46c0      	nop			; (mov r8, r8)
   10b58:	bcf8      	pop	{r3, r4, r5, r6, r7}
   10b5a:	bc08      	pop	{r3}
   10b5c:	469e      	mov	lr, r3
   10b5e:	4770      	bx	lr

00010b60 <__init_array_start>:
   10b60:	00008865 	.word	0x00008865

00010b64 <__frame_dummy_init_array_entry>:
   10b64:	000000cd                                ....

00010b68 <_fini>:
   10b68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10b6a:	46c0      	nop			; (mov r8, r8)
   10b6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   10b6e:	bc08      	pop	{r3}
   10b70:	469e      	mov	lr, r3
   10b72:	4770      	bx	lr

00010b74 <__fini_array_start>:
   10b74:	000000a5 	.word	0x000000a5
