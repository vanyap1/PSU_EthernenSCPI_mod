
PSU_ETH_Controller_s21.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000f740  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000f740  0000f740  0001f740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a48  20000000  0000f748  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000a18  20000a48  00010190  00020a48  2**2
                  ALLOC
  4 .stack        00002000  20001460  00010ba8  00020a48  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020a48  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020a72  2**0
                  CONTENTS, READONLY
  7 .debug_info   00034566  00000000  00000000  00020acb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000046ff  00000000  00000000  00055031  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00014ab3  00000000  00000000  00059730  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000fe0  00000000  00000000  0006e1e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001068  00000000  00000000  0006f1c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000088c6  00000000  00000000  0007022b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000126e2  00000000  00000000  00078af1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0005de6c  00000000  00000000  0008b1d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003e3c  00000000  00000000  000e9040  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
	PWM_1_PORT_init();
	pwm_init(&PWM_1, TC7, _tc_get_pwm());
}

void system_init(void)
{
       0:	60 34 00 20 09 01 00 00 05 01 00 00 05 01 00 00     `4. ............
	...
                                                    bool value)
{
	uint8_t tmp;
	PORT_CRITICAL_SECTION_ENTER();
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
	tmp &= ~PORT_PINCFG_PMUXEN;
      2c:	05 01 00 00 00 00 00 00 00 00 00 00 05 01 00 00     ................

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      3c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      4c:	ad 0c 00 00 a1 0a 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      5c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      6c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
      7c:	05 01 00 00 05 01 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
      8c:	99 18 00 00 a9 18 00 00 05 01 00 00 05 01 00 00     ................
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
      9c:	05 01 00 00 05 01 00 00                             ........

000000a4 <__do_global_dtors_aux>:
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      a4:	b510      	push	{r4, lr}
      a6:	4c06      	ldr	r4, [pc, #24]	; (c0 <__do_global_dtors_aux+0x1c>)
      a8:	7823      	ldrb	r3, [r4, #0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      aa:	2b00      	cmp	r3, #0
      ac:	d107      	bne.n	be <__do_global_dtors_aux+0x1a>
      ae:	4b05      	ldr	r3, [pc, #20]	; (c4 <__do_global_dtors_aux+0x20>)
	tmp &= ~PORT_PINCFG_PMUXEN;
      b0:	2b00      	cmp	r3, #0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      b2:	d002      	beq.n	ba <__do_global_dtors_aux+0x16>
      b4:	4804      	ldr	r0, [pc, #16]	; (c8 <__do_global_dtors_aux+0x24>)
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
      b6:	e000      	b.n	ba <__do_global_dtors_aux+0x16>
      b8:	bf00      	nop
      ba:	2301      	movs	r3, #1
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      bc:	7023      	strb	r3, [r4, #0]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      be:	bd10      	pop	{r4, pc}
      c0:	20000a48 	.word	0x20000a48
      c4:	00000000 	.word	0x00000000
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      c8:	0000f748 	.word	0x0000f748

000000cc <frame_dummy>:
      cc:	4b08      	ldr	r3, [pc, #32]	; (f0 <frame_dummy+0x24>)
	tmp &= ~PORT_PINCFG_PMUXEN;
      ce:	b510      	push	{r4, lr}
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      d0:	2b00      	cmp	r3, #0
      d2:	d003      	beq.n	dc <frame_dummy+0x10>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
      d4:	4907      	ldr	r1, [pc, #28]	; (f4 <frame_dummy+0x28>)
      d6:	4808      	ldr	r0, [pc, #32]	; (f8 <frame_dummy+0x2c>)
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
      d8:	e000      	b.n	dc <frame_dummy+0x10>
      da:	bf00      	nop
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      dc:	4807      	ldr	r0, [pc, #28]	; (fc <frame_dummy+0x30>)
      de:	6803      	ldr	r3, [r0, #0]
      e0:	2b00      	cmp	r3, #0
      e2:	d100      	bne.n	e6 <frame_dummy+0x1a>
      e4:	bd10      	pop	{r4, pc}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
      e6:	4b06      	ldr	r3, [pc, #24]	; (100 <frame_dummy+0x34>)
      e8:	2b00      	cmp	r3, #0
	tmp &= ~PORT_PINCFG_PMUXEN;
      ea:	d0fb      	beq.n	e4 <frame_dummy+0x18>
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
      ec:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
      ee:	e7f9      	b.n	e4 <frame_dummy+0x18>
      f0:	00000000 	.word	0x00000000
      f4:	20000a4c 	.word	0x20000a4c
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
      f8:	0000f748 	.word	0x0000f748
      fc:	0000f748 	.word	0x0000f748
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
     100:	00000000 	.word	0x00000000

00000104 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     104:	e7fe      	b.n	104 <Dummy_Handler>
	...

00000108 <Reset_Handler>:
{
     108:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     10a:	4a12      	ldr	r2, [pc, #72]	; (154 <Reset_Handler+0x4c>)
     10c:	4b12      	ldr	r3, [pc, #72]	; (158 <Reset_Handler+0x50>)
     10e:	429a      	cmp	r2, r3
     110:	d009      	beq.n	126 <Reset_Handler+0x1e>
     112:	4b11      	ldr	r3, [pc, #68]	; (158 <Reset_Handler+0x50>)
     114:	4a0f      	ldr	r2, [pc, #60]	; (154 <Reset_Handler+0x4c>)
     116:	e003      	b.n	120 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     118:	6811      	ldr	r1, [r2, #0]
     11a:	6019      	str	r1, [r3, #0]
     11c:	3304      	adds	r3, #4
     11e:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     120:	490e      	ldr	r1, [pc, #56]	; (15c <Reset_Handler+0x54>)
     122:	428b      	cmp	r3, r1
     124:	d3f8      	bcc.n	118 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     126:	4b0e      	ldr	r3, [pc, #56]	; (160 <Reset_Handler+0x58>)
     128:	e002      	b.n	130 <Reset_Handler+0x28>
                *pDest++ = 0;
     12a:	2200      	movs	r2, #0
     12c:	601a      	str	r2, [r3, #0]
     12e:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     130:	4a0c      	ldr	r2, [pc, #48]	; (164 <Reset_Handler+0x5c>)
     132:	4293      	cmp	r3, r2
     134:	d3f9      	bcc.n	12a <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     136:	4a0c      	ldr	r2, [pc, #48]	; (168 <Reset_Handler+0x60>)
     138:	21ff      	movs	r1, #255	; 0xff
     13a:	4b0c      	ldr	r3, [pc, #48]	; (16c <Reset_Handler+0x64>)
     13c:	438b      	bics	r3, r1
     13e:	6093      	str	r3, [r2, #8]
        NVMCTRL->CTRLB.bit.MANW = 1;
     140:	4a0b      	ldr	r2, [pc, #44]	; (170 <Reset_Handler+0x68>)
     142:	6851      	ldr	r1, [r2, #4]
     144:	2380      	movs	r3, #128	; 0x80
     146:	430b      	orrs	r3, r1
     148:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     14a:	f005 f9e7 	bl	551c <__libc_init_array>
        main();
     14e:	f003 f887 	bl	3260 <main>
     152:	e7fe      	b.n	152 <Reset_Handler+0x4a>
     154:	0000f748 	.word	0x0000f748
     158:	20000000 	.word	0x20000000
     15c:	20000a48 	.word	0x20000a48
     160:	20000a48 	.word	0x20000a48
     164:	20001460 	.word	0x20001460
     168:	e000ed00 	.word	0xe000ed00
     16c:	00000000 	.word	0x00000000
     170:	41004000 	.word	0x41004000

00000174 <atomic_enter_critical>:
	TIMER_0_init();

	PWM_0_init();

	PWM_1_init();
}
     174:	f3ef 8310 	mrs	r3, PRIMASK
     178:	6003      	str	r3, [r0, #0]
     17a:	b672      	cpsid	i
     17c:	f3bf 8f5f 	dmb	sy
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
	__disable_irq();
	__DMB();
}
     180:	4770      	bx	lr

00000182 <atomic_leave_critical>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
     182:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
     186:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
     188:	f383 8810 	msr	PRIMASK, r3
}
     18c:	4770      	bx	lr
	...

00000190 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     190:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     192:	4b04      	ldr	r3, [pc, #16]	; (1a4 <delay_ms+0x14>)
     194:	681c      	ldr	r4, [r3, #0]
     196:	f000 fbf1 	bl	97c <_get_cycles_for_ms>
     19a:	0001      	movs	r1, r0
     19c:	0020      	movs	r0, r4
     19e:	f000 fbf8 	bl	992 <_delay_cycles>
}
     1a2:	bd10      	pop	{r4, pc}
     1a4:	20000a64 	.word	0x20000a64

000001a8 <process_ext_irq>:
 * \brief Interrupt processing routine
 *
 * \param[in] pin The pin which triggered the interrupt
 */
static void process_ext_irq(const uint32_t pin)
{
     1a8:	b570      	push	{r4, r5, r6, lr}
	uint8_t lower = 0, middle, upper = EXT_IRQ_AMOUNT;
     1aa:	2501      	movs	r5, #1
     1ac:	2400      	movs	r4, #0

	while (upper >= lower) {
     1ae:	e007      	b.n	1c0 <process_ext_irq+0x18>
		if (middle >= EXT_IRQ_AMOUNT) {
			return;
		}

		if (ext_irqs[middle].pin == pin) {
			if (ext_irqs[middle].cb) {
     1b0:	4a0d      	ldr	r2, [pc, #52]	; (1e8 <process_ext_irq+0x40>)
     1b2:	58b3      	ldr	r3, [r6, r2]
     1b4:	2b00      	cmp	r3, #0
     1b6:	d000      	beq.n	1ba <process_ext_irq+0x12>
				ext_irqs[middle].cb();
     1b8:	4798      	blx	r3
			lower = middle + 1;
		} else {
			upper = middle - 1;
		}
	}
}
     1ba:	bd70      	pop	{r4, r5, r6, pc}
			upper = middle - 1;
     1bc:	3a01      	subs	r2, #1
     1be:	b2d5      	uxtb	r5, r2
	while (upper >= lower) {
     1c0:	42ac      	cmp	r4, r5
     1c2:	d8fa      	bhi.n	1ba <process_ext_irq+0x12>
		middle = (upper + lower) >> 1;
     1c4:	192b      	adds	r3, r5, r4
     1c6:	105b      	asrs	r3, r3, #1
     1c8:	b2da      	uxtb	r2, r3
		if (middle >= EXT_IRQ_AMOUNT) {
     1ca:	2a00      	cmp	r2, #0
     1cc:	d1f5      	bne.n	1ba <process_ext_irq+0x12>
     1ce:	21ff      	movs	r1, #255	; 0xff
     1d0:	400b      	ands	r3, r1
		if (ext_irqs[middle].pin == pin) {
     1d2:	00de      	lsls	r6, r3, #3
     1d4:	4904      	ldr	r1, [pc, #16]	; (1e8 <process_ext_irq+0x40>)
     1d6:	1989      	adds	r1, r1, r6
     1d8:	6849      	ldr	r1, [r1, #4]
     1da:	4281      	cmp	r1, r0
     1dc:	d0e8      	beq.n	1b0 <process_ext_irq+0x8>
		if (ext_irqs[middle].pin < pin) {
     1de:	d2ed      	bcs.n	1bc <process_ext_irq+0x14>
			lower = middle + 1;
     1e0:	3201      	adds	r2, #1
     1e2:	b2d4      	uxtb	r4, r2
     1e4:	e7ec      	b.n	1c0 <process_ext_irq+0x18>
     1e6:	46c0      	nop			; (mov r8, r8)
     1e8:	20000a68 	.word	0x20000a68

000001ec <ext_irq_init>:
{
     1ec:	b510      	push	{r4, lr}
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     1ee:	2300      	movs	r3, #0
     1f0:	2b00      	cmp	r3, #0
     1f2:	d003      	beq.n	1fc <ext_irq_init+0x10>
	return _ext_irq_init(process_ext_irq);
     1f4:	4807      	ldr	r0, [pc, #28]	; (214 <ext_irq_init+0x28>)
     1f6:	f000 fbe5 	bl	9c4 <_ext_irq_init>
}
     1fa:	bd10      	pop	{r4, pc}
		ext_irqs[i].pin = 0xFFFFFFFF;
     1fc:	4a06      	ldr	r2, [pc, #24]	; (218 <ext_irq_init+0x2c>)
     1fe:	00d9      	lsls	r1, r3, #3
     200:	1850      	adds	r0, r2, r1
     202:	2401      	movs	r4, #1
     204:	4264      	negs	r4, r4
     206:	6044      	str	r4, [r0, #4]
		ext_irqs[i].cb  = NULL;
     208:	2000      	movs	r0, #0
     20a:	5088      	str	r0, [r1, r2]
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     20c:	3301      	adds	r3, #1
     20e:	b29b      	uxth	r3, r3
     210:	e7ee      	b.n	1f0 <ext_irq_init+0x4>
     212:	46c0      	nop			; (mov r8, r8)
     214:	000001a9 	.word	0x000001a9
     218:	20000a68 	.word	0x20000a68

0000021c <ext_irq_register>:
{
     21c:	b5f0      	push	{r4, r5, r6, r7, lr}
     21e:	46c6      	mov	lr, r8
     220:	b500      	push	{lr}
     222:	b084      	sub	sp, #16
     224:	9001      	str	r0, [sp, #4]
	uint8_t i = 0, j = 0;
     226:	2300      	movs	r3, #0
	for (; i < EXT_IRQ_AMOUNT; i++) {
     228:	2b00      	cmp	r3, #0
     22a:	d010      	beq.n	24e <ext_irq_register+0x32>
	bool    found = false;
     22c:	2300      	movs	r3, #0
     22e:	4698      	mov	r8, r3
	if (NULL == cb) {
     230:	2900      	cmp	r1, #0
     232:	d01b      	beq.n	26c <ext_irq_register+0x50>
	if (!found) {
     234:	4643      	mov	r3, r8
     236:	2b00      	cmp	r3, #0
     238:	d146      	bne.n	2c8 <ext_irq_register+0xac>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     23a:	2b00      	cmp	r3, #0
     23c:	d124      	bne.n	288 <ext_irq_register+0x6c>
			if (NULL == ext_irqs[i].cb) {
     23e:	00da      	lsls	r2, r3, #3
     240:	4c2a      	ldr	r4, [pc, #168]	; (2ec <ext_irq_register+0xd0>)
     242:	5912      	ldr	r2, [r2, r4]
     244:	2a00      	cmp	r2, #0
     246:	d018      	beq.n	27a <ext_irq_register+0x5e>
		for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
     248:	3301      	adds	r3, #1
     24a:	b2db      	uxtb	r3, r3
     24c:	e7f5      	b.n	23a <ext_irq_register+0x1e>
		if (ext_irqs[i].pin == pin) {
     24e:	00dc      	lsls	r4, r3, #3
     250:	4a26      	ldr	r2, [pc, #152]	; (2ec <ext_irq_register+0xd0>)
     252:	1912      	adds	r2, r2, r4
     254:	6852      	ldr	r2, [r2, #4]
     256:	9801      	ldr	r0, [sp, #4]
     258:	4282      	cmp	r2, r0
     25a:	d002      	beq.n	262 <ext_irq_register+0x46>
	for (; i < EXT_IRQ_AMOUNT; i++) {
     25c:	3301      	adds	r3, #1
     25e:	b2db      	uxtb	r3, r3
     260:	e7e2      	b.n	228 <ext_irq_register+0xc>
			ext_irqs[i].cb = cb;
     262:	4b22      	ldr	r3, [pc, #136]	; (2ec <ext_irq_register+0xd0>)
     264:	50e1      	str	r1, [r4, r3]
			found          = true;
     266:	2301      	movs	r3, #1
     268:	4698      	mov	r8, r3
			break;
     26a:	e7e1      	b.n	230 <ext_irq_register+0x14>
		if (!found) {
     26c:	4643      	mov	r3, r8
     26e:	2b00      	cmp	r3, #0
     270:	d035      	beq.n	2de <ext_irq_register+0xc2>
		return _ext_irq_enable(pin, false);
     272:	9801      	ldr	r0, [sp, #4]
     274:	f000 fbee 	bl	a54 <_ext_irq_enable>
     278:	e02d      	b.n	2d6 <ext_irq_register+0xba>
				ext_irqs[i].cb  = cb;
     27a:	00dd      	lsls	r5, r3, #3
     27c:	5129      	str	r1, [r5, r4]
				ext_irqs[i].pin = pin;
     27e:	1965      	adds	r5, r4, r5
     280:	9a01      	ldr	r2, [sp, #4]
     282:	606a      	str	r2, [r5, #4]
				found           = true;
     284:	2201      	movs	r2, #1
     286:	4690      	mov	r8, r2
     288:	2200      	movs	r2, #0
     28a:	e001      	b.n	290 <ext_irq_register+0x74>
		for (; (j < EXT_IRQ_AMOUNT) && (i < EXT_IRQ_AMOUNT); j++) {
     28c:	3201      	adds	r2, #1
     28e:	b2d2      	uxtb	r2, r2
     290:	0019      	movs	r1, r3
     292:	4311      	orrs	r1, r2
     294:	d118      	bne.n	2c8 <ext_irq_register+0xac>
			if ((ext_irqs[i].pin < ext_irqs[j].pin) && (ext_irqs[j].pin != 0xFFFFFFFF)) {
     296:	4915      	ldr	r1, [pc, #84]	; (2ec <ext_irq_register+0xd0>)
     298:	00dc      	lsls	r4, r3, #3
     29a:	190c      	adds	r4, r1, r4
     29c:	6867      	ldr	r7, [r4, #4]
     29e:	00d4      	lsls	r4, r2, #3
     2a0:	1909      	adds	r1, r1, r4
     2a2:	6849      	ldr	r1, [r1, #4]
     2a4:	428f      	cmp	r7, r1
     2a6:	d2f1      	bcs.n	28c <ext_irq_register+0x70>
     2a8:	1c4c      	adds	r4, r1, #1
     2aa:	d0ef      	beq.n	28c <ext_irq_register+0x70>
				struct ext_irq tmp = ext_irqs[j];
     2ac:	a902      	add	r1, sp, #8
     2ae:	468c      	mov	ip, r1
     2b0:	4f0e      	ldr	r7, [pc, #56]	; (2ec <ext_irq_register+0xd0>)
     2b2:	00d1      	lsls	r1, r2, #3
     2b4:	1879      	adds	r1, r7, r1
     2b6:	4664      	mov	r4, ip
     2b8:	c941      	ldmia	r1!, {r0, r6}
     2ba:	c441      	stmia	r4!, {r0, r6}
				ext_irqs[i] = tmp;
     2bc:	00dd      	lsls	r5, r3, #3
     2be:	197d      	adds	r5, r7, r5
     2c0:	4661      	mov	r1, ip
     2c2:	c911      	ldmia	r1!, {r0, r4}
     2c4:	c511      	stmia	r5!, {r0, r4}
     2c6:	e7e1      	b.n	28c <ext_irq_register+0x70>
	if (!found) {
     2c8:	4643      	mov	r3, r8
     2ca:	2b00      	cmp	r3, #0
     2cc:	d00a      	beq.n	2e4 <ext_irq_register+0xc8>
	return _ext_irq_enable(pin, true);
     2ce:	2101      	movs	r1, #1
     2d0:	9801      	ldr	r0, [sp, #4]
     2d2:	f000 fbbf 	bl	a54 <_ext_irq_enable>
}
     2d6:	b004      	add	sp, #16
     2d8:	bc04      	pop	{r2}
     2da:	4690      	mov	r8, r2
     2dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
			return ERR_INVALID_ARG;
     2de:	200d      	movs	r0, #13
     2e0:	4240      	negs	r0, r0
     2e2:	e7f8      	b.n	2d6 <ext_irq_register+0xba>
		return ERR_INVALID_ARG;
     2e4:	200d      	movs	r0, #13
     2e6:	4240      	negs	r0, r0
     2e8:	e7f5      	b.n	2d6 <ext_irq_register+0xba>
     2ea:	46c0      	nop			; (mov r8, r8)
     2ec:	20000a68 	.word	0x20000a68

000002f0 <i2c_m_sync_write>:

/**
 * \brief Sync version of I2C I/O write
 */
static int32_t i2c_m_sync_write(struct io_descriptor *io, const uint8_t *buf, const uint16_t n)
{
     2f0:	b510      	push	{r4, lr}
     2f2:	b084      	sub	sp, #16
	struct i2c_m_sync_desc *i2c = CONTAINER_OF(io, struct i2c_m_sync_desc, io);
	struct _i2c_m_msg       msg;
	int32_t                 ret;

	msg.addr   = i2c->slave_addr;
     2f4:	3814      	subs	r0, #20
     2f6:	8b84      	ldrh	r4, [r0, #28]
     2f8:	ab01      	add	r3, sp, #4
     2fa:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     2fc:	0014      	movs	r4, r2
     2fe:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP;
     300:	4a06      	ldr	r2, [pc, #24]	; (31c <i2c_m_sync_write+0x2c>)
     302:	805a      	strh	r2, [r3, #2]
	msg.buffer = (uint8_t *)buf;
     304:	9103      	str	r1, [sp, #12]

	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     306:	0019      	movs	r1, r3
     308:	f000 feec 	bl	10e4 <_i2c_m_sync_transfer>

	if (ret) {
     30c:	2800      	cmp	r0, #0
     30e:	d102      	bne.n	316 <i2c_m_sync_write+0x26>
		return ret;
	}

	return n;
}
     310:	0020      	movs	r0, r4
     312:	b004      	add	sp, #16
     314:	bd10      	pop	{r4, pc}
		return ret;
     316:	0004      	movs	r4, r0
     318:	e7fa      	b.n	310 <i2c_m_sync_write+0x20>
     31a:	46c0      	nop			; (mov r8, r8)
     31c:	ffff8000 	.word	0xffff8000

00000320 <i2c_m_sync_read>:
{
     320:	b510      	push	{r4, lr}
     322:	b084      	sub	sp, #16
	msg.addr   = i2c->slave_addr;
     324:	3814      	subs	r0, #20
     326:	8b84      	ldrh	r4, [r0, #28]
     328:	ab01      	add	r3, sp, #4
     32a:	801c      	strh	r4, [r3, #0]
	msg.len    = n;
     32c:	0014      	movs	r4, r2
     32e:	9202      	str	r2, [sp, #8]
	msg.flags  = I2C_M_STOP | I2C_M_RD;
     330:	4a06      	ldr	r2, [pc, #24]	; (34c <i2c_m_sync_read+0x2c>)
     332:	805a      	strh	r2, [r3, #2]
	msg.buffer = buf;
     334:	9103      	str	r1, [sp, #12]
	ret = _i2c_m_sync_transfer(&i2c->device, &msg);
     336:	0019      	movs	r1, r3
     338:	f000 fed4 	bl	10e4 <_i2c_m_sync_transfer>
	if (ret) {
     33c:	2800      	cmp	r0, #0
     33e:	d102      	bne.n	346 <i2c_m_sync_read+0x26>
}
     340:	0020      	movs	r0, r4
     342:	b004      	add	sp, #16
     344:	bd10      	pop	{r4, pc}
		return ret;
     346:	0004      	movs	r4, r0
     348:	e7fa      	b.n	340 <i2c_m_sync_read+0x20>
     34a:	46c0      	nop			; (mov r8, r8)
     34c:	ffff8001 	.word	0xffff8001

00000350 <i2c_m_sync_init>:

/**
 * \brief Sync version of i2c initialize
 */
int32_t i2c_m_sync_init(struct i2c_m_sync_desc *i2c, void *hw)
{
     350:	b570      	push	{r4, r5, r6, lr}
     352:	0004      	movs	r4, r0
     354:	000d      	movs	r5, r1
	int32_t init_status;
	ASSERT(i2c);
     356:	1e43      	subs	r3, r0, #1
     358:	4198      	sbcs	r0, r3
     35a:	b2c0      	uxtb	r0, r0
     35c:	225e      	movs	r2, #94	; 0x5e
     35e:	4907      	ldr	r1, [pc, #28]	; (37c <i2c_m_sync_init+0x2c>)
     360:	f000 faca 	bl	8f8 <assert>

	init_status = _i2c_m_sync_init(&i2c->device, hw);
     364:	0029      	movs	r1, r5
     366:	0020      	movs	r0, r4
     368:	f000 fe30 	bl	fcc <_i2c_m_sync_init>
	if (init_status) {
     36c:	2800      	cmp	r0, #0
     36e:	d103      	bne.n	378 <i2c_m_sync_init+0x28>
		return init_status;
	}

	/* Init I/O */
	i2c->io.read  = i2c_m_sync_read;
     370:	4b03      	ldr	r3, [pc, #12]	; (380 <i2c_m_sync_init+0x30>)
     372:	61a3      	str	r3, [r4, #24]
	i2c->io.write = i2c_m_sync_write;
     374:	4b03      	ldr	r3, [pc, #12]	; (384 <i2c_m_sync_init+0x34>)
     376:	6163      	str	r3, [r4, #20]

	return ERR_NONE;
}
     378:	bd70      	pop	{r4, r5, r6, pc}
     37a:	46c0      	nop			; (mov r8, r8)
     37c:	0000d494 	.word	0x0000d494
     380:	00000321 	.word	0x00000321
     384:	000002f1 	.word	0x000002f1

00000388 <i2c_m_sync_enable>:

/**
 * \brief Sync version of i2c enable
 */
int32_t i2c_m_sync_enable(struct i2c_m_sync_desc *i2c)
{
     388:	b510      	push	{r4, lr}
	return _i2c_m_sync_enable(&i2c->device);
     38a:	f000 fe71 	bl	1070 <_i2c_m_sync_enable>
}
     38e:	bd10      	pop	{r4, pc}

00000390 <i2c_m_sync_get_io_descriptor>:
/**
 * \brief Retrieve I/O descriptor
 */
int32_t i2c_m_sync_get_io_descriptor(struct i2c_m_sync_desc *const i2c, struct io_descriptor **io)
{
	*io = &i2c->io;
     390:	3014      	adds	r0, #20
     392:	6008      	str	r0, [r1, #0]
	return ERR_NONE;
}
     394:	2000      	movs	r0, #0
     396:	4770      	bx	lr

00000398 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     398:	b570      	push	{r4, r5, r6, lr}
     39a:	0004      	movs	r4, r0
     39c:	000d      	movs	r5, r1
     39e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     3a0:	2800      	cmp	r0, #0
     3a2:	d00e      	beq.n	3c2 <io_write+0x2a>
     3a4:	2900      	cmp	r1, #0
     3a6:	d00a      	beq.n	3be <io_write+0x26>
     3a8:	2001      	movs	r0, #1
     3aa:	2234      	movs	r2, #52	; 0x34
     3ac:	4906      	ldr	r1, [pc, #24]	; (3c8 <io_write+0x30>)
     3ae:	f000 faa3 	bl	8f8 <assert>
	return io_descr->write(io_descr, buf, length);
     3b2:	6823      	ldr	r3, [r4, #0]
     3b4:	0032      	movs	r2, r6
     3b6:	0029      	movs	r1, r5
     3b8:	0020      	movs	r0, r4
     3ba:	4798      	blx	r3
}
     3bc:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     3be:	2000      	movs	r0, #0
     3c0:	e7f3      	b.n	3aa <io_write+0x12>
     3c2:	2000      	movs	r0, #0
     3c4:	e7f1      	b.n	3aa <io_write+0x12>
     3c6:	46c0      	nop			; (mov r8, r8)
     3c8:	0000d4b0 	.word	0x0000d4b0

000003cc <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     3cc:	b570      	push	{r4, r5, r6, lr}
     3ce:	0004      	movs	r4, r0
     3d0:	000d      	movs	r5, r1
     3d2:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     3d4:	2800      	cmp	r0, #0
     3d6:	d00e      	beq.n	3f6 <io_read+0x2a>
     3d8:	2900      	cmp	r1, #0
     3da:	d00a      	beq.n	3f2 <io_read+0x26>
     3dc:	2001      	movs	r0, #1
     3de:	223d      	movs	r2, #61	; 0x3d
     3e0:	4906      	ldr	r1, [pc, #24]	; (3fc <io_read+0x30>)
     3e2:	f000 fa89 	bl	8f8 <assert>
	return io_descr->read(io_descr, buf, length);
     3e6:	6863      	ldr	r3, [r4, #4]
     3e8:	0032      	movs	r2, r6
     3ea:	0029      	movs	r1, r5
     3ec:	0020      	movs	r0, r4
     3ee:	4798      	blx	r3
}
     3f0:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     3f2:	2000      	movs	r0, #0
     3f4:	e7f3      	b.n	3de <io_read+0x12>
     3f6:	2000      	movs	r0, #0
     3f8:	e7f1      	b.n	3de <io_read+0x12>
     3fa:	46c0      	nop			; (mov r8, r8)
     3fc:	0000d4b0 	.word	0x0000d4b0

00000400 <pwm_period_expired>:

/**
 * \internal Process interrupts caused by period experied
 */
static void pwm_period_expired(struct _pwm_device *device)
{
     400:	b510      	push	{r4, lr}
	struct pwm_descriptor *const descr = CONTAINER_OF(device, struct pwm_descriptor, device);

	if (descr->pwm_cb.period) {
     402:	6943      	ldr	r3, [r0, #20]
     404:	2b00      	cmp	r3, #0
     406:	d000      	beq.n	40a <pwm_period_expired+0xa>
		descr->pwm_cb.period(descr);
     408:	4798      	blx	r3
	}
}
     40a:	bd10      	pop	{r4, pc}

0000040c <pwm_detect_fault>:

/**
 * \internal Process interrupts caused by pwm fault
 */
static void pwm_detect_fault(struct _pwm_device *device)
{
     40c:	b510      	push	{r4, lr}
	struct pwm_descriptor *const descr = CONTAINER_OF(device, struct pwm_descriptor, device);

	if (descr->pwm_cb.error) {
     40e:	6983      	ldr	r3, [r0, #24]
     410:	2b00      	cmp	r3, #0
     412:	d000      	beq.n	416 <pwm_detect_fault+0xa>
		descr->pwm_cb.error(descr);
     414:	4798      	blx	r3
	}
}
     416:	bd10      	pop	{r4, pc}

00000418 <pwm_init>:
{
     418:	b570      	push	{r4, r5, r6, lr}
     41a:	0004      	movs	r4, r0
     41c:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     41e:	2800      	cmp	r0, #0
     420:	d012      	beq.n	448 <pwm_init+0x30>
     422:	2900      	cmp	r1, #0
     424:	d00e      	beq.n	444 <pwm_init+0x2c>
     426:	2001      	movs	r0, #1
     428:	2233      	movs	r2, #51	; 0x33
     42a:	4908      	ldr	r1, [pc, #32]	; (44c <pwm_init+0x34>)
     42c:	f000 fa64 	bl	8f8 <assert>
	_pwm_init(&descr->device, hw);
     430:	0029      	movs	r1, r5
     432:	0020      	movs	r0, r4
     434:	f001 f982 	bl	173c <_pwm_init>
	descr->device.callback.pwm_period_cb = pwm_period_expired;
     438:	4b05      	ldr	r3, [pc, #20]	; (450 <pwm_init+0x38>)
     43a:	6023      	str	r3, [r4, #0]
	descr->device.callback.pwm_error_cb  = pwm_detect_fault;
     43c:	4b05      	ldr	r3, [pc, #20]	; (454 <pwm_init+0x3c>)
     43e:	6063      	str	r3, [r4, #4]
}
     440:	2000      	movs	r0, #0
     442:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     444:	2000      	movs	r0, #0
     446:	e7ef      	b.n	428 <pwm_init+0x10>
     448:	2000      	movs	r0, #0
     44a:	e7ed      	b.n	428 <pwm_init+0x10>
     44c:	0000d4c4 	.word	0x0000d4c4
     450:	00000401 	.word	0x00000401
     454:	0000040d 	.word	0x0000040d

00000458 <pwm_enable>:
{
     458:	b510      	push	{r4, lr}
     45a:	0004      	movs	r4, r0
	ASSERT(descr);
     45c:	1e43      	subs	r3, r0, #1
     45e:	4198      	sbcs	r0, r3
     460:	b2c0      	uxtb	r0, r0
     462:	224a      	movs	r2, #74	; 0x4a
     464:	4907      	ldr	r1, [pc, #28]	; (484 <pwm_enable+0x2c>)
     466:	f000 fa47 	bl	8f8 <assert>
	if (_pwm_is_enabled(&descr->device)) {
     46a:	0020      	movs	r0, r4
     46c:	f001 fa0c 	bl	1888 <_pwm_is_enabled>
     470:	2800      	cmp	r0, #0
     472:	d104      	bne.n	47e <pwm_enable+0x26>
	_pwm_enable(&descr->device);
     474:	0020      	movs	r0, r4
     476:	f001 f9d5 	bl	1824 <_pwm_enable>
	return ERR_NONE;
     47a:	2000      	movs	r0, #0
}
     47c:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     47e:	2011      	movs	r0, #17
     480:	4240      	negs	r0, r0
     482:	e7fb      	b.n	47c <pwm_enable+0x24>
     484:	0000d4c4 	.word	0x0000d4c4

00000488 <pwm_set_parameters>:
{
     488:	b570      	push	{r4, r5, r6, lr}
     48a:	0004      	movs	r4, r0
     48c:	000d      	movs	r5, r1
     48e:	0016      	movs	r6, r2
	ASSERT(descr);
     490:	1e43      	subs	r3, r0, #1
     492:	4198      	sbcs	r0, r3
     494:	b2c0      	uxtb	r0, r0
     496:	227c      	movs	r2, #124	; 0x7c
     498:	4904      	ldr	r1, [pc, #16]	; (4ac <pwm_set_parameters+0x24>)
     49a:	f000 fa2d 	bl	8f8 <assert>
	_pwm_set_param(&descr->device, period, duty_cycle);
     49e:	0032      	movs	r2, r6
     4a0:	0029      	movs	r1, r5
     4a2:	0020      	movs	r0, r4
     4a4:	f001 f9c6 	bl	1834 <_pwm_set_param>
}
     4a8:	2000      	movs	r0, #0
     4aa:	bd70      	pop	{r4, r5, r6, pc}
     4ac:	0000d4c4 	.word	0x0000d4c4

000004b0 <spi_m_sync_init>:
	ASSERT(spi);
	spi->func = (struct _spi_m_sync_hpl_interface *)func;
}

int32_t spi_m_sync_init(struct spi_m_sync_descriptor *spi, void *const hw)
{
     4b0:	b570      	push	{r4, r5, r6, lr}
     4b2:	0004      	movs	r4, r0
     4b4:	000d      	movs	r5, r1
	int32_t rc = 0;
	ASSERT(spi && hw);
     4b6:	2800      	cmp	r0, #0
     4b8:	d017      	beq.n	4ea <spi_m_sync_init+0x3a>
     4ba:	2900      	cmp	r1, #0
     4bc:	d013      	beq.n	4e6 <spi_m_sync_init+0x36>
     4be:	2001      	movs	r0, #1
     4c0:	2240      	movs	r2, #64	; 0x40
     4c2:	490b      	ldr	r1, [pc, #44]	; (4f0 <spi_m_sync_init+0x40>)
     4c4:	f000 fa18 	bl	8f8 <assert>
	spi->dev.prvt = (void *)hw;
     4c8:	6065      	str	r5, [r4, #4]
	rc            = _spi_m_sync_init(&spi->dev, hw);
     4ca:	1d20      	adds	r0, r4, #4
     4cc:	0029      	movs	r1, r5
     4ce:	f000 ff15 	bl	12fc <_spi_m_sync_init>

	if (rc < 0) {
     4d2:	2800      	cmp	r0, #0
     4d4:	db06      	blt.n	4e4 <spi_m_sync_init+0x34>
		return rc;
	}

	spi->flags    = SPI_DEACTIVATE_NEXT;
     4d6:	4b07      	ldr	r3, [pc, #28]	; (4f4 <spi_m_sync_init+0x44>)
     4d8:	82a3      	strh	r3, [r4, #20]
	spi->io.read  = _spi_m_sync_io_read;
     4da:	4b07      	ldr	r3, [pc, #28]	; (4f8 <spi_m_sync_init+0x48>)
     4dc:	6123      	str	r3, [r4, #16]
	spi->io.write = _spi_m_sync_io_write;
     4de:	4b07      	ldr	r3, [pc, #28]	; (4fc <spi_m_sync_init+0x4c>)
     4e0:	60e3      	str	r3, [r4, #12]

	return ERR_NONE;
     4e2:	2000      	movs	r0, #0
}
     4e4:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && hw);
     4e6:	2000      	movs	r0, #0
     4e8:	e7ea      	b.n	4c0 <spi_m_sync_init+0x10>
     4ea:	2000      	movs	r0, #0
     4ec:	e7e8      	b.n	4c0 <spi_m_sync_init+0x10>
     4ee:	46c0      	nop			; (mov r8, r8)
     4f0:	0000d4dc 	.word	0x0000d4dc
     4f4:	ffff8000 	.word	0xffff8000
     4f8:	00000595 	.word	0x00000595
     4fc:	00000561 	.word	0x00000561

00000500 <spi_m_sync_enable>:
	ASSERT(spi);
	_spi_m_sync_deinit(&spi->dev);
}

void spi_m_sync_enable(struct spi_m_sync_descriptor *spi)
{
     500:	b510      	push	{r4, lr}
     502:	0004      	movs	r4, r0
	ASSERT(spi);
     504:	1e43      	subs	r3, r0, #1
     506:	4198      	sbcs	r0, r3
     508:	b2c0      	uxtb	r0, r0
     50a:	2257      	movs	r2, #87	; 0x57
     50c:	4903      	ldr	r1, [pc, #12]	; (51c <spi_m_sync_enable+0x1c>)
     50e:	f000 f9f3 	bl	8f8 <assert>
	_spi_m_sync_enable(&spi->dev);
     512:	1d20      	adds	r0, r4, #4
     514:	f000 ffcc 	bl	14b0 <_spi_m_sync_enable>
}
     518:	bd10      	pop	{r4, pc}
     51a:	46c0      	nop			; (mov r8, r8)
     51c:	0000d4dc 	.word	0x0000d4dc

00000520 <spi_m_sync_transfer>:

	return spi_m_sync_transfer(spi, &xfer);
}

int32_t spi_m_sync_transfer(struct spi_m_sync_descriptor *spi, const struct spi_xfer *p_xfer)
{
     520:	b530      	push	{r4, r5, lr}
     522:	b087      	sub	sp, #28
     524:	0004      	movs	r4, r0
     526:	000d      	movs	r5, r1
	struct spi_msg msg;

	ASSERT(spi && p_xfer);
     528:	2800      	cmp	r0, #0
     52a:	d015      	beq.n	558 <spi_m_sync_transfer+0x38>
     52c:	2900      	cmp	r1, #0
     52e:	d011      	beq.n	554 <spi_m_sync_transfer+0x34>
     530:	2001      	movs	r0, #1
     532:	22b3      	movs	r2, #179	; 0xb3
     534:	4909      	ldr	r1, [pc, #36]	; (55c <spi_m_sync_transfer+0x3c>)
     536:	f000 f9df 	bl	8f8 <assert>

	msg.txbuf = p_xfer->txbuf;
     53a:	682b      	ldr	r3, [r5, #0]
     53c:	9303      	str	r3, [sp, #12]
	msg.rxbuf = p_xfer->rxbuf;
     53e:	686b      	ldr	r3, [r5, #4]
     540:	9304      	str	r3, [sp, #16]
	msg.size  = p_xfer->size;
     542:	68ab      	ldr	r3, [r5, #8]
     544:	9301      	str	r3, [sp, #4]
     546:	9305      	str	r3, [sp, #20]
	return _spi_m_sync_trans(&spi->dev, &msg);
     548:	1d20      	adds	r0, r4, #4
     54a:	a903      	add	r1, sp, #12
     54c:	f000 ffc8 	bl	14e0 <_spi_m_sync_trans>
}
     550:	b007      	add	sp, #28
     552:	bd30      	pop	{r4, r5, pc}
	ASSERT(spi && p_xfer);
     554:	2000      	movs	r0, #0
     556:	e7ec      	b.n	532 <spi_m_sync_transfer+0x12>
     558:	2000      	movs	r0, #0
     55a:	e7ea      	b.n	532 <spi_m_sync_transfer+0x12>
     55c:	0000d4dc 	.word	0x0000d4dc

00000560 <_spi_m_sync_io_write>:
{
     560:	b570      	push	{r4, r5, r6, lr}
     562:	b084      	sub	sp, #16
     564:	0004      	movs	r4, r0
     566:	000e      	movs	r6, r1
     568:	0015      	movs	r5, r2
	ASSERT(io);
     56a:	1e43      	subs	r3, r0, #1
     56c:	4198      	sbcs	r0, r3
     56e:	b2c0      	uxtb	r0, r0
     570:	22a3      	movs	r2, #163	; 0xa3
     572:	4907      	ldr	r1, [pc, #28]	; (590 <_spi_m_sync_io_write+0x30>)
     574:	f000 f9c0 	bl	8f8 <assert>
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     578:	0020      	movs	r0, r4
     57a:	380c      	subs	r0, #12
	xfer.rxbuf = 0;
     57c:	2300      	movs	r3, #0
     57e:	9302      	str	r3, [sp, #8]
	xfer.txbuf = (uint8_t *)buf;
     580:	9601      	str	r6, [sp, #4]
	xfer.size  = length;
     582:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     584:	a901      	add	r1, sp, #4
     586:	f7ff ffcb 	bl	520 <spi_m_sync_transfer>
}
     58a:	b004      	add	sp, #16
     58c:	bd70      	pop	{r4, r5, r6, pc}
     58e:	46c0      	nop			; (mov r8, r8)
     590:	0000d4dc 	.word	0x0000d4dc

00000594 <_spi_m_sync_io_read>:
{
     594:	b570      	push	{r4, r5, r6, lr}
     596:	b084      	sub	sp, #16
     598:	0004      	movs	r4, r0
     59a:	000e      	movs	r6, r1
     59c:	0015      	movs	r5, r2
	ASSERT(io);
     59e:	1e43      	subs	r3, r0, #1
     5a0:	4198      	sbcs	r0, r3
     5a2:	b2c0      	uxtb	r0, r0
     5a4:	2287      	movs	r2, #135	; 0x87
     5a6:	4907      	ldr	r1, [pc, #28]	; (5c4 <_spi_m_sync_io_read+0x30>)
     5a8:	f000 f9a6 	bl	8f8 <assert>
	struct spi_m_sync_descriptor *spi = CONTAINER_OF(io, struct spi_m_sync_descriptor, io);
     5ac:	0020      	movs	r0, r4
     5ae:	380c      	subs	r0, #12
	xfer.rxbuf = buf;
     5b0:	9602      	str	r6, [sp, #8]
	xfer.txbuf = 0;
     5b2:	2300      	movs	r3, #0
     5b4:	9301      	str	r3, [sp, #4]
	xfer.size  = length;
     5b6:	9503      	str	r5, [sp, #12]
	return spi_m_sync_transfer(spi, &xfer);
     5b8:	a901      	add	r1, sp, #4
     5ba:	f7ff ffb1 	bl	520 <spi_m_sync_transfer>
}
     5be:	b004      	add	sp, #16
     5c0:	bd70      	pop	{r4, r5, r6, pc}
     5c2:	46c0      	nop			; (mov r8, r8)
     5c4:	0000d4dc 	.word	0x0000d4dc

000005c8 <spi_m_sync_get_io_descriptor>:

int32_t spi_m_sync_get_io_descriptor(struct spi_m_sync_descriptor *const spi, struct io_descriptor **io)
{
     5c8:	b570      	push	{r4, r5, r6, lr}
     5ca:	0004      	movs	r4, r0
     5cc:	000d      	movs	r5, r1
	ASSERT(spi && io);
     5ce:	2800      	cmp	r0, #0
     5d0:	d00c      	beq.n	5ec <spi_m_sync_get_io_descriptor+0x24>
     5d2:	2900      	cmp	r1, #0
     5d4:	d008      	beq.n	5e8 <spi_m_sync_get_io_descriptor+0x20>
     5d6:	2001      	movs	r0, #1
     5d8:	22bd      	movs	r2, #189	; 0xbd
     5da:	4905      	ldr	r1, [pc, #20]	; (5f0 <spi_m_sync_get_io_descriptor+0x28>)
     5dc:	f000 f98c 	bl	8f8 <assert>
	*io = &spi->io;
     5e0:	340c      	adds	r4, #12
     5e2:	602c      	str	r4, [r5, #0]
	return 0;
}
     5e4:	2000      	movs	r0, #0
     5e6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(spi && io);
     5e8:	2000      	movs	r0, #0
     5ea:	e7f5      	b.n	5d8 <spi_m_sync_get_io_descriptor+0x10>
     5ec:	2000      	movs	r0, #0
     5ee:	e7f3      	b.n	5d8 <spi_m_sync_get_io_descriptor+0x10>
     5f0:	0000d4dc 	.word	0x0000d4dc

000005f4 <timer_add_timer_task>:
 * \param[in] head The pointer to the head of timer task list
 * \param[in] task The pointer to task to add
 * \param[in] time Current timer time
 */
static void timer_add_timer_task(struct list_descriptor *list, struct timer_task *const new_task, const uint32_t time)
{
     5f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 * \return A pointer to the head of the given list or NULL if the list is
 * empty
 */
static inline void *list_get_head(const struct list_descriptor *const list)
{
	return (void *)list->head;
     5f6:	6806      	ldr	r6, [r0, #0]
	struct timer_task *it, *prev = NULL, *head = (struct timer_task *)list_get_head(list);

	if (!head) {
     5f8:	2e00      	cmp	r6, #0
     5fa:	d002      	beq.n	602 <timer_add_timer_task+0xe>
     5fc:	0033      	movs	r3, r6
     5fe:	2500      	movs	r5, #0
     600:	e00c      	b.n	61c <timer_add_timer_task+0x28>
		list_insert_as_head(list, new_task);
     602:	f000 f989 	bl	918 <list_insert_as_head>
		return;
     606:	e018      	b.n	63a <timer_add_timer_task+0x46>
		uint32_t time_left;

		if (it->time_label <= time) {
			time_left = it->interval - (time - it->time_label);
		} else {
			time_left = it->interval - (0xFFFFFFFF - it->time_label) - time;
     608:	689f      	ldr	r7, [r3, #8]
     60a:	46bc      	mov	ip, r7
     60c:	4464      	add	r4, ip
     60e:	1aa4      	subs	r4, r4, r2
     610:	3401      	adds	r4, #1
		}
		if (time_left >= new_task->interval)
     612:	688f      	ldr	r7, [r1, #8]
     614:	42bc      	cmp	r4, r7
     616:	d20b      	bcs.n	630 <timer_add_timer_task+0x3c>
			break;
		prev = it;
     618:	001d      	movs	r5, r3
	for (it = head; it; it = (struct timer_task *)list_get_next_element(it)) {
     61a:	681b      	ldr	r3, [r3, #0]
     61c:	2b00      	cmp	r3, #0
     61e:	d007      	beq.n	630 <timer_add_timer_task+0x3c>
		if (it->time_label <= time) {
     620:	685c      	ldr	r4, [r3, #4]
     622:	4294      	cmp	r4, r2
     624:	d8f0      	bhi.n	608 <timer_add_timer_task+0x14>
			time_left = it->interval - (time - it->time_label);
     626:	1aa4      	subs	r4, r4, r2
     628:	689f      	ldr	r7, [r3, #8]
     62a:	46bc      	mov	ip, r7
     62c:	4464      	add	r4, ip
     62e:	e7f0      	b.n	612 <timer_add_timer_task+0x1e>
	}

	if (it == head) {
     630:	42b3      	cmp	r3, r6
     632:	d003      	beq.n	63c <timer_add_timer_task+0x48>
		list_insert_as_head(list, new_task);
	} else {
		list_insert_after(prev, new_task);
     634:	0028      	movs	r0, r5
     636:	f000 f981 	bl	93c <list_insert_after>
	}
}
     63a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		list_insert_as_head(list, new_task);
     63c:	f000 f96c 	bl	918 <list_insert_as_head>
     640:	e7fb      	b.n	63a <timer_add_timer_task+0x46>

00000642 <timer_process_counted>:

/**
 * \internal Process interrupts
 */
static void timer_process_counted(struct _timer_device *device)
{
     642:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     644:	0005      	movs	r5, r0
     646:	6944      	ldr	r4, [r0, #20]
	struct timer_descriptor *timer = CONTAINER_OF(device, struct timer_descriptor, device);
	struct timer_task *      it    = (struct timer_task *)list_get_head(&timer->tasks);
	uint32_t                 time  = ++timer->time;
     648:	6903      	ldr	r3, [r0, #16]
     64a:	1c5e      	adds	r6, r3, #1
     64c:	6106      	str	r6, [r0, #16]

	if ((timer->flags & TIMER_FLAG_QUEUE_IS_TAKEN) || (timer->flags & TIMER_FLAG_INTERRUPT_TRIGERRED)) {
     64e:	7e03      	ldrb	r3, [r0, #24]
     650:	07db      	lsls	r3, r3, #31
     652:	d402      	bmi.n	65a <timer_process_counted+0x18>
     654:	7e03      	ldrb	r3, [r0, #24]
     656:	079b      	lsls	r3, r3, #30
     658:	d50a      	bpl.n	670 <timer_process_counted+0x2e>
		timer->flags |= TIMER_FLAG_INTERRUPT_TRIGERRED;
     65a:	7e2b      	ldrb	r3, [r5, #24]
     65c:	2202      	movs	r2, #2
     65e:	4313      	orrs	r3, r2
     660:	b2db      	uxtb	r3, r3
     662:	762b      	strb	r3, [r5, #24]
		}
		it = (struct timer_task *)list_get_head(&timer->tasks);

		tmp->cb(tmp);
	}
}
     664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     666:	696f      	ldr	r7, [r5, #20]
		tmp->cb(tmp);
     668:	68e3      	ldr	r3, [r4, #12]
     66a:	0020      	movs	r0, r4
     66c:	4798      	blx	r3
		it = (struct timer_task *)list_get_head(&timer->tasks);
     66e:	003c      	movs	r4, r7
	while (it && ((time - it->time_label) >= it->interval)) {
     670:	2c00      	cmp	r4, #0
     672:	d0f7      	beq.n	664 <timer_process_counted+0x22>
     674:	6863      	ldr	r3, [r4, #4]
     676:	1af3      	subs	r3, r6, r3
     678:	68a2      	ldr	r2, [r4, #8]
     67a:	4293      	cmp	r3, r2
     67c:	d3f2      	bcc.n	664 <timer_process_counted+0x22>
		list_remove_head(&timer->tasks);
     67e:	002f      	movs	r7, r5
     680:	3714      	adds	r7, #20
     682:	0038      	movs	r0, r7
     684:	f000 f95e 	bl	944 <list_remove_head>
		if (TIMER_TASK_REPEAT == tmp->mode) {
     688:	7c23      	ldrb	r3, [r4, #16]
     68a:	2b01      	cmp	r3, #1
     68c:	d1eb      	bne.n	666 <timer_process_counted+0x24>
			tmp->time_label = time;
     68e:	6066      	str	r6, [r4, #4]
			timer_add_timer_task(&timer->tasks, tmp, time);
     690:	0032      	movs	r2, r6
     692:	0021      	movs	r1, r4
     694:	0038      	movs	r0, r7
     696:	f7ff ffad 	bl	5f4 <timer_add_timer_task>
     69a:	e7e4      	b.n	666 <timer_process_counted+0x24>

0000069c <timer_init>:
{
     69c:	b570      	push	{r4, r5, r6, lr}
     69e:	0004      	movs	r4, r0
     6a0:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     6a2:	2800      	cmp	r0, #0
     6a4:	d012      	beq.n	6cc <timer_init+0x30>
     6a6:	2900      	cmp	r1, #0
     6a8:	d00e      	beq.n	6c8 <timer_init+0x2c>
     6aa:	2001      	movs	r0, #1
     6ac:	223b      	movs	r2, #59	; 0x3b
     6ae:	4908      	ldr	r1, [pc, #32]	; (6d0 <timer_init+0x34>)
     6b0:	f000 f922 	bl	8f8 <assert>
	_timer_init(&descr->device, hw);
     6b4:	0029      	movs	r1, r5
     6b6:	0020      	movs	r0, r4
     6b8:	f000 fa96 	bl	be8 <_timer_init>
	descr->time                           = 0;
     6bc:	2300      	movs	r3, #0
     6be:	6123      	str	r3, [r4, #16]
	descr->device.timer_cb.period_expired = timer_process_counted;
     6c0:	4b04      	ldr	r3, [pc, #16]	; (6d4 <timer_init+0x38>)
     6c2:	6023      	str	r3, [r4, #0]
}
     6c4:	2000      	movs	r0, #0
     6c6:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     6c8:	2000      	movs	r0, #0
     6ca:	e7ef      	b.n	6ac <timer_init+0x10>
     6cc:	2000      	movs	r0, #0
     6ce:	e7ed      	b.n	6ac <timer_init+0x10>
     6d0:	0000d4f8 	.word	0x0000d4f8
     6d4:	00000643 	.word	0x00000643

000006d8 <timer_start>:
{
     6d8:	b510      	push	{r4, lr}
     6da:	0004      	movs	r4, r0
	ASSERT(descr);
     6dc:	1e43      	subs	r3, r0, #1
     6de:	4198      	sbcs	r0, r3
     6e0:	b2c0      	uxtb	r0, r0
     6e2:	2253      	movs	r2, #83	; 0x53
     6e4:	4907      	ldr	r1, [pc, #28]	; (704 <timer_start+0x2c>)
     6e6:	f000 f907 	bl	8f8 <assert>
	if (_timer_is_started(&descr->device)) {
     6ea:	0020      	movs	r0, r4
     6ec:	f000 fad2 	bl	c94 <_timer_is_started>
     6f0:	2800      	cmp	r0, #0
     6f2:	d104      	bne.n	6fe <timer_start+0x26>
	_timer_start(&descr->device);
     6f4:	0020      	movs	r0, r4
     6f6:	f000 faa3 	bl	c40 <_timer_start>
	return ERR_NONE;
     6fa:	2000      	movs	r0, #0
}
     6fc:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
     6fe:	2011      	movs	r0, #17
     700:	4240      	negs	r0, r0
     702:	e7fb      	b.n	6fc <timer_start+0x24>
     704:	0000d4f8 	.word	0x0000d4f8

00000708 <timer_add_task>:
{
     708:	b570      	push	{r4, r5, r6, lr}
     70a:	b082      	sub	sp, #8
     70c:	0004      	movs	r4, r0
     70e:	000d      	movs	r5, r1
	ASSERT(descr && task);
     710:	2800      	cmp	r0, #0
     712:	d026      	beq.n	762 <timer_add_task+0x5a>
     714:	2900      	cmp	r1, #0
     716:	d022      	beq.n	75e <timer_add_task+0x56>
     718:	2001      	movs	r0, #1
     71a:	227a      	movs	r2, #122	; 0x7a
     71c:	491f      	ldr	r1, [pc, #124]	; (79c <timer_add_task+0x94>)
     71e:	f000 f8eb 	bl	8f8 <assert>
	descr->flags |= TIMER_FLAG_QUEUE_IS_TAKEN;
     722:	7e23      	ldrb	r3, [r4, #24]
     724:	2201      	movs	r2, #1
     726:	4313      	orrs	r3, r2
     728:	b2db      	uxtb	r3, r3
     72a:	7623      	strb	r3, [r4, #24]
	if (is_list_element(&descr->tasks, task)) {
     72c:	0026      	movs	r6, r4
     72e:	3614      	adds	r6, #20
     730:	0029      	movs	r1, r5
     732:	0030      	movs	r0, r6
     734:	f000 f8e4 	bl	900 <is_list_element>
     738:	2800      	cmp	r0, #0
     73a:	d114      	bne.n	766 <timer_add_task+0x5e>
	task->time_label = descr->time;
     73c:	6923      	ldr	r3, [r4, #16]
     73e:	606b      	str	r3, [r5, #4]
	timer_add_timer_task(&descr->tasks, task, descr->time);
     740:	6922      	ldr	r2, [r4, #16]
     742:	0029      	movs	r1, r5
     744:	0030      	movs	r0, r6
     746:	f7ff ff55 	bl	5f4 <timer_add_timer_task>
	descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     74a:	7e23      	ldrb	r3, [r4, #24]
     74c:	2201      	movs	r2, #1
     74e:	4393      	bics	r3, r2
     750:	7623      	strb	r3, [r4, #24]
	if (descr->flags & TIMER_FLAG_INTERRUPT_TRIGERRED) {
     752:	7e23      	ldrb	r3, [r4, #24]
     754:	079b      	lsls	r3, r3, #30
     756:	d412      	bmi.n	77e <timer_add_task+0x76>
	return ERR_NONE;
     758:	2000      	movs	r0, #0
}
     75a:	b002      	add	sp, #8
     75c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && task);
     75e:	2000      	movs	r0, #0
     760:	e7db      	b.n	71a <timer_add_task+0x12>
     762:	2000      	movs	r0, #0
     764:	e7d9      	b.n	71a <timer_add_task+0x12>
		descr->flags &= ~TIMER_FLAG_QUEUE_IS_TAKEN;
     766:	7e23      	ldrb	r3, [r4, #24]
     768:	2201      	movs	r2, #1
     76a:	4393      	bics	r3, r2
     76c:	7623      	strb	r3, [r4, #24]
		ASSERT(false);
     76e:	327e      	adds	r2, #126	; 0x7e
     770:	490a      	ldr	r1, [pc, #40]	; (79c <timer_add_task+0x94>)
     772:	2000      	movs	r0, #0
     774:	f000 f8c0 	bl	8f8 <assert>
		return ERR_ALREADY_INITIALIZED;
     778:	2012      	movs	r0, #18
     77a:	4240      	negs	r0, r0
     77c:	e7ed      	b.n	75a <timer_add_task+0x52>
		CRITICAL_SECTION_ENTER()
     77e:	a801      	add	r0, sp, #4
     780:	f7ff fcf8 	bl	174 <atomic_enter_critical>
		descr->flags &= ~TIMER_FLAG_INTERRUPT_TRIGERRED;
     784:	7e23      	ldrb	r3, [r4, #24]
     786:	2202      	movs	r2, #2
     788:	4393      	bics	r3, r2
     78a:	7623      	strb	r3, [r4, #24]
		_timer_set_irq(&descr->device);
     78c:	0020      	movs	r0, r4
     78e:	f000 fa8a 	bl	ca6 <_timer_set_irq>
		CRITICAL_SECTION_LEAVE()
     792:	a801      	add	r0, sp, #4
     794:	f7ff fcf5 	bl	182 <atomic_leave_critical>
	return ERR_NONE;
     798:	2000      	movs	r0, #0
     79a:	e7de      	b.n	75a <timer_add_task+0x52>
     79c:	0000d4f8 	.word	0x0000d4f8

000007a0 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     7a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     7a2:	0005      	movs	r5, r0
     7a4:	000e      	movs	r6, r1
     7a6:	0017      	movs	r7, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     7a8:	2800      	cmp	r0, #0
     7aa:	d023      	beq.n	7f4 <usart_sync_write+0x54>
     7ac:	2900      	cmp	r1, #0
     7ae:	d023      	beq.n	7f8 <usart_sync_write+0x58>
     7b0:	2a00      	cmp	r2, #0
     7b2:	d123      	bne.n	7fc <usart_sync_write+0x5c>
     7b4:	2000      	movs	r0, #0
     7b6:	22f1      	movs	r2, #241	; 0xf1
     7b8:	4911      	ldr	r1, [pc, #68]	; (800 <usart_sync_write+0x60>)
     7ba:	f000 f89d 	bl	8f8 <assert>
	while (!_usart_sync_is_ready_to_send(&descr->device))
     7be:	002c      	movs	r4, r5
     7c0:	3408      	adds	r4, #8
     7c2:	0020      	movs	r0, r4
     7c4:	f000 fbf1 	bl	faa <_usart_sync_is_ready_to_send>
     7c8:	2800      	cmp	r0, #0
     7ca:	d0f8      	beq.n	7be <usart_sync_write+0x1e>
     7cc:	2500      	movs	r5, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     7ce:	5d71      	ldrb	r1, [r6, r5]
     7d0:	0020      	movs	r0, r4
     7d2:	f000 fbe2 	bl	f9a <_usart_sync_write_byte>
		while (!_usart_sync_is_ready_to_send(&descr->device))
     7d6:	0020      	movs	r0, r4
     7d8:	f000 fbe7 	bl	faa <_usart_sync_is_ready_to_send>
     7dc:	2800      	cmp	r0, #0
     7de:	d0fa      	beq.n	7d6 <usart_sync_write+0x36>
			;
	} while (++offset < length);
     7e0:	3501      	adds	r5, #1
     7e2:	42bd      	cmp	r5, r7
     7e4:	d3f3      	bcc.n	7ce <usart_sync_write+0x2e>
	while (!_usart_sync_is_transmit_done(&descr->device))
     7e6:	0020      	movs	r0, r4
     7e8:	f000 fbe4 	bl	fb4 <_usart_sync_is_transmit_done>
     7ec:	2800      	cmp	r0, #0
     7ee:	d0fa      	beq.n	7e6 <usart_sync_write+0x46>
		;
	return (int32_t)offset;
}
     7f0:	0028      	movs	r0, r5
     7f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     7f4:	2000      	movs	r0, #0
     7f6:	e7de      	b.n	7b6 <usart_sync_write+0x16>
     7f8:	2000      	movs	r0, #0
     7fa:	e7dc      	b.n	7b6 <usart_sync_write+0x16>
     7fc:	2001      	movs	r0, #1
     7fe:	e7da      	b.n	7b6 <usart_sync_write+0x16>
     800:	0000d510 	.word	0x0000d510

00000804 <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     806:	46ce      	mov	lr, r9
     808:	4647      	mov	r7, r8
     80a:	b580      	push	{r7, lr}
     80c:	1e05      	subs	r5, r0, #0
     80e:	4688      	mov	r8, r1
     810:	4691      	mov	r9, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     812:	d01f      	beq.n	854 <usart_sync_read+0x50>
     814:	2900      	cmp	r1, #0
     816:	d01f      	beq.n	858 <usart_sync_read+0x54>
     818:	2a00      	cmp	r2, #0
     81a:	d11f      	bne.n	85c <usart_sync_read+0x58>
     81c:	2000      	movs	r0, #0
     81e:	2286      	movs	r2, #134	; 0x86
     820:	0052      	lsls	r2, r2, #1
     822:	490f      	ldr	r1, [pc, #60]	; (860 <usart_sync_read+0x5c>)
     824:	f000 f868 	bl	8f8 <assert>
	uint32_t                      offset = 0;
     828:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     82a:	002c      	movs	r4, r5
     82c:	3408      	adds	r4, #8
     82e:	0020      	movs	r0, r4
     830:	f000 fbc6 	bl	fc0 <_usart_sync_is_byte_received>
     834:	2800      	cmp	r0, #0
     836:	d0f8      	beq.n	82a <usart_sync_read+0x26>
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     838:	4643      	mov	r3, r8
     83a:	199f      	adds	r7, r3, r6
     83c:	0020      	movs	r0, r4
     83e:	f000 fbb0 	bl	fa2 <_usart_sync_read_byte>
     842:	7038      	strb	r0, [r7, #0]
	} while (++offset < length);
     844:	3601      	adds	r6, #1
     846:	454e      	cmp	r6, r9
     848:	d3ef      	bcc.n	82a <usart_sync_read+0x26>

	return (int32_t)offset;
}
     84a:	0030      	movs	r0, r6
     84c:	bc0c      	pop	{r2, r3}
     84e:	4690      	mov	r8, r2
     850:	4699      	mov	r9, r3
     852:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     854:	2000      	movs	r0, #0
     856:	e7e2      	b.n	81e <usart_sync_read+0x1a>
     858:	2000      	movs	r0, #0
     85a:	e7e0      	b.n	81e <usart_sync_read+0x1a>
     85c:	2001      	movs	r0, #1
     85e:	e7de      	b.n	81e <usart_sync_read+0x1a>
     860:	0000d510 	.word	0x0000d510

00000864 <usart_sync_init>:
{
     864:	b570      	push	{r4, r5, r6, lr}
     866:	0004      	movs	r4, r0
     868:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     86a:	2800      	cmp	r0, #0
     86c:	d014      	beq.n	898 <usart_sync_init+0x34>
     86e:	2900      	cmp	r1, #0
     870:	d010      	beq.n	894 <usart_sync_init+0x30>
     872:	2001      	movs	r0, #1
     874:	2234      	movs	r2, #52	; 0x34
     876:	4909      	ldr	r1, [pc, #36]	; (89c <usart_sync_init+0x38>)
     878:	f000 f83e 	bl	8f8 <assert>
	init_status = _usart_sync_init(&descr->device, hw);
     87c:	0020      	movs	r0, r4
     87e:	3008      	adds	r0, #8
     880:	0029      	movs	r1, r5
     882:	f000 fb6f 	bl	f64 <_usart_sync_init>
	if (init_status) {
     886:	2800      	cmp	r0, #0
     888:	d103      	bne.n	892 <usart_sync_init+0x2e>
	descr->io.read  = usart_sync_read;
     88a:	4b05      	ldr	r3, [pc, #20]	; (8a0 <usart_sync_init+0x3c>)
     88c:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_sync_write;
     88e:	4b05      	ldr	r3, [pc, #20]	; (8a4 <usart_sync_init+0x40>)
     890:	6023      	str	r3, [r4, #0]
}
     892:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     894:	2000      	movs	r0, #0
     896:	e7ed      	b.n	874 <usart_sync_init+0x10>
     898:	2000      	movs	r0, #0
     89a:	e7eb      	b.n	874 <usart_sync_init+0x10>
     89c:	0000d510 	.word	0x0000d510
     8a0:	00000805 	.word	0x00000805
     8a4:	000007a1 	.word	0x000007a1

000008a8 <usart_sync_enable>:
{
     8a8:	b510      	push	{r4, lr}
     8aa:	0004      	movs	r4, r0
	ASSERT(descr);
     8ac:	1e43      	subs	r3, r0, #1
     8ae:	4198      	sbcs	r0, r3
     8b0:	b2c0      	uxtb	r0, r0
     8b2:	2253      	movs	r2, #83	; 0x53
     8b4:	4904      	ldr	r1, [pc, #16]	; (8c8 <usart_sync_enable+0x20>)
     8b6:	f000 f81f 	bl	8f8 <assert>
	_usart_sync_enable(&descr->device);
     8ba:	0020      	movs	r0, r4
     8bc:	3008      	adds	r0, #8
     8be:	f000 fb63 	bl	f88 <_usart_sync_enable>
}
     8c2:	2000      	movs	r0, #0
     8c4:	bd10      	pop	{r4, pc}
     8c6:	46c0      	nop			; (mov r8, r8)
     8c8:	0000d510 	.word	0x0000d510

000008cc <usart_sync_get_io_descriptor>:
{
     8cc:	b570      	push	{r4, r5, r6, lr}
     8ce:	0004      	movs	r4, r0
     8d0:	000d      	movs	r5, r1
	ASSERT(descr && io);
     8d2:	2800      	cmp	r0, #0
     8d4:	d00b      	beq.n	8ee <usart_sync_get_io_descriptor+0x22>
     8d6:	2900      	cmp	r1, #0
     8d8:	d007      	beq.n	8ea <usart_sync_get_io_descriptor+0x1e>
     8da:	2001      	movs	r0, #1
     8dc:	2269      	movs	r2, #105	; 0x69
     8de:	4905      	ldr	r1, [pc, #20]	; (8f4 <usart_sync_get_io_descriptor+0x28>)
     8e0:	f000 f80a 	bl	8f8 <assert>
	*io = &descr->io;
     8e4:	602c      	str	r4, [r5, #0]
}
     8e6:	2000      	movs	r0, #0
     8e8:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && io);
     8ea:	2000      	movs	r0, #0
     8ec:	e7f6      	b.n	8dc <usart_sync_get_io_descriptor+0x10>
     8ee:	2000      	movs	r0, #0
     8f0:	e7f4      	b.n	8dc <usart_sync_get_io_descriptor+0x10>
     8f2:	46c0      	nop			; (mov r8, r8)
     8f4:	0000d510 	.word	0x0000d510

000008f8 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     8f8:	2800      	cmp	r0, #0
     8fa:	d100      	bne.n	8fe <assert+0x6>
		__asm("BKPT #0");
     8fc:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     8fe:	4770      	bx	lr

00000900 <is_list_element>:
 * \brief Check whether element belongs to list
 */
bool is_list_element(const struct list_descriptor *const list, const void *const element)
{
	struct list_element *it;
	for (it = list->head; it; it = it->next) {
     900:	6803      	ldr	r3, [r0, #0]
     902:	2b00      	cmp	r3, #0
     904:	d003      	beq.n	90e <is_list_element+0xe>
		if (it == element) {
     906:	428b      	cmp	r3, r1
     908:	d003      	beq.n	912 <is_list_element+0x12>
	for (it = list->head; it; it = it->next) {
     90a:	681b      	ldr	r3, [r3, #0]
     90c:	e7f9      	b.n	902 <is_list_element+0x2>
			return true;
		}
	}

	return false;
     90e:	2000      	movs	r0, #0
}
     910:	4770      	bx	lr
			return true;
     912:	2001      	movs	r0, #1
     914:	e7fc      	b.n	910 <is_list_element+0x10>
	...

00000918 <list_insert_as_head>:

/**
 * \brief Insert an element as list head
 */
void list_insert_as_head(struct list_descriptor *const list, void *const element)
{
     918:	b570      	push	{r4, r5, r6, lr}
     91a:	0004      	movs	r4, r0
     91c:	000d      	movs	r5, r1
	ASSERT(!is_list_element(list, element));
     91e:	f7ff ffef 	bl	900 <is_list_element>
     922:	2301      	movs	r3, #1
     924:	4058      	eors	r0, r3
     926:	b2c0      	uxtb	r0, r0
     928:	2239      	movs	r2, #57	; 0x39
     92a:	4903      	ldr	r1, [pc, #12]	; (938 <list_insert_as_head+0x20>)
     92c:	f7ff ffe4 	bl	8f8 <assert>

	((struct list_element *)element)->next = list->head;
     930:	6823      	ldr	r3, [r4, #0]
     932:	602b      	str	r3, [r5, #0]
	list->head                             = (struct list_element *)element;
     934:	6025      	str	r5, [r4, #0]
}
     936:	bd70      	pop	{r4, r5, r6, pc}
     938:	0000d52c 	.word	0x0000d52c

0000093c <list_insert_after>:
/**
 * \brief Insert an element after the given list element
 */
void list_insert_after(void *const after, void *const element)
{
	((struct list_element *)element)->next = ((struct list_element *)after)->next;
     93c:	6803      	ldr	r3, [r0, #0]
     93e:	600b      	str	r3, [r1, #0]
	((struct list_element *)after)->next   = (struct list_element *)element;
     940:	6001      	str	r1, [r0, #0]
}
     942:	4770      	bx	lr

00000944 <list_remove_head>:
/**
 * \brief Removes list head
 */
void *list_remove_head(struct list_descriptor *const list)
{
	if (list->head) {
     944:	6803      	ldr	r3, [r0, #0]
     946:	2b00      	cmp	r3, #0
     948:	d003      	beq.n	952 <list_remove_head+0xe>
		struct list_element *tmp = list->head;

		list->head = list->head->next;
     94a:	681a      	ldr	r2, [r3, #0]
     94c:	6002      	str	r2, [r0, #0]
		return (void *)tmp;
     94e:	0018      	movs	r0, r3
	}

	return NULL;
}
     950:	4770      	bx	lr
	return NULL;
     952:	2000      	movs	r0, #0
     954:	e7fc      	b.n	950 <list_remove_head+0xc>
	...

00000958 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     958:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     95a:	4a06      	ldr	r2, [pc, #24]	; (974 <_sbrk+0x1c>)
     95c:	6812      	ldr	r2, [r2, #0]
     95e:	2a00      	cmp	r2, #0
     960:	d004      	beq.n	96c <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     962:	4a04      	ldr	r2, [pc, #16]	; (974 <_sbrk+0x1c>)
     964:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     966:	18c3      	adds	r3, r0, r3
     968:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     96a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     96c:	4902      	ldr	r1, [pc, #8]	; (978 <_sbrk+0x20>)
     96e:	4a01      	ldr	r2, [pc, #4]	; (974 <_sbrk+0x1c>)
     970:	6011      	str	r1, [r2, #0]
     972:	e7f6      	b.n	962 <_sbrk+0xa>
     974:	20000a70 	.word	0x20000a70
     978:	20003460 	.word	0x20003460

0000097c <_get_cycles_for_ms>:

/**
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
     97c:	b510      	push	{r4, lr}
		return (ms * (freq / 100000) + 2) / 3 * 100;
     97e:	0103      	lsls	r3, r0, #4
     980:	1a1b      	subs	r3, r3, r0
     982:	0158      	lsls	r0, r3, #5
     984:	3002      	adds	r0, #2
     986:	2103      	movs	r1, #3
     988:	f002 feae 	bl	36e8 <__udivsi3>
     98c:	2364      	movs	r3, #100	; 0x64
     98e:	4358      	muls	r0, r3
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     990:	bd10      	pop	{r4, pc}

00000992 <_delay_cycles>:
{
#ifndef _UNIT_TEST_
	(void)hw;
	(void)cycles;
#if defined __GNUC__
	__asm(".syntax unified\n"
     992:	3901      	subs	r1, #1
     994:	d8fd      	bhi.n	992 <_delay_cycles>
	__asm("__delay:\n"
	      "subs r1, r1, #1\n"
	      "bhi __delay\n");
#endif
#endif
}
     996:	4770      	bx	lr

00000998 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     998:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     99a:	4a09      	ldr	r2, [pc, #36]	; (9c0 <_init_chip+0x28>)
     99c:	6853      	ldr	r3, [r2, #4]
     99e:	2106      	movs	r1, #6
     9a0:	430b      	orrs	r3, r1
     9a2:	6053      	str	r3, [r2, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
     9a4:	f000 f902 	bl	bac <_pm_init>
	_sysctrl_init_sources();
     9a8:	f000 fe0c 	bl	15c4 <_sysctrl_init_sources>
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
     9ac:	2008      	movs	r0, #8
     9ae:	f000 f8cf 	bl	b50 <_gclk_init_generators_by_fref>
#endif
	_sysctrl_init_referenced_generators();
     9b2:	f000 fe2d 	bl	1610 <_sysctrl_init_referenced_generators>
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     9b6:	20f7      	movs	r0, #247	; 0xf7
     9b8:	f000 f8ca 	bl	b50 <_gclk_init_generators_by_fref>
}
     9bc:	bd10      	pop	{r4, pc}
     9be:	46c0      	nop			; (mov r8, r8)
     9c0:	41004000 	.word	0x41004000

000009c4 <_ext_irq_init>:
typedef uint8_t  hri_eic_nmiflag_reg_t;
typedef uint8_t  hri_eic_status_reg_t;

static inline void hri_eic_wait_for_sync(const void *const hw)
{
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     9c4:	4b20      	ldr	r3, [pc, #128]	; (a48 <_ext_irq_init+0x84>)
     9c6:	785b      	ldrb	r3, [r3, #1]
     9c8:	09db      	lsrs	r3, r3, #7
     9ca:	d1fb      	bne.n	9c4 <_ext_irq_init>
     9cc:	4b1e      	ldr	r3, [pc, #120]	; (a48 <_ext_irq_init+0x84>)
     9ce:	785b      	ldrb	r3, [r3, #1]
     9d0:	09db      	lsrs	r3, r3, #7
     9d2:	d1fb      	bne.n	9cc <_ext_irq_init+0x8>

static inline hri_eic_ctrl_reg_t hri_eic_get_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t mask)
{
	uint8_t tmp;
	hri_eic_wait_for_sync(hw);
	tmp = ((Eic *)hw)->CTRL.reg;
     9d4:	4b1c      	ldr	r3, [pc, #112]	; (a48 <_ext_irq_init+0x84>)
     9d6:	781b      	ldrb	r3, [r3, #0]
 * \brief Initialize external interrupt module
 */
int32_t _ext_irq_init(void (*cb)(const uint32_t pin))
{
	hri_eic_wait_for_sync(EIC);
	if (hri_eic_get_CTRL_reg(EIC, EIC_CTRL_ENABLE)) {
     9d8:	079b      	lsls	r3, r3, #30
     9da:	d50a      	bpl.n	9f2 <_ext_irq_init+0x2e>
}

static inline void hri_eic_write_CTRL_reg(const void *const hw, hri_eic_ctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CTRL.reg = data;
     9dc:	2200      	movs	r2, #0
     9de:	4b1a      	ldr	r3, [pc, #104]	; (a48 <_ext_irq_init+0x84>)
     9e0:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     9e2:	4b19      	ldr	r3, [pc, #100]	; (a48 <_ext_irq_init+0x84>)
     9e4:	785b      	ldrb	r3, [r3, #1]
     9e6:	09db      	lsrs	r3, r3, #7
     9e8:	d1fb      	bne.n	9e2 <_ext_irq_init+0x1e>
     9ea:	4b17      	ldr	r3, [pc, #92]	; (a48 <_ext_irq_init+0x84>)
     9ec:	785b      	ldrb	r3, [r3, #1]
     9ee:	09db      	lsrs	r3, r3, #7
     9f0:	d1fb      	bne.n	9ea <_ext_irq_init+0x26>
	((Eic *)hw)->CTRL.reg = data;
     9f2:	2201      	movs	r2, #1
     9f4:	4b14      	ldr	r3, [pc, #80]	; (a48 <_ext_irq_init+0x84>)
     9f6:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     9f8:	4b13      	ldr	r3, [pc, #76]	; (a48 <_ext_irq_init+0x84>)
     9fa:	785b      	ldrb	r3, [r3, #1]
     9fc:	09db      	lsrs	r3, r3, #7
     9fe:	d1fb      	bne.n	9f8 <_ext_irq_init+0x34>
     a00:	4b11      	ldr	r3, [pc, #68]	; (a48 <_ext_irq_init+0x84>)
     a02:	785b      	ldrb	r3, [r3, #1]
     a04:	09db      	lsrs	r3, r3, #7
     a06:	d1fb      	bne.n	a00 <_ext_irq_init+0x3c>
}

static inline void hri_eic_write_NMICTRL_reg(const void *const hw, hri_eic_nmictrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->NMICTRL.reg = data;
     a08:	4b0f      	ldr	r3, [pc, #60]	; (a48 <_ext_irq_init+0x84>)
     a0a:	2200      	movs	r2, #0
     a0c:	709a      	strb	r2, [r3, #2]
}

static inline void hri_eic_write_EVCTRL_reg(const void *const hw, hri_eic_evctrl_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->EVCTRL.reg = data;
     a0e:	605a      	str	r2, [r3, #4]
}

static inline void hri_eic_write_WAKEUP_reg(const void *const hw, hri_eic_wakeup_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->WAKEUP.reg = data;
     a10:	615a      	str	r2, [r3, #20]
}

static inline void hri_eic_write_CONFIG_reg(const void *const hw, uint8_t index, hri_eic_config_reg_t data)
{
	EIC_CRITICAL_SECTION_ENTER();
	((Eic *)hw)->CONFIG[index].reg = data;
     a12:	619a      	str	r2, [r3, #24]
     a14:	61da      	str	r2, [r3, #28]
	((Eic *)hw)->CTRL.reg |= EIC_CTRL_ENABLE;
     a16:	781a      	ldrb	r2, [r3, #0]
     a18:	2102      	movs	r1, #2
     a1a:	430a      	orrs	r2, r1
     a1c:	b2d2      	uxtb	r2, r2
     a1e:	701a      	strb	r2, [r3, #0]
	while (((const Eic *)hw)->STATUS.bit.SYNCBUSY)
     a20:	4b09      	ldr	r3, [pc, #36]	; (a48 <_ext_irq_init+0x84>)
     a22:	785b      	ldrb	r3, [r3, #1]
     a24:	09db      	lsrs	r3, r3, #7
     a26:	d1fb      	bne.n	a20 <_ext_irq_init+0x5c>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     a28:	4b08      	ldr	r3, [pc, #32]	; (a4c <_ext_irq_init+0x88>)
     a2a:	2210      	movs	r2, #16
     a2c:	2180      	movs	r1, #128	; 0x80
     a2e:	505a      	str	r2, [r3, r1]
  __ASM volatile ("dsb 0xF":::"memory");
     a30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
     a34:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     a38:	3101      	adds	r1, #1
     a3a:	31ff      	adds	r1, #255	; 0xff
     a3c:	505a      	str	r2, [r3, r1]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     a3e:	601a      	str	r2, [r3, #0]

	NVIC_DisableIRQ(EIC_IRQn);
	NVIC_ClearPendingIRQ(EIC_IRQn);
	NVIC_EnableIRQ(EIC_IRQn);

	callback = cb;
     a40:	4b03      	ldr	r3, [pc, #12]	; (a50 <_ext_irq_init+0x8c>)
     a42:	6018      	str	r0, [r3, #0]

	return ERR_NONE;
}
     a44:	2000      	movs	r0, #0
     a46:	4770      	bx	lr
     a48:	40001800 	.word	0x40001800
     a4c:	e000e100 	.word	0xe000e100
     a50:	20000a74 	.word	0x20000a74

00000a54 <_ext_irq_enable>:
 * \brief Enable / disable external irq
 */
int32_t _ext_irq_enable(const uint32_t pin, const bool enable)
{
	uint8_t extint = INVALID_EXTINT_NUMBER;
	uint8_t i      = 0;
     a54:	2300      	movs	r3, #0

	for (; i < ARRAY_SIZE(_map); i++) {
     a56:	2b00      	cmp	r3, #0
     a58:	d00b      	beq.n	a72 <_ext_irq_enable+0x1e>
	uint8_t extint = INVALID_EXTINT_NUMBER;
     a5a:	22ff      	movs	r2, #255	; 0xff
		if (_map[i].pin == pin) {
			extint = _map[i].extint;
			break;
		}
	}
	if (INVALID_EXTINT_NUMBER == extint) {
     a5c:	2aff      	cmp	r2, #255	; 0xff
     a5e:	d017      	beq.n	a90 <_ext_irq_enable+0x3c>
		return ERR_INVALID_ARG;
	}

	if (enable) {
     a60:	2900      	cmp	r1, #0
     a62:	d10f      	bne.n	a84 <_ext_irq_enable+0x30>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
	} else {
		hri_eic_clear_INTEN_reg(EIC, 1ul << extint);
     a64:	2301      	movs	r3, #1
     a66:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENCLR.reg = mask;
     a68:	4a0b      	ldr	r2, [pc, #44]	; (a98 <_ext_irq_enable+0x44>)
     a6a:	6093      	str	r3, [r2, #8]
	((Eic *)hw)->INTFLAG.reg = mask;
     a6c:	6113      	str	r3, [r2, #16]
		hri_eic_clear_INTFLAG_reg(EIC, 1ul << extint);
	}

	return ERR_NONE;
     a6e:	2000      	movs	r0, #0
}
     a70:	4770      	bx	lr
		if (_map[i].pin == pin) {
     a72:	2828      	cmp	r0, #40	; 0x28
     a74:	d002      	beq.n	a7c <_ext_irq_enable+0x28>
	for (; i < ARRAY_SIZE(_map); i++) {
     a76:	3301      	adds	r3, #1
     a78:	b2db      	uxtb	r3, r3
     a7a:	e7ec      	b.n	a56 <_ext_irq_enable+0x2>
			extint = _map[i].extint;
     a7c:	00da      	lsls	r2, r3, #3
     a7e:	4b07      	ldr	r3, [pc, #28]	; (a9c <_ext_irq_enable+0x48>)
     a80:	5cd2      	ldrb	r2, [r2, r3]
			break;
     a82:	e7eb      	b.n	a5c <_ext_irq_enable+0x8>
		hri_eic_set_INTEN_reg(EIC, 1ul << extint);
     a84:	2301      	movs	r3, #1
     a86:	4093      	lsls	r3, r2
	((Eic *)hw)->INTENSET.reg = mask;
     a88:	4a03      	ldr	r2, [pc, #12]	; (a98 <_ext_irq_enable+0x44>)
     a8a:	60d3      	str	r3, [r2, #12]
	return ERR_NONE;
     a8c:	2000      	movs	r0, #0
     a8e:	e7ef      	b.n	a70 <_ext_irq_enable+0x1c>
		return ERR_INVALID_ARG;
     a90:	200d      	movs	r0, #13
     a92:	4240      	negs	r0, r0
     a94:	e7ec      	b.n	a70 <_ext_irq_enable+0x1c>
     a96:	46c0      	nop			; (mov r8, r8)
     a98:	40001800 	.word	0x40001800
     a9c:	0000d564 	.word	0x0000d564

00000aa0 <EIC_Handler>:

/**
 * \brief EIC interrupt handler
 */
void EIC_Handler(void)
{
     aa0:	b570      	push	{r4, r5, r6, lr}
     aa2:	b082      	sub	sp, #8
	return ((Eic *)hw)->INTFLAG.reg;
     aa4:	4b26      	ldr	r3, [pc, #152]	; (b40 <EIC_Handler+0xa0>)
     aa6:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     aa8:	68d9      	ldr	r1, [r3, #12]
	volatile uint32_t flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     aaa:	400a      	ands	r2, r1
     aac:	9201      	str	r2, [sp, #4]
	int8_t            pos;
	uint32_t          pin = INVALID_PIN_NUMBER;

	hri_eic_clear_INTFLAG_reg(EIC, flags);
     aae:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     ab0:	611a      	str	r2, [r3, #16]

	ASSERT(callback);
     ab2:	4b24      	ldr	r3, [pc, #144]	; (b44 <EIC_Handler+0xa4>)
     ab4:	6818      	ldr	r0, [r3, #0]
     ab6:	1e43      	subs	r3, r0, #1
     ab8:	4198      	sbcs	r0, r3
     aba:	b2c0      	uxtb	r0, r0
     abc:	22d2      	movs	r2, #210	; 0xd2
     abe:	4922      	ldr	r1, [pc, #136]	; (b48 <EIC_Handler+0xa8>)
     ac0:	f7ff ff1a 	bl	8f8 <assert>
	uint32_t          pin = INVALID_PIN_NUMBER;
     ac4:	2501      	movs	r5, #1
     ac6:	426d      	negs	r5, r5

	while (flags) {
     ac8:	e02e      	b.n	b28 <EIC_Handler+0x88>
					break;
				}
				if (_map[middle].extint < pos) {
					lower = middle + 1;
				} else {
					upper = middle - 1;
     aca:	3901      	subs	r1, #1
     acc:	b2ce      	uxtb	r6, r1
			while (upper >= lower) {
     ace:	42b0      	cmp	r0, r6
     ad0:	d80e      	bhi.n	af0 <EIC_Handler+0x50>
				middle = (upper + lower) >> 1;
     ad2:	1832      	adds	r2, r6, r0
     ad4:	1052      	asrs	r2, r2, #1
     ad6:	b2d1      	uxtb	r1, r2
				if (_map[middle].extint == pos) {
     ad8:	23ff      	movs	r3, #255	; 0xff
     ada:	4013      	ands	r3, r2
     adc:	00db      	lsls	r3, r3, #3
     ade:	4a1b      	ldr	r2, [pc, #108]	; (b4c <EIC_Handler+0xac>)
     ae0:	5c9b      	ldrb	r3, [r3, r2]
     ae2:	42a3      	cmp	r3, r4
     ae4:	d003      	beq.n	aee <EIC_Handler+0x4e>
				if (_map[middle].extint < pos) {
     ae6:	daf0      	bge.n	aca <EIC_Handler+0x2a>
					lower = middle + 1;
     ae8:	3101      	adds	r1, #1
     aea:	b2c8      	uxtb	r0, r1
     aec:	e7ef      	b.n	ace <EIC_Handler+0x2e>
					pin = _map[middle].pin;
     aee:	2528      	movs	r5, #40	; 0x28
				}
			}

			if (INVALID_PIN_NUMBER != pin) {
     af0:	1c6b      	adds	r3, r5, #1
     af2:	d003      	beq.n	afc <EIC_Handler+0x5c>
				callback(pin);
     af4:	4b13      	ldr	r3, [pc, #76]	; (b44 <EIC_Handler+0xa4>)
     af6:	681b      	ldr	r3, [r3, #0]
     af8:	0028      	movs	r0, r5
     afa:	4798      	blx	r3
			}
			flags &= ~(1ul << pos);
     afc:	2201      	movs	r2, #1
     afe:	40a2      	lsls	r2, r4
     b00:	9b01      	ldr	r3, [sp, #4]
     b02:	4393      	bics	r3, r2
     b04:	9301      	str	r3, [sp, #4]
			pos = ffs(flags) - 1;
     b06:	9801      	ldr	r0, [sp, #4]
     b08:	f002 ffae 	bl	3a68 <__ffssi2>
     b0c:	3801      	subs	r0, #1
     b0e:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     b10:	1c63      	adds	r3, r4, #1
     b12:	d002      	beq.n	b1a <EIC_Handler+0x7a>
     b14:	2601      	movs	r6, #1
     b16:	2000      	movs	r0, #0
     b18:	e7d9      	b.n	ace <EIC_Handler+0x2e>
	return ((Eic *)hw)->INTFLAG.reg;
     b1a:	4b09      	ldr	r3, [pc, #36]	; (b40 <EIC_Handler+0xa0>)
     b1c:	691a      	ldr	r2, [r3, #16]
	return ((Eic *)hw)->INTENSET.reg;
     b1e:	68d9      	ldr	r1, [r3, #12]
		}
		flags = hri_eic_read_INTFLAG_reg(EIC) & hri_eic_read_INTEN_reg(EIC);
     b20:	400a      	ands	r2, r1
     b22:	9201      	str	r2, [sp, #4]
		hri_eic_clear_INTFLAG_reg(EIC, flags);
     b24:	9a01      	ldr	r2, [sp, #4]
	((Eic *)hw)->INTFLAG.reg = mask;
     b26:	611a      	str	r2, [r3, #16]
	while (flags) {
     b28:	9b01      	ldr	r3, [sp, #4]
     b2a:	2b00      	cmp	r3, #0
     b2c:	d005      	beq.n	b3a <EIC_Handler+0x9a>
		pos = ffs(flags) - 1;
     b2e:	9801      	ldr	r0, [sp, #4]
     b30:	f002 ff9a 	bl	3a68 <__ffssi2>
     b34:	3801      	subs	r0, #1
     b36:	b244      	sxtb	r4, r0
		while (-1 != pos) {
     b38:	e7ea      	b.n	b10 <EIC_Handler+0x70>
	}
}
     b3a:	b002      	add	sp, #8
     b3c:	bd70      	pop	{r4, r5, r6, pc}
     b3e:	46c0      	nop			; (mov r8, r8)
     b40:	40001800 	.word	0x40001800
     b44:	20000a74 	.word	0x20000a74
     b48:	0000d54c 	.word	0x0000d54c
     b4c:	0000d564 	.word	0x0000d564

00000b50 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     b50:	07c3      	lsls	r3, r0, #31
     b52:	d509      	bpl.n	b68 <_gclk_init_generators_by_fref+0x18>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
     b54:	4b11      	ldr	r3, [pc, #68]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b56:	2280      	movs	r2, #128	; 0x80
     b58:	0052      	lsls	r2, r2, #1
     b5a:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     b5c:	4a10      	ldr	r2, [pc, #64]	; (ba0 <_gclk_init_generators_by_fref+0x50>)
     b5e:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     b60:	4b0e      	ldr	r3, [pc, #56]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b62:	785b      	ldrb	r3, [r3, #1]
     b64:	09db      	lsrs	r3, r3, #7
     b66:	d1fb      	bne.n	b60 <_gclk_init_generators_by_fref+0x10>
		        | (CONF_GCLK_GENERATOR_0_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_0_SRC | GCLK_GENCTRL_ID(0));
	}
#endif

#if CONF_GCLK_GENERATOR_1_CONFIG == 1
	if (bm & (1ul << 1)) {
     b68:	0783      	lsls	r3, r0, #30
     b6a:	d509      	bpl.n	b80 <_gclk_init_generators_by_fref+0x30>
	((Gclk *)hw)->GENDIV.reg = data;
     b6c:	4b0b      	ldr	r3, [pc, #44]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b6e:	2202      	movs	r2, #2
     b70:	32ff      	adds	r2, #255	; 0xff
     b72:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     b74:	4a0b      	ldr	r2, [pc, #44]	; (ba4 <_gclk_init_generators_by_fref+0x54>)
     b76:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     b78:	4b08      	ldr	r3, [pc, #32]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b7a:	785b      	ldrb	r3, [r3, #1]
     b7c:	09db      	lsrs	r3, r3, #7
     b7e:	d1fb      	bne.n	b78 <_gclk_init_generators_by_fref+0x28>
		        | (CONF_GCLK_GENERATOR_2_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_2_SRC | GCLK_GENCTRL_ID(2));
	}
#endif

#if CONF_GCLK_GENERATOR_3_CONFIG == 1
	if (bm & (1ul << 3)) {
     b80:	0703      	lsls	r3, r0, #28
     b82:	d509      	bpl.n	b98 <_gclk_init_generators_by_fref+0x48>
	((Gclk *)hw)->GENDIV.reg = data;
     b84:	4b05      	ldr	r3, [pc, #20]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b86:	2204      	movs	r2, #4
     b88:	32ff      	adds	r2, #255	; 0xff
     b8a:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     b8c:	4a06      	ldr	r2, [pc, #24]	; (ba8 <_gclk_init_generators_by_fref+0x58>)
     b8e:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     b90:	4b02      	ldr	r3, [pc, #8]	; (b9c <_gclk_init_generators_by_fref+0x4c>)
     b92:	785b      	ldrb	r3, [r3, #1]
     b94:	09db      	lsrs	r3, r3, #7
     b96:	d1fb      	bne.n	b90 <_gclk_init_generators_by_fref+0x40>
		        | (CONF_GCLK_GEN_7_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_7_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_7_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_7_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_7_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_7_SRC | GCLK_GENCTRL_ID(7));
	}
#endif
}
     b98:	4770      	bx	lr
     b9a:	46c0      	nop			; (mov r8, r8)
     b9c:	40000c00 	.word	0x40000c00
     ba0:	00010700 	.word	0x00010700
     ba4:	00010601 	.word	0x00010601
     ba8:	00010303 	.word	0x00010303

00000bac <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
     bac:	4b06      	ldr	r3, [pc, #24]	; (bc8 <_pm_init+0x1c>)
     bae:	7a1a      	ldrb	r2, [r3, #8]
     bb0:	b2d2      	uxtb	r2, r2
     bb2:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
     bb4:	7a5a      	ldrb	r2, [r3, #9]
     bb6:	b2d2      	uxtb	r2, r2
     bb8:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
     bba:	7a9a      	ldrb	r2, [r3, #10]
     bbc:	b2d2      	uxtb	r2, r2
     bbe:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
     bc0:	7ada      	ldrb	r2, [r3, #11]
     bc2:	b2d2      	uxtb	r2, r2
     bc4:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
     bc6:	4770      	bx	lr
     bc8:	40000400 	.word	0x40000400

00000bcc <_rtc_timer_interrupt_handler>:
 * \brief RTC Timer interrupt handler
 *
 * \param[in] p The pointer to calendar device struct
 */
static void _rtc_timer_interrupt_handler(struct _timer_device *dev)
{
     bcc:	b510      	push	{r4, lr}
     bce:	0004      	movs	r4, r0
	return tmp;
}

static inline hri_rtcmode0_intflag_reg_t hri_rtcmode0_read_INTFLAG_reg(const void *const hw)
{
	return ((Rtc *)hw)->MODE0.INTFLAG.reg;
     bd0:	68c3      	ldr	r3, [r0, #12]
     bd2:	7a1b      	ldrb	r3, [r3, #8]
	/* Read and mask interrupt flag register */
	uint16_t flag = hri_rtcmode0_read_INTFLAG_reg(dev->hw);

	if (flag & RTC_MODE0_INTFLAG_CMP0) {
     bd4:	07db      	lsls	r3, r3, #31
     bd6:	d506      	bpl.n	be6 <_rtc_timer_interrupt_handler+0x1a>
		if (dev->timer_cb.period_expired) {
     bd8:	6803      	ldr	r3, [r0, #0]
     bda:	2b00      	cmp	r3, #0
     bdc:	d000      	beq.n	be0 <_rtc_timer_interrupt_handler+0x14>
			dev->timer_cb.period_expired(dev);
     bde:	4798      	blx	r3
		}

		/* Clear interrupt flag */
		hri_rtcmode0_clear_interrupt_CMP0_bit(dev->hw);
     be0:	68e3      	ldr	r3, [r4, #12]
	((Rtc *)hw)->MODE0.INTFLAG.reg = RTC_MODE0_INTFLAG_CMP0;
     be2:	2201      	movs	r2, #1
     be4:	721a      	strb	r2, [r3, #8]
	}
}
     be6:	bd10      	pop	{r4, pc}

00000be8 <_timer_init>:
{
     be8:	b570      	push	{r4, r5, r6, lr}
     bea:	0004      	movs	r4, r0
     bec:	000d      	movs	r5, r1
	ASSERT(dev);
     bee:	1e43      	subs	r3, r0, #1
     bf0:	4198      	sbcs	r0, r3
     bf2:	b2c0      	uxtb	r0, r0
     bf4:	2230      	movs	r2, #48	; 0x30
     bf6:	4910      	ldr	r1, [pc, #64]	; (c38 <_timer_init+0x50>)
     bf8:	f7ff fe7e 	bl	8f8 <assert>
	dev->hw = hw;
     bfc:	60e5      	str	r5, [r4, #12]
}

static inline void hri_rtcmode0_write_CTRL_reg(const void *const hw, hri_rtcmode0_ctrl_reg_t data)
{
	RTC_CRITICAL_SECTION_ENTER();
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     bfe:	2301      	movs	r3, #1
     c00:	802b      	strh	r3, [r5, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c02:	7aab      	ldrb	r3, [r5, #10]
     c04:	09db      	lsrs	r3, r3, #7
     c06:	d1fc      	bne.n	c02 <_timer_init+0x1a>
	hri_rtcmode0_wait_for_sync(dev->hw);
     c08:	68e2      	ldr	r2, [r4, #12]
     c0a:	7a93      	ldrb	r3, [r2, #10]
     c0c:	09db      	lsrs	r3, r3, #7
     c0e:	d1fc      	bne.n	c0a <_timer_init+0x22>
	((Rtc *)hw)->MODE0.CTRL.reg = data;
     c10:	3380      	adds	r3, #128	; 0x80
     c12:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c14:	7a93      	ldrb	r3, [r2, #10]
     c16:	09db      	lsrs	r3, r3, #7
     c18:	d1fc      	bne.n	c14 <_timer_init+0x2c>
	hri_rtcmode0_write_COMP_COMP_bf(dev->hw, 0, CONF_RTC_COMP_VAL);
     c1a:	68e2      	ldr	r2, [r4, #12]

static inline void hri_rtcmode0_write_COMP_COMP_bf(const void *const hw, uint8_t index, hri_rtcmode0_comp_reg_t data)
{
	uint32_t tmp;
	RTC_CRITICAL_SECTION_ENTER();
	tmp = ((Rtc *)hw)->MODE0.COMP[index].reg;
     c1c:	6993      	ldr	r3, [r2, #24]
	tmp &= ~RTC_MODE0_COMP_COMP_Msk;
	tmp |= RTC_MODE0_COMP_COMP(data);
	((Rtc *)hw)->MODE0.COMP[index].reg = tmp;
     c1e:	2301      	movs	r3, #1
     c20:	6193      	str	r3, [r2, #24]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c22:	7a93      	ldrb	r3, [r2, #10]
     c24:	09db      	lsrs	r3, r3, #7
     c26:	d1fc      	bne.n	c22 <_timer_init+0x3a>
	((Rtc *)hw)->MODE0.INTENSET.reg = RTC_MODE0_INTENSET_CMP0;
     c28:	3301      	adds	r3, #1
     c2a:	68e2      	ldr	r2, [r4, #12]
     c2c:	71d3      	strb	r3, [r2, #7]
	_rtc_dev = dev;
     c2e:	4b03      	ldr	r3, [pc, #12]	; (c3c <_timer_init+0x54>)
     c30:	601c      	str	r4, [r3, #0]
}
     c32:	2000      	movs	r0, #0
     c34:	bd70      	pop	{r4, r5, r6, pc}
     c36:	46c0      	nop			; (mov r8, r8)
     c38:	0000d56c 	.word	0x0000d56c
     c3c:	20000a78 	.word	0x20000a78

00000c40 <_timer_start>:
{
     c40:	b510      	push	{r4, lr}
     c42:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->hw);
     c44:	d020      	beq.n	c88 <_timer_start+0x48>
     c46:	68c3      	ldr	r3, [r0, #12]
     c48:	2b00      	cmp	r3, #0
     c4a:	d01b      	beq.n	c84 <_timer_start+0x44>
     c4c:	2001      	movs	r0, #1
     c4e:	2267      	movs	r2, #103	; 0x67
     c50:	490e      	ldr	r1, [pc, #56]	; (c8c <_timer_start+0x4c>)
     c52:	f7ff fe51 	bl	8f8 <assert>
     c56:	2208      	movs	r2, #8
     c58:	4b0d      	ldr	r3, [pc, #52]	; (c90 <_timer_start+0x50>)
     c5a:	601a      	str	r2, [r3, #0]
	hri_rtcmode0_write_COUNT_COUNT_bf(dev->hw, 0);
     c5c:	68e2      	ldr	r2, [r4, #12]
	tmp = ((Rtc *)hw)->MODE0.COUNT.reg;
     c5e:	6913      	ldr	r3, [r2, #16]
	((Rtc *)hw)->MODE0.COUNT.reg = tmp;
     c60:	2300      	movs	r3, #0
     c62:	6113      	str	r3, [r2, #16]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c64:	7a93      	ldrb	r3, [r2, #10]
     c66:	09db      	lsrs	r3, r3, #7
     c68:	d1fc      	bne.n	c64 <_timer_start+0x24>
	hri_rtcmode0_wait_for_sync(dev->hw);
     c6a:	68e2      	ldr	r2, [r4, #12]
     c6c:	7a93      	ldrb	r3, [r2, #10]
     c6e:	09db      	lsrs	r3, r3, #7
     c70:	d1fc      	bne.n	c6c <_timer_start+0x2c>
	((Rtc *)hw)->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
     c72:	8813      	ldrh	r3, [r2, #0]
     c74:	2102      	movs	r1, #2
     c76:	430b      	orrs	r3, r1
     c78:	b29b      	uxth	r3, r3
     c7a:	8013      	strh	r3, [r2, #0]
	while (((const Rtc *)hw)->MODE0.STATUS.bit.SYNCBUSY)
     c7c:	7a93      	ldrb	r3, [r2, #10]
     c7e:	09db      	lsrs	r3, r3, #7
     c80:	d1fc      	bne.n	c7c <_timer_start+0x3c>
}
     c82:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->hw);
     c84:	2000      	movs	r0, #0
     c86:	e7e2      	b.n	c4e <_timer_start+0xe>
     c88:	2000      	movs	r0, #0
     c8a:	e7e0      	b.n	c4e <_timer_start+0xe>
     c8c:	0000d56c 	.word	0x0000d56c
     c90:	e000e100 	.word	0xe000e100

00000c94 <_timer_is_started>:
	return hri_rtcmode0_get_CTRL_ENABLE_bit(dev->hw);
     c94:	68c2      	ldr	r2, [r0, #12]
     c96:	7a93      	ldrb	r3, [r2, #10]
     c98:	09db      	lsrs	r3, r3, #7
     c9a:	d1fc      	bne.n	c96 <_timer_is_started+0x2>
	tmp = ((Rtc *)hw)->MODE0.CTRL.reg;
     c9c:	8813      	ldrh	r3, [r2, #0]
	tmp = (tmp & RTC_MODE0_CTRL_ENABLE) >> RTC_MODE0_CTRL_ENABLE_Pos;
     c9e:	085b      	lsrs	r3, r3, #1
	return (bool)tmp;
     ca0:	2001      	movs	r0, #1
     ca2:	4018      	ands	r0, r3
}
     ca4:	4770      	bx	lr

00000ca6 <_timer_set_irq>:
}
     ca6:	4770      	bx	lr

00000ca8 <_rtc_get_timer>:
 * \brief Retrieve timer helper functions
 */
struct _timer_hpl_interface *_rtc_get_timer(void)
{
	return NULL;
}
     ca8:	2000      	movs	r0, #0
     caa:	4770      	bx	lr

00000cac <RTC_Handler>:

/**
 * \brief Rtc interrupt handler
 */
void RTC_Handler(void)
{
     cac:	b510      	push	{r4, lr}
	_rtc_timer_interrupt_handler(_rtc_dev);
     cae:	4b02      	ldr	r3, [pc, #8]	; (cb8 <RTC_Handler+0xc>)
     cb0:	6818      	ldr	r0, [r3, #0]
     cb2:	f7ff ff8b 	bl	bcc <_rtc_timer_interrupt_handler>
}
     cb6:	bd10      	pop	{r4, pc}
     cb8:	20000a78 	.word	0x20000a78

00000cbc <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
     cbc:	4b02      	ldr	r3, [pc, #8]	; (cc8 <_sercom_get_hardware_index+0xc>)
     cbe:	469c      	mov	ip, r3
     cc0:	4460      	add	r0, ip
     cc2:	0a80      	lsrs	r0, r0, #10
     cc4:	b2c0      	uxtb	r0, r0
}
     cc6:	4770      	bx	lr
     cc8:	bdfff800 	.word	0xbdfff800

00000ccc <_spi_sync_enable>:
		;
}

static inline bool hri_sercomspi_is_syncing(const void *const hw)
{
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
     ccc:	8a03      	ldrh	r3, [r0, #16]
     cce:	0bdb      	lsrs	r3, r3, #15
 *
 * \return Enabling status
 */
static int32_t _spi_sync_enable(void *const hw)
{
	if (hri_sercomspi_is_syncing(hw)) {
     cd0:	d108      	bne.n	ce4 <_spi_sync_enable+0x18>
}

static inline void hri_sercomspi_set_CTRLA_ENABLE_bit(const void *const hw)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->SPI.CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
     cd2:	6803      	ldr	r3, [r0, #0]
     cd4:	2202      	movs	r2, #2
     cd6:	4313      	orrs	r3, r2
     cd8:	6003      	str	r3, [r0, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
     cda:	8a03      	ldrh	r3, [r0, #16]
     cdc:	0bdb      	lsrs	r3, r3, #15
     cde:	d1fc      	bne.n	cda <_spi_sync_enable+0xe>
		return ERR_BUSY;
	}

	hri_sercomspi_set_CTRLA_ENABLE_bit(hw);

	return ERR_NONE;
     ce0:	2000      	movs	r0, #0
}
     ce2:	4770      	bx	lr
		return ERR_BUSY;
     ce4:	2004      	movs	r0, #4
     ce6:	4240      	negs	r0, r0
     ce8:	e7fb      	b.n	ce2 <_spi_sync_enable+0x16>
	...

00000cec <_get_sercom_index>:
{
     cec:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     cee:	f7ff ffe5 	bl	cbc <_sercom_get_hardware_index>
     cf2:	0003      	movs	r3, r0
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     cf4:	2000      	movs	r0, #0
     cf6:	2800      	cmp	r0, #0
     cf8:	d006      	beq.n	d08 <_get_sercom_index+0x1c>
	ASSERT(false);
     cfa:	4a07      	ldr	r2, [pc, #28]	; (d18 <_get_sercom_index+0x2c>)
     cfc:	4907      	ldr	r1, [pc, #28]	; (d1c <_get_sercom_index+0x30>)
     cfe:	2000      	movs	r0, #0
     d00:	f7ff fdfa 	bl	8f8 <assert>
	return 0;
     d04:	2000      	movs	r0, #0
}
     d06:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
     d08:	0102      	lsls	r2, r0, #4
     d0a:	4905      	ldr	r1, [pc, #20]	; (d20 <_get_sercom_index+0x34>)
     d0c:	5c52      	ldrb	r2, [r2, r1]
     d0e:	4293      	cmp	r3, r2
     d10:	d0f9      	beq.n	d06 <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     d12:	3001      	adds	r0, #1
     d14:	b2c0      	uxtb	r0, r0
     d16:	e7ee      	b.n	cf6 <_get_sercom_index+0xa>
     d18:	0000022a 	.word	0x0000022a
     d1c:	0000d584 	.word	0x0000d584
     d20:	0000d5b8 	.word	0x0000d5b8

00000d24 <_usart_init>:
{
     d24:	b510      	push	{r4, lr}
     d26:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
     d28:	f7ff ffe0 	bl	cec <_get_sercom_index>
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d2c:	8a23      	ldrh	r3, [r4, #16]
     d2e:	0bdb      	lsrs	r3, r3, #15
     d30:	d1fc      	bne.n	d2c <_usart_init+0x8>
     d32:	8a23      	ldrh	r3, [r4, #16]
     d34:	0bdb      	lsrs	r3, r3, #15
     d36:	d1fc      	bne.n	d32 <_usart_init+0xe>
static inline hri_sercomusart_ctrla_reg_t hri_sercomusart_get_CTRLA_reg(const void *const           hw,
                                                                        hri_sercomusart_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomusart_wait_for_sync(hw);
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
     d38:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
     d3a:	079b      	lsls	r3, r3, #30
     d3c:	d507      	bpl.n	d4e <_usart_init+0x2a>
}

static inline void hri_sercomusart_write_CTRLA_reg(const void *const hw, hri_sercomusart_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLA.reg = data;
     d3e:	2300      	movs	r3, #0
     d40:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d42:	8a23      	ldrh	r3, [r4, #16]
     d44:	0bdb      	lsrs	r3, r3, #15
     d46:	d1fc      	bne.n	d42 <_usart_init+0x1e>
     d48:	8a23      	ldrh	r3, [r4, #16]
     d4a:	0bdb      	lsrs	r3, r3, #15
     d4c:	d1fc      	bne.n	d48 <_usart_init+0x24>
	((Sercom *)hw)->USART.CTRLA.reg = data;
     d4e:	2301      	movs	r3, #1
     d50:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d52:	8a23      	ldrh	r3, [r4, #16]
     d54:	0bdb      	lsrs	r3, r3, #15
     d56:	d1fc      	bne.n	d52 <_usart_init+0x2e>
     d58:	8a23      	ldrh	r3, [r4, #16]
     d5a:	0bdb      	lsrs	r3, r3, #15
     d5c:	d1fc      	bne.n	d58 <_usart_init+0x34>
	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
     d5e:	0102      	lsls	r2, r0, #4
     d60:	4b0b      	ldr	r3, [pc, #44]	; (d90 <_usart_init+0x6c>)
     d62:	189b      	adds	r3, r3, r2
     d64:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
     d66:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d68:	8a23      	ldrh	r3, [r4, #16]
     d6a:	0bdb      	lsrs	r3, r3, #15
     d6c:	d1fc      	bne.n	d68 <_usart_init+0x44>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
     d6e:	0102      	lsls	r2, r0, #4
     d70:	4b07      	ldr	r3, [pc, #28]	; (d90 <_usart_init+0x6c>)
     d72:	189b      	adds	r3, r3, r2
     d74:	689b      	ldr	r3, [r3, #8]
}

static inline void hri_sercomusart_write_CTRLB_reg(const void *const hw, hri_sercomusart_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLB.reg = data;
     d76:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     d78:	8a23      	ldrh	r3, [r4, #16]
     d7a:	0bdb      	lsrs	r3, r3, #15
     d7c:	d1fc      	bne.n	d78 <_usart_init+0x54>
	hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
     d7e:	0100      	lsls	r0, r0, #4
     d80:	4b03      	ldr	r3, [pc, #12]	; (d90 <_usart_init+0x6c>)
     d82:	1818      	adds	r0, r3, r0
     d84:	8983      	ldrh	r3, [r0, #12]
}

static inline void hri_sercomusart_write_BAUD_reg(const void *const hw, hri_sercomusart_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.BAUD.reg = data;
     d86:	8163      	strh	r3, [r4, #10]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
     d88:	7b83      	ldrb	r3, [r0, #14]
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
     d8a:	7223      	strb	r3, [r4, #8]
}
     d8c:	2000      	movs	r0, #0
     d8e:	bd10      	pop	{r4, pc}
     d90:	0000d5b8 	.word	0x0000d5b8

00000d94 <_get_i2cm_index>:
{
     d94:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     d96:	f7ff ff91 	bl	cbc <_sercom_get_hardware_index>
     d9a:	0002      	movs	r2, r0
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     d9c:	2000      	movs	r0, #0
     d9e:	2800      	cmp	r0, #0
     da0:	d006      	beq.n	db0 <_get_i2cm_index+0x1c>
	ASSERT(false);
     da2:	4a08      	ldr	r2, [pc, #32]	; (dc4 <_get_i2cm_index+0x30>)
     da4:	4908      	ldr	r1, [pc, #32]	; (dc8 <_get_i2cm_index+0x34>)
     da6:	2000      	movs	r0, #0
     da8:	f7ff fda6 	bl	8f8 <assert>
	return 0;
     dac:	2000      	movs	r0, #0
}
     dae:	bd10      	pop	{r4, pc}
		if (_i2cms[i].number == sercom_offset) {
     db0:	0043      	lsls	r3, r0, #1
     db2:	181b      	adds	r3, r3, r0
     db4:	00d9      	lsls	r1, r3, #3
     db6:	4b05      	ldr	r3, [pc, #20]	; (dcc <_get_i2cm_index+0x38>)
     db8:	5ccb      	ldrb	r3, [r1, r3]
     dba:	429a      	cmp	r2, r3
     dbc:	d0f7      	beq.n	dae <_get_i2cm_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_i2cms); i++) {
     dbe:	3001      	adds	r0, #1
     dc0:	b2c0      	uxtb	r0, r0
     dc2:	e7ec      	b.n	d9e <_get_i2cm_index+0xa>
     dc4:	00000366 	.word	0x00000366
     dc8:	0000d584 	.word	0x0000d584
     dcc:	0000d5a0 	.word	0x0000d5a0

00000dd0 <_sercom_i2c_sync_send_address>:
{
     dd0:	b570      	push	{r4, r5, r6, lr}
     dd2:	0005      	movs	r5, r0
	void *             hw  = i2c_dev->hw;
     dd4:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
     dd6:	1e43      	subs	r3, r0, #1
     dd8:	4198      	sbcs	r0, r3
     dda:	b2c0      	uxtb	r0, r0
     ddc:	4a5c      	ldr	r2, [pc, #368]	; (f50 <_sercom_i2c_sync_send_address+0x180>)
     dde:	495d      	ldr	r1, [pc, #372]	; (f54 <_sercom_i2c_sync_send_address+0x184>)
     de0:	f7ff fd8a 	bl	8f8 <assert>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     de4:	6863      	ldr	r3, [r4, #4]
     de6:	4a5c      	ldr	r2, [pc, #368]	; (f58 <_sercom_i2c_sync_send_address+0x188>)
     de8:	4013      	ands	r3, r2
     dea:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     dec:	8a23      	ldrh	r3, [r4, #16]
     dee:	0bdb      	lsrs	r3, r3, #15
     df0:	d1fc      	bne.n	dec <_sercom_i2c_sync_send_address+0x1c>
	hri_sercomi2cm_write_ADDR_reg(hw, ((msg->addr & SEVEN_ADDR_MASK) << 1) | (msg->flags & I2C_M_RD ? I2C_M_RD : 0x0));
     df2:	882a      	ldrh	r2, [r5, #0]
     df4:	0052      	lsls	r2, r2, #1
     df6:	886b      	ldrh	r3, [r5, #2]
     df8:	2101      	movs	r1, #1
     dfa:	400b      	ands	r3, r1
     dfc:	4313      	orrs	r3, r2
     dfe:	b2db      	uxtb	r3, r3
}

static inline void hri_sercomi2cm_write_ADDR_reg(const void *const hw, hri_sercomi2cm_addr_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->I2CM.ADDR.reg = data;
     e00:	7523      	strb	r3, [r4, #20]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e02:	8a23      	ldrh	r3, [r4, #16]
     e04:	0bdb      	lsrs	r3, r3, #15
     e06:	d1fc      	bne.n	e02 <_sercom_i2c_sync_send_address+0x32>
	void *   hw      = i2c_dev->hw;
     e08:	692e      	ldr	r6, [r5, #16]
	uint32_t timeout = 65535;
     e0a:	4a54      	ldr	r2, [pc, #336]	; (f5c <_sercom_i2c_sync_send_address+0x18c>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
     e0c:	7bb3      	ldrb	r3, [r6, #14]
     e0e:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
     e10:	0018      	movs	r0, r3
		if (timeout-- == 0) {
     e12:	1e51      	subs	r1, r2, #1
     e14:	2a00      	cmp	r2, #0
     e16:	d002      	beq.n	e1e <_sercom_i2c_sync_send_address+0x4e>
     e18:	000a      	movs	r2, r1
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
     e1a:	079b      	lsls	r3, r3, #30
     e1c:	d0f6      	beq.n	e0c <_sercom_i2c_sync_send_address+0x3c>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e1e:	8a23      	ldrh	r3, [r4, #16]
     e20:	0bdb      	lsrs	r3, r3, #15
     e22:	d1fc      	bne.n	e1e <_sercom_i2c_sync_send_address+0x4e>
}

static inline hri_sercomi2cm_status_reg_t hri_sercomi2cm_read_STATUS_reg(const void *const hw)
{
	hri_sercomi2cm_wait_for_sync(hw);
	return ((Sercom *)hw)->I2CM.STATUS.reg;
     e24:	8a23      	ldrh	r3, [r4, #16]
     e26:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
     e28:	07c2      	lsls	r2, r0, #31
     e2a:	d550      	bpl.n	ece <_sercom_i2c_sync_send_address+0xfe>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
     e2c:	079a      	lsls	r2, r3, #30
     e2e:	d510      	bpl.n	e52 <_sercom_i2c_sync_send_address+0x82>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
     e30:	2201      	movs	r2, #1
     e32:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
     e34:	886a      	ldrh	r2, [r5, #2]
     e36:	2180      	movs	r1, #128	; 0x80
     e38:	0149      	lsls	r1, r1, #5
     e3a:	430a      	orrs	r2, r1
     e3c:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
     e3e:	886a      	ldrh	r2, [r5, #2]
     e40:	4947      	ldr	r1, [pc, #284]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     e42:	400a      	ands	r2, r1
     e44:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
     e46:	07db      	lsls	r3, r3, #31
     e48:	d400      	bmi.n	e4c <_sercom_i2c_sync_send_address+0x7c>
     e4a:	e07c      	b.n	f46 <_sercom_i2c_sync_send_address+0x176>
				return I2C_ERR_BUS;
     e4c:	2005      	movs	r0, #5
     e4e:	4240      	negs	r0, r0
     e50:	e063      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
     e52:	075b      	lsls	r3, r3, #29
     e54:	d40b      	bmi.n	e6e <_sercom_i2c_sync_send_address+0x9e>
			if (msg->len == 0) {
     e56:	6868      	ldr	r0, [r5, #4]
     e58:	2800      	cmp	r0, #0
     e5a:	d12d      	bne.n	eb8 <_sercom_i2c_sync_send_address+0xe8>
				if (msg->flags & I2C_M_STOP) {
     e5c:	886b      	ldrh	r3, [r5, #2]
     e5e:	b21b      	sxth	r3, r3
     e60:	2b00      	cmp	r3, #0
     e62:	db20      	blt.n	ea6 <_sercom_i2c_sync_send_address+0xd6>
				msg->flags &= ~I2C_M_BUSY;
     e64:	886b      	ldrh	r3, [r5, #2]
     e66:	4a3e      	ldr	r2, [pc, #248]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     e68:	4013      	ands	r3, r2
     e6a:	806b      	strh	r3, [r5, #2]
     e6c:	e055      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
				if (msg->len > 0) {
     e6e:	686b      	ldr	r3, [r5, #4]
     e70:	2b00      	cmp	r3, #0
     e72:	dd04      	ble.n	e7e <_sercom_i2c_sync_send_address+0xae>
					msg->flags |= I2C_M_FAIL;
     e74:	886b      	ldrh	r3, [r5, #2]
     e76:	2280      	movs	r2, #128	; 0x80
     e78:	0152      	lsls	r2, r2, #5
     e7a:	4313      	orrs	r3, r2
     e7c:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
     e7e:	886b      	ldrh	r3, [r5, #2]
     e80:	b21b      	sxth	r3, r3
     e82:	2b00      	cmp	r3, #0
     e84:	db06      	blt.n	e94 <_sercom_i2c_sync_send_address+0xc4>
				msg->flags &= ~I2C_M_BUSY;
     e86:	886b      	ldrh	r3, [r5, #2]
     e88:	4a35      	ldr	r2, [pc, #212]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     e8a:	4013      	ands	r3, r2
     e8c:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
     e8e:	2002      	movs	r0, #2
     e90:	4240      	negs	r0, r0
     e92:	e042      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     e94:	6862      	ldr	r2, [r4, #4]
     e96:	23c0      	movs	r3, #192	; 0xc0
     e98:	029b      	lsls	r3, r3, #10
     e9a:	4313      	orrs	r3, r2
     e9c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     e9e:	8a23      	ldrh	r3, [r4, #16]
     ea0:	0bdb      	lsrs	r3, r3, #15
     ea2:	d1fc      	bne.n	e9e <_sercom_i2c_sync_send_address+0xce>
     ea4:	e7ef      	b.n	e86 <_sercom_i2c_sync_send_address+0xb6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     ea6:	6862      	ldr	r2, [r4, #4]
     ea8:	23c0      	movs	r3, #192	; 0xc0
     eaa:	029b      	lsls	r3, r3, #10
     eac:	4313      	orrs	r3, r2
     eae:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     eb0:	8a23      	ldrh	r3, [r4, #16]
     eb2:	0bdb      	lsrs	r3, r3, #15
     eb4:	d1fc      	bne.n	eb0 <_sercom_i2c_sync_send_address+0xe0>
     eb6:	e7d5      	b.n	e64 <_sercom_i2c_sync_send_address+0x94>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
     eb8:	68ab      	ldr	r3, [r5, #8]
     eba:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
     ebc:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
     ebe:	68ab      	ldr	r3, [r5, #8]
     ec0:	3301      	adds	r3, #1
     ec2:	60ab      	str	r3, [r5, #8]
				msg->len--;
     ec4:	686b      	ldr	r3, [r5, #4]
     ec6:	3b01      	subs	r3, #1
     ec8:	606b      	str	r3, [r5, #4]
			return I2C_OK;
     eca:	2000      	movs	r0, #0
     ecc:	e025      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
	} else if (flags & SB_FLAG) {
     ece:	0782      	lsls	r2, r0, #30
     ed0:	d53c      	bpl.n	f4c <_sercom_i2c_sync_send_address+0x17c>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
     ed2:	686a      	ldr	r2, [r5, #4]
     ed4:	2a00      	cmp	r2, #0
     ed6:	d031      	beq.n	f3c <_sercom_i2c_sync_send_address+0x16c>
     ed8:	075b      	lsls	r3, r3, #29
     eda:	d42f      	bmi.n	f3c <_sercom_i2c_sync_send_address+0x16c>
			msg->len--;
     edc:	3a01      	subs	r2, #1
     ede:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
     ee0:	2a00      	cmp	r2, #0
     ee2:	d107      	bne.n	ef4 <_sercom_i2c_sync_send_address+0x124>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     ee4:	6862      	ldr	r2, [r4, #4]
     ee6:	2380      	movs	r3, #128	; 0x80
     ee8:	02db      	lsls	r3, r3, #11
     eea:	4313      	orrs	r3, r2
     eec:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     eee:	8a23      	ldrh	r3, [r4, #16]
     ef0:	0bdb      	lsrs	r3, r3, #15
     ef2:	d1fc      	bne.n	eee <_sercom_i2c_sync_send_address+0x11e>
			if (msg->len == 0) {
     ef4:	686b      	ldr	r3, [r5, #4]
     ef6:	2b00      	cmp	r3, #0
     ef8:	d107      	bne.n	f0a <_sercom_i2c_sync_send_address+0x13a>
				if (msg->flags & I2C_M_STOP) {
     efa:	886b      	ldrh	r3, [r5, #2]
     efc:	b21b      	sxth	r3, r3
     efe:	2b00      	cmp	r3, #0
     f00:	db0c      	blt.n	f1c <_sercom_i2c_sync_send_address+0x14c>
				msg->flags &= ~I2C_M_BUSY;
     f02:	886b      	ldrh	r3, [r5, #2]
     f04:	4a16      	ldr	r2, [pc, #88]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     f06:	4013      	ands	r3, r2
     f08:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
     f0a:	68ab      	ldr	r3, [r5, #8]
     f0c:	1c5a      	adds	r2, r3, #1
     f0e:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
     f10:	7e22      	ldrb	r2, [r4, #24]
     f12:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     f14:	2302      	movs	r3, #2
     f16:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
     f18:	2000      	movs	r0, #0
}
     f1a:	bd70      	pop	{r4, r5, r6, pc}
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
     f1c:	6863      	ldr	r3, [r4, #4]
     f1e:	4a10      	ldr	r2, [pc, #64]	; (f60 <_sercom_i2c_sync_send_address+0x190>)
     f20:	4013      	ands	r3, r2
     f22:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     f24:	8a23      	ldrh	r3, [r4, #16]
     f26:	0bdb      	lsrs	r3, r3, #15
     f28:	d1fc      	bne.n	f24 <_sercom_i2c_sync_send_address+0x154>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
     f2a:	6862      	ldr	r2, [r4, #4]
     f2c:	23c0      	movs	r3, #192	; 0xc0
     f2e:	029b      	lsls	r3, r3, #10
     f30:	4313      	orrs	r3, r2
     f32:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     f34:	8a23      	ldrh	r3, [r4, #16]
     f36:	0bdb      	lsrs	r3, r3, #15
     f38:	d1fc      	bne.n	f34 <_sercom_i2c_sync_send_address+0x164>
     f3a:	e7e2      	b.n	f02 <_sercom_i2c_sync_send_address+0x132>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     f3c:	2302      	movs	r3, #2
     f3e:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
     f40:	2002      	movs	r0, #2
     f42:	4240      	negs	r0, r0
     f44:	e7e9      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
			return I2C_ERR_BAD_ADDRESS;
     f46:	2004      	movs	r0, #4
     f48:	4240      	negs	r0, r0
     f4a:	e7e6      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
	return I2C_OK;
     f4c:	2000      	movs	r0, #0
	return _sercom_i2c_sync_analyse_flags(hw, flags, msg);
     f4e:	e7e4      	b.n	f1a <_sercom_i2c_sync_send_address+0x14a>
     f50:	00000581 	.word	0x00000581
     f54:	0000d584 	.word	0x0000d584
     f58:	fffbffff 	.word	0xfffbffff
     f5c:	0000ffff 	.word	0x0000ffff
     f60:	fffffeff 	.word	0xfffffeff

00000f64 <_usart_sync_init>:
{
     f64:	b570      	push	{r4, r5, r6, lr}
     f66:	0005      	movs	r5, r0
     f68:	000c      	movs	r4, r1
	ASSERT(device);
     f6a:	1e43      	subs	r3, r0, #1
     f6c:	4198      	sbcs	r0, r3
     f6e:	b2c0      	uxtb	r0, r0
     f70:	22a1      	movs	r2, #161	; 0xa1
     f72:	4904      	ldr	r1, [pc, #16]	; (f84 <_usart_sync_init+0x20>)
     f74:	f7ff fcc0 	bl	8f8 <assert>
	device->hw = hw;
     f78:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
     f7a:	0020      	movs	r0, r4
     f7c:	f7ff fed2 	bl	d24 <_usart_init>
}
     f80:	bd70      	pop	{r4, r5, r6, pc}
     f82:	46c0      	nop			; (mov r8, r8)
     f84:	0000d584 	.word	0x0000d584

00000f88 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
     f88:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
     f8a:	6813      	ldr	r3, [r2, #0]
     f8c:	2102      	movs	r1, #2
     f8e:	430b      	orrs	r3, r1
     f90:	6013      	str	r3, [r2, #0]
	while (((const Sercom *)hw)->USART.STATUS.bit.SYNCBUSY)
     f92:	8a13      	ldrh	r3, [r2, #16]
     f94:	0bdb      	lsrs	r3, r3, #15
     f96:	d1fc      	bne.n	f92 <_usart_sync_enable+0xa>
}
     f98:	4770      	bx	lr

00000f9a <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
     f9a:	6803      	ldr	r3, [r0, #0]
     f9c:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
     f9e:	8319      	strh	r1, [r3, #24]
}
     fa0:	4770      	bx	lr

00000fa2 <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
     fa2:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
     fa4:	8b18      	ldrh	r0, [r3, #24]
     fa6:	b2c0      	uxtb	r0, r0
}
     fa8:	4770      	bx	lr

00000faa <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
     faa:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
     fac:	7b98      	ldrb	r0, [r3, #14]
     fae:	2301      	movs	r3, #1
     fb0:	4018      	ands	r0, r3
}
     fb2:	4770      	bx	lr

00000fb4 <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
     fb4:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
     fb6:	7b9b      	ldrb	r3, [r3, #14]
     fb8:	085b      	lsrs	r3, r3, #1
     fba:	2001      	movs	r0, #1
     fbc:	4018      	ands	r0, r3
}
     fbe:	4770      	bx	lr

00000fc0 <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
     fc0:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
     fc2:	7b9b      	ldrb	r3, [r3, #14]
     fc4:	089b      	lsrs	r3, r3, #2
     fc6:	2001      	movs	r0, #1
     fc8:	4018      	ands	r0, r3
}
     fca:	4770      	bx	lr

00000fcc <_i2c_m_sync_init>:
{
     fcc:	b570      	push	{r4, r5, r6, lr}
     fce:	0006      	movs	r6, r0
     fd0:	000c      	movs	r4, r1
	uint8_t i = _get_i2cm_index(hw);
     fd2:	0008      	movs	r0, r1
     fd4:	f7ff fede 	bl	d94 <_get_i2cm_index>
     fd8:	0005      	movs	r5, r0
	ASSERT(i2c_dev);
     fda:	0030      	movs	r0, r6
     fdc:	1e43      	subs	r3, r0, #1
     fde:	4198      	sbcs	r0, r3
     fe0:	b2c0      	uxtb	r0, r0
     fe2:	4a20      	ldr	r2, [pc, #128]	; (1064 <_i2c_m_sync_init+0x98>)
     fe4:	4920      	ldr	r1, [pc, #128]	; (1068 <_i2c_m_sync_init+0x9c>)
     fe6:	f7ff fc87 	bl	8f8 <assert>
	i2c_dev->hw = hw;
     fea:	6134      	str	r4, [r6, #16]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
     fec:	8a23      	ldrh	r3, [r4, #16]
     fee:	0bdb      	lsrs	r3, r3, #15
     ff0:	d1fc      	bne.n	fec <_i2c_m_sync_init+0x20>
     ff2:	8a23      	ldrh	r3, [r4, #16]
     ff4:	0bdb      	lsrs	r3, r3, #15
     ff6:	d1fc      	bne.n	ff2 <_i2c_m_sync_init+0x26>
	tmp = ((Sercom *)hw)->I2CM.CTRLA.reg;
     ff8:	6823      	ldr	r3, [r4, #0]
	if (hri_sercomi2cm_get_CTRLA_reg(hw, SERCOM_I2CM_CTRLA_ENABLE)) {
     ffa:	079b      	lsls	r3, r3, #30
     ffc:	d507      	bpl.n	100e <_i2c_m_sync_init+0x42>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
     ffe:	2300      	movs	r3, #0
    1000:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1002:	8a23      	ldrh	r3, [r4, #16]
    1004:	0bdb      	lsrs	r3, r3, #15
    1006:	d1fc      	bne.n	1002 <_i2c_m_sync_init+0x36>
    1008:	8a23      	ldrh	r3, [r4, #16]
    100a:	0bdb      	lsrs	r3, r3, #15
    100c:	d1fc      	bne.n	1008 <_i2c_m_sync_init+0x3c>
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    100e:	2301      	movs	r3, #1
    1010:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1012:	8a23      	ldrh	r3, [r4, #16]
    1014:	0bdb      	lsrs	r3, r3, #15
    1016:	d1fc      	bne.n	1012 <_i2c_m_sync_init+0x46>
    1018:	8a23      	ldrh	r3, [r4, #16]
    101a:	0bdb      	lsrs	r3, r3, #15
    101c:	d1fc      	bne.n	1018 <_i2c_m_sync_init+0x4c>
	hri_sercomi2cm_write_CTRLA_reg(hw, _i2cms[i].ctrl_a & ~SERCOM_I2CM_CTRLA_ENABLE);
    101e:	006b      	lsls	r3, r5, #1
    1020:	195b      	adds	r3, r3, r5
    1022:	00da      	lsls	r2, r3, #3
    1024:	4b11      	ldr	r3, [pc, #68]	; (106c <_i2c_m_sync_init+0xa0>)
    1026:	189b      	adds	r3, r3, r2
    1028:	685b      	ldr	r3, [r3, #4]
    102a:	2202      	movs	r2, #2
    102c:	4393      	bics	r3, r2
	((Sercom *)hw)->I2CM.CTRLA.reg = data;
    102e:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1030:	8a23      	ldrh	r3, [r4, #16]
    1032:	0bdb      	lsrs	r3, r3, #15
    1034:	d1fc      	bne.n	1030 <_i2c_m_sync_init+0x64>
	hri_sercomi2cm_write_CTRLB_reg(hw, _i2cms[i].ctrl_b);
    1036:	006b      	lsls	r3, r5, #1
    1038:	195b      	adds	r3, r3, r5
    103a:	00da      	lsls	r2, r3, #3
    103c:	4b0b      	ldr	r3, [pc, #44]	; (106c <_i2c_m_sync_init+0xa0>)
    103e:	189b      	adds	r3, r3, r2
    1040:	689b      	ldr	r3, [r3, #8]
	((Sercom *)hw)->I2CM.CTRLB.reg = data;
    1042:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1044:	8a23      	ldrh	r3, [r4, #16]
    1046:	0bdb      	lsrs	r3, r3, #15
    1048:	d1fc      	bne.n	1044 <_i2c_m_sync_init+0x78>
	hri_sercomi2cm_write_BAUD_reg(hw, _i2cms[i].baud);
    104a:	4a08      	ldr	r2, [pc, #32]	; (106c <_i2c_m_sync_init+0xa0>)
    104c:	006b      	lsls	r3, r5, #1
    104e:	1958      	adds	r0, r3, r5
    1050:	00c1      	lsls	r1, r0, #3
    1052:	0008      	movs	r0, r1
    1054:	1851      	adds	r1, r2, r1
    1056:	8989      	ldrh	r1, [r1, #12]
	((Sercom *)hw)->I2CM.BAUD.reg = data;
    1058:	8161      	strh	r1, [r4, #10]
	i2c_dev->service.trise = _i2cms[i].trise;
    105a:	1812      	adds	r2, r2, r0
    105c:	8a13      	ldrh	r3, [r2, #16]
    105e:	81f3      	strh	r3, [r6, #14]
}
    1060:	2000      	movs	r0, #0
    1062:	bd70      	pop	{r4, r5, r6, pc}
    1064:	000004d7 	.word	0x000004d7
    1068:	0000d584 	.word	0x0000d584
    106c:	0000d5a0 	.word	0x0000d5a0

00001070 <_i2c_m_sync_enable>:
{
    1070:	b570      	push	{r4, r5, r6, lr}
    1072:	0006      	movs	r6, r0
	void *hw              = i2c_dev->hw;
    1074:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    1076:	4d18      	ldr	r5, [pc, #96]	; (10d8 <_i2c_m_sync_enable+0x68>)
    1078:	1e43      	subs	r3, r0, #1
    107a:	4198      	sbcs	r0, r3
    107c:	b2c0      	uxtb	r0, r0
    107e:	22a1      	movs	r2, #161	; 0xa1
    1080:	00d2      	lsls	r2, r2, #3
    1082:	0029      	movs	r1, r5
    1084:	f7ff fc38 	bl	8f8 <assert>
	ASSERT(i2c_dev->hw);
    1088:	6930      	ldr	r0, [r6, #16]
    108a:	1e43      	subs	r3, r0, #1
    108c:	4198      	sbcs	r0, r3
    108e:	b2c0      	uxtb	r0, r0
    1090:	4a12      	ldr	r2, [pc, #72]	; (10dc <_i2c_m_sync_enable+0x6c>)
    1092:	0029      	movs	r1, r5
    1094:	f7ff fc30 	bl	8f8 <assert>
	((Sercom *)hw)->I2CM.CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    1098:	6823      	ldr	r3, [r4, #0]
    109a:	2202      	movs	r2, #2
    109c:	4313      	orrs	r3, r2
    109e:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    10a0:	8a23      	ldrh	r3, [r4, #16]
    10a2:	0bdb      	lsrs	r3, r3, #15
    10a4:	d1fc      	bne.n	10a0 <_i2c_m_sync_enable+0x30>
    10a6:	2004      	movs	r0, #4
    10a8:	490d      	ldr	r1, [pc, #52]	; (10e0 <_i2c_m_sync_enable+0x70>)
    10aa:	8a23      	ldrh	r3, [r4, #16]
    10ac:	0bdb      	lsrs	r3, r3, #15
    10ae:	d1fc      	bne.n	10aa <_i2c_m_sync_enable+0x3a>
	return (((Sercom *)hw)->I2CM.STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE_Msk) >> SERCOM_I2CM_STATUS_BUSSTATE_Pos;
    10b0:	8a22      	ldrh	r2, [r4, #16]
    10b2:	0912      	lsrs	r2, r2, #4
    10b4:	3303      	adds	r3, #3
    10b6:	4013      	ands	r3, r2
	while (hri_sercomi2cm_read_STATUS_BUSSTATE_bf(hw) != I2C_IDLE) {
    10b8:	2b01      	cmp	r3, #1
    10ba:	d008      	beq.n	10ce <_i2c_m_sync_enable+0x5e>
		timeout--;
    10bc:	3901      	subs	r1, #1
		if (timeout <= 0) {
    10be:	2900      	cmp	r1, #0
    10c0:	dcf3      	bgt.n	10aa <_i2c_m_sync_enable+0x3a>
			if (--timeout_attempt)
    10c2:	3801      	subs	r0, #1
    10c4:	2800      	cmp	r0, #0
    10c6:	d004      	beq.n	10d2 <_i2c_m_sync_enable+0x62>
			((Sercom *)hw)->I2CM.STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(I2C_IDLE);
    10c8:	2310      	movs	r3, #16
    10ca:	8223      	strh	r3, [r4, #16]
    10cc:	e7ec      	b.n	10a8 <_i2c_m_sync_enable+0x38>
	return ERR_NONE;
    10ce:	2000      	movs	r0, #0
}
    10d0:	bd70      	pop	{r4, r5, r6, pc}
				return I2C_ERR_BUSY;
    10d2:	2006      	movs	r0, #6
    10d4:	4240      	negs	r0, r0
    10d6:	e7fb      	b.n	10d0 <_i2c_m_sync_enable+0x60>
    10d8:	0000d584 	.word	0x0000d584
    10dc:	00000509 	.word	0x00000509
    10e0:	0000ffff 	.word	0x0000ffff

000010e4 <_i2c_m_sync_transfer>:
{
    10e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    10e6:	0005      	movs	r5, r0
    10e8:	000e      	movs	r6, r1
	void *   hw = i2c_dev->hw;
    10ea:	6904      	ldr	r4, [r0, #16]
	ASSERT(i2c_dev);
    10ec:	4f7d      	ldr	r7, [pc, #500]	; (12e4 <_i2c_m_sync_transfer+0x200>)
    10ee:	1e43      	subs	r3, r0, #1
    10f0:	4198      	sbcs	r0, r3
    10f2:	b2c0      	uxtb	r0, r0
    10f4:	4a7c      	ldr	r2, [pc, #496]	; (12e8 <_i2c_m_sync_transfer+0x204>)
    10f6:	0039      	movs	r1, r7
    10f8:	f7ff fbfe 	bl	8f8 <assert>
	ASSERT(i2c_dev->hw);
    10fc:	6928      	ldr	r0, [r5, #16]
    10fe:	1e43      	subs	r3, r0, #1
    1100:	4198      	sbcs	r0, r3
    1102:	b2c0      	uxtb	r0, r0
    1104:	4a79      	ldr	r2, [pc, #484]	; (12ec <_i2c_m_sync_transfer+0x208>)
    1106:	0039      	movs	r1, r7
    1108:	f7ff fbf6 	bl	8f8 <assert>
	ASSERT(msg);
    110c:	0030      	movs	r0, r6
    110e:	1e43      	subs	r3, r0, #1
    1110:	4198      	sbcs	r0, r3
    1112:	b2c0      	uxtb	r0, r0
    1114:	4a76      	ldr	r2, [pc, #472]	; (12f0 <_i2c_m_sync_transfer+0x20c>)
    1116:	0039      	movs	r1, r7
    1118:	f7ff fbee 	bl	8f8 <assert>
	if (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    111c:	886b      	ldrh	r3, [r5, #2]
    111e:	05db      	lsls	r3, r3, #23
    1120:	d500      	bpl.n	1124 <_i2c_m_sync_transfer+0x40>
    1122:	e0dc      	b.n	12de <_i2c_m_sync_transfer+0x1fa>
	msg->flags |= I2C_M_BUSY;
    1124:	8872      	ldrh	r2, [r6, #2]
    1126:	2380      	movs	r3, #128	; 0x80
    1128:	005b      	lsls	r3, r3, #1
    112a:	469c      	mov	ip, r3
    112c:	431a      	orrs	r2, r3
    112e:	8072      	strh	r2, [r6, #2]
	i2c_dev->service.msg = *msg;
    1130:	002a      	movs	r2, r5
    1132:	0031      	movs	r1, r6
    1134:	c989      	ldmia	r1!, {r0, r3, r7}
    1136:	c289      	stmia	r2!, {r0, r3, r7}
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_SMEN;
    1138:	6862      	ldr	r2, [r4, #4]
    113a:	4663      	mov	r3, ip
    113c:	4313      	orrs	r3, r2
    113e:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1140:	8a23      	ldrh	r3, [r4, #16]
    1142:	0bdb      	lsrs	r3, r3, #15
    1144:	d1fc      	bne.n	1140 <_i2c_m_sync_transfer+0x5c>
	ret = _sercom_i2c_sync_send_address(i2c_dev);
    1146:	0028      	movs	r0, r5
    1148:	f7ff fe42 	bl	dd0 <_sercom_i2c_sync_send_address>
	if (ret) {
    114c:	2800      	cmp	r0, #0
    114e:	d100      	bne.n	1152 <_i2c_m_sync_transfer+0x6e>
    1150:	e07d      	b.n	124e <_i2c_m_sync_transfer+0x16a>
		i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    1152:	886b      	ldrh	r3, [r5, #2]
    1154:	4a67      	ldr	r2, [pc, #412]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    1156:	4013      	ands	r3, r2
    1158:	806b      	strh	r3, [r5, #2]
}
    115a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return I2C_ERR_BUS;
    115c:	2005      	movs	r0, #5
    115e:	4240      	negs	r0, r0
    1160:	e086      	b.n	1270 <_i2c_m_sync_transfer+0x18c>
			if (msg->flags & I2C_M_STOP) {
    1162:	8873      	ldrh	r3, [r6, #2]
    1164:	b21b      	sxth	r3, r3
    1166:	2b00      	cmp	r3, #0
    1168:	db04      	blt.n	1174 <_i2c_m_sync_transfer+0x90>
			i2c_dev->service.msg.flags &= ~I2C_M_BUSY;
    116a:	886b      	ldrh	r3, [r5, #2]
    116c:	4a61      	ldr	r2, [pc, #388]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    116e:	4013      	ands	r3, r2
    1170:	806b      	strh	r3, [r5, #2]
			return ret;
    1172:	e7f2      	b.n	115a <_i2c_m_sync_transfer+0x76>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    1174:	6862      	ldr	r2, [r4, #4]
    1176:	23c0      	movs	r3, #192	; 0xc0
    1178:	029b      	lsls	r3, r3, #10
    117a:	4313      	orrs	r3, r2
    117c:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    117e:	8a23      	ldrh	r3, [r4, #16]
    1180:	0bdb      	lsrs	r3, r3, #15
    1182:	d1fc      	bne.n	117e <_i2c_m_sync_transfer+0x9a>
    1184:	e7f1      	b.n	116a <_i2c_m_sync_transfer+0x86>
			if (status & SERCOM_I2CM_STATUS_RXNACK) {
    1186:	075b      	lsls	r3, r3, #29
    1188:	d40b      	bmi.n	11a2 <_i2c_m_sync_transfer+0xbe>
			if (msg->len == 0) {
    118a:	6868      	ldr	r0, [r5, #4]
    118c:	2800      	cmp	r0, #0
    118e:	d12d      	bne.n	11ec <_i2c_m_sync_transfer+0x108>
				if (msg->flags & I2C_M_STOP) {
    1190:	886b      	ldrh	r3, [r5, #2]
    1192:	b21b      	sxth	r3, r3
    1194:	2b00      	cmp	r3, #0
    1196:	db20      	blt.n	11da <_i2c_m_sync_transfer+0xf6>
				msg->flags &= ~I2C_M_BUSY;
    1198:	886b      	ldrh	r3, [r5, #2]
    119a:	4a56      	ldr	r2, [pc, #344]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    119c:	4013      	ands	r3, r2
    119e:	806b      	strh	r3, [r5, #2]
    11a0:	e055      	b.n	124e <_i2c_m_sync_transfer+0x16a>
				if (msg->len > 0) {
    11a2:	686b      	ldr	r3, [r5, #4]
    11a4:	2b00      	cmp	r3, #0
    11a6:	dd04      	ble.n	11b2 <_i2c_m_sync_transfer+0xce>
					msg->flags |= I2C_M_FAIL;
    11a8:	886b      	ldrh	r3, [r5, #2]
    11aa:	2280      	movs	r2, #128	; 0x80
    11ac:	0152      	lsls	r2, r2, #5
    11ae:	4313      	orrs	r3, r2
    11b0:	806b      	strh	r3, [r5, #2]
				if (msg->flags & I2C_M_STOP) {
    11b2:	886b      	ldrh	r3, [r5, #2]
    11b4:	b21b      	sxth	r3, r3
    11b6:	2b00      	cmp	r3, #0
    11b8:	db06      	blt.n	11c8 <_i2c_m_sync_transfer+0xe4>
				msg->flags &= ~I2C_M_BUSY;
    11ba:	886b      	ldrh	r3, [r5, #2]
    11bc:	4a4d      	ldr	r2, [pc, #308]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    11be:	4013      	ands	r3, r2
    11c0:	806b      	strh	r3, [r5, #2]
				return I2C_NACK;
    11c2:	2002      	movs	r0, #2
    11c4:	4240      	negs	r0, r0
    11c6:	e042      	b.n	124e <_i2c_m_sync_transfer+0x16a>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    11c8:	6862      	ldr	r2, [r4, #4]
    11ca:	23c0      	movs	r3, #192	; 0xc0
    11cc:	029b      	lsls	r3, r3, #10
    11ce:	4313      	orrs	r3, r2
    11d0:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    11d2:	8a23      	ldrh	r3, [r4, #16]
    11d4:	0bdb      	lsrs	r3, r3, #15
    11d6:	d1fc      	bne.n	11d2 <_i2c_m_sync_transfer+0xee>
    11d8:	e7ef      	b.n	11ba <_i2c_m_sync_transfer+0xd6>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    11da:	6862      	ldr	r2, [r4, #4]
    11dc:	23c0      	movs	r3, #192	; 0xc0
    11de:	029b      	lsls	r3, r3, #10
    11e0:	4313      	orrs	r3, r2
    11e2:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    11e4:	8a23      	ldrh	r3, [r4, #16]
    11e6:	0bdb      	lsrs	r3, r3, #15
    11e8:	d1fc      	bne.n	11e4 <_i2c_m_sync_transfer+0x100>
    11ea:	e7d5      	b.n	1198 <_i2c_m_sync_transfer+0xb4>
				hri_sercomi2cm_write_DATA_reg(hw, *msg->buffer);
    11ec:	68ab      	ldr	r3, [r5, #8]
    11ee:	781b      	ldrb	r3, [r3, #0]
	((Sercom *)hw)->I2CM.DATA.reg = data;
    11f0:	7623      	strb	r3, [r4, #24]
				msg->buffer++;
    11f2:	68ab      	ldr	r3, [r5, #8]
    11f4:	3301      	adds	r3, #1
    11f6:	60ab      	str	r3, [r5, #8]
				msg->len--;
    11f8:	686b      	ldr	r3, [r5, #4]
    11fa:	3b01      	subs	r3, #1
    11fc:	606b      	str	r3, [r5, #4]
			return I2C_OK;
    11fe:	2000      	movs	r0, #0
    1200:	e025      	b.n	124e <_i2c_m_sync_transfer+0x16a>
	} else if (flags & SB_FLAG) {
    1202:	078a      	lsls	r2, r1, #30
    1204:	d569      	bpl.n	12da <_i2c_m_sync_transfer+0x1f6>
		if ((msg->len) && !(status & SERCOM_I2CM_STATUS_RXNACK)) {
    1206:	686a      	ldr	r2, [r5, #4]
    1208:	2a00      	cmp	r2, #0
    120a:	d05e      	beq.n	12ca <_i2c_m_sync_transfer+0x1e6>
    120c:	075b      	lsls	r3, r3, #29
    120e:	d45c      	bmi.n	12ca <_i2c_m_sync_transfer+0x1e6>
			msg->len--;
    1210:	3a01      	subs	r2, #1
    1212:	606a      	str	r2, [r5, #4]
			if (msg->len == 0) {
    1214:	2a00      	cmp	r2, #0
    1216:	d107      	bne.n	1228 <_i2c_m_sync_transfer+0x144>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
    1218:	6862      	ldr	r2, [r4, #4]
    121a:	2380      	movs	r3, #128	; 0x80
    121c:	02db      	lsls	r3, r3, #11
    121e:	4313      	orrs	r3, r2
    1220:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1222:	8a23      	ldrh	r3, [r4, #16]
    1224:	0bdb      	lsrs	r3, r3, #15
    1226:	d1fc      	bne.n	1222 <_i2c_m_sync_transfer+0x13e>
			if (msg->len == 0) {
    1228:	686b      	ldr	r3, [r5, #4]
    122a:	2b00      	cmp	r3, #0
    122c:	d107      	bne.n	123e <_i2c_m_sync_transfer+0x15a>
				if (msg->flags & I2C_M_STOP) {
    122e:	886b      	ldrh	r3, [r5, #2]
    1230:	b21b      	sxth	r3, r3
    1232:	2b00      	cmp	r3, #0
    1234:	db39      	blt.n	12aa <_i2c_m_sync_transfer+0x1c6>
				msg->flags &= ~I2C_M_BUSY;
    1236:	886b      	ldrh	r3, [r5, #2]
    1238:	4a2e      	ldr	r2, [pc, #184]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    123a:	4013      	ands	r3, r2
    123c:	806b      	strh	r3, [r5, #2]
			*msg->buffer++ = hri_sercomi2cm_read_DATA_reg(hw);
    123e:	68ab      	ldr	r3, [r5, #8]
    1240:	1c5a      	adds	r2, r3, #1
    1242:	60aa      	str	r2, [r5, #8]
	return ((Sercom *)hw)->I2CM.DATA.reg;
    1244:	7e22      	ldrb	r2, [r4, #24]
    1246:	701a      	strb	r2, [r3, #0]
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    1248:	2302      	movs	r3, #2
    124a:	73a3      	strb	r3, [r4, #14]
	return I2C_OK;
    124c:	2000      	movs	r0, #0
	while (i2c_dev->service.msg.flags & I2C_M_BUSY) {
    124e:	886b      	ldrh	r3, [r5, #2]
    1250:	05db      	lsls	r3, r3, #23
    1252:	d400      	bmi.n	1256 <_i2c_m_sync_transfer+0x172>
    1254:	e781      	b.n	115a <_i2c_m_sync_transfer+0x76>
	void *   hw      = i2c_dev->hw;
    1256:	692f      	ldr	r7, [r5, #16]
	uint32_t timeout = 65535;
    1258:	4a27      	ldr	r2, [pc, #156]	; (12f8 <_i2c_m_sync_transfer+0x214>)
	return ((Sercom *)hw)->I2CM.INTFLAG.reg;
    125a:	7bbb      	ldrb	r3, [r7, #14]
    125c:	b2db      	uxtb	r3, r3
		*flags = hri_sercomi2cm_read_INTFLAG_reg(hw);
    125e:	0019      	movs	r1, r3
		if (timeout-- == 0) {
    1260:	1e50      	subs	r0, r2, #1
    1262:	2a00      	cmp	r2, #0
    1264:	d100      	bne.n	1268 <_i2c_m_sync_transfer+0x184>
    1266:	e779      	b.n	115c <_i2c_m_sync_transfer+0x78>
    1268:	0002      	movs	r2, r0
	} while (!(*flags & MB_FLAG) && !(*flags & SB_FLAG));
    126a:	079b      	lsls	r3, r3, #30
    126c:	d0f5      	beq.n	125a <_i2c_m_sync_transfer+0x176>
	return I2C_OK;
    126e:	2000      	movs	r0, #0
		if (ret) {
    1270:	2800      	cmp	r0, #0
    1272:	d000      	beq.n	1276 <_i2c_m_sync_transfer+0x192>
    1274:	e775      	b.n	1162 <_i2c_m_sync_transfer+0x7e>
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    1276:	8a23      	ldrh	r3, [r4, #16]
    1278:	0bdb      	lsrs	r3, r3, #15
    127a:	d1fc      	bne.n	1276 <_i2c_m_sync_transfer+0x192>
	return ((Sercom *)hw)->I2CM.STATUS.reg;
    127c:	8a23      	ldrh	r3, [r4, #16]
    127e:	b29b      	uxth	r3, r3
	if (flags & MB_FLAG) {
    1280:	07ca      	lsls	r2, r1, #31
    1282:	d5be      	bpl.n	1202 <_i2c_m_sync_transfer+0x11e>
		if (status & SERCOM_I2CM_STATUS_ARBLOST) {
    1284:	079a      	lsls	r2, r3, #30
    1286:	d400      	bmi.n	128a <_i2c_m_sync_transfer+0x1a6>
    1288:	e77d      	b.n	1186 <_i2c_m_sync_transfer+0xa2>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
    128a:	2201      	movs	r2, #1
    128c:	73a2      	strb	r2, [r4, #14]
			msg->flags |= I2C_M_FAIL;
    128e:	886a      	ldrh	r2, [r5, #2]
    1290:	2180      	movs	r1, #128	; 0x80
    1292:	0149      	lsls	r1, r1, #5
    1294:	430a      	orrs	r2, r1
    1296:	806a      	strh	r2, [r5, #2]
			msg->flags &= ~I2C_M_BUSY;
    1298:	886a      	ldrh	r2, [r5, #2]
    129a:	4916      	ldr	r1, [pc, #88]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    129c:	400a      	ands	r2, r1
    129e:	806a      	strh	r2, [r5, #2]
			if (status & SERCOM_I2CM_STATUS_BUSERR) {
    12a0:	07db      	lsls	r3, r3, #31
    12a2:	d517      	bpl.n	12d4 <_i2c_m_sync_transfer+0x1f0>
				return I2C_ERR_BUS;
    12a4:	2005      	movs	r0, #5
    12a6:	4240      	negs	r0, r0
    12a8:	e7d1      	b.n	124e <_i2c_m_sync_transfer+0x16a>
	((Sercom *)hw)->I2CM.CTRLB.reg &= ~SERCOM_I2CM_CTRLB_SMEN;
    12aa:	6863      	ldr	r3, [r4, #4]
    12ac:	4a11      	ldr	r2, [pc, #68]	; (12f4 <_i2c_m_sync_transfer+0x210>)
    12ae:	4013      	ands	r3, r2
    12b0:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    12b2:	8a23      	ldrh	r3, [r4, #16]
    12b4:	0bdb      	lsrs	r3, r3, #15
    12b6:	d1fc      	bne.n	12b2 <_i2c_m_sync_transfer+0x1ce>
	((Sercom *)hw)->I2CM.CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(mask);
    12b8:	6862      	ldr	r2, [r4, #4]
    12ba:	23c0      	movs	r3, #192	; 0xc0
    12bc:	029b      	lsls	r3, r3, #10
    12be:	4313      	orrs	r3, r2
    12c0:	6063      	str	r3, [r4, #4]
	while (((const Sercom *)hw)->I2CM.STATUS.bit.SYNCBUSY)
    12c2:	8a23      	ldrh	r3, [r4, #16]
    12c4:	0bdb      	lsrs	r3, r3, #15
    12c6:	d1fc      	bne.n	12c2 <_i2c_m_sync_transfer+0x1de>
    12c8:	e7b5      	b.n	1236 <_i2c_m_sync_transfer+0x152>
	((Sercom *)hw)->I2CM.INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
    12ca:	2302      	movs	r3, #2
    12cc:	73a3      	strb	r3, [r4, #14]
			return I2C_NACK;
    12ce:	2002      	movs	r0, #2
    12d0:	4240      	negs	r0, r0
    12d2:	e7bc      	b.n	124e <_i2c_m_sync_transfer+0x16a>
			return I2C_ERR_BAD_ADDRESS;
    12d4:	2004      	movs	r0, #4
    12d6:	4240      	negs	r0, r0
    12d8:	e7b9      	b.n	124e <_i2c_m_sync_transfer+0x16a>
	return I2C_OK;
    12da:	2000      	movs	r0, #0
    12dc:	e7b7      	b.n	124e <_i2c_m_sync_transfer+0x16a>
		return I2C_ERR_BUSY;
    12de:	2006      	movs	r0, #6
    12e0:	4240      	negs	r0, r0
    12e2:	e73a      	b.n	115a <_i2c_m_sync_transfer+0x76>
    12e4:	0000d584 	.word	0x0000d584
    12e8:	0000059b 	.word	0x0000059b
    12ec:	0000059c 	.word	0x0000059c
    12f0:	0000059d 	.word	0x0000059d
    12f4:	fffffeff 	.word	0xfffffeff
    12f8:	0000ffff 	.word	0x0000ffff

000012fc <_spi_m_sync_init>:

	return NULL;
}

int32_t _spi_m_sync_init(struct _spi_m_sync_dev *dev, void *const hw)
{
    12fc:	b570      	push	{r4, r5, r6, lr}
    12fe:	0006      	movs	r6, r0
    1300:	000c      	movs	r4, r1
	uint8_t n = _sercom_get_hardware_index((const void *)hw_addr);
    1302:	0008      	movs	r0, r1
    1304:	f7ff fcda 	bl	cbc <_sercom_get_hardware_index>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    1308:	2300      	movs	r3, #0
    130a:	2b01      	cmp	r3, #1
    130c:	d80b      	bhi.n	1326 <_spi_m_sync_init+0x2a>
		if (sercomspi_regs[i].n == n) {
    130e:	0119      	lsls	r1, r3, #4
    1310:	4a5f      	ldr	r2, [pc, #380]	; (1490 <_spi_m_sync_init+0x194>)
    1312:	1852      	adds	r2, r2, r1
    1314:	7bd2      	ldrb	r2, [r2, #15]
    1316:	4290      	cmp	r0, r2
    1318:	d002      	beq.n	1320 <_spi_m_sync_init+0x24>
	for (i = 0; i < sizeof(sercomspi_regs) / sizeof(struct sercomspi_regs_cfg); i++) {
    131a:	3301      	adds	r3, #1
    131c:	b2db      	uxtb	r3, r3
    131e:	e7f4      	b.n	130a <_spi_m_sync_init+0xe>
			return &sercomspi_regs[i];
    1320:	4b5b      	ldr	r3, [pc, #364]	; (1490 <_spi_m_sync_init+0x194>)
    1322:	185d      	adds	r5, r3, r1
    1324:	e000      	b.n	1328 <_spi_m_sync_init+0x2c>
	return NULL;
    1326:	2500      	movs	r5, #0
	const struct sercomspi_regs_cfg *regs = _spi_get_regs((uint32_t)hw);

	ASSERT(dev && hw);
    1328:	2e00      	cmp	r6, #0
    132a:	d100      	bne.n	132e <_spi_m_sync_init+0x32>
    132c:	e06a      	b.n	1404 <_spi_m_sync_init+0x108>
    132e:	2c00      	cmp	r4, #0
    1330:	d100      	bne.n	1334 <_spi_m_sync_init+0x38>
    1332:	e065      	b.n	1400 <_spi_m_sync_init+0x104>
    1334:	2001      	movs	r0, #1
    1336:	4a57      	ldr	r2, [pc, #348]	; (1494 <_spi_m_sync_init+0x198>)
    1338:	4957      	ldr	r1, [pc, #348]	; (1498 <_spi_m_sync_init+0x19c>)
    133a:	f7ff fadd 	bl	8f8 <assert>

	if (regs == NULL) {
    133e:	2d00      	cmp	r5, #0
    1340:	d100      	bne.n	1344 <_spi_m_sync_init+0x48>
    1342:	e0a2      	b.n	148a <_spi_m_sync_init+0x18e>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1344:	8a23      	ldrh	r3, [r4, #16]
    1346:	0bdb      	lsrs	r3, r3, #15
    1348:	d1fc      	bne.n	1344 <_spi_m_sync_init+0x48>
    134a:	8a23      	ldrh	r3, [r4, #16]
    134c:	0bdb      	lsrs	r3, r3, #15
    134e:	d1fc      	bne.n	134a <_spi_m_sync_init+0x4e>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    1350:	6823      	ldr	r3, [r4, #0]
		return ERR_INVALID_ARG;
	}

	hri_sercomspi_wait_for_sync(hw);
	if (hri_sercomspi_get_CTRLA_reg(hw, SERCOM_SPI_CTRLA_ENABLE)) {
    1352:	079b      	lsls	r3, r3, #30
    1354:	d507      	bpl.n	1366 <_spi_m_sync_init+0x6a>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1356:	2300      	movs	r3, #0
    1358:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    135a:	8a23      	ldrh	r3, [r4, #16]
    135c:	0bdb      	lsrs	r3, r3, #15
    135e:	d1fc      	bne.n	135a <_spi_m_sync_init+0x5e>
    1360:	8a23      	ldrh	r3, [r4, #16]
    1362:	0bdb      	lsrs	r3, r3, #15
    1364:	d1fc      	bne.n	1360 <_spi_m_sync_init+0x64>
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1366:	2301      	movs	r3, #1
    1368:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    136a:	8a23      	ldrh	r3, [r4, #16]
    136c:	0bdb      	lsrs	r3, r3, #15
    136e:	d1fc      	bne.n	136a <_spi_m_sync_init+0x6e>
    1370:	8a23      	ldrh	r3, [r4, #16]
    1372:	0bdb      	lsrs	r3, r3, #15
    1374:	d1fc      	bne.n	1370 <_spi_m_sync_init+0x74>
		hri_sercomspi_wait_for_sync(hw);
	}
	hri_sercomspi_write_CTRLA_reg(hw, SERCOM_SPI_CTRLA_SWRST);
	hri_sercomspi_wait_for_sync(hw);

	dev->prvt = hw;
    1376:	6034      	str	r4, [r6, #0]

	if ((regs->ctrla & SERCOM_SPI_CTRLA_MODE_Msk) == SERCOM_USART_CTRLA_MODE_SPI_SLAVE) {
    1378:	782b      	ldrb	r3, [r5, #0]
    137a:	786a      	ldrb	r2, [r5, #1]
    137c:	0212      	lsls	r2, r2, #8
    137e:	431a      	orrs	r2, r3
    1380:	78ab      	ldrb	r3, [r5, #2]
    1382:	041b      	lsls	r3, r3, #16
    1384:	431a      	orrs	r2, r3
    1386:	78eb      	ldrb	r3, [r5, #3]
    1388:	061b      	lsls	r3, r3, #24
    138a:	4313      	orrs	r3, r2
    138c:	221c      	movs	r2, #28
    138e:	4013      	ands	r3, r2
    1390:	2b08      	cmp	r3, #8
    1392:	d039      	beq.n	1408 <_spi_m_sync_init+0x10c>
	ASSERT(hw && regs);
    1394:	2c00      	cmp	r4, #0
    1396:	d100      	bne.n	139a <_spi_m_sync_init+0x9e>
    1398:	e073      	b.n	1482 <_spi_m_sync_init+0x186>
    139a:	2d00      	cmp	r5, #0
    139c:	d100      	bne.n	13a0 <_spi_m_sync_init+0xa4>
    139e:	e06e      	b.n	147e <_spi_m_sync_init+0x182>
    13a0:	2001      	movs	r0, #1
    13a2:	4a3e      	ldr	r2, [pc, #248]	; (149c <_spi_m_sync_init+0x1a0>)
    13a4:	493c      	ldr	r1, [pc, #240]	; (1498 <_spi_m_sync_init+0x19c>)
    13a6:	f7ff faa7 	bl	8f8 <assert>
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    13aa:	782b      	ldrb	r3, [r5, #0]
    13ac:	786a      	ldrb	r2, [r5, #1]
    13ae:	0212      	lsls	r2, r2, #8
    13b0:	431a      	orrs	r2, r3
    13b2:	78ab      	ldrb	r3, [r5, #2]
    13b4:	041b      	lsls	r3, r3, #16
    13b6:	431a      	orrs	r2, r3
    13b8:	78eb      	ldrb	r3, [r5, #3]
    13ba:	061b      	lsls	r3, r3, #24
    13bc:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    13be:	4a38      	ldr	r2, [pc, #224]	; (14a0 <_spi_m_sync_init+0x1a4>)
    13c0:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    13c2:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    13c4:	8a23      	ldrh	r3, [r4, #16]
    13c6:	0bdb      	lsrs	r3, r3, #15
    13c8:	d1fc      	bne.n	13c4 <_spi_m_sync_init+0xc8>
	    hw, (regs->ctrlb & ~(SERCOM_SPI_CTRLB_AMODE_Msk | SERCOM_SPI_CTRLB_PLOADEN)) | (SERCOM_SPI_CTRLB_RXEN));
    13ca:	792b      	ldrb	r3, [r5, #4]
    13cc:	796a      	ldrb	r2, [r5, #5]
    13ce:	0212      	lsls	r2, r2, #8
    13d0:	431a      	orrs	r2, r3
    13d2:	79ab      	ldrb	r3, [r5, #6]
    13d4:	041b      	lsls	r3, r3, #16
    13d6:	431a      	orrs	r2, r3
    13d8:	79eb      	ldrb	r3, [r5, #7]
    13da:	061b      	lsls	r3, r3, #24
    13dc:	4313      	orrs	r3, r2
    13de:	4a31      	ldr	r2, [pc, #196]	; (14a4 <_spi_m_sync_init+0x1a8>)
    13e0:	4013      	ands	r3, r2
	hri_sercomspi_write_CTRLB_reg(
    13e2:	2280      	movs	r2, #128	; 0x80
    13e4:	0292      	lsls	r2, r2, #10
    13e6:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    13e8:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_BAUD_reg(hw, regs->baud);
    13ea:	7b2b      	ldrb	r3, [r5, #12]
	((Sercom *)hw)->SPI.BAUD.reg = data;
    13ec:	72a3      	strb	r3, [r4, #10]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    13ee:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    13f0:	7223      	strb	r3, [r4, #8]
	} else {
		_spi_load_regs_master(hw, regs);
	}

	/* Load character size from default hardware configuration */
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    13f2:	792b      	ldrb	r3, [r5, #4]
    13f4:	075b      	lsls	r3, r3, #29
    13f6:	d146      	bne.n	1486 <_spi_m_sync_init+0x18a>
    13f8:	2301      	movs	r3, #1
    13fa:	7133      	strb	r3, [r6, #4]

	return ERR_NONE;
    13fc:	2000      	movs	r0, #0
}
    13fe:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(dev && hw);
    1400:	2000      	movs	r0, #0
    1402:	e798      	b.n	1336 <_spi_m_sync_init+0x3a>
    1404:	2000      	movs	r0, #0
    1406:	e796      	b.n	1336 <_spi_m_sync_init+0x3a>
	ASSERT(hw && regs);
    1408:	2c00      	cmp	r4, #0
    140a:	d036      	beq.n	147a <_spi_m_sync_init+0x17e>
    140c:	2d00      	cmp	r5, #0
    140e:	d032      	beq.n	1476 <_spi_m_sync_init+0x17a>
    1410:	2001      	movs	r0, #1
    1412:	4a25      	ldr	r2, [pc, #148]	; (14a8 <_spi_m_sync_init+0x1ac>)
    1414:	4920      	ldr	r1, [pc, #128]	; (1498 <_spi_m_sync_init+0x19c>)
    1416:	f7ff fa6f 	bl	8f8 <assert>
	    hw, regs->ctrla & ~(SERCOM_SPI_CTRLA_IBON | SERCOM_SPI_CTRLA_ENABLE | SERCOM_SPI_CTRLA_SWRST));
    141a:	782b      	ldrb	r3, [r5, #0]
    141c:	786a      	ldrb	r2, [r5, #1]
    141e:	0212      	lsls	r2, r2, #8
    1420:	431a      	orrs	r2, r3
    1422:	78ab      	ldrb	r3, [r5, #2]
    1424:	041b      	lsls	r3, r3, #16
    1426:	431a      	orrs	r2, r3
    1428:	78eb      	ldrb	r3, [r5, #3]
    142a:	061b      	lsls	r3, r3, #24
    142c:	4313      	orrs	r3, r2
	hri_sercomspi_write_CTRLA_reg(
    142e:	4a1c      	ldr	r2, [pc, #112]	; (14a0 <_spi_m_sync_init+0x1a4>)
    1430:	4013      	ands	r3, r2
	((Sercom *)hw)->SPI.CTRLA.reg = data;
    1432:	6023      	str	r3, [r4, #0]
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1434:	8a23      	ldrh	r3, [r4, #16]
    1436:	0bdb      	lsrs	r3, r3, #15
    1438:	d1fc      	bne.n	1434 <_spi_m_sync_init+0x138>
	hri_sercomspi_write_CTRLB_reg(hw, regs->ctrlb | (SERCOM_SPI_CTRLB_RXEN | SERCOM_SPI_CTRLB_PLOADEN));
    143a:	792b      	ldrb	r3, [r5, #4]
    143c:	796a      	ldrb	r2, [r5, #5]
    143e:	0212      	lsls	r2, r2, #8
    1440:	431a      	orrs	r2, r3
    1442:	79ab      	ldrb	r3, [r5, #6]
    1444:	041b      	lsls	r3, r3, #16
    1446:	431a      	orrs	r2, r3
    1448:	79eb      	ldrb	r3, [r5, #7]
    144a:	061b      	lsls	r3, r3, #24
    144c:	4313      	orrs	r3, r2
    144e:	4a17      	ldr	r2, [pc, #92]	; (14ac <_spi_m_sync_init+0x1b0>)
    1450:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.CTRLB.reg = data;
    1452:	6063      	str	r3, [r4, #4]
	hri_sercomspi_write_ADDR_reg(hw, regs->addr);
    1454:	7a2b      	ldrb	r3, [r5, #8]
    1456:	7a6a      	ldrb	r2, [r5, #9]
    1458:	0212      	lsls	r2, r2, #8
    145a:	431a      	orrs	r2, r3
    145c:	7aab      	ldrb	r3, [r5, #10]
    145e:	041b      	lsls	r3, r3, #16
    1460:	431a      	orrs	r2, r3
    1462:	7aeb      	ldrb	r3, [r5, #11]
    1464:	061b      	lsls	r3, r3, #24
    1466:	4313      	orrs	r3, r2
	((Sercom *)hw)->SPI.ADDR.reg = data;
    1468:	6163      	str	r3, [r4, #20]
	hri_sercomspi_write_DBGCTRL_reg(hw, regs->dbgctrl);
    146a:	7b6b      	ldrb	r3, [r5, #13]
	((Sercom *)hw)->SPI.DBGCTRL.reg = data;
    146c:	7223      	strb	r3, [r4, #8]
	return ((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY;
    146e:	8a23      	ldrh	r3, [r4, #16]
    1470:	0bdb      	lsrs	r3, r3, #15
	while (hri_sercomspi_is_syncing(hw))
    1472:	d1fc      	bne.n	146e <_spi_m_sync_init+0x172>
    1474:	e7bd      	b.n	13f2 <_spi_m_sync_init+0xf6>
	ASSERT(hw && regs);
    1476:	2000      	movs	r0, #0
    1478:	e7cb      	b.n	1412 <_spi_m_sync_init+0x116>
    147a:	2000      	movs	r0, #0
    147c:	e7c9      	b.n	1412 <_spi_m_sync_init+0x116>
	ASSERT(hw && regs);
    147e:	2000      	movs	r0, #0
    1480:	e78f      	b.n	13a2 <_spi_m_sync_init+0xa6>
    1482:	2000      	movs	r0, #0
    1484:	e78d      	b.n	13a2 <_spi_m_sync_init+0xa6>
	dev->char_size = ((regs->ctrlb & SERCOM_SPI_CTRLB_CHSIZE_Msk) == 0) ? 1 : 2;
    1486:	2302      	movs	r3, #2
    1488:	e7b7      	b.n	13fa <_spi_m_sync_init+0xfe>
		return ERR_INVALID_ARG;
    148a:	200d      	movs	r0, #13
    148c:	4240      	negs	r0, r0
    148e:	e7b6      	b.n	13fe <_spi_m_sync_init+0x102>
    1490:	0000d5c8 	.word	0x0000d5c8
    1494:	000008a3 	.word	0x000008a3
    1498:	0000d584 	.word	0x0000d584
    149c:	00000872 	.word	0x00000872
    14a0:	fffffefc 	.word	0xfffffefc
    14a4:	fffd3fbf 	.word	0xfffd3fbf
    14a8:	00000883 	.word	0x00000883
    14ac:	00020040 	.word	0x00020040

000014b0 <_spi_m_sync_enable>:

	return _spi_deinit(hw);
}

int32_t _spi_m_sync_enable(struct _spi_m_sync_dev *dev)
{
    14b0:	b510      	push	{r4, lr}
    14b2:	1e04      	subs	r4, r0, #0
	ASSERT(dev && dev->prvt);
    14b4:	d00d      	beq.n	14d2 <_spi_m_sync_enable+0x22>
    14b6:	6803      	ldr	r3, [r0, #0]
    14b8:	2b00      	cmp	r3, #0
    14ba:	d008      	beq.n	14ce <_spi_m_sync_enable+0x1e>
    14bc:	2001      	movs	r0, #1
    14be:	4a06      	ldr	r2, [pc, #24]	; (14d8 <_spi_m_sync_enable+0x28>)
    14c0:	4906      	ldr	r1, [pc, #24]	; (14dc <_spi_m_sync_enable+0x2c>)
    14c2:	f7ff fa19 	bl	8f8 <assert>

	return _spi_sync_enable(dev->prvt);
    14c6:	6820      	ldr	r0, [r4, #0]
    14c8:	f7ff fc00 	bl	ccc <_spi_sync_enable>
}
    14cc:	bd10      	pop	{r4, pc}
	ASSERT(dev && dev->prvt);
    14ce:	2000      	movs	r0, #0
    14d0:	e7f5      	b.n	14be <_spi_m_sync_enable+0xe>
    14d2:	2000      	movs	r0, #0
    14d4:	e7f3      	b.n	14be <_spi_m_sync_enable+0xe>
    14d6:	46c0      	nop			; (mov r8, r8)
    14d8:	0000090a 	.word	0x0000090a
    14dc:	0000d584 	.word	0x0000d584

000014e0 <_spi_m_sync_trans>:
	ctrl->txcnt++;
	hri_sercomspi_write_DATA_reg(hw, data);
}

int32_t _spi_m_sync_trans(struct _spi_m_sync_dev *dev, const struct spi_msg *msg)
{
    14e0:	b570      	push	{r4, r5, r6, lr}
    14e2:	b088      	sub	sp, #32
    14e4:	000d      	movs	r5, r1
	void *                 hw   = dev->prvt;
    14e6:	6804      	ldr	r4, [r0, #0]
	int32_t                rc   = 0;
	struct _spi_trans_ctrl ctrl = {msg->txbuf, msg->rxbuf, 0, 0, dev->char_size};
    14e8:	680b      	ldr	r3, [r1, #0]
    14ea:	9303      	str	r3, [sp, #12]
    14ec:	684b      	ldr	r3, [r1, #4]
    14ee:	9304      	str	r3, [sp, #16]
    14f0:	2300      	movs	r3, #0
    14f2:	9305      	str	r3, [sp, #20]
    14f4:	9306      	str	r3, [sp, #24]
    14f6:	7906      	ldrb	r6, [r0, #4]

	ASSERT(dev && hw);
    14f8:	2800      	cmp	r0, #0
    14fa:	d014      	beq.n	1526 <_spi_m_sync_trans+0x46>
    14fc:	2c00      	cmp	r4, #0
    14fe:	d010      	beq.n	1522 <_spi_m_sync_trans+0x42>
    1500:	2001      	movs	r0, #1
    1502:	4a2d      	ldr	r2, [pc, #180]	; (15b8 <_spi_m_sync_trans+0xd8>)
    1504:	492d      	ldr	r1, [pc, #180]	; (15bc <_spi_m_sync_trans+0xdc>)
    1506:	f7ff f9f7 	bl	8f8 <assert>
    150a:	8a23      	ldrh	r3, [r4, #16]
    150c:	0bdb      	lsrs	r3, r3, #15

	/* If settings are not applied (pending), we can not go on */
	if (hri_sercomspi_is_syncing(hw)) {
    150e:	d14f      	bne.n	15b0 <_spi_m_sync_trans+0xd0>
	while (((const Sercom *)hw)->SPI.STATUS.bit.SYNCBUSY)
    1510:	8a23      	ldrh	r3, [r4, #16]
    1512:	0bdb      	lsrs	r3, r3, #15
    1514:	d1fc      	bne.n	1510 <_spi_m_sync_trans+0x30>
	tmp = ((Sercom *)hw)->SPI.CTRLA.reg;
    1516:	6823      	ldr	r3, [r4, #0]
		return ERR_BUSY;
	}

	/* SPI must be enabled to start synchronous transfer */
	if (!hri_sercomspi_get_CTRLA_ENABLE_bit(hw)) {
    1518:	079b      	lsls	r3, r3, #30
    151a:	d418      	bmi.n	154e <_spi_m_sync_trans+0x6e>
		return ERR_NOT_INITIALIZED;
    151c:	2014      	movs	r0, #20
    151e:	4240      	negs	r0, r0
    1520:	e044      	b.n	15ac <_spi_m_sync_trans+0xcc>
	ASSERT(dev && hw);
    1522:	2000      	movs	r0, #0
    1524:	e7ed      	b.n	1502 <_spi_m_sync_trans+0x22>
    1526:	2000      	movs	r0, #0
    1528:	e7eb      	b.n	1502 <_spi_m_sync_trans+0x22>
		return false;
    152a:	2200      	movs	r2, #0
    152c:	e026      	b.n	157c <_spi_m_sync_trans+0x9c>
			data |= (*ctrl->txbuf) << 8;
    152e:	7858      	ldrb	r0, [r3, #1]
    1530:	0200      	lsls	r0, r0, #8
    1532:	4301      	orrs	r1, r0
			ctrl->txbuf++;
    1534:	3302      	adds	r3, #2
    1536:	9303      	str	r3, [sp, #12]
	ctrl->txcnt++;
    1538:	3201      	adds	r2, #1
    153a:	9205      	str	r2, [sp, #20]
	hri_sercomspi_write_DATA_reg(hw, data);
    153c:	b289      	uxth	r1, r1
	((Sercom *)hw)->SPI.DATA.reg = data;
    153e:	8321      	strh	r1, [r4, #24]
			if (ctrl.rxcnt >= ctrl.txcnt) {
				_spi_tx_check(hw, iflag, &ctrl);
			}
		}

		if (ctrl.txcnt >= msg->size && ctrl.rxcnt >= msg->size) {
    1540:	9805      	ldr	r0, [sp, #20]
    1542:	68ab      	ldr	r3, [r5, #8]
    1544:	4298      	cmp	r0, r3
    1546:	d302      	bcc.n	154e <_spi_m_sync_trans+0x6e>
    1548:	9a06      	ldr	r2, [sp, #24]
    154a:	4293      	cmp	r3, r2
    154c:	d929      	bls.n	15a2 <_spi_m_sync_trans+0xc2>
	return ((Sercom *)hw)->SPI.INTFLAG.reg;
    154e:	7ba3      	ldrb	r3, [r4, #14]
    1550:	b2db      	uxtb	r3, r3
	if (!(iflag & SERCOM_SPI_INTFLAG_RXC)) {
    1552:	075a      	lsls	r2, r3, #29
    1554:	d5e9      	bpl.n	152a <_spi_m_sync_trans+0x4a>
	return ((Sercom *)hw)->SPI.DATA.reg;
    1556:	8b22      	ldrh	r2, [r4, #24]
    1558:	b292      	uxth	r2, r2
	if (ctrl->rxbuf) {
    155a:	9904      	ldr	r1, [sp, #16]
    155c:	2900      	cmp	r1, #0
    155e:	d008      	beq.n	1572 <_spi_m_sync_trans+0x92>
		*ctrl->rxbuf++ = (uint8_t)data;
    1560:	1c48      	adds	r0, r1, #1
    1562:	9004      	str	r0, [sp, #16]
    1564:	700a      	strb	r2, [r1, #0]
		if (ctrl->char_size > 1) {
    1566:	2e01      	cmp	r6, #1
    1568:	d903      	bls.n	1572 <_spi_m_sync_trans+0x92>
			*ctrl->rxbuf++ = (uint8_t)(data >> 8);
    156a:	1c88      	adds	r0, r1, #2
    156c:	9004      	str	r0, [sp, #16]
    156e:	0a12      	lsrs	r2, r2, #8
    1570:	704a      	strb	r2, [r1, #1]
	ctrl->rxcnt++;
    1572:	9a06      	ldr	r2, [sp, #24]
    1574:	9201      	str	r2, [sp, #4]
    1576:	3201      	adds	r2, #1
    1578:	9206      	str	r2, [sp, #24]
	return true;
    157a:	2201      	movs	r2, #1
		if (!_spi_rx_check(hw, iflag, &ctrl)) {
    157c:	2a00      	cmp	r2, #0
    157e:	d1df      	bne.n	1540 <_spi_m_sync_trans+0x60>
			if (ctrl.rxcnt >= ctrl.txcnt) {
    1580:	9906      	ldr	r1, [sp, #24]
    1582:	9a05      	ldr	r2, [sp, #20]
    1584:	4291      	cmp	r1, r2
    1586:	d3db      	bcc.n	1540 <_spi_m_sync_trans+0x60>
	if (!(SERCOM_SPI_INTFLAG_DRE & iflag)) {
    1588:	07db      	lsls	r3, r3, #31
    158a:	d5d9      	bpl.n	1540 <_spi_m_sync_trans+0x60>
	if (ctrl->txbuf) {
    158c:	9b03      	ldr	r3, [sp, #12]
    158e:	2b00      	cmp	r3, #0
    1590:	d005      	beq.n	159e <_spi_m_sync_trans+0xbe>
		data = *ctrl->txbuf++;
    1592:	1c59      	adds	r1, r3, #1
    1594:	9103      	str	r1, [sp, #12]
    1596:	7819      	ldrb	r1, [r3, #0]
		if (ctrl->char_size > 1) {
    1598:	2e01      	cmp	r6, #1
    159a:	d8c8      	bhi.n	152e <_spi_m_sync_trans+0x4e>
    159c:	e7cc      	b.n	1538 <_spi_m_sync_trans+0x58>
		data = SPI_DUMMY_CHAR;
    159e:	4908      	ldr	r1, [pc, #32]	; (15c0 <_spi_m_sync_trans+0xe0>)
    15a0:	e7ca      	b.n	1538 <_spi_m_sync_trans+0x58>
	tmp = ((Sercom *)hw)->SPI.INTFLAG.reg;
    15a2:	7ba3      	ldrb	r3, [r4, #14]
	while (!(hri_sercomspi_get_INTFLAG_reg(hw, SERCOM_SPI_INTFLAG_TXC | SERCOM_SPI_INTFLAG_DRE))) {
    15a4:	079b      	lsls	r3, r3, #30
    15a6:	d0fc      	beq.n	15a2 <_spi_m_sync_trans+0xc2>
	((Sercom *)hw)->SPI.INTFLAG.reg = mask;
    15a8:	2303      	movs	r3, #3
    15aa:	73a3      	strb	r3, [r4, #14]
	}
	/* Wait until SPI bus idle */
	_spi_wait_bus_idle(hw);

	return rc;
}
    15ac:	b008      	add	sp, #32
    15ae:	bd70      	pop	{r4, r5, r6, pc}
		return ERR_BUSY;
    15b0:	2004      	movs	r0, #4
    15b2:	4240      	negs	r0, r0
    15b4:	e7fa      	b.n	15ac <_spi_m_sync_trans+0xcc>
    15b6:	46c0      	nop			; (mov r8, r8)
    15b8:	00000a01 	.word	0x00000a01
    15bc:	0000d584 	.word	0x0000d584
    15c0:	000001ff 	.word	0x000001ff

000015c4 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    15c4:	4b0f      	ldr	r3, [pc, #60]	; (1604 <_sysctrl_init_sources+0x40>)
    15c6:	6a19      	ldr	r1, [r3, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
    15c8:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
    15ca:	6a1a      	ldr	r2, [r3, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    15cc:	0f92      	lsrs	r2, r2, #30
    15ce:	0792      	lsls	r2, r2, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
    15d0:	0409      	lsls	r1, r1, #16
    15d2:	480d      	ldr	r0, [pc, #52]	; (1608 <_sysctrl_init_sources+0x44>)
    15d4:	4001      	ands	r1, r0
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
    15d6:	430a      	orrs	r2, r1
	hri_sysctrl_write_OSC8M_reg(hw,
    15d8:	490c      	ldr	r1, [pc, #48]	; (160c <_sysctrl_init_sources+0x48>)
    15da:	430a      	orrs	r2, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
    15dc:	621a      	str	r2, [r3, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    15de:	699a      	ldr	r2, [r3, #24]
    15e0:	2102      	movs	r1, #2
    15e2:	430a      	orrs	r2, r1
    15e4:	619a      	str	r2, [r3, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
    15e6:	7f1a      	ldrb	r2, [r3, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
    15e8:	311d      	adds	r1, #29
    15ea:	400a      	ands	r2, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
    15ec:	771a      	strb	r2, [r3, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
    15ee:	4b05      	ldr	r3, [pc, #20]	; (1604 <_sysctrl_init_sources+0x40>)
    15f0:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
    15f2:	071b      	lsls	r3, r3, #28
    15f4:	d5fb      	bpl.n	15ee <_sysctrl_init_sources+0x2a>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
    15f6:	4a03      	ldr	r2, [pc, #12]	; (1604 <_sysctrl_init_sources+0x40>)
    15f8:	6a13      	ldr	r3, [r2, #32]
    15fa:	2180      	movs	r1, #128	; 0x80
    15fc:	430b      	orrs	r3, r1
    15fe:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
    1600:	4770      	bx	lr
    1602:	46c0      	nop			; (mov r8, r8)
    1604:	40000800 	.word	0x40000800
    1608:	0fff0000 	.word	0x0fff0000
    160c:	00000302 	.word	0x00000302

00001610 <_sysctrl_init_referenced_generators>:
}

static inline void hri_sysctrl_write_DFLLCTRL_reg(const void *const hw, hri_sysctrl_dfllctrl_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    1610:	2202      	movs	r2, #2
    1612:	4b1b      	ldr	r3, [pc, #108]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1614:	849a      	strh	r2, [r3, #36]	; 0x24
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    1616:	4b1a      	ldr	r3, [pc, #104]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1618:	68db      	ldr	r3, [r3, #12]
	hri_gclk_write_CLKCTRL_reg(GCLK,
	                           GCLK_CLKCTRL_ID(0) | GCLK_CLKCTRL_GEN(CONF_DFLL_GCLK) | (1 << GCLK_CLKCTRL_CLKEN_Pos));
#endif

	hri_sysctrl_write_DFLLCTRL_reg(hw, SYSCTRL_DFLLCTRL_ENABLE);
	while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    161a:	06db      	lsls	r3, r3, #27
    161c:	d5fb      	bpl.n	1616 <_sysctrl_init_referenced_generators+0x6>
}

static inline void hri_sysctrl_write_DFLLMUL_reg(const void *const hw, hri_sysctrl_dfllmul_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->DFLLMUL.reg = data;
    161e:	4a19      	ldr	r2, [pc, #100]	; (1684 <_sysctrl_init_referenced_generators+0x74>)
    1620:	4b17      	ldr	r3, [pc, #92]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1622:	62da      	str	r2, [r3, #44]	; 0x2c
		;

	hri_sysctrl_write_DFLLMUL_reg(hw,
	                              SYSCTRL_DFLLMUL_CSTEP(CONF_DFLL_CSTEP) | SYSCTRL_DFLLMUL_FSTEP(CONF_DFLL_FSTEP)
	                                  | SYSCTRL_DFLLMUL_MUL(CONF_DFLL_MUL));
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    1624:	4b18      	ldr	r3, [pc, #96]	; (1688 <_sysctrl_init_referenced_generators+0x78>)
    1626:	681b      	ldr	r3, [r3, #0]
    1628:	0e9b      	lsrs	r3, r3, #26
    162a:	2b3f      	cmp	r3, #63	; 0x3f
    162c:	d020      	beq.n	1670 <_sysctrl_init_referenced_generators+0x60>
    162e:	029b      	lsls	r3, r3, #10
    1630:	2280      	movs	r2, #128	; 0x80
    1632:	0092      	lsls	r2, r2, #2
    1634:	4313      	orrs	r3, r2
	((Sysctrl *)hw)->DFLLVAL.reg = data;
    1636:	4a12      	ldr	r2, [pc, #72]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1638:	6293      	str	r3, [r2, #40]	; 0x28
	((Sysctrl *)hw)->DFLLCTRL.reg = data;
    163a:	2302      	movs	r3, #2
    163c:	8493      	strh	r3, [r2, #36]	; 0x24
	tmp = ((Sysctrl *)hw)->DFLLCTRL.reg;
    163e:	8c93      	ldrh	r3, [r2, #36]	; 0x24
	hri_sysctrl_write_DFLLCTRL_reg(hw, tmp);
#endif

#if CONF_DFLL_CONFIG == 1
#if CONF_DFLL_ENABLE == 1
	if (hri_sysctrl_get_DFLLCTRL_MODE_bit(hw)) {
    1640:	075b      	lsls	r3, r3, #29
    1642:	d518      	bpl.n	1676 <_sysctrl_init_referenced_generators+0x66>
	tmp = ((Sysctrl *)hw)->PCLKSR.reg;
    1644:	4b0e      	ldr	r3, [pc, #56]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1646:	68da      	ldr	r2, [r3, #12]
	tmp &= mask;
    1648:	23d0      	movs	r3, #208	; 0xd0
    164a:	4013      	ands	r3, r2
		hri_sysctrl_pclksr_reg_t status_mask
		    = SYSCTRL_PCLKSR_DFLLRDY | SYSCTRL_PCLKSR_DFLLLCKF | SYSCTRL_PCLKSR_DFLLLCKC;

		while (hri_sysctrl_get_PCLKSR_reg(hw, status_mask) != status_mask)
    164c:	2bd0      	cmp	r3, #208	; 0xd0
    164e:	d1f9      	bne.n	1644 <_sysctrl_init_referenced_generators+0x34>
	((Sysctrl *)hw)->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ONDEMAND;
    1650:	4a0b      	ldr	r2, [pc, #44]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1652:	8c93      	ldrh	r3, [r2, #36]	; 0x24
    1654:	2180      	movs	r1, #128	; 0x80
    1656:	430b      	orrs	r3, r1
    1658:	b29b      	uxth	r3, r3
    165a:	8493      	strh	r3, [r2, #36]	; 0x24
	return (((Gclk *)hw)->STATUS.reg & GCLK_STATUS_SYNCBUSY) >> GCLK_STATUS_SYNCBUSY_Pos;
    165c:	4b0b      	ldr	r3, [pc, #44]	; (168c <_sysctrl_init_referenced_generators+0x7c>)
    165e:	785b      	ldrb	r3, [r3, #1]
	hri_sysctrl_set_DFLLCTRL_ONDEMAND_bit(hw);
#endif
#endif

#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_get_STATUS_SYNCBUSY_bit(GCLK))
    1660:	09db      	lsrs	r3, r3, #7
    1662:	d1fb      	bne.n	165c <_sysctrl_init_referenced_generators+0x4c>
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
    1664:	4a06      	ldr	r2, [pc, #24]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1666:	6993      	ldr	r3, [r2, #24]
    1668:	2102      	movs	r1, #2
    166a:	438b      	bics	r3, r1
    166c:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
    166e:	4770      	bx	lr
	hri_sysctrl_write_DFLLVAL_reg(hw, CONF_DFLLVAL);
    1670:	23fc      	movs	r3, #252	; 0xfc
    1672:	01db      	lsls	r3, r3, #7
    1674:	e7df      	b.n	1636 <_sysctrl_init_referenced_generators+0x26>
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) >> SYSCTRL_PCLKSR_DFLLRDY_Pos;
    1676:	4b02      	ldr	r3, [pc, #8]	; (1680 <_sysctrl_init_referenced_generators+0x70>)
    1678:	68db      	ldr	r3, [r3, #12]
		while (!hri_sysctrl_get_PCLKSR_DFLLRDY_bit(hw))
    167a:	06db      	lsls	r3, r3, #27
    167c:	d5fb      	bpl.n	1676 <_sysctrl_init_referenced_generators+0x66>
    167e:	e7e7      	b.n	1650 <_sysctrl_init_referenced_generators+0x40>
    1680:	40000800 	.word	0x40000800
    1684:	04010000 	.word	0x04010000
    1688:	00806024 	.word	0x00806024
    168c:	40000c00 	.word	0x40000c00

00001690 <tc_pwm_interrupt_handler>:
 * \internal TC interrupt handler for PWM
 *
 * \param[in] instance TC instance number
 */
static void tc_pwm_interrupt_handler(struct _pwm_device *device)
{
    1690:	b570      	push	{r4, r5, r6, lr}
    1692:	0005      	movs	r5, r0
	void *const hw = device->hw;
    1694:	6904      	ldr	r4, [r0, #16]
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_MC1;
}

static inline bool hri_tc_get_interrupt_OVF_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTFLAG.reg & TC_INTFLAG_OVF) >> TC_INTFLAG_OVF_Pos;
    1696:	7ba3      	ldrb	r3, [r4, #14]

	if (hri_tc_get_interrupt_OVF_bit(hw)) {
    1698:	07db      	lsls	r3, r3, #31
    169a:	d505      	bpl.n	16a8 <tc_pwm_interrupt_handler+0x18>
}

static inline void hri_tc_clear_interrupt_OVF_bit(const void *const hw)
{
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_OVF;
    169c:	2301      	movs	r3, #1
    169e:	73a3      	strb	r3, [r4, #14]
		hri_tc_clear_interrupt_OVF_bit(hw);
		if (NULL != device->callback.pwm_period_cb) {
    16a0:	6803      	ldr	r3, [r0, #0]
    16a2:	2b00      	cmp	r3, #0
    16a4:	d000      	beq.n	16a8 <tc_pwm_interrupt_handler+0x18>
			device->callback.pwm_period_cb(device);
    16a6:	4798      	blx	r3
	((Tc *)hw)->COUNT16.INTENSET.reg = TC_INTENSET_ERR;
}

static inline bool hri_tc_get_INTEN_ERR_bit(const void *const hw)
{
	return (((Tc *)hw)->COUNT16.INTENSET.reg & TC_INTENSET_ERR) >> TC_INTENSET_ERR_Pos;
    16a8:	7b63      	ldrb	r3, [r4, #13]
		}
	}
	if (hri_tc_get_INTEN_ERR_bit(hw)) {
    16aa:	079b      	lsls	r3, r3, #30
    16ac:	d506      	bpl.n	16bc <tc_pwm_interrupt_handler+0x2c>
	((Tc *)hw)->COUNT16.INTFLAG.reg = TC_INTFLAG_ERR;
    16ae:	2302      	movs	r3, #2
    16b0:	73a3      	strb	r3, [r4, #14]
		hri_tc_clear_interrupt_ERR_bit(hw);
		if (NULL != device->callback.pwm_error_cb) {
    16b2:	686b      	ldr	r3, [r5, #4]
    16b4:	2b00      	cmp	r3, #0
    16b6:	d001      	beq.n	16bc <tc_pwm_interrupt_handler+0x2c>
			device->callback.pwm_error_cb(device);
    16b8:	0028      	movs	r0, r5
    16ba:	4798      	blx	r3
		}
	}
}
    16bc:	bd70      	pop	{r4, r5, r6, pc}
	...

000016c0 <tc_get_hardware_index>:
 * \param[in] hw The pointer to hardware instance
 */
static uint8_t tc_get_hardware_index(const void *const hw)
{
#ifndef _UNIT_TEST_
	return ((uint32_t)hw - TC_HW_BASE_ADDR) >> 10;
    16c0:	4b02      	ldr	r3, [pc, #8]	; (16cc <tc_get_hardware_index+0xc>)
    16c2:	469c      	mov	ip, r3
    16c4:	4460      	add	r0, ip
    16c6:	0a80      	lsrs	r0, r0, #10
    16c8:	b2c0      	uxtb	r0, r0
#else
	return ((uint32_t)hw - TC_HW_BASE_ADDR) / sizeof(Tc);
#endif
}
    16ca:	4770      	bx	lr
    16cc:	bdffe000 	.word	0xbdffe000

000016d0 <_tc_init_irq_param>:
/**
 * \brief Init irq param with the given tc hardware instance
 */
static void _tc_init_irq_param(const void *const hw, void *dev)
{
	if (hw == TC6) {
    16d0:	4b06      	ldr	r3, [pc, #24]	; (16ec <_tc_init_irq_param+0x1c>)
    16d2:	4298      	cmp	r0, r3
    16d4:	d003      	beq.n	16de <_tc_init_irq_param+0xe>
		_tc6_dev = (struct _pwm_device *)dev;
	}
	if (hw == TC7) {
    16d6:	4b06      	ldr	r3, [pc, #24]	; (16f0 <_tc_init_irq_param+0x20>)
    16d8:	4298      	cmp	r0, r3
    16da:	d003      	beq.n	16e4 <_tc_init_irq_param+0x14>
		_tc7_dev = (struct _pwm_device *)dev;
	}
}
    16dc:	4770      	bx	lr
		_tc6_dev = (struct _pwm_device *)dev;
    16de:	4b05      	ldr	r3, [pc, #20]	; (16f4 <_tc_init_irq_param+0x24>)
    16e0:	6019      	str	r1, [r3, #0]
    16e2:	e7f8      	b.n	16d6 <_tc_init_irq_param+0x6>
		_tc7_dev = (struct _pwm_device *)dev;
    16e4:	4b04      	ldr	r3, [pc, #16]	; (16f8 <_tc_init_irq_param+0x28>)
    16e6:	6019      	str	r1, [r3, #0]
}
    16e8:	e7f8      	b.n	16dc <_tc_init_irq_param+0xc>
    16ea:	46c0      	nop			; (mov r8, r8)
    16ec:	42003800 	.word	0x42003800
    16f0:	42003c00 	.word	0x42003c00
    16f4:	20000a7c 	.word	0x20000a7c
    16f8:	20000a80 	.word	0x20000a80

000016fc <get_tc_index>:
{
    16fc:	b510      	push	{r4, lr}
	uint8_t tc_offset = tc_get_hardware_index(hw) + TC_NUMBER_OFFSET;
    16fe:	f7ff ffdf 	bl	16c0 <tc_get_hardware_index>
	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
    1702:	2300      	movs	r3, #0
    1704:	2b01      	cmp	r3, #1
    1706:	d80b      	bhi.n	1720 <get_tc_index+0x24>
		if (_tcs[i].number == tc_offset) {
    1708:	009a      	lsls	r2, r3, #2
    170a:	18d2      	adds	r2, r2, r3
    170c:	0091      	lsls	r1, r2, #2
    170e:	4a09      	ldr	r2, [pc, #36]	; (1734 <get_tc_index+0x38>)
    1710:	5c8a      	ldrb	r2, [r1, r2]
    1712:	4290      	cmp	r0, r2
    1714:	d002      	beq.n	171c <get_tc_index+0x20>
	for (i = 0; i < ARRAY_SIZE(_tcs); i++) {
    1716:	3301      	adds	r3, #1
    1718:	b2db      	uxtb	r3, r3
    171a:	e7f3      	b.n	1704 <get_tc_index+0x8>
			return i;
    171c:	b258      	sxtb	r0, r3
    171e:	e007      	b.n	1730 <get_tc_index+0x34>
	ASSERT(false);
    1720:	2276      	movs	r2, #118	; 0x76
    1722:	32ff      	adds	r2, #255	; 0xff
    1724:	4904      	ldr	r1, [pc, #16]	; (1738 <get_tc_index+0x3c>)
    1726:	2000      	movs	r0, #0
    1728:	f7ff f8e6 	bl	8f8 <assert>
	return -1;
    172c:	2001      	movs	r0, #1
    172e:	4240      	negs	r0, r0
}
    1730:	bd10      	pop	{r4, pc}
    1732:	46c0      	nop			; (mov r8, r8)
    1734:	20000000 	.word	0x20000000
    1738:	0000d5e8 	.word	0x0000d5e8

0000173c <_pwm_init>:
{
    173c:	b570      	push	{r4, r5, r6, lr}
    173e:	0005      	movs	r5, r0
    1740:	000c      	movs	r4, r1
	int8_t i   = get_tc_index(hw);
    1742:	0008      	movs	r0, r1
    1744:	f7ff ffda 	bl	16fc <get_tc_index>
	device->hw = hw;
    1748:	612c      	str	r4, [r5, #16]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    174a:	7be3      	ldrb	r3, [r4, #15]
    174c:	09db      	lsrs	r3, r3, #7
    174e:	d1fc      	bne.n	174a <_pwm_init+0xe>
}

static inline hri_tc_ctrla_reg_t hri_tc_get_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t mask)
{
	uint16_t tmp;
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    1750:	8823      	ldrh	r3, [r4, #0]
	if (hri_tc_get_CTRLA_reg(hw, TC_CTRLA_ENABLE)) {
    1752:	079b      	lsls	r3, r3, #30
    1754:	d504      	bpl.n	1760 <_pwm_init+0x24>
}

static inline void hri_tc_write_CTRLA_reg(const void *const hw, hri_tc_ctrla_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1756:	2300      	movs	r3, #0
    1758:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    175a:	7be3      	ldrb	r3, [r4, #15]
    175c:	09db      	lsrs	r3, r3, #7
    175e:	d1fc      	bne.n	175a <_pwm_init+0x1e>
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1760:	2301      	movs	r3, #1
    1762:	8023      	strh	r3, [r4, #0]
	while (((const Tc *)hw)->COUNT16.STATUS.bit.SYNCBUSY)
    1764:	7be3      	ldrb	r3, [r4, #15]
    1766:	09db      	lsrs	r3, r3, #7
    1768:	d1fc      	bne.n	1764 <_pwm_init+0x28>
	hri_tc_write_CTRLA_reg(hw, _tcs[i].ctrl_a);
    176a:	0082      	lsls	r2, r0, #2
    176c:	1812      	adds	r2, r2, r0
    176e:	0091      	lsls	r1, r2, #2
    1770:	4b2a      	ldr	r3, [pc, #168]	; (181c <_pwm_init+0xe0>)
    1772:	185b      	adds	r3, r3, r1
    1774:	885a      	ldrh	r2, [r3, #2]
	((Tc *)hw)->COUNT16.CTRLA.reg = data;
    1776:	8022      	strh	r2, [r4, #0]
	hri_tc_write_DBGCTRL_reg(hw, _tcs[i].dbg_ctrl);
    1778:	7919      	ldrb	r1, [r3, #4]
}

static inline void hri_tc_write_DBGCTRL_reg(const void *const hw, hri_tc_dbgctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.DBGCTRL.reg = data;
    177a:	7221      	strb	r1, [r4, #8]
	hri_tc_write_EVCTRL_reg(hw, _tcs[i].event_ctrl);
    177c:	88db      	ldrh	r3, [r3, #6]
}

static inline void hri_tc_write_EVCTRL_reg(const void *const hw, hri_tc_evctrl_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.EVCTRL.reg = data;
    177e:	8163      	strh	r3, [r4, #10]
    1780:	230c      	movs	r3, #12
    1782:	4013      	ands	r3, r2
	if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT32) {
    1784:	2b08      	cmp	r3, #8
    1786:	d037      	beq.n	17f8 <_pwm_init+0xbc>
	} else if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT16) {
    1788:	2b00      	cmp	r3, #0
    178a:	d141      	bne.n	1810 <_pwm_init+0xd4>
		hri_tccount16_write_CC_reg(hw, 0, (hri_tccount16_cc_reg_t)_tcs[i].cc0);
    178c:	4a23      	ldr	r2, [pc, #140]	; (181c <_pwm_init+0xe0>)
    178e:	0083      	lsls	r3, r0, #2
    1790:	181e      	adds	r6, r3, r0
    1792:	00b1      	lsls	r1, r6, #2
    1794:	000e      	movs	r6, r1
    1796:	1851      	adds	r1, r2, r1
    1798:	8989      	ldrh	r1, [r1, #12]
}

static inline void hri_tccount16_write_CC_reg(const void *const hw, uint8_t index, hri_tccount16_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT16.CC[index].reg = data;
    179a:	8321      	strh	r1, [r4, #24]
		hri_tccount16_write_CC_reg(hw, 1, (hri_tccount16_cc_reg_t)_tcs[i].cc1);
    179c:	1992      	adds	r2, r2, r6
    179e:	8a13      	ldrh	r3, [r2, #16]
    17a0:	8363      	strh	r3, [r4, #26]
	_tc_init_irq_param(hw, (void *)device);
    17a2:	0029      	movs	r1, r5
    17a4:	0020      	movs	r0, r4
    17a6:	f7ff ff93 	bl	16d0 <_tc_init_irq_param>
	NVIC_DisableIRQ((IRQn_Type)((uint8_t)TC_IRQ_BASE_INDEX + tc_get_hardware_index(hw)));
    17aa:	0020      	movs	r0, r4
    17ac:	f7ff ff88 	bl	16c0 <tc_get_hardware_index>
    17b0:	300d      	adds	r0, #13
    17b2:	b2c0      	uxtb	r0, r0
    17b4:	b243      	sxtb	r3, r0
  if ((int32_t)(IRQn) >= 0)
    17b6:	2b00      	cmp	r3, #0
    17b8:	db0a      	blt.n	17d0 <_pwm_init+0x94>
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    17ba:	211f      	movs	r1, #31
    17bc:	4001      	ands	r1, r0
    17be:	2201      	movs	r2, #1
    17c0:	408a      	lsls	r2, r1
    17c2:	2180      	movs	r1, #128	; 0x80
    17c4:	4c16      	ldr	r4, [pc, #88]	; (1820 <_pwm_init+0xe4>)
    17c6:	5062      	str	r2, [r4, r1]
  __ASM volatile ("dsb 0xF":::"memory");
    17c8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
    17cc:	f3bf 8f6f 	isb	sy
  if ((int32_t)(IRQn) >= 0)
    17d0:	2b00      	cmp	r3, #0
    17d2:	db07      	blt.n	17e4 <_pwm_init+0xa8>
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    17d4:	211f      	movs	r1, #31
    17d6:	4001      	ands	r1, r0
    17d8:	2201      	movs	r2, #1
    17da:	408a      	lsls	r2, r1
    17dc:	21c0      	movs	r1, #192	; 0xc0
    17de:	0049      	lsls	r1, r1, #1
    17e0:	4c0f      	ldr	r4, [pc, #60]	; (1820 <_pwm_init+0xe4>)
    17e2:	5062      	str	r2, [r4, r1]
  if ((int32_t)(IRQn) >= 0)
    17e4:	2b00      	cmp	r3, #0
    17e6:	db16      	blt.n	1816 <_pwm_init+0xda>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    17e8:	231f      	movs	r3, #31
    17ea:	4018      	ands	r0, r3
    17ec:	3b1e      	subs	r3, #30
    17ee:	4083      	lsls	r3, r0
    17f0:	4a0b      	ldr	r2, [pc, #44]	; (1820 <_pwm_init+0xe4>)
    17f2:	6013      	str	r3, [r2, #0]
	return ERR_NONE;
    17f4:	2000      	movs	r0, #0
}
    17f6:	bd70      	pop	{r4, r5, r6, pc}
		hri_tccount32_write_CC_reg(hw, 0, _tcs[i].cc0);
    17f8:	4a08      	ldr	r2, [pc, #32]	; (181c <_pwm_init+0xe0>)
    17fa:	0083      	lsls	r3, r0, #2
    17fc:	181e      	adds	r6, r3, r0
    17fe:	00b1      	lsls	r1, r6, #2
    1800:	000e      	movs	r6, r1
    1802:	1851      	adds	r1, r2, r1
    1804:	68c9      	ldr	r1, [r1, #12]
}

static inline void hri_tccount32_write_CC_reg(const void *const hw, uint8_t index, hri_tccount32_cc_reg_t data)
{
	TC_CRITICAL_SECTION_ENTER();
	((Tc *)hw)->COUNT32.CC[index].reg = data;
    1806:	61a1      	str	r1, [r4, #24]
		hri_tccount32_write_CC_reg(hw, 1, _tcs[i].cc1);
    1808:	1992      	adds	r2, r2, r6
    180a:	6913      	ldr	r3, [r2, #16]
    180c:	61e3      	str	r3, [r4, #28]
    180e:	e7c8      	b.n	17a2 <_pwm_init+0x66>
		return ERR_INVALID_DATA;
    1810:	2001      	movs	r0, #1
    1812:	4240      	negs	r0, r0
    1814:	e7ef      	b.n	17f6 <_pwm_init+0xba>
	return ERR_NONE;
    1816:	2000      	movs	r0, #0
    1818:	e7ed      	b.n	17f6 <_pwm_init+0xba>
    181a:	46c0      	nop			; (mov r8, r8)
    181c:	20000000 	.word	0x20000000
    1820:	e000e100 	.word	0xe000e100

00001824 <_pwm_enable>:
	hri_tc_set_CTRLA_ENABLE_bit(device->hw);
    1824:	6902      	ldr	r2, [r0, #16]
	((Tc *)hw)->COUNT16.CTRLA.reg |= TC_CTRLA_ENABLE;
    1826:	8813      	ldrh	r3, [r2, #0]
    1828:	2102      	movs	r1, #2
    182a:	430b      	orrs	r3, r1
    182c:	b29b      	uxth	r3, r3
    182e:	8013      	strh	r3, [r2, #0]
}
    1830:	4770      	bx	lr
	...

00001834 <_pwm_set_param>:
{
    1834:	b570      	push	{r4, r5, r6, lr}
    1836:	0004      	movs	r4, r0
    1838:	000e      	movs	r6, r1
    183a:	0015      	movs	r5, r2
	int8_t      i  = get_tc_index(device->hw);
    183c:	6900      	ldr	r0, [r0, #16]
    183e:	f7ff ff5d 	bl	16fc <get_tc_index>
	void *const hw = device->hw;
    1842:	6924      	ldr	r4, [r4, #16]
	_tcs[i].cc0    = period;
    1844:	0082      	lsls	r2, r0, #2
    1846:	1812      	adds	r2, r2, r0
    1848:	0091      	lsls	r1, r2, #2
    184a:	4b0e      	ldr	r3, [pc, #56]	; (1884 <_pwm_set_param+0x50>)
    184c:	185b      	adds	r3, r3, r1
    184e:	60de      	str	r6, [r3, #12]
	_tcs[i].cc1    = duty_cycle;
    1850:	611d      	str	r5, [r3, #16]
	if ((_tcs[i].ctrl_a & TC_CTRLA_MODE_Msk) == TC_CTRLA_MODE_COUNT32) {
    1852:	885a      	ldrh	r2, [r3, #2]
    1854:	230c      	movs	r3, #12
    1856:	4013      	ands	r3, r2
    1858:	2b08      	cmp	r3, #8
    185a:	d00b      	beq.n	1874 <_pwm_set_param+0x40>
		hri_tccount16_write_CC_reg(hw, 0, _tcs[i].cc0);
    185c:	4a09      	ldr	r2, [pc, #36]	; (1884 <_pwm_set_param+0x50>)
    185e:	0083      	lsls	r3, r0, #2
    1860:	181d      	adds	r5, r3, r0
    1862:	00a9      	lsls	r1, r5, #2
    1864:	000d      	movs	r5, r1
    1866:	1851      	adds	r1, r2, r1
    1868:	8989      	ldrh	r1, [r1, #12]
	((Tc *)hw)->COUNT16.CC[index].reg = data;
    186a:	8321      	strh	r1, [r4, #24]
		hri_tccount16_write_CC_reg(hw, 1, _tcs[i].cc1);
    186c:	1952      	adds	r2, r2, r5
    186e:	8a13      	ldrh	r3, [r2, #16]
    1870:	8363      	strh	r3, [r4, #26]
}
    1872:	bd70      	pop	{r4, r5, r6, pc}
		hri_tccount32_write_CC_reg(hw, 0, _tcs[i].cc0);
    1874:	4a03      	ldr	r2, [pc, #12]	; (1884 <_pwm_set_param+0x50>)
    1876:	000d      	movs	r5, r1
	((Tc *)hw)->COUNT32.CC[index].reg = data;
    1878:	61a6      	str	r6, [r4, #24]
		hri_tccount32_write_CC_reg(hw, 1, _tcs[i].cc1);
    187a:	1952      	adds	r2, r2, r5
    187c:	6913      	ldr	r3, [r2, #16]
    187e:	61e3      	str	r3, [r4, #28]
    1880:	e7f7      	b.n	1872 <_pwm_set_param+0x3e>
    1882:	46c0      	nop			; (mov r8, r8)
    1884:	20000000 	.word	0x20000000

00001888 <_pwm_is_enabled>:
	return hri_tc_get_CTRLA_ENABLE_bit(device->hw);
    1888:	6903      	ldr	r3, [r0, #16]
	tmp = ((Tc *)hw)->COUNT16.CTRLA.reg;
    188a:	881b      	ldrh	r3, [r3, #0]
	tmp = (tmp & TC_CTRLA_ENABLE) >> TC_CTRLA_ENABLE_Pos;
    188c:	085b      	lsrs	r3, r3, #1
	return (bool)tmp;
    188e:	2001      	movs	r0, #1
    1890:	4018      	ands	r0, r3
}
    1892:	4770      	bx	lr

00001894 <_tc_get_pwm>:
}
    1894:	2000      	movs	r0, #0
    1896:	4770      	bx	lr

00001898 <TC6_Handler>:
{
    1898:	b510      	push	{r4, lr}
	tc_pwm_interrupt_handler(_tc6_dev);
    189a:	4b02      	ldr	r3, [pc, #8]	; (18a4 <TC6_Handler+0xc>)
    189c:	6818      	ldr	r0, [r3, #0]
    189e:	f7ff fef7 	bl	1690 <tc_pwm_interrupt_handler>
}
    18a2:	bd10      	pop	{r4, pc}
    18a4:	20000a7c 	.word	0x20000a7c

000018a8 <TC7_Handler>:
{
    18a8:	b510      	push	{r4, lr}
	tc_pwm_interrupt_handler(_tc7_dev);
    18aa:	4b02      	ldr	r3, [pc, #8]	; (18b4 <TC7_Handler+0xc>)
    18ac:	6818      	ldr	r0, [r3, #0]
    18ae:	f7ff feef 	bl	1690 <tc_pwm_interrupt_handler>
}
    18b2:	bd10      	pop	{r4, pc}
    18b4:	20000a80 	.word	0x20000a80

000018b8 <ETH_Handler>:
	EXT_IRG_init();
}

static void ETH_Handler(void){

}
    18b8:	4770      	bx	lr

000018ba <TIMER_0_task2_cb>:
	((Port *)hw)->Group[submodule_index].OUTTGL.reg = mask;
    18ba:	2280      	movs	r2, #128	; 0x80
    18bc:	0412      	lsls	r2, r2, #16
    18be:	23c0      	movs	r3, #192	; 0xc0
    18c0:	05db      	lsls	r3, r3, #23
    18c2:	61da      	str	r2, [r3, #28]
}

static void TIMER_0_task2_cb(const struct timer_task *const timer_task)
{
	gpio_toggle_pin_level(GLD);
}
    18c4:	4770      	bx	lr
	...

000018c8 <TIMER_IRQ_init>:



static void TIMER_IRQ_init(void)
{
    18c8:	b510      	push	{r4, lr}
			peripheral = (uint32_t)_pm_get_ahb_index(module);
			PM->AHBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBA:
		PM->APBAMASK.reg |= 1 << peripheral;
    18ca:	4a0f      	ldr	r2, [pc, #60]	; (1908 <TIMER_IRQ_init+0x40>)
    18cc:	6993      	ldr	r3, [r2, #24]
    18ce:	2120      	movs	r1, #32
    18d0:	430b      	orrs	r3, r1
    18d2:	6193      	str	r3, [r2, #24]
	((Gclk *)hw)->CLKCTRL.reg = data;
    18d4:	4a0d      	ldr	r2, [pc, #52]	; (190c <TIMER_IRQ_init+0x44>)
    18d6:	4b0e      	ldr	r3, [pc, #56]	; (1910 <TIMER_IRQ_init+0x48>)
    18d8:	805a      	strh	r2, [r3, #2]
	_pm_enable_bus_clock(PM_BUS_APBA, RTC);
	_gclk_enable_channel(RTC_GCLK_ID, CONF_GCLK_RTC_SRC);
	timer_init(&TIMER_IRQ, RTC, _rtc_get_timer());
    18da:	f7ff f9e5 	bl	ca8 <_rtc_get_timer>
    18de:	0002      	movs	r2, r0
    18e0:	4c0c      	ldr	r4, [pc, #48]	; (1914 <TIMER_IRQ_init+0x4c>)
    18e2:	490d      	ldr	r1, [pc, #52]	; (1918 <TIMER_IRQ_init+0x50>)
    18e4:	0020      	movs	r0, r4
    18e6:	f7fe fed9 	bl	69c <timer_init>
	
	//TIMER_task1.interval = 100;
	//TIMER_task1.cb       = TIMER_0_task1_cb;
	//TIMER_task1.mode     = TIMER_TASK_REPEAT;
	
	TIMER_task2.interval = 32768/2;
    18ea:	490c      	ldr	r1, [pc, #48]	; (191c <TIMER_IRQ_init+0x54>)
    18ec:	2380      	movs	r3, #128	; 0x80
    18ee:	01db      	lsls	r3, r3, #7
    18f0:	608b      	str	r3, [r1, #8]
	TIMER_task2.cb       = TIMER_0_task2_cb;
    18f2:	4b0b      	ldr	r3, [pc, #44]	; (1920 <TIMER_IRQ_init+0x58>)
    18f4:	60cb      	str	r3, [r1, #12]
	TIMER_task2.mode     = TIMER_TASK_REPEAT;
    18f6:	2301      	movs	r3, #1
    18f8:	740b      	strb	r3, [r1, #16]

	//timer_add_task(&TIMER_IRQ, &TIMER_task1);
	timer_add_task(&TIMER_IRQ, &TIMER_task2);
    18fa:	0020      	movs	r0, r4
    18fc:	f7fe ff04 	bl	708 <timer_add_task>
	timer_start(&TIMER_IRQ);
    1900:	0020      	movs	r0, r4
    1902:	f7fe fee9 	bl	6d8 <timer_start>
    1906:	bd10      	pop	{r4, pc}
    1908:	40000400 	.word	0x40000400
    190c:	00004302 	.word	0x00004302
    1910:	40000c00 	.word	0x40000c00
    1914:	20000bfc 	.word	0x20000bfc
    1918:	40001400 	.word	0x40001400
    191c:	20000a84 	.word	0x20000a84
    1920:	000018bb 	.word	0x000018bb

00001924 <buzer>:
void buzer(uint16_t soundTime){
    1924:	b570      	push	{r4, r5, r6, lr}
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1926:	24c0      	movs	r4, #192	; 0xc0
    1928:	05e4      	lsls	r4, r4, #23
    192a:	2580      	movs	r5, #128	; 0x80
    192c:	04ad      	lsls	r5, r5, #18
    192e:	61a5      	str	r5, [r4, #24]
	delay_ms(soundTime);
    1930:	f7fe fc2e 	bl	190 <delay_ms>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1934:	6165      	str	r5, [r4, #20]
}
    1936:	bd70      	pop	{r4, r5, r6, pc}

00001938 <gpio_init>:
void gpio_init(void){
    1938:	b5f0      	push	{r4, r5, r6, r7, lr}
    193a:	46de      	mov	lr, fp
    193c:	4657      	mov	r7, sl
    193e:	464e      	mov	r6, r9
    1940:	4645      	mov	r5, r8
    1942:	b5e0      	push	{r5, r6, r7, lr}
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1944:	22c0      	movs	r2, #192	; 0xc0
    1946:	05d2      	lsls	r2, r2, #23
    1948:	2380      	movs	r3, #128	; 0x80
    194a:	469c      	mov	ip, r3
    194c:	6193      	str	r3, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    194e:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1950:	4b7d      	ldr	r3, [pc, #500]	; (1b48 <gpio_init+0x210>)
    1952:	497e      	ldr	r1, [pc, #504]	; (1b4c <gpio_init+0x214>)
    1954:	6299      	str	r1, [r3, #40]	; 0x28
    1956:	25c0      	movs	r5, #192	; 0xc0
    1958:	062d      	lsls	r5, r5, #24
    195a:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    195c:	2447      	movs	r4, #71	; 0x47
    195e:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1960:	2101      	movs	r1, #1
    1962:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1964:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1966:	2080      	movs	r0, #128	; 0x80
    1968:	0040      	lsls	r0, r0, #1
    196a:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    196c:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    196e:	4878      	ldr	r0, [pc, #480]	; (1b50 <gpio_init+0x218>)
    1970:	6298      	str	r0, [r3, #40]	; 0x28
    1972:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1974:	3401      	adds	r4, #1
    1976:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1978:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    197a:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    197c:	2780      	movs	r7, #128	; 0x80
    197e:	00bf      	lsls	r7, r7, #2
    1980:	6157      	str	r7, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1982:	6097      	str	r7, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1984:	4873      	ldr	r0, [pc, #460]	; (1b54 <gpio_init+0x21c>)
    1986:	4682      	mov	sl, r0
    1988:	6298      	str	r0, [r3, #40]	; 0x28
    198a:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    198c:	3401      	adds	r4, #1
    198e:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1990:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1992:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1994:	2080      	movs	r0, #128	; 0x80
    1996:	00c0      	lsls	r0, r0, #3
    1998:	4680      	mov	r8, r0
    199a:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    199c:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    199e:	486e      	ldr	r0, [pc, #440]	; (1b58 <gpio_init+0x220>)
    19a0:	6298      	str	r0, [r3, #40]	; 0x28
    19a2:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    19a4:	3401      	adds	r4, #1
    19a6:	5d18      	ldrb	r0, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    19a8:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    19aa:	5518      	strb	r0, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    19ac:	2080      	movs	r0, #128	; 0x80
    19ae:	0100      	lsls	r0, r0, #4
    19b0:	6050      	str	r0, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    19b2:	486a      	ldr	r0, [pc, #424]	; (1b5c <gpio_init+0x224>)
    19b4:	6298      	str	r0, [r3, #40]	; 0x28
    19b6:	486a      	ldr	r0, [pc, #424]	; (1b60 <gpio_init+0x228>)
    19b8:	6298      	str	r0, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    19ba:	264b      	movs	r6, #75	; 0x4b
    19bc:	5d98      	ldrb	r0, [r3, r6]
    19be:	4681      	mov	r9, r0
    19c0:	2004      	movs	r0, #4
    19c2:	464c      	mov	r4, r9
    19c4:	4384      	bics	r4, r0
    19c6:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    19c8:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    19ca:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    19cc:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    19ce:	2680      	movs	r6, #128	; 0x80
    19d0:	0236      	lsls	r6, r6, #8
    19d2:	6196      	str	r6, [r2, #24]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    19d4:	6096      	str	r6, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    19d6:	4e63      	ldr	r6, [pc, #396]	; (1b64 <gpio_init+0x22c>)
    19d8:	629e      	str	r6, [r3, #40]	; 0x28
    19da:	629d      	str	r5, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    19dc:	244f      	movs	r4, #79	; 0x4f
    19de:	5d1e      	ldrb	r6, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    19e0:	438e      	bics	r6, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    19e2:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    19e4:	2680      	movs	r6, #128	; 0x80
    19e6:	0436      	lsls	r6, r6, #16
    19e8:	6156      	str	r6, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    19ea:	6096      	str	r6, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    19ec:	2480      	movs	r4, #128	; 0x80
    19ee:	05e4      	lsls	r4, r4, #23
    19f0:	629c      	str	r4, [r3, #40]	; 0x28
    19f2:	4c5d      	ldr	r4, [pc, #372]	; (1b68 <gpio_init+0x230>)
    19f4:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    19f6:	2457      	movs	r4, #87	; 0x57
    19f8:	46a3      	mov	fp, r4
    19fa:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    19fc:	438c      	bics	r4, r1
    19fe:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a00:	465c      	mov	r4, fp
    1a02:	464e      	mov	r6, r9
    1a04:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1a06:	3441      	adds	r4, #65	; 0x41
    1a08:	5117      	str	r7, [r2, r4]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1a0a:	3c10      	subs	r4, #16
    1a0c:	5117      	str	r7, [r2, r4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a0e:	3f59      	subs	r7, #89	; 0x59
    1a10:	3fff      	subs	r7, #255	; 0xff
    1a12:	4654      	mov	r4, sl
    1a14:	51dc      	str	r4, [r3, r7]
    1a16:	51dd      	str	r5, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a18:	24c9      	movs	r4, #201	; 0xc9
    1a1a:	5d1d      	ldrb	r5, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a1c:	438d      	bics	r5, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a1e:	551d      	strb	r5, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1a20:	2584      	movs	r5, #132	; 0x84
    1a22:	4644      	mov	r4, r8
    1a24:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a26:	4c51      	ldr	r4, [pc, #324]	; (1b6c <gpio_init+0x234>)
    1a28:	51dc      	str	r4, [r3, r7]
    1a2a:	4c4d      	ldr	r4, [pc, #308]	; (1b60 <gpio_init+0x228>)
    1a2c:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1a2e:	24ca      	movs	r4, #202	; 0xca
    1a30:	46a0      	mov	r8, r4
    1a32:	5d1c      	ldrb	r4, [r3, r4]
    1a34:	4384      	bics	r4, r0
    1a36:	46a1      	mov	r9, r4
    1a38:	4644      	mov	r4, r8
    1a3a:	464e      	mov	r6, r9
    1a3c:	551e      	strb	r6, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a3e:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a40:	438c      	bics	r4, r1
    1a42:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a44:	4644      	mov	r4, r8
    1a46:	464e      	mov	r6, r9
    1a48:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1a4a:	2480      	movs	r4, #128	; 0x80
    1a4c:	0124      	lsls	r4, r4, #4
    1a4e:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a50:	4c42      	ldr	r4, [pc, #264]	; (1b5c <gpio_init+0x224>)
    1a52:	51dc      	str	r4, [r3, r7]
    1a54:	4c42      	ldr	r4, [pc, #264]	; (1b60 <gpio_init+0x228>)
    1a56:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1a58:	24cb      	movs	r4, #203	; 0xcb
    1a5a:	46a0      	mov	r8, r4
    1a5c:	5d1c      	ldrb	r4, [r3, r4]
    1a5e:	4384      	bics	r4, r0
    1a60:	46a1      	mov	r9, r4
    1a62:	4644      	mov	r4, r8
    1a64:	464e      	mov	r6, r9
    1a66:	551e      	strb	r6, [r3, r4]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a68:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a6a:	438c      	bics	r4, r1
    1a6c:	46a1      	mov	r9, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a6e:	4644      	mov	r4, r8
    1a70:	464e      	mov	r6, r9
    1a72:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1a74:	2480      	movs	r4, #128	; 0x80
    1a76:	03e4      	lsls	r4, r4, #15
    1a78:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1a7a:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a7c:	2480      	movs	r4, #128	; 0x80
    1a7e:	05e4      	lsls	r4, r4, #23
    1a80:	629c      	str	r4, [r3, #40]	; 0x28
    1a82:	4c3b      	ldr	r4, [pc, #236]	; (1b70 <gpio_init+0x238>)
    1a84:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1a86:	2456      	movs	r4, #86	; 0x56
    1a88:	46a1      	mov	r9, r4
    1a8a:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1a8c:	438c      	bics	r4, r1
    1a8e:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1a90:	464c      	mov	r4, r9
    1a92:	4646      	mov	r6, r8
    1a94:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1a96:	2480      	movs	r4, #128	; 0x80
    1a98:	0464      	lsls	r4, r4, #17
    1a9a:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1a9c:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1a9e:	2480      	movs	r4, #128	; 0x80
    1aa0:	05e4      	lsls	r4, r4, #23
    1aa2:	629c      	str	r4, [r3, #40]	; 0x28
    1aa4:	4c33      	ldr	r4, [pc, #204]	; (1b74 <gpio_init+0x23c>)
    1aa6:	629c      	str	r4, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1aa8:	2458      	movs	r4, #88	; 0x58
    1aaa:	46a1      	mov	r9, r4
    1aac:	5d1c      	ldrb	r4, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1aae:	438c      	bics	r4, r1
    1ab0:	46a0      	mov	r8, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1ab2:	464c      	mov	r4, r9
    1ab4:	4646      	mov	r6, r8
    1ab6:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1ab8:	2480      	movs	r4, #128	; 0x80
    1aba:	04a4      	lsls	r4, r4, #18
    1abc:	6154      	str	r4, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1abe:	6094      	str	r4, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1ac0:	2480      	movs	r4, #128	; 0x80
    1ac2:	05e4      	lsls	r4, r4, #23
    1ac4:	629c      	str	r4, [r3, #40]	; 0x28
    1ac6:	4e2c      	ldr	r6, [pc, #176]	; (1b78 <gpio_init+0x240>)
    1ac8:	629e      	str	r6, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1aca:	2459      	movs	r4, #89	; 0x59
    1acc:	5d1e      	ldrb	r6, [r3, r4]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ace:	438e      	bics	r6, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1ad0:	551e      	strb	r6, [r3, r4]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1ad2:	2640      	movs	r6, #64	; 0x40
    1ad4:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1ad6:	4e29      	ldr	r6, [pc, #164]	; (1b7c <gpio_init+0x244>)
    1ad8:	51de      	str	r6, [r3, r7]
    1ada:	4c21      	ldr	r4, [pc, #132]	; (1b60 <gpio_init+0x228>)
    1adc:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1ade:	26c6      	movs	r6, #198	; 0xc6
    1ae0:	5d9c      	ldrb	r4, [r3, r6]
    1ae2:	4384      	bics	r4, r0
    1ae4:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ae6:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ae8:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1aea:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1aec:	3ea6      	subs	r6, #166	; 0xa6
    1aee:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1af0:	4e23      	ldr	r6, [pc, #140]	; (1b80 <gpio_init+0x248>)
    1af2:	51de      	str	r6, [r3, r7]
    1af4:	4c1a      	ldr	r4, [pc, #104]	; (1b60 <gpio_init+0x228>)
    1af6:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1af8:	26c5      	movs	r6, #197	; 0xc5
    1afa:	5d9c      	ldrb	r4, [r3, r6]
    1afc:	4384      	bics	r4, r0
    1afe:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1b00:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1b02:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1b04:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1b06:	3eb5      	subs	r6, #181	; 0xb5
    1b08:	5156      	str	r6, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1b0a:	4e1e      	ldr	r6, [pc, #120]	; (1b84 <gpio_init+0x24c>)
    1b0c:	51de      	str	r6, [r3, r7]
    1b0e:	4c14      	ldr	r4, [pc, #80]	; (1b60 <gpio_init+0x228>)
    1b10:	51dc      	str	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1b12:	26c4      	movs	r6, #196	; 0xc4
    1b14:	5d9c      	ldrb	r4, [r3, r6]
    1b16:	4384      	bics	r4, r0
    1b18:	559c      	strb	r4, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1b1a:	5d9c      	ldrb	r4, [r3, r6]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1b1c:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1b1e:	559c      	strb	r4, [r3, r6]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1b20:	4664      	mov	r4, ip
    1b22:	5154      	str	r4, [r2, r5]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1b24:	4a18      	ldr	r2, [pc, #96]	; (1b88 <gpio_init+0x250>)
    1b26:	51da      	str	r2, [r3, r7]
    1b28:	4a0d      	ldr	r2, [pc, #52]	; (1b60 <gpio_init+0x228>)
    1b2a:	51da      	str	r2, [r3, r7]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1b2c:	22c7      	movs	r2, #199	; 0xc7
    1b2e:	5c9c      	ldrb	r4, [r3, r2]
    1b30:	4384      	bics	r4, r0
    1b32:	549c      	strb	r4, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1b34:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1b36:	4388      	bics	r0, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1b38:	5498      	strb	r0, [r3, r2]
}
    1b3a:	bc3c      	pop	{r2, r3, r4, r5}
    1b3c:	4690      	mov	r8, r2
    1b3e:	4699      	mov	r9, r3
    1b40:	46a2      	mov	sl, r4
    1b42:	46ab      	mov	fp, r5
    1b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1b46:	46c0      	nop			; (mov r8, r8)
    1b48:	41004400 	.word	0x41004400
    1b4c:	40000080 	.word	0x40000080
    1b50:	40000100 	.word	0x40000100
    1b54:	40000200 	.word	0x40000200
    1b58:	40000400 	.word	0x40000400
    1b5c:	40020800 	.word	0x40020800
    1b60:	c0020000 	.word	0xc0020000
    1b64:	40008000 	.word	0x40008000
    1b68:	c0000080 	.word	0xc0000080
    1b6c:	40020400 	.word	0x40020400
    1b70:	c0000040 	.word	0xc0000040
    1b74:	c0000100 	.word	0xc0000100
    1b78:	c0000200 	.word	0xc0000200
    1b7c:	40020040 	.word	0x40020040
    1b80:	40020020 	.word	0x40020020
    1b84:	40020010 	.word	0x40020010
    1b88:	40020080 	.word	0x40020080

00001b8c <EXT_IRG_init>:
void EXT_IRG_init(void){
    1b8c:	b510      	push	{r4, lr}
    1b8e:	4a11      	ldr	r2, [pc, #68]	; (1bd4 <EXT_IRG_init+0x48>)
    1b90:	4b11      	ldr	r3, [pc, #68]	; (1bd8 <EXT_IRG_init+0x4c>)
    1b92:	805a      	strh	r2, [r3, #2]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1b94:	2180      	movs	r1, #128	; 0x80
    1b96:	0049      	lsls	r1, r1, #1
    1b98:	2384      	movs	r3, #132	; 0x84
    1b9a:	22c0      	movs	r2, #192	; 0xc0
    1b9c:	05d2      	lsls	r2, r2, #23
    1b9e:	50d1      	str	r1, [r2, r3]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1ba0:	4b0e      	ldr	r3, [pc, #56]	; (1bdc <EXT_IRG_init+0x50>)
    1ba2:	22a8      	movs	r2, #168	; 0xa8
    1ba4:	490e      	ldr	r1, [pc, #56]	; (1be0 <EXT_IRG_init+0x54>)
    1ba6:	5099      	str	r1, [r3, r2]
    1ba8:	490e      	ldr	r1, [pc, #56]	; (1be4 <EXT_IRG_init+0x58>)
    1baa:	5099      	str	r1, [r3, r2]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1bac:	21c8      	movs	r1, #200	; 0xc8
    1bae:	5c5a      	ldrb	r2, [r3, r1]
    1bb0:	2004      	movs	r0, #4
    1bb2:	4382      	bics	r2, r0
    1bb4:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1bb6:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1bb8:	3803      	subs	r0, #3
    1bba:	4382      	bics	r2, r0
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1bbc:	4302      	orrs	r2, r0
    1bbe:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1bc0:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1bc2:	3914      	subs	r1, #20
    1bc4:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1bc6:	200f      	movs	r0, #15
    1bc8:	4382      	bics	r2, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1bca:	545a      	strb	r2, [r3, r1]
	ext_irq_init();
    1bcc:	f7fe fb0e 	bl	1ec <ext_irq_init>
}
    1bd0:	bd10      	pop	{r4, pc}
    1bd2:	46c0      	nop			; (mov r8, r8)
    1bd4:	00004103 	.word	0x00004103
    1bd8:	40000c00 	.word	0x40000c00
    1bdc:	41004400 	.word	0x41004400
    1be0:	40020100 	.word	0x40020100
    1be4:	c0020000 	.word	0xc0020000

00001be8 <ETH_SPI_init>:
void ETH_SPI_init(void){
    1be8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1bea:	46d6      	mov	lr, sl
    1bec:	4647      	mov	r7, r8
    1bee:	b580      	push	{r7, lr}
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
    1bf0:	4a34      	ldr	r2, [pc, #208]	; (1cc4 <ETH_SPI_init+0xdc>)
    1bf2:	6a13      	ldr	r3, [r2, #32]
    1bf4:	2104      	movs	r1, #4
    1bf6:	4688      	mov	r8, r1
    1bf8:	430b      	orrs	r3, r1
    1bfa:	6213      	str	r3, [r2, #32]
    1bfc:	4a32      	ldr	r2, [pc, #200]	; (1cc8 <ETH_SPI_init+0xe0>)
    1bfe:	4b33      	ldr	r3, [pc, #204]	; (1ccc <ETH_SPI_init+0xe4>)
    1c00:	805a      	strh	r2, [r3, #2]
	spi_m_sync_init(&ETH_SPI, SERCOM0);
    1c02:	4933      	ldr	r1, [pc, #204]	; (1cd0 <ETH_SPI_init+0xe8>)
    1c04:	4833      	ldr	r0, [pc, #204]	; (1cd4 <ETH_SPI_init+0xec>)
    1c06:	f7fe fc53 	bl	4b0 <spi_m_sync_init>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1c0a:	22c0      	movs	r2, #192	; 0xc0
    1c0c:	05d2      	lsls	r2, r2, #23
    1c0e:	2310      	movs	r3, #16
    1c10:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1c12:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c14:	4b30      	ldr	r3, [pc, #192]	; (1cd8 <ETH_SPI_init+0xf0>)
    1c16:	4931      	ldr	r1, [pc, #196]	; (1cdc <ETH_SPI_init+0xf4>)
    1c18:	6299      	str	r1, [r3, #40]	; 0x28
    1c1a:	21c0      	movs	r1, #192	; 0xc0
    1c1c:	0609      	lsls	r1, r1, #24
    1c1e:	468a      	mov	sl, r1
    1c20:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c22:	2044      	movs	r0, #68	; 0x44
    1c24:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c26:	2401      	movs	r4, #1
    1c28:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1c2a:	2501      	movs	r5, #1
    1c2c:	4329      	orrs	r1, r5
    1c2e:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c30:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1c32:	2132      	movs	r1, #50	; 0x32
    1c34:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1c36:	270f      	movs	r7, #15
    1c38:	43b8      	bics	r0, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1c3a:	2603      	movs	r6, #3
    1c3c:	46b4      	mov	ip, r6
    1c3e:	4666      	mov	r6, ip
    1c40:	4330      	orrs	r0, r6
    1c42:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1c44:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1c46:	2020      	movs	r0, #32
    1c48:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1c4a:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c4c:	4824      	ldr	r0, [pc, #144]	; (1ce0 <ETH_SPI_init+0xf8>)
    1c4e:	6298      	str	r0, [r3, #40]	; 0x28
    1c50:	4650      	mov	r0, sl
    1c52:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c54:	2045      	movs	r0, #69	; 0x45
    1c56:	4682      	mov	sl, r0
    1c58:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c5a:	43a0      	bics	r0, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1c5c:	4328      	orrs	r0, r5
    1c5e:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c60:	4656      	mov	r6, sl
    1c62:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1c64:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1c66:	3e36      	subs	r6, #54	; 0x36
    1c68:	4030      	ands	r0, r6
	tmp |= PORT_PMUX_PMUXO(data);
    1c6a:	2630      	movs	r6, #48	; 0x30
    1c6c:	46b2      	mov	sl, r6
    1c6e:	4656      	mov	r6, sl
    1c70:	4330      	orrs	r0, r6
    1c72:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1c74:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1c76:	310e      	adds	r1, #14
    1c78:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1c7a:	4a1a      	ldr	r2, [pc, #104]	; (1ce4 <ETH_SPI_init+0xfc>)
    1c7c:	629a      	str	r2, [r3, #40]	; 0x28
    1c7e:	4a1a      	ldr	r2, [pc, #104]	; (1ce8 <ETH_SPI_init+0x100>)
    1c80:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1c82:	2246      	movs	r2, #70	; 0x46
    1c84:	5c99      	ldrb	r1, [r3, r2]
    1c86:	4640      	mov	r0, r8
    1c88:	4381      	bics	r1, r0
    1c8a:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1c8c:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1c8e:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1c90:	4329      	orrs	r1, r5
    1c92:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1c94:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1c96:	2133      	movs	r1, #51	; 0x33
    1c98:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1c9a:	43ba      	bics	r2, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1c9c:	4660      	mov	r0, ip
    1c9e:	4302      	orrs	r2, r0
    1ca0:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1ca2:	545a      	strb	r2, [r3, r1]
	spi_m_sync_init(&ETH_SPI, SERCOM0);
    1ca4:	490a      	ldr	r1, [pc, #40]	; (1cd0 <ETH_SPI_init+0xe8>)
    1ca6:	480b      	ldr	r0, [pc, #44]	; (1cd4 <ETH_SPI_init+0xec>)
    1ca8:	f7fe fc02 	bl	4b0 <spi_m_sync_init>
	spi_m_sync_get_io_descriptor(&ETH_SPI, &eth_spi);
    1cac:	490f      	ldr	r1, [pc, #60]	; (1cec <ETH_SPI_init+0x104>)
    1cae:	4809      	ldr	r0, [pc, #36]	; (1cd4 <ETH_SPI_init+0xec>)
    1cb0:	f7fe fc8a 	bl	5c8 <spi_m_sync_get_io_descriptor>
	spi_m_sync_enable(&ETH_SPI);
    1cb4:	4807      	ldr	r0, [pc, #28]	; (1cd4 <ETH_SPI_init+0xec>)
    1cb6:	f7fe fc23 	bl	500 <spi_m_sync_enable>
}
    1cba:	bc0c      	pop	{r2, r3}
    1cbc:	4690      	mov	r8, r2
    1cbe:	469a      	mov	sl, r3
    1cc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1cc2:	46c0      	nop			; (mov r8, r8)
    1cc4:	40000400 	.word	0x40000400
    1cc8:	0000400d 	.word	0x0000400d
    1ccc:	40000c00 	.word	0x40000c00
    1cd0:	42000800 	.word	0x42000800
    1cd4:	20000bd0 	.word	0x20000bd0
    1cd8:	41004400 	.word	0x41004400
    1cdc:	40000010 	.word	0x40000010
    1ce0:	40000020 	.word	0x40000020
    1ce4:	40020040 	.word	0x40020040
    1ce8:	c0020000 	.word	0xc0020000
    1cec:	20000bb0 	.word	0x20000bb0

00001cf0 <ETH_SPI_Select>:
/**
 * \brief Set output level on port with mask
 */
static inline void _gpio_set_level(const enum gpio_port port, const uint32_t mask, const bool level)
{
	if (level) {
    1cf0:	2800      	cmp	r0, #0
    1cf2:	d104      	bne.n	1cfe <ETH_SPI_Select+0xe>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1cf4:	2280      	movs	r2, #128	; 0x80
    1cf6:	23c0      	movs	r3, #192	; 0xc0
    1cf8:	05db      	lsls	r3, r3, #23
    1cfa:	615a      	str	r2, [r3, #20]
}
    1cfc:	4770      	bx	lr
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    1cfe:	2280      	movs	r2, #128	; 0x80
    1d00:	23c0      	movs	r3, #192	; 0xc0
    1d02:	05db      	lsls	r3, r3, #23
    1d04:	619a      	str	r2, [r3, #24]
    1d06:	e7f9      	b.n	1cfc <ETH_SPI_Select+0xc>

00001d08 <W5500_Select>:
void W5500_Select(void){
    1d08:	b510      	push	{r4, lr}
	ETH_SPI_Select(false);
    1d0a:	2000      	movs	r0, #0
    1d0c:	f7ff fff0 	bl	1cf0 <ETH_SPI_Select>
}
    1d10:	bd10      	pop	{r4, pc}

00001d12 <W5500_Unselect>:
void W5500_Unselect(void){
    1d12:	b510      	push	{r4, lr}
	ETH_SPI_Select(true);
    1d14:	2001      	movs	r0, #1
    1d16:	f7ff ffeb 	bl	1cf0 <ETH_SPI_Select>
}
    1d1a:	bd10      	pop	{r4, pc}

00001d1c <W5500_ReadBuff>:
void W5500_ReadBuff(uint8_t* buff, uint16_t len){
    1d1c:	b510      	push	{r4, lr}
    1d1e:	0003      	movs	r3, r0
    1d20:	000a      	movs	r2, r1
	io_read(eth_spi,buff,len);
    1d22:	4903      	ldr	r1, [pc, #12]	; (1d30 <W5500_ReadBuff+0x14>)
    1d24:	6808      	ldr	r0, [r1, #0]
    1d26:	0019      	movs	r1, r3
    1d28:	f7fe fb50 	bl	3cc <io_read>
}
    1d2c:	bd10      	pop	{r4, pc}
    1d2e:	46c0      	nop			; (mov r8, r8)
    1d30:	20000bb0 	.word	0x20000bb0

00001d34 <W5500_WriteBuff>:
void W5500_WriteBuff(uint8_t* buff, uint16_t len){
    1d34:	b510      	push	{r4, lr}
    1d36:	0003      	movs	r3, r0
    1d38:	000a      	movs	r2, r1
	io_write(eth_spi,buff,len);
    1d3a:	4903      	ldr	r1, [pc, #12]	; (1d48 <W5500_WriteBuff+0x14>)
    1d3c:	6808      	ldr	r0, [r1, #0]
    1d3e:	0019      	movs	r1, r3
    1d40:	f7fe fb2a 	bl	398 <io_write>
}
    1d44:	bd10      	pop	{r4, pc}
    1d46:	46c0      	nop			; (mov r8, r8)
    1d48:	20000bb0 	.word	0x20000bb0

00001d4c <W5500_ReadByte>:
uint8_t W5500_ReadByte(void){
    1d4c:	b510      	push	{r4, lr}
    1d4e:	b082      	sub	sp, #8
	uint8_t data_byte = 0;
    1d50:	466b      	mov	r3, sp
    1d52:	1ddc      	adds	r4, r3, #7
    1d54:	2300      	movs	r3, #0
    1d56:	7023      	strb	r3, [r4, #0]
	io_read(eth_spi,&data_byte,1);
    1d58:	4b04      	ldr	r3, [pc, #16]	; (1d6c <W5500_ReadByte+0x20>)
    1d5a:	6818      	ldr	r0, [r3, #0]
    1d5c:	2201      	movs	r2, #1
    1d5e:	0021      	movs	r1, r4
    1d60:	f7fe fb34 	bl	3cc <io_read>
	return data_byte;
    1d64:	7820      	ldrb	r0, [r4, #0]
}
    1d66:	b002      	add	sp, #8
    1d68:	bd10      	pop	{r4, pc}
    1d6a:	46c0      	nop			; (mov r8, r8)
    1d6c:	20000bb0 	.word	0x20000bb0

00001d70 <W5500_Write_byte>:
void W5500_Write_byte(uint8_t byte){
    1d70:	b500      	push	{lr}
    1d72:	b083      	sub	sp, #12
    1d74:	466b      	mov	r3, sp
    1d76:	1dd9      	adds	r1, r3, #7
    1d78:	7008      	strb	r0, [r1, #0]
	io_write(eth_spi, &byte, 1);
    1d7a:	4b03      	ldr	r3, [pc, #12]	; (1d88 <W5500_Write_byte+0x18>)
    1d7c:	6818      	ldr	r0, [r3, #0]
    1d7e:	2201      	movs	r2, #1
    1d80:	f7fe fb0a 	bl	398 <io_write>
}
    1d84:	b003      	add	sp, #12
    1d86:	bd00      	pop	{pc}
    1d88:	20000bb0 	.word	0x20000bb0

00001d8c <EXT_SPI_init>:
void EXT_SPI_init(void){
    1d8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d8e:	46ce      	mov	lr, r9
    1d90:	b500      	push	{lr}
    1d92:	4a35      	ldr	r2, [pc, #212]	; (1e68 <EXT_SPI_init+0xdc>)
    1d94:	6a13      	ldr	r3, [r2, #32]
    1d96:	2120      	movs	r1, #32
    1d98:	430b      	orrs	r3, r1
    1d9a:	6213      	str	r3, [r2, #32]
    1d9c:	4a33      	ldr	r2, [pc, #204]	; (1e6c <EXT_SPI_init+0xe0>)
    1d9e:	4b34      	ldr	r3, [pc, #208]	; (1e70 <EXT_SPI_init+0xe4>)
    1da0:	805a      	strh	r2, [r3, #2]
	spi_m_sync_init(&EXT_SPI, SERCOM3);
    1da2:	4934      	ldr	r1, [pc, #208]	; (1e74 <EXT_SPI_init+0xe8>)
    1da4:	4834      	ldr	r0, [pc, #208]	; (1e78 <EXT_SPI_init+0xec>)
    1da6:	f7fe fb83 	bl	4b0 <spi_m_sync_init>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1daa:	22c0      	movs	r2, #192	; 0xc0
    1dac:	05d2      	lsls	r2, r2, #23
    1dae:	2380      	movs	r3, #128	; 0x80
    1db0:	025b      	lsls	r3, r3, #9
    1db2:	6153      	str	r3, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1db4:	6093      	str	r3, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1db6:	4b31      	ldr	r3, [pc, #196]	; (1e7c <EXT_SPI_init+0xf0>)
    1db8:	2180      	movs	r1, #128	; 0x80
    1dba:	05c9      	lsls	r1, r1, #23
    1dbc:	4689      	mov	r9, r1
    1dbe:	6299      	str	r1, [r3, #40]	; 0x28
    1dc0:	492f      	ldr	r1, [pc, #188]	; (1e80 <EXT_SPI_init+0xf4>)
    1dc2:	6299      	str	r1, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1dc4:	2050      	movs	r0, #80	; 0x50
    1dc6:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1dc8:	2401      	movs	r4, #1
    1dca:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1dcc:	2501      	movs	r5, #1
    1dce:	4329      	orrs	r1, r5
    1dd0:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1dd2:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1dd4:	2138      	movs	r1, #56	; 0x38
    1dd6:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1dd8:	270f      	movs	r7, #15
    1dda:	43b8      	bics	r0, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1ddc:	2603      	movs	r6, #3
    1dde:	46b4      	mov	ip, r6
    1de0:	4666      	mov	r6, ip
    1de2:	4330      	orrs	r0, r6
    1de4:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1de6:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    1de8:	2080      	movs	r0, #128	; 0x80
    1dea:	0280      	lsls	r0, r0, #10
    1dec:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
    1dee:	6090      	str	r0, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1df0:	4648      	mov	r0, r9
    1df2:	6298      	str	r0, [r3, #40]	; 0x28
    1df4:	4823      	ldr	r0, [pc, #140]	; (1e84 <EXT_SPI_init+0xf8>)
    1df6:	6298      	str	r0, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1df8:	2051      	movs	r0, #81	; 0x51
    1dfa:	4681      	mov	r9, r0
    1dfc:	5c18      	ldrb	r0, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1dfe:	43a0      	bics	r0, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1e00:	4328      	orrs	r0, r5
    1e02:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1e04:	464e      	mov	r6, r9
    1e06:	5598      	strb	r0, [r3, r6]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1e08:	5c58      	ldrb	r0, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1e0a:	3e42      	subs	r6, #66	; 0x42
    1e0c:	4030      	ands	r0, r6
	tmp |= PORT_PMUX_PMUXO(data);
    1e0e:	2630      	movs	r6, #48	; 0x30
    1e10:	46b1      	mov	r9, r6
    1e12:	464e      	mov	r6, r9
    1e14:	4330      	orrs	r0, r6
    1e16:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1e18:	5458      	strb	r0, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
    1e1a:	2180      	movs	r1, #128	; 0x80
    1e1c:	02c9      	lsls	r1, r1, #11
    1e1e:	6051      	str	r1, [r2, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
    1e20:	4a19      	ldr	r2, [pc, #100]	; (1e88 <EXT_SPI_init+0xfc>)
    1e22:	629a      	str	r2, [r3, #40]	; 0x28
    1e24:	4a19      	ldr	r2, [pc, #100]	; (1e8c <EXT_SPI_init+0x100>)
    1e26:	629a      	str	r2, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1e28:	2252      	movs	r2, #82	; 0x52
    1e2a:	5c99      	ldrb	r1, [r3, r2]
    1e2c:	2004      	movs	r0, #4
    1e2e:	4381      	bics	r1, r0
    1e30:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1e32:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1e34:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1e36:	4329      	orrs	r1, r5
    1e38:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1e3a:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1e3c:	2139      	movs	r1, #57	; 0x39
    1e3e:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1e40:	43ba      	bics	r2, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1e42:	4660      	mov	r0, ip
    1e44:	4302      	orrs	r2, r0
    1e46:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1e48:	545a      	strb	r2, [r3, r1]
	spi_m_sync_init(&EXT_SPI, SERCOM3);
    1e4a:	490a      	ldr	r1, [pc, #40]	; (1e74 <EXT_SPI_init+0xe8>)
    1e4c:	480a      	ldr	r0, [pc, #40]	; (1e78 <EXT_SPI_init+0xec>)
    1e4e:	f7fe fb2f 	bl	4b0 <spi_m_sync_init>
	spi_m_sync_get_io_descriptor(&EXT_SPI, &ext_spi);
    1e52:	490f      	ldr	r1, [pc, #60]	; (1e90 <EXT_SPI_init+0x104>)
    1e54:	4808      	ldr	r0, [pc, #32]	; (1e78 <EXT_SPI_init+0xec>)
    1e56:	f7fe fbb7 	bl	5c8 <spi_m_sync_get_io_descriptor>
	spi_m_sync_enable(&EXT_SPI);
    1e5a:	4807      	ldr	r0, [pc, #28]	; (1e78 <EXT_SPI_init+0xec>)
    1e5c:	f7fe fb50 	bl	500 <spi_m_sync_enable>
}
    1e60:	bc04      	pop	{r2}
    1e62:	4691      	mov	r9, r2
    1e64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1e66:	46c0      	nop			; (mov r8, r8)
    1e68:	40000400 	.word	0x40000400
    1e6c:	00004010 	.word	0x00004010
    1e70:	40000c00 	.word	0x40000c00
    1e74:	42001400 	.word	0x42001400
    1e78:	20000bb8 	.word	0x20000bb8
    1e7c:	41004400 	.word	0x41004400
    1e80:	c0000001 	.word	0xc0000001
    1e84:	c0000002 	.word	0xc0000002
    1e88:	40020000 	.word	0x40020000
    1e8c:	c0020004 	.word	0xc0020004
    1e90:	20000bb4 	.word	0x20000bb4

00001e94 <EXT_I2C_init>:
void EXT_I2C_init(void){
    1e94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e96:	4a1e      	ldr	r2, [pc, #120]	; (1f10 <EXT_I2C_init+0x7c>)
    1e98:	6a13      	ldr	r3, [r2, #32]
    1e9a:	2110      	movs	r1, #16
    1e9c:	430b      	orrs	r3, r1
    1e9e:	6213      	str	r3, [r2, #32]
    1ea0:	4b1c      	ldr	r3, [pc, #112]	; (1f14 <EXT_I2C_init+0x80>)
    1ea2:	4a1d      	ldr	r2, [pc, #116]	; (1f18 <EXT_I2C_init+0x84>)
    1ea4:	805a      	strh	r2, [r3, #2]
    1ea6:	4a1d      	ldr	r2, [pc, #116]	; (1f1c <EXT_I2C_init+0x88>)
    1ea8:	805a      	strh	r2, [r3, #2]
	i2c_m_sync_init(&EXT_I2C, SERCOM2);
    1eaa:	4c1d      	ldr	r4, [pc, #116]	; (1f20 <EXT_I2C_init+0x8c>)
    1eac:	491d      	ldr	r1, [pc, #116]	; (1f24 <EXT_I2C_init+0x90>)
    1eae:	0020      	movs	r0, r4
    1eb0:	f7fe fa4e 	bl	350 <i2c_m_sync_init>
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1eb4:	4b1c      	ldr	r3, [pc, #112]	; (1f28 <EXT_I2C_init+0x94>)
    1eb6:	204c      	movs	r0, #76	; 0x4c
    1eb8:	5c19      	ldrb	r1, [r3, r0]
    1eba:	2204      	movs	r2, #4
    1ebc:	4391      	bics	r1, r2
    1ebe:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ec0:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ec2:	2601      	movs	r6, #1
    1ec4:	43b1      	bics	r1, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1ec6:	2501      	movs	r5, #1
    1ec8:	4329      	orrs	r1, r5
    1eca:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1ecc:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1ece:	3816      	subs	r0, #22
    1ed0:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    1ed2:	270f      	movs	r7, #15
    1ed4:	43b9      	bics	r1, r7
	tmp |= PORT_PMUX_PMUXE(data);
    1ed6:	2702      	movs	r7, #2
    1ed8:	4339      	orrs	r1, r7
    1eda:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1edc:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg &= ~PORT_PINCFG_PULLEN;
    1ede:	214d      	movs	r1, #77	; 0x4d
    1ee0:	5c5f      	ldrb	r7, [r3, r1]
    1ee2:	4397      	bics	r7, r2
    1ee4:	545f      	strb	r7, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1ee6:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1ee8:	43b2      	bics	r2, r6
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1eea:	432a      	orrs	r2, r5
    1eec:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1eee:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1ef0:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1ef2:	393e      	subs	r1, #62	; 0x3e
    1ef4:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
    1ef6:	2120      	movs	r1, #32
    1ef8:	430a      	orrs	r2, r1
    1efa:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1efc:	541a      	strb	r2, [r3, r0]
	i2c_m_sync_get_io_descriptor(&EXT_I2C, &ext_i2c);
    1efe:	490b      	ldr	r1, [pc, #44]	; (1f2c <EXT_I2C_init+0x98>)
    1f00:	0020      	movs	r0, r4
    1f02:	f7fe fa45 	bl	390 <i2c_m_sync_get_io_descriptor>
	i2c_m_sync_enable(&EXT_I2C);
    1f06:	0020      	movs	r0, r4
    1f08:	f7fe fa3e 	bl	388 <i2c_m_sync_enable>
}
    1f0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f0e:	46c0      	nop			; (mov r8, r8)
    1f10:	40000400 	.word	0x40000400
    1f14:	40000c00 	.word	0x40000c00
    1f18:	0000400f 	.word	0x0000400f
    1f1c:	0000430c 	.word	0x0000430c
    1f20:	20000c18 	.word	0x20000c18
    1f24:	42001000 	.word	0x42001000
    1f28:	41004400 	.word	0x41004400
    1f2c:	20000bec 	.word	0x20000bec

00001f30 <PWM_init>:
void PWM_init(void){
    1f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1f32:	46de      	mov	lr, fp
    1f34:	4657      	mov	r7, sl
    1f36:	464e      	mov	r6, r9
    1f38:	4645      	mov	r5, r8
    1f3a:	b5e0      	push	{r5, r6, r7, lr}
    1f3c:	4d2d      	ldr	r5, [pc, #180]	; (1ff4 <PWM_init+0xc4>)
    1f3e:	6a2a      	ldr	r2, [r5, #32]
    1f40:	2380      	movs	r3, #128	; 0x80
    1f42:	01db      	lsls	r3, r3, #7
    1f44:	4313      	orrs	r3, r2
    1f46:	622b      	str	r3, [r5, #32]
    1f48:	4b2b      	ldr	r3, [pc, #172]	; (1ff8 <PWM_init+0xc8>)
    1f4a:	469a      	mov	sl, r3
    1f4c:	4b2b      	ldr	r3, [pc, #172]	; (1ffc <PWM_init+0xcc>)
    1f4e:	469b      	mov	fp, r3
    1f50:	4653      	mov	r3, sl
    1f52:	465a      	mov	r2, fp
    1f54:	805a      	strh	r2, [r3, #2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f56:	4c2a      	ldr	r4, [pc, #168]	; (2000 <STACK_SIZE>)
    1f58:	22d1      	movs	r2, #209	; 0xd1
    1f5a:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f5c:	2101      	movs	r1, #1
    1f5e:	4689      	mov	r9, r1
    1f60:	438b      	bics	r3, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1f62:	4688      	mov	r8, r1
    1f64:	4641      	mov	r1, r8
    1f66:	430b      	orrs	r3, r1
    1f68:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1f6a:	54a3      	strb	r3, [r4, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1f6c:	3a19      	subs	r2, #25
    1f6e:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1f70:	270f      	movs	r7, #15
    1f72:	403b      	ands	r3, r7
	tmp |= PORT_PMUX_PMUXO(data);
    1f74:	2640      	movs	r6, #64	; 0x40
    1f76:	4333      	orrs	r3, r6
    1f78:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1f7a:	54a3      	strb	r3, [r4, r2]
	pwm_init(&PWM_0, TC6, _tc_get_pwm());
    1f7c:	f7ff fc8a 	bl	1894 <_tc_get_pwm>
    1f80:	0002      	movs	r2, r0
    1f82:	4920      	ldr	r1, [pc, #128]	; (2004 <STACK_SIZE+0x4>)
    1f84:	4820      	ldr	r0, [pc, #128]	; (2008 <STACK_SIZE+0x8>)
    1f86:	f7fe fa47 	bl	418 <pwm_init>
    1f8a:	6a2a      	ldr	r2, [r5, #32]
    1f8c:	2380      	movs	r3, #128	; 0x80
    1f8e:	021b      	lsls	r3, r3, #8
    1f90:	4313      	orrs	r3, r2
    1f92:	622b      	str	r3, [r5, #32]
    1f94:	4653      	mov	r3, sl
    1f96:	465a      	mov	r2, fp
    1f98:	805a      	strh	r2, [r3, #2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    1f9a:	2255      	movs	r2, #85	; 0x55
    1f9c:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    1f9e:	4649      	mov	r1, r9
    1fa0:	438b      	bics	r3, r1
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    1fa2:	4641      	mov	r1, r8
    1fa4:	430b      	orrs	r3, r1
    1fa6:	b2db      	uxtb	r3, r3
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    1fa8:	54a3      	strb	r3, [r4, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    1faa:	3a1b      	subs	r2, #27
    1fac:	5ca3      	ldrb	r3, [r4, r2]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
    1fae:	401f      	ands	r7, r3
	tmp |= PORT_PMUX_PMUXO(data);
    1fb0:	433e      	orrs	r6, r7
    1fb2:	b2f6      	uxtb	r6, r6
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    1fb4:	54a6      	strb	r6, [r4, r2]
	pwm_init(&PWM_1, TC7, _tc_get_pwm());
    1fb6:	f7ff fc6d 	bl	1894 <_tc_get_pwm>
    1fba:	0002      	movs	r2, r0
    1fbc:	4c13      	ldr	r4, [pc, #76]	; (200c <STACK_SIZE+0xc>)
    1fbe:	4914      	ldr	r1, [pc, #80]	; (2010 <STACK_SIZE+0x10>)
    1fc0:	0020      	movs	r0, r4
    1fc2:	f7fe fa29 	bl	418 <pwm_init>
	pwm_set_parameters(&PWM_0, 5000, 0);
    1fc6:	4d13      	ldr	r5, [pc, #76]	; (2014 <STACK_SIZE+0x14>)
    1fc8:	2200      	movs	r2, #0
    1fca:	0029      	movs	r1, r5
    1fcc:	480e      	ldr	r0, [pc, #56]	; (2008 <STACK_SIZE+0x8>)
    1fce:	f7fe fa5b 	bl	488 <pwm_set_parameters>
	pwm_set_parameters(&PWM_1, 5000, 0);
    1fd2:	2200      	movs	r2, #0
    1fd4:	0029      	movs	r1, r5
    1fd6:	0020      	movs	r0, r4
    1fd8:	f7fe fa56 	bl	488 <pwm_set_parameters>
	pwm_enable(&PWM_0);
    1fdc:	480a      	ldr	r0, [pc, #40]	; (2008 <STACK_SIZE+0x8>)
    1fde:	f7fe fa3b 	bl	458 <pwm_enable>
	pwm_enable(&PWM_1);
    1fe2:	0020      	movs	r0, r4
    1fe4:	f7fe fa38 	bl	458 <pwm_enable>
}
    1fe8:	bc3c      	pop	{r2, r3, r4, r5}
    1fea:	4690      	mov	r8, r2
    1fec:	4699      	mov	r9, r3
    1fee:	46a2      	mov	sl, r4
    1ff0:	46ab      	mov	fp, r5
    1ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1ff4:	40000400 	.word	0x40000400
    1ff8:	40000c00 	.word	0x40000c00
    1ffc:	00004016 	.word	0x00004016
    2000:	41004400 	.word	0x41004400
    2004:	42003800 	.word	0x42003800
    2008:	20000afc 	.word	0x20000afc
    200c:	20000b58 	.word	0x20000b58
    2010:	42003c00 	.word	0x42003c00
    2014:	00001388 	.word	0x00001388

00002018 <DEBUG_Serial_init>:
void DEBUG_Serial_init(void){
    2018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    201a:	4a19      	ldr	r2, [pc, #100]	; (2080 <DEBUG_Serial_init+0x68>)
    201c:	6a13      	ldr	r3, [r2, #32]
    201e:	2140      	movs	r1, #64	; 0x40
    2020:	430b      	orrs	r3, r1
    2022:	6213      	str	r3, [r2, #32]
    2024:	4a17      	ldr	r2, [pc, #92]	; (2084 <DEBUG_Serial_init+0x6c>)
    2026:	4b18      	ldr	r3, [pc, #96]	; (2088 <DEBUG_Serial_init+0x70>)
    2028:	805a      	strh	r2, [r3, #2]
	usart_sync_init(&DEBUG_SERIAL, SERCOM4, (void *)NULL);
    202a:	2200      	movs	r2, #0
    202c:	4917      	ldr	r1, [pc, #92]	; (208c <DEBUG_Serial_init+0x74>)
    202e:	4818      	ldr	r0, [pc, #96]	; (2090 <DEBUG_Serial_init+0x78>)
    2030:	f7fe fc18 	bl	864 <usart_sync_init>
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2034:	4b17      	ldr	r3, [pc, #92]	; (2094 <DEBUG_Serial_init+0x7c>)
    2036:	21cc      	movs	r1, #204	; 0xcc
    2038:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
    203a:	2401      	movs	r4, #1
    203c:	43a2      	bics	r2, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    203e:	2701      	movs	r7, #1
    2040:	433a      	orrs	r2, r7
    2042:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2044:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2046:	22b6      	movs	r2, #182	; 0xb6
    2048:	5c98      	ldrb	r0, [r3, r2]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    204a:	260f      	movs	r6, #15
    204c:	43b0      	bics	r0, r6
	tmp |= PORT_PMUX_PMUXE(data);
    204e:	2502      	movs	r5, #2
    2050:	4328      	orrs	r0, r5
    2052:	b2c0      	uxtb	r0, r0
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    2054:	5498      	strb	r0, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
    2056:	3218      	adds	r2, #24
    2058:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
    205a:	43a1      	bics	r1, r4
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
    205c:	4339      	orrs	r1, r7
    205e:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
    2060:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
    2062:	21b7      	movs	r1, #183	; 0xb7
    2064:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
    2066:	43b2      	bics	r2, r6
	tmp |= PORT_PMUX_PMUXE(data);
    2068:	432a      	orrs	r2, r5
    206a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
    206c:	545a      	strb	r2, [r3, r1]
	usart_sync_get_io_descriptor(&DEBUG_SERIAL, &debug_serial);
    206e:	490a      	ldr	r1, [pc, #40]	; (2098 <DEBUG_Serial_init+0x80>)
    2070:	4807      	ldr	r0, [pc, #28]	; (2090 <DEBUG_Serial_init+0x78>)
    2072:	f7fe fc2b 	bl	8cc <usart_sync_get_io_descriptor>
	usart_sync_enable(&DEBUG_SERIAL);
    2076:	4806      	ldr	r0, [pc, #24]	; (2090 <DEBUG_Serial_init+0x78>)
    2078:	f7fe fc16 	bl	8a8 <usart_sync_enable>
}
    207c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    207e:	46c0      	nop			; (mov r8, r8)
    2080:	40000400 	.word	0x40000400
    2084:	00004011 	.word	0x00004011
    2088:	40000c00 	.word	0x40000c00
    208c:	42001800 	.word	0x42001800
    2090:	20000bf0 	.word	0x20000bf0
    2094:	41004400 	.word	0x41004400
    2098:	20000be8 	.word	0x20000be8

0000209c <mcu_init>:
{
    209c:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
    209e:	f7fe fc7b 	bl	998 <_init_chip>
	gpio_init();
    20a2:	f7ff fc49 	bl	1938 <gpio_init>
	ETH_SPI_init();
    20a6:	f7ff fd9f 	bl	1be8 <ETH_SPI_init>
	EXT_SPI_init();
    20aa:	f7ff fe6f 	bl	1d8c <EXT_SPI_init>
	EXT_I2C_init();
    20ae:	f7ff fef1 	bl	1e94 <EXT_I2C_init>
	PWM_init();
    20b2:	f7ff ff3d 	bl	1f30 <PWM_init>
	DEBUG_Serial_init();
    20b6:	f7ff ffaf 	bl	2018 <DEBUG_Serial_init>
	ext_irq_register(ETH_INT, ETH_Handler);
    20ba:	4904      	ldr	r1, [pc, #16]	; (20cc <mcu_init+0x30>)
    20bc:	2028      	movs	r0, #40	; 0x28
    20be:	f7fe f8ad 	bl	21c <ext_irq_register>
	TIMER_IRQ_init();
    20c2:	f7ff fc01 	bl	18c8 <TIMER_IRQ_init>
	EXT_IRG_init();
    20c6:	f7ff fd61 	bl	1b8c <EXT_IRG_init>
}
    20ca:	bd10      	pop	{r4, pc}
    20cc:	000018b9 	.word	0x000018b9

000020d0 <close>:
   while(getSn_SR(sn) == SOCK_CLOSED);
   return (int8_t)sn;
}	   

int8_t close(uint8_t sn)
{
    20d0:	b570      	push	{r4, r5, r6, lr}
    20d2:	0006      	movs	r6, r0
	CHECK_SOCKNUM();
    20d4:	2808      	cmp	r0, #8
    20d6:	d82f      	bhi.n	2138 <close+0x68>
      while(getSn_CR(sn) != 0);
      while(getSn_SR(sn) != SOCK_UDP);
      sendto(sn,destip,1,destip,0x3000); // send the dummy data to an unknown destination(0.0.0.1).
   };   
#endif 
	setSn_CR(sn,Sn_CR_CLOSE);
    20d8:	0084      	lsls	r4, r0, #2
    20da:	3401      	adds	r4, #1
    20dc:	00e4      	lsls	r4, r4, #3
    20de:	1c65      	adds	r5, r4, #1
    20e0:	35ff      	adds	r5, #255	; 0xff
    20e2:	2110      	movs	r1, #16
    20e4:	0028      	movs	r0, r5
    20e6:	f000 fd6b 	bl	2bc0 <WIZCHIP_WRITE>
   /* wait to process the command... */
	while( getSn_CR(sn) );
    20ea:	0028      	movs	r0, r5
    20ec:	f000 fd36 	bl	2b5c <WIZCHIP_READ>
    20f0:	2800      	cmp	r0, #0
    20f2:	d1fa      	bne.n	20ea <close+0x1a>
	/* clear all interrupt of the socket. */
	setSn_IR(sn, 0xFF);
    20f4:	2380      	movs	r3, #128	; 0x80
    20f6:	009b      	lsls	r3, r3, #2
    20f8:	18e0      	adds	r0, r4, r3
    20fa:	211f      	movs	r1, #31
    20fc:	f000 fd60 	bl	2bc0 <WIZCHIP_WRITE>
	//A20150401 : Release the sock_io_mode of socket n.
	sock_io_mode &= ~(1<<sn);
    2100:	2301      	movs	r3, #1
    2102:	40b3      	lsls	r3, r6
    2104:	43db      	mvns	r3, r3
    2106:	b21b      	sxth	r3, r3
    2108:	490d      	ldr	r1, [pc, #52]	; (2140 <close+0x70>)
    210a:	880a      	ldrh	r2, [r1, #0]
    210c:	401a      	ands	r2, r3
    210e:	800a      	strh	r2, [r1, #0]
	//
	sock_is_sending &= ~(1<<sn);
    2110:	490c      	ldr	r1, [pc, #48]	; (2144 <close+0x74>)
    2112:	880a      	ldrh	r2, [r1, #0]
    2114:	4013      	ands	r3, r2
    2116:	800b      	strh	r3, [r1, #0]
	sock_remained_size[sn] = 0;
    2118:	0072      	lsls	r2, r6, #1
    211a:	2100      	movs	r1, #0
    211c:	4b0a      	ldr	r3, [pc, #40]	; (2148 <close+0x78>)
    211e:	52d1      	strh	r1, [r2, r3]
	sock_pack_info[sn] = 0;
    2120:	4b0a      	ldr	r3, [pc, #40]	; (214c <close+0x7c>)
    2122:	2200      	movs	r2, #0
    2124:	559a      	strb	r2, [r3, r6]
	while(getSn_SR(sn) != SOCK_CLOSED);
    2126:	23c0      	movs	r3, #192	; 0xc0
    2128:	009b      	lsls	r3, r3, #2
    212a:	18e0      	adds	r0, r4, r3
    212c:	f000 fd16 	bl	2b5c <WIZCHIP_READ>
    2130:	2800      	cmp	r0, #0
    2132:	d1f8      	bne.n	2126 <close+0x56>
	return SOCK_OK;
    2134:	3001      	adds	r0, #1
}
    2136:	bd70      	pop	{r4, r5, r6, pc}
	CHECK_SOCKNUM();
    2138:	2001      	movs	r0, #1
    213a:	4240      	negs	r0, r0
    213c:	e7fb      	b.n	2136 <close+0x66>
    213e:	46c0      	nop			; (mov r8, r8)
    2140:	20000a98 	.word	0x20000a98
    2144:	20000a9a 	.word	0x20000a9a
    2148:	20000aa4 	.word	0x20000aa4
    214c:	20000a9c 	.word	0x20000a9c

00002150 <socket>:
{
    2150:	b5f0      	push	{r4, r5, r6, r7, lr}
    2152:	46c6      	mov	lr, r8
    2154:	b500      	push	{lr}
    2156:	b084      	sub	sp, #16
    2158:	0005      	movs	r5, r0
    215a:	000e      	movs	r6, r1
    215c:	4690      	mov	r8, r2
    215e:	001f      	movs	r7, r3
	CHECK_SOCKNUM();
    2160:	2808      	cmp	r0, #8
    2162:	d900      	bls.n	2166 <socket+0x16>
    2164:	e092      	b.n	228c <socket+0x13c>
	switch(protocol)
    2166:	2901      	cmp	r1, #1
    2168:	d069      	beq.n	223e <socket+0xee>
    216a:	2900      	cmp	r1, #0
    216c:	d100      	bne.n	2170 <socket+0x20>
    216e:	e090      	b.n	2292 <socket+0x142>
    2170:	2904      	cmp	r1, #4
    2172:	d900      	bls.n	2176 <socket+0x26>
    2174:	e08d      	b.n	2292 <socket+0x142>
	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
    2176:	077b      	lsls	r3, r7, #29
    2178:	d500      	bpl.n	217c <socket+0x2c>
    217a:	e08d      	b.n	2298 <socket+0x148>
	if(flag != 0)
    217c:	2f00      	cmp	r7, #0
    217e:	d004      	beq.n	218a <socket+0x3a>
   	switch(protocol)
    2180:	2e01      	cmp	r6, #1
    2182:	d069      	beq.n	2258 <socket+0x108>
    2184:	2e02      	cmp	r6, #2
    2186:	d100      	bne.n	218a <socket+0x3a>
    2188:	e06d      	b.n	2266 <socket+0x116>
	close(sn);
    218a:	0028      	movs	r0, r5
    218c:	f7ff ffa0 	bl	20d0 <close>
	   setSn_MR(sn, (protocol | (flag & 0xF0)));
    2190:	00ac      	lsls	r4, r5, #2
    2192:	3401      	adds	r4, #1
    2194:	00e4      	lsls	r4, r4, #3
    2196:	230f      	movs	r3, #15
    2198:	0039      	movs	r1, r7
    219a:	4399      	bics	r1, r3
    219c:	b249      	sxtb	r1, r1
    219e:	4331      	orrs	r1, r6
    21a0:	b2c9      	uxtb	r1, r1
    21a2:	0020      	movs	r0, r4
    21a4:	f000 fd0c 	bl	2bc0 <WIZCHIP_WRITE>
	if(!port)
    21a8:	4643      	mov	r3, r8
    21aa:	2b00      	cmp	r3, #0
    21ac:	d108      	bne.n	21c0 <socket+0x70>
	   port = sock_any_port++;
    21ae:	4a3d      	ldr	r2, [pc, #244]	; (22a4 <socket+0x154>)
    21b0:	8813      	ldrh	r3, [r2, #0]
    21b2:	4698      	mov	r8, r3
    21b4:	3301      	adds	r3, #1
    21b6:	b29b      	uxth	r3, r3
    21b8:	8013      	strh	r3, [r2, #0]
	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
    21ba:	4a3b      	ldr	r2, [pc, #236]	; (22a8 <socket+0x158>)
    21bc:	4293      	cmp	r3, r2
    21be:	d061      	beq.n	2284 <socket+0x134>
   setSn_PORT(sn,port);	
    21c0:	2380      	movs	r3, #128	; 0x80
    21c2:	00db      	lsls	r3, r3, #3
    21c4:	18e0      	adds	r0, r4, r3
    21c6:	4643      	mov	r3, r8
    21c8:	0a19      	lsrs	r1, r3, #8
    21ca:	f000 fcf9 	bl	2bc0 <WIZCHIP_WRITE>
    21ce:	4643      	mov	r3, r8
    21d0:	466a      	mov	r2, sp
    21d2:	71d3      	strb	r3, [r2, #7]
    21d4:	79d1      	ldrb	r1, [r2, #7]
    21d6:	23a0      	movs	r3, #160	; 0xa0
    21d8:	00db      	lsls	r3, r3, #3
    21da:	18e0      	adds	r0, r4, r3
    21dc:	f000 fcf0 	bl	2bc0 <WIZCHIP_WRITE>
   setSn_CR(sn,Sn_CR_OPEN);
    21e0:	1c66      	adds	r6, r4, #1
    21e2:	36ff      	adds	r6, #255	; 0xff
    21e4:	2101      	movs	r1, #1
    21e6:	0030      	movs	r0, r6
    21e8:	f000 fcea 	bl	2bc0 <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    21ec:	0030      	movs	r0, r6
    21ee:	f000 fcb5 	bl	2b5c <WIZCHIP_READ>
    21f2:	2800      	cmp	r0, #0
    21f4:	d1fa      	bne.n	21ec <socket+0x9c>
   sock_io_mode &= ~(1 <<sn);
    21f6:	2201      	movs	r2, #1
    21f8:	40aa      	lsls	r2, r5
    21fa:	43d2      	mvns	r2, r2
    21fc:	b212      	sxth	r2, r2
    21fe:	482b      	ldr	r0, [pc, #172]	; (22ac <socket+0x15c>)
    2200:	8803      	ldrh	r3, [r0, #0]
    2202:	4013      	ands	r3, r2
    2204:	b21b      	sxth	r3, r3
	sock_io_mode |= ((flag & SF_IO_NONBLOCK) << sn);   
    2206:	2101      	movs	r1, #1
    2208:	400f      	ands	r7, r1
    220a:	40af      	lsls	r7, r5
    220c:	433b      	orrs	r3, r7
    220e:	8003      	strh	r3, [r0, #0]
   sock_is_sending &= ~(1<<sn);
    2210:	4927      	ldr	r1, [pc, #156]	; (22b0 <socket+0x160>)
    2212:	880b      	ldrh	r3, [r1, #0]
    2214:	401a      	ands	r2, r3
    2216:	800a      	strh	r2, [r1, #0]
   sock_remained_size[sn] = 0;
    2218:	006b      	lsls	r3, r5, #1
    221a:	2100      	movs	r1, #0
    221c:	4a25      	ldr	r2, [pc, #148]	; (22b4 <socket+0x164>)
    221e:	5299      	strh	r1, [r3, r2]
   sock_pack_info[sn] = PACK_COMPLETED;
    2220:	4b25      	ldr	r3, [pc, #148]	; (22b8 <socket+0x168>)
    2222:	2200      	movs	r2, #0
    2224:	555a      	strb	r2, [r3, r5]
   while(getSn_SR(sn) == SOCK_CLOSED);
    2226:	23c0      	movs	r3, #192	; 0xc0
    2228:	009b      	lsls	r3, r3, #2
    222a:	18e0      	adds	r0, r4, r3
    222c:	f000 fc96 	bl	2b5c <WIZCHIP_READ>
    2230:	2800      	cmp	r0, #0
    2232:	d0f8      	beq.n	2226 <socket+0xd6>
   return (int8_t)sn;
    2234:	b268      	sxtb	r0, r5
}	   
    2236:	b004      	add	sp, #16
    2238:	bc04      	pop	{r2}
    223a:	4690      	mov	r8, r2
    223c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            getSIPR((uint8_t*)&taddr);
    223e:	2204      	movs	r2, #4
    2240:	a903      	add	r1, sp, #12
    2242:	20f0      	movs	r0, #240	; 0xf0
    2244:	0100      	lsls	r0, r0, #4
    2246:	f000 fceb 	bl	2c20 <WIZCHIP_READ_BUF>
            if(taddr == 0) return SOCKERR_SOCKINIT;
    224a:	9b03      	ldr	r3, [sp, #12]
    224c:	2b00      	cmp	r3, #0
    224e:	d000      	beq.n	2252 <socket+0x102>
    2250:	e791      	b.n	2176 <socket+0x26>
    2252:	2003      	movs	r0, #3
    2254:	4240      	negs	r0, r0
    2256:	e7ee      	b.n	2236 <socket+0xe6>
   		     if((flag & (SF_TCP_NODELAY|SF_IO_NONBLOCK))==0) return SOCKERR_SOCKFLAG;
    2258:	2321      	movs	r3, #33	; 0x21
    225a:	423b      	tst	r3, r7
    225c:	d000      	beq.n	2260 <socket+0x110>
    225e:	e794      	b.n	218a <socket+0x3a>
    2260:	2006      	movs	r0, #6
    2262:	4240      	negs	r0, r0
    2264:	e7e7      	b.n	2236 <socket+0xe6>
   	      if(flag & SF_IGMP_VER2)
    2266:	06bb      	lsls	r3, r7, #26
    2268:	d502      	bpl.n	2270 <socket+0x120>
   	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
    226a:	b27b      	sxtb	r3, r7
    226c:	2b00      	cmp	r3, #0
    226e:	da16      	bge.n	229e <socket+0x14e>
      	      if(flag & SF_UNI_BLOCK)
    2270:	06fb      	lsls	r3, r7, #27
    2272:	d400      	bmi.n	2276 <socket+0x126>
    2274:	e789      	b.n	218a <socket+0x3a>
      	         if((flag & SF_MULTI_ENABLE) == 0) return SOCKERR_SOCKFLAG;
    2276:	b27b      	sxtb	r3, r7
    2278:	2b00      	cmp	r3, #0
    227a:	da00      	bge.n	227e <socket+0x12e>
    227c:	e785      	b.n	218a <socket+0x3a>
    227e:	2006      	movs	r0, #6
    2280:	4240      	negs	r0, r0
    2282:	e7d8      	b.n	2236 <socket+0xe6>
	   if(sock_any_port == 0xFFF0) sock_any_port = SOCK_ANY_PORT_NUM;
    2284:	4a0d      	ldr	r2, [pc, #52]	; (22bc <socket+0x16c>)
    2286:	4b07      	ldr	r3, [pc, #28]	; (22a4 <socket+0x154>)
    2288:	801a      	strh	r2, [r3, #0]
    228a:	e799      	b.n	21c0 <socket+0x70>
	CHECK_SOCKNUM();
    228c:	2001      	movs	r0, #1
    228e:	4240      	negs	r0, r0
    2290:	e7d1      	b.n	2236 <socket+0xe6>
         return SOCKERR_SOCKMODE;
    2292:	2005      	movs	r0, #5
    2294:	4240      	negs	r0, r0
    2296:	e7ce      	b.n	2236 <socket+0xe6>
	if((flag & 0x04) != 0) return SOCKERR_SOCKFLAG;
    2298:	2006      	movs	r0, #6
    229a:	4240      	negs	r0, r0
    229c:	e7cb      	b.n	2236 <socket+0xe6>
   	         if((flag & SF_MULTI_ENABLE)==0) return SOCKERR_SOCKFLAG;
    229e:	2006      	movs	r0, #6
    22a0:	4240      	negs	r0, r0
    22a2:	e7c8      	b.n	2236 <socket+0xe6>
    22a4:	20000028 	.word	0x20000028
    22a8:	0000fff0 	.word	0x0000fff0
    22ac:	20000a98 	.word	0x20000a98
    22b0:	20000a9a 	.word	0x20000a9a
    22b4:	20000aa4 	.word	0x20000aa4
    22b8:	20000a9c 	.word	0x20000a9c
    22bc:	ffffc000 	.word	0xffffc000

000022c0 <listen>:

int8_t listen(uint8_t sn)
{
    22c0:	b570      	push	{r4, r5, r6, lr}
    22c2:	0006      	movs	r6, r0
	CHECK_SOCKNUM();
    22c4:	2808      	cmp	r0, #8
    22c6:	d829      	bhi.n	231c <listen+0x5c>
   CHECK_SOCKMODE(Sn_MR_TCP);
    22c8:	0084      	lsls	r4, r0, #2
    22ca:	3401      	adds	r4, #1
    22cc:	00e4      	lsls	r4, r4, #3
    22ce:	0020      	movs	r0, r4
    22d0:	f000 fc44 	bl	2b5c <WIZCHIP_READ>
    22d4:	230f      	movs	r3, #15
    22d6:	4018      	ands	r0, r3
    22d8:	2801      	cmp	r0, #1
    22da:	d122      	bne.n	2322 <listen+0x62>
	CHECK_SOCKINIT();
    22dc:	23c0      	movs	r3, #192	; 0xc0
    22de:	009b      	lsls	r3, r3, #2
    22e0:	18e5      	adds	r5, r4, r3
    22e2:	0028      	movs	r0, r5
    22e4:	f000 fc3a 	bl	2b5c <WIZCHIP_READ>
    22e8:	2813      	cmp	r0, #19
    22ea:	d11d      	bne.n	2328 <listen+0x68>
	setSn_CR(sn,Sn_CR_LISTEN);
    22ec:	3401      	adds	r4, #1
    22ee:	34ff      	adds	r4, #255	; 0xff
    22f0:	2102      	movs	r1, #2
    22f2:	0020      	movs	r0, r4
    22f4:	f000 fc64 	bl	2bc0 <WIZCHIP_WRITE>
	while(getSn_CR(sn));
    22f8:	0020      	movs	r0, r4
    22fa:	f000 fc2f 	bl	2b5c <WIZCHIP_READ>
    22fe:	2800      	cmp	r0, #0
    2300:	d1fa      	bne.n	22f8 <listen+0x38>
   while(getSn_SR(sn) != SOCK_LISTEN)
    2302:	0028      	movs	r0, r5
    2304:	f000 fc2a 	bl	2b5c <WIZCHIP_READ>
    2308:	2814      	cmp	r0, #20
    230a:	d101      	bne.n	2310 <listen+0x50>
   {
         close(sn);
         return SOCKERR_SOCKCLOSED;
   }
   return SOCK_OK;
    230c:	3813      	subs	r0, #19
}
    230e:	bd70      	pop	{r4, r5, r6, pc}
         close(sn);
    2310:	0030      	movs	r0, r6
    2312:	f7ff fedd 	bl	20d0 <close>
         return SOCKERR_SOCKCLOSED;
    2316:	2004      	movs	r0, #4
    2318:	4240      	negs	r0, r0
    231a:	e7f8      	b.n	230e <listen+0x4e>
	CHECK_SOCKNUM();
    231c:	2001      	movs	r0, #1
    231e:	4240      	negs	r0, r0
    2320:	e7f5      	b.n	230e <listen+0x4e>
   CHECK_SOCKMODE(Sn_MR_TCP);
    2322:	2005      	movs	r0, #5
    2324:	4240      	negs	r0, r0
    2326:	e7f2      	b.n	230e <listen+0x4e>
	CHECK_SOCKINIT();
    2328:	2003      	movs	r0, #3
    232a:	4240      	negs	r0, r0
    232c:	e7ef      	b.n	230e <listen+0x4e>
	...

00002330 <disconnect>:
   
   return SOCK_OK;
}

int8_t disconnect(uint8_t sn)
{
    2330:	b570      	push	{r4, r5, r6, lr}
    2332:	0006      	movs	r6, r0
   CHECK_SOCKNUM();
    2334:	2808      	cmp	r0, #8
    2336:	d836      	bhi.n	23a6 <disconnect+0x76>
   CHECK_SOCKMODE(Sn_MR_TCP);
    2338:	0084      	lsls	r4, r0, #2
    233a:	3401      	adds	r4, #1
    233c:	00e4      	lsls	r4, r4, #3
    233e:	0020      	movs	r0, r4
    2340:	f000 fc0c 	bl	2b5c <WIZCHIP_READ>
    2344:	230f      	movs	r3, #15
    2346:	4018      	ands	r0, r3
    2348:	2801      	cmp	r0, #1
    234a:	d12f      	bne.n	23ac <disconnect+0x7c>
	setSn_CR(sn,Sn_CR_DISCON);
    234c:	1c65      	adds	r5, r4, #1
    234e:	35ff      	adds	r5, #255	; 0xff
    2350:	2108      	movs	r1, #8
    2352:	0028      	movs	r0, r5
    2354:	f000 fc34 	bl	2bc0 <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn));
    2358:	0028      	movs	r0, r5
    235a:	f000 fbff 	bl	2b5c <WIZCHIP_READ>
    235e:	2800      	cmp	r0, #0
    2360:	d1fa      	bne.n	2358 <disconnect+0x28>
	sock_is_sending &= ~(1<<sn);
    2362:	2201      	movs	r2, #1
    2364:	0010      	movs	r0, r2
    2366:	40b0      	lsls	r0, r6
    2368:	4913      	ldr	r1, [pc, #76]	; (23b8 <disconnect+0x88>)
    236a:	880b      	ldrh	r3, [r1, #0]
    236c:	4383      	bics	r3, r0
    236e:	800b      	strh	r3, [r1, #0]
   if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
    2370:	4b12      	ldr	r3, [pc, #72]	; (23bc <disconnect+0x8c>)
    2372:	881b      	ldrh	r3, [r3, #0]
    2374:	4133      	asrs	r3, r6
    2376:	421a      	tst	r2, r3
    2378:	d11b      	bne.n	23b2 <disconnect+0x82>
	while(getSn_SR(sn) != SOCK_CLOSED)
    237a:	23c0      	movs	r3, #192	; 0xc0
    237c:	009b      	lsls	r3, r3, #2
    237e:	18e0      	adds	r0, r4, r3
    2380:	f000 fbec 	bl	2b5c <WIZCHIP_READ>
    2384:	2800      	cmp	r0, #0
    2386:	d00c      	beq.n	23a2 <disconnect+0x72>
	{
	   if(getSn_IR(sn) & Sn_IR_TIMEOUT)
    2388:	2380      	movs	r3, #128	; 0x80
    238a:	009b      	lsls	r3, r3, #2
    238c:	18e0      	adds	r0, r4, r3
    238e:	f000 fbe5 	bl	2b5c <WIZCHIP_READ>
    2392:	0703      	lsls	r3, r0, #28
    2394:	d5f1      	bpl.n	237a <disconnect+0x4a>
	   {
	      close(sn);
    2396:	0030      	movs	r0, r6
    2398:	f7ff fe9a 	bl	20d0 <close>
	      return SOCKERR_TIMEOUT;
    239c:	200d      	movs	r0, #13
    239e:	4240      	negs	r0, r0
    23a0:	e008      	b.n	23b4 <disconnect+0x84>
	   }
	}
	return SOCK_OK;
    23a2:	3001      	adds	r0, #1
    23a4:	e006      	b.n	23b4 <disconnect+0x84>
   CHECK_SOCKNUM();
    23a6:	2001      	movs	r0, #1
    23a8:	4240      	negs	r0, r0
    23aa:	e003      	b.n	23b4 <disconnect+0x84>
   CHECK_SOCKMODE(Sn_MR_TCP);
    23ac:	2005      	movs	r0, #5
    23ae:	4240      	negs	r0, r0
    23b0:	e000      	b.n	23b4 <disconnect+0x84>
   if(sock_io_mode & (1<<sn)) return SOCK_BUSY;
    23b2:	2000      	movs	r0, #0
}
    23b4:	bd70      	pop	{r4, r5, r6, pc}
    23b6:	46c0      	nop			; (mov r8, r8)
    23b8:	20000a9a 	.word	0x20000a9a
    23bc:	20000a98 	.word	0x20000a98

000023c0 <send>:

int32_t send(uint8_t sn, uint8_t * buf, uint16_t len)
{
    23c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    23c2:	46c6      	mov	lr, r8
    23c4:	b500      	push	{lr}
    23c6:	b082      	sub	sp, #8
    23c8:	0004      	movs	r4, r0
    23ca:	9101      	str	r1, [sp, #4]
    23cc:	0017      	movs	r7, r2
   uint8_t tmp=0;
   uint16_t freesize=0;
   
   CHECK_SOCKNUM();
    23ce:	2808      	cmp	r0, #8
    23d0:	d900      	bls.n	23d4 <send+0x14>
    23d2:	e080      	b.n	24d6 <send+0x116>
   CHECK_SOCKMODE(Sn_MR_TCP);
    23d4:	0005      	movs	r5, r0
    23d6:	0083      	lsls	r3, r0, #2
    23d8:	3301      	adds	r3, #1
    23da:	00db      	lsls	r3, r3, #3
    23dc:	4698      	mov	r8, r3
    23de:	0018      	movs	r0, r3
    23e0:	f000 fbbc 	bl	2b5c <WIZCHIP_READ>
    23e4:	230f      	movs	r3, #15
    23e6:	4018      	ands	r0, r3
    23e8:	2801      	cmp	r0, #1
    23ea:	d000      	beq.n	23ee <send+0x2e>
    23ec:	e076      	b.n	24dc <send+0x11c>
   CHECK_SOCKDATA();
    23ee:	2f00      	cmp	r7, #0
    23f0:	d100      	bne.n	23f4 <send+0x34>
    23f2:	e076      	b.n	24e2 <send+0x122>
   tmp = getSn_SR(sn);
    23f4:	23c0      	movs	r3, #192	; 0xc0
    23f6:	009b      	lsls	r3, r3, #2
    23f8:	4443      	add	r3, r8
    23fa:	9300      	str	r3, [sp, #0]
    23fc:	0018      	movs	r0, r3
    23fe:	f000 fbad 	bl	2b5c <WIZCHIP_READ>
   if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
    2402:	2817      	cmp	r0, #23
    2404:	d002      	beq.n	240c <send+0x4c>
    2406:	281c      	cmp	r0, #28
    2408:	d000      	beq.n	240c <send+0x4c>
    240a:	e06d      	b.n	24e8 <send+0x128>
   if( sock_is_sending & (1<<sn) )
    240c:	4b38      	ldr	r3, [pc, #224]	; (24f0 <send+0x130>)
    240e:	881b      	ldrh	r3, [r3, #0]
    2410:	4123      	asrs	r3, r4
    2412:	07db      	lsls	r3, r3, #31
    2414:	d518      	bpl.n	2448 <send+0x88>
   {
      tmp = getSn_IR(sn);
    2416:	2680      	movs	r6, #128	; 0x80
    2418:	00b6      	lsls	r6, r6, #2
    241a:	4446      	add	r6, r8
    241c:	0030      	movs	r0, r6
    241e:	f000 fb9d 	bl	2b5c <WIZCHIP_READ>
      if(tmp & Sn_IR_SENDOK)
    2422:	06c3      	lsls	r3, r0, #27
    2424:	d406      	bmi.n	2434 <send+0x74>
               return SOCK_BUSY;
            }
         #endif
         sock_is_sending &= ~(1<<sn);         
      }
      else if(tmp & Sn_IR_TIMEOUT)
    2426:	0703      	lsls	r3, r0, #28
    2428:	d41a      	bmi.n	2460 <send+0xa0>
      {
         close(sn);
         return SOCKERR_TIMEOUT;
      }
      else return SOCK_BUSY;
    242a:	2000      	movs	r0, #0
   while(getSn_CR(sn));
   sock_is_sending |= (1 << sn);
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
}
    242c:	b002      	add	sp, #8
    242e:	bc04      	pop	{r2}
    2430:	4690      	mov	r8, r2
    2432:	bdf0      	pop	{r4, r5, r6, r7, pc}
         setSn_IR(sn, Sn_IR_SENDOK);
    2434:	2110      	movs	r1, #16
    2436:	0030      	movs	r0, r6
    2438:	f000 fbc2 	bl	2bc0 <WIZCHIP_WRITE>
         sock_is_sending &= ~(1<<sn);         
    243c:	2201      	movs	r2, #1
    243e:	40a2      	lsls	r2, r4
    2440:	492b      	ldr	r1, [pc, #172]	; (24f0 <send+0x130>)
    2442:	880b      	ldrh	r3, [r1, #0]
    2444:	4393      	bics	r3, r2
    2446:	800b      	strh	r3, [r1, #0]
   freesize = getSn_TxMAX(sn);
    2448:	20f8      	movs	r0, #248	; 0xf8
    244a:	0140      	lsls	r0, r0, #5
    244c:	4440      	add	r0, r8
    244e:	f000 fb85 	bl	2b5c <WIZCHIP_READ>
    2452:	b280      	uxth	r0, r0
    2454:	0280      	lsls	r0, r0, #10
    2456:	b286      	uxth	r6, r0
   if (len > freesize) len = freesize; // check size not to exceed MAX size.
    2458:	42b7      	cmp	r7, r6
    245a:	d80f      	bhi.n	247c <send+0xbc>
    245c:	003e      	movs	r6, r7
    245e:	e00d      	b.n	247c <send+0xbc>
         close(sn);
    2460:	0020      	movs	r0, r4
    2462:	f7ff fe35 	bl	20d0 <close>
         return SOCKERR_TIMEOUT;
    2466:	200d      	movs	r0, #13
    2468:	4240      	negs	r0, r0
    246a:	e7df      	b.n	242c <send+0x6c>
         close(sn);
    246c:	0020      	movs	r0, r4
    246e:	f7ff fe2f 	bl	20d0 <close>
         return SOCKERR_SOCKSTATUS;
    2472:	2007      	movs	r0, #7
    2474:	4240      	negs	r0, r0
    2476:	e7d9      	b.n	242c <send+0x6c>
      if(len <= freesize) break;
    2478:	42be      	cmp	r6, r7
    247a:	d913      	bls.n	24a4 <send+0xe4>
      freesize = getSn_TX_FSR(sn);
    247c:	0020      	movs	r0, r4
    247e:	f000 fc4b 	bl	2d18 <getSn_TX_FSR>
    2482:	0007      	movs	r7, r0
      tmp = getSn_SR(sn);
    2484:	9800      	ldr	r0, [sp, #0]
    2486:	f000 fb69 	bl	2b5c <WIZCHIP_READ>
      if ((tmp != SOCK_ESTABLISHED) && (tmp != SOCK_CLOSE_WAIT))
    248a:	2817      	cmp	r0, #23
    248c:	d001      	beq.n	2492 <send+0xd2>
    248e:	281c      	cmp	r0, #28
    2490:	d1ec      	bne.n	246c <send+0xac>
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
    2492:	4b18      	ldr	r3, [pc, #96]	; (24f4 <send+0x134>)
    2494:	881b      	ldrh	r3, [r3, #0]
    2496:	412b      	asrs	r3, r5
    2498:	07db      	lsls	r3, r3, #31
    249a:	d5ed      	bpl.n	2478 <send+0xb8>
    249c:	42be      	cmp	r6, r7
    249e:	d9eb      	bls.n	2478 <send+0xb8>
    24a0:	2000      	movs	r0, #0
    24a2:	e7c3      	b.n	242c <send+0x6c>
   wiz_send_data(sn, buf, len);
    24a4:	0032      	movs	r2, r6
    24a6:	9901      	ldr	r1, [sp, #4]
    24a8:	0020      	movs	r0, r4
    24aa:	f000 fc99 	bl	2de0 <wiz_send_data>
   setSn_CR(sn,Sn_CR_SEND);
    24ae:	4645      	mov	r5, r8
    24b0:	3501      	adds	r5, #1
    24b2:	35ff      	adds	r5, #255	; 0xff
    24b4:	2120      	movs	r1, #32
    24b6:	0028      	movs	r0, r5
    24b8:	f000 fb82 	bl	2bc0 <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    24bc:	0028      	movs	r0, r5
    24be:	f000 fb4d 	bl	2b5c <WIZCHIP_READ>
    24c2:	2800      	cmp	r0, #0
    24c4:	d1fa      	bne.n	24bc <send+0xfc>
   sock_is_sending |= (1 << sn);
    24c6:	2201      	movs	r2, #1
    24c8:	40a2      	lsls	r2, r4
    24ca:	4909      	ldr	r1, [pc, #36]	; (24f0 <send+0x130>)
    24cc:	880b      	ldrh	r3, [r1, #0]
    24ce:	4313      	orrs	r3, r2
    24d0:	800b      	strh	r3, [r1, #0]
   return (int32_t)len;
    24d2:	0030      	movs	r0, r6
    24d4:	e7aa      	b.n	242c <send+0x6c>
   CHECK_SOCKNUM();
    24d6:	2001      	movs	r0, #1
    24d8:	4240      	negs	r0, r0
    24da:	e7a7      	b.n	242c <send+0x6c>
   CHECK_SOCKMODE(Sn_MR_TCP);
    24dc:	2005      	movs	r0, #5
    24de:	4240      	negs	r0, r0
    24e0:	e7a4      	b.n	242c <send+0x6c>
   CHECK_SOCKDATA();
    24e2:	200e      	movs	r0, #14
    24e4:	4240      	negs	r0, r0
    24e6:	e7a1      	b.n	242c <send+0x6c>
   if(tmp != SOCK_ESTABLISHED && tmp != SOCK_CLOSE_WAIT) return SOCKERR_SOCKSTATUS;
    24e8:	2007      	movs	r0, #7
    24ea:	4240      	negs	r0, r0
    24ec:	e79e      	b.n	242c <send+0x6c>
    24ee:	46c0      	nop			; (mov r8, r8)
    24f0:	20000a9a 	.word	0x20000a9a
    24f4:	20000a98 	.word	0x20000a98

000024f8 <recv>:


int32_t recv(uint8_t sn, uint8_t * buf, uint16_t len)
{
    24f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    24fa:	46c6      	mov	lr, r8
    24fc:	b500      	push	{lr}
    24fe:	b082      	sub	sp, #8
    2500:	9000      	str	r0, [sp, #0]
    2502:	9101      	str	r1, [sp, #4]
    2504:	0014      	movs	r4, r2
#if   _WIZCHIP_ == 5300
   uint8_t head[2];
   uint16_t mr;
#endif
//
   CHECK_SOCKNUM();
    2506:	2808      	cmp	r0, #8
    2508:	d864      	bhi.n	25d4 <recv+0xdc>
   CHECK_SOCKMODE(Sn_MR_TCP);
    250a:	0006      	movs	r6, r0
    250c:	0087      	lsls	r7, r0, #2
    250e:	3701      	adds	r7, #1
    2510:	00ff      	lsls	r7, r7, #3
    2512:	0038      	movs	r0, r7
    2514:	f000 fb22 	bl	2b5c <WIZCHIP_READ>
    2518:	230f      	movs	r3, #15
    251a:	4018      	ands	r0, r3
    251c:	2801      	cmp	r0, #1
    251e:	d15c      	bne.n	25da <recv+0xe2>
   CHECK_SOCKDATA();
    2520:	2c00      	cmp	r4, #0
    2522:	d05d      	beq.n	25e0 <recv+0xe8>
   
   recvsize = getSn_RxMAX(sn);
    2524:	23f0      	movs	r3, #240	; 0xf0
    2526:	015b      	lsls	r3, r3, #5
    2528:	18f8      	adds	r0, r7, r3
    252a:	f000 fb17 	bl	2b5c <WIZCHIP_READ>
    252e:	b280      	uxth	r0, r0
    2530:	0280      	lsls	r0, r0, #10
    2532:	b283      	uxth	r3, r0
    2534:	4698      	mov	r8, r3
   if(recvsize < len) len = recvsize;
    2536:	429c      	cmp	r4, r3
    2538:	d80f      	bhi.n	255a <recv+0x62>
    253a:	46a0      	mov	r8, r4
    253c:	e00d      	b.n	255a <recv+0x62>
            if(tmp == SOCK_CLOSE_WAIT)
            {
               if(recvsize != 0) break;
               else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
               {
                  close(sn);
    253e:	9800      	ldr	r0, [sp, #0]
    2540:	f7ff fdc6 	bl	20d0 <close>
                  return SOCKERR_SOCKSTATUS;
    2544:	2007      	movs	r0, #7
    2546:	4240      	negs	r0, r0
    2548:	e040      	b.n	25cc <recv+0xd4>
               }
            }
            else
            {
               close(sn);
    254a:	9800      	ldr	r0, [sp, #0]
    254c:	f7ff fdc0 	bl	20d0 <close>
               return SOCKERR_SOCKSTATUS;
    2550:	2007      	movs	r0, #7
    2552:	4240      	negs	r0, r0
    2554:	e03a      	b.n	25cc <recv+0xd4>
            }
         }
         if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
         if(recvsize != 0) break;
    2556:	2c00      	cmp	r4, #0
    2558:	d124      	bne.n	25a4 <recv+0xac>
         recvsize = getSn_RX_RSR(sn);
    255a:	9d00      	ldr	r5, [sp, #0]
    255c:	0028      	movs	r0, r5
    255e:	f000 fc0d 	bl	2d7c <getSn_RX_RSR>
    2562:	0004      	movs	r4, r0
         tmp = getSn_SR(sn);
    2564:	23c0      	movs	r3, #192	; 0xc0
    2566:	009b      	lsls	r3, r3, #2
    2568:	18f8      	adds	r0, r7, r3
    256a:	f000 faf7 	bl	2b5c <WIZCHIP_READ>
         if (tmp != SOCK_ESTABLISHED)
    256e:	2817      	cmp	r0, #23
    2570:	d00f      	beq.n	2592 <recv+0x9a>
            if(tmp == SOCK_CLOSE_WAIT)
    2572:	281c      	cmp	r0, #28
    2574:	d1e9      	bne.n	254a <recv+0x52>
               if(recvsize != 0) break;
    2576:	2c00      	cmp	r4, #0
    2578:	d114      	bne.n	25a4 <recv+0xac>
               else if(getSn_TX_FSR(sn) == getSn_TxMAX(sn))
    257a:	0028      	movs	r0, r5
    257c:	f000 fbcc 	bl	2d18 <getSn_TX_FSR>
    2580:	0005      	movs	r5, r0
    2582:	23f8      	movs	r3, #248	; 0xf8
    2584:	015b      	lsls	r3, r3, #5
    2586:	18f8      	adds	r0, r7, r3
    2588:	f000 fae8 	bl	2b5c <WIZCHIP_READ>
    258c:	0280      	lsls	r0, r0, #10
    258e:	4285      	cmp	r5, r0
    2590:	d0d5      	beq.n	253e <recv+0x46>
         if((sock_io_mode & (1<<sn)) && (recvsize == 0)) return SOCK_BUSY;
    2592:	4b15      	ldr	r3, [pc, #84]	; (25e8 <recv+0xf0>)
    2594:	881b      	ldrh	r3, [r3, #0]
    2596:	4133      	asrs	r3, r6
    2598:	07db      	lsls	r3, r3, #31
    259a:	d5dc      	bpl.n	2556 <recv+0x5e>
    259c:	2c00      	cmp	r4, #0
    259e:	d1da      	bne.n	2556 <recv+0x5e>
    25a0:	2000      	movs	r0, #0
    25a2:	e013      	b.n	25cc <recv+0xd4>
   }
   else sock_pack_info[sn] = PACK_COMPLETED;
   if(getSn_MR(sn) & Sn_MR_ALIGN) sock_remained_size[sn] = 0;
   //len = recvsize;
#else   
   if(recvsize < len) len = recvsize;   
    25a4:	45a0      	cmp	r8, r4
    25a6:	d800      	bhi.n	25aa <recv+0xb2>
    25a8:	4644      	mov	r4, r8
   wiz_recv_data(sn, buf, len);
    25aa:	0022      	movs	r2, r4
    25ac:	9901      	ldr	r1, [sp, #4]
    25ae:	9800      	ldr	r0, [sp, #0]
    25b0:	f000 fc49 	bl	2e46 <wiz_recv_data>
   setSn_CR(sn,Sn_CR_RECV);
    25b4:	3701      	adds	r7, #1
    25b6:	37ff      	adds	r7, #255	; 0xff
    25b8:	2140      	movs	r1, #64	; 0x40
    25ba:	0038      	movs	r0, r7
    25bc:	f000 fb00 	bl	2bc0 <WIZCHIP_WRITE>
   while(getSn_CR(sn));
    25c0:	0038      	movs	r0, r7
    25c2:	f000 facb 	bl	2b5c <WIZCHIP_READ>
    25c6:	2800      	cmp	r0, #0
    25c8:	d1fa      	bne.n	25c0 <recv+0xc8>
#endif
     
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
    25ca:	0020      	movs	r0, r4
}
    25cc:	b002      	add	sp, #8
    25ce:	bc04      	pop	{r2}
    25d0:	4690      	mov	r8, r2
    25d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   CHECK_SOCKNUM();
    25d4:	2001      	movs	r0, #1
    25d6:	4240      	negs	r0, r0
    25d8:	e7f8      	b.n	25cc <recv+0xd4>
   CHECK_SOCKMODE(Sn_MR_TCP);
    25da:	2005      	movs	r0, #5
    25dc:	4240      	negs	r0, r0
    25de:	e7f5      	b.n	25cc <recv+0xd4>
   CHECK_SOCKDATA();
    25e0:	200e      	movs	r0, #14
    25e2:	4240      	negs	r0, r0
    25e4:	e7f2      	b.n	25cc <recv+0xd4>
    25e6:	46c0      	nop			; (mov r8, r8)
    25e8:	20000a98 	.word	0x20000a98

000025ec <sendto>:

int32_t sendto(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t port)
{
    25ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    25ee:	46de      	mov	lr, fp
    25f0:	b500      	push	{lr}
    25f2:	b084      	sub	sp, #16
    25f4:	9001      	str	r0, [sp, #4]
    25f6:	9103      	str	r1, [sp, #12]
    25f8:	4693      	mov	fp, r2
    25fa:	001c      	movs	r4, r3
    25fc:	ab0a      	add	r3, sp, #40	; 0x28
    25fe:	881f      	ldrh	r7, [r3, #0]
   uint8_t tmp = 0;
   uint16_t freesize = 0;
   uint32_t taddr;

   CHECK_SOCKNUM();
    2600:	2808      	cmp	r0, #8
    2602:	d900      	bls.n	2606 <sendto+0x1a>
    2604:	e095      	b.n	2732 <sendto+0x146>
   switch(getSn_MR(sn) & 0x0F)
    2606:	0005      	movs	r5, r0
    2608:	0083      	lsls	r3, r0, #2
    260a:	3301      	adds	r3, #1
    260c:	00de      	lsls	r6, r3, #3
    260e:	0030      	movs	r0, r6
    2610:	f000 faa4 	bl	2b5c <WIZCHIP_READ>
    2614:	230f      	movs	r3, #15
    2616:	4003      	ands	r3, r0
    2618:	3b02      	subs	r3, #2
    261a:	b2db      	uxtb	r3, r3
    261c:	2b02      	cmp	r3, #2
    261e:	d900      	bls.n	2622 <sendto+0x36>
    2620:	e08a      	b.n	2738 <sendto+0x14c>
         break;
//   #endif
      default:
         return SOCKERR_SOCKMODE;
   }
   CHECK_SOCKDATA();
    2622:	465b      	mov	r3, fp
    2624:	2b00      	cmp	r3, #0
    2626:	d100      	bne.n	262a <sendto+0x3e>
    2628:	e089      	b.n	273e <sendto+0x152>
   //M20140501 : For avoiding fatal error on memory align mismatched
   //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
   //{
      //uint32_t taddr;
      taddr = ((uint32_t)addr[0]) & 0x000000FF;
    262a:	7823      	ldrb	r3, [r4, #0]
      taddr = (taddr << 8) + ((uint32_t)addr[1] & 0x000000FF);
    262c:	021b      	lsls	r3, r3, #8
    262e:	7862      	ldrb	r2, [r4, #1]
    2630:	189b      	adds	r3, r3, r2
      taddr = (taddr << 8) + ((uint32_t)addr[2] & 0x000000FF);
    2632:	021b      	lsls	r3, r3, #8
    2634:	78a2      	ldrb	r2, [r4, #2]
    2636:	189b      	adds	r3, r3, r2
      taddr = (taddr << 8) + ((uint32_t)addr[3] & 0x000000FF);
    2638:	021b      	lsls	r3, r3, #8
    263a:	78e2      	ldrb	r2, [r4, #3]
    263c:	189b      	adds	r3, r3, r2
   //}
   //
   //if(*((uint32_t*)addr) == 0) return SOCKERR_IPINVALID;
   if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
    263e:	2b00      	cmp	r3, #0
    2640:	d034      	beq.n	26ac <sendto+0xc0>
   if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
    2642:	2f00      	cmp	r7, #0
    2644:	d104      	bne.n	2650 <sendto+0x64>
    2646:	0030      	movs	r0, r6
    2648:	f000 fa88 	bl	2b5c <WIZCHIP_READ>
    264c:	0743      	lsls	r3, r0, #29
    264e:	d579      	bpl.n	2744 <sendto+0x158>
   tmp = getSn_SR(sn);
    2650:	23c0      	movs	r3, #192	; 0xc0
    2652:	009b      	lsls	r3, r3, #2
    2654:	469c      	mov	ip, r3
    2656:	44b4      	add	ip, r6
    2658:	4663      	mov	r3, ip
    265a:	9302      	str	r3, [sp, #8]
    265c:	4660      	mov	r0, ip
    265e:	f000 fa7d 	bl	2b5c <WIZCHIP_READ>
//#if ( _WIZCHIP_ < 5200 )
   if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
    2662:	2842      	cmp	r0, #66	; 0x42
    2664:	d003      	beq.n	266e <sendto+0x82>
    2666:	2822      	cmp	r0, #34	; 0x22
    2668:	d001      	beq.n	266e <sendto+0x82>
    266a:	2832      	cmp	r0, #50	; 0x32
    266c:	d16d      	bne.n	274a <sendto+0x15e>
//#else
//   if(tmp != SOCK_MACRAW && tmp != SOCK_UDP) return SOCKERR_SOCKSTATUS;
//#endif
      
   setSn_DIPR(sn,addr);
    266e:	2204      	movs	r2, #4
    2670:	0021      	movs	r1, r4
    2672:	23c0      	movs	r3, #192	; 0xc0
    2674:	011b      	lsls	r3, r3, #4
    2676:	18f0      	adds	r0, r6, r3
    2678:	f000 fb12 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   setSn_DPORT(sn,port);      
    267c:	0a39      	lsrs	r1, r7, #8
    267e:	2380      	movs	r3, #128	; 0x80
    2680:	015b      	lsls	r3, r3, #5
    2682:	18f0      	adds	r0, r6, r3
    2684:	f000 fa9c 	bl	2bc0 <WIZCHIP_WRITE>
    2688:	b2f9      	uxtb	r1, r7
    268a:	2388      	movs	r3, #136	; 0x88
    268c:	015b      	lsls	r3, r3, #5
    268e:	18f0      	adds	r0, r6, r3
    2690:	f000 fa96 	bl	2bc0 <WIZCHIP_WRITE>
   freesize = getSn_TxMAX(sn);
    2694:	23f8      	movs	r3, #248	; 0xf8
    2696:	015b      	lsls	r3, r3, #5
    2698:	18f0      	adds	r0, r6, r3
    269a:	f000 fa5f 	bl	2b5c <WIZCHIP_READ>
    269e:	b280      	uxth	r0, r0
    26a0:	0280      	lsls	r0, r0, #10
    26a2:	b287      	uxth	r7, r0
   if (len > freesize) len = freesize; // check size not to exceed MAX size.
    26a4:	45bb      	cmp	fp, r7
    26a6:	d80b      	bhi.n	26c0 <sendto+0xd4>
    26a8:	465f      	mov	r7, fp
    26aa:	e009      	b.n	26c0 <sendto+0xd4>
   if((taddr == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_IPINVALID;
    26ac:	0030      	movs	r0, r6
    26ae:	f000 fa55 	bl	2b5c <WIZCHIP_READ>
    26b2:	0743      	lsls	r3, r0, #29
    26b4:	d4c5      	bmi.n	2642 <sendto+0x56>
    26b6:	200c      	movs	r0, #12
    26b8:	4240      	negs	r0, r0
    26ba:	e04b      	b.n	2754 <sendto+0x168>
   while(1)
   {
      freesize = getSn_TX_FSR(sn);
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
      if(len <= freesize) break;
    26bc:	42a7      	cmp	r7, r4
    26be:	d911      	bls.n	26e4 <sendto+0xf8>
      freesize = getSn_TX_FSR(sn);
    26c0:	9801      	ldr	r0, [sp, #4]
    26c2:	f000 fb29 	bl	2d18 <getSn_TX_FSR>
    26c6:	0004      	movs	r4, r0
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    26c8:	9802      	ldr	r0, [sp, #8]
    26ca:	f000 fa47 	bl	2b5c <WIZCHIP_READ>
    26ce:	2800      	cmp	r0, #0
    26d0:	d03e      	beq.n	2750 <sendto+0x164>
      if( (sock_io_mode & (1<<sn)) && (len > freesize) ) return SOCK_BUSY;
    26d2:	4b22      	ldr	r3, [pc, #136]	; (275c <sendto+0x170>)
    26d4:	881b      	ldrh	r3, [r3, #0]
    26d6:	412b      	asrs	r3, r5
    26d8:	07db      	lsls	r3, r3, #31
    26da:	d5ef      	bpl.n	26bc <sendto+0xd0>
    26dc:	42a7      	cmp	r7, r4
    26de:	d9ed      	bls.n	26bc <sendto+0xd0>
    26e0:	2000      	movs	r0, #0
    26e2:	e037      	b.n	2754 <sendto+0x168>
   };
	wiz_send_data(sn, buf, len);
    26e4:	003a      	movs	r2, r7
    26e6:	9903      	ldr	r1, [sp, #12]
    26e8:	9801      	ldr	r0, [sp, #4]
    26ea:	f000 fb79 	bl	2de0 <wiz_send_data>
//A20150601 : For W5300
#if _WIZCHIP_ == 5300
   setSn_TX_WRSR(sn, len);
#endif
//   
	setSn_CR(sn,Sn_CR_SEND);
    26ee:	1c74      	adds	r4, r6, #1
    26f0:	34ff      	adds	r4, #255	; 0xff
    26f2:	2120      	movs	r1, #32
    26f4:	0020      	movs	r0, r4
    26f6:	f000 fa63 	bl	2bc0 <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn));
    26fa:	0020      	movs	r0, r4
    26fc:	f000 fa2e 	bl	2b5c <WIZCHIP_READ>
    2700:	2800      	cmp	r0, #0
    2702:	d1fa      	bne.n	26fa <sendto+0x10e>
   while(1)
   {
      tmp = getSn_IR(sn);
    2704:	2380      	movs	r3, #128	; 0x80
    2706:	009b      	lsls	r3, r3, #2
    2708:	18f4      	adds	r4, r6, r3
    270a:	0020      	movs	r0, r4
    270c:	f000 fa26 	bl	2b5c <WIZCHIP_READ>
      if(tmp & Sn_IR_SENDOK)
    2710:	06c3      	lsls	r3, r0, #27
    2712:	d408      	bmi.n	2726 <sendto+0x13a>
         setSn_IR(sn, Sn_IR_SENDOK);
         break;
      }
      //M:20131104
      //else if(tmp & Sn_IR_TIMEOUT) return SOCKERR_TIMEOUT;
      else if(tmp & Sn_IR_TIMEOUT)
    2714:	0703      	lsls	r3, r0, #28
    2716:	d5f5      	bpl.n	2704 <sendto+0x118>
      {
         setSn_IR(sn, Sn_IR_TIMEOUT);
    2718:	2108      	movs	r1, #8
    271a:	0020      	movs	r0, r4
    271c:	f000 fa50 	bl	2bc0 <WIZCHIP_WRITE>
         //len = (uint16_t)SOCKERR_TIMEOUT;
         //break;
         #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
            if(taddr) setSUBR((uint8_t*)&taddr);
         #endif
         return SOCKERR_TIMEOUT;
    2720:	200d      	movs	r0, #13
    2722:	4240      	negs	r0, r0
    2724:	e016      	b.n	2754 <sendto+0x168>
         setSn_IR(sn, Sn_IR_SENDOK);
    2726:	2110      	movs	r1, #16
    2728:	0020      	movs	r0, r4
    272a:	f000 fa49 	bl	2bc0 <WIZCHIP_WRITE>
   #if _WIZCHIP_ < 5500   //M20150401 : for WIZCHIP Errata #4, #5 (ARP errata)
      if(taddr) setSUBR((uint8_t*)&taddr);
   #endif
   //M20150409 : Explicit Type Casting
   //return len;
   return (int32_t)len;
    272e:	0038      	movs	r0, r7
    2730:	e010      	b.n	2754 <sendto+0x168>
   CHECK_SOCKNUM();
    2732:	2001      	movs	r0, #1
    2734:	4240      	negs	r0, r0
    2736:	e00d      	b.n	2754 <sendto+0x168>
         return SOCKERR_SOCKMODE;
    2738:	2005      	movs	r0, #5
    273a:	4240      	negs	r0, r0
    273c:	e00a      	b.n	2754 <sendto+0x168>
   CHECK_SOCKDATA();
    273e:	200e      	movs	r0, #14
    2740:	4240      	negs	r0, r0
    2742:	e007      	b.n	2754 <sendto+0x168>
   if((port  == 0) && ((getSn_MR(sn)&Sn_MR_MACRAW) != Sn_MR_MACRAW)) return SOCKERR_PORTZERO;
    2744:	200b      	movs	r0, #11
    2746:	4240      	negs	r0, r0
    2748:	e004      	b.n	2754 <sendto+0x168>
   if((tmp != SOCK_MACRAW) && (tmp != SOCK_UDP) && (tmp != SOCK_IPRAW)) return SOCKERR_SOCKSTATUS;
    274a:	2007      	movs	r0, #7
    274c:	4240      	negs	r0, r0
    274e:	e001      	b.n	2754 <sendto+0x168>
      if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    2750:	2004      	movs	r0, #4
    2752:	4240      	negs	r0, r0
}
    2754:	b004      	add	sp, #16
    2756:	bc04      	pop	{r2}
    2758:	4693      	mov	fp, r2
    275a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    275c:	20000a98 	.word	0x20000a98

00002760 <recvfrom>:



int32_t recvfrom(uint8_t sn, uint8_t * buf, uint16_t len, uint8_t * addr, uint16_t *port)
{
    2760:	b5f0      	push	{r4, r5, r6, r7, lr}
    2762:	46de      	mov	lr, fp
    2764:	4647      	mov	r7, r8
    2766:	b580      	push	{r7, lr}
    2768:	b085      	sub	sp, #20
    276a:	0005      	movs	r5, r0
    276c:	9100      	str	r1, [sp, #0]
    276e:	4690      	mov	r8, r2
    2770:	9301      	str	r3, [sp, #4]
#endif
//   
   uint8_t  head[8];
	uint16_t pack_len=0;

   CHECK_SOCKNUM();
    2772:	2808      	cmp	r0, #8
    2774:	d900      	bls.n	2778 <recvfrom+0x18>
    2776:	e11b      	b.n	29b0 <recvfrom+0x250>
//A20150601
#if _WIZCHIP_ == 5300
   mr1 = getMR();
#endif   

   switch((mr=getSn_MR(sn)) & 0x0F)
    2778:	0007      	movs	r7, r0
    277a:	0083      	lsls	r3, r0, #2
    277c:	3301      	adds	r3, #1
    277e:	00de      	lsls	r6, r3, #3
    2780:	0030      	movs	r0, r6
    2782:	f000 f9eb 	bl	2b5c <WIZCHIP_READ>
    2786:	4683      	mov	fp, r0
    2788:	230f      	movs	r3, #15
    278a:	4003      	ands	r3, r0
    278c:	3b02      	subs	r3, #2
    278e:	b2db      	uxtb	r3, r3
    2790:	2b02      	cmp	r3, #2
    2792:	d900      	bls.n	2796 <recvfrom+0x36>
    2794:	e10f      	b.n	29b6 <recvfrom+0x256>
         break;
   #endif
      default:
         return SOCKERR_SOCKMODE;
   }
   CHECK_SOCKDATA();
    2796:	4643      	mov	r3, r8
    2798:	2b00      	cmp	r3, #0
    279a:	d100      	bne.n	279e <recvfrom+0x3e>
    279c:	e10e      	b.n	29bc <recvfrom+0x25c>
   if(sock_remained_size[sn] == 0)
    279e:	006b      	lsls	r3, r5, #1
    27a0:	4a89      	ldr	r2, [pc, #548]	; (29c8 <recvfrom+0x268>)
    27a2:	5a9b      	ldrh	r3, [r3, r2]
    27a4:	2b00      	cmp	r3, #0
    27a6:	d015      	beq.n	27d4 <recvfrom+0x74>
	uint16_t pack_len=0;
    27a8:	2400      	movs	r4, #0
         if(pack_len != 0) break;
      };
   }
//D20150601 : Move it to bottom
// sock_pack_info[sn] = PACK_COMPLETED;
	switch (mr & 0x07)
    27aa:	2307      	movs	r3, #7
    27ac:	465a      	mov	r2, fp
    27ae:	4013      	ands	r3, r2
    27b0:	2b03      	cmp	r3, #3
    27b2:	d100      	bne.n	27b6 <recvfrom+0x56>
    27b4:	e0bd      	b.n	2932 <recvfrom+0x1d2>
    27b6:	2b04      	cmp	r3, #4
    27b8:	d100      	bne.n	27bc <recvfrom+0x5c>
    27ba:	e081      	b.n	28c0 <recvfrom+0x160>
    27bc:	2b02      	cmp	r3, #2
    27be:	d01e      	beq.n	27fe <recvfrom+0x9e>
			else pack_len = sock_remained_size[sn];
   		wiz_recv_data(sn, buf, pack_len); // data copy.
			break;
   //#endif
      default:
         wiz_recv_ignore(sn, pack_len); // data copy.
    27c0:	0021      	movs	r1, r4
    27c2:	0028      	movs	r0, r5
    27c4:	f000 fb72 	bl	2eac <wiz_recv_ignore>
         sock_remained_size[sn] = pack_len;
    27c8:	006b      	lsls	r3, r5, #1
    27ca:	4a7f      	ldr	r2, [pc, #508]	; (29c8 <recvfrom+0x268>)
    27cc:	529c      	strh	r4, [r3, r2]
         break;
    27ce:	e026      	b.n	281e <recvfrom+0xbe>
         if(pack_len != 0) break;
    27d0:	2c00      	cmp	r4, #0
    27d2:	d1ea      	bne.n	27aa <recvfrom+0x4a>
         pack_len = getSn_RX_RSR(sn);
    27d4:	0028      	movs	r0, r5
    27d6:	f000 fad1 	bl	2d7c <getSn_RX_RSR>
    27da:	0004      	movs	r4, r0
         if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    27dc:	23c0      	movs	r3, #192	; 0xc0
    27de:	009b      	lsls	r3, r3, #2
    27e0:	18f0      	adds	r0, r6, r3
    27e2:	f000 f9bb 	bl	2b5c <WIZCHIP_READ>
    27e6:	2800      	cmp	r0, #0
    27e8:	d100      	bne.n	27ec <recvfrom+0x8c>
    27ea:	e0ea      	b.n	29c2 <recvfrom+0x262>
         if( (sock_io_mode & (1<<sn)) && (pack_len == 0) ) return SOCK_BUSY;
    27ec:	4b77      	ldr	r3, [pc, #476]	; (29cc <recvfrom+0x26c>)
    27ee:	881b      	ldrh	r3, [r3, #0]
    27f0:	413b      	asrs	r3, r7
    27f2:	07db      	lsls	r3, r3, #31
    27f4:	d5ec      	bpl.n	27d0 <recvfrom+0x70>
    27f6:	2c00      	cmp	r4, #0
    27f8:	d1ea      	bne.n	27d0 <recvfrom+0x70>
    27fa:	2000      	movs	r0, #0
    27fc:	e029      	b.n	2852 <recvfrom+0xf2>
	      if(sock_remained_size[sn] == 0)
    27fe:	006b      	lsls	r3, r5, #1
    2800:	4a71      	ldr	r2, [pc, #452]	; (29c8 <recvfrom+0x268>)
    2802:	5a9b      	ldrh	r3, [r3, r2]
    2804:	2b00      	cmp	r3, #0
    2806:	d029      	beq.n	285c <recvfrom+0xfc>
			if(len < sock_remained_size[sn]) pack_len = len;
    2808:	006b      	lsls	r3, r5, #1
    280a:	4a6f      	ldr	r2, [pc, #444]	; (29c8 <recvfrom+0x268>)
    280c:	5a9c      	ldrh	r4, [r3, r2]
    280e:	45a0      	cmp	r8, r4
    2810:	d200      	bcs.n	2814 <recvfrom+0xb4>
    2812:	4644      	mov	r4, r8
   		wiz_recv_data(sn, buf, pack_len); // data copy.
    2814:	0022      	movs	r2, r4
    2816:	9900      	ldr	r1, [sp, #0]
    2818:	0028      	movs	r0, r5
    281a:	f000 fb14 	bl	2e46 <wiz_recv_data>
   }
	setSn_CR(sn,Sn_CR_RECV);
    281e:	3601      	adds	r6, #1
    2820:	36ff      	adds	r6, #255	; 0xff
    2822:	2140      	movs	r1, #64	; 0x40
    2824:	0030      	movs	r0, r6
    2826:	f000 f9cb 	bl	2bc0 <WIZCHIP_WRITE>
	/* wait to process the command... */
	while(getSn_CR(sn)) ;
    282a:	0030      	movs	r0, r6
    282c:	f000 f996 	bl	2b5c <WIZCHIP_READ>
    2830:	2800      	cmp	r0, #0
    2832:	d1fa      	bne.n	282a <recvfrom+0xca>
	sock_remained_size[sn] -= pack_len;
    2834:	4a64      	ldr	r2, [pc, #400]	; (29c8 <recvfrom+0x268>)
    2836:	0069      	lsls	r1, r5, #1
    2838:	5a8b      	ldrh	r3, [r1, r2]
    283a:	1b1b      	subs	r3, r3, r4
    283c:	b29b      	uxth	r3, r3
    283e:	528b      	strh	r3, [r1, r2]
	//M20150601 : 
	//if(sock_remained_size[sn] != 0) sock_pack_info[sn] |= 0x01;
	if(sock_remained_size[sn] != 0)
    2840:	2b00      	cmp	r3, #0
    2842:	d100      	bne.n	2846 <recvfrom+0xe6>
    2844:	e0b0      	b.n	29a8 <recvfrom+0x248>
	{
	   sock_pack_info[sn] |= PACK_REMAINED;
    2846:	4a62      	ldr	r2, [pc, #392]	; (29d0 <recvfrom+0x270>)
    2848:	5d53      	ldrb	r3, [r2, r5]
    284a:	2101      	movs	r1, #1
    284c:	430b      	orrs	r3, r1
    284e:	5553      	strb	r3, [r2, r5]
   pack_len = len;
#endif
   //
   //M20150409 : Explicit Type Casting
   //return pack_len;
   return (int32_t)pack_len;
    2850:	0020      	movs	r0, r4
}
    2852:	b005      	add	sp, #20
    2854:	bc0c      	pop	{r2, r3}
    2856:	4690      	mov	r8, r2
    2858:	469b      	mov	fp, r3
    285a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   			wiz_recv_data(sn, head, 8);
    285c:	2208      	movs	r2, #8
    285e:	a902      	add	r1, sp, #8
    2860:	0028      	movs	r0, r5
    2862:	f000 faf0 	bl	2e46 <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    2866:	1c74      	adds	r4, r6, #1
    2868:	34ff      	adds	r4, #255	; 0xff
    286a:	2140      	movs	r1, #64	; 0x40
    286c:	0020      	movs	r0, r4
    286e:	f000 f9a7 	bl	2bc0 <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    2872:	0020      	movs	r0, r4
    2874:	f000 f972 	bl	2b5c <WIZCHIP_READ>
    2878:	2800      	cmp	r0, #0
    287a:	d1fa      	bne.n	2872 <recvfrom+0x112>
               addr[0] = head[0];
    287c:	ab02      	add	r3, sp, #8
    287e:	781b      	ldrb	r3, [r3, #0]
    2880:	9a01      	ldr	r2, [sp, #4]
    2882:	7013      	strb	r3, [r2, #0]
      			addr[1] = head[1];
    2884:	ab02      	add	r3, sp, #8
    2886:	785b      	ldrb	r3, [r3, #1]
    2888:	7053      	strb	r3, [r2, #1]
      			addr[2] = head[2];
    288a:	ab02      	add	r3, sp, #8
    288c:	789b      	ldrb	r3, [r3, #2]
    288e:	7093      	strb	r3, [r2, #2]
      			addr[3] = head[3];
    2890:	ab02      	add	r3, sp, #8
    2892:	78db      	ldrb	r3, [r3, #3]
    2894:	70d3      	strb	r3, [r2, #3]
      			*port = head[4];
    2896:	ab02      	add	r3, sp, #8
    2898:	791b      	ldrb	r3, [r3, #4]
      			*port = (*port << 8) + head[5];
    289a:	021b      	lsls	r3, r3, #8
    289c:	aa02      	add	r2, sp, #8
    289e:	7952      	ldrb	r2, [r2, #5]
    28a0:	189b      	adds	r3, r3, r2
    28a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    28a4:	8013      	strh	r3, [r2, #0]
      			sock_remained_size[sn] = head[6];
    28a6:	ab02      	add	r3, sp, #8
    28a8:	799b      	ldrb	r3, [r3, #6]
      			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[7];
    28aa:	021b      	lsls	r3, r3, #8
    28ac:	aa02      	add	r2, sp, #8
    28ae:	79d2      	ldrb	r2, [r2, #7]
    28b0:	189b      	adds	r3, r3, r2
    28b2:	006a      	lsls	r2, r5, #1
    28b4:	4944      	ldr	r1, [pc, #272]	; (29c8 <recvfrom+0x268>)
    28b6:	528b      	strh	r3, [r1, r2]
   			sock_pack_info[sn] = PACK_FIRST;
    28b8:	2280      	movs	r2, #128	; 0x80
    28ba:	4b45      	ldr	r3, [pc, #276]	; (29d0 <recvfrom+0x270>)
    28bc:	555a      	strb	r2, [r3, r5]
    28be:	e7a3      	b.n	2808 <recvfrom+0xa8>
	      if(sock_remained_size[sn] == 0)
    28c0:	006b      	lsls	r3, r5, #1
    28c2:	4a41      	ldr	r2, [pc, #260]	; (29c8 <recvfrom+0x268>)
    28c4:	5a9b      	ldrh	r3, [r3, r2]
    28c6:	2b00      	cmp	r3, #0
    28c8:	d00b      	beq.n	28e2 <recvfrom+0x182>
			if(len < sock_remained_size[sn]) pack_len = len;
    28ca:	006b      	lsls	r3, r5, #1
    28cc:	4a3e      	ldr	r2, [pc, #248]	; (29c8 <recvfrom+0x268>)
    28ce:	5a9c      	ldrh	r4, [r3, r2]
    28d0:	45a0      	cmp	r8, r4
    28d2:	d200      	bcs.n	28d6 <recvfrom+0x176>
    28d4:	4644      	mov	r4, r8
			wiz_recv_data(sn,buf,pack_len);
    28d6:	0022      	movs	r2, r4
    28d8:	9900      	ldr	r1, [sp, #0]
    28da:	0028      	movs	r0, r5
    28dc:	f000 fab3 	bl	2e46 <wiz_recv_data>
		   break;
    28e0:	e79d      	b.n	281e <recvfrom+0xbe>
   			wiz_recv_data(sn, head, 2);
    28e2:	2202      	movs	r2, #2
    28e4:	a902      	add	r1, sp, #8
    28e6:	0028      	movs	r0, r5
    28e8:	f000 faad 	bl	2e46 <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    28ec:	1c74      	adds	r4, r6, #1
    28ee:	34ff      	adds	r4, #255	; 0xff
    28f0:	2140      	movs	r1, #64	; 0x40
    28f2:	0020      	movs	r0, r4
    28f4:	f000 f964 	bl	2bc0 <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    28f8:	0020      	movs	r0, r4
    28fa:	f000 f92f 	bl	2b5c <WIZCHIP_READ>
    28fe:	2800      	cmp	r0, #0
    2900:	d1fa      	bne.n	28f8 <recvfrom+0x198>
    			sock_remained_size[sn] = head[0];
    2902:	ab02      	add	r3, sp, #8
    2904:	781b      	ldrb	r3, [r3, #0]
   			sock_remained_size[sn] = (sock_remained_size[sn] <<8) + head[1] -2;
    2906:	021b      	lsls	r3, r3, #8
    2908:	aa02      	add	r2, sp, #8
    290a:	7852      	ldrb	r2, [r2, #1]
    290c:	189b      	adds	r3, r3, r2
    290e:	b29b      	uxth	r3, r3
    2910:	3b02      	subs	r3, #2
    2912:	b29b      	uxth	r3, r3
    2914:	006a      	lsls	r2, r5, #1
    2916:	492c      	ldr	r1, [pc, #176]	; (29c8 <recvfrom+0x268>)
    2918:	5253      	strh	r3, [r2, r1]
   			if(sock_remained_size[sn] > 1514) 
    291a:	4a2e      	ldr	r2, [pc, #184]	; (29d4 <recvfrom+0x274>)
    291c:	4293      	cmp	r3, r2
    291e:	d803      	bhi.n	2928 <recvfrom+0x1c8>
   			sock_pack_info[sn] = PACK_FIRST;
    2920:	2280      	movs	r2, #128	; 0x80
    2922:	4b2b      	ldr	r3, [pc, #172]	; (29d0 <recvfrom+0x270>)
    2924:	555a      	strb	r2, [r3, r5]
    2926:	e7d0      	b.n	28ca <recvfrom+0x16a>
   			   close(sn);
    2928:	0028      	movs	r0, r5
    292a:	f7ff fbd1 	bl	20d0 <close>
   			   return SOCKFATAL_PACKLEN;
    292e:	482a      	ldr	r0, [pc, #168]	; (29d8 <recvfrom+0x278>)
    2930:	e78f      	b.n	2852 <recvfrom+0xf2>
		   if(sock_remained_size[sn] == 0)
    2932:	006b      	lsls	r3, r5, #1
    2934:	4a24      	ldr	r2, [pc, #144]	; (29c8 <recvfrom+0x268>)
    2936:	5a9b      	ldrh	r3, [r3, r2]
    2938:	2b00      	cmp	r3, #0
    293a:	d00b      	beq.n	2954 <recvfrom+0x1f4>
			if(len < sock_remained_size[sn]) pack_len = len;
    293c:	006b      	lsls	r3, r5, #1
    293e:	4a22      	ldr	r2, [pc, #136]	; (29c8 <recvfrom+0x268>)
    2940:	5a9c      	ldrh	r4, [r3, r2]
    2942:	45a0      	cmp	r8, r4
    2944:	d200      	bcs.n	2948 <recvfrom+0x1e8>
    2946:	4644      	mov	r4, r8
   		wiz_recv_data(sn, buf, pack_len); // data copy.
    2948:	0022      	movs	r2, r4
    294a:	9900      	ldr	r1, [sp, #0]
    294c:	0028      	movs	r0, r5
    294e:	f000 fa7a 	bl	2e46 <wiz_recv_data>
			break;
    2952:	e764      	b.n	281e <recvfrom+0xbe>
   			wiz_recv_data(sn, head, 6);
    2954:	2206      	movs	r2, #6
    2956:	a902      	add	r1, sp, #8
    2958:	0028      	movs	r0, r5
    295a:	f000 fa74 	bl	2e46 <wiz_recv_data>
   			setSn_CR(sn,Sn_CR_RECV);
    295e:	1c74      	adds	r4, r6, #1
    2960:	34ff      	adds	r4, #255	; 0xff
    2962:	2140      	movs	r1, #64	; 0x40
    2964:	0020      	movs	r0, r4
    2966:	f000 f92b 	bl	2bc0 <WIZCHIP_WRITE>
   			while(getSn_CR(sn));
    296a:	0020      	movs	r0, r4
    296c:	f000 f8f6 	bl	2b5c <WIZCHIP_READ>
    2970:	2800      	cmp	r0, #0
    2972:	d1fa      	bne.n	296a <recvfrom+0x20a>
   			addr[0] = head[0];
    2974:	ab02      	add	r3, sp, #8
    2976:	781b      	ldrb	r3, [r3, #0]
    2978:	9a01      	ldr	r2, [sp, #4]
    297a:	7013      	strb	r3, [r2, #0]
   			addr[1] = head[1];
    297c:	ab02      	add	r3, sp, #8
    297e:	785b      	ldrb	r3, [r3, #1]
    2980:	7053      	strb	r3, [r2, #1]
   			addr[2] = head[2];
    2982:	ab02      	add	r3, sp, #8
    2984:	789b      	ldrb	r3, [r3, #2]
    2986:	7093      	strb	r3, [r2, #2]
   			addr[3] = head[3];
    2988:	ab02      	add	r3, sp, #8
    298a:	78db      	ldrb	r3, [r3, #3]
    298c:	70d3      	strb	r3, [r2, #3]
   			sock_remained_size[sn] = head[4];
    298e:	ab02      	add	r3, sp, #8
    2990:	791b      	ldrb	r3, [r3, #4]
   			sock_remained_size[sn] = (sock_remained_size[sn] << 8) + head[5];
    2992:	021b      	lsls	r3, r3, #8
    2994:	aa02      	add	r2, sp, #8
    2996:	7952      	ldrb	r2, [r2, #5]
    2998:	189b      	adds	r3, r3, r2
    299a:	006a      	lsls	r2, r5, #1
    299c:	490a      	ldr	r1, [pc, #40]	; (29c8 <recvfrom+0x268>)
    299e:	528b      	strh	r3, [r1, r2]
   			sock_pack_info[sn] = PACK_FIRST;
    29a0:	2280      	movs	r2, #128	; 0x80
    29a2:	4b0b      	ldr	r3, [pc, #44]	; (29d0 <recvfrom+0x270>)
    29a4:	555a      	strb	r2, [r3, r5]
    29a6:	e7c9      	b.n	293c <recvfrom+0x1dc>
	else sock_pack_info[sn] = PACK_COMPLETED;
    29a8:	2200      	movs	r2, #0
    29aa:	4b09      	ldr	r3, [pc, #36]	; (29d0 <recvfrom+0x270>)
    29ac:	555a      	strb	r2, [r3, r5]
    29ae:	e74f      	b.n	2850 <recvfrom+0xf0>
   CHECK_SOCKNUM();
    29b0:	2001      	movs	r0, #1
    29b2:	4240      	negs	r0, r0
    29b4:	e74d      	b.n	2852 <recvfrom+0xf2>
         return SOCKERR_SOCKMODE;
    29b6:	2005      	movs	r0, #5
    29b8:	4240      	negs	r0, r0
    29ba:	e74a      	b.n	2852 <recvfrom+0xf2>
   CHECK_SOCKDATA();
    29bc:	200e      	movs	r0, #14
    29be:	4240      	negs	r0, r0
    29c0:	e747      	b.n	2852 <recvfrom+0xf2>
         if(getSn_SR(sn) == SOCK_CLOSED) return SOCKERR_SOCKCLOSED;
    29c2:	2004      	movs	r0, #4
    29c4:	4240      	negs	r0, r0
    29c6:	e744      	b.n	2852 <recvfrom+0xf2>
    29c8:	20000aa4 	.word	0x20000aa4
    29cc:	20000a98 	.word	0x20000a98
    29d0:	20000a9c 	.word	0x20000a9c
    29d4:	000005ea 	.word	0x000005ea
    29d8:	fffffc17 	.word	0xfffffc17

000029dc <getsockopt>:
   }   
   return SOCK_OK;
}

int8_t  getsockopt(uint8_t sn, sockopt_type sotype, void* arg)
{
    29dc:	b570      	push	{r4, r5, r6, lr}
    29de:	0004      	movs	r4, r0
    29e0:	0015      	movs	r5, r2
   CHECK_SOCKNUM();
    29e2:	2808      	cmp	r0, #8
    29e4:	d900      	bls.n	29e8 <getsockopt+0xc>
    29e6:	e0a6      	b.n	2b36 <getsockopt+0x15a>
   switch(sotype)
    29e8:	290c      	cmp	r1, #12
    29ea:	d900      	bls.n	29ee <getsockopt+0x12>
    29ec:	e0a6      	b.n	2b3c <getsockopt+0x160>
    29ee:	0089      	lsls	r1, r1, #2
    29f0:	4b57      	ldr	r3, [pc, #348]	; (2b50 <getsockopt+0x174>)
    29f2:	585b      	ldr	r3, [r3, r1]
    29f4:	469f      	mov	pc, r3
   {
      case SO_FLAG:
         *(uint8_t*)arg = getSn_MR(sn) & 0xF0;
    29f6:	0080      	lsls	r0, r0, #2
    29f8:	3001      	adds	r0, #1
    29fa:	00c0      	lsls	r0, r0, #3
    29fc:	f000 f8ae 	bl	2b5c <WIZCHIP_READ>
    2a00:	230f      	movs	r3, #15
    2a02:	4398      	bics	r0, r3
    2a04:	7028      	strb	r0, [r5, #0]
         *(uint8_t*)arg = sock_pack_info[sn];
         break;
      default:
         return SOCKERR_SOCKOPT;
   }
   return SOCK_OK;
    2a06:	2001      	movs	r0, #1
}
    2a08:	bd70      	pop	{r4, r5, r6, pc}
         *(uint8_t*) arg = getSn_TTL(sn);
    2a0a:	0080      	lsls	r0, r0, #2
    2a0c:	3001      	adds	r0, #1
    2a0e:	00c0      	lsls	r0, r0, #3
    2a10:	23b0      	movs	r3, #176	; 0xb0
    2a12:	015b      	lsls	r3, r3, #5
    2a14:	469c      	mov	ip, r3
    2a16:	4460      	add	r0, ip
    2a18:	f000 f8a0 	bl	2b5c <WIZCHIP_READ>
    2a1c:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2a1e:	2001      	movs	r0, #1
         break;
    2a20:	e7f2      	b.n	2a08 <getsockopt+0x2c>
         *(uint8_t*) arg = getSn_TOS(sn);
    2a22:	0080      	lsls	r0, r0, #2
    2a24:	3001      	adds	r0, #1
    2a26:	00c0      	lsls	r0, r0, #3
    2a28:	23a8      	movs	r3, #168	; 0xa8
    2a2a:	015b      	lsls	r3, r3, #5
    2a2c:	469c      	mov	ip, r3
    2a2e:	4460      	add	r0, ip
    2a30:	f000 f894 	bl	2b5c <WIZCHIP_READ>
    2a34:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2a36:	2001      	movs	r0, #1
         break;
    2a38:	e7e6      	b.n	2a08 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_MSSR(sn);
    2a3a:	0084      	lsls	r4, r0, #2
    2a3c:	3401      	adds	r4, #1
    2a3e:	00e4      	lsls	r4, r4, #3
    2a40:	2390      	movs	r3, #144	; 0x90
    2a42:	015b      	lsls	r3, r3, #5
    2a44:	18e0      	adds	r0, r4, r3
    2a46:	f000 f889 	bl	2b5c <WIZCHIP_READ>
    2a4a:	b286      	uxth	r6, r0
    2a4c:	0236      	lsls	r6, r6, #8
    2a4e:	b2b6      	uxth	r6, r6
    2a50:	2398      	movs	r3, #152	; 0x98
    2a52:	015b      	lsls	r3, r3, #5
    2a54:	18e0      	adds	r0, r4, r3
    2a56:	f000 f881 	bl	2b5c <WIZCHIP_READ>
    2a5a:	b280      	uxth	r0, r0
    2a5c:	1836      	adds	r6, r6, r0
    2a5e:	802e      	strh	r6, [r5, #0]
   return SOCK_OK;
    2a60:	2001      	movs	r0, #1
         break;
    2a62:	e7d1      	b.n	2a08 <getsockopt+0x2c>
         getSn_DIPR(sn, (uint8_t*)arg);
    2a64:	0080      	lsls	r0, r0, #2
    2a66:	3001      	adds	r0, #1
    2a68:	00c0      	lsls	r0, r0, #3
    2a6a:	23c0      	movs	r3, #192	; 0xc0
    2a6c:	011b      	lsls	r3, r3, #4
    2a6e:	469c      	mov	ip, r3
    2a70:	4460      	add	r0, ip
    2a72:	2204      	movs	r2, #4
    2a74:	0029      	movs	r1, r5
    2a76:	f000 f8d3 	bl	2c20 <WIZCHIP_READ_BUF>
   return SOCK_OK;
    2a7a:	2001      	movs	r0, #1
         break;
    2a7c:	e7c4      	b.n	2a08 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_DPORT(sn);
    2a7e:	0084      	lsls	r4, r0, #2
    2a80:	3401      	adds	r4, #1
    2a82:	00e4      	lsls	r4, r4, #3
    2a84:	2380      	movs	r3, #128	; 0x80
    2a86:	015b      	lsls	r3, r3, #5
    2a88:	18e0      	adds	r0, r4, r3
    2a8a:	f000 f867 	bl	2b5c <WIZCHIP_READ>
    2a8e:	b286      	uxth	r6, r0
    2a90:	0236      	lsls	r6, r6, #8
    2a92:	b2b6      	uxth	r6, r6
    2a94:	2388      	movs	r3, #136	; 0x88
    2a96:	015b      	lsls	r3, r3, #5
    2a98:	18e0      	adds	r0, r4, r3
    2a9a:	f000 f85f 	bl	2b5c <WIZCHIP_READ>
    2a9e:	b280      	uxth	r0, r0
    2aa0:	1836      	adds	r6, r6, r0
    2aa2:	802e      	strh	r6, [r5, #0]
   return SOCK_OK;
    2aa4:	2001      	movs	r0, #1
         break;
    2aa6:	e7af      	b.n	2a08 <getsockopt+0x2c>
         CHECK_SOCKMODE(Sn_MR_TCP);
    2aa8:	0084      	lsls	r4, r0, #2
    2aaa:	3401      	adds	r4, #1
    2aac:	00e4      	lsls	r4, r4, #3
    2aae:	0020      	movs	r0, r4
    2ab0:	f000 f854 	bl	2b5c <WIZCHIP_READ>
    2ab4:	230f      	movs	r3, #15
    2ab6:	4018      	ands	r0, r3
    2ab8:	2801      	cmp	r0, #1
    2aba:	d142      	bne.n	2b42 <getsockopt+0x166>
         *(uint16_t*) arg = getSn_KPALVTR(sn);
    2abc:	23bc      	movs	r3, #188	; 0xbc
    2abe:	019b      	lsls	r3, r3, #6
    2ac0:	18e0      	adds	r0, r4, r3
    2ac2:	f000 f84b 	bl	2b5c <WIZCHIP_READ>
    2ac6:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2ac8:	2001      	movs	r0, #1
         break;
    2aca:	e79d      	b.n	2a08 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_TX_FSR(sn);
    2acc:	f000 f924 	bl	2d18 <getSn_TX_FSR>
    2ad0:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2ad2:	2001      	movs	r0, #1
         break;
    2ad4:	e798      	b.n	2a08 <getsockopt+0x2c>
         *(uint16_t*) arg = getSn_RX_RSR(sn);
    2ad6:	f000 f951 	bl	2d7c <getSn_RX_RSR>
    2ada:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2adc:	2001      	movs	r0, #1
         break;
    2ade:	e793      	b.n	2a08 <getsockopt+0x2c>
         *(uint8_t*) arg = getSn_SR(sn);
    2ae0:	0080      	lsls	r0, r0, #2
    2ae2:	3001      	adds	r0, #1
    2ae4:	00c0      	lsls	r0, r0, #3
    2ae6:	23c0      	movs	r3, #192	; 0xc0
    2ae8:	009b      	lsls	r3, r3, #2
    2aea:	469c      	mov	ip, r3
    2aec:	4460      	add	r0, ip
    2aee:	f000 f835 	bl	2b5c <WIZCHIP_READ>
    2af2:	7028      	strb	r0, [r5, #0]
   return SOCK_OK;
    2af4:	2001      	movs	r0, #1
         break;
    2af6:	e787      	b.n	2a08 <getsockopt+0x2c>
         if(getSn_MR(sn) & Sn_MR_TCP)
    2af8:	0080      	lsls	r0, r0, #2
    2afa:	3001      	adds	r0, #1
    2afc:	00c0      	lsls	r0, r0, #3
    2afe:	f000 f82d 	bl	2b5c <WIZCHIP_READ>
    2b02:	07c3      	lsls	r3, r0, #31
    2b04:	d405      	bmi.n	2b12 <getsockopt+0x136>
            *(uint16_t*)arg = sock_remained_size[sn];
    2b06:	0064      	lsls	r4, r4, #1
    2b08:	4b12      	ldr	r3, [pc, #72]	; (2b54 <getsockopt+0x178>)
    2b0a:	5ae3      	ldrh	r3, [r4, r3]
    2b0c:	802b      	strh	r3, [r5, #0]
   return SOCK_OK;
    2b0e:	2001      	movs	r0, #1
    2b10:	e77a      	b.n	2a08 <getsockopt+0x2c>
            *(uint16_t*)arg = getSn_RX_RSR(sn);
    2b12:	0020      	movs	r0, r4
    2b14:	f000 f932 	bl	2d7c <getSn_RX_RSR>
    2b18:	8028      	strh	r0, [r5, #0]
   return SOCK_OK;
    2b1a:	2001      	movs	r0, #1
    2b1c:	e774      	b.n	2a08 <getsockopt+0x2c>
         if((getSn_MR(sn) == Sn_MR_TCP))
    2b1e:	0080      	lsls	r0, r0, #2
    2b20:	3001      	adds	r0, #1
    2b22:	00c0      	lsls	r0, r0, #3
    2b24:	f000 f81a 	bl	2b5c <WIZCHIP_READ>
    2b28:	2801      	cmp	r0, #1
    2b2a:	d00d      	beq.n	2b48 <getsockopt+0x16c>
         *(uint8_t*)arg = sock_pack_info[sn];
    2b2c:	4b0a      	ldr	r3, [pc, #40]	; (2b58 <getsockopt+0x17c>)
    2b2e:	5d1b      	ldrb	r3, [r3, r4]
    2b30:	702b      	strb	r3, [r5, #0]
   return SOCK_OK;
    2b32:	2001      	movs	r0, #1
         break;
    2b34:	e768      	b.n	2a08 <getsockopt+0x2c>
   CHECK_SOCKNUM();
    2b36:	2001      	movs	r0, #1
    2b38:	4240      	negs	r0, r0
    2b3a:	e765      	b.n	2a08 <getsockopt+0x2c>
         return SOCKERR_SOCKOPT;
    2b3c:	2002      	movs	r0, #2
    2b3e:	4240      	negs	r0, r0
    2b40:	e762      	b.n	2a08 <getsockopt+0x2c>
         CHECK_SOCKMODE(Sn_MR_TCP);
    2b42:	2005      	movs	r0, #5
    2b44:	4240      	negs	r0, r0
    2b46:	e75f      	b.n	2a08 <getsockopt+0x2c>
             return SOCKERR_SOCKMODE;
    2b48:	2005      	movs	r0, #5
    2b4a:	4240      	negs	r0, r0
    2b4c:	e75c      	b.n	2a08 <getsockopt+0x2c>
    2b4e:	46c0      	nop			; (mov r8, r8)
    2b50:	0000d5fc 	.word	0x0000d5fc
    2b54:	20000aa4 	.word	0x20000aa4
    2b58:	20000a9c 	.word	0x20000a9c

00002b5c <WIZCHIP_READ>:

#if   (_WIZCHIP_ == 5500)
////////////////////////////////////////////////////

uint8_t  WIZCHIP_READ(uint32_t AddrSel)
{
    2b5c:	b530      	push	{r4, r5, lr}
    2b5e:	b083      	sub	sp, #12
    2b60:	0004      	movs	r4, r0
   uint8_t ret;
   uint8_t spi_data[3];

   WIZCHIP_CRITICAL_ENTER();
    2b62:	4d16      	ldr	r5, [pc, #88]	; (2bbc <WIZCHIP_READ+0x60>)
    2b64:	68eb      	ldr	r3, [r5, #12]
    2b66:	4798      	blx	r3
   WIZCHIP.CS._select();
    2b68:	696b      	ldr	r3, [r5, #20]
    2b6a:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_READ_ | _W5500_SPI_VDM_OP_);

   if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2b6c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    2b6e:	2b00      	cmp	r3, #0
    2b70:	d016      	beq.n	2ba0 <WIZCHIP_READ+0x44>
    2b72:	4b12      	ldr	r3, [pc, #72]	; (2bbc <WIZCHIP_READ+0x60>)
    2b74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2b76:	2b00      	cmp	r3, #0
    2b78:	d012      	beq.n	2ba0 <WIZCHIP_READ+0x44>
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
   }
   else																// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2b7a:	0c22      	lsrs	r2, r4, #16
    2b7c:	a801      	add	r0, sp, #4
    2b7e:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2b80:	0a22      	lsrs	r2, r4, #8
    2b82:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2b84:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2b86:	2103      	movs	r1, #3
    2b88:	4798      	blx	r3
   }
   ret = WIZCHIP.IF.SPI._read_byte();
    2b8a:	4c0c      	ldr	r4, [pc, #48]	; (2bbc <WIZCHIP_READ+0x60>)
    2b8c:	69e3      	ldr	r3, [r4, #28]
    2b8e:	4798      	blx	r3
    2b90:	0005      	movs	r5, r0

   WIZCHIP.CS._deselect();
    2b92:	69a3      	ldr	r3, [r4, #24]
    2b94:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2b96:	6923      	ldr	r3, [r4, #16]
    2b98:	4798      	blx	r3
   return ret;
}
    2b9a:	0028      	movs	r0, r5
    2b9c:	b003      	add	sp, #12
    2b9e:	bd30      	pop	{r4, r5, pc}
	   WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2ba0:	4d06      	ldr	r5, [pc, #24]	; (2bbc <WIZCHIP_READ+0x60>)
    2ba2:	0c20      	lsrs	r0, r4, #16
    2ba4:	b2c0      	uxtb	r0, r0
    2ba6:	6a2b      	ldr	r3, [r5, #32]
    2ba8:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2baa:	0a20      	lsrs	r0, r4, #8
    2bac:	b2c0      	uxtb	r0, r0
    2bae:	6a2b      	ldr	r3, [r5, #32]
    2bb0:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2bb2:	6a2b      	ldr	r3, [r5, #32]
    2bb4:	b2e0      	uxtb	r0, r4
    2bb6:	4798      	blx	r3
    2bb8:	e7e7      	b.n	2b8a <WIZCHIP_READ+0x2e>
    2bba:	46c0      	nop			; (mov r8, r8)
    2bbc:	2000002c 	.word	0x2000002c

00002bc0 <WIZCHIP_WRITE>:

void     WIZCHIP_WRITE(uint32_t AddrSel, uint8_t wb )
{
    2bc0:	b570      	push	{r4, r5, r6, lr}
    2bc2:	b082      	sub	sp, #8
    2bc4:	0004      	movs	r4, r0
    2bc6:	000e      	movs	r6, r1
   uint8_t spi_data[4];

   WIZCHIP_CRITICAL_ENTER();
    2bc8:	4d14      	ldr	r5, [pc, #80]	; (2c1c <WIZCHIP_WRITE+0x5c>)
    2bca:	68eb      	ldr	r3, [r5, #12]
    2bcc:	4798      	blx	r3
   WIZCHIP.CS._select();
    2bce:	696b      	ldr	r3, [r5, #20]
    2bd0:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_WRITE_ | _W5500_SPI_VDM_OP_);
    2bd2:	2004      	movs	r0, #4
    2bd4:	4304      	orrs	r4, r0

   //if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
   if(!WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2bd6:	6aab      	ldr	r3, [r5, #40]	; 0x28
    2bd8:	2b00      	cmp	r3, #0
    2bda:	d00f      	beq.n	2bfc <WIZCHIP_WRITE+0x3c>
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
		WIZCHIP.IF.SPI._write_byte(wb);
   }
   else									// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2bdc:	0c22      	lsrs	r2, r4, #16
    2bde:	a801      	add	r0, sp, #4
    2be0:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2be2:	0a22      	lsrs	r2, r4, #8
    2be4:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2be6:	7084      	strb	r4, [r0, #2]
		spi_data[3] = wb;
    2be8:	70c6      	strb	r6, [r0, #3]
		WIZCHIP.IF.SPI._write_burst(spi_data, 4);
    2bea:	2104      	movs	r1, #4
    2bec:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2bee:	4c0b      	ldr	r4, [pc, #44]	; (2c1c <WIZCHIP_WRITE+0x5c>)
    2bf0:	69a3      	ldr	r3, [r4, #24]
    2bf2:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2bf4:	6923      	ldr	r3, [r4, #16]
    2bf6:	4798      	blx	r3
}
    2bf8:	b002      	add	sp, #8
    2bfa:	bd70      	pop	{r4, r5, r6, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2bfc:	4d07      	ldr	r5, [pc, #28]	; (2c1c <WIZCHIP_WRITE+0x5c>)
    2bfe:	0c20      	lsrs	r0, r4, #16
    2c00:	b2c0      	uxtb	r0, r0
    2c02:	6a2b      	ldr	r3, [r5, #32]
    2c04:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2c06:	0a20      	lsrs	r0, r4, #8
    2c08:	b2c0      	uxtb	r0, r0
    2c0a:	6a2b      	ldr	r3, [r5, #32]
    2c0c:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2c0e:	b2e0      	uxtb	r0, r4
    2c10:	6a2b      	ldr	r3, [r5, #32]
    2c12:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte(wb);
    2c14:	6a2b      	ldr	r3, [r5, #32]
    2c16:	0030      	movs	r0, r6
    2c18:	4798      	blx	r3
    2c1a:	e7e8      	b.n	2bee <WIZCHIP_WRITE+0x2e>
    2c1c:	2000002c 	.word	0x2000002c

00002c20 <WIZCHIP_READ_BUF>:
         
void     WIZCHIP_READ_BUF (uint32_t AddrSel, uint8_t* pBuf, uint16_t len)
{
    2c20:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c22:	b083      	sub	sp, #12
    2c24:	0004      	movs	r4, r0
    2c26:	000f      	movs	r7, r1
    2c28:	0016      	movs	r6, r2
   uint8_t spi_data[3];
   uint16_t i;

   WIZCHIP_CRITICAL_ENTER();
    2c2a:	4d1c      	ldr	r5, [pc, #112]	; (2c9c <WIZCHIP_READ_BUF+0x7c>)
    2c2c:	68eb      	ldr	r3, [r5, #12]
    2c2e:	4798      	blx	r3
   WIZCHIP.CS._select();
    2c30:	696b      	ldr	r3, [r5, #20]
    2c32:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_READ_ | _W5500_SPI_VDM_OP_);

   if(!WIZCHIP.IF.SPI._read_burst || !WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2c34:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    2c36:	2b00      	cmp	r3, #0
    2c38:	d017      	beq.n	2c6a <WIZCHIP_READ_BUF+0x4a>
    2c3a:	4b18      	ldr	r3, [pc, #96]	; (2c9c <WIZCHIP_READ_BUF+0x7c>)
    2c3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2c3e:	2b00      	cmp	r3, #0
    2c40:	d013      	beq.n	2c6a <WIZCHIP_READ_BUF+0x4a>
		for(i = 0; i < len; i++)
		   pBuf[i] = WIZCHIP.IF.SPI._read_byte();
   }
   else																// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2c42:	0c22      	lsrs	r2, r4, #16
    2c44:	a801      	add	r0, sp, #4
    2c46:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2c48:	0a22      	lsrs	r2, r4, #8
    2c4a:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2c4c:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2c4e:	2103      	movs	r1, #3
    2c50:	4798      	blx	r3
		WIZCHIP.IF.SPI._read_burst(pBuf, len);
    2c52:	4b12      	ldr	r3, [pc, #72]	; (2c9c <WIZCHIP_READ_BUF+0x7c>)
    2c54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2c56:	0031      	movs	r1, r6
    2c58:	0038      	movs	r0, r7
    2c5a:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2c5c:	4c0f      	ldr	r4, [pc, #60]	; (2c9c <WIZCHIP_READ_BUF+0x7c>)
    2c5e:	69a3      	ldr	r3, [r4, #24]
    2c60:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2c62:	6923      	ldr	r3, [r4, #16]
    2c64:	4798      	blx	r3
}
    2c66:	b003      	add	sp, #12
    2c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2c6a:	4d0c      	ldr	r5, [pc, #48]	; (2c9c <WIZCHIP_READ_BUF+0x7c>)
    2c6c:	0c20      	lsrs	r0, r4, #16
    2c6e:	b2c0      	uxtb	r0, r0
    2c70:	6a2b      	ldr	r3, [r5, #32]
    2c72:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2c74:	0a20      	lsrs	r0, r4, #8
    2c76:	b2c0      	uxtb	r0, r0
    2c78:	6a2b      	ldr	r3, [r5, #32]
    2c7a:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2c7c:	6a2b      	ldr	r3, [r5, #32]
    2c7e:	b2e0      	uxtb	r0, r4
    2c80:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2c82:	2400      	movs	r4, #0
    2c84:	e006      	b.n	2c94 <WIZCHIP_READ_BUF+0x74>
		   pBuf[i] = WIZCHIP.IF.SPI._read_byte();
    2c86:	193d      	adds	r5, r7, r4
    2c88:	4b04      	ldr	r3, [pc, #16]	; (2c9c <WIZCHIP_READ_BUF+0x7c>)
    2c8a:	69db      	ldr	r3, [r3, #28]
    2c8c:	4798      	blx	r3
    2c8e:	7028      	strb	r0, [r5, #0]
		for(i = 0; i < len; i++)
    2c90:	3401      	adds	r4, #1
    2c92:	b2a4      	uxth	r4, r4
    2c94:	42b4      	cmp	r4, r6
    2c96:	d3f6      	bcc.n	2c86 <WIZCHIP_READ_BUF+0x66>
    2c98:	e7e0      	b.n	2c5c <WIZCHIP_READ_BUF+0x3c>
    2c9a:	46c0      	nop			; (mov r8, r8)
    2c9c:	2000002c 	.word	0x2000002c

00002ca0 <WIZCHIP_WRITE_BUF>:

void     WIZCHIP_WRITE_BUF(uint32_t AddrSel, uint8_t* pBuf, uint16_t len)
{
    2ca0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ca2:	b083      	sub	sp, #12
    2ca4:	0004      	movs	r4, r0
    2ca6:	000f      	movs	r7, r1
    2ca8:	0016      	movs	r6, r2
   uint8_t spi_data[3];
   uint16_t i;

   WIZCHIP_CRITICAL_ENTER();
    2caa:	4d1a      	ldr	r5, [pc, #104]	; (2d14 <WIZCHIP_WRITE_BUF+0x74>)
    2cac:	68eb      	ldr	r3, [r5, #12]
    2cae:	4798      	blx	r3
   WIZCHIP.CS._select();
    2cb0:	696b      	ldr	r3, [r5, #20]
    2cb2:	4798      	blx	r3

   AddrSel |= (_W5500_SPI_WRITE_ | _W5500_SPI_VDM_OP_);
    2cb4:	2004      	movs	r0, #4
    2cb6:	4304      	orrs	r4, r0

   if(!WIZCHIP.IF.SPI._write_burst) 	// byte operation
    2cb8:	6aab      	ldr	r3, [r5, #40]	; 0x28
    2cba:	2b00      	cmp	r3, #0
    2cbc:	d013      	beq.n	2ce6 <WIZCHIP_WRITE_BUF+0x46>
		for(i = 0; i < len; i++)
			WIZCHIP.IF.SPI._write_byte(pBuf[i]);
   }
   else									// burst operation
   {
		spi_data[0] = (AddrSel & 0x00FF0000) >> 16;
    2cbe:	0c22      	lsrs	r2, r4, #16
    2cc0:	a801      	add	r0, sp, #4
    2cc2:	7002      	strb	r2, [r0, #0]
		spi_data[1] = (AddrSel & 0x0000FF00) >> 8;
    2cc4:	0a22      	lsrs	r2, r4, #8
    2cc6:	7042      	strb	r2, [r0, #1]
		spi_data[2] = (AddrSel & 0x000000FF) >> 0;
    2cc8:	7084      	strb	r4, [r0, #2]
		WIZCHIP.IF.SPI._write_burst(spi_data, 3);
    2cca:	2103      	movs	r1, #3
    2ccc:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_burst(pBuf, len);
    2cce:	4b11      	ldr	r3, [pc, #68]	; (2d14 <WIZCHIP_WRITE_BUF+0x74>)
    2cd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2cd2:	0031      	movs	r1, r6
    2cd4:	0038      	movs	r0, r7
    2cd6:	4798      	blx	r3
   }

   WIZCHIP.CS._deselect();
    2cd8:	4c0e      	ldr	r4, [pc, #56]	; (2d14 <WIZCHIP_WRITE_BUF+0x74>)
    2cda:	69a3      	ldr	r3, [r4, #24]
    2cdc:	4798      	blx	r3
   WIZCHIP_CRITICAL_EXIT();
    2cde:	6923      	ldr	r3, [r4, #16]
    2ce0:	4798      	blx	r3
}
    2ce2:	b003      	add	sp, #12
    2ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x00FF0000) >> 16);
    2ce6:	4d0b      	ldr	r5, [pc, #44]	; (2d14 <WIZCHIP_WRITE_BUF+0x74>)
    2ce8:	0c20      	lsrs	r0, r4, #16
    2cea:	b2c0      	uxtb	r0, r0
    2cec:	6a2b      	ldr	r3, [r5, #32]
    2cee:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x0000FF00) >>  8);
    2cf0:	0a20      	lsrs	r0, r4, #8
    2cf2:	b2c0      	uxtb	r0, r0
    2cf4:	6a2b      	ldr	r3, [r5, #32]
    2cf6:	4798      	blx	r3
		WIZCHIP.IF.SPI._write_byte((AddrSel & 0x000000FF) >>  0);
    2cf8:	6a2b      	ldr	r3, [r5, #32]
    2cfa:	b2e0      	uxtb	r0, r4
    2cfc:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2cfe:	2400      	movs	r4, #0
    2d00:	e005      	b.n	2d0e <WIZCHIP_WRITE_BUF+0x6e>
			WIZCHIP.IF.SPI._write_byte(pBuf[i]);
    2d02:	4b04      	ldr	r3, [pc, #16]	; (2d14 <WIZCHIP_WRITE_BUF+0x74>)
    2d04:	6a1b      	ldr	r3, [r3, #32]
    2d06:	5d38      	ldrb	r0, [r7, r4]
    2d08:	4798      	blx	r3
		for(i = 0; i < len; i++)
    2d0a:	3401      	adds	r4, #1
    2d0c:	b2a4      	uxth	r4, r4
    2d0e:	42b4      	cmp	r4, r6
    2d10:	d3f7      	bcc.n	2d02 <WIZCHIP_WRITE_BUF+0x62>
    2d12:	e7e1      	b.n	2cd8 <WIZCHIP_WRITE_BUF+0x38>
    2d14:	2000002c 	.word	0x2000002c

00002d18 <getSn_TX_FSR>:


uint16_t getSn_TX_FSR(uint8_t sn)
{
    2d18:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d1a:	46c6      	mov	lr, r8
    2d1c:	b500      	push	{lr}
    2d1e:	0007      	movs	r7, r0
   uint16_t val=0,val1=0;
    2d20:	2500      	movs	r5, #0
    2d22:	e001      	b.n	2d28 <getSn_TX_FSR+0x10>
      if (val1 != 0)
      {
        val = WIZCHIP_READ(Sn_TX_FSR(sn));
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
      }
   }while (val != val1);
    2d24:	42a5      	cmp	r5, r4
    2d26:	d025      	beq.n	2d74 <getSn_TX_FSR+0x5c>
      val1 = WIZCHIP_READ(Sn_TX_FSR(sn));
    2d28:	00bb      	lsls	r3, r7, #2
    2d2a:	3301      	adds	r3, #1
    2d2c:	00db      	lsls	r3, r3, #3
    2d2e:	4698      	mov	r8, r3
    2d30:	2680      	movs	r6, #128	; 0x80
    2d32:	01b6      	lsls	r6, r6, #6
    2d34:	4446      	add	r6, r8
    2d36:	0030      	movs	r0, r6
    2d38:	f7ff ff10 	bl	2b5c <WIZCHIP_READ>
    2d3c:	b284      	uxth	r4, r0
      val1 = (val1 << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
    2d3e:	0224      	lsls	r4, r4, #8
    2d40:	b2a4      	uxth	r4, r4
    2d42:	2384      	movs	r3, #132	; 0x84
    2d44:	019b      	lsls	r3, r3, #6
    2d46:	469c      	mov	ip, r3
    2d48:	44e0      	add	r8, ip
    2d4a:	4640      	mov	r0, r8
    2d4c:	f7ff ff06 	bl	2b5c <WIZCHIP_READ>
    2d50:	b280      	uxth	r0, r0
    2d52:	1824      	adds	r4, r4, r0
    2d54:	b2a4      	uxth	r4, r4
      if (val1 != 0)
    2d56:	2c00      	cmp	r4, #0
    2d58:	d0e4      	beq.n	2d24 <getSn_TX_FSR+0xc>
        val = WIZCHIP_READ(Sn_TX_FSR(sn));
    2d5a:	0030      	movs	r0, r6
    2d5c:	f7ff fefe 	bl	2b5c <WIZCHIP_READ>
    2d60:	b280      	uxth	r0, r0
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_TX_FSR(sn),1));
    2d62:	0200      	lsls	r0, r0, #8
    2d64:	b285      	uxth	r5, r0
    2d66:	4640      	mov	r0, r8
    2d68:	f7ff fef8 	bl	2b5c <WIZCHIP_READ>
    2d6c:	b280      	uxth	r0, r0
    2d6e:	182d      	adds	r5, r5, r0
    2d70:	b2ad      	uxth	r5, r5
    2d72:	e7d7      	b.n	2d24 <getSn_TX_FSR+0xc>
   return val;
}
    2d74:	0028      	movs	r0, r5
    2d76:	bc04      	pop	{r2}
    2d78:	4690      	mov	r8, r2
    2d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002d7c <getSn_RX_RSR>:


uint16_t getSn_RX_RSR(uint8_t sn)
{
    2d7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d7e:	46c6      	mov	lr, r8
    2d80:	b500      	push	{lr}
    2d82:	0007      	movs	r7, r0
   uint16_t val=0,val1=0;
    2d84:	2500      	movs	r5, #0
    2d86:	e001      	b.n	2d8c <getSn_RX_RSR+0x10>
      if (val1 != 0)
      {
        val = WIZCHIP_READ(Sn_RX_RSR(sn));
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
      }
   }while (val != val1);
    2d88:	42a5      	cmp	r5, r4
    2d8a:	d025      	beq.n	2dd8 <getSn_RX_RSR+0x5c>
      val1 = WIZCHIP_READ(Sn_RX_RSR(sn));
    2d8c:	00bb      	lsls	r3, r7, #2
    2d8e:	3301      	adds	r3, #1
    2d90:	00db      	lsls	r3, r3, #3
    2d92:	4698      	mov	r8, r3
    2d94:	2698      	movs	r6, #152	; 0x98
    2d96:	01b6      	lsls	r6, r6, #6
    2d98:	4446      	add	r6, r8
    2d9a:	0030      	movs	r0, r6
    2d9c:	f7ff fede 	bl	2b5c <WIZCHIP_READ>
    2da0:	b284      	uxth	r4, r0
      val1 = (val1 << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
    2da2:	0224      	lsls	r4, r4, #8
    2da4:	b2a4      	uxth	r4, r4
    2da6:	239c      	movs	r3, #156	; 0x9c
    2da8:	019b      	lsls	r3, r3, #6
    2daa:	469c      	mov	ip, r3
    2dac:	44e0      	add	r8, ip
    2dae:	4640      	mov	r0, r8
    2db0:	f7ff fed4 	bl	2b5c <WIZCHIP_READ>
    2db4:	b280      	uxth	r0, r0
    2db6:	1824      	adds	r4, r4, r0
    2db8:	b2a4      	uxth	r4, r4
      if (val1 != 0)
    2dba:	2c00      	cmp	r4, #0
    2dbc:	d0e4      	beq.n	2d88 <getSn_RX_RSR+0xc>
        val = WIZCHIP_READ(Sn_RX_RSR(sn));
    2dbe:	0030      	movs	r0, r6
    2dc0:	f7ff fecc 	bl	2b5c <WIZCHIP_READ>
    2dc4:	b280      	uxth	r0, r0
        val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(Sn_RX_RSR(sn),1));
    2dc6:	0200      	lsls	r0, r0, #8
    2dc8:	b285      	uxth	r5, r0
    2dca:	4640      	mov	r0, r8
    2dcc:	f7ff fec6 	bl	2b5c <WIZCHIP_READ>
    2dd0:	b280      	uxth	r0, r0
    2dd2:	182d      	adds	r5, r5, r0
    2dd4:	b2ad      	uxth	r5, r5
    2dd6:	e7d7      	b.n	2d88 <getSn_RX_RSR+0xc>
   return val;
}
    2dd8:	0028      	movs	r0, r5
    2dda:	bc04      	pop	{r2}
    2ddc:	4690      	mov	r8, r2
    2dde:	bdf0      	pop	{r4, r5, r6, r7, pc}

00002de0 <wiz_send_data>:

void wiz_send_data(uint8_t sn, uint8_t *wizdata, uint16_t len)
{
    2de0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2de2:	b083      	sub	sp, #12
    2de4:	9100      	str	r1, [sp, #0]
    2de6:	1e14      	subs	r4, r2, #0
   uint16_t ptr = 0;
   uint32_t addrsel = 0;

   if(len == 0)  return;
    2de8:	d101      	bne.n	2dee <wiz_send_data+0xe>
   //
   WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
   
   ptr += len;
   setSn_TX_WR(sn,ptr);
}
    2dea:	b003      	add	sp, #12
    2dec:	bdf0      	pop	{r4, r5, r6, r7, pc}
   ptr = getSn_TX_WR(sn);
    2dee:	0086      	lsls	r6, r0, #2
    2df0:	1c75      	adds	r5, r6, #1
    2df2:	00ed      	lsls	r5, r5, #3
    2df4:	2390      	movs	r3, #144	; 0x90
    2df6:	019b      	lsls	r3, r3, #6
    2df8:	469c      	mov	ip, r3
    2dfa:	44ac      	add	ip, r5
    2dfc:	4663      	mov	r3, ip
    2dfe:	9301      	str	r3, [sp, #4]
    2e00:	4660      	mov	r0, ip
    2e02:	f7ff feab 	bl	2b5c <WIZCHIP_READ>
    2e06:	b280      	uxth	r0, r0
    2e08:	0200      	lsls	r0, r0, #8
    2e0a:	b287      	uxth	r7, r0
    2e0c:	2294      	movs	r2, #148	; 0x94
    2e0e:	0192      	lsls	r2, r2, #6
    2e10:	4694      	mov	ip, r2
    2e12:	4465      	add	r5, ip
    2e14:	0028      	movs	r0, r5
    2e16:	f7ff fea1 	bl	2b5c <WIZCHIP_READ>
    2e1a:	b280      	uxth	r0, r0
    2e1c:	1838      	adds	r0, r7, r0
    2e1e:	b287      	uxth	r7, r0
   addrsel = ((uint32_t)ptr << 8) + (WIZCHIP_TXBUF_BLOCK(sn) << 3);
    2e20:	023b      	lsls	r3, r7, #8
    2e22:	1cb0      	adds	r0, r6, #2
    2e24:	00c0      	lsls	r0, r0, #3
    2e26:	1818      	adds	r0, r3, r0
   WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
    2e28:	0022      	movs	r2, r4
    2e2a:	9900      	ldr	r1, [sp, #0]
    2e2c:	f7ff ff38 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   ptr += len;
    2e30:	19e4      	adds	r4, r4, r7
    2e32:	b2a4      	uxth	r4, r4
   setSn_TX_WR(sn,ptr);
    2e34:	0a21      	lsrs	r1, r4, #8
    2e36:	9801      	ldr	r0, [sp, #4]
    2e38:	f7ff fec2 	bl	2bc0 <WIZCHIP_WRITE>
    2e3c:	b2e1      	uxtb	r1, r4
    2e3e:	0028      	movs	r0, r5
    2e40:	f7ff febe 	bl	2bc0 <WIZCHIP_WRITE>
    2e44:	e7d1      	b.n	2dea <wiz_send_data+0xa>

00002e46 <wiz_recv_data>:

void wiz_recv_data(uint8_t sn, uint8_t *wizdata, uint16_t len)
{
    2e46:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e48:	b083      	sub	sp, #12
    2e4a:	9100      	str	r1, [sp, #0]
    2e4c:	1e14      	subs	r4, r2, #0
   uint16_t ptr = 0;
   uint32_t addrsel = 0;
   
   if(len == 0) return;
    2e4e:	d101      	bne.n	2e54 <wiz_recv_data+0xe>
   //
   WIZCHIP_READ_BUF(addrsel, wizdata, len);
   ptr += len;
   
   setSn_RX_RD(sn,ptr);
}
    2e50:	b003      	add	sp, #12
    2e52:	bdf0      	pop	{r4, r5, r6, r7, pc}
   ptr = getSn_RX_RD(sn);
    2e54:	0086      	lsls	r6, r0, #2
    2e56:	1c75      	adds	r5, r6, #1
    2e58:	00ed      	lsls	r5, r5, #3
    2e5a:	23a0      	movs	r3, #160	; 0xa0
    2e5c:	019b      	lsls	r3, r3, #6
    2e5e:	469c      	mov	ip, r3
    2e60:	44ac      	add	ip, r5
    2e62:	4663      	mov	r3, ip
    2e64:	9301      	str	r3, [sp, #4]
    2e66:	4660      	mov	r0, ip
    2e68:	f7ff fe78 	bl	2b5c <WIZCHIP_READ>
    2e6c:	b280      	uxth	r0, r0
    2e6e:	0200      	lsls	r0, r0, #8
    2e70:	b287      	uxth	r7, r0
    2e72:	22a4      	movs	r2, #164	; 0xa4
    2e74:	0192      	lsls	r2, r2, #6
    2e76:	4694      	mov	ip, r2
    2e78:	4465      	add	r5, ip
    2e7a:	0028      	movs	r0, r5
    2e7c:	f7ff fe6e 	bl	2b5c <WIZCHIP_READ>
    2e80:	b280      	uxth	r0, r0
    2e82:	1838      	adds	r0, r7, r0
    2e84:	b287      	uxth	r7, r0
   addrsel = ((uint32_t)ptr << 8) + (WIZCHIP_RXBUF_BLOCK(sn) << 3);
    2e86:	023b      	lsls	r3, r7, #8
    2e88:	1cf0      	adds	r0, r6, #3
    2e8a:	00c0      	lsls	r0, r0, #3
    2e8c:	1818      	adds	r0, r3, r0
   WIZCHIP_READ_BUF(addrsel, wizdata, len);
    2e8e:	0022      	movs	r2, r4
    2e90:	9900      	ldr	r1, [sp, #0]
    2e92:	f7ff fec5 	bl	2c20 <WIZCHIP_READ_BUF>
   ptr += len;
    2e96:	19e4      	adds	r4, r4, r7
    2e98:	b2a4      	uxth	r4, r4
   setSn_RX_RD(sn,ptr);
    2e9a:	0a21      	lsrs	r1, r4, #8
    2e9c:	9801      	ldr	r0, [sp, #4]
    2e9e:	f7ff fe8f 	bl	2bc0 <WIZCHIP_WRITE>
    2ea2:	b2e1      	uxtb	r1, r4
    2ea4:	0028      	movs	r0, r5
    2ea6:	f7ff fe8b 	bl	2bc0 <WIZCHIP_WRITE>
    2eaa:	e7d1      	b.n	2e50 <wiz_recv_data+0xa>

00002eac <wiz_recv_ignore>:


void wiz_recv_ignore(uint8_t sn, uint16_t len)
{
    2eac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2eae:	000c      	movs	r4, r1
   uint16_t ptr = 0;

   ptr = getSn_RX_RD(sn);
    2eb0:	0087      	lsls	r7, r0, #2
    2eb2:	3701      	adds	r7, #1
    2eb4:	00ff      	lsls	r7, r7, #3
    2eb6:	23a0      	movs	r3, #160	; 0xa0
    2eb8:	019b      	lsls	r3, r3, #6
    2eba:	18fe      	adds	r6, r7, r3
    2ebc:	0030      	movs	r0, r6
    2ebe:	f7ff fe4d 	bl	2b5c <WIZCHIP_READ>
    2ec2:	b280      	uxth	r0, r0
    2ec4:	0200      	lsls	r0, r0, #8
    2ec6:	b285      	uxth	r5, r0
    2ec8:	23a4      	movs	r3, #164	; 0xa4
    2eca:	019b      	lsls	r3, r3, #6
    2ecc:	469c      	mov	ip, r3
    2ece:	4467      	add	r7, ip
    2ed0:	0038      	movs	r0, r7
    2ed2:	f7ff fe43 	bl	2b5c <WIZCHIP_READ>
    2ed6:	b280      	uxth	r0, r0
    2ed8:	182d      	adds	r5, r5, r0
    2eda:	b2ad      	uxth	r5, r5
   ptr += len;
    2edc:	192c      	adds	r4, r5, r4
    2ede:	b2a4      	uxth	r4, r4
   setSn_RX_RD(sn,ptr);
    2ee0:	0a21      	lsrs	r1, r4, #8
    2ee2:	0030      	movs	r0, r6
    2ee4:	f7ff fe6c 	bl	2bc0 <WIZCHIP_WRITE>
    2ee8:	b2e1      	uxtb	r1, r4
    2eea:	0038      	movs	r0, r7
    2eec:	f7ff fe68 	bl	2bc0 <WIZCHIP_WRITE>
}
    2ef0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002ef2 <wizchip_cris_enter>:
 * @brief Default function to enable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_enter(void)           {};
void 	  wizchip_cris_enter(void)           {}
    2ef2:	4770      	bx	lr

00002ef4 <wizchip_cris_exit>:
 * @brief Default function to disable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_exit(void)          {};
void 	  wizchip_cris_exit(void)          {}
    2ef4:	4770      	bx	lr

00002ef6 <wizchip_cs_select>:
 * @brief Default function to select chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_select(void)            {};
void 	wizchip_cs_select(void)            {}
    2ef6:	4770      	bx	lr

00002ef8 <wizchip_cs_deselect>:
 * @brief Default function to deselect chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_deselect(void)          {};
void 	wizchip_cs_deselect(void)          {}
    2ef8:	4770      	bx	lr

00002efa <wizchip_bus_readdata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
 //M20150601 : Rename the function for integrating with W5300
//uint8_t wizchip_bus_readbyte(uint32_t AddrSel) { return * ((volatile uint8_t *)((ptrdiff_t) AddrSel)); }
iodata_t wizchip_bus_readdata(uint32_t AddrSel) { return * ((volatile iodata_t *)((ptrdiff_t) AddrSel)); }
    2efa:	7800      	ldrb	r0, [r0, #0]
    2efc:	b2c0      	uxtb	r0, r0
    2efe:	4770      	bx	lr

00002f00 <wizchip_bus_writedata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//M20150601 : Rename the function for integrating with W5300
//void 	wizchip_bus_writebyte(uint32_t AddrSel, uint8_t wb)  { *((volatile uint8_t*)((ptrdiff_t)AddrSel)) = wb; }
void 	wizchip_bus_writedata(uint32_t AddrSel, iodata_t wb)  { *((volatile iodata_t*)((ptrdiff_t)AddrSel)) = wb; }
    2f00:	7001      	strb	r1, [r0, #0]
    2f02:	4770      	bx	lr

00002f04 <wizchip_spi_readbyte>:
 * @brief Default function to read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//uint8_t wizchip_spi_readbyte(void)        {return 0;};
uint8_t wizchip_spi_readbyte(void)        {return 0;}
    2f04:	2000      	movs	r0, #0
    2f06:	4770      	bx	lr

00002f08 <wizchip_spi_writebyte>:
 * @brief Default function to write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writebyte(uint8_t wb) {};
void 	wizchip_spi_writebyte(uint8_t wb) {}
    2f08:	4770      	bx	lr

00002f0a <wizchip_spi_readburst>:
 * @brief Default function to burst read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_readburst(uint8_t* pBuf, uint16_t len) 	{}; 
void 	wizchip_spi_readburst(uint8_t* pBuf, uint16_t len) 	{}
    2f0a:	4770      	bx	lr

00002f0c <wizchip_spi_writeburst>:
 * @brief Default function to burst write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writeburst(uint8_t* pBuf, uint16_t len) {};
void 	wizchip_spi_writeburst(uint8_t* pBuf, uint16_t len) {}
    2f0c:	4770      	bx	lr
	...

00002f10 <reg_wizchip_cs_cbfunc>:
   }
}

void reg_wizchip_cs_cbfunc(void(*cs_sel)(void), void(*cs_desel)(void))
{
   if(!cs_sel || !cs_desel)
    2f10:	2800      	cmp	r0, #0
    2f12:	d005      	beq.n	2f20 <reg_wizchip_cs_cbfunc+0x10>
    2f14:	2900      	cmp	r1, #0
    2f16:	d003      	beq.n	2f20 <reg_wizchip_cs_cbfunc+0x10>
      WIZCHIP.CS._select   = wizchip_cs_select;
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
   }
   else
   {
      WIZCHIP.CS._select   = cs_sel;
    2f18:	4b04      	ldr	r3, [pc, #16]	; (2f2c <reg_wizchip_cs_cbfunc+0x1c>)
    2f1a:	6158      	str	r0, [r3, #20]
      WIZCHIP.CS._deselect = cs_desel;
    2f1c:	6199      	str	r1, [r3, #24]
   }
}
    2f1e:	4770      	bx	lr
      WIZCHIP.CS._select   = wizchip_cs_select;
    2f20:	4b02      	ldr	r3, [pc, #8]	; (2f2c <reg_wizchip_cs_cbfunc+0x1c>)
    2f22:	4a03      	ldr	r2, [pc, #12]	; (2f30 <reg_wizchip_cs_cbfunc+0x20>)
    2f24:	615a      	str	r2, [r3, #20]
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
    2f26:	4a03      	ldr	r2, [pc, #12]	; (2f34 <reg_wizchip_cs_cbfunc+0x24>)
    2f28:	619a      	str	r2, [r3, #24]
    2f2a:	e7f8      	b.n	2f1e <reg_wizchip_cs_cbfunc+0xe>
    2f2c:	2000002c 	.word	0x2000002c
    2f30:	00002ef7 	.word	0x00002ef7
    2f34:	00002ef9 	.word	0x00002ef9

00002f38 <reg_wizchip_spi_cbfunc>:
   }
}

void reg_wizchip_spi_cbfunc(uint8_t (*spi_rb)(void), void (*spi_wb)(uint8_t wb))
{
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
    2f38:	4b08      	ldr	r3, [pc, #32]	; (2f5c <reg_wizchip_spi_cbfunc+0x24>)
    2f3a:	881b      	ldrh	r3, [r3, #0]
    2f3c:	059b      	lsls	r3, r3, #22
    2f3e:	d5fb      	bpl.n	2f38 <reg_wizchip_spi_cbfunc>
   
   if(!spi_rb || !spi_wb)
    2f40:	2800      	cmp	r0, #0
    2f42:	d005      	beq.n	2f50 <reg_wizchip_spi_cbfunc+0x18>
    2f44:	2900      	cmp	r1, #0
    2f46:	d003      	beq.n	2f50 <reg_wizchip_spi_cbfunc+0x18>
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
   }
   else
   {
      WIZCHIP.IF.SPI._read_byte   = spi_rb;
    2f48:	4b04      	ldr	r3, [pc, #16]	; (2f5c <reg_wizchip_spi_cbfunc+0x24>)
    2f4a:	61d8      	str	r0, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = spi_wb;
    2f4c:	6219      	str	r1, [r3, #32]
   }
}
    2f4e:	4770      	bx	lr
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
    2f50:	4b02      	ldr	r3, [pc, #8]	; (2f5c <reg_wizchip_spi_cbfunc+0x24>)
    2f52:	4a03      	ldr	r2, [pc, #12]	; (2f60 <reg_wizchip_spi_cbfunc+0x28>)
    2f54:	61da      	str	r2, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
    2f56:	4a03      	ldr	r2, [pc, #12]	; (2f64 <reg_wizchip_spi_cbfunc+0x2c>)
    2f58:	621a      	str	r2, [r3, #32]
    2f5a:	e7f8      	b.n	2f4e <reg_wizchip_spi_cbfunc+0x16>
    2f5c:	2000002c 	.word	0x2000002c
    2f60:	00002f05 	.word	0x00002f05
    2f64:	00002f09 	.word	0x00002f09

00002f68 <reg_wizchip_spiburst_cbfunc>:

// 20140626 Eric Added for SPI burst operations
void reg_wizchip_spiburst_cbfunc(void (*spi_rb)(uint8_t* pBuf, uint16_t len), void (*spi_wb)(uint8_t* pBuf, uint16_t len))
{
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
    2f68:	4b08      	ldr	r3, [pc, #32]	; (2f8c <reg_wizchip_spiburst_cbfunc+0x24>)
    2f6a:	881b      	ldrh	r3, [r3, #0]
    2f6c:	059b      	lsls	r3, r3, #22
    2f6e:	d5fb      	bpl.n	2f68 <reg_wizchip_spiburst_cbfunc>

   if(!spi_rb || !spi_wb)
    2f70:	2800      	cmp	r0, #0
    2f72:	d005      	beq.n	2f80 <reg_wizchip_spiburst_cbfunc+0x18>
    2f74:	2900      	cmp	r1, #0
    2f76:	d003      	beq.n	2f80 <reg_wizchip_spiburst_cbfunc+0x18>
      WIZCHIP.IF.SPI._read_burst   = wizchip_spi_readburst;
      WIZCHIP.IF.SPI._write_burst  = wizchip_spi_writeburst;
   }
   else
   {
      WIZCHIP.IF.SPI._read_burst   = spi_rb;
    2f78:	4b04      	ldr	r3, [pc, #16]	; (2f8c <reg_wizchip_spiburst_cbfunc+0x24>)
    2f7a:	6258      	str	r0, [r3, #36]	; 0x24
      WIZCHIP.IF.SPI._write_burst  = spi_wb;
    2f7c:	6299      	str	r1, [r3, #40]	; 0x28
   }
}
    2f7e:	4770      	bx	lr
      WIZCHIP.IF.SPI._read_burst   = wizchip_spi_readburst;
    2f80:	4b02      	ldr	r3, [pc, #8]	; (2f8c <reg_wizchip_spiburst_cbfunc+0x24>)
    2f82:	4a03      	ldr	r2, [pc, #12]	; (2f90 <reg_wizchip_spiburst_cbfunc+0x28>)
    2f84:	625a      	str	r2, [r3, #36]	; 0x24
      WIZCHIP.IF.SPI._write_burst  = wizchip_spi_writeburst;
    2f86:	4a03      	ldr	r2, [pc, #12]	; (2f94 <reg_wizchip_spiburst_cbfunc+0x2c>)
    2f88:	629a      	str	r2, [r3, #40]	; 0x28
    2f8a:	e7f8      	b.n	2f7e <reg_wizchip_spiburst_cbfunc+0x16>
    2f8c:	2000002c 	.word	0x2000002c
    2f90:	00002f0b 	.word	0x00002f0b
    2f94:	00002f0d 	.word	0x00002f0d

00002f98 <wizchip_sw_reset>:
   }
   return 0;
}

void wizchip_sw_reset(void)
{
    2f98:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f9a:	b087      	sub	sp, #28
#if _WIZCHIP_IO_MODE_  == _WIZCHIP_IO_MODE_BUS_INDIR_
   uint16_t mr = (uint16_t)getMR();
   setMR(mr | MR_IND);
#endif
//
   getSHAR(mac);
    2f9c:	2790      	movs	r7, #144	; 0x90
    2f9e:	013f      	lsls	r7, r7, #4
    2fa0:	2206      	movs	r2, #6
    2fa2:	a901      	add	r1, sp, #4
    2fa4:	0038      	movs	r0, r7
    2fa6:	f7ff fe3b 	bl	2c20 <WIZCHIP_READ_BUF>
   getGAR(gw);  getSUBR(sn);  getSIPR(sip);
    2faa:	2680      	movs	r6, #128	; 0x80
    2fac:	0076      	lsls	r6, r6, #1
    2fae:	2204      	movs	r2, #4
    2fb0:	a905      	add	r1, sp, #20
    2fb2:	0030      	movs	r0, r6
    2fb4:	f7ff fe34 	bl	2c20 <WIZCHIP_READ_BUF>
    2fb8:	25a0      	movs	r5, #160	; 0xa0
    2fba:	00ed      	lsls	r5, r5, #3
    2fbc:	2204      	movs	r2, #4
    2fbe:	a904      	add	r1, sp, #16
    2fc0:	0028      	movs	r0, r5
    2fc2:	f7ff fe2d 	bl	2c20 <WIZCHIP_READ_BUF>
    2fc6:	24f0      	movs	r4, #240	; 0xf0
    2fc8:	0124      	lsls	r4, r4, #4
    2fca:	2204      	movs	r2, #4
    2fcc:	a903      	add	r1, sp, #12
    2fce:	0020      	movs	r0, r4
    2fd0:	f7ff fe26 	bl	2c20 <WIZCHIP_READ_BUF>
   setMR(MR_RST);
    2fd4:	2180      	movs	r1, #128	; 0x80
    2fd6:	2000      	movs	r0, #0
    2fd8:	f7ff fdf2 	bl	2bc0 <WIZCHIP_WRITE>
   getMR(); // for delay
    2fdc:	2000      	movs	r0, #0
    2fde:	f7ff fdbd 	bl	2b5c <WIZCHIP_READ>
//A2015051 : For indirect bus mode 
#if _WIZCHIP_IO_MODE_  == _WIZCHIP_IO_MODE_BUS_INDIR_
   setMR(mr | MR_IND);
#endif
//
   setSHAR(mac);
    2fe2:	2206      	movs	r2, #6
    2fe4:	a901      	add	r1, sp, #4
    2fe6:	0038      	movs	r0, r7
    2fe8:	f7ff fe5a 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   setGAR(gw);
    2fec:	2204      	movs	r2, #4
    2fee:	a905      	add	r1, sp, #20
    2ff0:	0030      	movs	r0, r6
    2ff2:	f7ff fe55 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   setSUBR(sn);
    2ff6:	2204      	movs	r2, #4
    2ff8:	a904      	add	r1, sp, #16
    2ffa:	0028      	movs	r0, r5
    2ffc:	f7ff fe50 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   setSIPR(sip);
    3000:	2204      	movs	r2, #4
    3002:	a903      	add	r1, sp, #12
    3004:	0020      	movs	r0, r4
    3006:	f7ff fe4b 	bl	2ca0 <WIZCHIP_WRITE_BUF>
}
    300a:	b007      	add	sp, #28
    300c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000300e <wizchip_init>:

int8_t wizchip_init(uint8_t* txsize, uint8_t* rxsize)
{
    300e:	b570      	push	{r4, r5, r6, lr}
    3010:	0006      	movs	r6, r0
    3012:	000d      	movs	r5, r1
   int8_t i;
#if _WIZCHIP_ < W5200
   int8_t j;
#endif
   int8_t tmp = 0;
   wizchip_sw_reset();
    3014:	f7ff ffc0 	bl	2f98 <wizchip_sw_reset>
   if(txsize)
    3018:	2e00      	cmp	r6, #0
    301a:	d01b      	beq.n	3054 <wizchip_init+0x46>
    301c:	2200      	movs	r2, #0
    301e:	2300      	movs	r3, #0
			tmp += txsize[i];
			if(tmp > 128) return -1;
		}
		if(tmp % 8) return -1;
#else
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    3020:	2b07      	cmp	r3, #7
    3022:	dc07      	bgt.n	3034 <wizchip_init+0x26>
		{
			tmp += txsize[i];
    3024:	5cf1      	ldrb	r1, [r6, r3]
    3026:	188a      	adds	r2, r1, r2
    3028:	b252      	sxtb	r2, r2

#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100 and w5100s
			if(tmp > 8) return -1;
#else
			if(tmp > 16) return -1;
    302a:	2a10      	cmp	r2, #16
    302c:	dc34      	bgt.n	3098 <wizchip_init+0x8a>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    302e:	3301      	adds	r3, #1
    3030:	b25b      	sxtb	r3, r3
    3032:	e7f5      	b.n	3020 <wizchip_init+0x12>
    3034:	2400      	movs	r4, #0
    3036:	e00b      	b.n	3050 <wizchip_init+0x42>
#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100
			j = 0;
			while((txsize[i] >> j != 1)&&(txsize[i] !=0)){j++;}
			setSn_TXBUF_SIZE(i, j);
#else
			setSn_TXBUF_SIZE(i, txsize[i]);
    3038:	00a0      	lsls	r0, r4, #2
    303a:	3001      	adds	r0, #1
    303c:	00c0      	lsls	r0, r0, #3
    303e:	23f8      	movs	r3, #248	; 0xf8
    3040:	015b      	lsls	r3, r3, #5
    3042:	469c      	mov	ip, r3
    3044:	4460      	add	r0, ip
    3046:	5d31      	ldrb	r1, [r6, r4]
    3048:	f7ff fdba 	bl	2bc0 <WIZCHIP_WRITE>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    304c:	3401      	adds	r4, #1
    304e:	b264      	sxtb	r4, r4
    3050:	2c07      	cmp	r4, #7
    3052:	ddf1      	ble.n	3038 <wizchip_init+0x2a>
#endif
		}	
   }

   if(rxsize)
    3054:	2d00      	cmp	r5, #0
    3056:	d00b      	beq.n	3070 <wizchip_init+0x62>
    3058:	2200      	movs	r2, #0
    305a:	2300      	movs	r3, #0
			tmp += rxsize[i];
			if(tmp > 128) return -1;
		}
		if(tmp % 8) return -1;
#else
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    305c:	2b07      	cmp	r3, #7
    305e:	dc09      	bgt.n	3074 <wizchip_init+0x66>
		{
			tmp += rxsize[i];
    3060:	5ce9      	ldrb	r1, [r5, r3]
    3062:	188a      	adds	r2, r1, r2
    3064:	b252      	sxtb	r2, r2
#if _WIZCHIP_ < W5200	//2016.10.28 peter add condition for w5100 and w5100s
			if(tmp > 8) return -1;
#else
			if(tmp > 16) return -1;
    3066:	2a10      	cmp	r2, #16
    3068:	dc19      	bgt.n	309e <wizchip_init+0x90>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    306a:	3301      	adds	r3, #1
    306c:	b25b      	sxtb	r3, r3
    306e:	e7f5      	b.n	305c <wizchip_init+0x4e>
#else
			setSn_RXBUF_SIZE(i, rxsize[i]);
#endif
		}
   }
   return 0;
    3070:	2000      	movs	r0, #0
    3072:	e010      	b.n	3096 <wizchip_init+0x88>
    3074:	2400      	movs	r4, #0
    3076:	e00b      	b.n	3090 <wizchip_init+0x82>
			setSn_RXBUF_SIZE(i, rxsize[i]);
    3078:	00a0      	lsls	r0, r4, #2
    307a:	3001      	adds	r0, #1
    307c:	00c0      	lsls	r0, r0, #3
    307e:	23f0      	movs	r3, #240	; 0xf0
    3080:	015b      	lsls	r3, r3, #5
    3082:	469c      	mov	ip, r3
    3084:	4460      	add	r0, ip
    3086:	5d29      	ldrb	r1, [r5, r4]
    3088:	f7ff fd9a 	bl	2bc0 <WIZCHIP_WRITE>
		for(i = 0 ; i < _WIZCHIP_SOCK_NUM_; i++)
    308c:	3401      	adds	r4, #1
    308e:	b264      	sxtb	r4, r4
    3090:	2c07      	cmp	r4, #7
    3092:	ddf1      	ble.n	3078 <wizchip_init+0x6a>
   return 0;
    3094:	2000      	movs	r0, #0
}
    3096:	bd70      	pop	{r4, r5, r6, pc}
			if(tmp > 16) return -1;
    3098:	2001      	movs	r0, #1
    309a:	4240      	negs	r0, r0
    309c:	e7fb      	b.n	3096 <wizchip_init+0x88>
			if(tmp > 16) return -1;
    309e:	2001      	movs	r0, #1
    30a0:	4240      	negs	r0, r0
    30a2:	e7f8      	b.n	3096 <wizchip_init+0x88>

000030a4 <wizphy_reset>:
}

#endif
#if _WIZCHIP_ == W5500
void wizphy_reset(void)
{
    30a4:	b510      	push	{r4, lr}
   uint8_t tmp = getPHYCFGR();
    30a6:	24b8      	movs	r4, #184	; 0xb8
    30a8:	01a4      	lsls	r4, r4, #6
    30aa:	0020      	movs	r0, r4
    30ac:	f7ff fd56 	bl	2b5c <WIZCHIP_READ>
   tmp &= PHYCFGR_RST;
    30b0:	217f      	movs	r1, #127	; 0x7f
    30b2:	4001      	ands	r1, r0
   setPHYCFGR(tmp);
    30b4:	0020      	movs	r0, r4
    30b6:	f7ff fd83 	bl	2bc0 <WIZCHIP_WRITE>
   tmp = getPHYCFGR();
    30ba:	0020      	movs	r0, r4
    30bc:	f7ff fd4e 	bl	2b5c <WIZCHIP_READ>
   tmp |= ~PHYCFGR_RST;
    30c0:	2180      	movs	r1, #128	; 0x80
    30c2:	4249      	negs	r1, r1
    30c4:	4301      	orrs	r1, r0
    30c6:	b2c9      	uxtb	r1, r1
   setPHYCFGR(tmp);
    30c8:	0020      	movs	r0, r4
    30ca:	f7ff fd79 	bl	2bc0 <WIZCHIP_WRITE>
}
    30ce:	bd10      	pop	{r4, pc}

000030d0 <wizchip_setnetinfo>:
}
#endif


void wizchip_setnetinfo(wiz_NetInfo* pnetinfo)
{
    30d0:	b510      	push	{r4, lr}
    30d2:	0004      	movs	r4, r0
   setSHAR(pnetinfo->mac);
    30d4:	2206      	movs	r2, #6
    30d6:	0001      	movs	r1, r0
    30d8:	2090      	movs	r0, #144	; 0x90
    30da:	0100      	lsls	r0, r0, #4
    30dc:	f7ff fde0 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   setGAR(pnetinfo->gw);
    30e0:	0021      	movs	r1, r4
    30e2:	310e      	adds	r1, #14
    30e4:	2204      	movs	r2, #4
    30e6:	2080      	movs	r0, #128	; 0x80
    30e8:	0040      	lsls	r0, r0, #1
    30ea:	f7ff fdd9 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   setSUBR(pnetinfo->sn);
    30ee:	0021      	movs	r1, r4
    30f0:	310a      	adds	r1, #10
    30f2:	2204      	movs	r2, #4
    30f4:	20a0      	movs	r0, #160	; 0xa0
    30f6:	00c0      	lsls	r0, r0, #3
    30f8:	f7ff fdd2 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   setSIPR(pnetinfo->ip);
    30fc:	1da1      	adds	r1, r4, #6
    30fe:	2204      	movs	r2, #4
    3100:	20f0      	movs	r0, #240	; 0xf0
    3102:	0100      	lsls	r0, r0, #4
    3104:	f7ff fdcc 	bl	2ca0 <WIZCHIP_WRITE_BUF>
   _DNS_[0] = pnetinfo->dns[0];
    3108:	7ca2      	ldrb	r2, [r4, #18]
    310a:	4b06      	ldr	r3, [pc, #24]	; (3124 <wizchip_setnetinfo+0x54>)
    310c:	701a      	strb	r2, [r3, #0]
   _DNS_[1] = pnetinfo->dns[1];
    310e:	7ce2      	ldrb	r2, [r4, #19]
    3110:	705a      	strb	r2, [r3, #1]
   _DNS_[2] = pnetinfo->dns[2];
    3112:	7d22      	ldrb	r2, [r4, #20]
    3114:	709a      	strb	r2, [r3, #2]
   _DNS_[3] = pnetinfo->dns[3];
    3116:	7d62      	ldrb	r2, [r4, #21]
    3118:	70da      	strb	r2, [r3, #3]
   _DHCP_   = pnetinfo->dhcp;
    311a:	7da2      	ldrb	r2, [r4, #22]
    311c:	4b02      	ldr	r3, [pc, #8]	; (3128 <wizchip_setnetinfo+0x58>)
    311e:	701a      	strb	r2, [r3, #0]
}
    3120:	bd10      	pop	{r4, pc}
    3122:	46c0      	nop			; (mov r8, r8)
    3124:	20000ab8 	.word	0x20000ab8
    3128:	20000ab4 	.word	0x20000ab4

0000312c <wizchip_getnetinfo>:

void wizchip_getnetinfo(wiz_NetInfo* pnetinfo)
{
    312c:	b510      	push	{r4, lr}
    312e:	0004      	movs	r4, r0
   getSHAR(pnetinfo->mac);
    3130:	2206      	movs	r2, #6
    3132:	0001      	movs	r1, r0
    3134:	2090      	movs	r0, #144	; 0x90
    3136:	0100      	lsls	r0, r0, #4
    3138:	f7ff fd72 	bl	2c20 <WIZCHIP_READ_BUF>
   getGAR(pnetinfo->gw);
    313c:	0021      	movs	r1, r4
    313e:	310e      	adds	r1, #14
    3140:	2204      	movs	r2, #4
    3142:	2080      	movs	r0, #128	; 0x80
    3144:	0040      	lsls	r0, r0, #1
    3146:	f7ff fd6b 	bl	2c20 <WIZCHIP_READ_BUF>
   getSUBR(pnetinfo->sn);
    314a:	0021      	movs	r1, r4
    314c:	310a      	adds	r1, #10
    314e:	2204      	movs	r2, #4
    3150:	20a0      	movs	r0, #160	; 0xa0
    3152:	00c0      	lsls	r0, r0, #3
    3154:	f7ff fd64 	bl	2c20 <WIZCHIP_READ_BUF>
   getSIPR(pnetinfo->ip);
    3158:	1da1      	adds	r1, r4, #6
    315a:	2204      	movs	r2, #4
    315c:	20f0      	movs	r0, #240	; 0xf0
    315e:	0100      	lsls	r0, r0, #4
    3160:	f7ff fd5e 	bl	2c20 <WIZCHIP_READ_BUF>
   pnetinfo->dns[0]= _DNS_[0];
    3164:	4b06      	ldr	r3, [pc, #24]	; (3180 <wizchip_getnetinfo+0x54>)
    3166:	781a      	ldrb	r2, [r3, #0]
    3168:	74a2      	strb	r2, [r4, #18]
   pnetinfo->dns[1]= _DNS_[1];
    316a:	785a      	ldrb	r2, [r3, #1]
    316c:	74e2      	strb	r2, [r4, #19]
   pnetinfo->dns[2]= _DNS_[2];
    316e:	789a      	ldrb	r2, [r3, #2]
    3170:	7522      	strb	r2, [r4, #20]
   pnetinfo->dns[3]= _DNS_[3];
    3172:	78db      	ldrb	r3, [r3, #3]
    3174:	7563      	strb	r3, [r4, #21]
   pnetinfo->dhcp  = _DHCP_;
    3176:	4b03      	ldr	r3, [pc, #12]	; (3184 <wizchip_getnetinfo+0x58>)
    3178:	781b      	ldrb	r3, [r3, #0]
    317a:	75a3      	strb	r3, [r4, #22]
}
    317c:	bd10      	pop	{r4, pc}
    317e:	46c0      	nop			; (mov r8, r8)
    3180:	20000ab8 	.word	0x20000ab8
    3184:	20000ab4 	.word	0x20000ab4

00003188 <wizchip_setnetmode>:

int8_t wizchip_setnetmode(netmode_type netmode)
{
    3188:	b510      	push	{r4, lr}
    318a:	0004      	movs	r4, r0
   uint8_t tmp = 0;
#if _WIZCHIP_ != W5500
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK)) return -1;
#else
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK | NM_FORCEARP)) return -1;
    318c:	233a      	movs	r3, #58	; 0x3a
    318e:	0002      	movs	r2, r0
    3190:	439a      	bics	r2, r3
    3192:	d109      	bne.n	31a8 <wizchip_setnetmode+0x20>
#endif      
   tmp = getMR();
    3194:	2000      	movs	r0, #0
    3196:	f7ff fce1 	bl	2b5c <WIZCHIP_READ>
   tmp |= (uint8_t)netmode;
    319a:	4304      	orrs	r4, r0
    319c:	b2e1      	uxtb	r1, r4
   setMR(tmp);
    319e:	2000      	movs	r0, #0
    31a0:	f7ff fd0e 	bl	2bc0 <WIZCHIP_WRITE>
   return 0;
    31a4:	2000      	movs	r0, #0
}
    31a6:	bd10      	pop	{r4, pc}
   if(netmode & ~(NM_WAKEONLAN | NM_PPPOE | NM_PINGBLOCK | NM_FORCEARP)) return -1;
    31a8:	2001      	movs	r0, #1
    31aa:	4240      	negs	r0, r0
    31ac:	e7fb      	b.n	31a6 <wizchip_setnetmode+0x1e>

000031ae <wizchip_getnetmode>:

netmode_type wizchip_getnetmode(void)
{
    31ae:	b510      	push	{r4, lr}
   return (netmode_type) getMR();
    31b0:	2000      	movs	r0, #0
    31b2:	f7ff fcd3 	bl	2b5c <WIZCHIP_READ>
}
    31b6:	bd10      	pop	{r4, pc}

000031b8 <wizchip_settimeout>:

void wizchip_settimeout(wiz_NetTimeout* nettime)
{
    31b8:	b510      	push	{r4, lr}
    31ba:	0004      	movs	r4, r0
   setRCR(nettime->retry_cnt);
    31bc:	7801      	ldrb	r1, [r0, #0]
    31be:	20d8      	movs	r0, #216	; 0xd8
    31c0:	0140      	lsls	r0, r0, #5
    31c2:	f7ff fcfd 	bl	2bc0 <WIZCHIP_WRITE>
   setRTR(nettime->time_100us);
    31c6:	8861      	ldrh	r1, [r4, #2]
    31c8:	0a09      	lsrs	r1, r1, #8
    31ca:	20c8      	movs	r0, #200	; 0xc8
    31cc:	0140      	lsls	r0, r0, #5
    31ce:	f7ff fcf7 	bl	2bc0 <WIZCHIP_WRITE>
    31d2:	78a1      	ldrb	r1, [r4, #2]
    31d4:	20d0      	movs	r0, #208	; 0xd0
    31d6:	0140      	lsls	r0, r0, #5
    31d8:	f7ff fcf2 	bl	2bc0 <WIZCHIP_WRITE>
}
    31dc:	bd10      	pop	{r4, pc}

000031de <wizchip_gettimeout>:

void wizchip_gettimeout(wiz_NetTimeout* nettime)
{
    31de:	b570      	push	{r4, r5, r6, lr}
    31e0:	0005      	movs	r5, r0
   nettime->retry_cnt = getRCR();
    31e2:	20d8      	movs	r0, #216	; 0xd8
    31e4:	0140      	lsls	r0, r0, #5
    31e6:	f7ff fcb9 	bl	2b5c <WIZCHIP_READ>
    31ea:	7028      	strb	r0, [r5, #0]
   nettime->time_100us = getRTR();
    31ec:	20c8      	movs	r0, #200	; 0xc8
    31ee:	0140      	lsls	r0, r0, #5
    31f0:	f7ff fcb4 	bl	2b5c <WIZCHIP_READ>
    31f4:	b280      	uxth	r0, r0
    31f6:	0200      	lsls	r0, r0, #8
    31f8:	b284      	uxth	r4, r0
    31fa:	20d0      	movs	r0, #208	; 0xd0
    31fc:	0140      	lsls	r0, r0, #5
    31fe:	f7ff fcad 	bl	2b5c <WIZCHIP_READ>
    3202:	b280      	uxth	r0, r0
    3204:	1824      	adds	r4, r4, r0
    3206:	806c      	strh	r4, [r5, #2]
}
    3208:	bd70      	pop	{r4, r5, r6, pc}
	...

0000320c <ctlnetwork>:
{
    320c:	b510      	push	{r4, lr}
    320e:	000c      	movs	r4, r1
   switch(cntype)
    3210:	2805      	cmp	r0, #5
    3212:	d820      	bhi.n	3256 <ctlnetwork+0x4a>
    3214:	0080      	lsls	r0, r0, #2
    3216:	4b11      	ldr	r3, [pc, #68]	; (325c <ctlnetwork+0x50>)
    3218:	581b      	ldr	r3, [r3, r0]
    321a:	469f      	mov	pc, r3
         wizchip_setnetinfo((wiz_NetInfo*)arg);
    321c:	0008      	movs	r0, r1
    321e:	f7ff ff57 	bl	30d0 <wizchip_setnetinfo>
   return 0;
    3222:	2000      	movs	r0, #0
}
    3224:	bd10      	pop	{r4, pc}
         wizchip_getnetinfo((wiz_NetInfo*)arg);
    3226:	0008      	movs	r0, r1
    3228:	f7ff ff80 	bl	312c <wizchip_getnetinfo>
   return 0;
    322c:	2000      	movs	r0, #0
         break;
    322e:	e7f9      	b.n	3224 <ctlnetwork+0x18>
         return wizchip_setnetmode(*(netmode_type*)arg);
    3230:	7808      	ldrb	r0, [r1, #0]
    3232:	f7ff ffa9 	bl	3188 <wizchip_setnetmode>
    3236:	e7f5      	b.n	3224 <ctlnetwork+0x18>
         *(netmode_type*)arg = wizchip_getnetmode();
    3238:	f7ff ffb9 	bl	31ae <wizchip_getnetmode>
    323c:	7020      	strb	r0, [r4, #0]
   return 0;
    323e:	2000      	movs	r0, #0
         break;
    3240:	e7f0      	b.n	3224 <ctlnetwork+0x18>
         wizchip_settimeout((wiz_NetTimeout*)arg);
    3242:	0008      	movs	r0, r1
    3244:	f7ff ffb8 	bl	31b8 <wizchip_settimeout>
   return 0;
    3248:	2000      	movs	r0, #0
         break;
    324a:	e7eb      	b.n	3224 <ctlnetwork+0x18>
         wizchip_gettimeout((wiz_NetTimeout*)arg);
    324c:	0008      	movs	r0, r1
    324e:	f7ff ffc6 	bl	31de <wizchip_gettimeout>
   return 0;
    3252:	2000      	movs	r0, #0
         break;
    3254:	e7e6      	b.n	3224 <ctlnetwork+0x18>
         return -1;
    3256:	2001      	movs	r0, #1
    3258:	4240      	negs	r0, r0
    325a:	e7e3      	b.n	3224 <ctlnetwork+0x18>
    325c:	0000d630 	.word	0x0000d630

00003260 <main>:
uint8_t rx_tx_buff_sizes[]={2,2,2,2,2,2,2,2};
	
char http_ansver[128]="\0";	

int main(void)
{
    3260:	b5f0      	push	{r4, r5, r6, r7, lr}
    3262:	b0db      	sub	sp, #364	; 0x16c
	/* Initializes MCU, drivers and middleware */
	//atmel_start_init();

	mcu_init();
    3264:	f7fe ff1a 	bl	209c <mcu_init>
	reg_wizchip_cs_cbfunc(W5500_Select, W5500_Unselect);
    3268:	49c9      	ldr	r1, [pc, #804]	; (3590 <main+0x330>)
    326a:	48ca      	ldr	r0, [pc, #808]	; (3594 <main+0x334>)
    326c:	f7ff fe50 	bl	2f10 <reg_wizchip_cs_cbfunc>
	reg_wizchip_spi_cbfunc(W5500_ReadByte, W5500_Write_byte);
    3270:	49c9      	ldr	r1, [pc, #804]	; (3598 <main+0x338>)
    3272:	48ca      	ldr	r0, [pc, #808]	; (359c <main+0x33c>)
    3274:	f7ff fe60 	bl	2f38 <reg_wizchip_spi_cbfunc>
	reg_wizchip_spiburst_cbfunc(W5500_ReadBuff, W5500_WriteBuff);
    3278:	49c9      	ldr	r1, [pc, #804]	; (35a0 <main+0x340>)
    327a:	48ca      	ldr	r0, [pc, #808]	; (35a4 <main+0x344>)
    327c:	f7ff fe74 	bl	2f68 <reg_wizchip_spiburst_cbfunc>
	wizphy_reset();
    3280:	f7ff ff10 	bl	30a4 <wizphy_reset>
	delay_ms(100);
    3284:	2064      	movs	r0, #100	; 0x64
    3286:	f7fc ff83 	bl	190 <delay_ms>
	wizchip_init(rx_tx_buff_sizes,rx_tx_buff_sizes);
    328a:	48c7      	ldr	r0, [pc, #796]	; (35a8 <main+0x348>)
    328c:	0001      	movs	r1, r0
    328e:	f7ff febe 	bl	300e <wizchip_init>
	wizchip_setnetinfo(&netInfo);
    3292:	4cc6      	ldr	r4, [pc, #792]	; (35ac <main+0x34c>)
    3294:	0020      	movs	r0, r4
    3296:	f7ff ff1b 	bl	30d0 <wizchip_setnetinfo>
	ctlnetwork(CN_SET_NETINFO, (void*) &netInfo);
    329a:	0021      	movs	r1, r4
    329c:	2000      	movs	r0, #0
    329e:	f7ff ffb5 	bl	320c <ctlnetwork>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    32a2:	23c0      	movs	r3, #192	; 0xc0
    32a4:	05db      	lsls	r3, r3, #23
    32a6:	2280      	movs	r2, #128	; 0x80
    32a8:	03d2      	lsls	r2, r2, #15
    32aa:	619a      	str	r2, [r3, #24]
    32ac:	2280      	movs	r2, #128	; 0x80
    32ae:	0052      	lsls	r2, r2, #1
    32b0:	619a      	str	r2, [r3, #24]
    32b2:	3201      	adds	r2, #1
    32b4:	32ff      	adds	r2, #255	; 0xff
    32b6:	619a      	str	r2, [r3, #24]
	
	gpio_set_pin_level(DLDA, true);
	gpio_set_pin_level(O2, true);
	gpio_set_pin_level(O3, true);
	
	setIMR(0xff);
    32b8:	21ff      	movs	r1, #255	; 0xff
    32ba:	20b0      	movs	r0, #176	; 0xb0
    32bc:	0140      	lsls	r0, r0, #5
    32be:	f7ff fc7f 	bl	2bc0 <WIZCHIP_WRITE>
	setSIMR(0xff);
    32c2:	21ff      	movs	r1, #255	; 0xff
    32c4:	20c0      	movs	r0, #192	; 0xc0
    32c6:	0140      	lsls	r0, r0, #5
    32c8:	f7ff fc7a 	bl	2bc0 <WIZCHIP_WRITE>
	setINTLEVEL(1);
    32cc:	2100      	movs	r1, #0
    32ce:	2098      	movs	r0, #152	; 0x98
    32d0:	0140      	lsls	r0, r0, #5
    32d2:	f7ff fc75 	bl	2bc0 <WIZCHIP_WRITE>
    32d6:	2101      	movs	r1, #1
    32d8:	20a0      	movs	r0, #160	; 0xa0
    32da:	0140      	lsls	r0, r0, #5
    32dc:	f7ff fc70 	bl	2bc0 <WIZCHIP_WRITE>
	for(uint8_t HTTP_SOCKET = 0; HTTP_SOCKET <= 7; HTTP_SOCKET++){
    32e0:	2400      	movs	r4, #0
    32e2:	2c07      	cmp	r4, #7
    32e4:	d937      	bls.n	3356 <main+0xf6>
		setSn_IMR(HTTP_SOCKET, 0x04);
		//setSn_IR(HTTP_SOCKET, 0x1F);
		//
		
	}
	buzer(10);
    32e6:	200a      	movs	r0, #10
    32e8:	f7fe fb1c 	bl	1924 <buzer>
 */
static inline uint32_t _gpio_get_level(const enum gpio_port port)
{
	uint32_t tmp;

	CRITICAL_SECTION_ENTER();
    32ec:	a816      	add	r0, sp, #88	; 0x58
    32ee:	f7fc ff41 	bl	174 <atomic_enter_critical>
	return ((Port *)hw)->Group[submodule_index].DIR.reg;
    32f2:	23c0      	movs	r3, #192	; 0xc0
    32f4:	05db      	lsls	r3, r3, #23
    32f6:	2280      	movs	r2, #128	; 0x80
    32f8:	589c      	ldr	r4, [r3, r2]
	return ((Port *)hw)->Group[submodule_index].IN.reg;
    32fa:	3220      	adds	r2, #32
    32fc:	49ac      	ldr	r1, [pc, #688]	; (35b0 <main+0x350>)
    32fe:	588a      	ldr	r2, [r1, r2]
	return ((Port *)hw)->Group[submodule_index].OUT.reg;
    3300:	2190      	movs	r1, #144	; 0x90
    3302:	585b      	ldr	r3, [r3, r1]

	uint32_t dir_tmp = hri_port_read_DIR_reg(PORT_IOBUS, port);

	tmp = hri_port_read_IN_reg(PORT, port) & ~dir_tmp;
	tmp |= hri_port_read_OUT_reg(PORT_IOBUS, port) & dir_tmp;
    3304:	4053      	eors	r3, r2
    3306:	401c      	ands	r4, r3
    3308:	4054      	eors	r4, r2

	CRITICAL_SECTION_LEAVE();
    330a:	a816      	add	r0, sp, #88	; 0x58
    330c:	f7fc ff39 	bl	182 <atomic_leave_critical>
	if (level) {
    3310:	05e3      	lsls	r3, r4, #23
    3312:	d42d      	bmi.n	3370 <main+0x110>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    3314:	2280      	movs	r2, #128	; 0x80
    3316:	03d2      	lsls	r2, r2, #15
    3318:	23c0      	movs	r3, #192	; 0xc0
    331a:	05db      	lsls	r3, r3, #23
    331c:	619a      	str	r2, [r3, #24]
	//delay_ms(250);
	
	
	
	
	if(getSn_SR(UdpRxSockNum) == SOCK_CLOSED){
    331e:	4ba5      	ldr	r3, [pc, #660]	; (35b4 <main+0x354>)
    3320:	7818      	ldrb	r0, [r3, #0]
    3322:	0080      	lsls	r0, r0, #2
    3324:	3001      	adds	r0, #1
    3326:	00c0      	lsls	r0, r0, #3
    3328:	23c0      	movs	r3, #192	; 0xc0
    332a:	009b      	lsls	r3, r3, #2
    332c:	469c      	mov	ip, r3
    332e:	4460      	add	r0, ip
    3330:	f7ff fc14 	bl	2b5c <WIZCHIP_READ>
    3334:	2800      	cmp	r0, #0
    3336:	d021      	beq.n	337c <main+0x11c>
		socket(UdpRxSockNum, Sn_MR_UDP, UdpRxPort, SF_MULTI_ENABLE);
		listen(UdpRxSockNum);
	}
	
	if(getSn_IR(UdpRxSockNum)){ // & Sn_CR_RECV
    3338:	4b9e      	ldr	r3, [pc, #632]	; (35b4 <main+0x354>)
    333a:	7818      	ldrb	r0, [r3, #0]
    333c:	0080      	lsls	r0, r0, #2
    333e:	3001      	adds	r0, #1
    3340:	00c0      	lsls	r0, r0, #3
    3342:	2380      	movs	r3, #128	; 0x80
    3344:	009b      	lsls	r3, r3, #2
    3346:	469c      	mov	ip, r3
    3348:	4460      	add	r0, ip
    334a:	f7ff fc07 	bl	2b5c <WIZCHIP_READ>
    334e:	06c3      	lsls	r3, r0, #27
    3350:	d120      	bne.n	3394 <main+0x134>
    3352:	2403      	movs	r4, #3
    3354:	e092      	b.n	347c <main+0x21c>
		setSn_IMR(HTTP_SOCKET, 0x04);
    3356:	00a0      	lsls	r0, r4, #2
    3358:	3001      	adds	r0, #1
    335a:	00c0      	lsls	r0, r0, #3
    335c:	23b0      	movs	r3, #176	; 0xb0
    335e:	019b      	lsls	r3, r3, #6
    3360:	469c      	mov	ip, r3
    3362:	4460      	add	r0, ip
    3364:	2104      	movs	r1, #4
    3366:	f7ff fc2b 	bl	2bc0 <WIZCHIP_WRITE>
	for(uint8_t HTTP_SOCKET = 0; HTTP_SOCKET <= 7; HTTP_SOCKET++){
    336a:	3401      	adds	r4, #1
    336c:	b2e4      	uxtb	r4, r4
    336e:	e7b8      	b.n	32e2 <main+0x82>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    3370:	2280      	movs	r2, #128	; 0x80
    3372:	03d2      	lsls	r2, r2, #15
    3374:	23c0      	movs	r3, #192	; 0xc0
    3376:	05db      	lsls	r3, r3, #23
    3378:	615a      	str	r2, [r3, #20]
    337a:	e7d0      	b.n	331e <main+0xbe>
		socket(UdpRxSockNum, Sn_MR_UDP, UdpRxPort, SF_MULTI_ENABLE);
    337c:	4b8e      	ldr	r3, [pc, #568]	; (35b8 <main+0x358>)
    337e:	881a      	ldrh	r2, [r3, #0]
    3380:	4c8c      	ldr	r4, [pc, #560]	; (35b4 <main+0x354>)
    3382:	7820      	ldrb	r0, [r4, #0]
    3384:	2380      	movs	r3, #128	; 0x80
    3386:	2102      	movs	r1, #2
    3388:	f7fe fee2 	bl	2150 <socket>
		listen(UdpRxSockNum);
    338c:	7820      	ldrb	r0, [r4, #0]
    338e:	f7fe ff97 	bl	22c0 <listen>
    3392:	e7d1      	b.n	3338 <main+0xd8>
		uint16_t udp_size = getSn_RX_RSR(UdpRxSockNum);
    3394:	4b87      	ldr	r3, [pc, #540]	; (35b4 <main+0x354>)
    3396:	7818      	ldrb	r0, [r3, #0]
    3398:	f7ff fcf0 	bl	2d7c <getSn_RX_RSR>
    339c:	1e04      	subs	r4, r0, #0
		if (udp_size > 0) {
    339e:	d0d8      	beq.n	3352 <main+0xf2>
			uint8_t ip[4];
			uint16_t port;
			if (udp_size > TCP_RX_BUF) udp_size = TCP_RX_BUF;
    33a0:	4b86      	ldr	r3, [pc, #536]	; (35bc <main+0x35c>)
    33a2:	4298      	cmp	r0, r3
    33a4:	d900      	bls.n	33a8 <main+0x148>
    33a6:	b29c      	uxth	r4, r3
			memset(TCP_RX_BUF, 0, sizeof(TCP_RX_BUF));
    33a8:	2280      	movs	r2, #128	; 0x80
    33aa:	0112      	lsls	r2, r2, #4
    33ac:	2100      	movs	r1, #0
    33ae:	4883      	ldr	r0, [pc, #524]	; (35bc <main+0x35c>)
    33b0:	f002 f8d8 	bl	5564 <memset>
			uint16_t ret = recvfrom(UdpRxSockNum, (uint8_t*)TCP_RX_BUF, udp_size, ip, &port);
    33b4:	4e7f      	ldr	r6, [pc, #508]	; (35b4 <main+0x354>)
    33b6:	7830      	ldrb	r0, [r6, #0]
    33b8:	ab17      	add	r3, sp, #92	; 0x5c
    33ba:	9300      	str	r3, [sp, #0]
    33bc:	ab1a      	add	r3, sp, #104	; 0x68
    33be:	0022      	movs	r2, r4
    33c0:	497e      	ldr	r1, [pc, #504]	; (35bc <main+0x35c>)
    33c2:	f7ff f9cd 	bl	2760 <recvfrom>
			uint8_t result = 0;
			result = socket(UdpTxSockNum, Sn_MR_UDP, UdpTxPort, SF_IO_NONBLOCK);
    33c6:	4f7e      	ldr	r7, [pc, #504]	; (35c0 <main+0x360>)
    33c8:	883a      	ldrh	r2, [r7, #0]
    33ca:	4d7e      	ldr	r5, [pc, #504]	; (35c4 <main+0x364>)
    33cc:	7828      	ldrb	r0, [r5, #0]
    33ce:	2301      	movs	r3, #1
    33d0:	2102      	movs	r1, #2
    33d2:	f7fe febd 	bl	2150 <socket>
			result = sendto(UdpTxSockNum, TCP_RX_BUF, udp_size, ip, UdpTxPort);
    33d6:	7828      	ldrb	r0, [r5, #0]
    33d8:	883b      	ldrh	r3, [r7, #0]
    33da:	9300      	str	r3, [sp, #0]
    33dc:	ab1a      	add	r3, sp, #104	; 0x68
    33de:	0022      	movs	r2, r4
    33e0:	4976      	ldr	r1, [pc, #472]	; (35bc <main+0x35c>)
    33e2:	f7ff f903 	bl	25ec <sendto>
			setSn_IR(UdpRxSockNum, 0x1F);	
    33e6:	7830      	ldrb	r0, [r6, #0]
    33e8:	0080      	lsls	r0, r0, #2
    33ea:	3001      	adds	r0, #1
    33ec:	00c0      	lsls	r0, r0, #3
    33ee:	2380      	movs	r3, #128	; 0x80
    33f0:	009b      	lsls	r3, r3, #2
    33f2:	469c      	mov	ip, r3
    33f4:	4460      	add	r0, ip
    33f6:	211f      	movs	r1, #31
    33f8:	f7ff fbe2 	bl	2bc0 <WIZCHIP_WRITE>
    33fc:	e7a9      	b.n	3352 <main+0xf2>
				size_t total_length = strlen(psu_page);
				size_t sent_length = 0;

				while (sent_length < total_length) {
					size_t chunk_size = total_length - sent_length > 1024 ? 1024 : total_length - sent_length;
					send(HTTP_SOCKET, (uint8_t*)(psu_page + sent_length), chunk_size);
    33fe:	b2b2      	uxth	r2, r6
    3400:	4971      	ldr	r1, [pc, #452]	; (35c8 <main+0x368>)
    3402:	19c9      	adds	r1, r1, r7
    3404:	0020      	movs	r0, r4
    3406:	f7fe ffdb 	bl	23c0 <send>
					delay_ms(20);
    340a:	2014      	movs	r0, #20
    340c:	f7fc fec0 	bl	190 <delay_ms>
					sent_length += chunk_size;
    3410:	19bf      	adds	r7, r7, r6
				while (sent_length < total_length) {
    3412:	4b6e      	ldr	r3, [pc, #440]	; (35cc <main+0x36c>)
    3414:	429f      	cmp	r7, r3
    3416:	d81d      	bhi.n	3454 <main+0x1f4>
					size_t chunk_size = total_length - sent_length > 1024 ? 1024 : total_length - sent_length;
    3418:	4e6d      	ldr	r6, [pc, #436]	; (35d0 <main+0x370>)
    341a:	1bf6      	subs	r6, r6, r7
    341c:	2380      	movs	r3, #128	; 0x80
    341e:	00db      	lsls	r3, r3, #3
    3420:	429e      	cmp	r6, r3
    3422:	d9ec      	bls.n	33fe <main+0x19e>
    3424:	001e      	movs	r6, r3
    3426:	e7ea      	b.n	33fe <main+0x19e>
				}
				
				
				
				
				} else if (strstr((char*)TCP_RX_BUF, "GET /set_vals") != NULL) {
    3428:	496a      	ldr	r1, [pc, #424]	; (35d4 <main+0x374>)
    342a:	4864      	ldr	r0, [pc, #400]	; (35bc <main+0x35c>)
    342c:	f002 fb96 	bl	5b5c <strstr>
    3430:	2800      	cmp	r0, #0
    3432:	d055      	beq.n	34e0 <main+0x280>
				char *query_string = strstr((char*)TCP_RX_BUF, "GET /set_vals") + strlen("GET /set_vals?");
    3434:	300e      	adds	r0, #14
    3436:	0006      	movs	r6, r0
				buzer(10);
    3438:	200a      	movs	r0, #10
    343a:	f7fe fa73 	bl	1924 <buzer>
				sscanf(query_string, "amp=%f&volt=%f", &amp, &volt);
    343e:	4b66      	ldr	r3, [pc, #408]	; (35d8 <main+0x378>)
    3440:	4a66      	ldr	r2, [pc, #408]	; (35dc <main+0x37c>)
    3442:	4967      	ldr	r1, [pc, #412]	; (35e0 <main+0x380>)
    3444:	0030      	movs	r0, r6
    3446:	f002 f919 	bl	567c <sscanf>
				
				// Тут додайте код для встановлення значень ампер, вольт та ват
				send(HTTP_SOCKET, (uint8_t*)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\"success\":true}", 65);
    344a:	2241      	movs	r2, #65	; 0x41
    344c:	4965      	ldr	r1, [pc, #404]	; (35e4 <main+0x384>)
    344e:	0020      	movs	r0, r4
    3450:	f7fe ffb6 	bl	23c0 <send>

				send(HTTP_SOCKET, (uint8_t*)json_response, strlen(json_response));
				
				}

			disconnect(HTTP_SOCKET);
    3454:	0020      	movs	r0, r4
    3456:	f7fe ff6b 	bl	2330 <disconnect>
			close(HTTP_SOCKET);
    345a:	0020      	movs	r0, r4
    345c:	f7fe fe38 	bl	20d0 <close>
		}

		if (getSn_SR(HTTP_SOCKET) == SOCK_CLOSE_WAIT) {
    3460:	0028      	movs	r0, r5
    3462:	f7ff fb7b 	bl	2b5c <WIZCHIP_READ>
    3466:	281c      	cmp	r0, #28
    3468:	d100      	bne.n	346c <main+0x20c>
    346a:	e119      	b.n	36a0 <main+0x440>
			disconnect(HTTP_SOCKET);
		}

		if (getSn_SR(HTTP_SOCKET) == SOCK_CLOSED) {
    346c:	0028      	movs	r0, r5
    346e:	f7ff fb75 	bl	2b5c <WIZCHIP_READ>
    3472:	2800      	cmp	r0, #0
    3474:	d100      	bne.n	3478 <main+0x218>
    3476:	e117      	b.n	36a8 <main+0x448>
	for(uint8_t HTTP_SOCKET = 3; HTTP_SOCKET <= 7; HTTP_SOCKET++) {
    3478:	3401      	adds	r4, #1
    347a:	b2e4      	uxtb	r4, r4
    347c:	2c07      	cmp	r4, #7
    347e:	d900      	bls.n	3482 <main+0x222>
    3480:	e734      	b.n	32ec <main+0x8c>
		if (getSn_SR(HTTP_SOCKET) == SOCK_ESTABLISHED) {
    3482:	940c      	str	r4, [sp, #48]	; 0x30
    3484:	00a5      	lsls	r5, r4, #2
    3486:	3501      	adds	r5, #1
    3488:	00ed      	lsls	r5, r5, #3
    348a:	23c0      	movs	r3, #192	; 0xc0
    348c:	009b      	lsls	r3, r3, #2
    348e:	469c      	mov	ip, r3
    3490:	4465      	add	r5, ip
    3492:	0028      	movs	r0, r5
    3494:	f7ff fb62 	bl	2b5c <WIZCHIP_READ>
    3498:	2817      	cmp	r0, #23
    349a:	d1e1      	bne.n	3460 <main+0x200>
			getsockopt(HTTP_SOCKET, SO_DESTIP, rIP);
    349c:	aa15      	add	r2, sp, #84	; 0x54
    349e:	2104      	movs	r1, #4
    34a0:	0020      	movs	r0, r4
    34a2:	f7ff fa9b 	bl	29dc <getsockopt>
			uint16_t res_size = getSn_RX_RSR(HTTP_SOCKET);
    34a6:	0020      	movs	r0, r4
    34a8:	f7ff fc68 	bl	2d7c <getSn_RX_RSR>
    34ac:	0006      	movs	r6, r0
			if (res_size > sizeof(TCP_RX_BUF)) {
    34ae:	2380      	movs	r3, #128	; 0x80
    34b0:	011b      	lsls	r3, r3, #4
    34b2:	4298      	cmp	r0, r3
    34b4:	d900      	bls.n	34b8 <main+0x258>
				res_size = sizeof(TCP_RX_BUF);
    34b6:	001e      	movs	r6, r3
			memset(TCP_RX_BUF, 0, sizeof(TCP_RX_BUF));
    34b8:	4f40      	ldr	r7, [pc, #256]	; (35bc <main+0x35c>)
    34ba:	2280      	movs	r2, #128	; 0x80
    34bc:	0112      	lsls	r2, r2, #4
    34be:	2100      	movs	r1, #0
    34c0:	0038      	movs	r0, r7
    34c2:	f002 f84f 	bl	5564 <memset>
			recv(HTTP_SOCKET, (uint8_t*)TCP_RX_BUF, res_size);
    34c6:	0032      	movs	r2, r6
    34c8:	0039      	movs	r1, r7
    34ca:	0020      	movs	r0, r4
    34cc:	f7ff f814 	bl	24f8 <recv>
			if (strstr((char*)TCP_RX_BUF, "GET / ") != NULL) {
    34d0:	4945      	ldr	r1, [pc, #276]	; (35e8 <main+0x388>)
    34d2:	0038      	movs	r0, r7
    34d4:	f002 fb42 	bl	5b5c <strstr>
    34d8:	2800      	cmp	r0, #0
    34da:	d0a5      	beq.n	3428 <main+0x1c8>
    34dc:	2700      	movs	r7, #0
    34de:	e798      	b.n	3412 <main+0x1b2>
				} else if (strstr((char*)TCP_RX_BUF, "GET /control") != NULL) {
    34e0:	4942      	ldr	r1, [pc, #264]	; (35ec <main+0x38c>)
    34e2:	4836      	ldr	r0, [pc, #216]	; (35bc <main+0x35c>)
    34e4:	f002 fb3a 	bl	5b5c <strstr>
    34e8:	2800      	cmp	r0, #0
    34ea:	d100      	bne.n	34ee <main+0x28e>
    34ec:	e08c      	b.n	3608 <main+0x3a8>
				char *query_string = strstr((char*)TCP_RX_BUF, "GET /control") + strlen("GET /control?");
    34ee:	300d      	adds	r0, #13
				sscanf(query_string, "device=%[^&]&action=%s", device, action);
    34f0:	ab1a      	add	r3, sp, #104	; 0x68
    34f2:	aa17      	add	r2, sp, #92	; 0x5c
    34f4:	493e      	ldr	r1, [pc, #248]	; (35f0 <main+0x390>)
    34f6:	f002 f8c1 	bl	567c <sscanf>
				if (strcmp(device, "fan") == 0) {
    34fa:	493e      	ldr	r1, [pc, #248]	; (35f4 <main+0x394>)
    34fc:	a817      	add	r0, sp, #92	; 0x5c
    34fe:	f002 f955 	bl	57ac <strcmp>
    3502:	2800      	cmp	r0, #0
    3504:	d00b      	beq.n	351e <main+0x2be>
				} else if (strcmp(device, "psu") == 0) {
    3506:	493c      	ldr	r1, [pc, #240]	; (35f8 <main+0x398>)
    3508:	a817      	add	r0, sp, #92	; 0x5c
    350a:	f002 f94f 	bl	57ac <strcmp>
    350e:	2800      	cmp	r0, #0
    3510:	d026      	beq.n	3560 <main+0x300>
				send(HTTP_SOCKET, (uint8_t*)"HTTP/1.1 200 OK\r\nContent-Type: application/json\r\n\r\n{\"success\":true}", 65);
    3512:	2241      	movs	r2, #65	; 0x41
    3514:	4933      	ldr	r1, [pc, #204]	; (35e4 <main+0x384>)
    3516:	0020      	movs	r0, r4
    3518:	f7fe ff52 	bl	23c0 <send>
    351c:	e79a      	b.n	3454 <main+0x1f4>
					buzer(10);
    351e:	300a      	adds	r0, #10
    3520:	f7fe fa00 	bl	1924 <buzer>
					if (strcmp(action, "on") == 0) {
    3524:	4935      	ldr	r1, [pc, #212]	; (35fc <main+0x39c>)
    3526:	a81a      	add	r0, sp, #104	; 0x68
    3528:	f002 f940 	bl	57ac <strcmp>
    352c:	2800      	cmp	r0, #0
    352e:	d108      	bne.n	3542 <main+0x2e2>
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
    3530:	23c0      	movs	r3, #192	; 0xc0
    3532:	05db      	lsls	r3, r3, #23
    3534:	2280      	movs	r2, #128	; 0x80
    3536:	0052      	lsls	r2, r2, #1
    3538:	619a      	str	r2, [r3, #24]
    353a:	3201      	adds	r2, #1
    353c:	32ff      	adds	r2, #255	; 0xff
    353e:	619a      	str	r2, [r3, #24]
    3540:	e7e7      	b.n	3512 <main+0x2b2>
						} else if (strcmp(action, "off") == 0) {
    3542:	492f      	ldr	r1, [pc, #188]	; (3600 <main+0x3a0>)
    3544:	a81a      	add	r0, sp, #104	; 0x68
    3546:	f002 f931 	bl	57ac <strcmp>
    354a:	2800      	cmp	r0, #0
    354c:	d1e1      	bne.n	3512 <main+0x2b2>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
    354e:	23c0      	movs	r3, #192	; 0xc0
    3550:	05db      	lsls	r3, r3, #23
    3552:	2280      	movs	r2, #128	; 0x80
    3554:	0052      	lsls	r2, r2, #1
    3556:	615a      	str	r2, [r3, #20]
    3558:	3201      	adds	r2, #1
    355a:	32ff      	adds	r2, #255	; 0xff
    355c:	615a      	str	r2, [r3, #20]
    355e:	e7d8      	b.n	3512 <main+0x2b2>
					buzer(10);
    3560:	300a      	adds	r0, #10
    3562:	f7fe f9df 	bl	1924 <buzer>
					if (strcmp(action, "on") == 0) {
    3566:	4925      	ldr	r1, [pc, #148]	; (35fc <main+0x39c>)
    3568:	a81a      	add	r0, sp, #104	; 0x68
    356a:	f002 f91f 	bl	57ac <strcmp>
    356e:	2800      	cmp	r0, #0
    3570:	d103      	bne.n	357a <main+0x31a>
							outState = 1;
    3572:	2201      	movs	r2, #1
    3574:	4b23      	ldr	r3, [pc, #140]	; (3604 <main+0x3a4>)
    3576:	701a      	strb	r2, [r3, #0]
    3578:	e7cb      	b.n	3512 <main+0x2b2>
						} else if (strcmp(action, "off") == 0) {
    357a:	4921      	ldr	r1, [pc, #132]	; (3600 <main+0x3a0>)
    357c:	a81a      	add	r0, sp, #104	; 0x68
    357e:	f002 f915 	bl	57ac <strcmp>
    3582:	2800      	cmp	r0, #0
    3584:	d1c5      	bne.n	3512 <main+0x2b2>
							outState = 0;
    3586:	2200      	movs	r2, #0
    3588:	4b1e      	ldr	r3, [pc, #120]	; (3604 <main+0x3a4>)
    358a:	701a      	strb	r2, [r3, #0]
    358c:	e7c1      	b.n	3512 <main+0x2b2>
    358e:	46c0      	nop			; (mov r8, r8)
    3590:	00001d13 	.word	0x00001d13
    3594:	00001d09 	.word	0x00001d09
    3598:	00001d71 	.word	0x00001d71
    359c:	00001d4d 	.word	0x00001d4d
    35a0:	00001d35 	.word	0x00001d35
    35a4:	00001d1d 	.word	0x00001d1d
    35a8:	2000007c 	.word	0x2000007c
    35ac:	20000064 	.word	0x20000064
    35b0:	41004400 	.word	0x41004400
    35b4:	2000005a 	.word	0x2000005a
    35b8:	20000058 	.word	0x20000058
    35bc:	20000c38 	.word	0x20000c38
    35c0:	2000005c 	.word	0x2000005c
    35c4:	20000abc 	.word	0x20000abc
    35c8:	0000d780 	.word	0x0000d780
    35cc:	0000142f 	.word	0x0000142f
    35d0:	00001430 	.word	0x00001430
    35d4:	0000d650 	.word	0x0000d650
    35d8:	20000ac4 	.word	0x20000ac4
    35dc:	20000ac0 	.word	0x20000ac0
    35e0:	0000d660 	.word	0x0000d660
    35e4:	0000d670 	.word	0x0000d670
    35e8:	0000d648 	.word	0x0000d648
    35ec:	0000d6b4 	.word	0x0000d6b4
    35f0:	0000d6c4 	.word	0x0000d6c4
    35f4:	0000d6dc 	.word	0x0000d6dc
    35f8:	0000d6e8 	.word	0x0000d6e8
    35fc:	0000d6e0 	.word	0x0000d6e0
    3600:	0000d6e4 	.word	0x0000d6e4
    3604:	2000007b 	.word	0x2000007b
				} else if (strstr((char*)TCP_RX_BUF, "GET /get_vals") != NULL) {
    3608:	492e      	ldr	r1, [pc, #184]	; (36c4 <main+0x464>)
    360a:	482f      	ldr	r0, [pc, #188]	; (36c8 <main+0x468>)
    360c:	f002 faa6 	bl	5b5c <strstr>
    3610:	2800      	cmp	r0, #0
    3612:	d100      	bne.n	3616 <main+0x3b6>
    3614:	e71e      	b.n	3454 <main+0x1f4>
				float watt = ampDMM * voltDMM;
    3616:	4b2d      	ldr	r3, [pc, #180]	; (36cc <main+0x46c>)
    3618:	681e      	ldr	r6, [r3, #0]
    361a:	4b2d      	ldr	r3, [pc, #180]	; (36d0 <main+0x470>)
    361c:	681b      	ldr	r3, [r3, #0]
    361e:	930d      	str	r3, [sp, #52]	; 0x34
    3620:	1c19      	adds	r1, r3, #0
    3622:	1c30      	adds	r0, r6, #0
    3624:	f000 fb08 	bl	3c38 <__aeabi_fmul>
    3628:	1c07      	adds	r7, r0, #0
				int len = snprintf(json_response, sizeof(json_response),
    362a:	4b2a      	ldr	r3, [pc, #168]	; (36d4 <main+0x474>)
    362c:	6818      	ldr	r0, [r3, #0]
    362e:	f001 fd9b 	bl	5168 <__aeabi_f2d>
    3632:	900e      	str	r0, [sp, #56]	; 0x38
    3634:	910f      	str	r1, [sp, #60]	; 0x3c
    3636:	4b28      	ldr	r3, [pc, #160]	; (36d8 <main+0x478>)
    3638:	6818      	ldr	r0, [r3, #0]
    363a:	f001 fd95 	bl	5168 <__aeabi_f2d>
    363e:	9010      	str	r0, [sp, #64]	; 0x40
    3640:	9111      	str	r1, [sp, #68]	; 0x44
    3642:	1c38      	adds	r0, r7, #0
    3644:	f001 fd90 	bl	5168 <__aeabi_f2d>
    3648:	9012      	str	r0, [sp, #72]	; 0x48
    364a:	9113      	str	r1, [sp, #76]	; 0x4c
    364c:	1c30      	adds	r0, r6, #0
    364e:	f001 fd8b 	bl	5168 <__aeabi_f2d>
    3652:	0006      	movs	r6, r0
    3654:	000f      	movs	r7, r1
    3656:	980d      	ldr	r0, [sp, #52]	; 0x34
    3658:	f001 fd86 	bl	5168 <__aeabi_f2d>
    365c:	4b1f      	ldr	r3, [pc, #124]	; (36dc <main+0x47c>)
    365e:	781b      	ldrb	r3, [r3, #0]
    3660:	930a      	str	r3, [sp, #40]	; 0x28
    3662:	9008      	str	r0, [sp, #32]
    3664:	9109      	str	r1, [sp, #36]	; 0x24
    3666:	9606      	str	r6, [sp, #24]
    3668:	9707      	str	r7, [sp, #28]
    366a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    366c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    366e:	9204      	str	r2, [sp, #16]
    3670:	9305      	str	r3, [sp, #20]
    3672:	9a10      	ldr	r2, [sp, #64]	; 0x40
    3674:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3676:	9202      	str	r2, [sp, #8]
    3678:	9303      	str	r3, [sp, #12]
    367a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    367c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    367e:	9200      	str	r2, [sp, #0]
    3680:	9301      	str	r3, [sp, #4]
    3682:	4a17      	ldr	r2, [pc, #92]	; (36e0 <main+0x480>)
    3684:	2180      	movs	r1, #128	; 0x80
    3686:	0049      	lsls	r1, r1, #1
    3688:	a81a      	add	r0, sp, #104	; 0x68
    368a:	f001 ffb5 	bl	55f8 <snprintf>
				send(HTTP_SOCKET, (uint8_t*)json_response, strlen(json_response));
    368e:	a81a      	add	r0, sp, #104	; 0x68
    3690:	f002 f8d0 	bl	5834 <strlen>
    3694:	b282      	uxth	r2, r0
    3696:	a91a      	add	r1, sp, #104	; 0x68
    3698:	0020      	movs	r0, r4
    369a:	f7fe fe91 	bl	23c0 <send>
    369e:	e6d9      	b.n	3454 <main+0x1f4>
			disconnect(HTTP_SOCKET);
    36a0:	0020      	movs	r0, r4
    36a2:	f7fe fe45 	bl	2330 <disconnect>
    36a6:	e6e1      	b.n	346c <main+0x20c>
			socket(HTTP_SOCKET, Sn_MR_TCP, socketPort[HTTP_SOCKET], 0);
    36a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    36aa:	005b      	lsls	r3, r3, #1
    36ac:	4a0d      	ldr	r2, [pc, #52]	; (36e4 <main+0x484>)
    36ae:	5a9a      	ldrh	r2, [r3, r2]
    36b0:	2300      	movs	r3, #0
    36b2:	2101      	movs	r1, #1
    36b4:	0020      	movs	r0, r4
    36b6:	f7fe fd4b 	bl	2150 <socket>
			listen(HTTP_SOCKET);
    36ba:	0020      	movs	r0, r4
    36bc:	f7fe fe00 	bl	22c0 <listen>
    36c0:	e6da      	b.n	3478 <main+0x218>
    36c2:	46c0      	nop			; (mov r8, r8)
    36c4:	0000d6ec 	.word	0x0000d6ec
    36c8:	20000c38 	.word	0x20000c38
    36cc:	20000060 	.word	0x20000060
    36d0:	20000094 	.word	0x20000094
    36d4:	20000ac0 	.word	0x20000ac0
    36d8:	20000ac4 	.word	0x20000ac4
    36dc:	2000007b 	.word	0x2000007b
    36e0:	0000d6fc 	.word	0x0000d6fc
    36e4:	20000084 	.word	0x20000084

000036e8 <__udivsi3>:
    36e8:	2200      	movs	r2, #0
    36ea:	0843      	lsrs	r3, r0, #1
    36ec:	428b      	cmp	r3, r1
    36ee:	d374      	bcc.n	37da <__udivsi3+0xf2>
    36f0:	0903      	lsrs	r3, r0, #4
    36f2:	428b      	cmp	r3, r1
    36f4:	d35f      	bcc.n	37b6 <__udivsi3+0xce>
    36f6:	0a03      	lsrs	r3, r0, #8
    36f8:	428b      	cmp	r3, r1
    36fa:	d344      	bcc.n	3786 <__udivsi3+0x9e>
    36fc:	0b03      	lsrs	r3, r0, #12
    36fe:	428b      	cmp	r3, r1
    3700:	d328      	bcc.n	3754 <__udivsi3+0x6c>
    3702:	0c03      	lsrs	r3, r0, #16
    3704:	428b      	cmp	r3, r1
    3706:	d30d      	bcc.n	3724 <__udivsi3+0x3c>
    3708:	22ff      	movs	r2, #255	; 0xff
    370a:	0209      	lsls	r1, r1, #8
    370c:	ba12      	rev	r2, r2
    370e:	0c03      	lsrs	r3, r0, #16
    3710:	428b      	cmp	r3, r1
    3712:	d302      	bcc.n	371a <__udivsi3+0x32>
    3714:	1212      	asrs	r2, r2, #8
    3716:	0209      	lsls	r1, r1, #8
    3718:	d065      	beq.n	37e6 <__udivsi3+0xfe>
    371a:	0b03      	lsrs	r3, r0, #12
    371c:	428b      	cmp	r3, r1
    371e:	d319      	bcc.n	3754 <__udivsi3+0x6c>
    3720:	e000      	b.n	3724 <__udivsi3+0x3c>
    3722:	0a09      	lsrs	r1, r1, #8
    3724:	0bc3      	lsrs	r3, r0, #15
    3726:	428b      	cmp	r3, r1
    3728:	d301      	bcc.n	372e <__udivsi3+0x46>
    372a:	03cb      	lsls	r3, r1, #15
    372c:	1ac0      	subs	r0, r0, r3
    372e:	4152      	adcs	r2, r2
    3730:	0b83      	lsrs	r3, r0, #14
    3732:	428b      	cmp	r3, r1
    3734:	d301      	bcc.n	373a <__udivsi3+0x52>
    3736:	038b      	lsls	r3, r1, #14
    3738:	1ac0      	subs	r0, r0, r3
    373a:	4152      	adcs	r2, r2
    373c:	0b43      	lsrs	r3, r0, #13
    373e:	428b      	cmp	r3, r1
    3740:	d301      	bcc.n	3746 <__udivsi3+0x5e>
    3742:	034b      	lsls	r3, r1, #13
    3744:	1ac0      	subs	r0, r0, r3
    3746:	4152      	adcs	r2, r2
    3748:	0b03      	lsrs	r3, r0, #12
    374a:	428b      	cmp	r3, r1
    374c:	d301      	bcc.n	3752 <__udivsi3+0x6a>
    374e:	030b      	lsls	r3, r1, #12
    3750:	1ac0      	subs	r0, r0, r3
    3752:	4152      	adcs	r2, r2
    3754:	0ac3      	lsrs	r3, r0, #11
    3756:	428b      	cmp	r3, r1
    3758:	d301      	bcc.n	375e <__udivsi3+0x76>
    375a:	02cb      	lsls	r3, r1, #11
    375c:	1ac0      	subs	r0, r0, r3
    375e:	4152      	adcs	r2, r2
    3760:	0a83      	lsrs	r3, r0, #10
    3762:	428b      	cmp	r3, r1
    3764:	d301      	bcc.n	376a <__udivsi3+0x82>
    3766:	028b      	lsls	r3, r1, #10
    3768:	1ac0      	subs	r0, r0, r3
    376a:	4152      	adcs	r2, r2
    376c:	0a43      	lsrs	r3, r0, #9
    376e:	428b      	cmp	r3, r1
    3770:	d301      	bcc.n	3776 <__udivsi3+0x8e>
    3772:	024b      	lsls	r3, r1, #9
    3774:	1ac0      	subs	r0, r0, r3
    3776:	4152      	adcs	r2, r2
    3778:	0a03      	lsrs	r3, r0, #8
    377a:	428b      	cmp	r3, r1
    377c:	d301      	bcc.n	3782 <__udivsi3+0x9a>
    377e:	020b      	lsls	r3, r1, #8
    3780:	1ac0      	subs	r0, r0, r3
    3782:	4152      	adcs	r2, r2
    3784:	d2cd      	bcs.n	3722 <__udivsi3+0x3a>
    3786:	09c3      	lsrs	r3, r0, #7
    3788:	428b      	cmp	r3, r1
    378a:	d301      	bcc.n	3790 <__udivsi3+0xa8>
    378c:	01cb      	lsls	r3, r1, #7
    378e:	1ac0      	subs	r0, r0, r3
    3790:	4152      	adcs	r2, r2
    3792:	0983      	lsrs	r3, r0, #6
    3794:	428b      	cmp	r3, r1
    3796:	d301      	bcc.n	379c <__udivsi3+0xb4>
    3798:	018b      	lsls	r3, r1, #6
    379a:	1ac0      	subs	r0, r0, r3
    379c:	4152      	adcs	r2, r2
    379e:	0943      	lsrs	r3, r0, #5
    37a0:	428b      	cmp	r3, r1
    37a2:	d301      	bcc.n	37a8 <__udivsi3+0xc0>
    37a4:	014b      	lsls	r3, r1, #5
    37a6:	1ac0      	subs	r0, r0, r3
    37a8:	4152      	adcs	r2, r2
    37aa:	0903      	lsrs	r3, r0, #4
    37ac:	428b      	cmp	r3, r1
    37ae:	d301      	bcc.n	37b4 <__udivsi3+0xcc>
    37b0:	010b      	lsls	r3, r1, #4
    37b2:	1ac0      	subs	r0, r0, r3
    37b4:	4152      	adcs	r2, r2
    37b6:	08c3      	lsrs	r3, r0, #3
    37b8:	428b      	cmp	r3, r1
    37ba:	d301      	bcc.n	37c0 <__udivsi3+0xd8>
    37bc:	00cb      	lsls	r3, r1, #3
    37be:	1ac0      	subs	r0, r0, r3
    37c0:	4152      	adcs	r2, r2
    37c2:	0883      	lsrs	r3, r0, #2
    37c4:	428b      	cmp	r3, r1
    37c6:	d301      	bcc.n	37cc <__udivsi3+0xe4>
    37c8:	008b      	lsls	r3, r1, #2
    37ca:	1ac0      	subs	r0, r0, r3
    37cc:	4152      	adcs	r2, r2
    37ce:	0843      	lsrs	r3, r0, #1
    37d0:	428b      	cmp	r3, r1
    37d2:	d301      	bcc.n	37d8 <__udivsi3+0xf0>
    37d4:	004b      	lsls	r3, r1, #1
    37d6:	1ac0      	subs	r0, r0, r3
    37d8:	4152      	adcs	r2, r2
    37da:	1a41      	subs	r1, r0, r1
    37dc:	d200      	bcs.n	37e0 <__udivsi3+0xf8>
    37de:	4601      	mov	r1, r0
    37e0:	4152      	adcs	r2, r2
    37e2:	4610      	mov	r0, r2
    37e4:	4770      	bx	lr
    37e6:	e7ff      	b.n	37e8 <__udivsi3+0x100>
    37e8:	b501      	push	{r0, lr}
    37ea:	2000      	movs	r0, #0
    37ec:	f000 f8f0 	bl	39d0 <__aeabi_idiv0>
    37f0:	bd02      	pop	{r1, pc}
    37f2:	46c0      	nop			; (mov r8, r8)

000037f4 <__aeabi_uidivmod>:
    37f4:	2900      	cmp	r1, #0
    37f6:	d0f7      	beq.n	37e8 <__udivsi3+0x100>
    37f8:	e776      	b.n	36e8 <__udivsi3>
    37fa:	4770      	bx	lr

000037fc <__divsi3>:
    37fc:	4603      	mov	r3, r0
    37fe:	430b      	orrs	r3, r1
    3800:	d47f      	bmi.n	3902 <__divsi3+0x106>
    3802:	2200      	movs	r2, #0
    3804:	0843      	lsrs	r3, r0, #1
    3806:	428b      	cmp	r3, r1
    3808:	d374      	bcc.n	38f4 <__divsi3+0xf8>
    380a:	0903      	lsrs	r3, r0, #4
    380c:	428b      	cmp	r3, r1
    380e:	d35f      	bcc.n	38d0 <__divsi3+0xd4>
    3810:	0a03      	lsrs	r3, r0, #8
    3812:	428b      	cmp	r3, r1
    3814:	d344      	bcc.n	38a0 <__divsi3+0xa4>
    3816:	0b03      	lsrs	r3, r0, #12
    3818:	428b      	cmp	r3, r1
    381a:	d328      	bcc.n	386e <__divsi3+0x72>
    381c:	0c03      	lsrs	r3, r0, #16
    381e:	428b      	cmp	r3, r1
    3820:	d30d      	bcc.n	383e <__divsi3+0x42>
    3822:	22ff      	movs	r2, #255	; 0xff
    3824:	0209      	lsls	r1, r1, #8
    3826:	ba12      	rev	r2, r2
    3828:	0c03      	lsrs	r3, r0, #16
    382a:	428b      	cmp	r3, r1
    382c:	d302      	bcc.n	3834 <__divsi3+0x38>
    382e:	1212      	asrs	r2, r2, #8
    3830:	0209      	lsls	r1, r1, #8
    3832:	d065      	beq.n	3900 <__divsi3+0x104>
    3834:	0b03      	lsrs	r3, r0, #12
    3836:	428b      	cmp	r3, r1
    3838:	d319      	bcc.n	386e <__divsi3+0x72>
    383a:	e000      	b.n	383e <__divsi3+0x42>
    383c:	0a09      	lsrs	r1, r1, #8
    383e:	0bc3      	lsrs	r3, r0, #15
    3840:	428b      	cmp	r3, r1
    3842:	d301      	bcc.n	3848 <__divsi3+0x4c>
    3844:	03cb      	lsls	r3, r1, #15
    3846:	1ac0      	subs	r0, r0, r3
    3848:	4152      	adcs	r2, r2
    384a:	0b83      	lsrs	r3, r0, #14
    384c:	428b      	cmp	r3, r1
    384e:	d301      	bcc.n	3854 <__divsi3+0x58>
    3850:	038b      	lsls	r3, r1, #14
    3852:	1ac0      	subs	r0, r0, r3
    3854:	4152      	adcs	r2, r2
    3856:	0b43      	lsrs	r3, r0, #13
    3858:	428b      	cmp	r3, r1
    385a:	d301      	bcc.n	3860 <__divsi3+0x64>
    385c:	034b      	lsls	r3, r1, #13
    385e:	1ac0      	subs	r0, r0, r3
    3860:	4152      	adcs	r2, r2
    3862:	0b03      	lsrs	r3, r0, #12
    3864:	428b      	cmp	r3, r1
    3866:	d301      	bcc.n	386c <__divsi3+0x70>
    3868:	030b      	lsls	r3, r1, #12
    386a:	1ac0      	subs	r0, r0, r3
    386c:	4152      	adcs	r2, r2
    386e:	0ac3      	lsrs	r3, r0, #11
    3870:	428b      	cmp	r3, r1
    3872:	d301      	bcc.n	3878 <__divsi3+0x7c>
    3874:	02cb      	lsls	r3, r1, #11
    3876:	1ac0      	subs	r0, r0, r3
    3878:	4152      	adcs	r2, r2
    387a:	0a83      	lsrs	r3, r0, #10
    387c:	428b      	cmp	r3, r1
    387e:	d301      	bcc.n	3884 <__divsi3+0x88>
    3880:	028b      	lsls	r3, r1, #10
    3882:	1ac0      	subs	r0, r0, r3
    3884:	4152      	adcs	r2, r2
    3886:	0a43      	lsrs	r3, r0, #9
    3888:	428b      	cmp	r3, r1
    388a:	d301      	bcc.n	3890 <__divsi3+0x94>
    388c:	024b      	lsls	r3, r1, #9
    388e:	1ac0      	subs	r0, r0, r3
    3890:	4152      	adcs	r2, r2
    3892:	0a03      	lsrs	r3, r0, #8
    3894:	428b      	cmp	r3, r1
    3896:	d301      	bcc.n	389c <__divsi3+0xa0>
    3898:	020b      	lsls	r3, r1, #8
    389a:	1ac0      	subs	r0, r0, r3
    389c:	4152      	adcs	r2, r2
    389e:	d2cd      	bcs.n	383c <__divsi3+0x40>
    38a0:	09c3      	lsrs	r3, r0, #7
    38a2:	428b      	cmp	r3, r1
    38a4:	d301      	bcc.n	38aa <__divsi3+0xae>
    38a6:	01cb      	lsls	r3, r1, #7
    38a8:	1ac0      	subs	r0, r0, r3
    38aa:	4152      	adcs	r2, r2
    38ac:	0983      	lsrs	r3, r0, #6
    38ae:	428b      	cmp	r3, r1
    38b0:	d301      	bcc.n	38b6 <__divsi3+0xba>
    38b2:	018b      	lsls	r3, r1, #6
    38b4:	1ac0      	subs	r0, r0, r3
    38b6:	4152      	adcs	r2, r2
    38b8:	0943      	lsrs	r3, r0, #5
    38ba:	428b      	cmp	r3, r1
    38bc:	d301      	bcc.n	38c2 <__divsi3+0xc6>
    38be:	014b      	lsls	r3, r1, #5
    38c0:	1ac0      	subs	r0, r0, r3
    38c2:	4152      	adcs	r2, r2
    38c4:	0903      	lsrs	r3, r0, #4
    38c6:	428b      	cmp	r3, r1
    38c8:	d301      	bcc.n	38ce <__divsi3+0xd2>
    38ca:	010b      	lsls	r3, r1, #4
    38cc:	1ac0      	subs	r0, r0, r3
    38ce:	4152      	adcs	r2, r2
    38d0:	08c3      	lsrs	r3, r0, #3
    38d2:	428b      	cmp	r3, r1
    38d4:	d301      	bcc.n	38da <__divsi3+0xde>
    38d6:	00cb      	lsls	r3, r1, #3
    38d8:	1ac0      	subs	r0, r0, r3
    38da:	4152      	adcs	r2, r2
    38dc:	0883      	lsrs	r3, r0, #2
    38de:	428b      	cmp	r3, r1
    38e0:	d301      	bcc.n	38e6 <__divsi3+0xea>
    38e2:	008b      	lsls	r3, r1, #2
    38e4:	1ac0      	subs	r0, r0, r3
    38e6:	4152      	adcs	r2, r2
    38e8:	0843      	lsrs	r3, r0, #1
    38ea:	428b      	cmp	r3, r1
    38ec:	d301      	bcc.n	38f2 <__divsi3+0xf6>
    38ee:	004b      	lsls	r3, r1, #1
    38f0:	1ac0      	subs	r0, r0, r3
    38f2:	4152      	adcs	r2, r2
    38f4:	1a41      	subs	r1, r0, r1
    38f6:	d200      	bcs.n	38fa <__divsi3+0xfe>
    38f8:	4601      	mov	r1, r0
    38fa:	4152      	adcs	r2, r2
    38fc:	4610      	mov	r0, r2
    38fe:	4770      	bx	lr
    3900:	e05d      	b.n	39be <__divsi3+0x1c2>
    3902:	0fca      	lsrs	r2, r1, #31
    3904:	d000      	beq.n	3908 <__divsi3+0x10c>
    3906:	4249      	negs	r1, r1
    3908:	1003      	asrs	r3, r0, #32
    390a:	d300      	bcc.n	390e <__divsi3+0x112>
    390c:	4240      	negs	r0, r0
    390e:	4053      	eors	r3, r2
    3910:	2200      	movs	r2, #0
    3912:	469c      	mov	ip, r3
    3914:	0903      	lsrs	r3, r0, #4
    3916:	428b      	cmp	r3, r1
    3918:	d32d      	bcc.n	3976 <__divsi3+0x17a>
    391a:	0a03      	lsrs	r3, r0, #8
    391c:	428b      	cmp	r3, r1
    391e:	d312      	bcc.n	3946 <__divsi3+0x14a>
    3920:	22fc      	movs	r2, #252	; 0xfc
    3922:	0189      	lsls	r1, r1, #6
    3924:	ba12      	rev	r2, r2
    3926:	0a03      	lsrs	r3, r0, #8
    3928:	428b      	cmp	r3, r1
    392a:	d30c      	bcc.n	3946 <__divsi3+0x14a>
    392c:	0189      	lsls	r1, r1, #6
    392e:	1192      	asrs	r2, r2, #6
    3930:	428b      	cmp	r3, r1
    3932:	d308      	bcc.n	3946 <__divsi3+0x14a>
    3934:	0189      	lsls	r1, r1, #6
    3936:	1192      	asrs	r2, r2, #6
    3938:	428b      	cmp	r3, r1
    393a:	d304      	bcc.n	3946 <__divsi3+0x14a>
    393c:	0189      	lsls	r1, r1, #6
    393e:	d03a      	beq.n	39b6 <__divsi3+0x1ba>
    3940:	1192      	asrs	r2, r2, #6
    3942:	e000      	b.n	3946 <__divsi3+0x14a>
    3944:	0989      	lsrs	r1, r1, #6
    3946:	09c3      	lsrs	r3, r0, #7
    3948:	428b      	cmp	r3, r1
    394a:	d301      	bcc.n	3950 <__divsi3+0x154>
    394c:	01cb      	lsls	r3, r1, #7
    394e:	1ac0      	subs	r0, r0, r3
    3950:	4152      	adcs	r2, r2
    3952:	0983      	lsrs	r3, r0, #6
    3954:	428b      	cmp	r3, r1
    3956:	d301      	bcc.n	395c <__divsi3+0x160>
    3958:	018b      	lsls	r3, r1, #6
    395a:	1ac0      	subs	r0, r0, r3
    395c:	4152      	adcs	r2, r2
    395e:	0943      	lsrs	r3, r0, #5
    3960:	428b      	cmp	r3, r1
    3962:	d301      	bcc.n	3968 <__divsi3+0x16c>
    3964:	014b      	lsls	r3, r1, #5
    3966:	1ac0      	subs	r0, r0, r3
    3968:	4152      	adcs	r2, r2
    396a:	0903      	lsrs	r3, r0, #4
    396c:	428b      	cmp	r3, r1
    396e:	d301      	bcc.n	3974 <__divsi3+0x178>
    3970:	010b      	lsls	r3, r1, #4
    3972:	1ac0      	subs	r0, r0, r3
    3974:	4152      	adcs	r2, r2
    3976:	08c3      	lsrs	r3, r0, #3
    3978:	428b      	cmp	r3, r1
    397a:	d301      	bcc.n	3980 <__divsi3+0x184>
    397c:	00cb      	lsls	r3, r1, #3
    397e:	1ac0      	subs	r0, r0, r3
    3980:	4152      	adcs	r2, r2
    3982:	0883      	lsrs	r3, r0, #2
    3984:	428b      	cmp	r3, r1
    3986:	d301      	bcc.n	398c <__divsi3+0x190>
    3988:	008b      	lsls	r3, r1, #2
    398a:	1ac0      	subs	r0, r0, r3
    398c:	4152      	adcs	r2, r2
    398e:	d2d9      	bcs.n	3944 <__divsi3+0x148>
    3990:	0843      	lsrs	r3, r0, #1
    3992:	428b      	cmp	r3, r1
    3994:	d301      	bcc.n	399a <__divsi3+0x19e>
    3996:	004b      	lsls	r3, r1, #1
    3998:	1ac0      	subs	r0, r0, r3
    399a:	4152      	adcs	r2, r2
    399c:	1a41      	subs	r1, r0, r1
    399e:	d200      	bcs.n	39a2 <__divsi3+0x1a6>
    39a0:	4601      	mov	r1, r0
    39a2:	4663      	mov	r3, ip
    39a4:	4152      	adcs	r2, r2
    39a6:	105b      	asrs	r3, r3, #1
    39a8:	4610      	mov	r0, r2
    39aa:	d301      	bcc.n	39b0 <__divsi3+0x1b4>
    39ac:	4240      	negs	r0, r0
    39ae:	2b00      	cmp	r3, #0
    39b0:	d500      	bpl.n	39b4 <__divsi3+0x1b8>
    39b2:	4249      	negs	r1, r1
    39b4:	4770      	bx	lr
    39b6:	4663      	mov	r3, ip
    39b8:	105b      	asrs	r3, r3, #1
    39ba:	d300      	bcc.n	39be <__divsi3+0x1c2>
    39bc:	4240      	negs	r0, r0
    39be:	b501      	push	{r0, lr}
    39c0:	2000      	movs	r0, #0
    39c2:	f000 f805 	bl	39d0 <__aeabi_idiv0>
    39c6:	bd02      	pop	{r1, pc}

000039c8 <__aeabi_idivmod>:
    39c8:	2900      	cmp	r1, #0
    39ca:	d0f8      	beq.n	39be <__divsi3+0x1c2>
    39cc:	e716      	b.n	37fc <__divsi3>
    39ce:	4770      	bx	lr

000039d0 <__aeabi_idiv0>:
    39d0:	4770      	bx	lr
    39d2:	46c0      	nop			; (mov r8, r8)

000039d4 <__aeabi_uldivmod>:
    39d4:	2b00      	cmp	r3, #0
    39d6:	d111      	bne.n	39fc <__aeabi_uldivmod+0x28>
    39d8:	2a00      	cmp	r2, #0
    39da:	d10f      	bne.n	39fc <__aeabi_uldivmod+0x28>
    39dc:	2900      	cmp	r1, #0
    39de:	d100      	bne.n	39e2 <__aeabi_uldivmod+0xe>
    39e0:	2800      	cmp	r0, #0
    39e2:	d002      	beq.n	39ea <__aeabi_uldivmod+0x16>
    39e4:	2100      	movs	r1, #0
    39e6:	43c9      	mvns	r1, r1
    39e8:	1c08      	adds	r0, r1, #0
    39ea:	b407      	push	{r0, r1, r2}
    39ec:	4802      	ldr	r0, [pc, #8]	; (39f8 <__aeabi_uldivmod+0x24>)
    39ee:	a102      	add	r1, pc, #8	; (adr r1, 39f8 <__aeabi_uldivmod+0x24>)
    39f0:	1840      	adds	r0, r0, r1
    39f2:	9002      	str	r0, [sp, #8]
    39f4:	bd03      	pop	{r0, r1, pc}
    39f6:	46c0      	nop			; (mov r8, r8)
    39f8:	ffffffd9 	.word	0xffffffd9
    39fc:	b403      	push	{r0, r1}
    39fe:	4668      	mov	r0, sp
    3a00:	b501      	push	{r0, lr}
    3a02:	9802      	ldr	r0, [sp, #8]
    3a04:	f000 f858 	bl	3ab8 <__udivmoddi4>
    3a08:	9b01      	ldr	r3, [sp, #4]
    3a0a:	469e      	mov	lr, r3
    3a0c:	b002      	add	sp, #8
    3a0e:	bc0c      	pop	{r2, r3}
    3a10:	4770      	bx	lr
    3a12:	46c0      	nop			; (mov r8, r8)

00003a14 <__aeabi_lmul>:
    3a14:	b5f0      	push	{r4, r5, r6, r7, lr}
    3a16:	46ce      	mov	lr, r9
    3a18:	4647      	mov	r7, r8
    3a1a:	0415      	lsls	r5, r2, #16
    3a1c:	0c2d      	lsrs	r5, r5, #16
    3a1e:	002e      	movs	r6, r5
    3a20:	b580      	push	{r7, lr}
    3a22:	0407      	lsls	r7, r0, #16
    3a24:	0c14      	lsrs	r4, r2, #16
    3a26:	0c3f      	lsrs	r7, r7, #16
    3a28:	4699      	mov	r9, r3
    3a2a:	0c03      	lsrs	r3, r0, #16
    3a2c:	437e      	muls	r6, r7
    3a2e:	435d      	muls	r5, r3
    3a30:	4367      	muls	r7, r4
    3a32:	4363      	muls	r3, r4
    3a34:	197f      	adds	r7, r7, r5
    3a36:	0c34      	lsrs	r4, r6, #16
    3a38:	19e4      	adds	r4, r4, r7
    3a3a:	469c      	mov	ip, r3
    3a3c:	42a5      	cmp	r5, r4
    3a3e:	d903      	bls.n	3a48 <__aeabi_lmul+0x34>
    3a40:	2380      	movs	r3, #128	; 0x80
    3a42:	025b      	lsls	r3, r3, #9
    3a44:	4698      	mov	r8, r3
    3a46:	44c4      	add	ip, r8
    3a48:	464b      	mov	r3, r9
    3a4a:	4351      	muls	r1, r2
    3a4c:	4343      	muls	r3, r0
    3a4e:	0436      	lsls	r6, r6, #16
    3a50:	0c36      	lsrs	r6, r6, #16
    3a52:	0c25      	lsrs	r5, r4, #16
    3a54:	0424      	lsls	r4, r4, #16
    3a56:	4465      	add	r5, ip
    3a58:	19a4      	adds	r4, r4, r6
    3a5a:	1859      	adds	r1, r3, r1
    3a5c:	1949      	adds	r1, r1, r5
    3a5e:	0020      	movs	r0, r4
    3a60:	bc0c      	pop	{r2, r3}
    3a62:	4690      	mov	r8, r2
    3a64:	4699      	mov	r9, r3
    3a66:	bdf0      	pop	{r4, r5, r6, r7, pc}

00003a68 <__ffssi2>:
    3a68:	b510      	push	{r4, lr}
    3a6a:	2300      	movs	r3, #0
    3a6c:	2800      	cmp	r0, #0
    3a6e:	d002      	beq.n	3a76 <__ffssi2+0xe>
    3a70:	f001 fc34 	bl	52dc <__ctzsi2>
    3a74:	1c43      	adds	r3, r0, #1
    3a76:	0018      	movs	r0, r3
    3a78:	bd10      	pop	{r4, pc}
    3a7a:	46c0      	nop			; (mov r8, r8)

00003a7c <__aeabi_d2uiz>:
    3a7c:	b570      	push	{r4, r5, r6, lr}
    3a7e:	2200      	movs	r2, #0
    3a80:	4b0c      	ldr	r3, [pc, #48]	; (3ab4 <__aeabi_d2uiz+0x38>)
    3a82:	0004      	movs	r4, r0
    3a84:	000d      	movs	r5, r1
    3a86:	f001 fbf5 	bl	5274 <__aeabi_dcmpge>
    3a8a:	2800      	cmp	r0, #0
    3a8c:	d104      	bne.n	3a98 <__aeabi_d2uiz+0x1c>
    3a8e:	0020      	movs	r0, r4
    3a90:	0029      	movs	r1, r5
    3a92:	f001 fabb 	bl	500c <__aeabi_d2iz>
    3a96:	bd70      	pop	{r4, r5, r6, pc}
    3a98:	4b06      	ldr	r3, [pc, #24]	; (3ab4 <__aeabi_d2uiz+0x38>)
    3a9a:	2200      	movs	r2, #0
    3a9c:	0020      	movs	r0, r4
    3a9e:	0029      	movs	r1, r5
    3aa0:	f000 ff9e 	bl	49e0 <__aeabi_dsub>
    3aa4:	f001 fab2 	bl	500c <__aeabi_d2iz>
    3aa8:	2380      	movs	r3, #128	; 0x80
    3aaa:	061b      	lsls	r3, r3, #24
    3aac:	469c      	mov	ip, r3
    3aae:	4460      	add	r0, ip
    3ab0:	e7f1      	b.n	3a96 <__aeabi_d2uiz+0x1a>
    3ab2:	46c0      	nop			; (mov r8, r8)
    3ab4:	41e00000 	.word	0x41e00000

00003ab8 <__udivmoddi4>:
    3ab8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3aba:	4657      	mov	r7, sl
    3abc:	464e      	mov	r6, r9
    3abe:	4645      	mov	r5, r8
    3ac0:	46de      	mov	lr, fp
    3ac2:	b5e0      	push	{r5, r6, r7, lr}
    3ac4:	0004      	movs	r4, r0
    3ac6:	b083      	sub	sp, #12
    3ac8:	000d      	movs	r5, r1
    3aca:	4692      	mov	sl, r2
    3acc:	4699      	mov	r9, r3
    3ace:	428b      	cmp	r3, r1
    3ad0:	d82f      	bhi.n	3b32 <__udivmoddi4+0x7a>
    3ad2:	d02c      	beq.n	3b2e <__udivmoddi4+0x76>
    3ad4:	4649      	mov	r1, r9
    3ad6:	4650      	mov	r0, sl
    3ad8:	f001 fbf4 	bl	52c4 <__clzdi2>
    3adc:	0029      	movs	r1, r5
    3ade:	0006      	movs	r6, r0
    3ae0:	0020      	movs	r0, r4
    3ae2:	f001 fbef 	bl	52c4 <__clzdi2>
    3ae6:	1a33      	subs	r3, r6, r0
    3ae8:	4698      	mov	r8, r3
    3aea:	3b20      	subs	r3, #32
    3aec:	469b      	mov	fp, r3
    3aee:	d500      	bpl.n	3af2 <__udivmoddi4+0x3a>
    3af0:	e074      	b.n	3bdc <__udivmoddi4+0x124>
    3af2:	4653      	mov	r3, sl
    3af4:	465a      	mov	r2, fp
    3af6:	4093      	lsls	r3, r2
    3af8:	001f      	movs	r7, r3
    3afa:	4653      	mov	r3, sl
    3afc:	4642      	mov	r2, r8
    3afe:	4093      	lsls	r3, r2
    3b00:	001e      	movs	r6, r3
    3b02:	42af      	cmp	r7, r5
    3b04:	d829      	bhi.n	3b5a <__udivmoddi4+0xa2>
    3b06:	d026      	beq.n	3b56 <__udivmoddi4+0x9e>
    3b08:	465b      	mov	r3, fp
    3b0a:	1ba4      	subs	r4, r4, r6
    3b0c:	41bd      	sbcs	r5, r7
    3b0e:	2b00      	cmp	r3, #0
    3b10:	da00      	bge.n	3b14 <__udivmoddi4+0x5c>
    3b12:	e079      	b.n	3c08 <__udivmoddi4+0x150>
    3b14:	2200      	movs	r2, #0
    3b16:	2300      	movs	r3, #0
    3b18:	9200      	str	r2, [sp, #0]
    3b1a:	9301      	str	r3, [sp, #4]
    3b1c:	2301      	movs	r3, #1
    3b1e:	465a      	mov	r2, fp
    3b20:	4093      	lsls	r3, r2
    3b22:	9301      	str	r3, [sp, #4]
    3b24:	2301      	movs	r3, #1
    3b26:	4642      	mov	r2, r8
    3b28:	4093      	lsls	r3, r2
    3b2a:	9300      	str	r3, [sp, #0]
    3b2c:	e019      	b.n	3b62 <__udivmoddi4+0xaa>
    3b2e:	4282      	cmp	r2, r0
    3b30:	d9d0      	bls.n	3ad4 <__udivmoddi4+0x1c>
    3b32:	2200      	movs	r2, #0
    3b34:	2300      	movs	r3, #0
    3b36:	9200      	str	r2, [sp, #0]
    3b38:	9301      	str	r3, [sp, #4]
    3b3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3b3c:	2b00      	cmp	r3, #0
    3b3e:	d001      	beq.n	3b44 <__udivmoddi4+0x8c>
    3b40:	601c      	str	r4, [r3, #0]
    3b42:	605d      	str	r5, [r3, #4]
    3b44:	9800      	ldr	r0, [sp, #0]
    3b46:	9901      	ldr	r1, [sp, #4]
    3b48:	b003      	add	sp, #12
    3b4a:	bc3c      	pop	{r2, r3, r4, r5}
    3b4c:	4690      	mov	r8, r2
    3b4e:	4699      	mov	r9, r3
    3b50:	46a2      	mov	sl, r4
    3b52:	46ab      	mov	fp, r5
    3b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3b56:	42a3      	cmp	r3, r4
    3b58:	d9d6      	bls.n	3b08 <__udivmoddi4+0x50>
    3b5a:	2200      	movs	r2, #0
    3b5c:	2300      	movs	r3, #0
    3b5e:	9200      	str	r2, [sp, #0]
    3b60:	9301      	str	r3, [sp, #4]
    3b62:	4643      	mov	r3, r8
    3b64:	2b00      	cmp	r3, #0
    3b66:	d0e8      	beq.n	3b3a <__udivmoddi4+0x82>
    3b68:	07fb      	lsls	r3, r7, #31
    3b6a:	0872      	lsrs	r2, r6, #1
    3b6c:	431a      	orrs	r2, r3
    3b6e:	4646      	mov	r6, r8
    3b70:	087b      	lsrs	r3, r7, #1
    3b72:	e00e      	b.n	3b92 <__udivmoddi4+0xda>
    3b74:	42ab      	cmp	r3, r5
    3b76:	d101      	bne.n	3b7c <__udivmoddi4+0xc4>
    3b78:	42a2      	cmp	r2, r4
    3b7a:	d80c      	bhi.n	3b96 <__udivmoddi4+0xde>
    3b7c:	1aa4      	subs	r4, r4, r2
    3b7e:	419d      	sbcs	r5, r3
    3b80:	2001      	movs	r0, #1
    3b82:	1924      	adds	r4, r4, r4
    3b84:	416d      	adcs	r5, r5
    3b86:	2100      	movs	r1, #0
    3b88:	3e01      	subs	r6, #1
    3b8a:	1824      	adds	r4, r4, r0
    3b8c:	414d      	adcs	r5, r1
    3b8e:	2e00      	cmp	r6, #0
    3b90:	d006      	beq.n	3ba0 <__udivmoddi4+0xe8>
    3b92:	42ab      	cmp	r3, r5
    3b94:	d9ee      	bls.n	3b74 <__udivmoddi4+0xbc>
    3b96:	3e01      	subs	r6, #1
    3b98:	1924      	adds	r4, r4, r4
    3b9a:	416d      	adcs	r5, r5
    3b9c:	2e00      	cmp	r6, #0
    3b9e:	d1f8      	bne.n	3b92 <__udivmoddi4+0xda>
    3ba0:	465b      	mov	r3, fp
    3ba2:	9800      	ldr	r0, [sp, #0]
    3ba4:	9901      	ldr	r1, [sp, #4]
    3ba6:	1900      	adds	r0, r0, r4
    3ba8:	4169      	adcs	r1, r5
    3baa:	2b00      	cmp	r3, #0
    3bac:	db22      	blt.n	3bf4 <__udivmoddi4+0x13c>
    3bae:	002b      	movs	r3, r5
    3bb0:	465a      	mov	r2, fp
    3bb2:	40d3      	lsrs	r3, r2
    3bb4:	002a      	movs	r2, r5
    3bb6:	4644      	mov	r4, r8
    3bb8:	40e2      	lsrs	r2, r4
    3bba:	001c      	movs	r4, r3
    3bbc:	465b      	mov	r3, fp
    3bbe:	0015      	movs	r5, r2
    3bc0:	2b00      	cmp	r3, #0
    3bc2:	db2c      	blt.n	3c1e <__udivmoddi4+0x166>
    3bc4:	0026      	movs	r6, r4
    3bc6:	409e      	lsls	r6, r3
    3bc8:	0033      	movs	r3, r6
    3bca:	0026      	movs	r6, r4
    3bcc:	4647      	mov	r7, r8
    3bce:	40be      	lsls	r6, r7
    3bd0:	0032      	movs	r2, r6
    3bd2:	1a80      	subs	r0, r0, r2
    3bd4:	4199      	sbcs	r1, r3
    3bd6:	9000      	str	r0, [sp, #0]
    3bd8:	9101      	str	r1, [sp, #4]
    3bda:	e7ae      	b.n	3b3a <__udivmoddi4+0x82>
    3bdc:	4642      	mov	r2, r8
    3bde:	2320      	movs	r3, #32
    3be0:	1a9b      	subs	r3, r3, r2
    3be2:	4652      	mov	r2, sl
    3be4:	40da      	lsrs	r2, r3
    3be6:	4641      	mov	r1, r8
    3be8:	0013      	movs	r3, r2
    3bea:	464a      	mov	r2, r9
    3bec:	408a      	lsls	r2, r1
    3bee:	0017      	movs	r7, r2
    3bf0:	431f      	orrs	r7, r3
    3bf2:	e782      	b.n	3afa <__udivmoddi4+0x42>
    3bf4:	4642      	mov	r2, r8
    3bf6:	2320      	movs	r3, #32
    3bf8:	1a9b      	subs	r3, r3, r2
    3bfa:	002a      	movs	r2, r5
    3bfc:	4646      	mov	r6, r8
    3bfe:	409a      	lsls	r2, r3
    3c00:	0023      	movs	r3, r4
    3c02:	40f3      	lsrs	r3, r6
    3c04:	4313      	orrs	r3, r2
    3c06:	e7d5      	b.n	3bb4 <__udivmoddi4+0xfc>
    3c08:	4642      	mov	r2, r8
    3c0a:	2320      	movs	r3, #32
    3c0c:	2100      	movs	r1, #0
    3c0e:	1a9b      	subs	r3, r3, r2
    3c10:	2200      	movs	r2, #0
    3c12:	9100      	str	r1, [sp, #0]
    3c14:	9201      	str	r2, [sp, #4]
    3c16:	2201      	movs	r2, #1
    3c18:	40da      	lsrs	r2, r3
    3c1a:	9201      	str	r2, [sp, #4]
    3c1c:	e782      	b.n	3b24 <__udivmoddi4+0x6c>
    3c1e:	4642      	mov	r2, r8
    3c20:	2320      	movs	r3, #32
    3c22:	0026      	movs	r6, r4
    3c24:	1a9b      	subs	r3, r3, r2
    3c26:	40de      	lsrs	r6, r3
    3c28:	002f      	movs	r7, r5
    3c2a:	46b4      	mov	ip, r6
    3c2c:	4097      	lsls	r7, r2
    3c2e:	4666      	mov	r6, ip
    3c30:	003b      	movs	r3, r7
    3c32:	4333      	orrs	r3, r6
    3c34:	e7c9      	b.n	3bca <__udivmoddi4+0x112>
    3c36:	46c0      	nop			; (mov r8, r8)

00003c38 <__aeabi_fmul>:
    3c38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3c3a:	4657      	mov	r7, sl
    3c3c:	464e      	mov	r6, r9
    3c3e:	4645      	mov	r5, r8
    3c40:	46de      	mov	lr, fp
    3c42:	b5e0      	push	{r5, r6, r7, lr}
    3c44:	0247      	lsls	r7, r0, #9
    3c46:	0046      	lsls	r6, r0, #1
    3c48:	4688      	mov	r8, r1
    3c4a:	0a7f      	lsrs	r7, r7, #9
    3c4c:	0e36      	lsrs	r6, r6, #24
    3c4e:	0fc4      	lsrs	r4, r0, #31
    3c50:	2e00      	cmp	r6, #0
    3c52:	d047      	beq.n	3ce4 <__aeabi_fmul+0xac>
    3c54:	2eff      	cmp	r6, #255	; 0xff
    3c56:	d024      	beq.n	3ca2 <__aeabi_fmul+0x6a>
    3c58:	00fb      	lsls	r3, r7, #3
    3c5a:	2780      	movs	r7, #128	; 0x80
    3c5c:	04ff      	lsls	r7, r7, #19
    3c5e:	431f      	orrs	r7, r3
    3c60:	2300      	movs	r3, #0
    3c62:	4699      	mov	r9, r3
    3c64:	469a      	mov	sl, r3
    3c66:	3e7f      	subs	r6, #127	; 0x7f
    3c68:	4643      	mov	r3, r8
    3c6a:	025d      	lsls	r5, r3, #9
    3c6c:	0058      	lsls	r0, r3, #1
    3c6e:	0fdb      	lsrs	r3, r3, #31
    3c70:	0a6d      	lsrs	r5, r5, #9
    3c72:	0e00      	lsrs	r0, r0, #24
    3c74:	4698      	mov	r8, r3
    3c76:	d043      	beq.n	3d00 <__aeabi_fmul+0xc8>
    3c78:	28ff      	cmp	r0, #255	; 0xff
    3c7a:	d03b      	beq.n	3cf4 <__aeabi_fmul+0xbc>
    3c7c:	00eb      	lsls	r3, r5, #3
    3c7e:	2580      	movs	r5, #128	; 0x80
    3c80:	2200      	movs	r2, #0
    3c82:	04ed      	lsls	r5, r5, #19
    3c84:	431d      	orrs	r5, r3
    3c86:	387f      	subs	r0, #127	; 0x7f
    3c88:	1836      	adds	r6, r6, r0
    3c8a:	1c73      	adds	r3, r6, #1
    3c8c:	4641      	mov	r1, r8
    3c8e:	469b      	mov	fp, r3
    3c90:	464b      	mov	r3, r9
    3c92:	4061      	eors	r1, r4
    3c94:	4313      	orrs	r3, r2
    3c96:	2b0f      	cmp	r3, #15
    3c98:	d864      	bhi.n	3d64 <__aeabi_fmul+0x12c>
    3c9a:	4875      	ldr	r0, [pc, #468]	; (3e70 <__aeabi_fmul+0x238>)
    3c9c:	009b      	lsls	r3, r3, #2
    3c9e:	58c3      	ldr	r3, [r0, r3]
    3ca0:	469f      	mov	pc, r3
    3ca2:	2f00      	cmp	r7, #0
    3ca4:	d142      	bne.n	3d2c <__aeabi_fmul+0xf4>
    3ca6:	2308      	movs	r3, #8
    3ca8:	4699      	mov	r9, r3
    3caa:	3b06      	subs	r3, #6
    3cac:	26ff      	movs	r6, #255	; 0xff
    3cae:	469a      	mov	sl, r3
    3cb0:	e7da      	b.n	3c68 <__aeabi_fmul+0x30>
    3cb2:	4641      	mov	r1, r8
    3cb4:	2a02      	cmp	r2, #2
    3cb6:	d028      	beq.n	3d0a <__aeabi_fmul+0xd2>
    3cb8:	2a03      	cmp	r2, #3
    3cba:	d100      	bne.n	3cbe <__aeabi_fmul+0x86>
    3cbc:	e0ce      	b.n	3e5c <__aeabi_fmul+0x224>
    3cbe:	2a01      	cmp	r2, #1
    3cc0:	d000      	beq.n	3cc4 <__aeabi_fmul+0x8c>
    3cc2:	e0ac      	b.n	3e1e <__aeabi_fmul+0x1e6>
    3cc4:	4011      	ands	r1, r2
    3cc6:	2000      	movs	r0, #0
    3cc8:	2200      	movs	r2, #0
    3cca:	b2cc      	uxtb	r4, r1
    3ccc:	0240      	lsls	r0, r0, #9
    3cce:	05d2      	lsls	r2, r2, #23
    3cd0:	0a40      	lsrs	r0, r0, #9
    3cd2:	07e4      	lsls	r4, r4, #31
    3cd4:	4310      	orrs	r0, r2
    3cd6:	4320      	orrs	r0, r4
    3cd8:	bc3c      	pop	{r2, r3, r4, r5}
    3cda:	4690      	mov	r8, r2
    3cdc:	4699      	mov	r9, r3
    3cde:	46a2      	mov	sl, r4
    3ce0:	46ab      	mov	fp, r5
    3ce2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3ce4:	2f00      	cmp	r7, #0
    3ce6:	d115      	bne.n	3d14 <__aeabi_fmul+0xdc>
    3ce8:	2304      	movs	r3, #4
    3cea:	4699      	mov	r9, r3
    3cec:	3b03      	subs	r3, #3
    3cee:	2600      	movs	r6, #0
    3cf0:	469a      	mov	sl, r3
    3cf2:	e7b9      	b.n	3c68 <__aeabi_fmul+0x30>
    3cf4:	20ff      	movs	r0, #255	; 0xff
    3cf6:	2202      	movs	r2, #2
    3cf8:	2d00      	cmp	r5, #0
    3cfa:	d0c5      	beq.n	3c88 <__aeabi_fmul+0x50>
    3cfc:	2203      	movs	r2, #3
    3cfe:	e7c3      	b.n	3c88 <__aeabi_fmul+0x50>
    3d00:	2d00      	cmp	r5, #0
    3d02:	d119      	bne.n	3d38 <__aeabi_fmul+0x100>
    3d04:	2000      	movs	r0, #0
    3d06:	2201      	movs	r2, #1
    3d08:	e7be      	b.n	3c88 <__aeabi_fmul+0x50>
    3d0a:	2401      	movs	r4, #1
    3d0c:	22ff      	movs	r2, #255	; 0xff
    3d0e:	400c      	ands	r4, r1
    3d10:	2000      	movs	r0, #0
    3d12:	e7db      	b.n	3ccc <__aeabi_fmul+0x94>
    3d14:	0038      	movs	r0, r7
    3d16:	f001 fab7 	bl	5288 <__clzsi2>
    3d1a:	2676      	movs	r6, #118	; 0x76
    3d1c:	1f43      	subs	r3, r0, #5
    3d1e:	409f      	lsls	r7, r3
    3d20:	2300      	movs	r3, #0
    3d22:	4276      	negs	r6, r6
    3d24:	1a36      	subs	r6, r6, r0
    3d26:	4699      	mov	r9, r3
    3d28:	469a      	mov	sl, r3
    3d2a:	e79d      	b.n	3c68 <__aeabi_fmul+0x30>
    3d2c:	230c      	movs	r3, #12
    3d2e:	4699      	mov	r9, r3
    3d30:	3b09      	subs	r3, #9
    3d32:	26ff      	movs	r6, #255	; 0xff
    3d34:	469a      	mov	sl, r3
    3d36:	e797      	b.n	3c68 <__aeabi_fmul+0x30>
    3d38:	0028      	movs	r0, r5
    3d3a:	f001 faa5 	bl	5288 <__clzsi2>
    3d3e:	1f43      	subs	r3, r0, #5
    3d40:	409d      	lsls	r5, r3
    3d42:	2376      	movs	r3, #118	; 0x76
    3d44:	425b      	negs	r3, r3
    3d46:	1a18      	subs	r0, r3, r0
    3d48:	2200      	movs	r2, #0
    3d4a:	e79d      	b.n	3c88 <__aeabi_fmul+0x50>
    3d4c:	2080      	movs	r0, #128	; 0x80
    3d4e:	2400      	movs	r4, #0
    3d50:	03c0      	lsls	r0, r0, #15
    3d52:	22ff      	movs	r2, #255	; 0xff
    3d54:	e7ba      	b.n	3ccc <__aeabi_fmul+0x94>
    3d56:	003d      	movs	r5, r7
    3d58:	4652      	mov	r2, sl
    3d5a:	e7ab      	b.n	3cb4 <__aeabi_fmul+0x7c>
    3d5c:	003d      	movs	r5, r7
    3d5e:	0021      	movs	r1, r4
    3d60:	4652      	mov	r2, sl
    3d62:	e7a7      	b.n	3cb4 <__aeabi_fmul+0x7c>
    3d64:	0c3b      	lsrs	r3, r7, #16
    3d66:	469c      	mov	ip, r3
    3d68:	042a      	lsls	r2, r5, #16
    3d6a:	0c12      	lsrs	r2, r2, #16
    3d6c:	0c2b      	lsrs	r3, r5, #16
    3d6e:	0014      	movs	r4, r2
    3d70:	4660      	mov	r0, ip
    3d72:	4665      	mov	r5, ip
    3d74:	043f      	lsls	r7, r7, #16
    3d76:	0c3f      	lsrs	r7, r7, #16
    3d78:	437c      	muls	r4, r7
    3d7a:	4342      	muls	r2, r0
    3d7c:	435d      	muls	r5, r3
    3d7e:	437b      	muls	r3, r7
    3d80:	0c27      	lsrs	r7, r4, #16
    3d82:	189b      	adds	r3, r3, r2
    3d84:	18ff      	adds	r7, r7, r3
    3d86:	42ba      	cmp	r2, r7
    3d88:	d903      	bls.n	3d92 <__aeabi_fmul+0x15a>
    3d8a:	2380      	movs	r3, #128	; 0x80
    3d8c:	025b      	lsls	r3, r3, #9
    3d8e:	469c      	mov	ip, r3
    3d90:	4465      	add	r5, ip
    3d92:	0424      	lsls	r4, r4, #16
    3d94:	043a      	lsls	r2, r7, #16
    3d96:	0c24      	lsrs	r4, r4, #16
    3d98:	1912      	adds	r2, r2, r4
    3d9a:	0193      	lsls	r3, r2, #6
    3d9c:	1e5c      	subs	r4, r3, #1
    3d9e:	41a3      	sbcs	r3, r4
    3da0:	0c3f      	lsrs	r7, r7, #16
    3da2:	0e92      	lsrs	r2, r2, #26
    3da4:	197d      	adds	r5, r7, r5
    3da6:	431a      	orrs	r2, r3
    3da8:	01ad      	lsls	r5, r5, #6
    3daa:	4315      	orrs	r5, r2
    3dac:	012b      	lsls	r3, r5, #4
    3dae:	d504      	bpl.n	3dba <__aeabi_fmul+0x182>
    3db0:	2301      	movs	r3, #1
    3db2:	465e      	mov	r6, fp
    3db4:	086a      	lsrs	r2, r5, #1
    3db6:	401d      	ands	r5, r3
    3db8:	4315      	orrs	r5, r2
    3dba:	0032      	movs	r2, r6
    3dbc:	327f      	adds	r2, #127	; 0x7f
    3dbe:	2a00      	cmp	r2, #0
    3dc0:	dd25      	ble.n	3e0e <__aeabi_fmul+0x1d6>
    3dc2:	076b      	lsls	r3, r5, #29
    3dc4:	d004      	beq.n	3dd0 <__aeabi_fmul+0x198>
    3dc6:	230f      	movs	r3, #15
    3dc8:	402b      	ands	r3, r5
    3dca:	2b04      	cmp	r3, #4
    3dcc:	d000      	beq.n	3dd0 <__aeabi_fmul+0x198>
    3dce:	3504      	adds	r5, #4
    3dd0:	012b      	lsls	r3, r5, #4
    3dd2:	d503      	bpl.n	3ddc <__aeabi_fmul+0x1a4>
    3dd4:	0032      	movs	r2, r6
    3dd6:	4b27      	ldr	r3, [pc, #156]	; (3e74 <__aeabi_fmul+0x23c>)
    3dd8:	3280      	adds	r2, #128	; 0x80
    3dda:	401d      	ands	r5, r3
    3ddc:	2afe      	cmp	r2, #254	; 0xfe
    3dde:	dc94      	bgt.n	3d0a <__aeabi_fmul+0xd2>
    3de0:	2401      	movs	r4, #1
    3de2:	01a8      	lsls	r0, r5, #6
    3de4:	0a40      	lsrs	r0, r0, #9
    3de6:	b2d2      	uxtb	r2, r2
    3de8:	400c      	ands	r4, r1
    3dea:	e76f      	b.n	3ccc <__aeabi_fmul+0x94>
    3dec:	2080      	movs	r0, #128	; 0x80
    3dee:	03c0      	lsls	r0, r0, #15
    3df0:	4207      	tst	r7, r0
    3df2:	d007      	beq.n	3e04 <__aeabi_fmul+0x1cc>
    3df4:	4205      	tst	r5, r0
    3df6:	d105      	bne.n	3e04 <__aeabi_fmul+0x1cc>
    3df8:	4328      	orrs	r0, r5
    3dfa:	0240      	lsls	r0, r0, #9
    3dfc:	0a40      	lsrs	r0, r0, #9
    3dfe:	4644      	mov	r4, r8
    3e00:	22ff      	movs	r2, #255	; 0xff
    3e02:	e763      	b.n	3ccc <__aeabi_fmul+0x94>
    3e04:	4338      	orrs	r0, r7
    3e06:	0240      	lsls	r0, r0, #9
    3e08:	0a40      	lsrs	r0, r0, #9
    3e0a:	22ff      	movs	r2, #255	; 0xff
    3e0c:	e75e      	b.n	3ccc <__aeabi_fmul+0x94>
    3e0e:	2401      	movs	r4, #1
    3e10:	1aa3      	subs	r3, r4, r2
    3e12:	2b1b      	cmp	r3, #27
    3e14:	dd05      	ble.n	3e22 <__aeabi_fmul+0x1ea>
    3e16:	400c      	ands	r4, r1
    3e18:	2200      	movs	r2, #0
    3e1a:	2000      	movs	r0, #0
    3e1c:	e756      	b.n	3ccc <__aeabi_fmul+0x94>
    3e1e:	465e      	mov	r6, fp
    3e20:	e7cb      	b.n	3dba <__aeabi_fmul+0x182>
    3e22:	002a      	movs	r2, r5
    3e24:	2020      	movs	r0, #32
    3e26:	40da      	lsrs	r2, r3
    3e28:	1ac3      	subs	r3, r0, r3
    3e2a:	409d      	lsls	r5, r3
    3e2c:	002b      	movs	r3, r5
    3e2e:	1e5d      	subs	r5, r3, #1
    3e30:	41ab      	sbcs	r3, r5
    3e32:	4313      	orrs	r3, r2
    3e34:	075a      	lsls	r2, r3, #29
    3e36:	d004      	beq.n	3e42 <__aeabi_fmul+0x20a>
    3e38:	220f      	movs	r2, #15
    3e3a:	401a      	ands	r2, r3
    3e3c:	2a04      	cmp	r2, #4
    3e3e:	d000      	beq.n	3e42 <__aeabi_fmul+0x20a>
    3e40:	3304      	adds	r3, #4
    3e42:	015a      	lsls	r2, r3, #5
    3e44:	d504      	bpl.n	3e50 <__aeabi_fmul+0x218>
    3e46:	2401      	movs	r4, #1
    3e48:	2201      	movs	r2, #1
    3e4a:	400c      	ands	r4, r1
    3e4c:	2000      	movs	r0, #0
    3e4e:	e73d      	b.n	3ccc <__aeabi_fmul+0x94>
    3e50:	2401      	movs	r4, #1
    3e52:	019b      	lsls	r3, r3, #6
    3e54:	0a58      	lsrs	r0, r3, #9
    3e56:	400c      	ands	r4, r1
    3e58:	2200      	movs	r2, #0
    3e5a:	e737      	b.n	3ccc <__aeabi_fmul+0x94>
    3e5c:	2080      	movs	r0, #128	; 0x80
    3e5e:	2401      	movs	r4, #1
    3e60:	03c0      	lsls	r0, r0, #15
    3e62:	4328      	orrs	r0, r5
    3e64:	0240      	lsls	r0, r0, #9
    3e66:	0a40      	lsrs	r0, r0, #9
    3e68:	400c      	ands	r4, r1
    3e6a:	22ff      	movs	r2, #255	; 0xff
    3e6c:	e72e      	b.n	3ccc <__aeabi_fmul+0x94>
    3e6e:	46c0      	nop			; (mov r8, r8)
    3e70:	0000ebb4 	.word	0x0000ebb4
    3e74:	f7ffffff 	.word	0xf7ffffff

00003e78 <__aeabi_ddiv>:
    3e78:	b5f0      	push	{r4, r5, r6, r7, lr}
    3e7a:	4657      	mov	r7, sl
    3e7c:	4645      	mov	r5, r8
    3e7e:	46de      	mov	lr, fp
    3e80:	464e      	mov	r6, r9
    3e82:	b5e0      	push	{r5, r6, r7, lr}
    3e84:	004c      	lsls	r4, r1, #1
    3e86:	030e      	lsls	r6, r1, #12
    3e88:	b087      	sub	sp, #28
    3e8a:	4683      	mov	fp, r0
    3e8c:	4692      	mov	sl, r2
    3e8e:	001d      	movs	r5, r3
    3e90:	4680      	mov	r8, r0
    3e92:	0b36      	lsrs	r6, r6, #12
    3e94:	0d64      	lsrs	r4, r4, #21
    3e96:	0fcf      	lsrs	r7, r1, #31
    3e98:	2c00      	cmp	r4, #0
    3e9a:	d04f      	beq.n	3f3c <__aeabi_ddiv+0xc4>
    3e9c:	4b6f      	ldr	r3, [pc, #444]	; (405c <__aeabi_ddiv+0x1e4>)
    3e9e:	429c      	cmp	r4, r3
    3ea0:	d035      	beq.n	3f0e <__aeabi_ddiv+0x96>
    3ea2:	2380      	movs	r3, #128	; 0x80
    3ea4:	0f42      	lsrs	r2, r0, #29
    3ea6:	041b      	lsls	r3, r3, #16
    3ea8:	00f6      	lsls	r6, r6, #3
    3eaa:	4313      	orrs	r3, r2
    3eac:	4333      	orrs	r3, r6
    3eae:	4699      	mov	r9, r3
    3eb0:	00c3      	lsls	r3, r0, #3
    3eb2:	4698      	mov	r8, r3
    3eb4:	4b6a      	ldr	r3, [pc, #424]	; (4060 <__aeabi_ddiv+0x1e8>)
    3eb6:	2600      	movs	r6, #0
    3eb8:	469c      	mov	ip, r3
    3eba:	2300      	movs	r3, #0
    3ebc:	4464      	add	r4, ip
    3ebe:	9303      	str	r3, [sp, #12]
    3ec0:	032b      	lsls	r3, r5, #12
    3ec2:	0b1b      	lsrs	r3, r3, #12
    3ec4:	469b      	mov	fp, r3
    3ec6:	006b      	lsls	r3, r5, #1
    3ec8:	0fed      	lsrs	r5, r5, #31
    3eca:	4650      	mov	r0, sl
    3ecc:	0d5b      	lsrs	r3, r3, #21
    3ece:	9501      	str	r5, [sp, #4]
    3ed0:	d05e      	beq.n	3f90 <__aeabi_ddiv+0x118>
    3ed2:	4a62      	ldr	r2, [pc, #392]	; (405c <__aeabi_ddiv+0x1e4>)
    3ed4:	4293      	cmp	r3, r2
    3ed6:	d053      	beq.n	3f80 <__aeabi_ddiv+0x108>
    3ed8:	465a      	mov	r2, fp
    3eda:	00d1      	lsls	r1, r2, #3
    3edc:	2280      	movs	r2, #128	; 0x80
    3ede:	0f40      	lsrs	r0, r0, #29
    3ee0:	0412      	lsls	r2, r2, #16
    3ee2:	4302      	orrs	r2, r0
    3ee4:	430a      	orrs	r2, r1
    3ee6:	4693      	mov	fp, r2
    3ee8:	4652      	mov	r2, sl
    3eea:	00d1      	lsls	r1, r2, #3
    3eec:	4a5c      	ldr	r2, [pc, #368]	; (4060 <__aeabi_ddiv+0x1e8>)
    3eee:	4694      	mov	ip, r2
    3ef0:	2200      	movs	r2, #0
    3ef2:	4463      	add	r3, ip
    3ef4:	0038      	movs	r0, r7
    3ef6:	4068      	eors	r0, r5
    3ef8:	4684      	mov	ip, r0
    3efa:	9002      	str	r0, [sp, #8]
    3efc:	1ae4      	subs	r4, r4, r3
    3efe:	4316      	orrs	r6, r2
    3f00:	2e0f      	cmp	r6, #15
    3f02:	d900      	bls.n	3f06 <__aeabi_ddiv+0x8e>
    3f04:	e0b4      	b.n	4070 <__aeabi_ddiv+0x1f8>
    3f06:	4b57      	ldr	r3, [pc, #348]	; (4064 <__aeabi_ddiv+0x1ec>)
    3f08:	00b6      	lsls	r6, r6, #2
    3f0a:	599b      	ldr	r3, [r3, r6]
    3f0c:	469f      	mov	pc, r3
    3f0e:	0003      	movs	r3, r0
    3f10:	4333      	orrs	r3, r6
    3f12:	4699      	mov	r9, r3
    3f14:	d16c      	bne.n	3ff0 <__aeabi_ddiv+0x178>
    3f16:	2300      	movs	r3, #0
    3f18:	4698      	mov	r8, r3
    3f1a:	3302      	adds	r3, #2
    3f1c:	2608      	movs	r6, #8
    3f1e:	9303      	str	r3, [sp, #12]
    3f20:	e7ce      	b.n	3ec0 <__aeabi_ddiv+0x48>
    3f22:	46cb      	mov	fp, r9
    3f24:	4641      	mov	r1, r8
    3f26:	9a03      	ldr	r2, [sp, #12]
    3f28:	9701      	str	r7, [sp, #4]
    3f2a:	2a02      	cmp	r2, #2
    3f2c:	d165      	bne.n	3ffa <__aeabi_ddiv+0x182>
    3f2e:	9b01      	ldr	r3, [sp, #4]
    3f30:	4c4a      	ldr	r4, [pc, #296]	; (405c <__aeabi_ddiv+0x1e4>)
    3f32:	469c      	mov	ip, r3
    3f34:	2300      	movs	r3, #0
    3f36:	2200      	movs	r2, #0
    3f38:	4698      	mov	r8, r3
    3f3a:	e06b      	b.n	4014 <__aeabi_ddiv+0x19c>
    3f3c:	0003      	movs	r3, r0
    3f3e:	4333      	orrs	r3, r6
    3f40:	4699      	mov	r9, r3
    3f42:	d04e      	beq.n	3fe2 <__aeabi_ddiv+0x16a>
    3f44:	2e00      	cmp	r6, #0
    3f46:	d100      	bne.n	3f4a <__aeabi_ddiv+0xd2>
    3f48:	e1bc      	b.n	42c4 <__aeabi_ddiv+0x44c>
    3f4a:	0030      	movs	r0, r6
    3f4c:	f001 f99c 	bl	5288 <__clzsi2>
    3f50:	0003      	movs	r3, r0
    3f52:	3b0b      	subs	r3, #11
    3f54:	2b1c      	cmp	r3, #28
    3f56:	dd00      	ble.n	3f5a <__aeabi_ddiv+0xe2>
    3f58:	e1ac      	b.n	42b4 <__aeabi_ddiv+0x43c>
    3f5a:	221d      	movs	r2, #29
    3f5c:	1ad3      	subs	r3, r2, r3
    3f5e:	465a      	mov	r2, fp
    3f60:	0001      	movs	r1, r0
    3f62:	40da      	lsrs	r2, r3
    3f64:	3908      	subs	r1, #8
    3f66:	408e      	lsls	r6, r1
    3f68:	0013      	movs	r3, r2
    3f6a:	4333      	orrs	r3, r6
    3f6c:	4699      	mov	r9, r3
    3f6e:	465b      	mov	r3, fp
    3f70:	408b      	lsls	r3, r1
    3f72:	4698      	mov	r8, r3
    3f74:	2300      	movs	r3, #0
    3f76:	4c3c      	ldr	r4, [pc, #240]	; (4068 <__aeabi_ddiv+0x1f0>)
    3f78:	2600      	movs	r6, #0
    3f7a:	1a24      	subs	r4, r4, r0
    3f7c:	9303      	str	r3, [sp, #12]
    3f7e:	e79f      	b.n	3ec0 <__aeabi_ddiv+0x48>
    3f80:	4651      	mov	r1, sl
    3f82:	465a      	mov	r2, fp
    3f84:	4311      	orrs	r1, r2
    3f86:	d129      	bne.n	3fdc <__aeabi_ddiv+0x164>
    3f88:	2200      	movs	r2, #0
    3f8a:	4693      	mov	fp, r2
    3f8c:	3202      	adds	r2, #2
    3f8e:	e7b1      	b.n	3ef4 <__aeabi_ddiv+0x7c>
    3f90:	4659      	mov	r1, fp
    3f92:	4301      	orrs	r1, r0
    3f94:	d01e      	beq.n	3fd4 <__aeabi_ddiv+0x15c>
    3f96:	465b      	mov	r3, fp
    3f98:	2b00      	cmp	r3, #0
    3f9a:	d100      	bne.n	3f9e <__aeabi_ddiv+0x126>
    3f9c:	e19e      	b.n	42dc <__aeabi_ddiv+0x464>
    3f9e:	4658      	mov	r0, fp
    3fa0:	f001 f972 	bl	5288 <__clzsi2>
    3fa4:	0003      	movs	r3, r0
    3fa6:	3b0b      	subs	r3, #11
    3fa8:	2b1c      	cmp	r3, #28
    3faa:	dd00      	ble.n	3fae <__aeabi_ddiv+0x136>
    3fac:	e18f      	b.n	42ce <__aeabi_ddiv+0x456>
    3fae:	0002      	movs	r2, r0
    3fb0:	4659      	mov	r1, fp
    3fb2:	3a08      	subs	r2, #8
    3fb4:	4091      	lsls	r1, r2
    3fb6:	468b      	mov	fp, r1
    3fb8:	211d      	movs	r1, #29
    3fba:	1acb      	subs	r3, r1, r3
    3fbc:	4651      	mov	r1, sl
    3fbe:	40d9      	lsrs	r1, r3
    3fc0:	000b      	movs	r3, r1
    3fc2:	4659      	mov	r1, fp
    3fc4:	430b      	orrs	r3, r1
    3fc6:	4651      	mov	r1, sl
    3fc8:	469b      	mov	fp, r3
    3fca:	4091      	lsls	r1, r2
    3fcc:	4b26      	ldr	r3, [pc, #152]	; (4068 <__aeabi_ddiv+0x1f0>)
    3fce:	2200      	movs	r2, #0
    3fd0:	1a1b      	subs	r3, r3, r0
    3fd2:	e78f      	b.n	3ef4 <__aeabi_ddiv+0x7c>
    3fd4:	2300      	movs	r3, #0
    3fd6:	2201      	movs	r2, #1
    3fd8:	469b      	mov	fp, r3
    3fda:	e78b      	b.n	3ef4 <__aeabi_ddiv+0x7c>
    3fdc:	4651      	mov	r1, sl
    3fde:	2203      	movs	r2, #3
    3fe0:	e788      	b.n	3ef4 <__aeabi_ddiv+0x7c>
    3fe2:	2300      	movs	r3, #0
    3fe4:	4698      	mov	r8, r3
    3fe6:	3301      	adds	r3, #1
    3fe8:	2604      	movs	r6, #4
    3fea:	2400      	movs	r4, #0
    3fec:	9303      	str	r3, [sp, #12]
    3fee:	e767      	b.n	3ec0 <__aeabi_ddiv+0x48>
    3ff0:	2303      	movs	r3, #3
    3ff2:	46b1      	mov	r9, r6
    3ff4:	9303      	str	r3, [sp, #12]
    3ff6:	260c      	movs	r6, #12
    3ff8:	e762      	b.n	3ec0 <__aeabi_ddiv+0x48>
    3ffa:	2a03      	cmp	r2, #3
    3ffc:	d100      	bne.n	4000 <__aeabi_ddiv+0x188>
    3ffe:	e25c      	b.n	44ba <__aeabi_ddiv+0x642>
    4000:	9b01      	ldr	r3, [sp, #4]
    4002:	2a01      	cmp	r2, #1
    4004:	d000      	beq.n	4008 <__aeabi_ddiv+0x190>
    4006:	e1e4      	b.n	43d2 <__aeabi_ddiv+0x55a>
    4008:	4013      	ands	r3, r2
    400a:	469c      	mov	ip, r3
    400c:	2300      	movs	r3, #0
    400e:	2400      	movs	r4, #0
    4010:	2200      	movs	r2, #0
    4012:	4698      	mov	r8, r3
    4014:	2100      	movs	r1, #0
    4016:	0312      	lsls	r2, r2, #12
    4018:	0b13      	lsrs	r3, r2, #12
    401a:	0d0a      	lsrs	r2, r1, #20
    401c:	0512      	lsls	r2, r2, #20
    401e:	431a      	orrs	r2, r3
    4020:	0523      	lsls	r3, r4, #20
    4022:	4c12      	ldr	r4, [pc, #72]	; (406c <__aeabi_ddiv+0x1f4>)
    4024:	4640      	mov	r0, r8
    4026:	4022      	ands	r2, r4
    4028:	4313      	orrs	r3, r2
    402a:	4662      	mov	r2, ip
    402c:	005b      	lsls	r3, r3, #1
    402e:	07d2      	lsls	r2, r2, #31
    4030:	085b      	lsrs	r3, r3, #1
    4032:	4313      	orrs	r3, r2
    4034:	0019      	movs	r1, r3
    4036:	b007      	add	sp, #28
    4038:	bc3c      	pop	{r2, r3, r4, r5}
    403a:	4690      	mov	r8, r2
    403c:	4699      	mov	r9, r3
    403e:	46a2      	mov	sl, r4
    4040:	46ab      	mov	fp, r5
    4042:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4044:	2300      	movs	r3, #0
    4046:	2280      	movs	r2, #128	; 0x80
    4048:	469c      	mov	ip, r3
    404a:	0312      	lsls	r2, r2, #12
    404c:	4698      	mov	r8, r3
    404e:	4c03      	ldr	r4, [pc, #12]	; (405c <__aeabi_ddiv+0x1e4>)
    4050:	e7e0      	b.n	4014 <__aeabi_ddiv+0x19c>
    4052:	2300      	movs	r3, #0
    4054:	4c01      	ldr	r4, [pc, #4]	; (405c <__aeabi_ddiv+0x1e4>)
    4056:	2200      	movs	r2, #0
    4058:	4698      	mov	r8, r3
    405a:	e7db      	b.n	4014 <__aeabi_ddiv+0x19c>
    405c:	000007ff 	.word	0x000007ff
    4060:	fffffc01 	.word	0xfffffc01
    4064:	0000ebf4 	.word	0x0000ebf4
    4068:	fffffc0d 	.word	0xfffffc0d
    406c:	800fffff 	.word	0x800fffff
    4070:	45d9      	cmp	r9, fp
    4072:	d900      	bls.n	4076 <__aeabi_ddiv+0x1fe>
    4074:	e139      	b.n	42ea <__aeabi_ddiv+0x472>
    4076:	d100      	bne.n	407a <__aeabi_ddiv+0x202>
    4078:	e134      	b.n	42e4 <__aeabi_ddiv+0x46c>
    407a:	2300      	movs	r3, #0
    407c:	4646      	mov	r6, r8
    407e:	464d      	mov	r5, r9
    4080:	469a      	mov	sl, r3
    4082:	3c01      	subs	r4, #1
    4084:	465b      	mov	r3, fp
    4086:	0e0a      	lsrs	r2, r1, #24
    4088:	021b      	lsls	r3, r3, #8
    408a:	431a      	orrs	r2, r3
    408c:	020b      	lsls	r3, r1, #8
    408e:	0c17      	lsrs	r7, r2, #16
    4090:	9303      	str	r3, [sp, #12]
    4092:	0413      	lsls	r3, r2, #16
    4094:	0c1b      	lsrs	r3, r3, #16
    4096:	0039      	movs	r1, r7
    4098:	0028      	movs	r0, r5
    409a:	4690      	mov	r8, r2
    409c:	9301      	str	r3, [sp, #4]
    409e:	f7ff fb23 	bl	36e8 <__udivsi3>
    40a2:	0002      	movs	r2, r0
    40a4:	9b01      	ldr	r3, [sp, #4]
    40a6:	4683      	mov	fp, r0
    40a8:	435a      	muls	r2, r3
    40aa:	0028      	movs	r0, r5
    40ac:	0039      	movs	r1, r7
    40ae:	4691      	mov	r9, r2
    40b0:	f7ff fba0 	bl	37f4 <__aeabi_uidivmod>
    40b4:	0c35      	lsrs	r5, r6, #16
    40b6:	0409      	lsls	r1, r1, #16
    40b8:	430d      	orrs	r5, r1
    40ba:	45a9      	cmp	r9, r5
    40bc:	d90d      	bls.n	40da <__aeabi_ddiv+0x262>
    40be:	465b      	mov	r3, fp
    40c0:	4445      	add	r5, r8
    40c2:	3b01      	subs	r3, #1
    40c4:	45a8      	cmp	r8, r5
    40c6:	d900      	bls.n	40ca <__aeabi_ddiv+0x252>
    40c8:	e13a      	b.n	4340 <__aeabi_ddiv+0x4c8>
    40ca:	45a9      	cmp	r9, r5
    40cc:	d800      	bhi.n	40d0 <__aeabi_ddiv+0x258>
    40ce:	e137      	b.n	4340 <__aeabi_ddiv+0x4c8>
    40d0:	2302      	movs	r3, #2
    40d2:	425b      	negs	r3, r3
    40d4:	469c      	mov	ip, r3
    40d6:	4445      	add	r5, r8
    40d8:	44e3      	add	fp, ip
    40da:	464b      	mov	r3, r9
    40dc:	1aeb      	subs	r3, r5, r3
    40de:	0039      	movs	r1, r7
    40e0:	0018      	movs	r0, r3
    40e2:	9304      	str	r3, [sp, #16]
    40e4:	f7ff fb00 	bl	36e8 <__udivsi3>
    40e8:	9b01      	ldr	r3, [sp, #4]
    40ea:	0005      	movs	r5, r0
    40ec:	4343      	muls	r3, r0
    40ee:	0039      	movs	r1, r7
    40f0:	9804      	ldr	r0, [sp, #16]
    40f2:	4699      	mov	r9, r3
    40f4:	f7ff fb7e 	bl	37f4 <__aeabi_uidivmod>
    40f8:	0433      	lsls	r3, r6, #16
    40fa:	0409      	lsls	r1, r1, #16
    40fc:	0c1b      	lsrs	r3, r3, #16
    40fe:	430b      	orrs	r3, r1
    4100:	4599      	cmp	r9, r3
    4102:	d909      	bls.n	4118 <__aeabi_ddiv+0x2a0>
    4104:	4443      	add	r3, r8
    4106:	1e6a      	subs	r2, r5, #1
    4108:	4598      	cmp	r8, r3
    410a:	d900      	bls.n	410e <__aeabi_ddiv+0x296>
    410c:	e11a      	b.n	4344 <__aeabi_ddiv+0x4cc>
    410e:	4599      	cmp	r9, r3
    4110:	d800      	bhi.n	4114 <__aeabi_ddiv+0x29c>
    4112:	e117      	b.n	4344 <__aeabi_ddiv+0x4cc>
    4114:	3d02      	subs	r5, #2
    4116:	4443      	add	r3, r8
    4118:	464a      	mov	r2, r9
    411a:	1a9b      	subs	r3, r3, r2
    411c:	465a      	mov	r2, fp
    411e:	0412      	lsls	r2, r2, #16
    4120:	432a      	orrs	r2, r5
    4122:	9903      	ldr	r1, [sp, #12]
    4124:	4693      	mov	fp, r2
    4126:	0c10      	lsrs	r0, r2, #16
    4128:	0c0a      	lsrs	r2, r1, #16
    412a:	4691      	mov	r9, r2
    412c:	0409      	lsls	r1, r1, #16
    412e:	465a      	mov	r2, fp
    4130:	0c09      	lsrs	r1, r1, #16
    4132:	464e      	mov	r6, r9
    4134:	000d      	movs	r5, r1
    4136:	0412      	lsls	r2, r2, #16
    4138:	0c12      	lsrs	r2, r2, #16
    413a:	4345      	muls	r5, r0
    413c:	9105      	str	r1, [sp, #20]
    413e:	4351      	muls	r1, r2
    4140:	4372      	muls	r2, r6
    4142:	4370      	muls	r0, r6
    4144:	1952      	adds	r2, r2, r5
    4146:	0c0e      	lsrs	r6, r1, #16
    4148:	18b2      	adds	r2, r6, r2
    414a:	4295      	cmp	r5, r2
    414c:	d903      	bls.n	4156 <__aeabi_ddiv+0x2de>
    414e:	2580      	movs	r5, #128	; 0x80
    4150:	026d      	lsls	r5, r5, #9
    4152:	46ac      	mov	ip, r5
    4154:	4460      	add	r0, ip
    4156:	0c15      	lsrs	r5, r2, #16
    4158:	0409      	lsls	r1, r1, #16
    415a:	0412      	lsls	r2, r2, #16
    415c:	0c09      	lsrs	r1, r1, #16
    415e:	1828      	adds	r0, r5, r0
    4160:	1852      	adds	r2, r2, r1
    4162:	4283      	cmp	r3, r0
    4164:	d200      	bcs.n	4168 <__aeabi_ddiv+0x2f0>
    4166:	e0ce      	b.n	4306 <__aeabi_ddiv+0x48e>
    4168:	d100      	bne.n	416c <__aeabi_ddiv+0x2f4>
    416a:	e0c8      	b.n	42fe <__aeabi_ddiv+0x486>
    416c:	1a1d      	subs	r5, r3, r0
    416e:	4653      	mov	r3, sl
    4170:	1a9e      	subs	r6, r3, r2
    4172:	45b2      	cmp	sl, r6
    4174:	4192      	sbcs	r2, r2
    4176:	4252      	negs	r2, r2
    4178:	1aab      	subs	r3, r5, r2
    417a:	469a      	mov	sl, r3
    417c:	4598      	cmp	r8, r3
    417e:	d100      	bne.n	4182 <__aeabi_ddiv+0x30a>
    4180:	e117      	b.n	43b2 <__aeabi_ddiv+0x53a>
    4182:	0039      	movs	r1, r7
    4184:	0018      	movs	r0, r3
    4186:	f7ff faaf 	bl	36e8 <__udivsi3>
    418a:	9b01      	ldr	r3, [sp, #4]
    418c:	0005      	movs	r5, r0
    418e:	4343      	muls	r3, r0
    4190:	0039      	movs	r1, r7
    4192:	4650      	mov	r0, sl
    4194:	9304      	str	r3, [sp, #16]
    4196:	f7ff fb2d 	bl	37f4 <__aeabi_uidivmod>
    419a:	9804      	ldr	r0, [sp, #16]
    419c:	040b      	lsls	r3, r1, #16
    419e:	0c31      	lsrs	r1, r6, #16
    41a0:	4319      	orrs	r1, r3
    41a2:	4288      	cmp	r0, r1
    41a4:	d909      	bls.n	41ba <__aeabi_ddiv+0x342>
    41a6:	4441      	add	r1, r8
    41a8:	1e6b      	subs	r3, r5, #1
    41aa:	4588      	cmp	r8, r1
    41ac:	d900      	bls.n	41b0 <__aeabi_ddiv+0x338>
    41ae:	e107      	b.n	43c0 <__aeabi_ddiv+0x548>
    41b0:	4288      	cmp	r0, r1
    41b2:	d800      	bhi.n	41b6 <__aeabi_ddiv+0x33e>
    41b4:	e104      	b.n	43c0 <__aeabi_ddiv+0x548>
    41b6:	3d02      	subs	r5, #2
    41b8:	4441      	add	r1, r8
    41ba:	9b04      	ldr	r3, [sp, #16]
    41bc:	1acb      	subs	r3, r1, r3
    41be:	0018      	movs	r0, r3
    41c0:	0039      	movs	r1, r7
    41c2:	9304      	str	r3, [sp, #16]
    41c4:	f7ff fa90 	bl	36e8 <__udivsi3>
    41c8:	9b01      	ldr	r3, [sp, #4]
    41ca:	4682      	mov	sl, r0
    41cc:	4343      	muls	r3, r0
    41ce:	0039      	movs	r1, r7
    41d0:	9804      	ldr	r0, [sp, #16]
    41d2:	9301      	str	r3, [sp, #4]
    41d4:	f7ff fb0e 	bl	37f4 <__aeabi_uidivmod>
    41d8:	9801      	ldr	r0, [sp, #4]
    41da:	040b      	lsls	r3, r1, #16
    41dc:	0431      	lsls	r1, r6, #16
    41de:	0c09      	lsrs	r1, r1, #16
    41e0:	4319      	orrs	r1, r3
    41e2:	4288      	cmp	r0, r1
    41e4:	d90d      	bls.n	4202 <__aeabi_ddiv+0x38a>
    41e6:	4653      	mov	r3, sl
    41e8:	4441      	add	r1, r8
    41ea:	3b01      	subs	r3, #1
    41ec:	4588      	cmp	r8, r1
    41ee:	d900      	bls.n	41f2 <__aeabi_ddiv+0x37a>
    41f0:	e0e8      	b.n	43c4 <__aeabi_ddiv+0x54c>
    41f2:	4288      	cmp	r0, r1
    41f4:	d800      	bhi.n	41f8 <__aeabi_ddiv+0x380>
    41f6:	e0e5      	b.n	43c4 <__aeabi_ddiv+0x54c>
    41f8:	2302      	movs	r3, #2
    41fa:	425b      	negs	r3, r3
    41fc:	469c      	mov	ip, r3
    41fe:	4441      	add	r1, r8
    4200:	44e2      	add	sl, ip
    4202:	9b01      	ldr	r3, [sp, #4]
    4204:	042d      	lsls	r5, r5, #16
    4206:	1ace      	subs	r6, r1, r3
    4208:	4651      	mov	r1, sl
    420a:	4329      	orrs	r1, r5
    420c:	9d05      	ldr	r5, [sp, #20]
    420e:	464f      	mov	r7, r9
    4210:	002a      	movs	r2, r5
    4212:	040b      	lsls	r3, r1, #16
    4214:	0c08      	lsrs	r0, r1, #16
    4216:	0c1b      	lsrs	r3, r3, #16
    4218:	435a      	muls	r2, r3
    421a:	4345      	muls	r5, r0
    421c:	437b      	muls	r3, r7
    421e:	4378      	muls	r0, r7
    4220:	195b      	adds	r3, r3, r5
    4222:	0c17      	lsrs	r7, r2, #16
    4224:	18fb      	adds	r3, r7, r3
    4226:	429d      	cmp	r5, r3
    4228:	d903      	bls.n	4232 <__aeabi_ddiv+0x3ba>
    422a:	2580      	movs	r5, #128	; 0x80
    422c:	026d      	lsls	r5, r5, #9
    422e:	46ac      	mov	ip, r5
    4230:	4460      	add	r0, ip
    4232:	0c1d      	lsrs	r5, r3, #16
    4234:	0412      	lsls	r2, r2, #16
    4236:	041b      	lsls	r3, r3, #16
    4238:	0c12      	lsrs	r2, r2, #16
    423a:	1828      	adds	r0, r5, r0
    423c:	189b      	adds	r3, r3, r2
    423e:	4286      	cmp	r6, r0
    4240:	d200      	bcs.n	4244 <__aeabi_ddiv+0x3cc>
    4242:	e093      	b.n	436c <__aeabi_ddiv+0x4f4>
    4244:	d100      	bne.n	4248 <__aeabi_ddiv+0x3d0>
    4246:	e08e      	b.n	4366 <__aeabi_ddiv+0x4ee>
    4248:	2301      	movs	r3, #1
    424a:	4319      	orrs	r1, r3
    424c:	4ba0      	ldr	r3, [pc, #640]	; (44d0 <__aeabi_ddiv+0x658>)
    424e:	18e3      	adds	r3, r4, r3
    4250:	2b00      	cmp	r3, #0
    4252:	dc00      	bgt.n	4256 <__aeabi_ddiv+0x3de>
    4254:	e099      	b.n	438a <__aeabi_ddiv+0x512>
    4256:	074a      	lsls	r2, r1, #29
    4258:	d000      	beq.n	425c <__aeabi_ddiv+0x3e4>
    425a:	e09e      	b.n	439a <__aeabi_ddiv+0x522>
    425c:	465a      	mov	r2, fp
    425e:	01d2      	lsls	r2, r2, #7
    4260:	d506      	bpl.n	4270 <__aeabi_ddiv+0x3f8>
    4262:	465a      	mov	r2, fp
    4264:	4b9b      	ldr	r3, [pc, #620]	; (44d4 <__aeabi_ddiv+0x65c>)
    4266:	401a      	ands	r2, r3
    4268:	2380      	movs	r3, #128	; 0x80
    426a:	4693      	mov	fp, r2
    426c:	00db      	lsls	r3, r3, #3
    426e:	18e3      	adds	r3, r4, r3
    4270:	4a99      	ldr	r2, [pc, #612]	; (44d8 <__aeabi_ddiv+0x660>)
    4272:	4293      	cmp	r3, r2
    4274:	dd68      	ble.n	4348 <__aeabi_ddiv+0x4d0>
    4276:	2301      	movs	r3, #1
    4278:	9a02      	ldr	r2, [sp, #8]
    427a:	4c98      	ldr	r4, [pc, #608]	; (44dc <__aeabi_ddiv+0x664>)
    427c:	401a      	ands	r2, r3
    427e:	2300      	movs	r3, #0
    4280:	4694      	mov	ip, r2
    4282:	4698      	mov	r8, r3
    4284:	2200      	movs	r2, #0
    4286:	e6c5      	b.n	4014 <__aeabi_ddiv+0x19c>
    4288:	2280      	movs	r2, #128	; 0x80
    428a:	464b      	mov	r3, r9
    428c:	0312      	lsls	r2, r2, #12
    428e:	4213      	tst	r3, r2
    4290:	d00a      	beq.n	42a8 <__aeabi_ddiv+0x430>
    4292:	465b      	mov	r3, fp
    4294:	4213      	tst	r3, r2
    4296:	d106      	bne.n	42a6 <__aeabi_ddiv+0x42e>
    4298:	431a      	orrs	r2, r3
    429a:	0312      	lsls	r2, r2, #12
    429c:	0b12      	lsrs	r2, r2, #12
    429e:	46ac      	mov	ip, r5
    42a0:	4688      	mov	r8, r1
    42a2:	4c8e      	ldr	r4, [pc, #568]	; (44dc <__aeabi_ddiv+0x664>)
    42a4:	e6b6      	b.n	4014 <__aeabi_ddiv+0x19c>
    42a6:	464b      	mov	r3, r9
    42a8:	431a      	orrs	r2, r3
    42aa:	0312      	lsls	r2, r2, #12
    42ac:	0b12      	lsrs	r2, r2, #12
    42ae:	46bc      	mov	ip, r7
    42b0:	4c8a      	ldr	r4, [pc, #552]	; (44dc <__aeabi_ddiv+0x664>)
    42b2:	e6af      	b.n	4014 <__aeabi_ddiv+0x19c>
    42b4:	0003      	movs	r3, r0
    42b6:	465a      	mov	r2, fp
    42b8:	3b28      	subs	r3, #40	; 0x28
    42ba:	409a      	lsls	r2, r3
    42bc:	2300      	movs	r3, #0
    42be:	4691      	mov	r9, r2
    42c0:	4698      	mov	r8, r3
    42c2:	e657      	b.n	3f74 <__aeabi_ddiv+0xfc>
    42c4:	4658      	mov	r0, fp
    42c6:	f000 ffdf 	bl	5288 <__clzsi2>
    42ca:	3020      	adds	r0, #32
    42cc:	e640      	b.n	3f50 <__aeabi_ddiv+0xd8>
    42ce:	0003      	movs	r3, r0
    42d0:	4652      	mov	r2, sl
    42d2:	3b28      	subs	r3, #40	; 0x28
    42d4:	409a      	lsls	r2, r3
    42d6:	2100      	movs	r1, #0
    42d8:	4693      	mov	fp, r2
    42da:	e677      	b.n	3fcc <__aeabi_ddiv+0x154>
    42dc:	f000 ffd4 	bl	5288 <__clzsi2>
    42e0:	3020      	adds	r0, #32
    42e2:	e65f      	b.n	3fa4 <__aeabi_ddiv+0x12c>
    42e4:	4588      	cmp	r8, r1
    42e6:	d200      	bcs.n	42ea <__aeabi_ddiv+0x472>
    42e8:	e6c7      	b.n	407a <__aeabi_ddiv+0x202>
    42ea:	464b      	mov	r3, r9
    42ec:	07de      	lsls	r6, r3, #31
    42ee:	085d      	lsrs	r5, r3, #1
    42f0:	4643      	mov	r3, r8
    42f2:	085b      	lsrs	r3, r3, #1
    42f4:	431e      	orrs	r6, r3
    42f6:	4643      	mov	r3, r8
    42f8:	07db      	lsls	r3, r3, #31
    42fa:	469a      	mov	sl, r3
    42fc:	e6c2      	b.n	4084 <__aeabi_ddiv+0x20c>
    42fe:	2500      	movs	r5, #0
    4300:	4592      	cmp	sl, r2
    4302:	d300      	bcc.n	4306 <__aeabi_ddiv+0x48e>
    4304:	e733      	b.n	416e <__aeabi_ddiv+0x2f6>
    4306:	9e03      	ldr	r6, [sp, #12]
    4308:	4659      	mov	r1, fp
    430a:	46b4      	mov	ip, r6
    430c:	44e2      	add	sl, ip
    430e:	45b2      	cmp	sl, r6
    4310:	41ad      	sbcs	r5, r5
    4312:	426d      	negs	r5, r5
    4314:	4445      	add	r5, r8
    4316:	18eb      	adds	r3, r5, r3
    4318:	3901      	subs	r1, #1
    431a:	4598      	cmp	r8, r3
    431c:	d207      	bcs.n	432e <__aeabi_ddiv+0x4b6>
    431e:	4298      	cmp	r0, r3
    4320:	d900      	bls.n	4324 <__aeabi_ddiv+0x4ac>
    4322:	e07f      	b.n	4424 <__aeabi_ddiv+0x5ac>
    4324:	d100      	bne.n	4328 <__aeabi_ddiv+0x4b0>
    4326:	e0bc      	b.n	44a2 <__aeabi_ddiv+0x62a>
    4328:	1a1d      	subs	r5, r3, r0
    432a:	468b      	mov	fp, r1
    432c:	e71f      	b.n	416e <__aeabi_ddiv+0x2f6>
    432e:	4598      	cmp	r8, r3
    4330:	d1fa      	bne.n	4328 <__aeabi_ddiv+0x4b0>
    4332:	9d03      	ldr	r5, [sp, #12]
    4334:	4555      	cmp	r5, sl
    4336:	d9f2      	bls.n	431e <__aeabi_ddiv+0x4a6>
    4338:	4643      	mov	r3, r8
    433a:	468b      	mov	fp, r1
    433c:	1a1d      	subs	r5, r3, r0
    433e:	e716      	b.n	416e <__aeabi_ddiv+0x2f6>
    4340:	469b      	mov	fp, r3
    4342:	e6ca      	b.n	40da <__aeabi_ddiv+0x262>
    4344:	0015      	movs	r5, r2
    4346:	e6e7      	b.n	4118 <__aeabi_ddiv+0x2a0>
    4348:	465a      	mov	r2, fp
    434a:	08c9      	lsrs	r1, r1, #3
    434c:	0752      	lsls	r2, r2, #29
    434e:	430a      	orrs	r2, r1
    4350:	055b      	lsls	r3, r3, #21
    4352:	4690      	mov	r8, r2
    4354:	0d5c      	lsrs	r4, r3, #21
    4356:	465a      	mov	r2, fp
    4358:	2301      	movs	r3, #1
    435a:	9902      	ldr	r1, [sp, #8]
    435c:	0252      	lsls	r2, r2, #9
    435e:	4019      	ands	r1, r3
    4360:	0b12      	lsrs	r2, r2, #12
    4362:	468c      	mov	ip, r1
    4364:	e656      	b.n	4014 <__aeabi_ddiv+0x19c>
    4366:	2b00      	cmp	r3, #0
    4368:	d100      	bne.n	436c <__aeabi_ddiv+0x4f4>
    436a:	e76f      	b.n	424c <__aeabi_ddiv+0x3d4>
    436c:	4446      	add	r6, r8
    436e:	1e4a      	subs	r2, r1, #1
    4370:	45b0      	cmp	r8, r6
    4372:	d929      	bls.n	43c8 <__aeabi_ddiv+0x550>
    4374:	0011      	movs	r1, r2
    4376:	4286      	cmp	r6, r0
    4378:	d000      	beq.n	437c <__aeabi_ddiv+0x504>
    437a:	e765      	b.n	4248 <__aeabi_ddiv+0x3d0>
    437c:	9a03      	ldr	r2, [sp, #12]
    437e:	4293      	cmp	r3, r2
    4380:	d000      	beq.n	4384 <__aeabi_ddiv+0x50c>
    4382:	e761      	b.n	4248 <__aeabi_ddiv+0x3d0>
    4384:	e762      	b.n	424c <__aeabi_ddiv+0x3d4>
    4386:	2101      	movs	r1, #1
    4388:	4249      	negs	r1, r1
    438a:	2001      	movs	r0, #1
    438c:	1ac2      	subs	r2, r0, r3
    438e:	2a38      	cmp	r2, #56	; 0x38
    4390:	dd21      	ble.n	43d6 <__aeabi_ddiv+0x55e>
    4392:	9b02      	ldr	r3, [sp, #8]
    4394:	4003      	ands	r3, r0
    4396:	469c      	mov	ip, r3
    4398:	e638      	b.n	400c <__aeabi_ddiv+0x194>
    439a:	220f      	movs	r2, #15
    439c:	400a      	ands	r2, r1
    439e:	2a04      	cmp	r2, #4
    43a0:	d100      	bne.n	43a4 <__aeabi_ddiv+0x52c>
    43a2:	e75b      	b.n	425c <__aeabi_ddiv+0x3e4>
    43a4:	000a      	movs	r2, r1
    43a6:	1d11      	adds	r1, r2, #4
    43a8:	4291      	cmp	r1, r2
    43aa:	4192      	sbcs	r2, r2
    43ac:	4252      	negs	r2, r2
    43ae:	4493      	add	fp, r2
    43b0:	e754      	b.n	425c <__aeabi_ddiv+0x3e4>
    43b2:	4b47      	ldr	r3, [pc, #284]	; (44d0 <__aeabi_ddiv+0x658>)
    43b4:	18e3      	adds	r3, r4, r3
    43b6:	2b00      	cmp	r3, #0
    43b8:	dde5      	ble.n	4386 <__aeabi_ddiv+0x50e>
    43ba:	2201      	movs	r2, #1
    43bc:	4252      	negs	r2, r2
    43be:	e7f2      	b.n	43a6 <__aeabi_ddiv+0x52e>
    43c0:	001d      	movs	r5, r3
    43c2:	e6fa      	b.n	41ba <__aeabi_ddiv+0x342>
    43c4:	469a      	mov	sl, r3
    43c6:	e71c      	b.n	4202 <__aeabi_ddiv+0x38a>
    43c8:	42b0      	cmp	r0, r6
    43ca:	d839      	bhi.n	4440 <__aeabi_ddiv+0x5c8>
    43cc:	d06e      	beq.n	44ac <__aeabi_ddiv+0x634>
    43ce:	0011      	movs	r1, r2
    43d0:	e73a      	b.n	4248 <__aeabi_ddiv+0x3d0>
    43d2:	9302      	str	r3, [sp, #8]
    43d4:	e73a      	b.n	424c <__aeabi_ddiv+0x3d4>
    43d6:	2a1f      	cmp	r2, #31
    43d8:	dc3c      	bgt.n	4454 <__aeabi_ddiv+0x5dc>
    43da:	2320      	movs	r3, #32
    43dc:	1a9b      	subs	r3, r3, r2
    43de:	000c      	movs	r4, r1
    43e0:	4658      	mov	r0, fp
    43e2:	4099      	lsls	r1, r3
    43e4:	4098      	lsls	r0, r3
    43e6:	1e4b      	subs	r3, r1, #1
    43e8:	4199      	sbcs	r1, r3
    43ea:	465b      	mov	r3, fp
    43ec:	40d4      	lsrs	r4, r2
    43ee:	40d3      	lsrs	r3, r2
    43f0:	4320      	orrs	r0, r4
    43f2:	4308      	orrs	r0, r1
    43f4:	001a      	movs	r2, r3
    43f6:	0743      	lsls	r3, r0, #29
    43f8:	d009      	beq.n	440e <__aeabi_ddiv+0x596>
    43fa:	230f      	movs	r3, #15
    43fc:	4003      	ands	r3, r0
    43fe:	2b04      	cmp	r3, #4
    4400:	d005      	beq.n	440e <__aeabi_ddiv+0x596>
    4402:	0001      	movs	r1, r0
    4404:	1d08      	adds	r0, r1, #4
    4406:	4288      	cmp	r0, r1
    4408:	419b      	sbcs	r3, r3
    440a:	425b      	negs	r3, r3
    440c:	18d2      	adds	r2, r2, r3
    440e:	0213      	lsls	r3, r2, #8
    4410:	d53a      	bpl.n	4488 <__aeabi_ddiv+0x610>
    4412:	2301      	movs	r3, #1
    4414:	9a02      	ldr	r2, [sp, #8]
    4416:	2401      	movs	r4, #1
    4418:	401a      	ands	r2, r3
    441a:	2300      	movs	r3, #0
    441c:	4694      	mov	ip, r2
    441e:	4698      	mov	r8, r3
    4420:	2200      	movs	r2, #0
    4422:	e5f7      	b.n	4014 <__aeabi_ddiv+0x19c>
    4424:	2102      	movs	r1, #2
    4426:	4249      	negs	r1, r1
    4428:	468c      	mov	ip, r1
    442a:	9d03      	ldr	r5, [sp, #12]
    442c:	44e3      	add	fp, ip
    442e:	46ac      	mov	ip, r5
    4430:	44e2      	add	sl, ip
    4432:	45aa      	cmp	sl, r5
    4434:	41ad      	sbcs	r5, r5
    4436:	426d      	negs	r5, r5
    4438:	4445      	add	r5, r8
    443a:	18ed      	adds	r5, r5, r3
    443c:	1a2d      	subs	r5, r5, r0
    443e:	e696      	b.n	416e <__aeabi_ddiv+0x2f6>
    4440:	1e8a      	subs	r2, r1, #2
    4442:	9903      	ldr	r1, [sp, #12]
    4444:	004d      	lsls	r5, r1, #1
    4446:	428d      	cmp	r5, r1
    4448:	4189      	sbcs	r1, r1
    444a:	4249      	negs	r1, r1
    444c:	4441      	add	r1, r8
    444e:	1876      	adds	r6, r6, r1
    4450:	9503      	str	r5, [sp, #12]
    4452:	e78f      	b.n	4374 <__aeabi_ddiv+0x4fc>
    4454:	201f      	movs	r0, #31
    4456:	4240      	negs	r0, r0
    4458:	1ac3      	subs	r3, r0, r3
    445a:	4658      	mov	r0, fp
    445c:	40d8      	lsrs	r0, r3
    445e:	0003      	movs	r3, r0
    4460:	2a20      	cmp	r2, #32
    4462:	d028      	beq.n	44b6 <__aeabi_ddiv+0x63e>
    4464:	2040      	movs	r0, #64	; 0x40
    4466:	465d      	mov	r5, fp
    4468:	1a82      	subs	r2, r0, r2
    446a:	4095      	lsls	r5, r2
    446c:	4329      	orrs	r1, r5
    446e:	1e4a      	subs	r2, r1, #1
    4470:	4191      	sbcs	r1, r2
    4472:	4319      	orrs	r1, r3
    4474:	2307      	movs	r3, #7
    4476:	2200      	movs	r2, #0
    4478:	400b      	ands	r3, r1
    447a:	d009      	beq.n	4490 <__aeabi_ddiv+0x618>
    447c:	230f      	movs	r3, #15
    447e:	2200      	movs	r2, #0
    4480:	400b      	ands	r3, r1
    4482:	0008      	movs	r0, r1
    4484:	2b04      	cmp	r3, #4
    4486:	d1bd      	bne.n	4404 <__aeabi_ddiv+0x58c>
    4488:	0001      	movs	r1, r0
    448a:	0753      	lsls	r3, r2, #29
    448c:	0252      	lsls	r2, r2, #9
    448e:	0b12      	lsrs	r2, r2, #12
    4490:	08c9      	lsrs	r1, r1, #3
    4492:	4319      	orrs	r1, r3
    4494:	2301      	movs	r3, #1
    4496:	4688      	mov	r8, r1
    4498:	9902      	ldr	r1, [sp, #8]
    449a:	2400      	movs	r4, #0
    449c:	4019      	ands	r1, r3
    449e:	468c      	mov	ip, r1
    44a0:	e5b8      	b.n	4014 <__aeabi_ddiv+0x19c>
    44a2:	4552      	cmp	r2, sl
    44a4:	d8be      	bhi.n	4424 <__aeabi_ddiv+0x5ac>
    44a6:	468b      	mov	fp, r1
    44a8:	2500      	movs	r5, #0
    44aa:	e660      	b.n	416e <__aeabi_ddiv+0x2f6>
    44ac:	9d03      	ldr	r5, [sp, #12]
    44ae:	429d      	cmp	r5, r3
    44b0:	d3c6      	bcc.n	4440 <__aeabi_ddiv+0x5c8>
    44b2:	0011      	movs	r1, r2
    44b4:	e762      	b.n	437c <__aeabi_ddiv+0x504>
    44b6:	2500      	movs	r5, #0
    44b8:	e7d8      	b.n	446c <__aeabi_ddiv+0x5f4>
    44ba:	2280      	movs	r2, #128	; 0x80
    44bc:	465b      	mov	r3, fp
    44be:	0312      	lsls	r2, r2, #12
    44c0:	431a      	orrs	r2, r3
    44c2:	9b01      	ldr	r3, [sp, #4]
    44c4:	0312      	lsls	r2, r2, #12
    44c6:	0b12      	lsrs	r2, r2, #12
    44c8:	469c      	mov	ip, r3
    44ca:	4688      	mov	r8, r1
    44cc:	4c03      	ldr	r4, [pc, #12]	; (44dc <__aeabi_ddiv+0x664>)
    44ce:	e5a1      	b.n	4014 <__aeabi_ddiv+0x19c>
    44d0:	000003ff 	.word	0x000003ff
    44d4:	feffffff 	.word	0xfeffffff
    44d8:	000007fe 	.word	0x000007fe
    44dc:	000007ff 	.word	0x000007ff

000044e0 <__aeabi_dmul>:
    44e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    44e2:	4657      	mov	r7, sl
    44e4:	4645      	mov	r5, r8
    44e6:	46de      	mov	lr, fp
    44e8:	464e      	mov	r6, r9
    44ea:	b5e0      	push	{r5, r6, r7, lr}
    44ec:	030c      	lsls	r4, r1, #12
    44ee:	4698      	mov	r8, r3
    44f0:	004e      	lsls	r6, r1, #1
    44f2:	0b23      	lsrs	r3, r4, #12
    44f4:	b087      	sub	sp, #28
    44f6:	0007      	movs	r7, r0
    44f8:	4692      	mov	sl, r2
    44fa:	469b      	mov	fp, r3
    44fc:	0d76      	lsrs	r6, r6, #21
    44fe:	0fcd      	lsrs	r5, r1, #31
    4500:	2e00      	cmp	r6, #0
    4502:	d06b      	beq.n	45dc <__aeabi_dmul+0xfc>
    4504:	4b6d      	ldr	r3, [pc, #436]	; (46bc <__aeabi_dmul+0x1dc>)
    4506:	429e      	cmp	r6, r3
    4508:	d035      	beq.n	4576 <__aeabi_dmul+0x96>
    450a:	2480      	movs	r4, #128	; 0x80
    450c:	465b      	mov	r3, fp
    450e:	0f42      	lsrs	r2, r0, #29
    4510:	0424      	lsls	r4, r4, #16
    4512:	00db      	lsls	r3, r3, #3
    4514:	4314      	orrs	r4, r2
    4516:	431c      	orrs	r4, r3
    4518:	00c3      	lsls	r3, r0, #3
    451a:	4699      	mov	r9, r3
    451c:	4b68      	ldr	r3, [pc, #416]	; (46c0 <__aeabi_dmul+0x1e0>)
    451e:	46a3      	mov	fp, r4
    4520:	469c      	mov	ip, r3
    4522:	2300      	movs	r3, #0
    4524:	2700      	movs	r7, #0
    4526:	4466      	add	r6, ip
    4528:	9302      	str	r3, [sp, #8]
    452a:	4643      	mov	r3, r8
    452c:	031c      	lsls	r4, r3, #12
    452e:	005a      	lsls	r2, r3, #1
    4530:	0fdb      	lsrs	r3, r3, #31
    4532:	4650      	mov	r0, sl
    4534:	0b24      	lsrs	r4, r4, #12
    4536:	0d52      	lsrs	r2, r2, #21
    4538:	4698      	mov	r8, r3
    453a:	d100      	bne.n	453e <__aeabi_dmul+0x5e>
    453c:	e076      	b.n	462c <__aeabi_dmul+0x14c>
    453e:	4b5f      	ldr	r3, [pc, #380]	; (46bc <__aeabi_dmul+0x1dc>)
    4540:	429a      	cmp	r2, r3
    4542:	d06d      	beq.n	4620 <__aeabi_dmul+0x140>
    4544:	2380      	movs	r3, #128	; 0x80
    4546:	0f41      	lsrs	r1, r0, #29
    4548:	041b      	lsls	r3, r3, #16
    454a:	430b      	orrs	r3, r1
    454c:	495c      	ldr	r1, [pc, #368]	; (46c0 <__aeabi_dmul+0x1e0>)
    454e:	00e4      	lsls	r4, r4, #3
    4550:	468c      	mov	ip, r1
    4552:	431c      	orrs	r4, r3
    4554:	00c3      	lsls	r3, r0, #3
    4556:	2000      	movs	r0, #0
    4558:	4462      	add	r2, ip
    455a:	4641      	mov	r1, r8
    455c:	18b6      	adds	r6, r6, r2
    455e:	4069      	eors	r1, r5
    4560:	1c72      	adds	r2, r6, #1
    4562:	9101      	str	r1, [sp, #4]
    4564:	4694      	mov	ip, r2
    4566:	4307      	orrs	r7, r0
    4568:	2f0f      	cmp	r7, #15
    456a:	d900      	bls.n	456e <__aeabi_dmul+0x8e>
    456c:	e0b0      	b.n	46d0 <__aeabi_dmul+0x1f0>
    456e:	4a55      	ldr	r2, [pc, #340]	; (46c4 <__aeabi_dmul+0x1e4>)
    4570:	00bf      	lsls	r7, r7, #2
    4572:	59d2      	ldr	r2, [r2, r7]
    4574:	4697      	mov	pc, r2
    4576:	465b      	mov	r3, fp
    4578:	4303      	orrs	r3, r0
    457a:	4699      	mov	r9, r3
    457c:	d000      	beq.n	4580 <__aeabi_dmul+0xa0>
    457e:	e087      	b.n	4690 <__aeabi_dmul+0x1b0>
    4580:	2300      	movs	r3, #0
    4582:	469b      	mov	fp, r3
    4584:	3302      	adds	r3, #2
    4586:	2708      	movs	r7, #8
    4588:	9302      	str	r3, [sp, #8]
    458a:	e7ce      	b.n	452a <__aeabi_dmul+0x4a>
    458c:	4642      	mov	r2, r8
    458e:	9201      	str	r2, [sp, #4]
    4590:	2802      	cmp	r0, #2
    4592:	d067      	beq.n	4664 <__aeabi_dmul+0x184>
    4594:	2803      	cmp	r0, #3
    4596:	d100      	bne.n	459a <__aeabi_dmul+0xba>
    4598:	e20e      	b.n	49b8 <__aeabi_dmul+0x4d8>
    459a:	2801      	cmp	r0, #1
    459c:	d000      	beq.n	45a0 <__aeabi_dmul+0xc0>
    459e:	e162      	b.n	4866 <__aeabi_dmul+0x386>
    45a0:	2300      	movs	r3, #0
    45a2:	2400      	movs	r4, #0
    45a4:	2200      	movs	r2, #0
    45a6:	4699      	mov	r9, r3
    45a8:	9901      	ldr	r1, [sp, #4]
    45aa:	4001      	ands	r1, r0
    45ac:	b2cd      	uxtb	r5, r1
    45ae:	2100      	movs	r1, #0
    45b0:	0312      	lsls	r2, r2, #12
    45b2:	0d0b      	lsrs	r3, r1, #20
    45b4:	0b12      	lsrs	r2, r2, #12
    45b6:	051b      	lsls	r3, r3, #20
    45b8:	4313      	orrs	r3, r2
    45ba:	4a43      	ldr	r2, [pc, #268]	; (46c8 <__aeabi_dmul+0x1e8>)
    45bc:	0524      	lsls	r4, r4, #20
    45be:	4013      	ands	r3, r2
    45c0:	431c      	orrs	r4, r3
    45c2:	0064      	lsls	r4, r4, #1
    45c4:	07ed      	lsls	r5, r5, #31
    45c6:	0864      	lsrs	r4, r4, #1
    45c8:	432c      	orrs	r4, r5
    45ca:	4648      	mov	r0, r9
    45cc:	0021      	movs	r1, r4
    45ce:	b007      	add	sp, #28
    45d0:	bc3c      	pop	{r2, r3, r4, r5}
    45d2:	4690      	mov	r8, r2
    45d4:	4699      	mov	r9, r3
    45d6:	46a2      	mov	sl, r4
    45d8:	46ab      	mov	fp, r5
    45da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    45dc:	4303      	orrs	r3, r0
    45de:	4699      	mov	r9, r3
    45e0:	d04f      	beq.n	4682 <__aeabi_dmul+0x1a2>
    45e2:	465b      	mov	r3, fp
    45e4:	2b00      	cmp	r3, #0
    45e6:	d100      	bne.n	45ea <__aeabi_dmul+0x10a>
    45e8:	e189      	b.n	48fe <__aeabi_dmul+0x41e>
    45ea:	4658      	mov	r0, fp
    45ec:	f000 fe4c 	bl	5288 <__clzsi2>
    45f0:	0003      	movs	r3, r0
    45f2:	3b0b      	subs	r3, #11
    45f4:	2b1c      	cmp	r3, #28
    45f6:	dd00      	ble.n	45fa <__aeabi_dmul+0x11a>
    45f8:	e17a      	b.n	48f0 <__aeabi_dmul+0x410>
    45fa:	221d      	movs	r2, #29
    45fc:	1ad3      	subs	r3, r2, r3
    45fe:	003a      	movs	r2, r7
    4600:	0001      	movs	r1, r0
    4602:	465c      	mov	r4, fp
    4604:	40da      	lsrs	r2, r3
    4606:	3908      	subs	r1, #8
    4608:	408c      	lsls	r4, r1
    460a:	0013      	movs	r3, r2
    460c:	408f      	lsls	r7, r1
    460e:	4323      	orrs	r3, r4
    4610:	469b      	mov	fp, r3
    4612:	46b9      	mov	r9, r7
    4614:	2300      	movs	r3, #0
    4616:	4e2d      	ldr	r6, [pc, #180]	; (46cc <__aeabi_dmul+0x1ec>)
    4618:	2700      	movs	r7, #0
    461a:	1a36      	subs	r6, r6, r0
    461c:	9302      	str	r3, [sp, #8]
    461e:	e784      	b.n	452a <__aeabi_dmul+0x4a>
    4620:	4653      	mov	r3, sl
    4622:	4323      	orrs	r3, r4
    4624:	d12a      	bne.n	467c <__aeabi_dmul+0x19c>
    4626:	2400      	movs	r4, #0
    4628:	2002      	movs	r0, #2
    462a:	e796      	b.n	455a <__aeabi_dmul+0x7a>
    462c:	4653      	mov	r3, sl
    462e:	4323      	orrs	r3, r4
    4630:	d020      	beq.n	4674 <__aeabi_dmul+0x194>
    4632:	2c00      	cmp	r4, #0
    4634:	d100      	bne.n	4638 <__aeabi_dmul+0x158>
    4636:	e157      	b.n	48e8 <__aeabi_dmul+0x408>
    4638:	0020      	movs	r0, r4
    463a:	f000 fe25 	bl	5288 <__clzsi2>
    463e:	0003      	movs	r3, r0
    4640:	3b0b      	subs	r3, #11
    4642:	2b1c      	cmp	r3, #28
    4644:	dd00      	ble.n	4648 <__aeabi_dmul+0x168>
    4646:	e149      	b.n	48dc <__aeabi_dmul+0x3fc>
    4648:	211d      	movs	r1, #29
    464a:	1acb      	subs	r3, r1, r3
    464c:	4651      	mov	r1, sl
    464e:	0002      	movs	r2, r0
    4650:	40d9      	lsrs	r1, r3
    4652:	4653      	mov	r3, sl
    4654:	3a08      	subs	r2, #8
    4656:	4094      	lsls	r4, r2
    4658:	4093      	lsls	r3, r2
    465a:	430c      	orrs	r4, r1
    465c:	4a1b      	ldr	r2, [pc, #108]	; (46cc <__aeabi_dmul+0x1ec>)
    465e:	1a12      	subs	r2, r2, r0
    4660:	2000      	movs	r0, #0
    4662:	e77a      	b.n	455a <__aeabi_dmul+0x7a>
    4664:	2501      	movs	r5, #1
    4666:	9b01      	ldr	r3, [sp, #4]
    4668:	4c14      	ldr	r4, [pc, #80]	; (46bc <__aeabi_dmul+0x1dc>)
    466a:	401d      	ands	r5, r3
    466c:	2300      	movs	r3, #0
    466e:	2200      	movs	r2, #0
    4670:	4699      	mov	r9, r3
    4672:	e79c      	b.n	45ae <__aeabi_dmul+0xce>
    4674:	2400      	movs	r4, #0
    4676:	2200      	movs	r2, #0
    4678:	2001      	movs	r0, #1
    467a:	e76e      	b.n	455a <__aeabi_dmul+0x7a>
    467c:	4653      	mov	r3, sl
    467e:	2003      	movs	r0, #3
    4680:	e76b      	b.n	455a <__aeabi_dmul+0x7a>
    4682:	2300      	movs	r3, #0
    4684:	469b      	mov	fp, r3
    4686:	3301      	adds	r3, #1
    4688:	2704      	movs	r7, #4
    468a:	2600      	movs	r6, #0
    468c:	9302      	str	r3, [sp, #8]
    468e:	e74c      	b.n	452a <__aeabi_dmul+0x4a>
    4690:	2303      	movs	r3, #3
    4692:	4681      	mov	r9, r0
    4694:	270c      	movs	r7, #12
    4696:	9302      	str	r3, [sp, #8]
    4698:	e747      	b.n	452a <__aeabi_dmul+0x4a>
    469a:	2280      	movs	r2, #128	; 0x80
    469c:	2300      	movs	r3, #0
    469e:	2500      	movs	r5, #0
    46a0:	0312      	lsls	r2, r2, #12
    46a2:	4699      	mov	r9, r3
    46a4:	4c05      	ldr	r4, [pc, #20]	; (46bc <__aeabi_dmul+0x1dc>)
    46a6:	e782      	b.n	45ae <__aeabi_dmul+0xce>
    46a8:	465c      	mov	r4, fp
    46aa:	464b      	mov	r3, r9
    46ac:	9802      	ldr	r0, [sp, #8]
    46ae:	e76f      	b.n	4590 <__aeabi_dmul+0xb0>
    46b0:	465c      	mov	r4, fp
    46b2:	464b      	mov	r3, r9
    46b4:	9501      	str	r5, [sp, #4]
    46b6:	9802      	ldr	r0, [sp, #8]
    46b8:	e76a      	b.n	4590 <__aeabi_dmul+0xb0>
    46ba:	46c0      	nop			; (mov r8, r8)
    46bc:	000007ff 	.word	0x000007ff
    46c0:	fffffc01 	.word	0xfffffc01
    46c4:	0000ec34 	.word	0x0000ec34
    46c8:	800fffff 	.word	0x800fffff
    46cc:	fffffc0d 	.word	0xfffffc0d
    46d0:	464a      	mov	r2, r9
    46d2:	4649      	mov	r1, r9
    46d4:	0c17      	lsrs	r7, r2, #16
    46d6:	0c1a      	lsrs	r2, r3, #16
    46d8:	041b      	lsls	r3, r3, #16
    46da:	0c1b      	lsrs	r3, r3, #16
    46dc:	0408      	lsls	r0, r1, #16
    46de:	0019      	movs	r1, r3
    46e0:	0c00      	lsrs	r0, r0, #16
    46e2:	4341      	muls	r1, r0
    46e4:	0015      	movs	r5, r2
    46e6:	4688      	mov	r8, r1
    46e8:	0019      	movs	r1, r3
    46ea:	437d      	muls	r5, r7
    46ec:	4379      	muls	r1, r7
    46ee:	9503      	str	r5, [sp, #12]
    46f0:	4689      	mov	r9, r1
    46f2:	0029      	movs	r1, r5
    46f4:	0015      	movs	r5, r2
    46f6:	4345      	muls	r5, r0
    46f8:	444d      	add	r5, r9
    46fa:	9502      	str	r5, [sp, #8]
    46fc:	4645      	mov	r5, r8
    46fe:	0c2d      	lsrs	r5, r5, #16
    4700:	46aa      	mov	sl, r5
    4702:	9d02      	ldr	r5, [sp, #8]
    4704:	4455      	add	r5, sl
    4706:	45a9      	cmp	r9, r5
    4708:	d906      	bls.n	4718 <__aeabi_dmul+0x238>
    470a:	468a      	mov	sl, r1
    470c:	2180      	movs	r1, #128	; 0x80
    470e:	0249      	lsls	r1, r1, #9
    4710:	4689      	mov	r9, r1
    4712:	44ca      	add	sl, r9
    4714:	4651      	mov	r1, sl
    4716:	9103      	str	r1, [sp, #12]
    4718:	0c29      	lsrs	r1, r5, #16
    471a:	9104      	str	r1, [sp, #16]
    471c:	4641      	mov	r1, r8
    471e:	0409      	lsls	r1, r1, #16
    4720:	042d      	lsls	r5, r5, #16
    4722:	0c09      	lsrs	r1, r1, #16
    4724:	4688      	mov	r8, r1
    4726:	0029      	movs	r1, r5
    4728:	0c25      	lsrs	r5, r4, #16
    472a:	0424      	lsls	r4, r4, #16
    472c:	4441      	add	r1, r8
    472e:	0c24      	lsrs	r4, r4, #16
    4730:	9105      	str	r1, [sp, #20]
    4732:	0021      	movs	r1, r4
    4734:	4341      	muls	r1, r0
    4736:	4688      	mov	r8, r1
    4738:	0021      	movs	r1, r4
    473a:	4379      	muls	r1, r7
    473c:	468a      	mov	sl, r1
    473e:	4368      	muls	r0, r5
    4740:	4641      	mov	r1, r8
    4742:	4450      	add	r0, sl
    4744:	4681      	mov	r9, r0
    4746:	0c08      	lsrs	r0, r1, #16
    4748:	4448      	add	r0, r9
    474a:	436f      	muls	r7, r5
    474c:	4582      	cmp	sl, r0
    474e:	d903      	bls.n	4758 <__aeabi_dmul+0x278>
    4750:	2180      	movs	r1, #128	; 0x80
    4752:	0249      	lsls	r1, r1, #9
    4754:	4689      	mov	r9, r1
    4756:	444f      	add	r7, r9
    4758:	0c01      	lsrs	r1, r0, #16
    475a:	4689      	mov	r9, r1
    475c:	0039      	movs	r1, r7
    475e:	4449      	add	r1, r9
    4760:	9102      	str	r1, [sp, #8]
    4762:	4641      	mov	r1, r8
    4764:	040f      	lsls	r7, r1, #16
    4766:	9904      	ldr	r1, [sp, #16]
    4768:	0c3f      	lsrs	r7, r7, #16
    476a:	4688      	mov	r8, r1
    476c:	0400      	lsls	r0, r0, #16
    476e:	19c0      	adds	r0, r0, r7
    4770:	4480      	add	r8, r0
    4772:	4641      	mov	r1, r8
    4774:	9104      	str	r1, [sp, #16]
    4776:	4659      	mov	r1, fp
    4778:	0c0f      	lsrs	r7, r1, #16
    477a:	0409      	lsls	r1, r1, #16
    477c:	0c09      	lsrs	r1, r1, #16
    477e:	4688      	mov	r8, r1
    4780:	4359      	muls	r1, r3
    4782:	468a      	mov	sl, r1
    4784:	0039      	movs	r1, r7
    4786:	4351      	muls	r1, r2
    4788:	4689      	mov	r9, r1
    478a:	4641      	mov	r1, r8
    478c:	434a      	muls	r2, r1
    478e:	4651      	mov	r1, sl
    4790:	0c09      	lsrs	r1, r1, #16
    4792:	468b      	mov	fp, r1
    4794:	437b      	muls	r3, r7
    4796:	18d2      	adds	r2, r2, r3
    4798:	445a      	add	r2, fp
    479a:	4293      	cmp	r3, r2
    479c:	d903      	bls.n	47a6 <__aeabi_dmul+0x2c6>
    479e:	2380      	movs	r3, #128	; 0x80
    47a0:	025b      	lsls	r3, r3, #9
    47a2:	469b      	mov	fp, r3
    47a4:	44d9      	add	r9, fp
    47a6:	4651      	mov	r1, sl
    47a8:	0409      	lsls	r1, r1, #16
    47aa:	0c09      	lsrs	r1, r1, #16
    47ac:	468a      	mov	sl, r1
    47ae:	4641      	mov	r1, r8
    47b0:	4361      	muls	r1, r4
    47b2:	437c      	muls	r4, r7
    47b4:	0c13      	lsrs	r3, r2, #16
    47b6:	0412      	lsls	r2, r2, #16
    47b8:	444b      	add	r3, r9
    47ba:	4452      	add	r2, sl
    47bc:	46a1      	mov	r9, r4
    47be:	468a      	mov	sl, r1
    47c0:	003c      	movs	r4, r7
    47c2:	4641      	mov	r1, r8
    47c4:	436c      	muls	r4, r5
    47c6:	434d      	muls	r5, r1
    47c8:	4651      	mov	r1, sl
    47ca:	444d      	add	r5, r9
    47cc:	0c0f      	lsrs	r7, r1, #16
    47ce:	197d      	adds	r5, r7, r5
    47d0:	45a9      	cmp	r9, r5
    47d2:	d903      	bls.n	47dc <__aeabi_dmul+0x2fc>
    47d4:	2180      	movs	r1, #128	; 0x80
    47d6:	0249      	lsls	r1, r1, #9
    47d8:	4688      	mov	r8, r1
    47da:	4444      	add	r4, r8
    47dc:	9f04      	ldr	r7, [sp, #16]
    47de:	9903      	ldr	r1, [sp, #12]
    47e0:	46b8      	mov	r8, r7
    47e2:	4441      	add	r1, r8
    47e4:	468b      	mov	fp, r1
    47e6:	4583      	cmp	fp, r0
    47e8:	4180      	sbcs	r0, r0
    47ea:	4241      	negs	r1, r0
    47ec:	4688      	mov	r8, r1
    47ee:	4651      	mov	r1, sl
    47f0:	0408      	lsls	r0, r1, #16
    47f2:	042f      	lsls	r7, r5, #16
    47f4:	0c00      	lsrs	r0, r0, #16
    47f6:	183f      	adds	r7, r7, r0
    47f8:	4658      	mov	r0, fp
    47fa:	9902      	ldr	r1, [sp, #8]
    47fc:	1810      	adds	r0, r2, r0
    47fe:	4689      	mov	r9, r1
    4800:	4290      	cmp	r0, r2
    4802:	4192      	sbcs	r2, r2
    4804:	444f      	add	r7, r9
    4806:	46ba      	mov	sl, r7
    4808:	4252      	negs	r2, r2
    480a:	4699      	mov	r9, r3
    480c:	4693      	mov	fp, r2
    480e:	44c2      	add	sl, r8
    4810:	44d1      	add	r9, sl
    4812:	44cb      	add	fp, r9
    4814:	428f      	cmp	r7, r1
    4816:	41bf      	sbcs	r7, r7
    4818:	45c2      	cmp	sl, r8
    481a:	4189      	sbcs	r1, r1
    481c:	4599      	cmp	r9, r3
    481e:	419b      	sbcs	r3, r3
    4820:	4593      	cmp	fp, r2
    4822:	4192      	sbcs	r2, r2
    4824:	427f      	negs	r7, r7
    4826:	4249      	negs	r1, r1
    4828:	0c2d      	lsrs	r5, r5, #16
    482a:	4252      	negs	r2, r2
    482c:	430f      	orrs	r7, r1
    482e:	425b      	negs	r3, r3
    4830:	4313      	orrs	r3, r2
    4832:	197f      	adds	r7, r7, r5
    4834:	18ff      	adds	r7, r7, r3
    4836:	465b      	mov	r3, fp
    4838:	193c      	adds	r4, r7, r4
    483a:	0ddb      	lsrs	r3, r3, #23
    483c:	9a05      	ldr	r2, [sp, #20]
    483e:	0264      	lsls	r4, r4, #9
    4840:	431c      	orrs	r4, r3
    4842:	0243      	lsls	r3, r0, #9
    4844:	4313      	orrs	r3, r2
    4846:	1e5d      	subs	r5, r3, #1
    4848:	41ab      	sbcs	r3, r5
    484a:	465a      	mov	r2, fp
    484c:	0dc0      	lsrs	r0, r0, #23
    484e:	4303      	orrs	r3, r0
    4850:	0252      	lsls	r2, r2, #9
    4852:	4313      	orrs	r3, r2
    4854:	01e2      	lsls	r2, r4, #7
    4856:	d556      	bpl.n	4906 <__aeabi_dmul+0x426>
    4858:	2001      	movs	r0, #1
    485a:	085a      	lsrs	r2, r3, #1
    485c:	4003      	ands	r3, r0
    485e:	4313      	orrs	r3, r2
    4860:	07e2      	lsls	r2, r4, #31
    4862:	4313      	orrs	r3, r2
    4864:	0864      	lsrs	r4, r4, #1
    4866:	485a      	ldr	r0, [pc, #360]	; (49d0 <__aeabi_dmul+0x4f0>)
    4868:	4460      	add	r0, ip
    486a:	2800      	cmp	r0, #0
    486c:	dd4d      	ble.n	490a <__aeabi_dmul+0x42a>
    486e:	075a      	lsls	r2, r3, #29
    4870:	d009      	beq.n	4886 <__aeabi_dmul+0x3a6>
    4872:	220f      	movs	r2, #15
    4874:	401a      	ands	r2, r3
    4876:	2a04      	cmp	r2, #4
    4878:	d005      	beq.n	4886 <__aeabi_dmul+0x3a6>
    487a:	1d1a      	adds	r2, r3, #4
    487c:	429a      	cmp	r2, r3
    487e:	419b      	sbcs	r3, r3
    4880:	425b      	negs	r3, r3
    4882:	18e4      	adds	r4, r4, r3
    4884:	0013      	movs	r3, r2
    4886:	01e2      	lsls	r2, r4, #7
    4888:	d504      	bpl.n	4894 <__aeabi_dmul+0x3b4>
    488a:	2080      	movs	r0, #128	; 0x80
    488c:	4a51      	ldr	r2, [pc, #324]	; (49d4 <__aeabi_dmul+0x4f4>)
    488e:	00c0      	lsls	r0, r0, #3
    4890:	4014      	ands	r4, r2
    4892:	4460      	add	r0, ip
    4894:	4a50      	ldr	r2, [pc, #320]	; (49d8 <__aeabi_dmul+0x4f8>)
    4896:	4290      	cmp	r0, r2
    4898:	dd00      	ble.n	489c <__aeabi_dmul+0x3bc>
    489a:	e6e3      	b.n	4664 <__aeabi_dmul+0x184>
    489c:	2501      	movs	r5, #1
    489e:	08db      	lsrs	r3, r3, #3
    48a0:	0762      	lsls	r2, r4, #29
    48a2:	431a      	orrs	r2, r3
    48a4:	0264      	lsls	r4, r4, #9
    48a6:	9b01      	ldr	r3, [sp, #4]
    48a8:	4691      	mov	r9, r2
    48aa:	0b22      	lsrs	r2, r4, #12
    48ac:	0544      	lsls	r4, r0, #21
    48ae:	0d64      	lsrs	r4, r4, #21
    48b0:	401d      	ands	r5, r3
    48b2:	e67c      	b.n	45ae <__aeabi_dmul+0xce>
    48b4:	2280      	movs	r2, #128	; 0x80
    48b6:	4659      	mov	r1, fp
    48b8:	0312      	lsls	r2, r2, #12
    48ba:	4211      	tst	r1, r2
    48bc:	d008      	beq.n	48d0 <__aeabi_dmul+0x3f0>
    48be:	4214      	tst	r4, r2
    48c0:	d106      	bne.n	48d0 <__aeabi_dmul+0x3f0>
    48c2:	4322      	orrs	r2, r4
    48c4:	0312      	lsls	r2, r2, #12
    48c6:	0b12      	lsrs	r2, r2, #12
    48c8:	4645      	mov	r5, r8
    48ca:	4699      	mov	r9, r3
    48cc:	4c43      	ldr	r4, [pc, #268]	; (49dc <__aeabi_dmul+0x4fc>)
    48ce:	e66e      	b.n	45ae <__aeabi_dmul+0xce>
    48d0:	465b      	mov	r3, fp
    48d2:	431a      	orrs	r2, r3
    48d4:	0312      	lsls	r2, r2, #12
    48d6:	0b12      	lsrs	r2, r2, #12
    48d8:	4c40      	ldr	r4, [pc, #256]	; (49dc <__aeabi_dmul+0x4fc>)
    48da:	e668      	b.n	45ae <__aeabi_dmul+0xce>
    48dc:	0003      	movs	r3, r0
    48de:	4654      	mov	r4, sl
    48e0:	3b28      	subs	r3, #40	; 0x28
    48e2:	409c      	lsls	r4, r3
    48e4:	2300      	movs	r3, #0
    48e6:	e6b9      	b.n	465c <__aeabi_dmul+0x17c>
    48e8:	f000 fcce 	bl	5288 <__clzsi2>
    48ec:	3020      	adds	r0, #32
    48ee:	e6a6      	b.n	463e <__aeabi_dmul+0x15e>
    48f0:	0003      	movs	r3, r0
    48f2:	3b28      	subs	r3, #40	; 0x28
    48f4:	409f      	lsls	r7, r3
    48f6:	2300      	movs	r3, #0
    48f8:	46bb      	mov	fp, r7
    48fa:	4699      	mov	r9, r3
    48fc:	e68a      	b.n	4614 <__aeabi_dmul+0x134>
    48fe:	f000 fcc3 	bl	5288 <__clzsi2>
    4902:	3020      	adds	r0, #32
    4904:	e674      	b.n	45f0 <__aeabi_dmul+0x110>
    4906:	46b4      	mov	ip, r6
    4908:	e7ad      	b.n	4866 <__aeabi_dmul+0x386>
    490a:	2501      	movs	r5, #1
    490c:	1a2a      	subs	r2, r5, r0
    490e:	2a38      	cmp	r2, #56	; 0x38
    4910:	dd06      	ble.n	4920 <__aeabi_dmul+0x440>
    4912:	9b01      	ldr	r3, [sp, #4]
    4914:	2400      	movs	r4, #0
    4916:	401d      	ands	r5, r3
    4918:	2300      	movs	r3, #0
    491a:	2200      	movs	r2, #0
    491c:	4699      	mov	r9, r3
    491e:	e646      	b.n	45ae <__aeabi_dmul+0xce>
    4920:	2a1f      	cmp	r2, #31
    4922:	dc21      	bgt.n	4968 <__aeabi_dmul+0x488>
    4924:	2520      	movs	r5, #32
    4926:	0020      	movs	r0, r4
    4928:	1aad      	subs	r5, r5, r2
    492a:	001e      	movs	r6, r3
    492c:	40ab      	lsls	r3, r5
    492e:	40a8      	lsls	r0, r5
    4930:	40d6      	lsrs	r6, r2
    4932:	1e5d      	subs	r5, r3, #1
    4934:	41ab      	sbcs	r3, r5
    4936:	4330      	orrs	r0, r6
    4938:	4318      	orrs	r0, r3
    493a:	40d4      	lsrs	r4, r2
    493c:	0743      	lsls	r3, r0, #29
    493e:	d009      	beq.n	4954 <__aeabi_dmul+0x474>
    4940:	230f      	movs	r3, #15
    4942:	4003      	ands	r3, r0
    4944:	2b04      	cmp	r3, #4
    4946:	d005      	beq.n	4954 <__aeabi_dmul+0x474>
    4948:	0003      	movs	r3, r0
    494a:	1d18      	adds	r0, r3, #4
    494c:	4298      	cmp	r0, r3
    494e:	419b      	sbcs	r3, r3
    4950:	425b      	negs	r3, r3
    4952:	18e4      	adds	r4, r4, r3
    4954:	0223      	lsls	r3, r4, #8
    4956:	d521      	bpl.n	499c <__aeabi_dmul+0x4bc>
    4958:	2501      	movs	r5, #1
    495a:	9b01      	ldr	r3, [sp, #4]
    495c:	2401      	movs	r4, #1
    495e:	401d      	ands	r5, r3
    4960:	2300      	movs	r3, #0
    4962:	2200      	movs	r2, #0
    4964:	4699      	mov	r9, r3
    4966:	e622      	b.n	45ae <__aeabi_dmul+0xce>
    4968:	251f      	movs	r5, #31
    496a:	0021      	movs	r1, r4
    496c:	426d      	negs	r5, r5
    496e:	1a28      	subs	r0, r5, r0
    4970:	40c1      	lsrs	r1, r0
    4972:	0008      	movs	r0, r1
    4974:	2a20      	cmp	r2, #32
    4976:	d01d      	beq.n	49b4 <__aeabi_dmul+0x4d4>
    4978:	355f      	adds	r5, #95	; 0x5f
    497a:	1aaa      	subs	r2, r5, r2
    497c:	4094      	lsls	r4, r2
    497e:	4323      	orrs	r3, r4
    4980:	1e5c      	subs	r4, r3, #1
    4982:	41a3      	sbcs	r3, r4
    4984:	2507      	movs	r5, #7
    4986:	4303      	orrs	r3, r0
    4988:	401d      	ands	r5, r3
    498a:	2200      	movs	r2, #0
    498c:	2d00      	cmp	r5, #0
    498e:	d009      	beq.n	49a4 <__aeabi_dmul+0x4c4>
    4990:	220f      	movs	r2, #15
    4992:	2400      	movs	r4, #0
    4994:	401a      	ands	r2, r3
    4996:	0018      	movs	r0, r3
    4998:	2a04      	cmp	r2, #4
    499a:	d1d6      	bne.n	494a <__aeabi_dmul+0x46a>
    499c:	0003      	movs	r3, r0
    499e:	0765      	lsls	r5, r4, #29
    49a0:	0264      	lsls	r4, r4, #9
    49a2:	0b22      	lsrs	r2, r4, #12
    49a4:	08db      	lsrs	r3, r3, #3
    49a6:	432b      	orrs	r3, r5
    49a8:	2501      	movs	r5, #1
    49aa:	4699      	mov	r9, r3
    49ac:	9b01      	ldr	r3, [sp, #4]
    49ae:	2400      	movs	r4, #0
    49b0:	401d      	ands	r5, r3
    49b2:	e5fc      	b.n	45ae <__aeabi_dmul+0xce>
    49b4:	2400      	movs	r4, #0
    49b6:	e7e2      	b.n	497e <__aeabi_dmul+0x49e>
    49b8:	2280      	movs	r2, #128	; 0x80
    49ba:	2501      	movs	r5, #1
    49bc:	0312      	lsls	r2, r2, #12
    49be:	4322      	orrs	r2, r4
    49c0:	9901      	ldr	r1, [sp, #4]
    49c2:	0312      	lsls	r2, r2, #12
    49c4:	0b12      	lsrs	r2, r2, #12
    49c6:	400d      	ands	r5, r1
    49c8:	4699      	mov	r9, r3
    49ca:	4c04      	ldr	r4, [pc, #16]	; (49dc <__aeabi_dmul+0x4fc>)
    49cc:	e5ef      	b.n	45ae <__aeabi_dmul+0xce>
    49ce:	46c0      	nop			; (mov r8, r8)
    49d0:	000003ff 	.word	0x000003ff
    49d4:	feffffff 	.word	0xfeffffff
    49d8:	000007fe 	.word	0x000007fe
    49dc:	000007ff 	.word	0x000007ff

000049e0 <__aeabi_dsub>:
    49e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    49e2:	4646      	mov	r6, r8
    49e4:	46d6      	mov	lr, sl
    49e6:	464f      	mov	r7, r9
    49e8:	030c      	lsls	r4, r1, #12
    49ea:	b5c0      	push	{r6, r7, lr}
    49ec:	0fcd      	lsrs	r5, r1, #31
    49ee:	004e      	lsls	r6, r1, #1
    49f0:	0a61      	lsrs	r1, r4, #9
    49f2:	0f44      	lsrs	r4, r0, #29
    49f4:	430c      	orrs	r4, r1
    49f6:	00c1      	lsls	r1, r0, #3
    49f8:	0058      	lsls	r0, r3, #1
    49fa:	0d40      	lsrs	r0, r0, #21
    49fc:	4684      	mov	ip, r0
    49fe:	468a      	mov	sl, r1
    4a00:	000f      	movs	r7, r1
    4a02:	0319      	lsls	r1, r3, #12
    4a04:	0f50      	lsrs	r0, r2, #29
    4a06:	0a49      	lsrs	r1, r1, #9
    4a08:	4301      	orrs	r1, r0
    4a0a:	48c6      	ldr	r0, [pc, #792]	; (4d24 <__aeabi_dsub+0x344>)
    4a0c:	0d76      	lsrs	r6, r6, #21
    4a0e:	46a8      	mov	r8, r5
    4a10:	0fdb      	lsrs	r3, r3, #31
    4a12:	00d2      	lsls	r2, r2, #3
    4a14:	4584      	cmp	ip, r0
    4a16:	d100      	bne.n	4a1a <__aeabi_dsub+0x3a>
    4a18:	e0d8      	b.n	4bcc <__aeabi_dsub+0x1ec>
    4a1a:	2001      	movs	r0, #1
    4a1c:	4043      	eors	r3, r0
    4a1e:	42ab      	cmp	r3, r5
    4a20:	d100      	bne.n	4a24 <__aeabi_dsub+0x44>
    4a22:	e0a6      	b.n	4b72 <__aeabi_dsub+0x192>
    4a24:	4660      	mov	r0, ip
    4a26:	1a35      	subs	r5, r6, r0
    4a28:	2d00      	cmp	r5, #0
    4a2a:	dc00      	bgt.n	4a2e <__aeabi_dsub+0x4e>
    4a2c:	e105      	b.n	4c3a <__aeabi_dsub+0x25a>
    4a2e:	2800      	cmp	r0, #0
    4a30:	d110      	bne.n	4a54 <__aeabi_dsub+0x74>
    4a32:	000b      	movs	r3, r1
    4a34:	4313      	orrs	r3, r2
    4a36:	d100      	bne.n	4a3a <__aeabi_dsub+0x5a>
    4a38:	e0d7      	b.n	4bea <__aeabi_dsub+0x20a>
    4a3a:	1e6b      	subs	r3, r5, #1
    4a3c:	2b00      	cmp	r3, #0
    4a3e:	d000      	beq.n	4a42 <__aeabi_dsub+0x62>
    4a40:	e14b      	b.n	4cda <__aeabi_dsub+0x2fa>
    4a42:	4653      	mov	r3, sl
    4a44:	1a9f      	subs	r7, r3, r2
    4a46:	45ba      	cmp	sl, r7
    4a48:	4180      	sbcs	r0, r0
    4a4a:	1a64      	subs	r4, r4, r1
    4a4c:	4240      	negs	r0, r0
    4a4e:	1a24      	subs	r4, r4, r0
    4a50:	2601      	movs	r6, #1
    4a52:	e01e      	b.n	4a92 <__aeabi_dsub+0xb2>
    4a54:	4bb3      	ldr	r3, [pc, #716]	; (4d24 <__aeabi_dsub+0x344>)
    4a56:	429e      	cmp	r6, r3
    4a58:	d048      	beq.n	4aec <__aeabi_dsub+0x10c>
    4a5a:	2380      	movs	r3, #128	; 0x80
    4a5c:	041b      	lsls	r3, r3, #16
    4a5e:	4319      	orrs	r1, r3
    4a60:	2d38      	cmp	r5, #56	; 0x38
    4a62:	dd00      	ble.n	4a66 <__aeabi_dsub+0x86>
    4a64:	e119      	b.n	4c9a <__aeabi_dsub+0x2ba>
    4a66:	2d1f      	cmp	r5, #31
    4a68:	dd00      	ble.n	4a6c <__aeabi_dsub+0x8c>
    4a6a:	e14c      	b.n	4d06 <__aeabi_dsub+0x326>
    4a6c:	2320      	movs	r3, #32
    4a6e:	000f      	movs	r7, r1
    4a70:	1b5b      	subs	r3, r3, r5
    4a72:	0010      	movs	r0, r2
    4a74:	409a      	lsls	r2, r3
    4a76:	409f      	lsls	r7, r3
    4a78:	40e8      	lsrs	r0, r5
    4a7a:	1e53      	subs	r3, r2, #1
    4a7c:	419a      	sbcs	r2, r3
    4a7e:	40e9      	lsrs	r1, r5
    4a80:	4307      	orrs	r7, r0
    4a82:	4317      	orrs	r7, r2
    4a84:	4653      	mov	r3, sl
    4a86:	1bdf      	subs	r7, r3, r7
    4a88:	1a61      	subs	r1, r4, r1
    4a8a:	45ba      	cmp	sl, r7
    4a8c:	41a4      	sbcs	r4, r4
    4a8e:	4264      	negs	r4, r4
    4a90:	1b0c      	subs	r4, r1, r4
    4a92:	0223      	lsls	r3, r4, #8
    4a94:	d400      	bmi.n	4a98 <__aeabi_dsub+0xb8>
    4a96:	e0c5      	b.n	4c24 <__aeabi_dsub+0x244>
    4a98:	0264      	lsls	r4, r4, #9
    4a9a:	0a65      	lsrs	r5, r4, #9
    4a9c:	2d00      	cmp	r5, #0
    4a9e:	d100      	bne.n	4aa2 <__aeabi_dsub+0xc2>
    4aa0:	e0f6      	b.n	4c90 <__aeabi_dsub+0x2b0>
    4aa2:	0028      	movs	r0, r5
    4aa4:	f000 fbf0 	bl	5288 <__clzsi2>
    4aa8:	0003      	movs	r3, r0
    4aaa:	3b08      	subs	r3, #8
    4aac:	2b1f      	cmp	r3, #31
    4aae:	dd00      	ble.n	4ab2 <__aeabi_dsub+0xd2>
    4ab0:	e0e9      	b.n	4c86 <__aeabi_dsub+0x2a6>
    4ab2:	2220      	movs	r2, #32
    4ab4:	003c      	movs	r4, r7
    4ab6:	1ad2      	subs	r2, r2, r3
    4ab8:	409d      	lsls	r5, r3
    4aba:	40d4      	lsrs	r4, r2
    4abc:	409f      	lsls	r7, r3
    4abe:	4325      	orrs	r5, r4
    4ac0:	429e      	cmp	r6, r3
    4ac2:	dd00      	ble.n	4ac6 <__aeabi_dsub+0xe6>
    4ac4:	e0db      	b.n	4c7e <__aeabi_dsub+0x29e>
    4ac6:	1b9e      	subs	r6, r3, r6
    4ac8:	1c73      	adds	r3, r6, #1
    4aca:	2b1f      	cmp	r3, #31
    4acc:	dd00      	ble.n	4ad0 <__aeabi_dsub+0xf0>
    4ace:	e10a      	b.n	4ce6 <__aeabi_dsub+0x306>
    4ad0:	2220      	movs	r2, #32
    4ad2:	0038      	movs	r0, r7
    4ad4:	1ad2      	subs	r2, r2, r3
    4ad6:	0029      	movs	r1, r5
    4ad8:	4097      	lsls	r7, r2
    4ada:	002c      	movs	r4, r5
    4adc:	4091      	lsls	r1, r2
    4ade:	40d8      	lsrs	r0, r3
    4ae0:	1e7a      	subs	r2, r7, #1
    4ae2:	4197      	sbcs	r7, r2
    4ae4:	40dc      	lsrs	r4, r3
    4ae6:	2600      	movs	r6, #0
    4ae8:	4301      	orrs	r1, r0
    4aea:	430f      	orrs	r7, r1
    4aec:	077b      	lsls	r3, r7, #29
    4aee:	d009      	beq.n	4b04 <__aeabi_dsub+0x124>
    4af0:	230f      	movs	r3, #15
    4af2:	403b      	ands	r3, r7
    4af4:	2b04      	cmp	r3, #4
    4af6:	d005      	beq.n	4b04 <__aeabi_dsub+0x124>
    4af8:	1d3b      	adds	r3, r7, #4
    4afa:	42bb      	cmp	r3, r7
    4afc:	41bf      	sbcs	r7, r7
    4afe:	427f      	negs	r7, r7
    4b00:	19e4      	adds	r4, r4, r7
    4b02:	001f      	movs	r7, r3
    4b04:	0223      	lsls	r3, r4, #8
    4b06:	d525      	bpl.n	4b54 <__aeabi_dsub+0x174>
    4b08:	4b86      	ldr	r3, [pc, #536]	; (4d24 <__aeabi_dsub+0x344>)
    4b0a:	3601      	adds	r6, #1
    4b0c:	429e      	cmp	r6, r3
    4b0e:	d100      	bne.n	4b12 <__aeabi_dsub+0x132>
    4b10:	e0af      	b.n	4c72 <__aeabi_dsub+0x292>
    4b12:	4b85      	ldr	r3, [pc, #532]	; (4d28 <__aeabi_dsub+0x348>)
    4b14:	2501      	movs	r5, #1
    4b16:	401c      	ands	r4, r3
    4b18:	4643      	mov	r3, r8
    4b1a:	0762      	lsls	r2, r4, #29
    4b1c:	08ff      	lsrs	r7, r7, #3
    4b1e:	0264      	lsls	r4, r4, #9
    4b20:	0576      	lsls	r6, r6, #21
    4b22:	4317      	orrs	r7, r2
    4b24:	0b24      	lsrs	r4, r4, #12
    4b26:	0d76      	lsrs	r6, r6, #21
    4b28:	401d      	ands	r5, r3
    4b2a:	2100      	movs	r1, #0
    4b2c:	0324      	lsls	r4, r4, #12
    4b2e:	0b23      	lsrs	r3, r4, #12
    4b30:	0d0c      	lsrs	r4, r1, #20
    4b32:	4a7e      	ldr	r2, [pc, #504]	; (4d2c <__aeabi_dsub+0x34c>)
    4b34:	0524      	lsls	r4, r4, #20
    4b36:	431c      	orrs	r4, r3
    4b38:	4014      	ands	r4, r2
    4b3a:	0533      	lsls	r3, r6, #20
    4b3c:	4323      	orrs	r3, r4
    4b3e:	005b      	lsls	r3, r3, #1
    4b40:	07ed      	lsls	r5, r5, #31
    4b42:	085b      	lsrs	r3, r3, #1
    4b44:	432b      	orrs	r3, r5
    4b46:	0038      	movs	r0, r7
    4b48:	0019      	movs	r1, r3
    4b4a:	bc1c      	pop	{r2, r3, r4}
    4b4c:	4690      	mov	r8, r2
    4b4e:	4699      	mov	r9, r3
    4b50:	46a2      	mov	sl, r4
    4b52:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4b54:	2501      	movs	r5, #1
    4b56:	4643      	mov	r3, r8
    4b58:	0762      	lsls	r2, r4, #29
    4b5a:	08ff      	lsrs	r7, r7, #3
    4b5c:	4317      	orrs	r7, r2
    4b5e:	08e4      	lsrs	r4, r4, #3
    4b60:	401d      	ands	r5, r3
    4b62:	4b70      	ldr	r3, [pc, #448]	; (4d24 <__aeabi_dsub+0x344>)
    4b64:	429e      	cmp	r6, r3
    4b66:	d036      	beq.n	4bd6 <__aeabi_dsub+0x1f6>
    4b68:	0324      	lsls	r4, r4, #12
    4b6a:	0576      	lsls	r6, r6, #21
    4b6c:	0b24      	lsrs	r4, r4, #12
    4b6e:	0d76      	lsrs	r6, r6, #21
    4b70:	e7db      	b.n	4b2a <__aeabi_dsub+0x14a>
    4b72:	4663      	mov	r3, ip
    4b74:	1af3      	subs	r3, r6, r3
    4b76:	2b00      	cmp	r3, #0
    4b78:	dc00      	bgt.n	4b7c <__aeabi_dsub+0x19c>
    4b7a:	e094      	b.n	4ca6 <__aeabi_dsub+0x2c6>
    4b7c:	4660      	mov	r0, ip
    4b7e:	2800      	cmp	r0, #0
    4b80:	d035      	beq.n	4bee <__aeabi_dsub+0x20e>
    4b82:	4868      	ldr	r0, [pc, #416]	; (4d24 <__aeabi_dsub+0x344>)
    4b84:	4286      	cmp	r6, r0
    4b86:	d0b1      	beq.n	4aec <__aeabi_dsub+0x10c>
    4b88:	2780      	movs	r7, #128	; 0x80
    4b8a:	043f      	lsls	r7, r7, #16
    4b8c:	4339      	orrs	r1, r7
    4b8e:	2b38      	cmp	r3, #56	; 0x38
    4b90:	dc00      	bgt.n	4b94 <__aeabi_dsub+0x1b4>
    4b92:	e0fd      	b.n	4d90 <__aeabi_dsub+0x3b0>
    4b94:	430a      	orrs	r2, r1
    4b96:	0017      	movs	r7, r2
    4b98:	2100      	movs	r1, #0
    4b9a:	1e7a      	subs	r2, r7, #1
    4b9c:	4197      	sbcs	r7, r2
    4b9e:	4457      	add	r7, sl
    4ba0:	4557      	cmp	r7, sl
    4ba2:	4180      	sbcs	r0, r0
    4ba4:	1909      	adds	r1, r1, r4
    4ba6:	4244      	negs	r4, r0
    4ba8:	190c      	adds	r4, r1, r4
    4baa:	0223      	lsls	r3, r4, #8
    4bac:	d53a      	bpl.n	4c24 <__aeabi_dsub+0x244>
    4bae:	4b5d      	ldr	r3, [pc, #372]	; (4d24 <__aeabi_dsub+0x344>)
    4bb0:	3601      	adds	r6, #1
    4bb2:	429e      	cmp	r6, r3
    4bb4:	d100      	bne.n	4bb8 <__aeabi_dsub+0x1d8>
    4bb6:	e14b      	b.n	4e50 <__aeabi_dsub+0x470>
    4bb8:	2201      	movs	r2, #1
    4bba:	4b5b      	ldr	r3, [pc, #364]	; (4d28 <__aeabi_dsub+0x348>)
    4bbc:	401c      	ands	r4, r3
    4bbe:	087b      	lsrs	r3, r7, #1
    4bc0:	4017      	ands	r7, r2
    4bc2:	431f      	orrs	r7, r3
    4bc4:	07e2      	lsls	r2, r4, #31
    4bc6:	4317      	orrs	r7, r2
    4bc8:	0864      	lsrs	r4, r4, #1
    4bca:	e78f      	b.n	4aec <__aeabi_dsub+0x10c>
    4bcc:	0008      	movs	r0, r1
    4bce:	4310      	orrs	r0, r2
    4bd0:	d000      	beq.n	4bd4 <__aeabi_dsub+0x1f4>
    4bd2:	e724      	b.n	4a1e <__aeabi_dsub+0x3e>
    4bd4:	e721      	b.n	4a1a <__aeabi_dsub+0x3a>
    4bd6:	0023      	movs	r3, r4
    4bd8:	433b      	orrs	r3, r7
    4bda:	d100      	bne.n	4bde <__aeabi_dsub+0x1fe>
    4bdc:	e1b9      	b.n	4f52 <__aeabi_dsub+0x572>
    4bde:	2280      	movs	r2, #128	; 0x80
    4be0:	0312      	lsls	r2, r2, #12
    4be2:	4314      	orrs	r4, r2
    4be4:	0324      	lsls	r4, r4, #12
    4be6:	0b24      	lsrs	r4, r4, #12
    4be8:	e79f      	b.n	4b2a <__aeabi_dsub+0x14a>
    4bea:	002e      	movs	r6, r5
    4bec:	e77e      	b.n	4aec <__aeabi_dsub+0x10c>
    4bee:	0008      	movs	r0, r1
    4bf0:	4310      	orrs	r0, r2
    4bf2:	d100      	bne.n	4bf6 <__aeabi_dsub+0x216>
    4bf4:	e0ca      	b.n	4d8c <__aeabi_dsub+0x3ac>
    4bf6:	1e58      	subs	r0, r3, #1
    4bf8:	4684      	mov	ip, r0
    4bfa:	2800      	cmp	r0, #0
    4bfc:	d000      	beq.n	4c00 <__aeabi_dsub+0x220>
    4bfe:	e0e7      	b.n	4dd0 <__aeabi_dsub+0x3f0>
    4c00:	4452      	add	r2, sl
    4c02:	4552      	cmp	r2, sl
    4c04:	4180      	sbcs	r0, r0
    4c06:	1864      	adds	r4, r4, r1
    4c08:	4240      	negs	r0, r0
    4c0a:	1824      	adds	r4, r4, r0
    4c0c:	0017      	movs	r7, r2
    4c0e:	2601      	movs	r6, #1
    4c10:	0223      	lsls	r3, r4, #8
    4c12:	d507      	bpl.n	4c24 <__aeabi_dsub+0x244>
    4c14:	2602      	movs	r6, #2
    4c16:	e7cf      	b.n	4bb8 <__aeabi_dsub+0x1d8>
    4c18:	4664      	mov	r4, ip
    4c1a:	432c      	orrs	r4, r5
    4c1c:	d100      	bne.n	4c20 <__aeabi_dsub+0x240>
    4c1e:	e1b3      	b.n	4f88 <__aeabi_dsub+0x5a8>
    4c20:	002c      	movs	r4, r5
    4c22:	4667      	mov	r7, ip
    4c24:	077b      	lsls	r3, r7, #29
    4c26:	d000      	beq.n	4c2a <__aeabi_dsub+0x24a>
    4c28:	e762      	b.n	4af0 <__aeabi_dsub+0x110>
    4c2a:	0763      	lsls	r3, r4, #29
    4c2c:	08ff      	lsrs	r7, r7, #3
    4c2e:	431f      	orrs	r7, r3
    4c30:	2501      	movs	r5, #1
    4c32:	4643      	mov	r3, r8
    4c34:	08e4      	lsrs	r4, r4, #3
    4c36:	401d      	ands	r5, r3
    4c38:	e793      	b.n	4b62 <__aeabi_dsub+0x182>
    4c3a:	2d00      	cmp	r5, #0
    4c3c:	d178      	bne.n	4d30 <__aeabi_dsub+0x350>
    4c3e:	1c75      	adds	r5, r6, #1
    4c40:	056d      	lsls	r5, r5, #21
    4c42:	0d6d      	lsrs	r5, r5, #21
    4c44:	2d01      	cmp	r5, #1
    4c46:	dc00      	bgt.n	4c4a <__aeabi_dsub+0x26a>
    4c48:	e0f2      	b.n	4e30 <__aeabi_dsub+0x450>
    4c4a:	4650      	mov	r0, sl
    4c4c:	1a80      	subs	r0, r0, r2
    4c4e:	4582      	cmp	sl, r0
    4c50:	41bf      	sbcs	r7, r7
    4c52:	1a65      	subs	r5, r4, r1
    4c54:	427f      	negs	r7, r7
    4c56:	1bed      	subs	r5, r5, r7
    4c58:	4684      	mov	ip, r0
    4c5a:	0228      	lsls	r0, r5, #8
    4c5c:	d400      	bmi.n	4c60 <__aeabi_dsub+0x280>
    4c5e:	e08c      	b.n	4d7a <__aeabi_dsub+0x39a>
    4c60:	4650      	mov	r0, sl
    4c62:	1a17      	subs	r7, r2, r0
    4c64:	42ba      	cmp	r2, r7
    4c66:	4192      	sbcs	r2, r2
    4c68:	1b0c      	subs	r4, r1, r4
    4c6a:	4255      	negs	r5, r2
    4c6c:	1b65      	subs	r5, r4, r5
    4c6e:	4698      	mov	r8, r3
    4c70:	e714      	b.n	4a9c <__aeabi_dsub+0xbc>
    4c72:	2501      	movs	r5, #1
    4c74:	4643      	mov	r3, r8
    4c76:	2400      	movs	r4, #0
    4c78:	401d      	ands	r5, r3
    4c7a:	2700      	movs	r7, #0
    4c7c:	e755      	b.n	4b2a <__aeabi_dsub+0x14a>
    4c7e:	4c2a      	ldr	r4, [pc, #168]	; (4d28 <__aeabi_dsub+0x348>)
    4c80:	1af6      	subs	r6, r6, r3
    4c82:	402c      	ands	r4, r5
    4c84:	e732      	b.n	4aec <__aeabi_dsub+0x10c>
    4c86:	003d      	movs	r5, r7
    4c88:	3828      	subs	r0, #40	; 0x28
    4c8a:	4085      	lsls	r5, r0
    4c8c:	2700      	movs	r7, #0
    4c8e:	e717      	b.n	4ac0 <__aeabi_dsub+0xe0>
    4c90:	0038      	movs	r0, r7
    4c92:	f000 faf9 	bl	5288 <__clzsi2>
    4c96:	3020      	adds	r0, #32
    4c98:	e706      	b.n	4aa8 <__aeabi_dsub+0xc8>
    4c9a:	430a      	orrs	r2, r1
    4c9c:	0017      	movs	r7, r2
    4c9e:	2100      	movs	r1, #0
    4ca0:	1e7a      	subs	r2, r7, #1
    4ca2:	4197      	sbcs	r7, r2
    4ca4:	e6ee      	b.n	4a84 <__aeabi_dsub+0xa4>
    4ca6:	2b00      	cmp	r3, #0
    4ca8:	d000      	beq.n	4cac <__aeabi_dsub+0x2cc>
    4caa:	e0e5      	b.n	4e78 <__aeabi_dsub+0x498>
    4cac:	1c73      	adds	r3, r6, #1
    4cae:	469c      	mov	ip, r3
    4cb0:	055b      	lsls	r3, r3, #21
    4cb2:	0d5b      	lsrs	r3, r3, #21
    4cb4:	2b01      	cmp	r3, #1
    4cb6:	dc00      	bgt.n	4cba <__aeabi_dsub+0x2da>
    4cb8:	e09f      	b.n	4dfa <__aeabi_dsub+0x41a>
    4cba:	4b1a      	ldr	r3, [pc, #104]	; (4d24 <__aeabi_dsub+0x344>)
    4cbc:	459c      	cmp	ip, r3
    4cbe:	d100      	bne.n	4cc2 <__aeabi_dsub+0x2e2>
    4cc0:	e0c5      	b.n	4e4e <__aeabi_dsub+0x46e>
    4cc2:	4452      	add	r2, sl
    4cc4:	4552      	cmp	r2, sl
    4cc6:	4180      	sbcs	r0, r0
    4cc8:	1864      	adds	r4, r4, r1
    4cca:	4240      	negs	r0, r0
    4ccc:	1824      	adds	r4, r4, r0
    4cce:	07e7      	lsls	r7, r4, #31
    4cd0:	0852      	lsrs	r2, r2, #1
    4cd2:	4317      	orrs	r7, r2
    4cd4:	0864      	lsrs	r4, r4, #1
    4cd6:	4666      	mov	r6, ip
    4cd8:	e708      	b.n	4aec <__aeabi_dsub+0x10c>
    4cda:	4812      	ldr	r0, [pc, #72]	; (4d24 <__aeabi_dsub+0x344>)
    4cdc:	4285      	cmp	r5, r0
    4cde:	d100      	bne.n	4ce2 <__aeabi_dsub+0x302>
    4ce0:	e085      	b.n	4dee <__aeabi_dsub+0x40e>
    4ce2:	001d      	movs	r5, r3
    4ce4:	e6bc      	b.n	4a60 <__aeabi_dsub+0x80>
    4ce6:	0029      	movs	r1, r5
    4ce8:	3e1f      	subs	r6, #31
    4cea:	40f1      	lsrs	r1, r6
    4cec:	2b20      	cmp	r3, #32
    4cee:	d100      	bne.n	4cf2 <__aeabi_dsub+0x312>
    4cf0:	e07f      	b.n	4df2 <__aeabi_dsub+0x412>
    4cf2:	2240      	movs	r2, #64	; 0x40
    4cf4:	1ad3      	subs	r3, r2, r3
    4cf6:	409d      	lsls	r5, r3
    4cf8:	432f      	orrs	r7, r5
    4cfa:	1e7d      	subs	r5, r7, #1
    4cfc:	41af      	sbcs	r7, r5
    4cfe:	2400      	movs	r4, #0
    4d00:	430f      	orrs	r7, r1
    4d02:	2600      	movs	r6, #0
    4d04:	e78e      	b.n	4c24 <__aeabi_dsub+0x244>
    4d06:	002b      	movs	r3, r5
    4d08:	000f      	movs	r7, r1
    4d0a:	3b20      	subs	r3, #32
    4d0c:	40df      	lsrs	r7, r3
    4d0e:	2d20      	cmp	r5, #32
    4d10:	d071      	beq.n	4df6 <__aeabi_dsub+0x416>
    4d12:	2340      	movs	r3, #64	; 0x40
    4d14:	1b5d      	subs	r5, r3, r5
    4d16:	40a9      	lsls	r1, r5
    4d18:	430a      	orrs	r2, r1
    4d1a:	1e51      	subs	r1, r2, #1
    4d1c:	418a      	sbcs	r2, r1
    4d1e:	2100      	movs	r1, #0
    4d20:	4317      	orrs	r7, r2
    4d22:	e6af      	b.n	4a84 <__aeabi_dsub+0xa4>
    4d24:	000007ff 	.word	0x000007ff
    4d28:	ff7fffff 	.word	0xff7fffff
    4d2c:	800fffff 	.word	0x800fffff
    4d30:	2e00      	cmp	r6, #0
    4d32:	d03e      	beq.n	4db2 <__aeabi_dsub+0x3d2>
    4d34:	4eb3      	ldr	r6, [pc, #716]	; (5004 <__aeabi_dsub+0x624>)
    4d36:	45b4      	cmp	ip, r6
    4d38:	d045      	beq.n	4dc6 <__aeabi_dsub+0x3e6>
    4d3a:	2680      	movs	r6, #128	; 0x80
    4d3c:	0436      	lsls	r6, r6, #16
    4d3e:	426d      	negs	r5, r5
    4d40:	4334      	orrs	r4, r6
    4d42:	2d38      	cmp	r5, #56	; 0x38
    4d44:	dd00      	ble.n	4d48 <__aeabi_dsub+0x368>
    4d46:	e0a8      	b.n	4e9a <__aeabi_dsub+0x4ba>
    4d48:	2d1f      	cmp	r5, #31
    4d4a:	dd00      	ble.n	4d4e <__aeabi_dsub+0x36e>
    4d4c:	e11f      	b.n	4f8e <__aeabi_dsub+0x5ae>
    4d4e:	2620      	movs	r6, #32
    4d50:	0027      	movs	r7, r4
    4d52:	4650      	mov	r0, sl
    4d54:	1b76      	subs	r6, r6, r5
    4d56:	40b7      	lsls	r7, r6
    4d58:	40e8      	lsrs	r0, r5
    4d5a:	4307      	orrs	r7, r0
    4d5c:	4650      	mov	r0, sl
    4d5e:	40b0      	lsls	r0, r6
    4d60:	1e46      	subs	r6, r0, #1
    4d62:	41b0      	sbcs	r0, r6
    4d64:	40ec      	lsrs	r4, r5
    4d66:	4338      	orrs	r0, r7
    4d68:	1a17      	subs	r7, r2, r0
    4d6a:	42ba      	cmp	r2, r7
    4d6c:	4192      	sbcs	r2, r2
    4d6e:	1b0c      	subs	r4, r1, r4
    4d70:	4252      	negs	r2, r2
    4d72:	1aa4      	subs	r4, r4, r2
    4d74:	4666      	mov	r6, ip
    4d76:	4698      	mov	r8, r3
    4d78:	e68b      	b.n	4a92 <__aeabi_dsub+0xb2>
    4d7a:	4664      	mov	r4, ip
    4d7c:	4667      	mov	r7, ip
    4d7e:	432c      	orrs	r4, r5
    4d80:	d000      	beq.n	4d84 <__aeabi_dsub+0x3a4>
    4d82:	e68b      	b.n	4a9c <__aeabi_dsub+0xbc>
    4d84:	2500      	movs	r5, #0
    4d86:	2600      	movs	r6, #0
    4d88:	2700      	movs	r7, #0
    4d8a:	e6ea      	b.n	4b62 <__aeabi_dsub+0x182>
    4d8c:	001e      	movs	r6, r3
    4d8e:	e6ad      	b.n	4aec <__aeabi_dsub+0x10c>
    4d90:	2b1f      	cmp	r3, #31
    4d92:	dc60      	bgt.n	4e56 <__aeabi_dsub+0x476>
    4d94:	2720      	movs	r7, #32
    4d96:	1af8      	subs	r0, r7, r3
    4d98:	000f      	movs	r7, r1
    4d9a:	4684      	mov	ip, r0
    4d9c:	4087      	lsls	r7, r0
    4d9e:	0010      	movs	r0, r2
    4da0:	40d8      	lsrs	r0, r3
    4da2:	4307      	orrs	r7, r0
    4da4:	4660      	mov	r0, ip
    4da6:	4082      	lsls	r2, r0
    4da8:	1e50      	subs	r0, r2, #1
    4daa:	4182      	sbcs	r2, r0
    4dac:	40d9      	lsrs	r1, r3
    4dae:	4317      	orrs	r7, r2
    4db0:	e6f5      	b.n	4b9e <__aeabi_dsub+0x1be>
    4db2:	0026      	movs	r6, r4
    4db4:	4650      	mov	r0, sl
    4db6:	4306      	orrs	r6, r0
    4db8:	d005      	beq.n	4dc6 <__aeabi_dsub+0x3e6>
    4dba:	43ed      	mvns	r5, r5
    4dbc:	2d00      	cmp	r5, #0
    4dbe:	d0d3      	beq.n	4d68 <__aeabi_dsub+0x388>
    4dc0:	4e90      	ldr	r6, [pc, #576]	; (5004 <__aeabi_dsub+0x624>)
    4dc2:	45b4      	cmp	ip, r6
    4dc4:	d1bd      	bne.n	4d42 <__aeabi_dsub+0x362>
    4dc6:	000c      	movs	r4, r1
    4dc8:	0017      	movs	r7, r2
    4dca:	4666      	mov	r6, ip
    4dcc:	4698      	mov	r8, r3
    4dce:	e68d      	b.n	4aec <__aeabi_dsub+0x10c>
    4dd0:	488c      	ldr	r0, [pc, #560]	; (5004 <__aeabi_dsub+0x624>)
    4dd2:	4283      	cmp	r3, r0
    4dd4:	d00b      	beq.n	4dee <__aeabi_dsub+0x40e>
    4dd6:	4663      	mov	r3, ip
    4dd8:	e6d9      	b.n	4b8e <__aeabi_dsub+0x1ae>
    4dda:	2d00      	cmp	r5, #0
    4ddc:	d000      	beq.n	4de0 <__aeabi_dsub+0x400>
    4dde:	e096      	b.n	4f0e <__aeabi_dsub+0x52e>
    4de0:	0008      	movs	r0, r1
    4de2:	4310      	orrs	r0, r2
    4de4:	d100      	bne.n	4de8 <__aeabi_dsub+0x408>
    4de6:	e0e2      	b.n	4fae <__aeabi_dsub+0x5ce>
    4de8:	000c      	movs	r4, r1
    4dea:	0017      	movs	r7, r2
    4dec:	4698      	mov	r8, r3
    4dee:	4e85      	ldr	r6, [pc, #532]	; (5004 <__aeabi_dsub+0x624>)
    4df0:	e67c      	b.n	4aec <__aeabi_dsub+0x10c>
    4df2:	2500      	movs	r5, #0
    4df4:	e780      	b.n	4cf8 <__aeabi_dsub+0x318>
    4df6:	2100      	movs	r1, #0
    4df8:	e78e      	b.n	4d18 <__aeabi_dsub+0x338>
    4dfa:	0023      	movs	r3, r4
    4dfc:	4650      	mov	r0, sl
    4dfe:	4303      	orrs	r3, r0
    4e00:	2e00      	cmp	r6, #0
    4e02:	d000      	beq.n	4e06 <__aeabi_dsub+0x426>
    4e04:	e0a8      	b.n	4f58 <__aeabi_dsub+0x578>
    4e06:	2b00      	cmp	r3, #0
    4e08:	d100      	bne.n	4e0c <__aeabi_dsub+0x42c>
    4e0a:	e0de      	b.n	4fca <__aeabi_dsub+0x5ea>
    4e0c:	000b      	movs	r3, r1
    4e0e:	4313      	orrs	r3, r2
    4e10:	d100      	bne.n	4e14 <__aeabi_dsub+0x434>
    4e12:	e66b      	b.n	4aec <__aeabi_dsub+0x10c>
    4e14:	4452      	add	r2, sl
    4e16:	4552      	cmp	r2, sl
    4e18:	4180      	sbcs	r0, r0
    4e1a:	1864      	adds	r4, r4, r1
    4e1c:	4240      	negs	r0, r0
    4e1e:	1824      	adds	r4, r4, r0
    4e20:	0017      	movs	r7, r2
    4e22:	0223      	lsls	r3, r4, #8
    4e24:	d400      	bmi.n	4e28 <__aeabi_dsub+0x448>
    4e26:	e6fd      	b.n	4c24 <__aeabi_dsub+0x244>
    4e28:	4b77      	ldr	r3, [pc, #476]	; (5008 <__aeabi_dsub+0x628>)
    4e2a:	4666      	mov	r6, ip
    4e2c:	401c      	ands	r4, r3
    4e2e:	e65d      	b.n	4aec <__aeabi_dsub+0x10c>
    4e30:	0025      	movs	r5, r4
    4e32:	4650      	mov	r0, sl
    4e34:	4305      	orrs	r5, r0
    4e36:	2e00      	cmp	r6, #0
    4e38:	d1cf      	bne.n	4dda <__aeabi_dsub+0x3fa>
    4e3a:	2d00      	cmp	r5, #0
    4e3c:	d14f      	bne.n	4ede <__aeabi_dsub+0x4fe>
    4e3e:	000c      	movs	r4, r1
    4e40:	4314      	orrs	r4, r2
    4e42:	d100      	bne.n	4e46 <__aeabi_dsub+0x466>
    4e44:	e0a0      	b.n	4f88 <__aeabi_dsub+0x5a8>
    4e46:	000c      	movs	r4, r1
    4e48:	0017      	movs	r7, r2
    4e4a:	4698      	mov	r8, r3
    4e4c:	e64e      	b.n	4aec <__aeabi_dsub+0x10c>
    4e4e:	4666      	mov	r6, ip
    4e50:	2400      	movs	r4, #0
    4e52:	2700      	movs	r7, #0
    4e54:	e685      	b.n	4b62 <__aeabi_dsub+0x182>
    4e56:	001f      	movs	r7, r3
    4e58:	0008      	movs	r0, r1
    4e5a:	3f20      	subs	r7, #32
    4e5c:	40f8      	lsrs	r0, r7
    4e5e:	0007      	movs	r7, r0
    4e60:	2b20      	cmp	r3, #32
    4e62:	d100      	bne.n	4e66 <__aeabi_dsub+0x486>
    4e64:	e08e      	b.n	4f84 <__aeabi_dsub+0x5a4>
    4e66:	2040      	movs	r0, #64	; 0x40
    4e68:	1ac3      	subs	r3, r0, r3
    4e6a:	4099      	lsls	r1, r3
    4e6c:	430a      	orrs	r2, r1
    4e6e:	1e51      	subs	r1, r2, #1
    4e70:	418a      	sbcs	r2, r1
    4e72:	2100      	movs	r1, #0
    4e74:	4317      	orrs	r7, r2
    4e76:	e692      	b.n	4b9e <__aeabi_dsub+0x1be>
    4e78:	2e00      	cmp	r6, #0
    4e7a:	d114      	bne.n	4ea6 <__aeabi_dsub+0x4c6>
    4e7c:	0026      	movs	r6, r4
    4e7e:	4650      	mov	r0, sl
    4e80:	4306      	orrs	r6, r0
    4e82:	d062      	beq.n	4f4a <__aeabi_dsub+0x56a>
    4e84:	43db      	mvns	r3, r3
    4e86:	2b00      	cmp	r3, #0
    4e88:	d15c      	bne.n	4f44 <__aeabi_dsub+0x564>
    4e8a:	1887      	adds	r7, r0, r2
    4e8c:	4297      	cmp	r7, r2
    4e8e:	4192      	sbcs	r2, r2
    4e90:	1864      	adds	r4, r4, r1
    4e92:	4252      	negs	r2, r2
    4e94:	18a4      	adds	r4, r4, r2
    4e96:	4666      	mov	r6, ip
    4e98:	e687      	b.n	4baa <__aeabi_dsub+0x1ca>
    4e9a:	4650      	mov	r0, sl
    4e9c:	4320      	orrs	r0, r4
    4e9e:	1e44      	subs	r4, r0, #1
    4ea0:	41a0      	sbcs	r0, r4
    4ea2:	2400      	movs	r4, #0
    4ea4:	e760      	b.n	4d68 <__aeabi_dsub+0x388>
    4ea6:	4e57      	ldr	r6, [pc, #348]	; (5004 <__aeabi_dsub+0x624>)
    4ea8:	45b4      	cmp	ip, r6
    4eaa:	d04e      	beq.n	4f4a <__aeabi_dsub+0x56a>
    4eac:	2680      	movs	r6, #128	; 0x80
    4eae:	0436      	lsls	r6, r6, #16
    4eb0:	425b      	negs	r3, r3
    4eb2:	4334      	orrs	r4, r6
    4eb4:	2b38      	cmp	r3, #56	; 0x38
    4eb6:	dd00      	ble.n	4eba <__aeabi_dsub+0x4da>
    4eb8:	e07f      	b.n	4fba <__aeabi_dsub+0x5da>
    4eba:	2b1f      	cmp	r3, #31
    4ebc:	dd00      	ble.n	4ec0 <__aeabi_dsub+0x4e0>
    4ebe:	e08b      	b.n	4fd8 <__aeabi_dsub+0x5f8>
    4ec0:	2620      	movs	r6, #32
    4ec2:	0027      	movs	r7, r4
    4ec4:	4650      	mov	r0, sl
    4ec6:	1af6      	subs	r6, r6, r3
    4ec8:	40b7      	lsls	r7, r6
    4eca:	40d8      	lsrs	r0, r3
    4ecc:	4307      	orrs	r7, r0
    4ece:	4650      	mov	r0, sl
    4ed0:	40b0      	lsls	r0, r6
    4ed2:	1e46      	subs	r6, r0, #1
    4ed4:	41b0      	sbcs	r0, r6
    4ed6:	4307      	orrs	r7, r0
    4ed8:	40dc      	lsrs	r4, r3
    4eda:	18bf      	adds	r7, r7, r2
    4edc:	e7d6      	b.n	4e8c <__aeabi_dsub+0x4ac>
    4ede:	000d      	movs	r5, r1
    4ee0:	4315      	orrs	r5, r2
    4ee2:	d100      	bne.n	4ee6 <__aeabi_dsub+0x506>
    4ee4:	e602      	b.n	4aec <__aeabi_dsub+0x10c>
    4ee6:	4650      	mov	r0, sl
    4ee8:	1a80      	subs	r0, r0, r2
    4eea:	4582      	cmp	sl, r0
    4eec:	41bf      	sbcs	r7, r7
    4eee:	1a65      	subs	r5, r4, r1
    4ef0:	427f      	negs	r7, r7
    4ef2:	1bed      	subs	r5, r5, r7
    4ef4:	4684      	mov	ip, r0
    4ef6:	0228      	lsls	r0, r5, #8
    4ef8:	d400      	bmi.n	4efc <__aeabi_dsub+0x51c>
    4efa:	e68d      	b.n	4c18 <__aeabi_dsub+0x238>
    4efc:	4650      	mov	r0, sl
    4efe:	1a17      	subs	r7, r2, r0
    4f00:	42ba      	cmp	r2, r7
    4f02:	4192      	sbcs	r2, r2
    4f04:	1b0c      	subs	r4, r1, r4
    4f06:	4252      	negs	r2, r2
    4f08:	1aa4      	subs	r4, r4, r2
    4f0a:	4698      	mov	r8, r3
    4f0c:	e5ee      	b.n	4aec <__aeabi_dsub+0x10c>
    4f0e:	000d      	movs	r5, r1
    4f10:	4315      	orrs	r5, r2
    4f12:	d100      	bne.n	4f16 <__aeabi_dsub+0x536>
    4f14:	e76b      	b.n	4dee <__aeabi_dsub+0x40e>
    4f16:	4650      	mov	r0, sl
    4f18:	0767      	lsls	r7, r4, #29
    4f1a:	08c0      	lsrs	r0, r0, #3
    4f1c:	4307      	orrs	r7, r0
    4f1e:	2080      	movs	r0, #128	; 0x80
    4f20:	08e4      	lsrs	r4, r4, #3
    4f22:	0300      	lsls	r0, r0, #12
    4f24:	4204      	tst	r4, r0
    4f26:	d007      	beq.n	4f38 <__aeabi_dsub+0x558>
    4f28:	08cd      	lsrs	r5, r1, #3
    4f2a:	4205      	tst	r5, r0
    4f2c:	d104      	bne.n	4f38 <__aeabi_dsub+0x558>
    4f2e:	002c      	movs	r4, r5
    4f30:	4698      	mov	r8, r3
    4f32:	08d7      	lsrs	r7, r2, #3
    4f34:	0749      	lsls	r1, r1, #29
    4f36:	430f      	orrs	r7, r1
    4f38:	0f7b      	lsrs	r3, r7, #29
    4f3a:	00e4      	lsls	r4, r4, #3
    4f3c:	431c      	orrs	r4, r3
    4f3e:	00ff      	lsls	r7, r7, #3
    4f40:	4e30      	ldr	r6, [pc, #192]	; (5004 <__aeabi_dsub+0x624>)
    4f42:	e5d3      	b.n	4aec <__aeabi_dsub+0x10c>
    4f44:	4e2f      	ldr	r6, [pc, #188]	; (5004 <__aeabi_dsub+0x624>)
    4f46:	45b4      	cmp	ip, r6
    4f48:	d1b4      	bne.n	4eb4 <__aeabi_dsub+0x4d4>
    4f4a:	000c      	movs	r4, r1
    4f4c:	0017      	movs	r7, r2
    4f4e:	4666      	mov	r6, ip
    4f50:	e5cc      	b.n	4aec <__aeabi_dsub+0x10c>
    4f52:	2700      	movs	r7, #0
    4f54:	2400      	movs	r4, #0
    4f56:	e5e8      	b.n	4b2a <__aeabi_dsub+0x14a>
    4f58:	2b00      	cmp	r3, #0
    4f5a:	d039      	beq.n	4fd0 <__aeabi_dsub+0x5f0>
    4f5c:	000b      	movs	r3, r1
    4f5e:	4313      	orrs	r3, r2
    4f60:	d100      	bne.n	4f64 <__aeabi_dsub+0x584>
    4f62:	e744      	b.n	4dee <__aeabi_dsub+0x40e>
    4f64:	08c0      	lsrs	r0, r0, #3
    4f66:	0767      	lsls	r7, r4, #29
    4f68:	4307      	orrs	r7, r0
    4f6a:	2080      	movs	r0, #128	; 0x80
    4f6c:	08e4      	lsrs	r4, r4, #3
    4f6e:	0300      	lsls	r0, r0, #12
    4f70:	4204      	tst	r4, r0
    4f72:	d0e1      	beq.n	4f38 <__aeabi_dsub+0x558>
    4f74:	08cb      	lsrs	r3, r1, #3
    4f76:	4203      	tst	r3, r0
    4f78:	d1de      	bne.n	4f38 <__aeabi_dsub+0x558>
    4f7a:	08d7      	lsrs	r7, r2, #3
    4f7c:	0749      	lsls	r1, r1, #29
    4f7e:	430f      	orrs	r7, r1
    4f80:	001c      	movs	r4, r3
    4f82:	e7d9      	b.n	4f38 <__aeabi_dsub+0x558>
    4f84:	2100      	movs	r1, #0
    4f86:	e771      	b.n	4e6c <__aeabi_dsub+0x48c>
    4f88:	2500      	movs	r5, #0
    4f8a:	2700      	movs	r7, #0
    4f8c:	e5e9      	b.n	4b62 <__aeabi_dsub+0x182>
    4f8e:	002e      	movs	r6, r5
    4f90:	0027      	movs	r7, r4
    4f92:	3e20      	subs	r6, #32
    4f94:	40f7      	lsrs	r7, r6
    4f96:	2d20      	cmp	r5, #32
    4f98:	d02f      	beq.n	4ffa <__aeabi_dsub+0x61a>
    4f9a:	2640      	movs	r6, #64	; 0x40
    4f9c:	1b75      	subs	r5, r6, r5
    4f9e:	40ac      	lsls	r4, r5
    4fa0:	4650      	mov	r0, sl
    4fa2:	4320      	orrs	r0, r4
    4fa4:	1e44      	subs	r4, r0, #1
    4fa6:	41a0      	sbcs	r0, r4
    4fa8:	2400      	movs	r4, #0
    4faa:	4338      	orrs	r0, r7
    4fac:	e6dc      	b.n	4d68 <__aeabi_dsub+0x388>
    4fae:	2480      	movs	r4, #128	; 0x80
    4fb0:	2500      	movs	r5, #0
    4fb2:	0324      	lsls	r4, r4, #12
    4fb4:	4e13      	ldr	r6, [pc, #76]	; (5004 <__aeabi_dsub+0x624>)
    4fb6:	2700      	movs	r7, #0
    4fb8:	e5d3      	b.n	4b62 <__aeabi_dsub+0x182>
    4fba:	4650      	mov	r0, sl
    4fbc:	4320      	orrs	r0, r4
    4fbe:	0007      	movs	r7, r0
    4fc0:	1e78      	subs	r0, r7, #1
    4fc2:	4187      	sbcs	r7, r0
    4fc4:	2400      	movs	r4, #0
    4fc6:	18bf      	adds	r7, r7, r2
    4fc8:	e760      	b.n	4e8c <__aeabi_dsub+0x4ac>
    4fca:	000c      	movs	r4, r1
    4fcc:	0017      	movs	r7, r2
    4fce:	e58d      	b.n	4aec <__aeabi_dsub+0x10c>
    4fd0:	000c      	movs	r4, r1
    4fd2:	0017      	movs	r7, r2
    4fd4:	4e0b      	ldr	r6, [pc, #44]	; (5004 <__aeabi_dsub+0x624>)
    4fd6:	e589      	b.n	4aec <__aeabi_dsub+0x10c>
    4fd8:	001e      	movs	r6, r3
    4fda:	0027      	movs	r7, r4
    4fdc:	3e20      	subs	r6, #32
    4fde:	40f7      	lsrs	r7, r6
    4fe0:	2b20      	cmp	r3, #32
    4fe2:	d00c      	beq.n	4ffe <__aeabi_dsub+0x61e>
    4fe4:	2640      	movs	r6, #64	; 0x40
    4fe6:	1af3      	subs	r3, r6, r3
    4fe8:	409c      	lsls	r4, r3
    4fea:	4650      	mov	r0, sl
    4fec:	4320      	orrs	r0, r4
    4fee:	1e44      	subs	r4, r0, #1
    4ff0:	41a0      	sbcs	r0, r4
    4ff2:	4307      	orrs	r7, r0
    4ff4:	2400      	movs	r4, #0
    4ff6:	18bf      	adds	r7, r7, r2
    4ff8:	e748      	b.n	4e8c <__aeabi_dsub+0x4ac>
    4ffa:	2400      	movs	r4, #0
    4ffc:	e7d0      	b.n	4fa0 <__aeabi_dsub+0x5c0>
    4ffe:	2400      	movs	r4, #0
    5000:	e7f3      	b.n	4fea <__aeabi_dsub+0x60a>
    5002:	46c0      	nop			; (mov r8, r8)
    5004:	000007ff 	.word	0x000007ff
    5008:	ff7fffff 	.word	0xff7fffff

0000500c <__aeabi_d2iz>:
    500c:	b530      	push	{r4, r5, lr}
    500e:	4d13      	ldr	r5, [pc, #76]	; (505c <__aeabi_d2iz+0x50>)
    5010:	030a      	lsls	r2, r1, #12
    5012:	004b      	lsls	r3, r1, #1
    5014:	0b12      	lsrs	r2, r2, #12
    5016:	0d5b      	lsrs	r3, r3, #21
    5018:	0fc9      	lsrs	r1, r1, #31
    501a:	2400      	movs	r4, #0
    501c:	42ab      	cmp	r3, r5
    501e:	dd10      	ble.n	5042 <__aeabi_d2iz+0x36>
    5020:	4c0f      	ldr	r4, [pc, #60]	; (5060 <__aeabi_d2iz+0x54>)
    5022:	42a3      	cmp	r3, r4
    5024:	dc0f      	bgt.n	5046 <__aeabi_d2iz+0x3a>
    5026:	2480      	movs	r4, #128	; 0x80
    5028:	4d0e      	ldr	r5, [pc, #56]	; (5064 <__aeabi_d2iz+0x58>)
    502a:	0364      	lsls	r4, r4, #13
    502c:	4322      	orrs	r2, r4
    502e:	1aed      	subs	r5, r5, r3
    5030:	2d1f      	cmp	r5, #31
    5032:	dd0b      	ble.n	504c <__aeabi_d2iz+0x40>
    5034:	480c      	ldr	r0, [pc, #48]	; (5068 <__aeabi_d2iz+0x5c>)
    5036:	1ac3      	subs	r3, r0, r3
    5038:	40da      	lsrs	r2, r3
    503a:	4254      	negs	r4, r2
    503c:	2900      	cmp	r1, #0
    503e:	d100      	bne.n	5042 <__aeabi_d2iz+0x36>
    5040:	0014      	movs	r4, r2
    5042:	0020      	movs	r0, r4
    5044:	bd30      	pop	{r4, r5, pc}
    5046:	4b09      	ldr	r3, [pc, #36]	; (506c <__aeabi_d2iz+0x60>)
    5048:	18cc      	adds	r4, r1, r3
    504a:	e7fa      	b.n	5042 <__aeabi_d2iz+0x36>
    504c:	4c08      	ldr	r4, [pc, #32]	; (5070 <__aeabi_d2iz+0x64>)
    504e:	40e8      	lsrs	r0, r5
    5050:	46a4      	mov	ip, r4
    5052:	4463      	add	r3, ip
    5054:	409a      	lsls	r2, r3
    5056:	4302      	orrs	r2, r0
    5058:	e7ef      	b.n	503a <__aeabi_d2iz+0x2e>
    505a:	46c0      	nop			; (mov r8, r8)
    505c:	000003fe 	.word	0x000003fe
    5060:	0000041d 	.word	0x0000041d
    5064:	00000433 	.word	0x00000433
    5068:	00000413 	.word	0x00000413
    506c:	7fffffff 	.word	0x7fffffff
    5070:	fffffbed 	.word	0xfffffbed

00005074 <__aeabi_i2d>:
    5074:	b570      	push	{r4, r5, r6, lr}
    5076:	2800      	cmp	r0, #0
    5078:	d030      	beq.n	50dc <__aeabi_i2d+0x68>
    507a:	17c3      	asrs	r3, r0, #31
    507c:	18c4      	adds	r4, r0, r3
    507e:	405c      	eors	r4, r3
    5080:	0fc5      	lsrs	r5, r0, #31
    5082:	0020      	movs	r0, r4
    5084:	f000 f900 	bl	5288 <__clzsi2>
    5088:	4b17      	ldr	r3, [pc, #92]	; (50e8 <__aeabi_i2d+0x74>)
    508a:	4a18      	ldr	r2, [pc, #96]	; (50ec <__aeabi_i2d+0x78>)
    508c:	1a1b      	subs	r3, r3, r0
    508e:	1ad2      	subs	r2, r2, r3
    5090:	2a1f      	cmp	r2, #31
    5092:	dd18      	ble.n	50c6 <__aeabi_i2d+0x52>
    5094:	4a16      	ldr	r2, [pc, #88]	; (50f0 <__aeabi_i2d+0x7c>)
    5096:	1ad2      	subs	r2, r2, r3
    5098:	4094      	lsls	r4, r2
    509a:	2200      	movs	r2, #0
    509c:	0324      	lsls	r4, r4, #12
    509e:	055b      	lsls	r3, r3, #21
    50a0:	0b24      	lsrs	r4, r4, #12
    50a2:	0d5b      	lsrs	r3, r3, #21
    50a4:	2100      	movs	r1, #0
    50a6:	0010      	movs	r0, r2
    50a8:	0324      	lsls	r4, r4, #12
    50aa:	0d0a      	lsrs	r2, r1, #20
    50ac:	0b24      	lsrs	r4, r4, #12
    50ae:	0512      	lsls	r2, r2, #20
    50b0:	4322      	orrs	r2, r4
    50b2:	4c10      	ldr	r4, [pc, #64]	; (50f4 <__aeabi_i2d+0x80>)
    50b4:	051b      	lsls	r3, r3, #20
    50b6:	4022      	ands	r2, r4
    50b8:	4313      	orrs	r3, r2
    50ba:	005b      	lsls	r3, r3, #1
    50bc:	07ed      	lsls	r5, r5, #31
    50be:	085b      	lsrs	r3, r3, #1
    50c0:	432b      	orrs	r3, r5
    50c2:	0019      	movs	r1, r3
    50c4:	bd70      	pop	{r4, r5, r6, pc}
    50c6:	0021      	movs	r1, r4
    50c8:	4091      	lsls	r1, r2
    50ca:	000a      	movs	r2, r1
    50cc:	210b      	movs	r1, #11
    50ce:	1a08      	subs	r0, r1, r0
    50d0:	40c4      	lsrs	r4, r0
    50d2:	055b      	lsls	r3, r3, #21
    50d4:	0324      	lsls	r4, r4, #12
    50d6:	0b24      	lsrs	r4, r4, #12
    50d8:	0d5b      	lsrs	r3, r3, #21
    50da:	e7e3      	b.n	50a4 <__aeabi_i2d+0x30>
    50dc:	2500      	movs	r5, #0
    50de:	2300      	movs	r3, #0
    50e0:	2400      	movs	r4, #0
    50e2:	2200      	movs	r2, #0
    50e4:	e7de      	b.n	50a4 <__aeabi_i2d+0x30>
    50e6:	46c0      	nop			; (mov r8, r8)
    50e8:	0000041e 	.word	0x0000041e
    50ec:	00000433 	.word	0x00000433
    50f0:	00000413 	.word	0x00000413
    50f4:	800fffff 	.word	0x800fffff

000050f8 <__aeabi_ui2d>:
    50f8:	b510      	push	{r4, lr}
    50fa:	1e04      	subs	r4, r0, #0
    50fc:	d028      	beq.n	5150 <__aeabi_ui2d+0x58>
    50fe:	f000 f8c3 	bl	5288 <__clzsi2>
    5102:	4b15      	ldr	r3, [pc, #84]	; (5158 <__aeabi_ui2d+0x60>)
    5104:	4a15      	ldr	r2, [pc, #84]	; (515c <__aeabi_ui2d+0x64>)
    5106:	1a1b      	subs	r3, r3, r0
    5108:	1ad2      	subs	r2, r2, r3
    510a:	2a1f      	cmp	r2, #31
    510c:	dd15      	ble.n	513a <__aeabi_ui2d+0x42>
    510e:	4a14      	ldr	r2, [pc, #80]	; (5160 <__aeabi_ui2d+0x68>)
    5110:	1ad2      	subs	r2, r2, r3
    5112:	4094      	lsls	r4, r2
    5114:	2200      	movs	r2, #0
    5116:	0324      	lsls	r4, r4, #12
    5118:	055b      	lsls	r3, r3, #21
    511a:	0b24      	lsrs	r4, r4, #12
    511c:	0d5b      	lsrs	r3, r3, #21
    511e:	2100      	movs	r1, #0
    5120:	0010      	movs	r0, r2
    5122:	0324      	lsls	r4, r4, #12
    5124:	0d0a      	lsrs	r2, r1, #20
    5126:	0b24      	lsrs	r4, r4, #12
    5128:	0512      	lsls	r2, r2, #20
    512a:	4322      	orrs	r2, r4
    512c:	4c0d      	ldr	r4, [pc, #52]	; (5164 <__aeabi_ui2d+0x6c>)
    512e:	051b      	lsls	r3, r3, #20
    5130:	4022      	ands	r2, r4
    5132:	4313      	orrs	r3, r2
    5134:	005b      	lsls	r3, r3, #1
    5136:	0859      	lsrs	r1, r3, #1
    5138:	bd10      	pop	{r4, pc}
    513a:	0021      	movs	r1, r4
    513c:	4091      	lsls	r1, r2
    513e:	000a      	movs	r2, r1
    5140:	210b      	movs	r1, #11
    5142:	1a08      	subs	r0, r1, r0
    5144:	40c4      	lsrs	r4, r0
    5146:	055b      	lsls	r3, r3, #21
    5148:	0324      	lsls	r4, r4, #12
    514a:	0b24      	lsrs	r4, r4, #12
    514c:	0d5b      	lsrs	r3, r3, #21
    514e:	e7e6      	b.n	511e <__aeabi_ui2d+0x26>
    5150:	2300      	movs	r3, #0
    5152:	2400      	movs	r4, #0
    5154:	2200      	movs	r2, #0
    5156:	e7e2      	b.n	511e <__aeabi_ui2d+0x26>
    5158:	0000041e 	.word	0x0000041e
    515c:	00000433 	.word	0x00000433
    5160:	00000413 	.word	0x00000413
    5164:	800fffff 	.word	0x800fffff

00005168 <__aeabi_f2d>:
    5168:	0041      	lsls	r1, r0, #1
    516a:	0e09      	lsrs	r1, r1, #24
    516c:	1c4b      	adds	r3, r1, #1
    516e:	b570      	push	{r4, r5, r6, lr}
    5170:	b2db      	uxtb	r3, r3
    5172:	0246      	lsls	r6, r0, #9
    5174:	0a75      	lsrs	r5, r6, #9
    5176:	0fc4      	lsrs	r4, r0, #31
    5178:	2b01      	cmp	r3, #1
    517a:	dd14      	ble.n	51a6 <__aeabi_f2d+0x3e>
    517c:	23e0      	movs	r3, #224	; 0xe0
    517e:	009b      	lsls	r3, r3, #2
    5180:	076d      	lsls	r5, r5, #29
    5182:	0b36      	lsrs	r6, r6, #12
    5184:	18cb      	adds	r3, r1, r3
    5186:	2100      	movs	r1, #0
    5188:	0d0a      	lsrs	r2, r1, #20
    518a:	0028      	movs	r0, r5
    518c:	0512      	lsls	r2, r2, #20
    518e:	4d1c      	ldr	r5, [pc, #112]	; (5200 <__aeabi_f2d+0x98>)
    5190:	4332      	orrs	r2, r6
    5192:	055b      	lsls	r3, r3, #21
    5194:	402a      	ands	r2, r5
    5196:	085b      	lsrs	r3, r3, #1
    5198:	4313      	orrs	r3, r2
    519a:	005b      	lsls	r3, r3, #1
    519c:	07e4      	lsls	r4, r4, #31
    519e:	085b      	lsrs	r3, r3, #1
    51a0:	4323      	orrs	r3, r4
    51a2:	0019      	movs	r1, r3
    51a4:	bd70      	pop	{r4, r5, r6, pc}
    51a6:	2900      	cmp	r1, #0
    51a8:	d114      	bne.n	51d4 <__aeabi_f2d+0x6c>
    51aa:	2d00      	cmp	r5, #0
    51ac:	d01e      	beq.n	51ec <__aeabi_f2d+0x84>
    51ae:	0028      	movs	r0, r5
    51b0:	f000 f86a 	bl	5288 <__clzsi2>
    51b4:	280a      	cmp	r0, #10
    51b6:	dc1c      	bgt.n	51f2 <__aeabi_f2d+0x8a>
    51b8:	230b      	movs	r3, #11
    51ba:	002a      	movs	r2, r5
    51bc:	1a1b      	subs	r3, r3, r0
    51be:	40da      	lsrs	r2, r3
    51c0:	0003      	movs	r3, r0
    51c2:	3315      	adds	r3, #21
    51c4:	409d      	lsls	r5, r3
    51c6:	4b0f      	ldr	r3, [pc, #60]	; (5204 <__aeabi_f2d+0x9c>)
    51c8:	0312      	lsls	r2, r2, #12
    51ca:	1a1b      	subs	r3, r3, r0
    51cc:	055b      	lsls	r3, r3, #21
    51ce:	0b16      	lsrs	r6, r2, #12
    51d0:	0d5b      	lsrs	r3, r3, #21
    51d2:	e7d8      	b.n	5186 <__aeabi_f2d+0x1e>
    51d4:	2d00      	cmp	r5, #0
    51d6:	d006      	beq.n	51e6 <__aeabi_f2d+0x7e>
    51d8:	0b32      	lsrs	r2, r6, #12
    51da:	2680      	movs	r6, #128	; 0x80
    51dc:	0336      	lsls	r6, r6, #12
    51de:	076d      	lsls	r5, r5, #29
    51e0:	4316      	orrs	r6, r2
    51e2:	4b09      	ldr	r3, [pc, #36]	; (5208 <__aeabi_f2d+0xa0>)
    51e4:	e7cf      	b.n	5186 <__aeabi_f2d+0x1e>
    51e6:	4b08      	ldr	r3, [pc, #32]	; (5208 <__aeabi_f2d+0xa0>)
    51e8:	2600      	movs	r6, #0
    51ea:	e7cc      	b.n	5186 <__aeabi_f2d+0x1e>
    51ec:	2300      	movs	r3, #0
    51ee:	2600      	movs	r6, #0
    51f0:	e7c9      	b.n	5186 <__aeabi_f2d+0x1e>
    51f2:	0003      	movs	r3, r0
    51f4:	002a      	movs	r2, r5
    51f6:	3b0b      	subs	r3, #11
    51f8:	409a      	lsls	r2, r3
    51fa:	2500      	movs	r5, #0
    51fc:	e7e3      	b.n	51c6 <__aeabi_f2d+0x5e>
    51fe:	46c0      	nop			; (mov r8, r8)
    5200:	800fffff 	.word	0x800fffff
    5204:	00000389 	.word	0x00000389
    5208:	000007ff 	.word	0x000007ff

0000520c <__aeabi_cdrcmple>:
    520c:	4684      	mov	ip, r0
    520e:	1c10      	adds	r0, r2, #0
    5210:	4662      	mov	r2, ip
    5212:	468c      	mov	ip, r1
    5214:	1c19      	adds	r1, r3, #0
    5216:	4663      	mov	r3, ip
    5218:	e000      	b.n	521c <__aeabi_cdcmpeq>
    521a:	46c0      	nop			; (mov r8, r8)

0000521c <__aeabi_cdcmpeq>:
    521c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    521e:	f000 f91b 	bl	5458 <__ledf2>
    5222:	2800      	cmp	r0, #0
    5224:	d401      	bmi.n	522a <__aeabi_cdcmpeq+0xe>
    5226:	2100      	movs	r1, #0
    5228:	42c8      	cmn	r0, r1
    522a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0000522c <__aeabi_dcmpeq>:
    522c:	b510      	push	{r4, lr}
    522e:	f000 f875 	bl	531c <__eqdf2>
    5232:	4240      	negs	r0, r0
    5234:	3001      	adds	r0, #1
    5236:	bd10      	pop	{r4, pc}

00005238 <__aeabi_dcmplt>:
    5238:	b510      	push	{r4, lr}
    523a:	f000 f90d 	bl	5458 <__ledf2>
    523e:	2800      	cmp	r0, #0
    5240:	db01      	blt.n	5246 <__aeabi_dcmplt+0xe>
    5242:	2000      	movs	r0, #0
    5244:	bd10      	pop	{r4, pc}
    5246:	2001      	movs	r0, #1
    5248:	bd10      	pop	{r4, pc}
    524a:	46c0      	nop			; (mov r8, r8)

0000524c <__aeabi_dcmple>:
    524c:	b510      	push	{r4, lr}
    524e:	f000 f903 	bl	5458 <__ledf2>
    5252:	2800      	cmp	r0, #0
    5254:	dd01      	ble.n	525a <__aeabi_dcmple+0xe>
    5256:	2000      	movs	r0, #0
    5258:	bd10      	pop	{r4, pc}
    525a:	2001      	movs	r0, #1
    525c:	bd10      	pop	{r4, pc}
    525e:	46c0      	nop			; (mov r8, r8)

00005260 <__aeabi_dcmpgt>:
    5260:	b510      	push	{r4, lr}
    5262:	f000 f895 	bl	5390 <__gedf2>
    5266:	2800      	cmp	r0, #0
    5268:	dc01      	bgt.n	526e <__aeabi_dcmpgt+0xe>
    526a:	2000      	movs	r0, #0
    526c:	bd10      	pop	{r4, pc}
    526e:	2001      	movs	r0, #1
    5270:	bd10      	pop	{r4, pc}
    5272:	46c0      	nop			; (mov r8, r8)

00005274 <__aeabi_dcmpge>:
    5274:	b510      	push	{r4, lr}
    5276:	f000 f88b 	bl	5390 <__gedf2>
    527a:	2800      	cmp	r0, #0
    527c:	da01      	bge.n	5282 <__aeabi_dcmpge+0xe>
    527e:	2000      	movs	r0, #0
    5280:	bd10      	pop	{r4, pc}
    5282:	2001      	movs	r0, #1
    5284:	bd10      	pop	{r4, pc}
    5286:	46c0      	nop			; (mov r8, r8)

00005288 <__clzsi2>:
    5288:	211c      	movs	r1, #28
    528a:	2301      	movs	r3, #1
    528c:	041b      	lsls	r3, r3, #16
    528e:	4298      	cmp	r0, r3
    5290:	d301      	bcc.n	5296 <__clzsi2+0xe>
    5292:	0c00      	lsrs	r0, r0, #16
    5294:	3910      	subs	r1, #16
    5296:	0a1b      	lsrs	r3, r3, #8
    5298:	4298      	cmp	r0, r3
    529a:	d301      	bcc.n	52a0 <__clzsi2+0x18>
    529c:	0a00      	lsrs	r0, r0, #8
    529e:	3908      	subs	r1, #8
    52a0:	091b      	lsrs	r3, r3, #4
    52a2:	4298      	cmp	r0, r3
    52a4:	d301      	bcc.n	52aa <__clzsi2+0x22>
    52a6:	0900      	lsrs	r0, r0, #4
    52a8:	3904      	subs	r1, #4
    52aa:	a202      	add	r2, pc, #8	; (adr r2, 52b4 <__clzsi2+0x2c>)
    52ac:	5c10      	ldrb	r0, [r2, r0]
    52ae:	1840      	adds	r0, r0, r1
    52b0:	4770      	bx	lr
    52b2:	46c0      	nop			; (mov r8, r8)
    52b4:	02020304 	.word	0x02020304
    52b8:	01010101 	.word	0x01010101
	...

000052c4 <__clzdi2>:
    52c4:	b510      	push	{r4, lr}
    52c6:	2900      	cmp	r1, #0
    52c8:	d103      	bne.n	52d2 <__clzdi2+0xe>
    52ca:	f7ff ffdd 	bl	5288 <__clzsi2>
    52ce:	3020      	adds	r0, #32
    52d0:	e002      	b.n	52d8 <__clzdi2+0x14>
    52d2:	1c08      	adds	r0, r1, #0
    52d4:	f7ff ffd8 	bl	5288 <__clzsi2>
    52d8:	bd10      	pop	{r4, pc}
    52da:	46c0      	nop			; (mov r8, r8)

000052dc <__ctzsi2>:
    52dc:	4241      	negs	r1, r0
    52de:	4008      	ands	r0, r1
    52e0:	211c      	movs	r1, #28
    52e2:	2301      	movs	r3, #1
    52e4:	041b      	lsls	r3, r3, #16
    52e6:	4298      	cmp	r0, r3
    52e8:	d301      	bcc.n	52ee <__ctzsi2+0x12>
    52ea:	0c00      	lsrs	r0, r0, #16
    52ec:	3910      	subs	r1, #16
    52ee:	0a1b      	lsrs	r3, r3, #8
    52f0:	4298      	cmp	r0, r3
    52f2:	d301      	bcc.n	52f8 <__ctzsi2+0x1c>
    52f4:	0a00      	lsrs	r0, r0, #8
    52f6:	3908      	subs	r1, #8
    52f8:	091b      	lsrs	r3, r3, #4
    52fa:	4298      	cmp	r0, r3
    52fc:	d301      	bcc.n	5302 <__ctzsi2+0x26>
    52fe:	0900      	lsrs	r0, r0, #4
    5300:	3904      	subs	r1, #4
    5302:	a202      	add	r2, pc, #8	; (adr r2, 530c <__ctzsi2+0x30>)
    5304:	5c10      	ldrb	r0, [r2, r0]
    5306:	1a40      	subs	r0, r0, r1
    5308:	4770      	bx	lr
    530a:	46c0      	nop			; (mov r8, r8)
    530c:	1d1d1c1b 	.word	0x1d1d1c1b
    5310:	1e1e1e1e 	.word	0x1e1e1e1e
    5314:	1f1f1f1f 	.word	0x1f1f1f1f
    5318:	1f1f1f1f 	.word	0x1f1f1f1f

0000531c <__eqdf2>:
    531c:	b5f0      	push	{r4, r5, r6, r7, lr}
    531e:	464f      	mov	r7, r9
    5320:	4646      	mov	r6, r8
    5322:	46d6      	mov	lr, sl
    5324:	005c      	lsls	r4, r3, #1
    5326:	b5c0      	push	{r6, r7, lr}
    5328:	031f      	lsls	r7, r3, #12
    532a:	0fdb      	lsrs	r3, r3, #31
    532c:	469a      	mov	sl, r3
    532e:	4b17      	ldr	r3, [pc, #92]	; (538c <__eqdf2+0x70>)
    5330:	030e      	lsls	r6, r1, #12
    5332:	004d      	lsls	r5, r1, #1
    5334:	4684      	mov	ip, r0
    5336:	4680      	mov	r8, r0
    5338:	0b36      	lsrs	r6, r6, #12
    533a:	0d6d      	lsrs	r5, r5, #21
    533c:	0fc9      	lsrs	r1, r1, #31
    533e:	4691      	mov	r9, r2
    5340:	0b3f      	lsrs	r7, r7, #12
    5342:	0d64      	lsrs	r4, r4, #21
    5344:	2001      	movs	r0, #1
    5346:	429d      	cmp	r5, r3
    5348:	d008      	beq.n	535c <__eqdf2+0x40>
    534a:	429c      	cmp	r4, r3
    534c:	d001      	beq.n	5352 <__eqdf2+0x36>
    534e:	42a5      	cmp	r5, r4
    5350:	d00b      	beq.n	536a <__eqdf2+0x4e>
    5352:	bc1c      	pop	{r2, r3, r4}
    5354:	4690      	mov	r8, r2
    5356:	4699      	mov	r9, r3
    5358:	46a2      	mov	sl, r4
    535a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    535c:	4663      	mov	r3, ip
    535e:	4333      	orrs	r3, r6
    5360:	d1f7      	bne.n	5352 <__eqdf2+0x36>
    5362:	42ac      	cmp	r4, r5
    5364:	d1f5      	bne.n	5352 <__eqdf2+0x36>
    5366:	433a      	orrs	r2, r7
    5368:	d1f3      	bne.n	5352 <__eqdf2+0x36>
    536a:	2001      	movs	r0, #1
    536c:	42be      	cmp	r6, r7
    536e:	d1f0      	bne.n	5352 <__eqdf2+0x36>
    5370:	45c8      	cmp	r8, r9
    5372:	d1ee      	bne.n	5352 <__eqdf2+0x36>
    5374:	4551      	cmp	r1, sl
    5376:	d007      	beq.n	5388 <__eqdf2+0x6c>
    5378:	2d00      	cmp	r5, #0
    537a:	d1ea      	bne.n	5352 <__eqdf2+0x36>
    537c:	4663      	mov	r3, ip
    537e:	431e      	orrs	r6, r3
    5380:	0030      	movs	r0, r6
    5382:	1e46      	subs	r6, r0, #1
    5384:	41b0      	sbcs	r0, r6
    5386:	e7e4      	b.n	5352 <__eqdf2+0x36>
    5388:	2000      	movs	r0, #0
    538a:	e7e2      	b.n	5352 <__eqdf2+0x36>
    538c:	000007ff 	.word	0x000007ff

00005390 <__gedf2>:
    5390:	b5f0      	push	{r4, r5, r6, r7, lr}
    5392:	4645      	mov	r5, r8
    5394:	46de      	mov	lr, fp
    5396:	4657      	mov	r7, sl
    5398:	464e      	mov	r6, r9
    539a:	b5e0      	push	{r5, r6, r7, lr}
    539c:	031f      	lsls	r7, r3, #12
    539e:	0b3d      	lsrs	r5, r7, #12
    53a0:	4f2c      	ldr	r7, [pc, #176]	; (5454 <__gedf2+0xc4>)
    53a2:	030e      	lsls	r6, r1, #12
    53a4:	004c      	lsls	r4, r1, #1
    53a6:	46ab      	mov	fp, r5
    53a8:	005d      	lsls	r5, r3, #1
    53aa:	4684      	mov	ip, r0
    53ac:	0b36      	lsrs	r6, r6, #12
    53ae:	0d64      	lsrs	r4, r4, #21
    53b0:	0fc9      	lsrs	r1, r1, #31
    53b2:	4690      	mov	r8, r2
    53b4:	0d6d      	lsrs	r5, r5, #21
    53b6:	0fdb      	lsrs	r3, r3, #31
    53b8:	42bc      	cmp	r4, r7
    53ba:	d02a      	beq.n	5412 <__gedf2+0x82>
    53bc:	4f25      	ldr	r7, [pc, #148]	; (5454 <__gedf2+0xc4>)
    53be:	42bd      	cmp	r5, r7
    53c0:	d02d      	beq.n	541e <__gedf2+0x8e>
    53c2:	2c00      	cmp	r4, #0
    53c4:	d10f      	bne.n	53e6 <__gedf2+0x56>
    53c6:	4330      	orrs	r0, r6
    53c8:	0007      	movs	r7, r0
    53ca:	4681      	mov	r9, r0
    53cc:	4278      	negs	r0, r7
    53ce:	4178      	adcs	r0, r7
    53d0:	b2c0      	uxtb	r0, r0
    53d2:	2d00      	cmp	r5, #0
    53d4:	d117      	bne.n	5406 <__gedf2+0x76>
    53d6:	465f      	mov	r7, fp
    53d8:	433a      	orrs	r2, r7
    53da:	d114      	bne.n	5406 <__gedf2+0x76>
    53dc:	464b      	mov	r3, r9
    53de:	2000      	movs	r0, #0
    53e0:	2b00      	cmp	r3, #0
    53e2:	d00a      	beq.n	53fa <__gedf2+0x6a>
    53e4:	e006      	b.n	53f4 <__gedf2+0x64>
    53e6:	2d00      	cmp	r5, #0
    53e8:	d102      	bne.n	53f0 <__gedf2+0x60>
    53ea:	4658      	mov	r0, fp
    53ec:	4302      	orrs	r2, r0
    53ee:	d001      	beq.n	53f4 <__gedf2+0x64>
    53f0:	4299      	cmp	r1, r3
    53f2:	d018      	beq.n	5426 <__gedf2+0x96>
    53f4:	4248      	negs	r0, r1
    53f6:	2101      	movs	r1, #1
    53f8:	4308      	orrs	r0, r1
    53fa:	bc3c      	pop	{r2, r3, r4, r5}
    53fc:	4690      	mov	r8, r2
    53fe:	4699      	mov	r9, r3
    5400:	46a2      	mov	sl, r4
    5402:	46ab      	mov	fp, r5
    5404:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5406:	2800      	cmp	r0, #0
    5408:	d0f2      	beq.n	53f0 <__gedf2+0x60>
    540a:	2001      	movs	r0, #1
    540c:	3b01      	subs	r3, #1
    540e:	4318      	orrs	r0, r3
    5410:	e7f3      	b.n	53fa <__gedf2+0x6a>
    5412:	0037      	movs	r7, r6
    5414:	4307      	orrs	r7, r0
    5416:	d0d1      	beq.n	53bc <__gedf2+0x2c>
    5418:	2002      	movs	r0, #2
    541a:	4240      	negs	r0, r0
    541c:	e7ed      	b.n	53fa <__gedf2+0x6a>
    541e:	465f      	mov	r7, fp
    5420:	4317      	orrs	r7, r2
    5422:	d0ce      	beq.n	53c2 <__gedf2+0x32>
    5424:	e7f8      	b.n	5418 <__gedf2+0x88>
    5426:	42ac      	cmp	r4, r5
    5428:	dce4      	bgt.n	53f4 <__gedf2+0x64>
    542a:	da03      	bge.n	5434 <__gedf2+0xa4>
    542c:	1e48      	subs	r0, r1, #1
    542e:	2101      	movs	r1, #1
    5430:	4308      	orrs	r0, r1
    5432:	e7e2      	b.n	53fa <__gedf2+0x6a>
    5434:	455e      	cmp	r6, fp
    5436:	d8dd      	bhi.n	53f4 <__gedf2+0x64>
    5438:	d006      	beq.n	5448 <__gedf2+0xb8>
    543a:	2000      	movs	r0, #0
    543c:	455e      	cmp	r6, fp
    543e:	d2dc      	bcs.n	53fa <__gedf2+0x6a>
    5440:	2301      	movs	r3, #1
    5442:	1e48      	subs	r0, r1, #1
    5444:	4318      	orrs	r0, r3
    5446:	e7d8      	b.n	53fa <__gedf2+0x6a>
    5448:	45c4      	cmp	ip, r8
    544a:	d8d3      	bhi.n	53f4 <__gedf2+0x64>
    544c:	2000      	movs	r0, #0
    544e:	45c4      	cmp	ip, r8
    5450:	d3f6      	bcc.n	5440 <__gedf2+0xb0>
    5452:	e7d2      	b.n	53fa <__gedf2+0x6a>
    5454:	000007ff 	.word	0x000007ff

00005458 <__ledf2>:
    5458:	b5f0      	push	{r4, r5, r6, r7, lr}
    545a:	464e      	mov	r6, r9
    545c:	4645      	mov	r5, r8
    545e:	46de      	mov	lr, fp
    5460:	4657      	mov	r7, sl
    5462:	005c      	lsls	r4, r3, #1
    5464:	b5e0      	push	{r5, r6, r7, lr}
    5466:	031f      	lsls	r7, r3, #12
    5468:	0fdb      	lsrs	r3, r3, #31
    546a:	4699      	mov	r9, r3
    546c:	4b2a      	ldr	r3, [pc, #168]	; (5518 <__ledf2+0xc0>)
    546e:	030e      	lsls	r6, r1, #12
    5470:	004d      	lsls	r5, r1, #1
    5472:	0fc9      	lsrs	r1, r1, #31
    5474:	4684      	mov	ip, r0
    5476:	0b36      	lsrs	r6, r6, #12
    5478:	0d6d      	lsrs	r5, r5, #21
    547a:	468b      	mov	fp, r1
    547c:	4690      	mov	r8, r2
    547e:	0b3f      	lsrs	r7, r7, #12
    5480:	0d64      	lsrs	r4, r4, #21
    5482:	429d      	cmp	r5, r3
    5484:	d020      	beq.n	54c8 <__ledf2+0x70>
    5486:	4b24      	ldr	r3, [pc, #144]	; (5518 <__ledf2+0xc0>)
    5488:	429c      	cmp	r4, r3
    548a:	d022      	beq.n	54d2 <__ledf2+0x7a>
    548c:	2d00      	cmp	r5, #0
    548e:	d112      	bne.n	54b6 <__ledf2+0x5e>
    5490:	4330      	orrs	r0, r6
    5492:	4243      	negs	r3, r0
    5494:	4143      	adcs	r3, r0
    5496:	b2db      	uxtb	r3, r3
    5498:	2c00      	cmp	r4, #0
    549a:	d01f      	beq.n	54dc <__ledf2+0x84>
    549c:	2b00      	cmp	r3, #0
    549e:	d00c      	beq.n	54ba <__ledf2+0x62>
    54a0:	464b      	mov	r3, r9
    54a2:	2001      	movs	r0, #1
    54a4:	3b01      	subs	r3, #1
    54a6:	4303      	orrs	r3, r0
    54a8:	0018      	movs	r0, r3
    54aa:	bc3c      	pop	{r2, r3, r4, r5}
    54ac:	4690      	mov	r8, r2
    54ae:	4699      	mov	r9, r3
    54b0:	46a2      	mov	sl, r4
    54b2:	46ab      	mov	fp, r5
    54b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    54b6:	2c00      	cmp	r4, #0
    54b8:	d016      	beq.n	54e8 <__ledf2+0x90>
    54ba:	45cb      	cmp	fp, r9
    54bc:	d017      	beq.n	54ee <__ledf2+0x96>
    54be:	465b      	mov	r3, fp
    54c0:	4259      	negs	r1, r3
    54c2:	2301      	movs	r3, #1
    54c4:	430b      	orrs	r3, r1
    54c6:	e7ef      	b.n	54a8 <__ledf2+0x50>
    54c8:	0031      	movs	r1, r6
    54ca:	2302      	movs	r3, #2
    54cc:	4301      	orrs	r1, r0
    54ce:	d1eb      	bne.n	54a8 <__ledf2+0x50>
    54d0:	e7d9      	b.n	5486 <__ledf2+0x2e>
    54d2:	0039      	movs	r1, r7
    54d4:	2302      	movs	r3, #2
    54d6:	4311      	orrs	r1, r2
    54d8:	d1e6      	bne.n	54a8 <__ledf2+0x50>
    54da:	e7d7      	b.n	548c <__ledf2+0x34>
    54dc:	433a      	orrs	r2, r7
    54de:	d1dd      	bne.n	549c <__ledf2+0x44>
    54e0:	2300      	movs	r3, #0
    54e2:	2800      	cmp	r0, #0
    54e4:	d0e0      	beq.n	54a8 <__ledf2+0x50>
    54e6:	e7ea      	b.n	54be <__ledf2+0x66>
    54e8:	433a      	orrs	r2, r7
    54ea:	d1e6      	bne.n	54ba <__ledf2+0x62>
    54ec:	e7e7      	b.n	54be <__ledf2+0x66>
    54ee:	42a5      	cmp	r5, r4
    54f0:	dce5      	bgt.n	54be <__ledf2+0x66>
    54f2:	db05      	blt.n	5500 <__ledf2+0xa8>
    54f4:	42be      	cmp	r6, r7
    54f6:	d8e2      	bhi.n	54be <__ledf2+0x66>
    54f8:	d007      	beq.n	550a <__ledf2+0xb2>
    54fa:	2300      	movs	r3, #0
    54fc:	42be      	cmp	r6, r7
    54fe:	d2d3      	bcs.n	54a8 <__ledf2+0x50>
    5500:	4659      	mov	r1, fp
    5502:	2301      	movs	r3, #1
    5504:	3901      	subs	r1, #1
    5506:	430b      	orrs	r3, r1
    5508:	e7ce      	b.n	54a8 <__ledf2+0x50>
    550a:	45c4      	cmp	ip, r8
    550c:	d8d7      	bhi.n	54be <__ledf2+0x66>
    550e:	2300      	movs	r3, #0
    5510:	45c4      	cmp	ip, r8
    5512:	d3f5      	bcc.n	5500 <__ledf2+0xa8>
    5514:	e7c8      	b.n	54a8 <__ledf2+0x50>
    5516:	46c0      	nop			; (mov r8, r8)
    5518:	000007ff 	.word	0x000007ff

0000551c <__libc_init_array>:
    551c:	b570      	push	{r4, r5, r6, lr}
    551e:	4e0d      	ldr	r6, [pc, #52]	; (5554 <__libc_init_array+0x38>)
    5520:	4d0d      	ldr	r5, [pc, #52]	; (5558 <__libc_init_array+0x3c>)
    5522:	2400      	movs	r4, #0
    5524:	1bad      	subs	r5, r5, r6
    5526:	10ad      	asrs	r5, r5, #2
    5528:	d005      	beq.n	5536 <__libc_init_array+0x1a>
    552a:	00a3      	lsls	r3, r4, #2
    552c:	58f3      	ldr	r3, [r6, r3]
    552e:	3401      	adds	r4, #1
    5530:	4798      	blx	r3
    5532:	42a5      	cmp	r5, r4
    5534:	d1f9      	bne.n	552a <__libc_init_array+0xe>
    5536:	f00a f8f1 	bl	f71c <_init>
    553a:	4e08      	ldr	r6, [pc, #32]	; (555c <__libc_init_array+0x40>)
    553c:	4d08      	ldr	r5, [pc, #32]	; (5560 <__libc_init_array+0x44>)
    553e:	2400      	movs	r4, #0
    5540:	1bad      	subs	r5, r5, r6
    5542:	10ad      	asrs	r5, r5, #2
    5544:	d005      	beq.n	5552 <__libc_init_array+0x36>
    5546:	00a3      	lsls	r3, r4, #2
    5548:	58f3      	ldr	r3, [r6, r3]
    554a:	3401      	adds	r4, #1
    554c:	4798      	blx	r3
    554e:	42a5      	cmp	r5, r4
    5550:	d1f9      	bne.n	5546 <__libc_init_array+0x2a>
    5552:	bd70      	pop	{r4, r5, r6, pc}
    5554:	0000f728 	.word	0x0000f728
    5558:	0000f728 	.word	0x0000f728
    555c:	0000f728 	.word	0x0000f728
    5560:	0000f730 	.word	0x0000f730

00005564 <memset>:
    5564:	b5f0      	push	{r4, r5, r6, r7, lr}
    5566:	0783      	lsls	r3, r0, #30
    5568:	d043      	beq.n	55f2 <memset+0x8e>
    556a:	1e54      	subs	r4, r2, #1
    556c:	2a00      	cmp	r2, #0
    556e:	d03f      	beq.n	55f0 <memset+0x8c>
    5570:	b2ce      	uxtb	r6, r1
    5572:	0002      	movs	r2, r0
    5574:	2503      	movs	r5, #3
    5576:	e002      	b.n	557e <memset+0x1a>
    5578:	001a      	movs	r2, r3
    557a:	3c01      	subs	r4, #1
    557c:	d338      	bcc.n	55f0 <memset+0x8c>
    557e:	1c53      	adds	r3, r2, #1
    5580:	7016      	strb	r6, [r2, #0]
    5582:	422b      	tst	r3, r5
    5584:	d1f8      	bne.n	5578 <memset+0x14>
    5586:	2c03      	cmp	r4, #3
    5588:	d92a      	bls.n	55e0 <memset+0x7c>
    558a:	22ff      	movs	r2, #255	; 0xff
    558c:	400a      	ands	r2, r1
    558e:	0215      	lsls	r5, r2, #8
    5590:	4315      	orrs	r5, r2
    5592:	042a      	lsls	r2, r5, #16
    5594:	4315      	orrs	r5, r2
    5596:	2c0f      	cmp	r4, #15
    5598:	d914      	bls.n	55c4 <memset+0x60>
    559a:	0027      	movs	r7, r4
    559c:	001a      	movs	r2, r3
    559e:	3f10      	subs	r7, #16
    55a0:	093e      	lsrs	r6, r7, #4
    55a2:	3601      	adds	r6, #1
    55a4:	0136      	lsls	r6, r6, #4
    55a6:	199e      	adds	r6, r3, r6
    55a8:	6015      	str	r5, [r2, #0]
    55aa:	6055      	str	r5, [r2, #4]
    55ac:	6095      	str	r5, [r2, #8]
    55ae:	60d5      	str	r5, [r2, #12]
    55b0:	3210      	adds	r2, #16
    55b2:	4296      	cmp	r6, r2
    55b4:	d1f8      	bne.n	55a8 <memset+0x44>
    55b6:	220f      	movs	r2, #15
    55b8:	4397      	bics	r7, r2
    55ba:	3710      	adds	r7, #16
    55bc:	19db      	adds	r3, r3, r7
    55be:	4014      	ands	r4, r2
    55c0:	2c03      	cmp	r4, #3
    55c2:	d90d      	bls.n	55e0 <memset+0x7c>
    55c4:	001a      	movs	r2, r3
    55c6:	1f27      	subs	r7, r4, #4
    55c8:	08be      	lsrs	r6, r7, #2
    55ca:	3601      	adds	r6, #1
    55cc:	00b6      	lsls	r6, r6, #2
    55ce:	199e      	adds	r6, r3, r6
    55d0:	c220      	stmia	r2!, {r5}
    55d2:	42b2      	cmp	r2, r6
    55d4:	d1fc      	bne.n	55d0 <memset+0x6c>
    55d6:	2203      	movs	r2, #3
    55d8:	4397      	bics	r7, r2
    55da:	3704      	adds	r7, #4
    55dc:	19db      	adds	r3, r3, r7
    55de:	4014      	ands	r4, r2
    55e0:	2c00      	cmp	r4, #0
    55e2:	d005      	beq.n	55f0 <memset+0x8c>
    55e4:	b2c9      	uxtb	r1, r1
    55e6:	191c      	adds	r4, r3, r4
    55e8:	7019      	strb	r1, [r3, #0]
    55ea:	3301      	adds	r3, #1
    55ec:	429c      	cmp	r4, r3
    55ee:	d1fb      	bne.n	55e8 <memset+0x84>
    55f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    55f2:	0014      	movs	r4, r2
    55f4:	0003      	movs	r3, r0
    55f6:	e7c6      	b.n	5586 <memset+0x22>

000055f8 <snprintf>:
    55f8:	b40c      	push	{r2, r3}
    55fa:	b530      	push	{r4, r5, lr}
    55fc:	4b1e      	ldr	r3, [pc, #120]	; (5678 <snprintf+0x80>)
    55fe:	b09d      	sub	sp, #116	; 0x74
    5600:	681d      	ldr	r5, [r3, #0]
    5602:	2900      	cmp	r1, #0
    5604:	db33      	blt.n	566e <snprintf+0x76>
    5606:	2382      	movs	r3, #130	; 0x82
    5608:	ac02      	add	r4, sp, #8
    560a:	009b      	lsls	r3, r3, #2
    560c:	81a3      	strh	r3, [r4, #12]
    560e:	9002      	str	r0, [sp, #8]
    5610:	6120      	str	r0, [r4, #16]
    5612:	2900      	cmp	r1, #0
    5614:	d012      	beq.n	563c <snprintf+0x44>
    5616:	2301      	movs	r3, #1
    5618:	3901      	subs	r1, #1
    561a:	425b      	negs	r3, r3
    561c:	60a1      	str	r1, [r4, #8]
    561e:	6161      	str	r1, [r4, #20]
    5620:	81e3      	strh	r3, [r4, #14]
    5622:	9a20      	ldr	r2, [sp, #128]	; 0x80
    5624:	ab21      	add	r3, sp, #132	; 0x84
    5626:	0021      	movs	r1, r4
    5628:	0028      	movs	r0, r5
    562a:	9301      	str	r3, [sp, #4]
    562c:	f000 fc44 	bl	5eb8 <_svfprintf_r>
    5630:	1c43      	adds	r3, r0, #1
    5632:	db16      	blt.n	5662 <snprintf+0x6a>
    5634:	2300      	movs	r3, #0
    5636:	9a02      	ldr	r2, [sp, #8]
    5638:	7013      	strb	r3, [r2, #0]
    563a:	e00d      	b.n	5658 <snprintf+0x60>
    563c:	2301      	movs	r3, #1
    563e:	425b      	negs	r3, r3
    5640:	60a1      	str	r1, [r4, #8]
    5642:	6161      	str	r1, [r4, #20]
    5644:	81e3      	strh	r3, [r4, #14]
    5646:	9a20      	ldr	r2, [sp, #128]	; 0x80
    5648:	ab21      	add	r3, sp, #132	; 0x84
    564a:	0021      	movs	r1, r4
    564c:	0028      	movs	r0, r5
    564e:	9301      	str	r3, [sp, #4]
    5650:	f000 fc32 	bl	5eb8 <_svfprintf_r>
    5654:	1c43      	adds	r3, r0, #1
    5656:	db07      	blt.n	5668 <snprintf+0x70>
    5658:	b01d      	add	sp, #116	; 0x74
    565a:	bc30      	pop	{r4, r5}
    565c:	bc08      	pop	{r3}
    565e:	b002      	add	sp, #8
    5660:	4718      	bx	r3
    5662:	238b      	movs	r3, #139	; 0x8b
    5664:	602b      	str	r3, [r5, #0]
    5666:	e7e5      	b.n	5634 <snprintf+0x3c>
    5668:	238b      	movs	r3, #139	; 0x8b
    566a:	602b      	str	r3, [r5, #0]
    566c:	e7f4      	b.n	5658 <snprintf+0x60>
    566e:	238b      	movs	r3, #139	; 0x8b
    5670:	2001      	movs	r0, #1
    5672:	602b      	str	r3, [r5, #0]
    5674:	4240      	negs	r0, r0
    5676:	e7ef      	b.n	5658 <snprintf+0x60>
    5678:	20000098 	.word	0x20000098

0000567c <sscanf>:
    567c:	b40e      	push	{r1, r2, r3}
    567e:	2381      	movs	r3, #129	; 0x81
    5680:	b570      	push	{r4, r5, r6, lr}
    5682:	b09d      	sub	sp, #116	; 0x74
    5684:	ac02      	add	r4, sp, #8
    5686:	ad21      	add	r5, sp, #132	; 0x84
    5688:	009b      	lsls	r3, r3, #2
    568a:	cd40      	ldmia	r5!, {r6}
    568c:	81a3      	strh	r3, [r4, #12]
    568e:	9002      	str	r0, [sp, #8]
    5690:	9006      	str	r0, [sp, #24]
    5692:	f000 f8cf 	bl	5834 <strlen>
    5696:	4b0b      	ldr	r3, [pc, #44]	; (56c4 <sscanf+0x48>)
    5698:	6060      	str	r0, [r4, #4]
    569a:	6223      	str	r3, [r4, #32]
    569c:	2300      	movs	r3, #0
    569e:	6323      	str	r3, [r4, #48]	; 0x30
    56a0:	6463      	str	r3, [r4, #68]	; 0x44
    56a2:	3b01      	subs	r3, #1
    56a4:	81e3      	strh	r3, [r4, #14]
    56a6:	4b08      	ldr	r3, [pc, #32]	; (56c8 <sscanf+0x4c>)
    56a8:	6160      	str	r0, [r4, #20]
    56aa:	0032      	movs	r2, r6
    56ac:	6818      	ldr	r0, [r3, #0]
    56ae:	0021      	movs	r1, r4
    56b0:	002b      	movs	r3, r5
    56b2:	9501      	str	r5, [sp, #4]
    56b4:	f001 ff04 	bl	74c0 <__ssvfscanf_r>
    56b8:	b01d      	add	sp, #116	; 0x74
    56ba:	bc70      	pop	{r4, r5, r6}
    56bc:	bc08      	pop	{r3}
    56be:	b003      	add	sp, #12
    56c0:	4718      	bx	r3
    56c2:	46c0      	nop			; (mov r8, r8)
    56c4:	000056cd 	.word	0x000056cd
    56c8:	20000098 	.word	0x20000098

000056cc <__seofread>:
    56cc:	2000      	movs	r0, #0
    56ce:	4770      	bx	lr

000056d0 <strchr>:
    56d0:	b570      	push	{r4, r5, r6, lr}
    56d2:	b2cc      	uxtb	r4, r1
    56d4:	2c00      	cmp	r4, #0
    56d6:	d03b      	beq.n	5750 <strchr+0x80>
    56d8:	0783      	lsls	r3, r0, #30
    56da:	d00e      	beq.n	56fa <strchr+0x2a>
    56dc:	7803      	ldrb	r3, [r0, #0]
    56de:	2b00      	cmp	r3, #0
    56e0:	d05b      	beq.n	579a <strchr+0xca>
    56e2:	429c      	cmp	r4, r3
    56e4:	d033      	beq.n	574e <strchr+0x7e>
    56e6:	2203      	movs	r2, #3
    56e8:	e004      	b.n	56f4 <strchr+0x24>
    56ea:	7803      	ldrb	r3, [r0, #0]
    56ec:	2b00      	cmp	r3, #0
    56ee:	d054      	beq.n	579a <strchr+0xca>
    56f0:	429c      	cmp	r4, r3
    56f2:	d02c      	beq.n	574e <strchr+0x7e>
    56f4:	3001      	adds	r0, #1
    56f6:	4210      	tst	r0, r2
    56f8:	d1f7      	bne.n	56ea <strchr+0x1a>
    56fa:	25ff      	movs	r5, #255	; 0xff
    56fc:	4029      	ands	r1, r5
    56fe:	020d      	lsls	r5, r1, #8
    5700:	4329      	orrs	r1, r5
    5702:	040d      	lsls	r5, r1, #16
    5704:	430d      	orrs	r5, r1
    5706:	0029      	movs	r1, r5
    5708:	6802      	ldr	r2, [r0, #0]
    570a:	4b26      	ldr	r3, [pc, #152]	; (57a4 <strchr+0xd4>)
    570c:	4051      	eors	r1, r2
    570e:	18d3      	adds	r3, r2, r3
    5710:	4393      	bics	r3, r2
    5712:	4a24      	ldr	r2, [pc, #144]	; (57a4 <strchr+0xd4>)
    5714:	4e24      	ldr	r6, [pc, #144]	; (57a8 <strchr+0xd8>)
    5716:	188a      	adds	r2, r1, r2
    5718:	438a      	bics	r2, r1
    571a:	4313      	orrs	r3, r2
    571c:	4233      	tst	r3, r6
    571e:	d10c      	bne.n	573a <strchr+0x6a>
    5720:	0029      	movs	r1, r5
    5722:	3004      	adds	r0, #4
    5724:	6802      	ldr	r2, [r0, #0]
    5726:	4b1f      	ldr	r3, [pc, #124]	; (57a4 <strchr+0xd4>)
    5728:	4051      	eors	r1, r2
    572a:	18d3      	adds	r3, r2, r3
    572c:	4393      	bics	r3, r2
    572e:	4a1d      	ldr	r2, [pc, #116]	; (57a4 <strchr+0xd4>)
    5730:	188a      	adds	r2, r1, r2
    5732:	438a      	bics	r2, r1
    5734:	4313      	orrs	r3, r2
    5736:	4233      	tst	r3, r6
    5738:	d0f2      	beq.n	5720 <strchr+0x50>
    573a:	7803      	ldrb	r3, [r0, #0]
    573c:	2b00      	cmp	r3, #0
    573e:	d104      	bne.n	574a <strchr+0x7a>
    5740:	e02b      	b.n	579a <strchr+0xca>
    5742:	3001      	adds	r0, #1
    5744:	7803      	ldrb	r3, [r0, #0]
    5746:	2b00      	cmp	r3, #0
    5748:	d027      	beq.n	579a <strchr+0xca>
    574a:	429c      	cmp	r4, r3
    574c:	d1f9      	bne.n	5742 <strchr+0x72>
    574e:	bd70      	pop	{r4, r5, r6, pc}
    5750:	0783      	lsls	r3, r0, #30
    5752:	d00a      	beq.n	576a <strchr+0x9a>
    5754:	7803      	ldrb	r3, [r0, #0]
    5756:	2b00      	cmp	r3, #0
    5758:	d0f9      	beq.n	574e <strchr+0x7e>
    575a:	2203      	movs	r2, #3
    575c:	e002      	b.n	5764 <strchr+0x94>
    575e:	7803      	ldrb	r3, [r0, #0]
    5760:	2b00      	cmp	r3, #0
    5762:	d0f4      	beq.n	574e <strchr+0x7e>
    5764:	3001      	adds	r0, #1
    5766:	4210      	tst	r0, r2
    5768:	d1f9      	bne.n	575e <strchr+0x8e>
    576a:	6801      	ldr	r1, [r0, #0]
    576c:	4a0d      	ldr	r2, [pc, #52]	; (57a4 <strchr+0xd4>)
    576e:	0003      	movs	r3, r0
    5770:	188a      	adds	r2, r1, r2
    5772:	480d      	ldr	r0, [pc, #52]	; (57a8 <strchr+0xd8>)
    5774:	438a      	bics	r2, r1
    5776:	4202      	tst	r2, r0
    5778:	d106      	bne.n	5788 <strchr+0xb8>
    577a:	3304      	adds	r3, #4
    577c:	6819      	ldr	r1, [r3, #0]
    577e:	4a09      	ldr	r2, [pc, #36]	; (57a4 <strchr+0xd4>)
    5780:	188a      	adds	r2, r1, r2
    5782:	438a      	bics	r2, r1
    5784:	4202      	tst	r2, r0
    5786:	d0f8      	beq.n	577a <strchr+0xaa>
    5788:	781a      	ldrb	r2, [r3, #0]
    578a:	0018      	movs	r0, r3
    578c:	2a00      	cmp	r2, #0
    578e:	d006      	beq.n	579e <strchr+0xce>
    5790:	3001      	adds	r0, #1
    5792:	7803      	ldrb	r3, [r0, #0]
    5794:	2b00      	cmp	r3, #0
    5796:	d1fb      	bne.n	5790 <strchr+0xc0>
    5798:	e7d9      	b.n	574e <strchr+0x7e>
    579a:	2000      	movs	r0, #0
    579c:	e7d7      	b.n	574e <strchr+0x7e>
    579e:	0018      	movs	r0, r3
    57a0:	e7d5      	b.n	574e <strchr+0x7e>
    57a2:	46c0      	nop			; (mov r8, r8)
    57a4:	fefefeff 	.word	0xfefefeff
    57a8:	80808080 	.word	0x80808080

000057ac <strcmp>:
    57ac:	4602      	mov	r2, r0
    57ae:	b570      	push	{r4, r5, r6, lr}
    57b0:	430a      	orrs	r2, r1
    57b2:	0792      	lsls	r2, r2, #30
    57b4:	d12a      	bne.n	580c <strcmp+0x60>
    57b6:	4d1e      	ldr	r5, [pc, #120]	; (5830 <strcmp+0x84>)
    57b8:	01ee      	lsls	r6, r5, #7
    57ba:	c804      	ldmia	r0!, {r2}
    57bc:	c908      	ldmia	r1!, {r3}
    57be:	1b54      	subs	r4, r2, r5
    57c0:	4394      	bics	r4, r2
    57c2:	4034      	ands	r4, r6
    57c4:	d017      	beq.n	57f6 <strcmp+0x4a>
    57c6:	b2d0      	uxtb	r0, r2
    57c8:	b2d9      	uxtb	r1, r3
    57ca:	1a40      	subs	r0, r0, r1
    57cc:	0621      	lsls	r1, r4, #24
    57ce:	4301      	orrs	r1, r0
    57d0:	d110      	bne.n	57f4 <strcmp+0x48>
    57d2:	b290      	uxth	r0, r2
    57d4:	b299      	uxth	r1, r3
    57d6:	1a40      	subs	r0, r0, r1
    57d8:	0421      	lsls	r1, r4, #16
    57da:	4301      	orrs	r1, r0
    57dc:	d10a      	bne.n	57f4 <strcmp+0x48>
    57de:	0210      	lsls	r0, r2, #8
    57e0:	0219      	lsls	r1, r3, #8
    57e2:	0a00      	lsrs	r0, r0, #8
    57e4:	0a09      	lsrs	r1, r1, #8
    57e6:	1a40      	subs	r0, r0, r1
    57e8:	0221      	lsls	r1, r4, #8
    57ea:	4301      	orrs	r1, r0
    57ec:	d102      	bne.n	57f4 <strcmp+0x48>
    57ee:	0e10      	lsrs	r0, r2, #24
    57f0:	0e19      	lsrs	r1, r3, #24
    57f2:	1a40      	subs	r0, r0, r1
    57f4:	bd70      	pop	{r4, r5, r6, pc}
    57f6:	429a      	cmp	r2, r3
    57f8:	d0df      	beq.n	57ba <strcmp+0xe>
    57fa:	ba10      	rev	r0, r2
    57fc:	ba19      	rev	r1, r3
    57fe:	4288      	cmp	r0, r1
    5800:	d901      	bls.n	5806 <strcmp+0x5a>
    5802:	2001      	movs	r0, #1
    5804:	bd70      	pop	{r4, r5, r6, pc}
    5806:	2000      	movs	r0, #0
    5808:	43c0      	mvns	r0, r0
    580a:	bd70      	pop	{r4, r5, r6, pc}
    580c:	7802      	ldrb	r2, [r0, #0]
    580e:	780b      	ldrb	r3, [r1, #0]
    5810:	3001      	adds	r0, #1
    5812:	3101      	adds	r1, #1
    5814:	2a00      	cmp	r2, #0
    5816:	d009      	beq.n	582c <strcmp+0x80>
    5818:	429a      	cmp	r2, r3
    581a:	d107      	bne.n	582c <strcmp+0x80>
    581c:	7802      	ldrb	r2, [r0, #0]
    581e:	780b      	ldrb	r3, [r1, #0]
    5820:	3001      	adds	r0, #1
    5822:	3101      	adds	r1, #1
    5824:	2a00      	cmp	r2, #0
    5826:	d001      	beq.n	582c <strcmp+0x80>
    5828:	429a      	cmp	r2, r3
    582a:	d0ef      	beq.n	580c <strcmp+0x60>
    582c:	1ad0      	subs	r0, r2, r3
    582e:	bd70      	pop	{r4, r5, r6, pc}
    5830:	01010101 	.word	0x01010101

00005834 <strlen>:
    5834:	b510      	push	{r4, lr}
    5836:	0783      	lsls	r3, r0, #30
    5838:	d025      	beq.n	5886 <strlen+0x52>
    583a:	7803      	ldrb	r3, [r0, #0]
    583c:	2b00      	cmp	r3, #0
    583e:	d024      	beq.n	588a <strlen+0x56>
    5840:	0003      	movs	r3, r0
    5842:	2103      	movs	r1, #3
    5844:	e002      	b.n	584c <strlen+0x18>
    5846:	781a      	ldrb	r2, [r3, #0]
    5848:	2a00      	cmp	r2, #0
    584a:	d01a      	beq.n	5882 <strlen+0x4e>
    584c:	3301      	adds	r3, #1
    584e:	420b      	tst	r3, r1
    5850:	d1f9      	bne.n	5846 <strlen+0x12>
    5852:	6819      	ldr	r1, [r3, #0]
    5854:	4a0e      	ldr	r2, [pc, #56]	; (5890 <strlen+0x5c>)
    5856:	4c0f      	ldr	r4, [pc, #60]	; (5894 <strlen+0x60>)
    5858:	188a      	adds	r2, r1, r2
    585a:	438a      	bics	r2, r1
    585c:	4222      	tst	r2, r4
    585e:	d106      	bne.n	586e <strlen+0x3a>
    5860:	3304      	adds	r3, #4
    5862:	6819      	ldr	r1, [r3, #0]
    5864:	4a0a      	ldr	r2, [pc, #40]	; (5890 <strlen+0x5c>)
    5866:	188a      	adds	r2, r1, r2
    5868:	438a      	bics	r2, r1
    586a:	4222      	tst	r2, r4
    586c:	d0f8      	beq.n	5860 <strlen+0x2c>
    586e:	001a      	movs	r2, r3
    5870:	781b      	ldrb	r3, [r3, #0]
    5872:	2b00      	cmp	r3, #0
    5874:	d003      	beq.n	587e <strlen+0x4a>
    5876:	3201      	adds	r2, #1
    5878:	7811      	ldrb	r1, [r2, #0]
    587a:	2900      	cmp	r1, #0
    587c:	d1fb      	bne.n	5876 <strlen+0x42>
    587e:	1a10      	subs	r0, r2, r0
    5880:	bd10      	pop	{r4, pc}
    5882:	1a18      	subs	r0, r3, r0
    5884:	e7fc      	b.n	5880 <strlen+0x4c>
    5886:	0003      	movs	r3, r0
    5888:	e7e3      	b.n	5852 <strlen+0x1e>
    588a:	2000      	movs	r0, #0
    588c:	e7f8      	b.n	5880 <strlen+0x4c>
    588e:	46c0      	nop			; (mov r8, r8)
    5890:	fefefeff 	.word	0xfefefeff
    5894:	80808080 	.word	0x80808080

00005898 <critical_factorization>:
    5898:	2301      	movs	r3, #1
    589a:	b5f0      	push	{r4, r5, r6, r7, lr}
    589c:	4647      	mov	r7, r8
    589e:	46ce      	mov	lr, r9
    58a0:	4694      	mov	ip, r2
    58a2:	2201      	movs	r2, #1
    58a4:	4698      	mov	r8, r3
    58a6:	2401      	movs	r4, #1
    58a8:	2500      	movs	r5, #0
    58aa:	b580      	push	{r7, lr}
    58ac:	4252      	negs	r2, r2
    58ae:	192b      	adds	r3, r5, r4
    58b0:	428b      	cmp	r3, r1
    58b2:	d20b      	bcs.n	58cc <critical_factorization+0x34>
    58b4:	1886      	adds	r6, r0, r2
    58b6:	5cc7      	ldrb	r7, [r0, r3]
    58b8:	5d36      	ldrb	r6, [r6, r4]
    58ba:	42b7      	cmp	r7, r6
    58bc:	d22d      	bcs.n	591a <critical_factorization+0x82>
    58be:	1a9c      	subs	r4, r3, r2
    58c0:	46a0      	mov	r8, r4
    58c2:	001d      	movs	r5, r3
    58c4:	2401      	movs	r4, #1
    58c6:	192b      	adds	r3, r5, r4
    58c8:	428b      	cmp	r3, r1
    58ca:	d3f3      	bcc.n	58b4 <critical_factorization+0x1c>
    58cc:	4644      	mov	r4, r8
    58ce:	4663      	mov	r3, ip
    58d0:	601c      	str	r4, [r3, #0]
    58d2:	2301      	movs	r3, #1
    58d4:	4699      	mov	r9, r3
    58d6:	3b02      	subs	r3, #2
    58d8:	2401      	movs	r4, #1
    58da:	2500      	movs	r5, #0
    58dc:	4698      	mov	r8, r3
    58de:	192b      	adds	r3, r5, r4
    58e0:	4299      	cmp	r1, r3
    58e2:	d90d      	bls.n	5900 <critical_factorization+0x68>
    58e4:	4646      	mov	r6, r8
    58e6:	1986      	adds	r6, r0, r6
    58e8:	5cc7      	ldrb	r7, [r0, r3]
    58ea:	5d36      	ldrb	r6, [r6, r4]
    58ec:	42b7      	cmp	r7, r6
    58ee:	d91c      	bls.n	592a <critical_factorization+0x92>
    58f0:	4644      	mov	r4, r8
    58f2:	1b1c      	subs	r4, r3, r4
    58f4:	46a1      	mov	r9, r4
    58f6:	001d      	movs	r5, r3
    58f8:	2401      	movs	r4, #1
    58fa:	192b      	adds	r3, r5, r4
    58fc:	4299      	cmp	r1, r3
    58fe:	d8f1      	bhi.n	58e4 <critical_factorization+0x4c>
    5900:	4643      	mov	r3, r8
    5902:	1c50      	adds	r0, r2, #1
    5904:	3301      	adds	r3, #1
    5906:	4283      	cmp	r3, r0
    5908:	d303      	bcc.n	5912 <critical_factorization+0x7a>
    590a:	4662      	mov	r2, ip
    590c:	4649      	mov	r1, r9
    590e:	0018      	movs	r0, r3
    5910:	6011      	str	r1, [r2, #0]
    5912:	bc0c      	pop	{r2, r3}
    5914:	4690      	mov	r8, r2
    5916:	4699      	mov	r9, r3
    5918:	bdf0      	pop	{r4, r5, r6, r7, pc}
    591a:	42b7      	cmp	r7, r6
    591c:	d00d      	beq.n	593a <critical_factorization+0xa2>
    591e:	2301      	movs	r3, #1
    5920:	002a      	movs	r2, r5
    5922:	4698      	mov	r8, r3
    5924:	3501      	adds	r5, #1
    5926:	2401      	movs	r4, #1
    5928:	e7c1      	b.n	58ae <critical_factorization+0x16>
    592a:	42b7      	cmp	r7, r6
    592c:	d009      	beq.n	5942 <critical_factorization+0xaa>
    592e:	2301      	movs	r3, #1
    5930:	46a8      	mov	r8, r5
    5932:	4699      	mov	r9, r3
    5934:	3501      	adds	r5, #1
    5936:	2401      	movs	r4, #1
    5938:	e7d1      	b.n	58de <critical_factorization+0x46>
    593a:	4544      	cmp	r4, r8
    593c:	d005      	beq.n	594a <critical_factorization+0xb2>
    593e:	3401      	adds	r4, #1
    5940:	e7b5      	b.n	58ae <critical_factorization+0x16>
    5942:	454c      	cmp	r4, r9
    5944:	d004      	beq.n	5950 <critical_factorization+0xb8>
    5946:	3401      	adds	r4, #1
    5948:	e7c9      	b.n	58de <critical_factorization+0x46>
    594a:	001d      	movs	r5, r3
    594c:	2401      	movs	r4, #1
    594e:	e7ae      	b.n	58ae <critical_factorization+0x16>
    5950:	001d      	movs	r5, r3
    5952:	2401      	movs	r4, #1
    5954:	e7c3      	b.n	58de <critical_factorization+0x46>
    5956:	46c0      	nop			; (mov r8, r8)

00005958 <two_way_long_needle>:
    5958:	b5f0      	push	{r4, r5, r6, r7, lr}
    595a:	46de      	mov	lr, fp
    595c:	4657      	mov	r7, sl
    595e:	464e      	mov	r6, r9
    5960:	4645      	mov	r5, r8
    5962:	b5e0      	push	{r5, r6, r7, lr}
    5964:	0015      	movs	r5, r2
    5966:	4c7b      	ldr	r4, [pc, #492]	; (5b54 <two_way_long_needle+0x1fc>)
    5968:	0006      	movs	r6, r0
    596a:	44a5      	add	sp, r4
    596c:	aa03      	add	r2, sp, #12
    596e:	000f      	movs	r7, r1
    5970:	0028      	movs	r0, r5
    5972:	0019      	movs	r1, r3
    5974:	001c      	movs	r4, r3
    5976:	f7ff ff8f 	bl	5898 <critical_factorization>
    597a:	4683      	mov	fp, r0
    597c:	aaff      	add	r2, sp, #1020	; 0x3fc
    597e:	ab04      	add	r3, sp, #16
    5980:	3214      	adds	r2, #20
    5982:	c310      	stmia	r3!, {r4}
    5984:	4293      	cmp	r3, r2
    5986:	d1fc      	bne.n	5982 <two_way_long_needle+0x2a>
    5988:	1e63      	subs	r3, r4, #1
    598a:	0029      	movs	r1, r5
    598c:	46a4      	mov	ip, r4
    598e:	2c00      	cmp	r4, #0
    5990:	d009      	beq.n	59a6 <two_way_long_needle+0x4e>
    5992:	2408      	movs	r4, #8
    5994:	780a      	ldrb	r2, [r1, #0]
    5996:	a802      	add	r0, sp, #8
    5998:	0092      	lsls	r2, r2, #2
    599a:	1900      	adds	r0, r0, r4
    599c:	5083      	str	r3, [r0, r2]
    599e:	3101      	adds	r1, #1
    59a0:	3b01      	subs	r3, #1
    59a2:	d2f6      	bcs.n	5992 <two_way_long_needle+0x3a>
    59a4:	4664      	mov	r4, ip
    59a6:	9b03      	ldr	r3, [sp, #12]
    59a8:	465a      	mov	r2, fp
    59aa:	18e9      	adds	r1, r5, r3
    59ac:	0028      	movs	r0, r5
    59ae:	f004 f9b7 	bl	9d20 <memcmp>
    59b2:	2800      	cmp	r0, #0
    59b4:	d000      	beq.n	59b8 <two_way_long_needle+0x60>
    59b6:	e074      	b.n	5aa2 <two_way_long_needle+0x14a>
    59b8:	2300      	movs	r3, #0
    59ba:	001a      	movs	r2, r3
    59bc:	469a      	mov	sl, r3
    59be:	1e63      	subs	r3, r4, #1
    59c0:	4698      	mov	r8, r3
    59c2:	4659      	mov	r1, fp
    59c4:	2301      	movs	r3, #1
    59c6:	0038      	movs	r0, r7
    59c8:	46a1      	mov	r9, r4
    59ca:	0017      	movs	r7, r2
    59cc:	4644      	mov	r4, r8
    59ce:	46b0      	mov	r8, r6
    59d0:	1a5b      	subs	r3, r3, r1
    59d2:	9301      	str	r3, [sp, #4]
    59d4:	9100      	str	r1, [sp, #0]
    59d6:	4656      	mov	r6, sl
    59d8:	444e      	add	r6, r9
    59da:	1a32      	subs	r2, r6, r0
    59dc:	2100      	movs	r1, #0
    59de:	4440      	add	r0, r8
    59e0:	f004 f95e 	bl	9ca0 <memchr>
    59e4:	2800      	cmp	r0, #0
    59e6:	d153      	bne.n	5a90 <two_way_long_needle+0x138>
    59e8:	2e00      	cmp	r6, #0
    59ea:	d051      	beq.n	5a90 <two_way_long_needle+0x138>
    59ec:	4643      	mov	r3, r8
    59ee:	2108      	movs	r1, #8
    59f0:	199b      	adds	r3, r3, r6
    59f2:	3b01      	subs	r3, #1
    59f4:	781b      	ldrb	r3, [r3, #0]
    59f6:	aa02      	add	r2, sp, #8
    59f8:	009b      	lsls	r3, r3, #2
    59fa:	1852      	adds	r2, r2, r1
    59fc:	58d3      	ldr	r3, [r2, r3]
    59fe:	2b00      	cmp	r3, #0
    5a00:	d00a      	beq.n	5a18 <two_way_long_needle+0xc0>
    5a02:	2f00      	cmp	r7, #0
    5a04:	d004      	beq.n	5a10 <two_way_long_needle+0xb8>
    5a06:	9a03      	ldr	r2, [sp, #12]
    5a08:	4293      	cmp	r3, r2
    5a0a:	d201      	bcs.n	5a10 <two_way_long_needle+0xb8>
    5a0c:	464b      	mov	r3, r9
    5a0e:	1a9b      	subs	r3, r3, r2
    5a10:	449a      	add	sl, r3
    5a12:	2700      	movs	r7, #0
    5a14:	0030      	movs	r0, r6
    5a16:	e7de      	b.n	59d6 <two_way_long_needle+0x7e>
    5a18:	9900      	ldr	r1, [sp, #0]
    5a1a:	003b      	movs	r3, r7
    5a1c:	428f      	cmp	r7, r1
    5a1e:	d200      	bcs.n	5a22 <two_way_long_needle+0xca>
    5a20:	000b      	movs	r3, r1
    5a22:	42a3      	cmp	r3, r4
    5a24:	d20d      	bcs.n	5a42 <two_way_long_needle+0xea>
    5a26:	4642      	mov	r2, r8
    5a28:	4452      	add	r2, sl
    5a2a:	e002      	b.n	5a32 <two_way_long_needle+0xda>
    5a2c:	3301      	adds	r3, #1
    5a2e:	42a3      	cmp	r3, r4
    5a30:	d207      	bcs.n	5a42 <two_way_long_needle+0xea>
    5a32:	5ce8      	ldrb	r0, [r5, r3]
    5a34:	5cd1      	ldrb	r1, [r2, r3]
    5a36:	4288      	cmp	r0, r1
    5a38:	d0f8      	beq.n	5a2c <two_way_long_needle+0xd4>
    5a3a:	9a01      	ldr	r2, [sp, #4]
    5a3c:	4452      	add	r2, sl
    5a3e:	4692      	mov	sl, r2
    5a40:	e7e6      	b.n	5a10 <two_way_long_needle+0xb8>
    5a42:	9b00      	ldr	r3, [sp, #0]
    5a44:	1e59      	subs	r1, r3, #1
    5a46:	429f      	cmp	r7, r3
    5a48:	d300      	bcc.n	5a4c <two_way_long_needle+0xf4>
    5a4a:	e07d      	b.n	5b48 <two_way_long_needle+0x1f0>
    5a4c:	4642      	mov	r2, r8
    5a4e:	4452      	add	r2, sl
    5a50:	5c50      	ldrb	r0, [r2, r1]
    5a52:	5c6b      	ldrb	r3, [r5, r1]
    5a54:	4298      	cmp	r0, r3
    5a56:	d000      	beq.n	5a5a <two_way_long_needle+0x102>
    5a58:	e074      	b.n	5b44 <two_way_long_needle+0x1ec>
    5a5a:	1e7b      	subs	r3, r7, #1
    5a5c:	469b      	mov	fp, r3
    5a5e:	0023      	movs	r3, r4
    5a60:	46b4      	mov	ip, r6
    5a62:	465c      	mov	r4, fp
    5a64:	0016      	movs	r6, r2
    5a66:	469b      	mov	fp, r3
    5a68:	e004      	b.n	5a74 <two_way_long_needle+0x11c>
    5a6a:	5cea      	ldrb	r2, [r5, r3]
    5a6c:	5cf0      	ldrb	r0, [r6, r3]
    5a6e:	4282      	cmp	r2, r0
    5a70:	d103      	bne.n	5a7a <two_way_long_needle+0x122>
    5a72:	0019      	movs	r1, r3
    5a74:	1e4b      	subs	r3, r1, #1
    5a76:	42a3      	cmp	r3, r4
    5a78:	d1f7      	bne.n	5a6a <two_way_long_needle+0x112>
    5a7a:	4666      	mov	r6, ip
    5a7c:	465c      	mov	r4, fp
    5a7e:	3701      	adds	r7, #1
    5a80:	428f      	cmp	r7, r1
    5a82:	d863      	bhi.n	5b4c <two_way_long_needle+0x1f4>
    5a84:	464b      	mov	r3, r9
    5a86:	9f03      	ldr	r7, [sp, #12]
    5a88:	0030      	movs	r0, r6
    5a8a:	44ba      	add	sl, r7
    5a8c:	1bdf      	subs	r7, r3, r7
    5a8e:	e7a2      	b.n	59d6 <two_way_long_needle+0x7e>
    5a90:	2000      	movs	r0, #0
    5a92:	4b31      	ldr	r3, [pc, #196]	; (5b58 <two_way_long_needle+0x200>)
    5a94:	449d      	add	sp, r3
    5a96:	bc3c      	pop	{r2, r3, r4, r5}
    5a98:	4690      	mov	r8, r2
    5a9a:	4699      	mov	r9, r3
    5a9c:	46a2      	mov	sl, r4
    5a9e:	46ab      	mov	fp, r5
    5aa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5aa2:	465b      	mov	r3, fp
    5aa4:	1ae3      	subs	r3, r4, r3
    5aa6:	455b      	cmp	r3, fp
    5aa8:	d34a      	bcc.n	5b40 <two_way_long_needle+0x1e8>
    5aaa:	3301      	adds	r3, #1
    5aac:	9303      	str	r3, [sp, #12]
    5aae:	2300      	movs	r3, #0
    5ab0:	469a      	mov	sl, r3
    5ab2:	1e63      	subs	r3, r4, #1
    5ab4:	4698      	mov	r8, r3
    5ab6:	465a      	mov	r2, fp
    5ab8:	2301      	movs	r3, #1
    5aba:	0038      	movs	r0, r7
    5abc:	46a1      	mov	r9, r4
    5abe:	4657      	mov	r7, sl
    5ac0:	4644      	mov	r4, r8
    5ac2:	46b0      	mov	r8, r6
    5ac4:	1a9b      	subs	r3, r3, r2
    5ac6:	9300      	str	r3, [sp, #0]
    5ac8:	464b      	mov	r3, r9
    5aca:	18fe      	adds	r6, r7, r3
    5acc:	1a32      	subs	r2, r6, r0
    5ace:	2100      	movs	r1, #0
    5ad0:	4440      	add	r0, r8
    5ad2:	f004 f8e5 	bl	9ca0 <memchr>
    5ad6:	2800      	cmp	r0, #0
    5ad8:	d1da      	bne.n	5a90 <two_way_long_needle+0x138>
    5ada:	2e00      	cmp	r6, #0
    5adc:	d0d8      	beq.n	5a90 <two_way_long_needle+0x138>
    5ade:	4643      	mov	r3, r8
    5ae0:	2108      	movs	r1, #8
    5ae2:	199b      	adds	r3, r3, r6
    5ae4:	3b01      	subs	r3, #1
    5ae6:	781b      	ldrb	r3, [r3, #0]
    5ae8:	aa02      	add	r2, sp, #8
    5aea:	009b      	lsls	r3, r3, #2
    5aec:	1852      	adds	r2, r2, r1
    5aee:	58d3      	ldr	r3, [r2, r3]
    5af0:	2b00      	cmp	r3, #0
    5af2:	d122      	bne.n	5b3a <two_way_long_needle+0x1e2>
    5af4:	4643      	mov	r3, r8
    5af6:	19d8      	adds	r0, r3, r7
    5af8:	45a3      	cmp	fp, r4
    5afa:	d20c      	bcs.n	5b16 <two_way_long_needle+0x1be>
    5afc:	465b      	mov	r3, fp
    5afe:	5cc1      	ldrb	r1, [r0, r3]
    5b00:	5cea      	ldrb	r2, [r5, r3]
    5b02:	4291      	cmp	r1, r2
    5b04:	d004      	beq.n	5b10 <two_way_long_needle+0x1b8>
    5b06:	e015      	b.n	5b34 <two_way_long_needle+0x1dc>
    5b08:	5ce9      	ldrb	r1, [r5, r3]
    5b0a:	5cc2      	ldrb	r2, [r0, r3]
    5b0c:	4291      	cmp	r1, r2
    5b0e:	d111      	bne.n	5b34 <two_way_long_needle+0x1dc>
    5b10:	3301      	adds	r3, #1
    5b12:	42a3      	cmp	r3, r4
    5b14:	d3f8      	bcc.n	5b08 <two_way_long_needle+0x1b0>
    5b16:	465b      	mov	r3, fp
    5b18:	3b01      	subs	r3, #1
    5b1a:	d202      	bcs.n	5b22 <two_way_long_needle+0x1ca>
    5b1c:	e7b9      	b.n	5a92 <two_way_long_needle+0x13a>
    5b1e:	3b01      	subs	r3, #1
    5b20:	d3b7      	bcc.n	5a92 <two_way_long_needle+0x13a>
    5b22:	5ce9      	ldrb	r1, [r5, r3]
    5b24:	5cc2      	ldrb	r2, [r0, r3]
    5b26:	4291      	cmp	r1, r2
    5b28:	d0f9      	beq.n	5b1e <two_way_long_needle+0x1c6>
    5b2a:	9b03      	ldr	r3, [sp, #12]
    5b2c:	0030      	movs	r0, r6
    5b2e:	469c      	mov	ip, r3
    5b30:	4467      	add	r7, ip
    5b32:	e7c9      	b.n	5ac8 <two_way_long_needle+0x170>
    5b34:	9a00      	ldr	r2, [sp, #0]
    5b36:	4694      	mov	ip, r2
    5b38:	4467      	add	r7, ip
    5b3a:	18ff      	adds	r7, r7, r3
    5b3c:	0030      	movs	r0, r6
    5b3e:	e7c3      	b.n	5ac8 <two_way_long_needle+0x170>
    5b40:	465b      	mov	r3, fp
    5b42:	e7b2      	b.n	5aaa <two_way_long_needle+0x152>
    5b44:	9900      	ldr	r1, [sp, #0]
    5b46:	e79a      	b.n	5a7e <two_way_long_needle+0x126>
    5b48:	0019      	movs	r1, r3
    5b4a:	e798      	b.n	5a7e <two_way_long_needle+0x126>
    5b4c:	4640      	mov	r0, r8
    5b4e:	4450      	add	r0, sl
    5b50:	e79f      	b.n	5a92 <two_way_long_needle+0x13a>
    5b52:	46c0      	nop			; (mov r8, r8)
    5b54:	fffffbec 	.word	0xfffffbec
    5b58:	00000414 	.word	0x00000414

00005b5c <strstr>:
    5b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5b5e:	4657      	mov	r7, sl
    5b60:	4645      	mov	r5, r8
    5b62:	46de      	mov	lr, fp
    5b64:	464e      	mov	r6, r9
    5b66:	b5e0      	push	{r5, r6, r7, lr}
    5b68:	7803      	ldrb	r3, [r0, #0]
    5b6a:	b085      	sub	sp, #20
    5b6c:	0007      	movs	r7, r0
    5b6e:	000d      	movs	r5, r1
    5b70:	2b00      	cmp	r3, #0
    5b72:	d035      	beq.n	5be0 <strstr+0x84>
    5b74:	7809      	ldrb	r1, [r1, #0]
    5b76:	1e0a      	subs	r2, r1, #0
    5b78:	d100      	bne.n	5b7c <strstr+0x20>
    5b7a:	e09f      	b.n	5cbc <strstr+0x160>
    5b7c:	002c      	movs	r4, r5
    5b7e:	2601      	movs	r6, #1
    5b80:	e002      	b.n	5b88 <strstr+0x2c>
    5b82:	7822      	ldrb	r2, [r4, #0]
    5b84:	2a00      	cmp	r2, #0
    5b86:	d00b      	beq.n	5ba0 <strstr+0x44>
    5b88:	1a9b      	subs	r3, r3, r2
    5b8a:	425a      	negs	r2, r3
    5b8c:	4153      	adcs	r3, r2
    5b8e:	3001      	adds	r0, #1
    5b90:	401e      	ands	r6, r3
    5b92:	7803      	ldrb	r3, [r0, #0]
    5b94:	3401      	adds	r4, #1
    5b96:	2b00      	cmp	r3, #0
    5b98:	d1f3      	bne.n	5b82 <strstr+0x26>
    5b9a:	7823      	ldrb	r3, [r4, #0]
    5b9c:	2b00      	cmp	r3, #0
    5b9e:	d122      	bne.n	5be6 <strstr+0x8a>
    5ba0:	0038      	movs	r0, r7
    5ba2:	2e00      	cmp	r6, #0
    5ba4:	d006      	beq.n	5bb4 <strstr+0x58>
    5ba6:	b005      	add	sp, #20
    5ba8:	bc3c      	pop	{r2, r3, r4, r5}
    5baa:	4690      	mov	r8, r2
    5bac:	4699      	mov	r9, r3
    5bae:	46a2      	mov	sl, r4
    5bb0:	46ab      	mov	fp, r5
    5bb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5bb4:	1c78      	adds	r0, r7, #1
    5bb6:	f7ff fd8b 	bl	56d0 <strchr>
    5bba:	1b64      	subs	r4, r4, r5
    5bbc:	1e06      	subs	r6, r0, #0
    5bbe:	d012      	beq.n	5be6 <strstr+0x8a>
    5bc0:	2c01      	cmp	r4, #1
    5bc2:	d0f0      	beq.n	5ba6 <strstr+0x4a>
    5bc4:	193f      	adds	r7, r7, r4
    5bc6:	2101      	movs	r1, #1
    5bc8:	42b8      	cmp	r0, r7
    5bca:	d800      	bhi.n	5bce <strstr+0x72>
    5bcc:	1a39      	subs	r1, r7, r0
    5bce:	000f      	movs	r7, r1
    5bd0:	2c1f      	cmp	r4, #31
    5bd2:	d90a      	bls.n	5bea <strstr+0x8e>
    5bd4:	0023      	movs	r3, r4
    5bd6:	002a      	movs	r2, r5
    5bd8:	0030      	movs	r0, r6
    5bda:	f7ff febd 	bl	5958 <two_way_long_needle>
    5bde:	e7e2      	b.n	5ba6 <strstr+0x4a>
    5be0:	780b      	ldrb	r3, [r1, #0]
    5be2:	2b00      	cmp	r3, #0
    5be4:	d06a      	beq.n	5cbc <strstr+0x160>
    5be6:	2000      	movs	r0, #0
    5be8:	e7dd      	b.n	5ba6 <strstr+0x4a>
    5bea:	aa03      	add	r2, sp, #12
    5bec:	0021      	movs	r1, r4
    5bee:	0028      	movs	r0, r5
    5bf0:	f7ff fe52 	bl	5898 <critical_factorization>
    5bf4:	9b03      	ldr	r3, [sp, #12]
    5bf6:	4680      	mov	r8, r0
    5bf8:	0002      	movs	r2, r0
    5bfa:	18e9      	adds	r1, r5, r3
    5bfc:	0028      	movs	r0, r5
    5bfe:	f004 f88f 	bl	9d20 <memcmp>
    5c02:	2800      	cmp	r0, #0
    5c04:	d15c      	bne.n	5cc0 <strstr+0x164>
    5c06:	2300      	movs	r3, #0
    5c08:	4699      	mov	r9, r3
    5c0a:	4643      	mov	r3, r8
    5c0c:	3b01      	subs	r3, #1
    5c0e:	9300      	str	r3, [sp, #0]
    5c10:	4642      	mov	r2, r8
    5c12:	2301      	movs	r3, #1
    5c14:	46b2      	mov	sl, r6
    5c16:	0038      	movs	r0, r7
    5c18:	464e      	mov	r6, r9
    5c1a:	464f      	mov	r7, r9
    5c1c:	1a9b      	subs	r3, r3, r2
    5c1e:	9301      	str	r3, [sp, #4]
    5c20:	19e3      	adds	r3, r4, r7
    5c22:	1a1a      	subs	r2, r3, r0
    5c24:	2100      	movs	r1, #0
    5c26:	4450      	add	r0, sl
    5c28:	4699      	mov	r9, r3
    5c2a:	f004 f839 	bl	9ca0 <memchr>
    5c2e:	2800      	cmp	r0, #0
    5c30:	d1d9      	bne.n	5be6 <strstr+0x8a>
    5c32:	464b      	mov	r3, r9
    5c34:	2b00      	cmp	r3, #0
    5c36:	d0d6      	beq.n	5be6 <strstr+0x8a>
    5c38:	4643      	mov	r3, r8
    5c3a:	45b0      	cmp	r8, r6
    5c3c:	d200      	bcs.n	5c40 <strstr+0xe4>
    5c3e:	0033      	movs	r3, r6
    5c40:	429c      	cmp	r4, r3
    5c42:	d90f      	bls.n	5c64 <strstr+0x108>
    5c44:	4652      	mov	r2, sl
    5c46:	18d2      	adds	r2, r2, r3
    5c48:	5ce9      	ldrb	r1, [r5, r3]
    5c4a:	5dd2      	ldrb	r2, [r2, r7]
    5c4c:	4291      	cmp	r1, r2
    5c4e:	d12e      	bne.n	5cae <strstr+0x152>
    5c50:	4652      	mov	r2, sl
    5c52:	19d0      	adds	r0, r2, r7
    5c54:	e003      	b.n	5c5e <strstr+0x102>
    5c56:	5ce9      	ldrb	r1, [r5, r3]
    5c58:	5cc2      	ldrb	r2, [r0, r3]
    5c5a:	4291      	cmp	r1, r2
    5c5c:	d127      	bne.n	5cae <strstr+0x152>
    5c5e:	3301      	adds	r3, #1
    5c60:	429c      	cmp	r4, r3
    5c62:	d1f8      	bne.n	5c56 <strstr+0xfa>
    5c64:	9a00      	ldr	r2, [sp, #0]
    5c66:	45b0      	cmp	r8, r6
    5c68:	d976      	bls.n	5d58 <strstr+0x1fc>
    5c6a:	46bc      	mov	ip, r7
    5c6c:	44d4      	add	ip, sl
    5c6e:	4661      	mov	r1, ip
    5c70:	9b00      	ldr	r3, [sp, #0]
    5c72:	5cc9      	ldrb	r1, [r1, r3]
    5c74:	5ceb      	ldrb	r3, [r5, r3]
    5c76:	4299      	cmp	r1, r3
    5c78:	d16e      	bne.n	5d58 <strstr+0x1fc>
    5c7a:	1e73      	subs	r3, r6, #1
    5c7c:	469b      	mov	fp, r3
    5c7e:	4663      	mov	r3, ip
    5c80:	46a4      	mov	ip, r4
    5c82:	465c      	mov	r4, fp
    5c84:	46b3      	mov	fp, r6
    5c86:	001e      	movs	r6, r3
    5c88:	e004      	b.n	5c94 <strstr+0x138>
    5c8a:	5ce8      	ldrb	r0, [r5, r3]
    5c8c:	5cf1      	ldrb	r1, [r6, r3]
    5c8e:	4288      	cmp	r0, r1
    5c90:	d103      	bne.n	5c9a <strstr+0x13e>
    5c92:	001a      	movs	r2, r3
    5c94:	1e53      	subs	r3, r2, #1
    5c96:	42a3      	cmp	r3, r4
    5c98:	d1f7      	bne.n	5c8a <strstr+0x12e>
    5c9a:	4664      	mov	r4, ip
    5c9c:	465e      	mov	r6, fp
    5c9e:	3601      	adds	r6, #1
    5ca0:	4296      	cmp	r6, r2
    5ca2:	d85b      	bhi.n	5d5c <strstr+0x200>
    5ca4:	9e03      	ldr	r6, [sp, #12]
    5ca6:	4648      	mov	r0, r9
    5ca8:	19bf      	adds	r7, r7, r6
    5caa:	1ba6      	subs	r6, r4, r6
    5cac:	e7b8      	b.n	5c20 <strstr+0xc4>
    5cae:	9a01      	ldr	r2, [sp, #4]
    5cb0:	2600      	movs	r6, #0
    5cb2:	4694      	mov	ip, r2
    5cb4:	4467      	add	r7, ip
    5cb6:	18ff      	adds	r7, r7, r3
    5cb8:	4648      	mov	r0, r9
    5cba:	e7b1      	b.n	5c20 <strstr+0xc4>
    5cbc:	0038      	movs	r0, r7
    5cbe:	e772      	b.n	5ba6 <strstr+0x4a>
    5cc0:	4643      	mov	r3, r8
    5cc2:	1ae3      	subs	r3, r4, r3
    5cc4:	4543      	cmp	r3, r8
    5cc6:	d200      	bcs.n	5cca <strstr+0x16e>
    5cc8:	4643      	mov	r3, r8
    5cca:	3301      	adds	r3, #1
    5ccc:	9303      	str	r3, [sp, #12]
    5cce:	2300      	movs	r3, #0
    5cd0:	4642      	mov	r2, r8
    5cd2:	4699      	mov	r9, r3
    5cd4:	3301      	adds	r3, #1
    5cd6:	1a9b      	subs	r3, r3, r2
    5cd8:	464a      	mov	r2, r9
    5cda:	46b3      	mov	fp, r6
    5cdc:	46b1      	mov	r9, r6
    5cde:	0038      	movs	r0, r7
    5ce0:	469a      	mov	sl, r3
    5ce2:	0016      	movs	r6, r2
    5ce4:	44c3      	add	fp, r8
    5ce6:	19a7      	adds	r7, r4, r6
    5ce8:	1a3a      	subs	r2, r7, r0
    5cea:	2100      	movs	r1, #0
    5cec:	4448      	add	r0, r9
    5cee:	f003 ffd7 	bl	9ca0 <memchr>
    5cf2:	2800      	cmp	r0, #0
    5cf4:	d000      	beq.n	5cf8 <strstr+0x19c>
    5cf6:	e776      	b.n	5be6 <strstr+0x8a>
    5cf8:	2f00      	cmp	r7, #0
    5cfa:	d100      	bne.n	5cfe <strstr+0x1a2>
    5cfc:	e773      	b.n	5be6 <strstr+0x8a>
    5cfe:	464b      	mov	r3, r9
    5d00:	1998      	adds	r0, r3, r6
    5d02:	4544      	cmp	r4, r8
    5d04:	d90f      	bls.n	5d26 <strstr+0x1ca>
    5d06:	465b      	mov	r3, fp
    5d08:	5d99      	ldrb	r1, [r3, r6]
    5d0a:	4643      	mov	r3, r8
    5d0c:	4648      	mov	r0, r9
    5d0e:	5cea      	ldrb	r2, [r5, r3]
    5d10:	1980      	adds	r0, r0, r6
    5d12:	4291      	cmp	r1, r2
    5d14:	d004      	beq.n	5d20 <strstr+0x1c4>
    5d16:	e016      	b.n	5d46 <strstr+0x1ea>
    5d18:	5ce9      	ldrb	r1, [r5, r3]
    5d1a:	5cc2      	ldrb	r2, [r0, r3]
    5d1c:	4291      	cmp	r1, r2
    5d1e:	d112      	bne.n	5d46 <strstr+0x1ea>
    5d20:	3301      	adds	r3, #1
    5d22:	429c      	cmp	r4, r3
    5d24:	d1f8      	bne.n	5d18 <strstr+0x1bc>
    5d26:	4643      	mov	r3, r8
    5d28:	3b01      	subs	r3, #1
    5d2a:	d200      	bcs.n	5d2e <strstr+0x1d2>
    5d2c:	e73b      	b.n	5ba6 <strstr+0x4a>
    5d2e:	5cc1      	ldrb	r1, [r0, r3]
    5d30:	5cea      	ldrb	r2, [r5, r3]
    5d32:	4291      	cmp	r1, r2
    5d34:	d004      	beq.n	5d40 <strstr+0x1e4>
    5d36:	e00a      	b.n	5d4e <strstr+0x1f2>
    5d38:	5ce9      	ldrb	r1, [r5, r3]
    5d3a:	5cc2      	ldrb	r2, [r0, r3]
    5d3c:	4291      	cmp	r1, r2
    5d3e:	d106      	bne.n	5d4e <strstr+0x1f2>
    5d40:	3b01      	subs	r3, #1
    5d42:	d2f9      	bcs.n	5d38 <strstr+0x1dc>
    5d44:	e72f      	b.n	5ba6 <strstr+0x4a>
    5d46:	4456      	add	r6, sl
    5d48:	18f6      	adds	r6, r6, r3
    5d4a:	0038      	movs	r0, r7
    5d4c:	e7cb      	b.n	5ce6 <strstr+0x18a>
    5d4e:	9b03      	ldr	r3, [sp, #12]
    5d50:	0038      	movs	r0, r7
    5d52:	469c      	mov	ip, r3
    5d54:	4466      	add	r6, ip
    5d56:	e7c6      	b.n	5ce6 <strstr+0x18a>
    5d58:	4642      	mov	r2, r8
    5d5a:	e7a0      	b.n	5c9e <strstr+0x142>
    5d5c:	46b9      	mov	r9, r7
    5d5e:	4650      	mov	r0, sl
    5d60:	4448      	add	r0, r9
    5d62:	e720      	b.n	5ba6 <strstr+0x4a>

00005d64 <_strtol_l.isra.0>:
    5d64:	b5f0      	push	{r4, r5, r6, r7, lr}
    5d66:	4657      	mov	r7, sl
    5d68:	464e      	mov	r6, r9
    5d6a:	46de      	mov	lr, fp
    5d6c:	4645      	mov	r5, r8
    5d6e:	b5e0      	push	{r5, r6, r7, lr}
    5d70:	001e      	movs	r6, r3
    5d72:	2308      	movs	r3, #8
    5d74:	b083      	sub	sp, #12
    5d76:	9001      	str	r0, [sp, #4]
    5d78:	9100      	str	r1, [sp, #0]
    5d7a:	4692      	mov	sl, r2
    5d7c:	000f      	movs	r7, r1
    5d7e:	4699      	mov	r9, r3
    5d80:	e000      	b.n	5d84 <_strtol_l.isra.0+0x20>
    5d82:	002f      	movs	r7, r5
    5d84:	980c      	ldr	r0, [sp, #48]	; 0x30
    5d86:	783c      	ldrb	r4, [r7, #0]
    5d88:	f003 fc68 	bl	965c <__locale_ctype_ptr_l>
    5d8c:	464a      	mov	r2, r9
    5d8e:	1900      	adds	r0, r0, r4
    5d90:	7843      	ldrb	r3, [r0, #1]
    5d92:	1c7d      	adds	r5, r7, #1
    5d94:	421a      	tst	r2, r3
    5d96:	d1f4      	bne.n	5d82 <_strtol_l.isra.0+0x1e>
    5d98:	2c2d      	cmp	r4, #45	; 0x2d
    5d9a:	d04f      	beq.n	5e3c <_strtol_l.isra.0+0xd8>
    5d9c:	2300      	movs	r3, #0
    5d9e:	4698      	mov	r8, r3
    5da0:	2c2b      	cmp	r4, #43	; 0x2b
    5da2:	d05c      	beq.n	5e5e <_strtol_l.isra.0+0xfa>
    5da4:	2e00      	cmp	r6, #0
    5da6:	d003      	beq.n	5db0 <_strtol_l.isra.0+0x4c>
    5da8:	2e10      	cmp	r6, #16
    5daa:	d05b      	beq.n	5e64 <_strtol_l.isra.0+0x100>
    5dac:	0037      	movs	r7, r6
    5dae:	e003      	b.n	5db8 <_strtol_l.isra.0+0x54>
    5db0:	2c30      	cmp	r4, #48	; 0x30
    5db2:	d063      	beq.n	5e7c <_strtol_l.isra.0+0x118>
    5db4:	270a      	movs	r7, #10
    5db6:	260a      	movs	r6, #10
    5db8:	4b35      	ldr	r3, [pc, #212]	; (5e90 <_strtol_l.isra.0+0x12c>)
    5dba:	0039      	movs	r1, r7
    5dbc:	4443      	add	r3, r8
    5dbe:	0018      	movs	r0, r3
    5dc0:	4699      	mov	r9, r3
    5dc2:	f7fd fd17 	bl	37f4 <__aeabi_uidivmod>
    5dc6:	4648      	mov	r0, r9
    5dc8:	468b      	mov	fp, r1
    5dca:	0039      	movs	r1, r7
    5dcc:	f7fd fc8c 	bl	36e8 <__udivsi3>
    5dd0:	2200      	movs	r2, #0
    5dd2:	0001      	movs	r1, r0
    5dd4:	2000      	movs	r0, #0
    5dd6:	0023      	movs	r3, r4
    5dd8:	3b30      	subs	r3, #48	; 0x30
    5dda:	2b09      	cmp	r3, #9
    5ddc:	d907      	bls.n	5dee <_strtol_l.isra.0+0x8a>
    5dde:	3b11      	subs	r3, #17
    5de0:	2b19      	cmp	r3, #25
    5de2:	d903      	bls.n	5dec <_strtol_l.isra.0+0x88>
    5de4:	0023      	movs	r3, r4
    5de6:	3b61      	subs	r3, #97	; 0x61
    5de8:	2b19      	cmp	r3, #25
    5dea:	d80d      	bhi.n	5e08 <_strtol_l.isra.0+0xa4>
    5dec:	330a      	adds	r3, #10
    5dee:	429e      	cmp	r6, r3
    5df0:	dd0a      	ble.n	5e08 <_strtol_l.isra.0+0xa4>
    5df2:	1c54      	adds	r4, r2, #1
    5df4:	d005      	beq.n	5e02 <_strtol_l.isra.0+0x9e>
    5df6:	4281      	cmp	r1, r0
    5df8:	d31d      	bcc.n	5e36 <_strtol_l.isra.0+0xd2>
    5dfa:	d01a      	beq.n	5e32 <_strtol_l.isra.0+0xce>
    5dfc:	2201      	movs	r2, #1
    5dfe:	4378      	muls	r0, r7
    5e00:	1818      	adds	r0, r3, r0
    5e02:	782c      	ldrb	r4, [r5, #0]
    5e04:	3501      	adds	r5, #1
    5e06:	e7e6      	b.n	5dd6 <_strtol_l.isra.0+0x72>
    5e08:	1c53      	adds	r3, r2, #1
    5e0a:	d01c      	beq.n	5e46 <_strtol_l.isra.0+0xe2>
    5e0c:	4643      	mov	r3, r8
    5e0e:	2b00      	cmp	r3, #0
    5e10:	d000      	beq.n	5e14 <_strtol_l.isra.0+0xb0>
    5e12:	4240      	negs	r0, r0
    5e14:	4653      	mov	r3, sl
    5e16:	2b00      	cmp	r3, #0
    5e18:	d004      	beq.n	5e24 <_strtol_l.isra.0+0xc0>
    5e1a:	9b00      	ldr	r3, [sp, #0]
    5e1c:	2a00      	cmp	r2, #0
    5e1e:	d11c      	bne.n	5e5a <_strtol_l.isra.0+0xf6>
    5e20:	4652      	mov	r2, sl
    5e22:	6013      	str	r3, [r2, #0]
    5e24:	b003      	add	sp, #12
    5e26:	bc3c      	pop	{r2, r3, r4, r5}
    5e28:	4690      	mov	r8, r2
    5e2a:	4699      	mov	r9, r3
    5e2c:	46a2      	mov	sl, r4
    5e2e:	46ab      	mov	fp, r5
    5e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5e32:	459b      	cmp	fp, r3
    5e34:	dae2      	bge.n	5dfc <_strtol_l.isra.0+0x98>
    5e36:	2201      	movs	r2, #1
    5e38:	4252      	negs	r2, r2
    5e3a:	e7e2      	b.n	5e02 <_strtol_l.isra.0+0x9e>
    5e3c:	2301      	movs	r3, #1
    5e3e:	782c      	ldrb	r4, [r5, #0]
    5e40:	4698      	mov	r8, r3
    5e42:	1cbd      	adds	r5, r7, #2
    5e44:	e7ae      	b.n	5da4 <_strtol_l.isra.0+0x40>
    5e46:	2322      	movs	r3, #34	; 0x22
    5e48:	9a01      	ldr	r2, [sp, #4]
    5e4a:	4648      	mov	r0, r9
    5e4c:	6013      	str	r3, [r2, #0]
    5e4e:	4653      	mov	r3, sl
    5e50:	2b00      	cmp	r3, #0
    5e52:	d0e7      	beq.n	5e24 <_strtol_l.isra.0+0xc0>
    5e54:	1e6b      	subs	r3, r5, #1
    5e56:	4648      	mov	r0, r9
    5e58:	e7e2      	b.n	5e20 <_strtol_l.isra.0+0xbc>
    5e5a:	4681      	mov	r9, r0
    5e5c:	e7fa      	b.n	5e54 <_strtol_l.isra.0+0xf0>
    5e5e:	782c      	ldrb	r4, [r5, #0]
    5e60:	1cbd      	adds	r5, r7, #2
    5e62:	e79f      	b.n	5da4 <_strtol_l.isra.0+0x40>
    5e64:	2c30      	cmp	r4, #48	; 0x30
    5e66:	d111      	bne.n	5e8c <_strtol_l.isra.0+0x128>
    5e68:	2220      	movs	r2, #32
    5e6a:	782b      	ldrb	r3, [r5, #0]
    5e6c:	4393      	bics	r3, r2
    5e6e:	2b58      	cmp	r3, #88	; 0x58
    5e70:	d10c      	bne.n	5e8c <_strtol_l.isra.0+0x128>
    5e72:	786c      	ldrb	r4, [r5, #1]
    5e74:	2710      	movs	r7, #16
    5e76:	3502      	adds	r5, #2
    5e78:	2610      	movs	r6, #16
    5e7a:	e79d      	b.n	5db8 <_strtol_l.isra.0+0x54>
    5e7c:	2220      	movs	r2, #32
    5e7e:	782b      	ldrb	r3, [r5, #0]
    5e80:	4393      	bics	r3, r2
    5e82:	2b58      	cmp	r3, #88	; 0x58
    5e84:	d0f5      	beq.n	5e72 <_strtol_l.isra.0+0x10e>
    5e86:	2708      	movs	r7, #8
    5e88:	2608      	movs	r6, #8
    5e8a:	e795      	b.n	5db8 <_strtol_l.isra.0+0x54>
    5e8c:	2710      	movs	r7, #16
    5e8e:	e793      	b.n	5db8 <_strtol_l.isra.0+0x54>
    5e90:	7fffffff 	.word	0x7fffffff

00005e94 <_strtol_r>:
    5e94:	b510      	push	{r4, lr}
    5e96:	4c06      	ldr	r4, [pc, #24]	; (5eb0 <_strtol_r+0x1c>)
    5e98:	b082      	sub	sp, #8
    5e9a:	6824      	ldr	r4, [r4, #0]
    5e9c:	6b64      	ldr	r4, [r4, #52]	; 0x34
    5e9e:	2c00      	cmp	r4, #0
    5ea0:	d004      	beq.n	5eac <_strtol_r+0x18>
    5ea2:	9400      	str	r4, [sp, #0]
    5ea4:	f7ff ff5e 	bl	5d64 <_strtol_l.isra.0>
    5ea8:	b002      	add	sp, #8
    5eaa:	bd10      	pop	{r4, pc}
    5eac:	4c01      	ldr	r4, [pc, #4]	; (5eb4 <_strtol_r+0x20>)
    5eae:	e7f8      	b.n	5ea2 <_strtol_r+0xe>
    5eb0:	20000098 	.word	0x20000098
    5eb4:	200004cc 	.word	0x200004cc

00005eb8 <_svfprintf_r>:
    5eb8:	b5f0      	push	{r4, r5, r6, r7, lr}
    5eba:	46de      	mov	lr, fp
    5ebc:	4645      	mov	r5, r8
    5ebe:	4657      	mov	r7, sl
    5ec0:	464e      	mov	r6, r9
    5ec2:	b5e0      	push	{r5, r6, r7, lr}
    5ec4:	b0c3      	sub	sp, #268	; 0x10c
    5ec6:	000d      	movs	r5, r1
    5ec8:	9106      	str	r1, [sp, #24]
    5eca:	0014      	movs	r4, r2
    5ecc:	930f      	str	r3, [sp, #60]	; 0x3c
    5ece:	9009      	str	r0, [sp, #36]	; 0x24
    5ed0:	f003 fbd8 	bl	9684 <_localeconv_r>
    5ed4:	6803      	ldr	r3, [r0, #0]
    5ed6:	0018      	movs	r0, r3
    5ed8:	9319      	str	r3, [sp, #100]	; 0x64
    5eda:	f7ff fcab 	bl	5834 <strlen>
    5ede:	9018      	str	r0, [sp, #96]	; 0x60
    5ee0:	89ab      	ldrh	r3, [r5, #12]
    5ee2:	061b      	lsls	r3, r3, #24
    5ee4:	d505      	bpl.n	5ef2 <_svfprintf_r+0x3a>
    5ee6:	692b      	ldr	r3, [r5, #16]
    5ee8:	9307      	str	r3, [sp, #28]
    5eea:	2b00      	cmp	r3, #0
    5eec:	d101      	bne.n	5ef2 <_svfprintf_r+0x3a>
    5eee:	f001 f863 	bl	6fb8 <_svfprintf_r+0x1100>
    5ef2:	ab32      	add	r3, sp, #200	; 0xc8
    5ef4:	9325      	str	r3, [sp, #148]	; 0x94
    5ef6:	2300      	movs	r3, #0
    5ef8:	46a3      	mov	fp, r4
    5efa:	af25      	add	r7, sp, #148	; 0x94
    5efc:	60bb      	str	r3, [r7, #8]
    5efe:	607b      	str	r3, [r7, #4]
    5f00:	9314      	str	r3, [sp, #80]	; 0x50
    5f02:	9316      	str	r3, [sp, #88]	; 0x58
    5f04:	9315      	str	r3, [sp, #84]	; 0x54
    5f06:	ae32      	add	r6, sp, #200	; 0xc8
    5f08:	9317      	str	r3, [sp, #92]	; 0x5c
    5f0a:	931a      	str	r3, [sp, #104]	; 0x68
    5f0c:	930a      	str	r3, [sp, #40]	; 0x28
    5f0e:	465b      	mov	r3, fp
    5f10:	781b      	ldrb	r3, [r3, #0]
    5f12:	465c      	mov	r4, fp
    5f14:	2b00      	cmp	r3, #0
    5f16:	d01c      	beq.n	5f52 <_svfprintf_r+0x9a>
    5f18:	2b25      	cmp	r3, #37	; 0x25
    5f1a:	d102      	bne.n	5f22 <_svfprintf_r+0x6a>
    5f1c:	e019      	b.n	5f52 <_svfprintf_r+0x9a>
    5f1e:	2b25      	cmp	r3, #37	; 0x25
    5f20:	d003      	beq.n	5f2a <_svfprintf_r+0x72>
    5f22:	3401      	adds	r4, #1
    5f24:	7823      	ldrb	r3, [r4, #0]
    5f26:	2b00      	cmp	r3, #0
    5f28:	d1f9      	bne.n	5f1e <_svfprintf_r+0x66>
    5f2a:	465b      	mov	r3, fp
    5f2c:	1ae5      	subs	r5, r4, r3
    5f2e:	d010      	beq.n	5f52 <_svfprintf_r+0x9a>
    5f30:	465b      	mov	r3, fp
    5f32:	6033      	str	r3, [r6, #0]
    5f34:	68bb      	ldr	r3, [r7, #8]
    5f36:	6075      	str	r5, [r6, #4]
    5f38:	195b      	adds	r3, r3, r5
    5f3a:	60bb      	str	r3, [r7, #8]
    5f3c:	687b      	ldr	r3, [r7, #4]
    5f3e:	3301      	adds	r3, #1
    5f40:	607b      	str	r3, [r7, #4]
    5f42:	2b07      	cmp	r3, #7
    5f44:	dc2e      	bgt.n	5fa4 <_svfprintf_r+0xec>
    5f46:	3608      	adds	r6, #8
    5f48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5f4a:	469c      	mov	ip, r3
    5f4c:	44ac      	add	ip, r5
    5f4e:	4663      	mov	r3, ip
    5f50:	930a      	str	r3, [sp, #40]	; 0x28
    5f52:	7823      	ldrb	r3, [r4, #0]
    5f54:	2b00      	cmp	r3, #0
    5f56:	d02e      	beq.n	5fb6 <_svfprintf_r+0xfe>
    5f58:	1c63      	adds	r3, r4, #1
    5f5a:	469b      	mov	fp, r3
    5f5c:	2300      	movs	r3, #0
    5f5e:	aa16      	add	r2, sp, #88	; 0x58
    5f60:	77d3      	strb	r3, [r2, #31]
    5f62:	2201      	movs	r2, #1
    5f64:	4252      	negs	r2, r2
    5f66:	4692      	mov	sl, r2
    5f68:	2200      	movs	r2, #0
    5f6a:	2100      	movs	r1, #0
    5f6c:	920b      	str	r2, [sp, #44]	; 0x2c
    5f6e:	3220      	adds	r2, #32
    5f70:	4691      	mov	r9, r2
    5f72:	3220      	adds	r2, #32
    5f74:	7863      	ldrb	r3, [r4, #1]
    5f76:	4688      	mov	r8, r1
    5f78:	2000      	movs	r0, #0
    5f7a:	2400      	movs	r4, #0
    5f7c:	4694      	mov	ip, r2
    5f7e:	4659      	mov	r1, fp
    5f80:	3101      	adds	r1, #1
    5f82:	001a      	movs	r2, r3
    5f84:	3a20      	subs	r2, #32
    5f86:	2a58      	cmp	r2, #88	; 0x58
    5f88:	d900      	bls.n	5f8c <_svfprintf_r+0xd4>
    5f8a:	e2fd      	b.n	6588 <_svfprintf_r+0x6d0>
    5f8c:	4dd7      	ldr	r5, [pc, #860]	; (62ec <_svfprintf_r+0x434>)
    5f8e:	0092      	lsls	r2, r2, #2
    5f90:	58aa      	ldr	r2, [r5, r2]
    5f92:	4697      	mov	pc, r2
    5f94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5f96:	920f      	str	r2, [sp, #60]	; 0x3c
    5f98:	425b      	negs	r3, r3
    5f9a:	930b      	str	r3, [sp, #44]	; 0x2c
    5f9c:	2304      	movs	r3, #4
    5f9e:	431c      	orrs	r4, r3
    5fa0:	780b      	ldrb	r3, [r1, #0]
    5fa2:	e7ed      	b.n	5f80 <_svfprintf_r+0xc8>
    5fa4:	003a      	movs	r2, r7
    5fa6:	9906      	ldr	r1, [sp, #24]
    5fa8:	9809      	ldr	r0, [sp, #36]	; 0x24
    5faa:	f005 fe5d 	bl	bc68 <__ssprint_r>
    5fae:	2800      	cmp	r0, #0
    5fb0:	d109      	bne.n	5fc6 <_svfprintf_r+0x10e>
    5fb2:	ae32      	add	r6, sp, #200	; 0xc8
    5fb4:	e7c8      	b.n	5f48 <_svfprintf_r+0x90>
    5fb6:	68bb      	ldr	r3, [r7, #8]
    5fb8:	2b00      	cmp	r3, #0
    5fba:	d004      	beq.n	5fc6 <_svfprintf_r+0x10e>
    5fbc:	003a      	movs	r2, r7
    5fbe:	9906      	ldr	r1, [sp, #24]
    5fc0:	9809      	ldr	r0, [sp, #36]	; 0x24
    5fc2:	f005 fe51 	bl	bc68 <__ssprint_r>
    5fc6:	9b06      	ldr	r3, [sp, #24]
    5fc8:	899b      	ldrh	r3, [r3, #12]
    5fca:	065b      	lsls	r3, r3, #25
    5fcc:	d501      	bpl.n	5fd2 <_svfprintf_r+0x11a>
    5fce:	f001 f8ce 	bl	716e <_svfprintf_r+0x12b6>
    5fd2:	980a      	ldr	r0, [sp, #40]	; 0x28
    5fd4:	b043      	add	sp, #268	; 0x10c
    5fd6:	bc3c      	pop	{r2, r3, r4, r5}
    5fd8:	4690      	mov	r8, r2
    5fda:	4699      	mov	r9, r3
    5fdc:	46a2      	mov	sl, r4
    5fde:	46ab      	mov	fp, r5
    5fe0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5fe2:	2201      	movs	r2, #1
    5fe4:	780b      	ldrb	r3, [r1, #0]
    5fe6:	4690      	mov	r8, r2
    5fe8:	202b      	movs	r0, #43	; 0x2b
    5fea:	e7c9      	b.n	5f80 <_svfprintf_r+0xc8>
    5fec:	1c4b      	adds	r3, r1, #1
    5fee:	469b      	mov	fp, r3
    5ff0:	780b      	ldrb	r3, [r1, #0]
    5ff2:	2b2a      	cmp	r3, #42	; 0x2a
    5ff4:	d101      	bne.n	5ffa <_svfprintf_r+0x142>
    5ff6:	f001 fa1b 	bl	7430 <_svfprintf_r+0x1578>
    5ffa:	001a      	movs	r2, r3
    5ffc:	2100      	movs	r1, #0
    5ffe:	3a30      	subs	r2, #48	; 0x30
    6000:	468a      	mov	sl, r1
    6002:	4659      	mov	r1, fp
    6004:	2a09      	cmp	r2, #9
    6006:	d8bc      	bhi.n	5f82 <_svfprintf_r+0xca>
    6008:	0003      	movs	r3, r0
    600a:	0011      	movs	r1, r2
    600c:	4650      	mov	r0, sl
    600e:	465a      	mov	r2, fp
    6010:	469a      	mov	sl, r3
    6012:	46a3      	mov	fp, r4
    6014:	0083      	lsls	r3, r0, #2
    6016:	181b      	adds	r3, r3, r0
    6018:	7814      	ldrb	r4, [r2, #0]
    601a:	005b      	lsls	r3, r3, #1
    601c:	1858      	adds	r0, r3, r1
    601e:	0021      	movs	r1, r4
    6020:	1c53      	adds	r3, r2, #1
    6022:	3930      	subs	r1, #48	; 0x30
    6024:	001a      	movs	r2, r3
    6026:	2909      	cmp	r1, #9
    6028:	d9f4      	bls.n	6014 <_svfprintf_r+0x15c>
    602a:	4652      	mov	r2, sl
    602c:	0019      	movs	r1, r3
    602e:	4682      	mov	sl, r0
    6030:	0023      	movs	r3, r4
    6032:	0010      	movs	r0, r2
    6034:	465c      	mov	r4, fp
    6036:	e7a4      	b.n	5f82 <_svfprintf_r+0xca>
    6038:	2380      	movs	r3, #128	; 0x80
    603a:	431c      	orrs	r4, r3
    603c:	780b      	ldrb	r3, [r1, #0]
    603e:	e79f      	b.n	5f80 <_svfprintf_r+0xc8>
    6040:	468b      	mov	fp, r1
    6042:	4641      	mov	r1, r8
    6044:	9312      	str	r3, [sp, #72]	; 0x48
    6046:	2900      	cmp	r1, #0
    6048:	d001      	beq.n	604e <_svfprintf_r+0x196>
    604a:	f001 fa1f 	bl	748c <_svfprintf_r+0x15d4>
    604e:	2310      	movs	r3, #16
    6050:	431c      	orrs	r4, r3
    6052:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6054:	06a3      	lsls	r3, r4, #26
    6056:	d501      	bpl.n	605c <_svfprintf_r+0x1a4>
    6058:	f000 fe88 	bl	6d6c <_svfprintf_r+0xeb4>
    605c:	06e3      	lsls	r3, r4, #27
    605e:	d501      	bpl.n	6064 <_svfprintf_r+0x1ac>
    6060:	f000 fd80 	bl	6b64 <_svfprintf_r+0xcac>
    6064:	0663      	lsls	r3, r4, #25
    6066:	d401      	bmi.n	606c <_svfprintf_r+0x1b4>
    6068:	f000 fd7c 	bl	6b64 <_svfprintf_r+0xcac>
    606c:	2100      	movs	r1, #0
    606e:	5e53      	ldrsh	r3, [r2, r1]
    6070:	930c      	str	r3, [sp, #48]	; 0x30
    6072:	3204      	adds	r2, #4
    6074:	17db      	asrs	r3, r3, #31
    6076:	930d      	str	r3, [sp, #52]	; 0x34
    6078:	920f      	str	r2, [sp, #60]	; 0x3c
    607a:	d501      	bpl.n	6080 <_svfprintf_r+0x1c8>
    607c:	f000 fe86 	bl	6d8c <_svfprintf_r+0xed4>
    6080:	990c      	ldr	r1, [sp, #48]	; 0x30
    6082:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6084:	0008      	movs	r0, r1
    6086:	ab16      	add	r3, sp, #88	; 0x58
    6088:	7fdb      	ldrb	r3, [r3, #31]
    608a:	4310      	orrs	r0, r2
    608c:	4698      	mov	r8, r3
    608e:	0002      	movs	r2, r0
    6090:	2301      	movs	r3, #1
    6092:	4651      	mov	r1, sl
    6094:	3101      	adds	r1, #1
    6096:	d100      	bne.n	609a <_svfprintf_r+0x1e2>
    6098:	e0ff      	b.n	629a <_svfprintf_r+0x3e2>
    609a:	2180      	movs	r1, #128	; 0x80
    609c:	0020      	movs	r0, r4
    609e:	4388      	bics	r0, r1
    60a0:	9008      	str	r0, [sp, #32]
    60a2:	2a00      	cmp	r2, #0
    60a4:	d000      	beq.n	60a8 <_svfprintf_r+0x1f0>
    60a6:	e0fc      	b.n	62a2 <_svfprintf_r+0x3ea>
    60a8:	4652      	mov	r2, sl
    60aa:	2a00      	cmp	r2, #0
    60ac:	d001      	beq.n	60b2 <_svfprintf_r+0x1fa>
    60ae:	f000 fc2c 	bl	690a <_svfprintf_r+0xa52>
    60b2:	2b00      	cmp	r3, #0
    60b4:	d001      	beq.n	60ba <_svfprintf_r+0x202>
    60b6:	f000 fd04 	bl	6ac2 <_svfprintf_r+0xc0a>
    60ba:	2001      	movs	r0, #1
    60bc:	ab32      	add	r3, sp, #200	; 0xc8
    60be:	4020      	ands	r0, r4
    60c0:	900e      	str	r0, [sp, #56]	; 0x38
    60c2:	9311      	str	r3, [sp, #68]	; 0x44
    60c4:	d008      	beq.n	60d8 <_svfprintf_r+0x220>
    60c6:	2327      	movs	r3, #39	; 0x27
    60c8:	2130      	movs	r1, #48	; 0x30
    60ca:	aa28      	add	r2, sp, #160	; 0xa0
    60cc:	54d1      	strb	r1, [r2, r3]
    60ce:	aa16      	add	r2, sp, #88	; 0x58
    60d0:	4694      	mov	ip, r2
    60d2:	3348      	adds	r3, #72	; 0x48
    60d4:	4463      	add	r3, ip
    60d6:	9311      	str	r3, [sp, #68]	; 0x44
    60d8:	4653      	mov	r3, sl
    60da:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    60dc:	9307      	str	r3, [sp, #28]
    60de:	4592      	cmp	sl, r2
    60e0:	da00      	bge.n	60e4 <_svfprintf_r+0x22c>
    60e2:	9207      	str	r2, [sp, #28]
    60e4:	2300      	movs	r3, #0
    60e6:	9313      	str	r3, [sp, #76]	; 0x4c
    60e8:	4643      	mov	r3, r8
    60ea:	2b00      	cmp	r3, #0
    60ec:	d002      	beq.n	60f4 <_svfprintf_r+0x23c>
    60ee:	9b07      	ldr	r3, [sp, #28]
    60f0:	3301      	adds	r3, #1
    60f2:	9307      	str	r3, [sp, #28]
    60f4:	2302      	movs	r3, #2
    60f6:	9a08      	ldr	r2, [sp, #32]
    60f8:	401a      	ands	r2, r3
    60fa:	4691      	mov	r9, r2
    60fc:	d002      	beq.n	6104 <_svfprintf_r+0x24c>
    60fe:	9b07      	ldr	r3, [sp, #28]
    6100:	3302      	adds	r3, #2
    6102:	9307      	str	r3, [sp, #28]
    6104:	2384      	movs	r3, #132	; 0x84
    6106:	9a08      	ldr	r2, [sp, #32]
    6108:	401a      	ands	r2, r3
    610a:	9210      	str	r2, [sp, #64]	; 0x40
    610c:	d000      	beq.n	6110 <_svfprintf_r+0x258>
    610e:	e24d      	b.n	65ac <_svfprintf_r+0x6f4>
    6110:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6112:	9a07      	ldr	r2, [sp, #28]
    6114:	1a9c      	subs	r4, r3, r2
    6116:	2c00      	cmp	r4, #0
    6118:	dc00      	bgt.n	611c <_svfprintf_r+0x264>
    611a:	e247      	b.n	65ac <_svfprintf_r+0x6f4>
    611c:	4974      	ldr	r1, [pc, #464]	; (62f0 <_svfprintf_r+0x438>)
    611e:	68ba      	ldr	r2, [r7, #8]
    6120:	687b      	ldr	r3, [r7, #4]
    6122:	4688      	mov	r8, r1
    6124:	2c10      	cmp	r4, #16
    6126:	dd1f      	ble.n	6168 <_svfprintf_r+0x2b0>
    6128:	0031      	movs	r1, r6
    612a:	2510      	movs	r5, #16
    612c:	4646      	mov	r6, r8
    612e:	e003      	b.n	6138 <_svfprintf_r+0x280>
    6130:	3c10      	subs	r4, #16
    6132:	3108      	adds	r1, #8
    6134:	2c10      	cmp	r4, #16
    6136:	dd15      	ble.n	6164 <_svfprintf_r+0x2ac>
    6138:	3210      	adds	r2, #16
    613a:	3301      	adds	r3, #1
    613c:	600e      	str	r6, [r1, #0]
    613e:	604d      	str	r5, [r1, #4]
    6140:	60ba      	str	r2, [r7, #8]
    6142:	607b      	str	r3, [r7, #4]
    6144:	2b07      	cmp	r3, #7
    6146:	ddf3      	ble.n	6130 <_svfprintf_r+0x278>
    6148:	003a      	movs	r2, r7
    614a:	9906      	ldr	r1, [sp, #24]
    614c:	9809      	ldr	r0, [sp, #36]	; 0x24
    614e:	f005 fd8b 	bl	bc68 <__ssprint_r>
    6152:	2800      	cmp	r0, #0
    6154:	d000      	beq.n	6158 <_svfprintf_r+0x2a0>
    6156:	e736      	b.n	5fc6 <_svfprintf_r+0x10e>
    6158:	3c10      	subs	r4, #16
    615a:	68ba      	ldr	r2, [r7, #8]
    615c:	687b      	ldr	r3, [r7, #4]
    615e:	a932      	add	r1, sp, #200	; 0xc8
    6160:	2c10      	cmp	r4, #16
    6162:	dce9      	bgt.n	6138 <_svfprintf_r+0x280>
    6164:	46b0      	mov	r8, r6
    6166:	000e      	movs	r6, r1
    6168:	4641      	mov	r1, r8
    616a:	6074      	str	r4, [r6, #4]
    616c:	3301      	adds	r3, #1
    616e:	18a4      	adds	r4, r4, r2
    6170:	6031      	str	r1, [r6, #0]
    6172:	60bc      	str	r4, [r7, #8]
    6174:	607b      	str	r3, [r7, #4]
    6176:	2b07      	cmp	r3, #7
    6178:	dd01      	ble.n	617e <_svfprintf_r+0x2c6>
    617a:	f000 fca8 	bl	6ace <_svfprintf_r+0xc16>
    617e:	ab16      	add	r3, sp, #88	; 0x58
    6180:	7fdb      	ldrb	r3, [r3, #31]
    6182:	3608      	adds	r6, #8
    6184:	4698      	mov	r8, r3
    6186:	e212      	b.n	65ae <_svfprintf_r+0x6f6>
    6188:	468b      	mov	fp, r1
    618a:	4641      	mov	r1, r8
    618c:	9312      	str	r3, [sp, #72]	; 0x48
    618e:	2900      	cmp	r1, #0
    6190:	d001      	beq.n	6196 <_svfprintf_r+0x2de>
    6192:	f001 f977 	bl	7484 <_svfprintf_r+0x15cc>
    6196:	2207      	movs	r2, #7
    6198:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    619a:	3307      	adds	r3, #7
    619c:	4393      	bics	r3, r2
    619e:	3201      	adds	r2, #1
    61a0:	4694      	mov	ip, r2
    61a2:	449c      	add	ip, r3
    61a4:	4662      	mov	r2, ip
    61a6:	920f      	str	r2, [sp, #60]	; 0x3c
    61a8:	681a      	ldr	r2, [r3, #0]
    61aa:	9216      	str	r2, [sp, #88]	; 0x58
    61ac:	685b      	ldr	r3, [r3, #4]
    61ae:	2201      	movs	r2, #1
    61b0:	9315      	str	r3, [sp, #84]	; 0x54
    61b2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    61b4:	9d16      	ldr	r5, [sp, #88]	; 0x58
    61b6:	005b      	lsls	r3, r3, #1
    61b8:	085b      	lsrs	r3, r3, #1
    61ba:	4698      	mov	r8, r3
    61bc:	4252      	negs	r2, r2
    61be:	4b4d      	ldr	r3, [pc, #308]	; (62f4 <_svfprintf_r+0x43c>)
    61c0:	0028      	movs	r0, r5
    61c2:	4641      	mov	r1, r8
    61c4:	f007 f8bc 	bl	d340 <__aeabi_dcmpun>
    61c8:	2800      	cmp	r0, #0
    61ca:	d001      	beq.n	61d0 <_svfprintf_r+0x318>
    61cc:	f000 fdfd 	bl	6dca <_svfprintf_r+0xf12>
    61d0:	2201      	movs	r2, #1
    61d2:	4b48      	ldr	r3, [pc, #288]	; (62f4 <_svfprintf_r+0x43c>)
    61d4:	4252      	negs	r2, r2
    61d6:	0028      	movs	r0, r5
    61d8:	4641      	mov	r1, r8
    61da:	f7ff f837 	bl	524c <__aeabi_dcmple>
    61de:	2800      	cmp	r0, #0
    61e0:	d001      	beq.n	61e6 <_svfprintf_r+0x32e>
    61e2:	f000 fdf2 	bl	6dca <_svfprintf_r+0xf12>
    61e6:	2200      	movs	r2, #0
    61e8:	2300      	movs	r3, #0
    61ea:	9816      	ldr	r0, [sp, #88]	; 0x58
    61ec:	9915      	ldr	r1, [sp, #84]	; 0x54
    61ee:	f7ff f823 	bl	5238 <__aeabi_dcmplt>
    61f2:	2800      	cmp	r0, #0
    61f4:	d001      	beq.n	61fa <_svfprintf_r+0x342>
    61f6:	f001 f822 	bl	723e <_svfprintf_r+0x1386>
    61fa:	ab16      	add	r3, sp, #88	; 0x58
    61fc:	7fdb      	ldrb	r3, [r3, #31]
    61fe:	4698      	mov	r8, r3
    6200:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6202:	2b47      	cmp	r3, #71	; 0x47
    6204:	dd01      	ble.n	620a <_svfprintf_r+0x352>
    6206:	f000 fec7 	bl	6f98 <_svfprintf_r+0x10e0>
    620a:	4b3b      	ldr	r3, [pc, #236]	; (62f8 <_svfprintf_r+0x440>)
    620c:	9311      	str	r3, [sp, #68]	; 0x44
    620e:	2380      	movs	r3, #128	; 0x80
    6210:	439c      	bics	r4, r3
    6212:	3b7d      	subs	r3, #125	; 0x7d
    6214:	9307      	str	r3, [sp, #28]
    6216:	930e      	str	r3, [sp, #56]	; 0x38
    6218:	2300      	movs	r3, #0
    621a:	9408      	str	r4, [sp, #32]
    621c:	469a      	mov	sl, r3
    621e:	9313      	str	r3, [sp, #76]	; 0x4c
    6220:	e762      	b.n	60e8 <_svfprintf_r+0x230>
    6222:	2200      	movs	r2, #0
    6224:	3b30      	subs	r3, #48	; 0x30
    6226:	0015      	movs	r5, r2
    6228:	001a      	movs	r2, r3
    622a:	0003      	movs	r3, r0
    622c:	9407      	str	r4, [sp, #28]
    622e:	0008      	movs	r0, r1
    6230:	002c      	movs	r4, r5
    6232:	469b      	mov	fp, r3
    6234:	00a3      	lsls	r3, r4, #2
    6236:	191c      	adds	r4, r3, r4
    6238:	7803      	ldrb	r3, [r0, #0]
    623a:	0064      	lsls	r4, r4, #1
    623c:	1914      	adds	r4, r2, r4
    623e:	001a      	movs	r2, r3
    6240:	3101      	adds	r1, #1
    6242:	3a30      	subs	r2, #48	; 0x30
    6244:	0008      	movs	r0, r1
    6246:	2a09      	cmp	r2, #9
    6248:	d9f4      	bls.n	6234 <_svfprintf_r+0x37c>
    624a:	940b      	str	r4, [sp, #44]	; 0x2c
    624c:	4658      	mov	r0, fp
    624e:	9c07      	ldr	r4, [sp, #28]
    6250:	e697      	b.n	5f82 <_svfprintf_r+0xca>
    6252:	2308      	movs	r3, #8
    6254:	431c      	orrs	r4, r3
    6256:	780b      	ldrb	r3, [r1, #0]
    6258:	e692      	b.n	5f80 <_svfprintf_r+0xc8>
    625a:	9312      	str	r3, [sp, #72]	; 0x48
    625c:	2310      	movs	r3, #16
    625e:	431c      	orrs	r4, r3
    6260:	468b      	mov	fp, r1
    6262:	06a3      	lsls	r3, r4, #26
    6264:	d500      	bpl.n	6268 <_svfprintf_r+0x3b0>
    6266:	e17b      	b.n	6560 <_svfprintf_r+0x6a8>
    6268:	06e3      	lsls	r3, r4, #27
    626a:	d501      	bpl.n	6270 <_svfprintf_r+0x3b8>
    626c:	f000 fc7e 	bl	6b6c <_svfprintf_r+0xcb4>
    6270:	0663      	lsls	r3, r4, #25
    6272:	d401      	bmi.n	6278 <_svfprintf_r+0x3c0>
    6274:	f000 fc7a 	bl	6b6c <_svfprintf_r+0xcb4>
    6278:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    627a:	881a      	ldrh	r2, [r3, #0]
    627c:	920c      	str	r2, [sp, #48]	; 0x30
    627e:	2200      	movs	r2, #0
    6280:	3304      	adds	r3, #4
    6282:	930f      	str	r3, [sp, #60]	; 0x3c
    6284:	2300      	movs	r3, #0
    6286:	920d      	str	r2, [sp, #52]	; 0x34
    6288:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    628a:	2100      	movs	r1, #0
    628c:	a816      	add	r0, sp, #88	; 0x58
    628e:	77c1      	strb	r1, [r0, #31]
    6290:	4688      	mov	r8, r1
    6292:	4651      	mov	r1, sl
    6294:	3101      	adds	r1, #1
    6296:	d000      	beq.n	629a <_svfprintf_r+0x3e2>
    6298:	e6ff      	b.n	609a <_svfprintf_r+0x1e2>
    629a:	2a00      	cmp	r2, #0
    629c:	d100      	bne.n	62a0 <_svfprintf_r+0x3e8>
    629e:	e335      	b.n	690c <_svfprintf_r+0xa54>
    62a0:	9408      	str	r4, [sp, #32]
    62a2:	2b01      	cmp	r3, #1
    62a4:	d100      	bne.n	62a8 <_svfprintf_r+0x3f0>
    62a6:	e3e5      	b.n	6a74 <_svfprintf_r+0xbbc>
    62a8:	2b02      	cmp	r3, #2
    62aa:	d000      	beq.n	62ae <_svfprintf_r+0x3f6>
    62ac:	e362      	b.n	6974 <_svfprintf_r+0xabc>
    62ae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    62b0:	200f      	movs	r0, #15
    62b2:	46a1      	mov	r9, r4
    62b4:	46b4      	mov	ip, r6
    62b6:	ab32      	add	r3, sp, #200	; 0xc8
    62b8:	0019      	movs	r1, r3
    62ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    62bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    62be:	0004      	movs	r4, r0
    62c0:	464d      	mov	r5, r9
    62c2:	4014      	ands	r4, r2
    62c4:	5d2c      	ldrb	r4, [r5, r4]
    62c6:	071e      	lsls	r6, r3, #28
    62c8:	0915      	lsrs	r5, r2, #4
    62ca:	3901      	subs	r1, #1
    62cc:	432e      	orrs	r6, r5
    62ce:	700c      	strb	r4, [r1, #0]
    62d0:	091c      	lsrs	r4, r3, #4
    62d2:	0023      	movs	r3, r4
    62d4:	0034      	movs	r4, r6
    62d6:	0032      	movs	r2, r6
    62d8:	431c      	orrs	r4, r3
    62da:	d1f0      	bne.n	62be <_svfprintf_r+0x406>
    62dc:	920c      	str	r2, [sp, #48]	; 0x30
    62de:	930d      	str	r3, [sp, #52]	; 0x34
    62e0:	ab32      	add	r3, sp, #200	; 0xc8
    62e2:	1a5b      	subs	r3, r3, r1
    62e4:	9111      	str	r1, [sp, #68]	; 0x44
    62e6:	4666      	mov	r6, ip
    62e8:	930e      	str	r3, [sp, #56]	; 0x38
    62ea:	e6f5      	b.n	60d8 <_svfprintf_r+0x220>
    62ec:	0000ec78 	.word	0x0000ec78
    62f0:	0000ee20 	.word	0x0000ee20
    62f4:	7fefffff 	.word	0x7fefffff
    62f8:	0000eddc 	.word	0x0000eddc
    62fc:	9312      	str	r3, [sp, #72]	; 0x48
    62fe:	2310      	movs	r3, #16
    6300:	431c      	orrs	r4, r3
    6302:	468b      	mov	fp, r1
    6304:	06a3      	lsls	r3, r4, #26
    6306:	d500      	bpl.n	630a <_svfprintf_r+0x452>
    6308:	e111      	b.n	652e <_svfprintf_r+0x676>
    630a:	06e3      	lsls	r3, r4, #27
    630c:	d501      	bpl.n	6312 <_svfprintf_r+0x45a>
    630e:	f000 fc31 	bl	6b74 <_svfprintf_r+0xcbc>
    6312:	0663      	lsls	r3, r4, #25
    6314:	d401      	bmi.n	631a <_svfprintf_r+0x462>
    6316:	f000 fc2d 	bl	6b74 <_svfprintf_r+0xcbc>
    631a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    631c:	881a      	ldrh	r2, [r3, #0]
    631e:	920c      	str	r2, [sp, #48]	; 0x30
    6320:	2200      	movs	r2, #0
    6322:	3304      	adds	r3, #4
    6324:	920d      	str	r2, [sp, #52]	; 0x34
    6326:	930f      	str	r3, [sp, #60]	; 0x3c
    6328:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    632a:	2301      	movs	r3, #1
    632c:	e7ad      	b.n	628a <_svfprintf_r+0x3d2>
    632e:	468b      	mov	fp, r1
    6330:	4641      	mov	r1, r8
    6332:	9312      	str	r3, [sp, #72]	; 0x48
    6334:	2900      	cmp	r1, #0
    6336:	d001      	beq.n	633c <_svfprintf_r+0x484>
    6338:	f001 f890 	bl	745c <_svfprintf_r+0x15a4>
    633c:	4bb8      	ldr	r3, [pc, #736]	; (6620 <_svfprintf_r+0x768>)
    633e:	9317      	str	r3, [sp, #92]	; 0x5c
    6340:	06a3      	lsls	r3, r4, #26
    6342:	d500      	bpl.n	6346 <_svfprintf_r+0x48e>
    6344:	e0ab      	b.n	649e <_svfprintf_r+0x5e6>
    6346:	06e3      	lsls	r3, r4, #27
    6348:	d501      	bpl.n	634e <_svfprintf_r+0x496>
    634a:	f000 fc07 	bl	6b5c <_svfprintf_r+0xca4>
    634e:	0663      	lsls	r3, r4, #25
    6350:	d401      	bmi.n	6356 <_svfprintf_r+0x49e>
    6352:	f000 fc03 	bl	6b5c <_svfprintf_r+0xca4>
    6356:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6358:	881a      	ldrh	r2, [r3, #0]
    635a:	920c      	str	r2, [sp, #48]	; 0x30
    635c:	2200      	movs	r2, #0
    635e:	3304      	adds	r3, #4
    6360:	920d      	str	r2, [sp, #52]	; 0x34
    6362:	930f      	str	r3, [sp, #60]	; 0x3c
    6364:	07e3      	lsls	r3, r4, #31
    6366:	d400      	bmi.n	636a <_svfprintf_r+0x4b2>
    6368:	e0a9      	b.n	64be <_svfprintf_r+0x606>
    636a:	990c      	ldr	r1, [sp, #48]	; 0x30
    636c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    636e:	000b      	movs	r3, r1
    6370:	4313      	orrs	r3, r2
    6372:	001a      	movs	r2, r3
    6374:	2302      	movs	r3, #2
    6376:	2a00      	cmp	r2, #0
    6378:	d100      	bne.n	637c <_svfprintf_r+0x4c4>
    637a:	e786      	b.n	628a <_svfprintf_r+0x3d2>
    637c:	2030      	movs	r0, #48	; 0x30
    637e:	a91e      	add	r1, sp, #120	; 0x78
    6380:	7008      	strb	r0, [r1, #0]
    6382:	2548      	movs	r5, #72	; 0x48
    6384:	4668      	mov	r0, sp
    6386:	1940      	adds	r0, r0, r5
    6388:	7800      	ldrb	r0, [r0, #0]
    638a:	431c      	orrs	r4, r3
    638c:	7048      	strb	r0, [r1, #1]
    638e:	e77c      	b.n	628a <_svfprintf_r+0x3d2>
    6390:	468b      	mov	fp, r1
    6392:	4641      	mov	r1, r8
    6394:	2900      	cmp	r1, #0
    6396:	d001      	beq.n	639c <_svfprintf_r+0x4e4>
    6398:	f001 f883 	bl	74a2 <_svfprintf_r+0x15ea>
    639c:	06a3      	lsls	r3, r4, #26
    639e:	d501      	bpl.n	63a4 <_svfprintf_r+0x4ec>
    63a0:	f000 fde9 	bl	6f76 <_svfprintf_r+0x10be>
    63a4:	06e3      	lsls	r3, r4, #27
    63a6:	d501      	bpl.n	63ac <_svfprintf_r+0x4f4>
    63a8:	f000 fd9b 	bl	6ee2 <_svfprintf_r+0x102a>
    63ac:	0663      	lsls	r3, r4, #25
    63ae:	d401      	bmi.n	63b4 <_svfprintf_r+0x4fc>
    63b0:	f000 fd97 	bl	6ee2 <_svfprintf_r+0x102a>
    63b4:	4669      	mov	r1, sp
    63b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    63b8:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    63ba:	681a      	ldr	r2, [r3, #0]
    63bc:	3304      	adds	r3, #4
    63be:	9207      	str	r2, [sp, #28]
    63c0:	8011      	strh	r1, [r2, #0]
    63c2:	930f      	str	r3, [sp, #60]	; 0x3c
    63c4:	e5a3      	b.n	5f0e <_svfprintf_r+0x56>
    63c6:	464b      	mov	r3, r9
    63c8:	431c      	orrs	r4, r3
    63ca:	780b      	ldrb	r3, [r1, #0]
    63cc:	e5d8      	b.n	5f80 <_svfprintf_r+0xc8>
    63ce:	9312      	str	r3, [sp, #72]	; 0x48
    63d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    63d2:	468b      	mov	fp, r1
    63d4:	1d1d      	adds	r5, r3, #4
    63d6:	681b      	ldr	r3, [r3, #0]
    63d8:	a916      	add	r1, sp, #88	; 0x58
    63da:	001a      	movs	r2, r3
    63dc:	9311      	str	r3, [sp, #68]	; 0x44
    63de:	2300      	movs	r3, #0
    63e0:	77cb      	strb	r3, [r1, #31]
    63e2:	2a00      	cmp	r2, #0
    63e4:	d101      	bne.n	63ea <_svfprintf_r+0x532>
    63e6:	f000 fefb 	bl	71e0 <_svfprintf_r+0x1328>
    63ea:	4653      	mov	r3, sl
    63ec:	3301      	adds	r3, #1
    63ee:	d101      	bne.n	63f4 <_svfprintf_r+0x53c>
    63f0:	f000 fe38 	bl	7064 <_svfprintf_r+0x11ac>
    63f4:	4652      	mov	r2, sl
    63f6:	2100      	movs	r1, #0
    63f8:	9811      	ldr	r0, [sp, #68]	; 0x44
    63fa:	f003 fc51 	bl	9ca0 <memchr>
    63fe:	2800      	cmp	r0, #0
    6400:	d101      	bne.n	6406 <_svfprintf_r+0x54e>
    6402:	f000 ff54 	bl	72ae <_svfprintf_r+0x13f6>
    6406:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6408:	1ac3      	subs	r3, r0, r3
    640a:	001a      	movs	r2, r3
    640c:	930e      	str	r3, [sp, #56]	; 0x38
    640e:	43db      	mvns	r3, r3
    6410:	17db      	asrs	r3, r3, #31
    6412:	401a      	ands	r2, r3
    6414:	ab16      	add	r3, sp, #88	; 0x58
    6416:	7fdb      	ldrb	r3, [r3, #31]
    6418:	9207      	str	r2, [sp, #28]
    641a:	4698      	mov	r8, r3
    641c:	2300      	movs	r3, #0
    641e:	950f      	str	r5, [sp, #60]	; 0x3c
    6420:	9408      	str	r4, [sp, #32]
    6422:	469a      	mov	sl, r3
    6424:	9313      	str	r3, [sp, #76]	; 0x4c
    6426:	e65f      	b.n	60e8 <_svfprintf_r+0x230>
    6428:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    642a:	9312      	str	r3, [sp, #72]	; 0x48
    642c:	6813      	ldr	r3, [r2, #0]
    642e:	ad28      	add	r5, sp, #160	; 0xa0
    6430:	9307      	str	r3, [sp, #28]
    6432:	466b      	mov	r3, sp
    6434:	7f1b      	ldrb	r3, [r3, #28]
    6436:	468b      	mov	fp, r1
    6438:	702b      	strb	r3, [r5, #0]
    643a:	2300      	movs	r3, #0
    643c:	a916      	add	r1, sp, #88	; 0x58
    643e:	77cb      	strb	r3, [r1, #31]
    6440:	0013      	movs	r3, r2
    6442:	3304      	adds	r3, #4
    6444:	930f      	str	r3, [sp, #60]	; 0x3c
    6446:	2300      	movs	r3, #0
    6448:	9408      	str	r4, [sp, #32]
    644a:	4698      	mov	r8, r3
    644c:	3301      	adds	r3, #1
    644e:	9307      	str	r3, [sp, #28]
    6450:	930e      	str	r3, [sp, #56]	; 0x38
    6452:	2300      	movs	r3, #0
    6454:	9511      	str	r5, [sp, #68]	; 0x44
    6456:	469a      	mov	sl, r3
    6458:	9313      	str	r3, [sp, #76]	; 0x4c
    645a:	e64b      	b.n	60f4 <_svfprintf_r+0x23c>
    645c:	468b      	mov	fp, r1
    645e:	4641      	mov	r1, r8
    6460:	9312      	str	r3, [sp, #72]	; 0x48
    6462:	2900      	cmp	r1, #0
    6464:	d100      	bne.n	6468 <_svfprintf_r+0x5b0>
    6466:	e5f4      	b.n	6052 <_svfprintf_r+0x19a>
    6468:	ab16      	add	r3, sp, #88	; 0x58
    646a:	77d8      	strb	r0, [r3, #31]
    646c:	e5f1      	b.n	6052 <_svfprintf_r+0x19a>
    646e:	4663      	mov	r3, ip
    6470:	431c      	orrs	r4, r3
    6472:	780b      	ldrb	r3, [r1, #0]
    6474:	e584      	b.n	5f80 <_svfprintf_r+0xc8>
    6476:	780b      	ldrb	r3, [r1, #0]
    6478:	2b6c      	cmp	r3, #108	; 0x6c
    647a:	d101      	bne.n	6480 <_svfprintf_r+0x5c8>
    647c:	f000 fd86 	bl	6f8c <_svfprintf_r+0x10d4>
    6480:	2210      	movs	r2, #16
    6482:	4314      	orrs	r4, r2
    6484:	e57c      	b.n	5f80 <_svfprintf_r+0xc8>
    6486:	468b      	mov	fp, r1
    6488:	4641      	mov	r1, r8
    648a:	9312      	str	r3, [sp, #72]	; 0x48
    648c:	2900      	cmp	r1, #0
    648e:	d001      	beq.n	6494 <_svfprintf_r+0x5dc>
    6490:	f000 ffe8 	bl	7464 <_svfprintf_r+0x15ac>
    6494:	4b63      	ldr	r3, [pc, #396]	; (6624 <_svfprintf_r+0x76c>)
    6496:	9317      	str	r3, [sp, #92]	; 0x5c
    6498:	06a3      	lsls	r3, r4, #26
    649a:	d400      	bmi.n	649e <_svfprintf_r+0x5e6>
    649c:	e753      	b.n	6346 <_svfprintf_r+0x48e>
    649e:	2207      	movs	r2, #7
    64a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    64a2:	3307      	adds	r3, #7
    64a4:	4393      	bics	r3, r2
    64a6:	3201      	adds	r2, #1
    64a8:	4694      	mov	ip, r2
    64aa:	449c      	add	ip, r3
    64ac:	4662      	mov	r2, ip
    64ae:	920f      	str	r2, [sp, #60]	; 0x3c
    64b0:	681a      	ldr	r2, [r3, #0]
    64b2:	685b      	ldr	r3, [r3, #4]
    64b4:	920c      	str	r2, [sp, #48]	; 0x30
    64b6:	930d      	str	r3, [sp, #52]	; 0x34
    64b8:	07e3      	lsls	r3, r4, #31
    64ba:	d500      	bpl.n	64be <_svfprintf_r+0x606>
    64bc:	e755      	b.n	636a <_svfprintf_r+0x4b2>
    64be:	990c      	ldr	r1, [sp, #48]	; 0x30
    64c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    64c2:	0008      	movs	r0, r1
    64c4:	4310      	orrs	r0, r2
    64c6:	2302      	movs	r3, #2
    64c8:	0002      	movs	r2, r0
    64ca:	e6de      	b.n	628a <_svfprintf_r+0x3d2>
    64cc:	468b      	mov	fp, r1
    64ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
    64d0:	2230      	movs	r2, #48	; 0x30
    64d2:	680b      	ldr	r3, [r1, #0]
    64d4:	930c      	str	r3, [sp, #48]	; 0x30
    64d6:	2300      	movs	r3, #0
    64d8:	930d      	str	r3, [sp, #52]	; 0x34
    64da:	3302      	adds	r3, #2
    64dc:	431c      	orrs	r4, r3
    64de:	ab1e      	add	r3, sp, #120	; 0x78
    64e0:	701a      	strb	r2, [r3, #0]
    64e2:	3248      	adds	r2, #72	; 0x48
    64e4:	705a      	strb	r2, [r3, #1]
    64e6:	000b      	movs	r3, r1
    64e8:	3304      	adds	r3, #4
    64ea:	930f      	str	r3, [sp, #60]	; 0x3c
    64ec:	4b4d      	ldr	r3, [pc, #308]	; (6624 <_svfprintf_r+0x76c>)
    64ee:	9212      	str	r2, [sp, #72]	; 0x48
    64f0:	9317      	str	r3, [sp, #92]	; 0x5c
    64f2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    64f4:	2302      	movs	r3, #2
    64f6:	e6c8      	b.n	628a <_svfprintf_r+0x3d2>
    64f8:	2301      	movs	r3, #1
    64fa:	431c      	orrs	r4, r3
    64fc:	780b      	ldrb	r3, [r1, #0]
    64fe:	e53f      	b.n	5f80 <_svfprintf_r+0xc8>
    6500:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6502:	1d1a      	adds	r2, r3, #4
    6504:	681b      	ldr	r3, [r3, #0]
    6506:	930b      	str	r3, [sp, #44]	; 0x2c
    6508:	2b00      	cmp	r3, #0
    650a:	da00      	bge.n	650e <_svfprintf_r+0x656>
    650c:	e542      	b.n	5f94 <_svfprintf_r+0xdc>
    650e:	780b      	ldrb	r3, [r1, #0]
    6510:	920f      	str	r2, [sp, #60]	; 0x3c
    6512:	e535      	b.n	5f80 <_svfprintf_r+0xc8>
    6514:	780b      	ldrb	r3, [r1, #0]
    6516:	2800      	cmp	r0, #0
    6518:	d000      	beq.n	651c <_svfprintf_r+0x664>
    651a:	e531      	b.n	5f80 <_svfprintf_r+0xc8>
    651c:	2201      	movs	r2, #1
    651e:	3020      	adds	r0, #32
    6520:	4690      	mov	r8, r2
    6522:	e52d      	b.n	5f80 <_svfprintf_r+0xc8>
    6524:	468b      	mov	fp, r1
    6526:	9312      	str	r3, [sp, #72]	; 0x48
    6528:	06a3      	lsls	r3, r4, #26
    652a:	d400      	bmi.n	652e <_svfprintf_r+0x676>
    652c:	e6ed      	b.n	630a <_svfprintf_r+0x452>
    652e:	2207      	movs	r2, #7
    6530:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6532:	3307      	adds	r3, #7
    6534:	4393      	bics	r3, r2
    6536:	3201      	adds	r2, #1
    6538:	4694      	mov	ip, r2
    653a:	449c      	add	ip, r3
    653c:	4662      	mov	r2, ip
    653e:	920f      	str	r2, [sp, #60]	; 0x3c
    6540:	681a      	ldr	r2, [r3, #0]
    6542:	685b      	ldr	r3, [r3, #4]
    6544:	0011      	movs	r1, r2
    6546:	001a      	movs	r2, r3
    6548:	0008      	movs	r0, r1
    654a:	4310      	orrs	r0, r2
    654c:	910c      	str	r1, [sp, #48]	; 0x30
    654e:	920d      	str	r2, [sp, #52]	; 0x34
    6550:	2301      	movs	r3, #1
    6552:	0002      	movs	r2, r0
    6554:	e699      	b.n	628a <_svfprintf_r+0x3d2>
    6556:	468b      	mov	fp, r1
    6558:	9312      	str	r3, [sp, #72]	; 0x48
    655a:	06a3      	lsls	r3, r4, #26
    655c:	d400      	bmi.n	6560 <_svfprintf_r+0x6a8>
    655e:	e683      	b.n	6268 <_svfprintf_r+0x3b0>
    6560:	2207      	movs	r2, #7
    6562:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6564:	3307      	adds	r3, #7
    6566:	4393      	bics	r3, r2
    6568:	3201      	adds	r2, #1
    656a:	4694      	mov	ip, r2
    656c:	449c      	add	ip, r3
    656e:	4662      	mov	r2, ip
    6570:	920f      	str	r2, [sp, #60]	; 0x3c
    6572:	681a      	ldr	r2, [r3, #0]
    6574:	685b      	ldr	r3, [r3, #4]
    6576:	0011      	movs	r1, r2
    6578:	001a      	movs	r2, r3
    657a:	0008      	movs	r0, r1
    657c:	4310      	orrs	r0, r2
    657e:	910c      	str	r1, [sp, #48]	; 0x30
    6580:	920d      	str	r2, [sp, #52]	; 0x34
    6582:	2300      	movs	r3, #0
    6584:	0002      	movs	r2, r0
    6586:	e680      	b.n	628a <_svfprintf_r+0x3d2>
    6588:	468b      	mov	fp, r1
    658a:	4641      	mov	r1, r8
    658c:	9312      	str	r3, [sp, #72]	; 0x48
    658e:	2900      	cmp	r1, #0
    6590:	d001      	beq.n	6596 <_svfprintf_r+0x6de>
    6592:	f000 ff7f 	bl	7494 <_svfprintf_r+0x15dc>
    6596:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6598:	2b00      	cmp	r3, #0
    659a:	d100      	bne.n	659e <_svfprintf_r+0x6e6>
    659c:	e50b      	b.n	5fb6 <_svfprintf_r+0xfe>
    659e:	ad28      	add	r5, sp, #160	; 0xa0
    65a0:	702b      	strb	r3, [r5, #0]
    65a2:	2300      	movs	r3, #0
    65a4:	aa16      	add	r2, sp, #88	; 0x58
    65a6:	77d3      	strb	r3, [r2, #31]
    65a8:	9408      	str	r4, [sp, #32]
    65aa:	e74e      	b.n	644a <_svfprintf_r+0x592>
    65ac:	68bc      	ldr	r4, [r7, #8]
    65ae:	4643      	mov	r3, r8
    65b0:	2b00      	cmp	r3, #0
    65b2:	d00f      	beq.n	65d4 <_svfprintf_r+0x71c>
    65b4:	aa16      	add	r2, sp, #88	; 0x58
    65b6:	231f      	movs	r3, #31
    65b8:	4694      	mov	ip, r2
    65ba:	4463      	add	r3, ip
    65bc:	6033      	str	r3, [r6, #0]
    65be:	2301      	movs	r3, #1
    65c0:	6073      	str	r3, [r6, #4]
    65c2:	687b      	ldr	r3, [r7, #4]
    65c4:	3401      	adds	r4, #1
    65c6:	3301      	adds	r3, #1
    65c8:	60bc      	str	r4, [r7, #8]
    65ca:	607b      	str	r3, [r7, #4]
    65cc:	2b07      	cmp	r3, #7
    65ce:	dd00      	ble.n	65d2 <_svfprintf_r+0x71a>
    65d0:	e1b3      	b.n	693a <_svfprintf_r+0xa82>
    65d2:	3608      	adds	r6, #8
    65d4:	464b      	mov	r3, r9
    65d6:	2b00      	cmp	r3, #0
    65d8:	d00c      	beq.n	65f4 <_svfprintf_r+0x73c>
    65da:	ab1e      	add	r3, sp, #120	; 0x78
    65dc:	6033      	str	r3, [r6, #0]
    65de:	2302      	movs	r3, #2
    65e0:	6073      	str	r3, [r6, #4]
    65e2:	687b      	ldr	r3, [r7, #4]
    65e4:	3402      	adds	r4, #2
    65e6:	3301      	adds	r3, #1
    65e8:	60bc      	str	r4, [r7, #8]
    65ea:	607b      	str	r3, [r7, #4]
    65ec:	2b07      	cmp	r3, #7
    65ee:	dd00      	ble.n	65f2 <_svfprintf_r+0x73a>
    65f0:	e1af      	b.n	6952 <_svfprintf_r+0xa9a>
    65f2:	3608      	adds	r6, #8
    65f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    65f6:	2b80      	cmp	r3, #128	; 0x80
    65f8:	d100      	bne.n	65fc <_svfprintf_r+0x744>
    65fa:	e120      	b.n	683e <_svfprintf_r+0x986>
    65fc:	4653      	mov	r3, sl
    65fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    6600:	1a9d      	subs	r5, r3, r2
    6602:	2d00      	cmp	r5, #0
    6604:	dd3c      	ble.n	6680 <_svfprintf_r+0x7c8>
    6606:	4a08      	ldr	r2, [pc, #32]	; (6628 <_svfprintf_r+0x770>)
    6608:	687b      	ldr	r3, [r7, #4]
    660a:	4691      	mov	r9, r2
    660c:	2d10      	cmp	r5, #16
    660e:	dd2c      	ble.n	666a <_svfprintf_r+0x7b2>
    6610:	2210      	movs	r2, #16
    6612:	0021      	movs	r1, r4
    6614:	4692      	mov	sl, r2
    6616:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6618:	0032      	movs	r2, r6
    661a:	002e      	movs	r6, r5
    661c:	464d      	mov	r5, r9
    661e:	e009      	b.n	6634 <_svfprintf_r+0x77c>
    6620:	0000edec 	.word	0x0000edec
    6624:	0000ee00 	.word	0x0000ee00
    6628:	0000ee30 	.word	0x0000ee30
    662c:	3e10      	subs	r6, #16
    662e:	3208      	adds	r2, #8
    6630:	2e10      	cmp	r6, #16
    6632:	dd16      	ble.n	6662 <_svfprintf_r+0x7aa>
    6634:	4650      	mov	r0, sl
    6636:	3110      	adds	r1, #16
    6638:	3301      	adds	r3, #1
    663a:	6015      	str	r5, [r2, #0]
    663c:	6050      	str	r0, [r2, #4]
    663e:	60b9      	str	r1, [r7, #8]
    6640:	607b      	str	r3, [r7, #4]
    6642:	2b07      	cmp	r3, #7
    6644:	ddf2      	ble.n	662c <_svfprintf_r+0x774>
    6646:	003a      	movs	r2, r7
    6648:	9906      	ldr	r1, [sp, #24]
    664a:	0020      	movs	r0, r4
    664c:	f005 fb0c 	bl	bc68 <__ssprint_r>
    6650:	2800      	cmp	r0, #0
    6652:	d000      	beq.n	6656 <_svfprintf_r+0x79e>
    6654:	e4b7      	b.n	5fc6 <_svfprintf_r+0x10e>
    6656:	3e10      	subs	r6, #16
    6658:	68b9      	ldr	r1, [r7, #8]
    665a:	687b      	ldr	r3, [r7, #4]
    665c:	aa32      	add	r2, sp, #200	; 0xc8
    665e:	2e10      	cmp	r6, #16
    6660:	dce8      	bgt.n	6634 <_svfprintf_r+0x77c>
    6662:	46a9      	mov	r9, r5
    6664:	000c      	movs	r4, r1
    6666:	0035      	movs	r5, r6
    6668:	0016      	movs	r6, r2
    666a:	464a      	mov	r2, r9
    666c:	1964      	adds	r4, r4, r5
    666e:	3301      	adds	r3, #1
    6670:	6032      	str	r2, [r6, #0]
    6672:	6075      	str	r5, [r6, #4]
    6674:	60bc      	str	r4, [r7, #8]
    6676:	607b      	str	r3, [r7, #4]
    6678:	2b07      	cmp	r3, #7
    667a:	dd00      	ble.n	667e <_svfprintf_r+0x7c6>
    667c:	e151      	b.n	6922 <_svfprintf_r+0xa6a>
    667e:	3608      	adds	r6, #8
    6680:	9b08      	ldr	r3, [sp, #32]
    6682:	05db      	lsls	r3, r3, #23
    6684:	d500      	bpl.n	6688 <_svfprintf_r+0x7d0>
    6686:	e0b6      	b.n	67f6 <_svfprintf_r+0x93e>
    6688:	9b11      	ldr	r3, [sp, #68]	; 0x44
    668a:	6033      	str	r3, [r6, #0]
    668c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    668e:	469c      	mov	ip, r3
    6690:	6073      	str	r3, [r6, #4]
    6692:	687b      	ldr	r3, [r7, #4]
    6694:	4464      	add	r4, ip
    6696:	3301      	adds	r3, #1
    6698:	60bc      	str	r4, [r7, #8]
    669a:	607b      	str	r3, [r7, #4]
    669c:	2b07      	cmp	r3, #7
    669e:	dd00      	ble.n	66a2 <_svfprintf_r+0x7ea>
    66a0:	e09d      	b.n	67de <_svfprintf_r+0x926>
    66a2:	3608      	adds	r6, #8
    66a4:	9b08      	ldr	r3, [sp, #32]
    66a6:	075b      	lsls	r3, r3, #29
    66a8:	d541      	bpl.n	672e <_svfprintf_r+0x876>
    66aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    66ac:	9a07      	ldr	r2, [sp, #28]
    66ae:	1a9d      	subs	r5, r3, r2
    66b0:	2d00      	cmp	r5, #0
    66b2:	dd3c      	ble.n	672e <_svfprintf_r+0x876>
    66b4:	4ac4      	ldr	r2, [pc, #784]	; (69c8 <_svfprintf_r+0xb10>)
    66b6:	687b      	ldr	r3, [r7, #4]
    66b8:	4690      	mov	r8, r2
    66ba:	2d10      	cmp	r5, #16
    66bc:	dd26      	ble.n	670c <_svfprintf_r+0x854>
    66be:	2210      	movs	r2, #16
    66c0:	0021      	movs	r1, r4
    66c2:	4691      	mov	r9, r2
    66c4:	9c09      	ldr	r4, [sp, #36]	; 0x24
    66c6:	0032      	movs	r2, r6
    66c8:	002e      	movs	r6, r5
    66ca:	9d06      	ldr	r5, [sp, #24]
    66cc:	e003      	b.n	66d6 <_svfprintf_r+0x81e>
    66ce:	3e10      	subs	r6, #16
    66d0:	3208      	adds	r2, #8
    66d2:	2e10      	cmp	r6, #16
    66d4:	dd17      	ble.n	6706 <_svfprintf_r+0x84e>
    66d6:	48bc      	ldr	r0, [pc, #752]	; (69c8 <_svfprintf_r+0xb10>)
    66d8:	3110      	adds	r1, #16
    66da:	6010      	str	r0, [r2, #0]
    66dc:	4648      	mov	r0, r9
    66de:	3301      	adds	r3, #1
    66e0:	6050      	str	r0, [r2, #4]
    66e2:	60b9      	str	r1, [r7, #8]
    66e4:	607b      	str	r3, [r7, #4]
    66e6:	2b07      	cmp	r3, #7
    66e8:	ddf1      	ble.n	66ce <_svfprintf_r+0x816>
    66ea:	003a      	movs	r2, r7
    66ec:	0029      	movs	r1, r5
    66ee:	0020      	movs	r0, r4
    66f0:	f005 faba 	bl	bc68 <__ssprint_r>
    66f4:	2800      	cmp	r0, #0
    66f6:	d000      	beq.n	66fa <_svfprintf_r+0x842>
    66f8:	e465      	b.n	5fc6 <_svfprintf_r+0x10e>
    66fa:	3e10      	subs	r6, #16
    66fc:	68b9      	ldr	r1, [r7, #8]
    66fe:	687b      	ldr	r3, [r7, #4]
    6700:	aa32      	add	r2, sp, #200	; 0xc8
    6702:	2e10      	cmp	r6, #16
    6704:	dce7      	bgt.n	66d6 <_svfprintf_r+0x81e>
    6706:	0035      	movs	r5, r6
    6708:	000c      	movs	r4, r1
    670a:	0016      	movs	r6, r2
    670c:	4642      	mov	r2, r8
    670e:	1964      	adds	r4, r4, r5
    6710:	3301      	adds	r3, #1
    6712:	c624      	stmia	r6!, {r2, r5}
    6714:	60bc      	str	r4, [r7, #8]
    6716:	607b      	str	r3, [r7, #4]
    6718:	2b07      	cmp	r3, #7
    671a:	dd08      	ble.n	672e <_svfprintf_r+0x876>
    671c:	003a      	movs	r2, r7
    671e:	9906      	ldr	r1, [sp, #24]
    6720:	9809      	ldr	r0, [sp, #36]	; 0x24
    6722:	f005 faa1 	bl	bc68 <__ssprint_r>
    6726:	2800      	cmp	r0, #0
    6728:	d000      	beq.n	672c <_svfprintf_r+0x874>
    672a:	e44c      	b.n	5fc6 <_svfprintf_r+0x10e>
    672c:	68bc      	ldr	r4, [r7, #8]
    672e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6730:	9907      	ldr	r1, [sp, #28]
    6732:	428b      	cmp	r3, r1
    6734:	da00      	bge.n	6738 <_svfprintf_r+0x880>
    6736:	000b      	movs	r3, r1
    6738:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    673a:	4694      	mov	ip, r2
    673c:	449c      	add	ip, r3
    673e:	4663      	mov	r3, ip
    6740:	930a      	str	r3, [sp, #40]	; 0x28
    6742:	2c00      	cmp	r4, #0
    6744:	d000      	beq.n	6748 <_svfprintf_r+0x890>
    6746:	e0d6      	b.n	68f6 <_svfprintf_r+0xa3e>
    6748:	2300      	movs	r3, #0
    674a:	ae32      	add	r6, sp, #200	; 0xc8
    674c:	607b      	str	r3, [r7, #4]
    674e:	f7ff fbde 	bl	5f0e <_svfprintf_r+0x56>
    6752:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6754:	2b01      	cmp	r3, #1
    6756:	dc00      	bgt.n	675a <_svfprintf_r+0x8a2>
    6758:	e0ae      	b.n	68b8 <_svfprintf_r+0xa00>
    675a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    675c:	3401      	adds	r4, #1
    675e:	6033      	str	r3, [r6, #0]
    6760:	2301      	movs	r3, #1
    6762:	6073      	str	r3, [r6, #4]
    6764:	687b      	ldr	r3, [r7, #4]
    6766:	60bc      	str	r4, [r7, #8]
    6768:	3301      	adds	r3, #1
    676a:	607b      	str	r3, [r7, #4]
    676c:	2b07      	cmp	r3, #7
    676e:	dd00      	ble.n	6772 <_svfprintf_r+0x8ba>
    6770:	e2df      	b.n	6d32 <_svfprintf_r+0xe7a>
    6772:	3608      	adds	r6, #8
    6774:	9a19      	ldr	r2, [sp, #100]	; 0x64
    6776:	3301      	adds	r3, #1
    6778:	6032      	str	r2, [r6, #0]
    677a:	9a18      	ldr	r2, [sp, #96]	; 0x60
    677c:	4698      	mov	r8, r3
    677e:	4694      	mov	ip, r2
    6780:	4464      	add	r4, ip
    6782:	6072      	str	r2, [r6, #4]
    6784:	60bc      	str	r4, [r7, #8]
    6786:	607b      	str	r3, [r7, #4]
    6788:	2b07      	cmp	r3, #7
    678a:	dd00      	ble.n	678e <_svfprintf_r+0x8d6>
    678c:	e2de      	b.n	6d4c <_svfprintf_r+0xe94>
    678e:	3608      	adds	r6, #8
    6790:	2200      	movs	r2, #0
    6792:	2300      	movs	r3, #0
    6794:	9816      	ldr	r0, [sp, #88]	; 0x58
    6796:	9915      	ldr	r1, [sp, #84]	; 0x54
    6798:	f7fe fd48 	bl	522c <__aeabi_dcmpeq>
    679c:	2800      	cmp	r0, #0
    679e:	d000      	beq.n	67a2 <_svfprintf_r+0x8ea>
    67a0:	e1a4      	b.n	6aec <_svfprintf_r+0xc34>
    67a2:	9d11      	ldr	r5, [sp, #68]	; 0x44
    67a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    67a6:	3501      	adds	r5, #1
    67a8:	3b01      	subs	r3, #1
    67aa:	6035      	str	r5, [r6, #0]
    67ac:	6073      	str	r3, [r6, #4]
    67ae:	18e4      	adds	r4, r4, r3
    67b0:	2301      	movs	r3, #1
    67b2:	469c      	mov	ip, r3
    67b4:	44e0      	add	r8, ip
    67b6:	4643      	mov	r3, r8
    67b8:	60bc      	str	r4, [r7, #8]
    67ba:	607b      	str	r3, [r7, #4]
    67bc:	2b07      	cmp	r3, #7
    67be:	dd00      	ble.n	67c2 <_svfprintf_r+0x90a>
    67c0:	e08b      	b.n	68da <_svfprintf_r+0xa22>
    67c2:	3608      	adds	r6, #8
    67c4:	ab21      	add	r3, sp, #132	; 0x84
    67c6:	6033      	str	r3, [r6, #0]
    67c8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    67ca:	469c      	mov	ip, r3
    67cc:	6073      	str	r3, [r6, #4]
    67ce:	4643      	mov	r3, r8
    67d0:	4464      	add	r4, ip
    67d2:	3301      	adds	r3, #1
    67d4:	60bc      	str	r4, [r7, #8]
    67d6:	607b      	str	r3, [r7, #4]
    67d8:	2b07      	cmp	r3, #7
    67da:	dc00      	bgt.n	67de <_svfprintf_r+0x926>
    67dc:	e761      	b.n	66a2 <_svfprintf_r+0x7ea>
    67de:	003a      	movs	r2, r7
    67e0:	9906      	ldr	r1, [sp, #24]
    67e2:	9809      	ldr	r0, [sp, #36]	; 0x24
    67e4:	f005 fa40 	bl	bc68 <__ssprint_r>
    67e8:	2800      	cmp	r0, #0
    67ea:	d001      	beq.n	67f0 <_svfprintf_r+0x938>
    67ec:	f7ff fbeb 	bl	5fc6 <_svfprintf_r+0x10e>
    67f0:	68bc      	ldr	r4, [r7, #8]
    67f2:	ae32      	add	r6, sp, #200	; 0xc8
    67f4:	e756      	b.n	66a4 <_svfprintf_r+0x7ec>
    67f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    67f8:	2b65      	cmp	r3, #101	; 0x65
    67fa:	ddaa      	ble.n	6752 <_svfprintf_r+0x89a>
    67fc:	2200      	movs	r2, #0
    67fe:	2300      	movs	r3, #0
    6800:	9816      	ldr	r0, [sp, #88]	; 0x58
    6802:	9915      	ldr	r1, [sp, #84]	; 0x54
    6804:	f7fe fd12 	bl	522c <__aeabi_dcmpeq>
    6808:	2800      	cmp	r0, #0
    680a:	d100      	bne.n	680e <_svfprintf_r+0x956>
    680c:	e0e2      	b.n	69d4 <_svfprintf_r+0xb1c>
    680e:	4b6f      	ldr	r3, [pc, #444]	; (69cc <_svfprintf_r+0xb14>)
    6810:	3401      	adds	r4, #1
    6812:	6033      	str	r3, [r6, #0]
    6814:	2301      	movs	r3, #1
    6816:	6073      	str	r3, [r6, #4]
    6818:	687b      	ldr	r3, [r7, #4]
    681a:	60bc      	str	r4, [r7, #8]
    681c:	3301      	adds	r3, #1
    681e:	607b      	str	r3, [r7, #4]
    6820:	2b07      	cmp	r3, #7
    6822:	dd00      	ble.n	6826 <_svfprintf_r+0x96e>
    6824:	e366      	b.n	6ef4 <_svfprintf_r+0x103c>
    6826:	3608      	adds	r6, #8
    6828:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    682a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    682c:	4293      	cmp	r3, r2
    682e:	da00      	bge.n	6832 <_svfprintf_r+0x97a>
    6830:	e1a4      	b.n	6b7c <_svfprintf_r+0xcc4>
    6832:	9b08      	ldr	r3, [sp, #32]
    6834:	07db      	lsls	r3, r3, #31
    6836:	d500      	bpl.n	683a <_svfprintf_r+0x982>
    6838:	e1a0      	b.n	6b7c <_svfprintf_r+0xcc4>
    683a:	68bc      	ldr	r4, [r7, #8]
    683c:	e732      	b.n	66a4 <_svfprintf_r+0x7ec>
    683e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6840:	9a07      	ldr	r2, [sp, #28]
    6842:	1a9d      	subs	r5, r3, r2
    6844:	2d00      	cmp	r5, #0
    6846:	dc00      	bgt.n	684a <_svfprintf_r+0x992>
    6848:	e6d8      	b.n	65fc <_svfprintf_r+0x744>
    684a:	4a61      	ldr	r2, [pc, #388]	; (69d0 <_svfprintf_r+0xb18>)
    684c:	687b      	ldr	r3, [r7, #4]
    684e:	4691      	mov	r9, r2
    6850:	2d10      	cmp	r5, #16
    6852:	dd25      	ble.n	68a0 <_svfprintf_r+0x9e8>
    6854:	2210      	movs	r2, #16
    6856:	0021      	movs	r1, r4
    6858:	4690      	mov	r8, r2
    685a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    685c:	0032      	movs	r2, r6
    685e:	464e      	mov	r6, r9
    6860:	e003      	b.n	686a <_svfprintf_r+0x9b2>
    6862:	3d10      	subs	r5, #16
    6864:	3208      	adds	r2, #8
    6866:	2d10      	cmp	r5, #16
    6868:	dd17      	ble.n	689a <_svfprintf_r+0x9e2>
    686a:	4640      	mov	r0, r8
    686c:	3110      	adds	r1, #16
    686e:	3301      	adds	r3, #1
    6870:	6016      	str	r6, [r2, #0]
    6872:	6050      	str	r0, [r2, #4]
    6874:	60b9      	str	r1, [r7, #8]
    6876:	607b      	str	r3, [r7, #4]
    6878:	2b07      	cmp	r3, #7
    687a:	ddf2      	ble.n	6862 <_svfprintf_r+0x9aa>
    687c:	003a      	movs	r2, r7
    687e:	9906      	ldr	r1, [sp, #24]
    6880:	0020      	movs	r0, r4
    6882:	f005 f9f1 	bl	bc68 <__ssprint_r>
    6886:	2800      	cmp	r0, #0
    6888:	d001      	beq.n	688e <_svfprintf_r+0x9d6>
    688a:	f7ff fb9c 	bl	5fc6 <_svfprintf_r+0x10e>
    688e:	3d10      	subs	r5, #16
    6890:	68b9      	ldr	r1, [r7, #8]
    6892:	687b      	ldr	r3, [r7, #4]
    6894:	aa32      	add	r2, sp, #200	; 0xc8
    6896:	2d10      	cmp	r5, #16
    6898:	dce7      	bgt.n	686a <_svfprintf_r+0x9b2>
    689a:	46b1      	mov	r9, r6
    689c:	000c      	movs	r4, r1
    689e:	0016      	movs	r6, r2
    68a0:	464a      	mov	r2, r9
    68a2:	1964      	adds	r4, r4, r5
    68a4:	3301      	adds	r3, #1
    68a6:	6032      	str	r2, [r6, #0]
    68a8:	6075      	str	r5, [r6, #4]
    68aa:	60bc      	str	r4, [r7, #8]
    68ac:	607b      	str	r3, [r7, #4]
    68ae:	2b07      	cmp	r3, #7
    68b0:	dd00      	ble.n	68b4 <_svfprintf_r+0x9fc>
    68b2:	e27e      	b.n	6db2 <_svfprintf_r+0xefa>
    68b4:	3608      	adds	r6, #8
    68b6:	e6a1      	b.n	65fc <_svfprintf_r+0x744>
    68b8:	2301      	movs	r3, #1
    68ba:	9a08      	ldr	r2, [sp, #32]
    68bc:	4213      	tst	r3, r2
    68be:	d000      	beq.n	68c2 <_svfprintf_r+0xa0a>
    68c0:	e74b      	b.n	675a <_svfprintf_r+0x8a2>
    68c2:	6073      	str	r3, [r6, #4]
    68c4:	687b      	ldr	r3, [r7, #4]
    68c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
    68c8:	3301      	adds	r3, #1
    68ca:	3401      	adds	r4, #1
    68cc:	6032      	str	r2, [r6, #0]
    68ce:	60bc      	str	r4, [r7, #8]
    68d0:	4698      	mov	r8, r3
    68d2:	607b      	str	r3, [r7, #4]
    68d4:	2b07      	cmp	r3, #7
    68d6:	dc00      	bgt.n	68da <_svfprintf_r+0xa22>
    68d8:	e773      	b.n	67c2 <_svfprintf_r+0x90a>
    68da:	003a      	movs	r2, r7
    68dc:	9906      	ldr	r1, [sp, #24]
    68de:	9809      	ldr	r0, [sp, #36]	; 0x24
    68e0:	f005 f9c2 	bl	bc68 <__ssprint_r>
    68e4:	2800      	cmp	r0, #0
    68e6:	d001      	beq.n	68ec <_svfprintf_r+0xa34>
    68e8:	f7ff fb6d 	bl	5fc6 <_svfprintf_r+0x10e>
    68ec:	687b      	ldr	r3, [r7, #4]
    68ee:	68bc      	ldr	r4, [r7, #8]
    68f0:	4698      	mov	r8, r3
    68f2:	ae32      	add	r6, sp, #200	; 0xc8
    68f4:	e766      	b.n	67c4 <_svfprintf_r+0x90c>
    68f6:	003a      	movs	r2, r7
    68f8:	9906      	ldr	r1, [sp, #24]
    68fa:	9809      	ldr	r0, [sp, #36]	; 0x24
    68fc:	f005 f9b4 	bl	bc68 <__ssprint_r>
    6900:	2800      	cmp	r0, #0
    6902:	d100      	bne.n	6906 <_svfprintf_r+0xa4e>
    6904:	e720      	b.n	6748 <_svfprintf_r+0x890>
    6906:	f7ff fb5e 	bl	5fc6 <_svfprintf_r+0x10e>
    690a:	9c08      	ldr	r4, [sp, #32]
    690c:	2b01      	cmp	r3, #1
    690e:	d100      	bne.n	6912 <_svfprintf_r+0xa5a>
    6910:	e184      	b.n	6c1c <_svfprintf_r+0xd64>
    6912:	2b02      	cmp	r3, #2
    6914:	d129      	bne.n	696a <_svfprintf_r+0xab2>
    6916:	9408      	str	r4, [sp, #32]
    6918:	2300      	movs	r3, #0
    691a:	2400      	movs	r4, #0
    691c:	930c      	str	r3, [sp, #48]	; 0x30
    691e:	940d      	str	r4, [sp, #52]	; 0x34
    6920:	e4c5      	b.n	62ae <_svfprintf_r+0x3f6>
    6922:	003a      	movs	r2, r7
    6924:	9906      	ldr	r1, [sp, #24]
    6926:	9809      	ldr	r0, [sp, #36]	; 0x24
    6928:	f005 f99e 	bl	bc68 <__ssprint_r>
    692c:	2800      	cmp	r0, #0
    692e:	d001      	beq.n	6934 <_svfprintf_r+0xa7c>
    6930:	f7ff fb49 	bl	5fc6 <_svfprintf_r+0x10e>
    6934:	68bc      	ldr	r4, [r7, #8]
    6936:	ae32      	add	r6, sp, #200	; 0xc8
    6938:	e6a2      	b.n	6680 <_svfprintf_r+0x7c8>
    693a:	003a      	movs	r2, r7
    693c:	9906      	ldr	r1, [sp, #24]
    693e:	9809      	ldr	r0, [sp, #36]	; 0x24
    6940:	f005 f992 	bl	bc68 <__ssprint_r>
    6944:	2800      	cmp	r0, #0
    6946:	d001      	beq.n	694c <_svfprintf_r+0xa94>
    6948:	f7ff fb3d 	bl	5fc6 <_svfprintf_r+0x10e>
    694c:	68bc      	ldr	r4, [r7, #8]
    694e:	ae32      	add	r6, sp, #200	; 0xc8
    6950:	e640      	b.n	65d4 <_svfprintf_r+0x71c>
    6952:	003a      	movs	r2, r7
    6954:	9906      	ldr	r1, [sp, #24]
    6956:	9809      	ldr	r0, [sp, #36]	; 0x24
    6958:	f005 f986 	bl	bc68 <__ssprint_r>
    695c:	2800      	cmp	r0, #0
    695e:	d001      	beq.n	6964 <_svfprintf_r+0xaac>
    6960:	f7ff fb31 	bl	5fc6 <_svfprintf_r+0x10e>
    6964:	68bc      	ldr	r4, [r7, #8]
    6966:	ae32      	add	r6, sp, #200	; 0xc8
    6968:	e644      	b.n	65f4 <_svfprintf_r+0x73c>
    696a:	9408      	str	r4, [sp, #32]
    696c:	2300      	movs	r3, #0
    696e:	2400      	movs	r4, #0
    6970:	930c      	str	r3, [sp, #48]	; 0x30
    6972:	940d      	str	r4, [sp, #52]	; 0x34
    6974:	980c      	ldr	r0, [sp, #48]	; 0x30
    6976:	990d      	ldr	r1, [sp, #52]	; 0x34
    6978:	465b      	mov	r3, fp
    697a:	aa32      	add	r2, sp, #200	; 0xc8
    697c:	9307      	str	r3, [sp, #28]
    697e:	4691      	mov	r9, r2
    6980:	46b3      	mov	fp, r6
    6982:	e000      	b.n	6986 <_svfprintf_r+0xace>
    6984:	46a1      	mov	r9, r4
    6986:	074a      	lsls	r2, r1, #29
    6988:	4694      	mov	ip, r2
    698a:	464b      	mov	r3, r9
    698c:	4665      	mov	r5, ip
    698e:	1e5c      	subs	r4, r3, #1
    6990:	08c6      	lsrs	r6, r0, #3
    6992:	2307      	movs	r3, #7
    6994:	08ca      	lsrs	r2, r1, #3
    6996:	4335      	orrs	r5, r6
    6998:	0011      	movs	r1, r2
    699a:	002a      	movs	r2, r5
    699c:	4003      	ands	r3, r0
    699e:	3330      	adds	r3, #48	; 0x30
    69a0:	7023      	strb	r3, [r4, #0]
    69a2:	0028      	movs	r0, r5
    69a4:	430a      	orrs	r2, r1
    69a6:	d1ed      	bne.n	6984 <_svfprintf_r+0xacc>
    69a8:	900c      	str	r0, [sp, #48]	; 0x30
    69aa:	910d      	str	r1, [sp, #52]	; 0x34
    69ac:	9907      	ldr	r1, [sp, #28]
    69ae:	465e      	mov	r6, fp
    69b0:	468b      	mov	fp, r1
    69b2:	9908      	ldr	r1, [sp, #32]
    69b4:	464a      	mov	r2, r9
    69b6:	9411      	str	r4, [sp, #68]	; 0x44
    69b8:	07c9      	lsls	r1, r1, #31
    69ba:	d500      	bpl.n	69be <_svfprintf_r+0xb06>
    69bc:	e13d      	b.n	6c3a <_svfprintf_r+0xd82>
    69be:	ab32      	add	r3, sp, #200	; 0xc8
    69c0:	1b1b      	subs	r3, r3, r4
    69c2:	930e      	str	r3, [sp, #56]	; 0x38
    69c4:	f7ff fb88 	bl	60d8 <_svfprintf_r+0x220>
    69c8:	0000ee20 	.word	0x0000ee20
    69cc:	0000ee1c 	.word	0x0000ee1c
    69d0:	0000ee30 	.word	0x0000ee30
    69d4:	981f      	ldr	r0, [sp, #124]	; 0x7c
    69d6:	2800      	cmp	r0, #0
    69d8:	dc00      	bgt.n	69dc <_svfprintf_r+0xb24>
    69da:	e296      	b.n	6f0a <_svfprintf_r+0x1052>
    69dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    69de:	9914      	ldr	r1, [sp, #80]	; 0x50
    69e0:	0013      	movs	r3, r2
    69e2:	4690      	mov	r8, r2
    69e4:	428b      	cmp	r3, r1
    69e6:	dd00      	ble.n	69ea <_svfprintf_r+0xb32>
    69e8:	4688      	mov	r8, r1
    69ea:	4643      	mov	r3, r8
    69ec:	2b00      	cmp	r3, #0
    69ee:	dd0c      	ble.n	6a0a <_svfprintf_r+0xb52>
    69f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    69f2:	4444      	add	r4, r8
    69f4:	6033      	str	r3, [r6, #0]
    69f6:	4643      	mov	r3, r8
    69f8:	6073      	str	r3, [r6, #4]
    69fa:	687b      	ldr	r3, [r7, #4]
    69fc:	60bc      	str	r4, [r7, #8]
    69fe:	3301      	adds	r3, #1
    6a00:	607b      	str	r3, [r7, #4]
    6a02:	2b07      	cmp	r3, #7
    6a04:	dd00      	ble.n	6a08 <_svfprintf_r+0xb50>
    6a06:	e3b7      	b.n	7178 <_svfprintf_r+0x12c0>
    6a08:	3608      	adds	r6, #8
    6a0a:	4643      	mov	r3, r8
    6a0c:	43db      	mvns	r3, r3
    6a0e:	4642      	mov	r2, r8
    6a10:	17db      	asrs	r3, r3, #31
    6a12:	4013      	ands	r3, r2
    6a14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6a16:	1ad3      	subs	r3, r2, r3
    6a18:	4698      	mov	r8, r3
    6a1a:	2b00      	cmp	r3, #0
    6a1c:	dc00      	bgt.n	6a20 <_svfprintf_r+0xb68>
    6a1e:	e128      	b.n	6c72 <_svfprintf_r+0xdba>
    6a20:	2b10      	cmp	r3, #16
    6a22:	dc01      	bgt.n	6a28 <_svfprintf_r+0xb70>
    6a24:	f000 fce7 	bl	73f6 <_svfprintf_r+0x153e>
    6a28:	4acf      	ldr	r2, [pc, #828]	; (6d68 <_svfprintf_r+0xeb0>)
    6a2a:	0021      	movs	r1, r4
    6a2c:	4691      	mov	r9, r2
    6a2e:	2210      	movs	r2, #16
    6a30:	687b      	ldr	r3, [r7, #4]
    6a32:	4692      	mov	sl, r2
    6a34:	9d09      	ldr	r5, [sp, #36]	; 0x24
    6a36:	0032      	movs	r2, r6
    6a38:	464c      	mov	r4, r9
    6a3a:	4646      	mov	r6, r8
    6a3c:	e004      	b.n	6a48 <_svfprintf_r+0xb90>
    6a3e:	3208      	adds	r2, #8
    6a40:	3e10      	subs	r6, #16
    6a42:	2e10      	cmp	r6, #16
    6a44:	dc00      	bgt.n	6a48 <_svfprintf_r+0xb90>
    6a46:	e104      	b.n	6c52 <_svfprintf_r+0xd9a>
    6a48:	4650      	mov	r0, sl
    6a4a:	3110      	adds	r1, #16
    6a4c:	3301      	adds	r3, #1
    6a4e:	6014      	str	r4, [r2, #0]
    6a50:	6050      	str	r0, [r2, #4]
    6a52:	60b9      	str	r1, [r7, #8]
    6a54:	607b      	str	r3, [r7, #4]
    6a56:	2b07      	cmp	r3, #7
    6a58:	ddf1      	ble.n	6a3e <_svfprintf_r+0xb86>
    6a5a:	003a      	movs	r2, r7
    6a5c:	9906      	ldr	r1, [sp, #24]
    6a5e:	0028      	movs	r0, r5
    6a60:	f005 f902 	bl	bc68 <__ssprint_r>
    6a64:	2800      	cmp	r0, #0
    6a66:	d001      	beq.n	6a6c <_svfprintf_r+0xbb4>
    6a68:	f7ff faad 	bl	5fc6 <_svfprintf_r+0x10e>
    6a6c:	68b9      	ldr	r1, [r7, #8]
    6a6e:	687b      	ldr	r3, [r7, #4]
    6a70:	aa32      	add	r2, sp, #200	; 0xc8
    6a72:	e7e5      	b.n	6a40 <_svfprintf_r+0xb88>
    6a74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6a76:	2b00      	cmp	r3, #0
    6a78:	d100      	bne.n	6a7c <_svfprintf_r+0xbc4>
    6a7a:	e0ca      	b.n	6c12 <_svfprintf_r+0xd5a>
    6a7c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    6a7e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    6a80:	ab32      	add	r3, sp, #200	; 0xc8
    6a82:	46b1      	mov	r9, r6
    6a84:	001e      	movs	r6, r3
    6a86:	0020      	movs	r0, r4
    6a88:	0029      	movs	r1, r5
    6a8a:	220a      	movs	r2, #10
    6a8c:	2300      	movs	r3, #0
    6a8e:	f7fc ffa1 	bl	39d4 <__aeabi_uldivmod>
    6a92:	3e01      	subs	r6, #1
    6a94:	3230      	adds	r2, #48	; 0x30
    6a96:	7032      	strb	r2, [r6, #0]
    6a98:	2300      	movs	r3, #0
    6a9a:	0020      	movs	r0, r4
    6a9c:	0029      	movs	r1, r5
    6a9e:	220a      	movs	r2, #10
    6aa0:	f7fc ff98 	bl	39d4 <__aeabi_uldivmod>
    6aa4:	0003      	movs	r3, r0
    6aa6:	0004      	movs	r4, r0
    6aa8:	000d      	movs	r5, r1
    6aaa:	430b      	orrs	r3, r1
    6aac:	d1eb      	bne.n	6a86 <_svfprintf_r+0xbce>
    6aae:	0032      	movs	r2, r6
    6ab0:	ab32      	add	r3, sp, #200	; 0xc8
    6ab2:	1a9b      	subs	r3, r3, r2
    6ab4:	9611      	str	r6, [sp, #68]	; 0x44
    6ab6:	940c      	str	r4, [sp, #48]	; 0x30
    6ab8:	950d      	str	r5, [sp, #52]	; 0x34
    6aba:	464e      	mov	r6, r9
    6abc:	930e      	str	r3, [sp, #56]	; 0x38
    6abe:	f7ff fb0b 	bl	60d8 <_svfprintf_r+0x220>
    6ac2:	2300      	movs	r3, #0
    6ac4:	930e      	str	r3, [sp, #56]	; 0x38
    6ac6:	ab32      	add	r3, sp, #200	; 0xc8
    6ac8:	9311      	str	r3, [sp, #68]	; 0x44
    6aca:	f7ff fb05 	bl	60d8 <_svfprintf_r+0x220>
    6ace:	003a      	movs	r2, r7
    6ad0:	9906      	ldr	r1, [sp, #24]
    6ad2:	9809      	ldr	r0, [sp, #36]	; 0x24
    6ad4:	f005 f8c8 	bl	bc68 <__ssprint_r>
    6ad8:	2800      	cmp	r0, #0
    6ada:	d001      	beq.n	6ae0 <_svfprintf_r+0xc28>
    6adc:	f7ff fa73 	bl	5fc6 <_svfprintf_r+0x10e>
    6ae0:	ab16      	add	r3, sp, #88	; 0x58
    6ae2:	7fdb      	ldrb	r3, [r3, #31]
    6ae4:	68bc      	ldr	r4, [r7, #8]
    6ae6:	4698      	mov	r8, r3
    6ae8:	ae32      	add	r6, sp, #200	; 0xc8
    6aea:	e560      	b.n	65ae <_svfprintf_r+0x6f6>
    6aec:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6aee:	1e5d      	subs	r5, r3, #1
    6af0:	2d00      	cmp	r5, #0
    6af2:	dc00      	bgt.n	6af6 <_svfprintf_r+0xc3e>
    6af4:	e666      	b.n	67c4 <_svfprintf_r+0x90c>
    6af6:	4b9c      	ldr	r3, [pc, #624]	; (6d68 <_svfprintf_r+0xeb0>)
    6af8:	4699      	mov	r9, r3
    6afa:	2d10      	cmp	r5, #16
    6afc:	dd29      	ble.n	6b52 <_svfprintf_r+0xc9a>
    6afe:	2310      	movs	r3, #16
    6b00:	0032      	movs	r2, r6
    6b02:	469a      	mov	sl, r3
    6b04:	002e      	movs	r6, r5
    6b06:	0021      	movs	r1, r4
    6b08:	4643      	mov	r3, r8
    6b0a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6b0c:	464d      	mov	r5, r9
    6b0e:	e003      	b.n	6b18 <_svfprintf_r+0xc60>
    6b10:	3e10      	subs	r6, #16
    6b12:	3208      	adds	r2, #8
    6b14:	2e10      	cmp	r6, #16
    6b16:	dd17      	ble.n	6b48 <_svfprintf_r+0xc90>
    6b18:	4650      	mov	r0, sl
    6b1a:	3110      	adds	r1, #16
    6b1c:	3301      	adds	r3, #1
    6b1e:	6015      	str	r5, [r2, #0]
    6b20:	6050      	str	r0, [r2, #4]
    6b22:	60b9      	str	r1, [r7, #8]
    6b24:	607b      	str	r3, [r7, #4]
    6b26:	2b07      	cmp	r3, #7
    6b28:	ddf2      	ble.n	6b10 <_svfprintf_r+0xc58>
    6b2a:	003a      	movs	r2, r7
    6b2c:	9906      	ldr	r1, [sp, #24]
    6b2e:	0020      	movs	r0, r4
    6b30:	f005 f89a 	bl	bc68 <__ssprint_r>
    6b34:	2800      	cmp	r0, #0
    6b36:	d001      	beq.n	6b3c <_svfprintf_r+0xc84>
    6b38:	f7ff fa45 	bl	5fc6 <_svfprintf_r+0x10e>
    6b3c:	3e10      	subs	r6, #16
    6b3e:	68b9      	ldr	r1, [r7, #8]
    6b40:	687b      	ldr	r3, [r7, #4]
    6b42:	aa32      	add	r2, sp, #200	; 0xc8
    6b44:	2e10      	cmp	r6, #16
    6b46:	dce7      	bgt.n	6b18 <_svfprintf_r+0xc60>
    6b48:	46a9      	mov	r9, r5
    6b4a:	000c      	movs	r4, r1
    6b4c:	0035      	movs	r5, r6
    6b4e:	4698      	mov	r8, r3
    6b50:	0016      	movs	r6, r2
    6b52:	464b      	mov	r3, r9
    6b54:	6075      	str	r5, [r6, #4]
    6b56:	6033      	str	r3, [r6, #0]
    6b58:	1964      	adds	r4, r4, r5
    6b5a:	e629      	b.n	67b0 <_svfprintf_r+0x8f8>
    6b5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6b5e:	681a      	ldr	r2, [r3, #0]
    6b60:	f7ff fbfb 	bl	635a <_svfprintf_r+0x4a2>
    6b64:	6813      	ldr	r3, [r2, #0]
    6b66:	9307      	str	r3, [sp, #28]
    6b68:	f7ff fa82 	bl	6070 <_svfprintf_r+0x1b8>
    6b6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6b6e:	681a      	ldr	r2, [r3, #0]
    6b70:	f7ff fb84 	bl	627c <_svfprintf_r+0x3c4>
    6b74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6b76:	681a      	ldr	r2, [r3, #0]
    6b78:	f7ff fbd1 	bl	631e <_svfprintf_r+0x466>
    6b7c:	9b19      	ldr	r3, [sp, #100]	; 0x64
    6b7e:	68ba      	ldr	r2, [r7, #8]
    6b80:	6033      	str	r3, [r6, #0]
    6b82:	9b18      	ldr	r3, [sp, #96]	; 0x60
    6b84:	469c      	mov	ip, r3
    6b86:	6073      	str	r3, [r6, #4]
    6b88:	687b      	ldr	r3, [r7, #4]
    6b8a:	4462      	add	r2, ip
    6b8c:	3301      	adds	r3, #1
    6b8e:	0014      	movs	r4, r2
    6b90:	60ba      	str	r2, [r7, #8]
    6b92:	607b      	str	r3, [r7, #4]
    6b94:	2b07      	cmp	r3, #7
    6b96:	dd00      	ble.n	6b9a <_svfprintf_r+0xce2>
    6b98:	e202      	b.n	6fa0 <_svfprintf_r+0x10e8>
    6b9a:	3608      	adds	r6, #8
    6b9c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6b9e:	1e5d      	subs	r5, r3, #1
    6ba0:	2d00      	cmp	r5, #0
    6ba2:	dc00      	bgt.n	6ba6 <_svfprintf_r+0xcee>
    6ba4:	e57e      	b.n	66a4 <_svfprintf_r+0x7ec>
    6ba6:	4a70      	ldr	r2, [pc, #448]	; (6d68 <_svfprintf_r+0xeb0>)
    6ba8:	687b      	ldr	r3, [r7, #4]
    6baa:	4691      	mov	r9, r2
    6bac:	2d10      	cmp	r5, #16
    6bae:	dd25      	ble.n	6bfc <_svfprintf_r+0xd44>
    6bb0:	2210      	movs	r2, #16
    6bb2:	0021      	movs	r1, r4
    6bb4:	4690      	mov	r8, r2
    6bb6:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6bb8:	0032      	movs	r2, r6
    6bba:	002e      	movs	r6, r5
    6bbc:	464d      	mov	r5, r9
    6bbe:	e003      	b.n	6bc8 <_svfprintf_r+0xd10>
    6bc0:	3208      	adds	r2, #8
    6bc2:	3e10      	subs	r6, #16
    6bc4:	2e10      	cmp	r6, #16
    6bc6:	dd15      	ble.n	6bf4 <_svfprintf_r+0xd3c>
    6bc8:	4640      	mov	r0, r8
    6bca:	3110      	adds	r1, #16
    6bcc:	3301      	adds	r3, #1
    6bce:	6015      	str	r5, [r2, #0]
    6bd0:	6050      	str	r0, [r2, #4]
    6bd2:	60b9      	str	r1, [r7, #8]
    6bd4:	607b      	str	r3, [r7, #4]
    6bd6:	2b07      	cmp	r3, #7
    6bd8:	ddf2      	ble.n	6bc0 <_svfprintf_r+0xd08>
    6bda:	003a      	movs	r2, r7
    6bdc:	9906      	ldr	r1, [sp, #24]
    6bde:	0020      	movs	r0, r4
    6be0:	f005 f842 	bl	bc68 <__ssprint_r>
    6be4:	2800      	cmp	r0, #0
    6be6:	d001      	beq.n	6bec <_svfprintf_r+0xd34>
    6be8:	f7ff f9ed 	bl	5fc6 <_svfprintf_r+0x10e>
    6bec:	68b9      	ldr	r1, [r7, #8]
    6bee:	687b      	ldr	r3, [r7, #4]
    6bf0:	aa32      	add	r2, sp, #200	; 0xc8
    6bf2:	e7e6      	b.n	6bc2 <_svfprintf_r+0xd0a>
    6bf4:	46a9      	mov	r9, r5
    6bf6:	000c      	movs	r4, r1
    6bf8:	0035      	movs	r5, r6
    6bfa:	0016      	movs	r6, r2
    6bfc:	464a      	mov	r2, r9
    6bfe:	1964      	adds	r4, r4, r5
    6c00:	3301      	adds	r3, #1
    6c02:	6032      	str	r2, [r6, #0]
    6c04:	6075      	str	r5, [r6, #4]
    6c06:	60bc      	str	r4, [r7, #8]
    6c08:	607b      	str	r3, [r7, #4]
    6c0a:	2b07      	cmp	r3, #7
    6c0c:	dc00      	bgt.n	6c10 <_svfprintf_r+0xd58>
    6c0e:	e548      	b.n	66a2 <_svfprintf_r+0x7ea>
    6c10:	e5e5      	b.n	67de <_svfprintf_r+0x926>
    6c12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c14:	2b09      	cmp	r3, #9
    6c16:	d900      	bls.n	6c1a <_svfprintf_r+0xd62>
    6c18:	e730      	b.n	6a7c <_svfprintf_r+0xbc4>
    6c1a:	9c08      	ldr	r4, [sp, #32]
    6c1c:	2227      	movs	r2, #39	; 0x27
    6c1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c20:	a928      	add	r1, sp, #160	; 0xa0
    6c22:	3330      	adds	r3, #48	; 0x30
    6c24:	548b      	strb	r3, [r1, r2]
    6c26:	2301      	movs	r3, #1
    6c28:	aa16      	add	r2, sp, #88	; 0x58
    6c2a:	4694      	mov	ip, r2
    6c2c:	930e      	str	r3, [sp, #56]	; 0x38
    6c2e:	336e      	adds	r3, #110	; 0x6e
    6c30:	4463      	add	r3, ip
    6c32:	9408      	str	r4, [sp, #32]
    6c34:	9311      	str	r3, [sp, #68]	; 0x44
    6c36:	f7ff fa4f 	bl	60d8 <_svfprintf_r+0x220>
    6c3a:	2b30      	cmp	r3, #48	; 0x30
    6c3c:	d100      	bne.n	6c40 <_svfprintf_r+0xd88>
    6c3e:	e20b      	b.n	7058 <_svfprintf_r+0x11a0>
    6c40:	2330      	movs	r3, #48	; 0x30
    6c42:	3a02      	subs	r2, #2
    6c44:	7013      	strb	r3, [r2, #0]
    6c46:	ab32      	add	r3, sp, #200	; 0xc8
    6c48:	1a9b      	subs	r3, r3, r2
    6c4a:	930e      	str	r3, [sp, #56]	; 0x38
    6c4c:	9211      	str	r2, [sp, #68]	; 0x44
    6c4e:	f7ff fa43 	bl	60d8 <_svfprintf_r+0x220>
    6c52:	46b0      	mov	r8, r6
    6c54:	46a1      	mov	r9, r4
    6c56:	0016      	movs	r6, r2
    6c58:	000c      	movs	r4, r1
    6c5a:	464a      	mov	r2, r9
    6c5c:	6032      	str	r2, [r6, #0]
    6c5e:	4642      	mov	r2, r8
    6c60:	4444      	add	r4, r8
    6c62:	3301      	adds	r3, #1
    6c64:	6072      	str	r2, [r6, #4]
    6c66:	60bc      	str	r4, [r7, #8]
    6c68:	607b      	str	r3, [r7, #4]
    6c6a:	2b07      	cmp	r3, #7
    6c6c:	dd00      	ble.n	6c70 <_svfprintf_r+0xdb8>
    6c6e:	e29c      	b.n	71aa <_svfprintf_r+0x12f2>
    6c70:	3608      	adds	r6, #8
    6c72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6c74:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6c76:	4293      	cmp	r3, r2
    6c78:	db4c      	blt.n	6d14 <_svfprintf_r+0xe5c>
    6c7a:	9a08      	ldr	r2, [sp, #32]
    6c7c:	07d2      	lsls	r2, r2, #31
    6c7e:	d449      	bmi.n	6d14 <_svfprintf_r+0xe5c>
    6c80:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6c82:	9913      	ldr	r1, [sp, #76]	; 0x4c
    6c84:	1ad3      	subs	r3, r2, r3
    6c86:	1a52      	subs	r2, r2, r1
    6c88:	4690      	mov	r8, r2
    6c8a:	429a      	cmp	r2, r3
    6c8c:	dd00      	ble.n	6c90 <_svfprintf_r+0xdd8>
    6c8e:	4698      	mov	r8, r3
    6c90:	4642      	mov	r2, r8
    6c92:	2a00      	cmp	r2, #0
    6c94:	dd0f      	ble.n	6cb6 <_svfprintf_r+0xdfe>
    6c96:	9913      	ldr	r1, [sp, #76]	; 0x4c
    6c98:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6c9a:	468c      	mov	ip, r1
    6c9c:	4462      	add	r2, ip
    6c9e:	6032      	str	r2, [r6, #0]
    6ca0:	4642      	mov	r2, r8
    6ca2:	6072      	str	r2, [r6, #4]
    6ca4:	687a      	ldr	r2, [r7, #4]
    6ca6:	4444      	add	r4, r8
    6ca8:	3201      	adds	r2, #1
    6caa:	60bc      	str	r4, [r7, #8]
    6cac:	607a      	str	r2, [r7, #4]
    6cae:	2a07      	cmp	r2, #7
    6cb0:	dd00      	ble.n	6cb4 <_svfprintf_r+0xdfc>
    6cb2:	e286      	b.n	71c2 <_svfprintf_r+0x130a>
    6cb4:	3608      	adds	r6, #8
    6cb6:	4642      	mov	r2, r8
    6cb8:	43d5      	mvns	r5, r2
    6cba:	17ed      	asrs	r5, r5, #31
    6cbc:	4015      	ands	r5, r2
    6cbe:	1b5d      	subs	r5, r3, r5
    6cc0:	2d00      	cmp	r5, #0
    6cc2:	dc00      	bgt.n	6cc6 <_svfprintf_r+0xe0e>
    6cc4:	e4ee      	b.n	66a4 <_svfprintf_r+0x7ec>
    6cc6:	4a28      	ldr	r2, [pc, #160]	; (6d68 <_svfprintf_r+0xeb0>)
    6cc8:	687b      	ldr	r3, [r7, #4]
    6cca:	4691      	mov	r9, r2
    6ccc:	2d10      	cmp	r5, #16
    6cce:	dd95      	ble.n	6bfc <_svfprintf_r+0xd44>
    6cd0:	2210      	movs	r2, #16
    6cd2:	0021      	movs	r1, r4
    6cd4:	4690      	mov	r8, r2
    6cd6:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6cd8:	0032      	movs	r2, r6
    6cda:	002e      	movs	r6, r5
    6cdc:	464d      	mov	r5, r9
    6cde:	e003      	b.n	6ce8 <_svfprintf_r+0xe30>
    6ce0:	3208      	adds	r2, #8
    6ce2:	3e10      	subs	r6, #16
    6ce4:	2e10      	cmp	r6, #16
    6ce6:	dd85      	ble.n	6bf4 <_svfprintf_r+0xd3c>
    6ce8:	4640      	mov	r0, r8
    6cea:	3110      	adds	r1, #16
    6cec:	3301      	adds	r3, #1
    6cee:	6015      	str	r5, [r2, #0]
    6cf0:	6050      	str	r0, [r2, #4]
    6cf2:	60b9      	str	r1, [r7, #8]
    6cf4:	607b      	str	r3, [r7, #4]
    6cf6:	2b07      	cmp	r3, #7
    6cf8:	ddf2      	ble.n	6ce0 <_svfprintf_r+0xe28>
    6cfa:	003a      	movs	r2, r7
    6cfc:	9906      	ldr	r1, [sp, #24]
    6cfe:	0020      	movs	r0, r4
    6d00:	f004 ffb2 	bl	bc68 <__ssprint_r>
    6d04:	2800      	cmp	r0, #0
    6d06:	d001      	beq.n	6d0c <_svfprintf_r+0xe54>
    6d08:	f7ff f95d 	bl	5fc6 <_svfprintf_r+0x10e>
    6d0c:	68b9      	ldr	r1, [r7, #8]
    6d0e:	687b      	ldr	r3, [r7, #4]
    6d10:	aa32      	add	r2, sp, #200	; 0xc8
    6d12:	e7e6      	b.n	6ce2 <_svfprintf_r+0xe2a>
    6d14:	9a19      	ldr	r2, [sp, #100]	; 0x64
    6d16:	6032      	str	r2, [r6, #0]
    6d18:	9a18      	ldr	r2, [sp, #96]	; 0x60
    6d1a:	4694      	mov	ip, r2
    6d1c:	6072      	str	r2, [r6, #4]
    6d1e:	687a      	ldr	r2, [r7, #4]
    6d20:	4464      	add	r4, ip
    6d22:	3201      	adds	r2, #1
    6d24:	60bc      	str	r4, [r7, #8]
    6d26:	607a      	str	r2, [r7, #4]
    6d28:	2a07      	cmp	r2, #7
    6d2a:	dd00      	ble.n	6d2e <_svfprintf_r+0xe76>
    6d2c:	e230      	b.n	7190 <_svfprintf_r+0x12d8>
    6d2e:	3608      	adds	r6, #8
    6d30:	e7a6      	b.n	6c80 <_svfprintf_r+0xdc8>
    6d32:	003a      	movs	r2, r7
    6d34:	9906      	ldr	r1, [sp, #24]
    6d36:	9809      	ldr	r0, [sp, #36]	; 0x24
    6d38:	f004 ff96 	bl	bc68 <__ssprint_r>
    6d3c:	2800      	cmp	r0, #0
    6d3e:	d001      	beq.n	6d44 <_svfprintf_r+0xe8c>
    6d40:	f7ff f941 	bl	5fc6 <_svfprintf_r+0x10e>
    6d44:	68bc      	ldr	r4, [r7, #8]
    6d46:	687b      	ldr	r3, [r7, #4]
    6d48:	ae32      	add	r6, sp, #200	; 0xc8
    6d4a:	e513      	b.n	6774 <_svfprintf_r+0x8bc>
    6d4c:	003a      	movs	r2, r7
    6d4e:	9906      	ldr	r1, [sp, #24]
    6d50:	9809      	ldr	r0, [sp, #36]	; 0x24
    6d52:	f004 ff89 	bl	bc68 <__ssprint_r>
    6d56:	2800      	cmp	r0, #0
    6d58:	d001      	beq.n	6d5e <_svfprintf_r+0xea6>
    6d5a:	f7ff f934 	bl	5fc6 <_svfprintf_r+0x10e>
    6d5e:	687b      	ldr	r3, [r7, #4]
    6d60:	68bc      	ldr	r4, [r7, #8]
    6d62:	4698      	mov	r8, r3
    6d64:	ae32      	add	r6, sp, #200	; 0xc8
    6d66:	e513      	b.n	6790 <_svfprintf_r+0x8d8>
    6d68:	0000ee30 	.word	0x0000ee30
    6d6c:	2307      	movs	r3, #7
    6d6e:	3207      	adds	r2, #7
    6d70:	439a      	bics	r2, r3
    6d72:	3301      	adds	r3, #1
    6d74:	469c      	mov	ip, r3
    6d76:	4494      	add	ip, r2
    6d78:	4663      	mov	r3, ip
    6d7a:	930f      	str	r3, [sp, #60]	; 0x3c
    6d7c:	6853      	ldr	r3, [r2, #4]
    6d7e:	6812      	ldr	r2, [r2, #0]
    6d80:	930d      	str	r3, [sp, #52]	; 0x34
    6d82:	920c      	str	r2, [sp, #48]	; 0x30
    6d84:	2b00      	cmp	r3, #0
    6d86:	db01      	blt.n	6d8c <_svfprintf_r+0xed4>
    6d88:	f7ff f97a 	bl	6080 <_svfprintf_r+0x1c8>
    6d8c:	980c      	ldr	r0, [sp, #48]	; 0x30
    6d8e:	990d      	ldr	r1, [sp, #52]	; 0x34
    6d90:	2300      	movs	r3, #0
    6d92:	4242      	negs	r2, r0
    6d94:	418b      	sbcs	r3, r1
    6d96:	0011      	movs	r1, r2
    6d98:	001a      	movs	r2, r3
    6d9a:	232d      	movs	r3, #45	; 0x2d
    6d9c:	a816      	add	r0, sp, #88	; 0x58
    6d9e:	77c3      	strb	r3, [r0, #31]
    6da0:	0008      	movs	r0, r1
    6da2:	4310      	orrs	r0, r2
    6da4:	910c      	str	r1, [sp, #48]	; 0x30
    6da6:	920d      	str	r2, [sp, #52]	; 0x34
    6da8:	4698      	mov	r8, r3
    6daa:	0002      	movs	r2, r0
    6dac:	3b2c      	subs	r3, #44	; 0x2c
    6dae:	f7ff f970 	bl	6092 <_svfprintf_r+0x1da>
    6db2:	003a      	movs	r2, r7
    6db4:	9906      	ldr	r1, [sp, #24]
    6db6:	9809      	ldr	r0, [sp, #36]	; 0x24
    6db8:	f004 ff56 	bl	bc68 <__ssprint_r>
    6dbc:	2800      	cmp	r0, #0
    6dbe:	d001      	beq.n	6dc4 <_svfprintf_r+0xf0c>
    6dc0:	f7ff f901 	bl	5fc6 <_svfprintf_r+0x10e>
    6dc4:	68bc      	ldr	r4, [r7, #8]
    6dc6:	ae32      	add	r6, sp, #200	; 0xc8
    6dc8:	e418      	b.n	65fc <_svfprintf_r+0x744>
    6dca:	9916      	ldr	r1, [sp, #88]	; 0x58
    6dcc:	9d15      	ldr	r5, [sp, #84]	; 0x54
    6dce:	000a      	movs	r2, r1
    6dd0:	0008      	movs	r0, r1
    6dd2:	002b      	movs	r3, r5
    6dd4:	0029      	movs	r1, r5
    6dd6:	f006 fab3 	bl	d340 <__aeabi_dcmpun>
    6dda:	2800      	cmp	r0, #0
    6ddc:	d000      	beq.n	6de0 <_svfprintf_r+0xf28>
    6dde:	e2e6      	b.n	73ae <_svfprintf_r+0x14f6>
    6de0:	4653      	mov	r3, sl
    6de2:	3301      	adds	r3, #1
    6de4:	d100      	bne.n	6de8 <_svfprintf_r+0xf30>
    6de6:	e20d      	b.n	7204 <_svfprintf_r+0x134c>
    6de8:	2320      	movs	r3, #32
    6dea:	9a12      	ldr	r2, [sp, #72]	; 0x48
    6dec:	439a      	bics	r2, r3
    6dee:	920e      	str	r2, [sp, #56]	; 0x38
    6df0:	2a47      	cmp	r2, #71	; 0x47
    6df2:	d100      	bne.n	6df6 <_svfprintf_r+0xf3e>
    6df4:	e11c      	b.n	7030 <_svfprintf_r+0x1178>
    6df6:	2380      	movs	r3, #128	; 0x80
    6df8:	005b      	lsls	r3, r3, #1
    6dfa:	4323      	orrs	r3, r4
    6dfc:	9308      	str	r3, [sp, #32]
    6dfe:	9b15      	ldr	r3, [sp, #84]	; 0x54
    6e00:	2b00      	cmp	r3, #0
    6e02:	da00      	bge.n	6e06 <_svfprintf_r+0xf4e>
    6e04:	e221      	b.n	724a <_svfprintf_r+0x1392>
    6e06:	9a16      	ldr	r2, [sp, #88]	; 0x58
    6e08:	9307      	str	r3, [sp, #28]
    6e0a:	2300      	movs	r3, #0
    6e0c:	4691      	mov	r9, r2
    6e0e:	9310      	str	r3, [sp, #64]	; 0x40
    6e10:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6e12:	2b66      	cmp	r3, #102	; 0x66
    6e14:	d100      	bne.n	6e18 <_svfprintf_r+0xf60>
    6e16:	e1fc      	b.n	7212 <_svfprintf_r+0x135a>
    6e18:	2b46      	cmp	r3, #70	; 0x46
    6e1a:	d100      	bne.n	6e1e <_svfprintf_r+0xf66>
    6e1c:	e0db      	b.n	6fd6 <_svfprintf_r+0x111e>
    6e1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    6e20:	9809      	ldr	r0, [sp, #36]	; 0x24
    6e22:	3a45      	subs	r2, #69	; 0x45
    6e24:	0013      	movs	r3, r2
    6e26:	4259      	negs	r1, r3
    6e28:	4159      	adcs	r1, r3
    6e2a:	ab20      	add	r3, sp, #128	; 0x80
    6e2c:	000d      	movs	r5, r1
    6e2e:	9303      	str	r3, [sp, #12]
    6e30:	ab1f      	add	r3, sp, #124	; 0x7c
    6e32:	9302      	str	r3, [sp, #8]
    6e34:	2302      	movs	r3, #2
    6e36:	aa23      	add	r2, sp, #140	; 0x8c
    6e38:	4455      	add	r5, sl
    6e3a:	921b      	str	r2, [sp, #108]	; 0x6c
    6e3c:	9204      	str	r2, [sp, #16]
    6e3e:	9300      	str	r3, [sp, #0]
    6e40:	9501      	str	r5, [sp, #4]
    6e42:	9b07      	ldr	r3, [sp, #28]
    6e44:	464a      	mov	r2, r9
    6e46:	f001 fae1 	bl	840c <_dtoa_r>
    6e4a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6e4c:	9011      	str	r0, [sp, #68]	; 0x44
    6e4e:	2b67      	cmp	r3, #103	; 0x67
    6e50:	d000      	beq.n	6e54 <_svfprintf_r+0xf9c>
    6e52:	e239      	b.n	72c8 <_svfprintf_r+0x1410>
    6e54:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6e56:	4698      	mov	r8, r3
    6e58:	44a8      	add	r8, r5
    6e5a:	07e3      	lsls	r3, r4, #31
    6e5c:	d400      	bmi.n	6e60 <_svfprintf_r+0xfa8>
    6e5e:	e28b      	b.n	7378 <_svfprintf_r+0x14c0>
    6e60:	2300      	movs	r3, #0
    6e62:	2200      	movs	r2, #0
    6e64:	4648      	mov	r0, r9
    6e66:	9907      	ldr	r1, [sp, #28]
    6e68:	f7fe f9e0 	bl	522c <__aeabi_dcmpeq>
    6e6c:	4643      	mov	r3, r8
    6e6e:	2800      	cmp	r0, #0
    6e70:	d10a      	bne.n	6e88 <_svfprintf_r+0xfd0>
    6e72:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6e74:	4543      	cmp	r3, r8
    6e76:	d207      	bcs.n	6e88 <_svfprintf_r+0xfd0>
    6e78:	2130      	movs	r1, #48	; 0x30
    6e7a:	4640      	mov	r0, r8
    6e7c:	1c5a      	adds	r2, r3, #1
    6e7e:	9223      	str	r2, [sp, #140]	; 0x8c
    6e80:	7019      	strb	r1, [r3, #0]
    6e82:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6e84:	4298      	cmp	r0, r3
    6e86:	d8f9      	bhi.n	6e7c <_svfprintf_r+0xfc4>
    6e88:	9a11      	ldr	r2, [sp, #68]	; 0x44
    6e8a:	1a9b      	subs	r3, r3, r2
    6e8c:	9314      	str	r3, [sp, #80]	; 0x50
    6e8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6e90:	2b47      	cmp	r3, #71	; 0x47
    6e92:	d100      	bne.n	6e96 <_svfprintf_r+0xfde>
    6e94:	e0f6      	b.n	7084 <_svfprintf_r+0x11cc>
    6e96:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6e98:	2b65      	cmp	r3, #101	; 0x65
    6e9a:	dc00      	bgt.n	6e9e <_svfprintf_r+0xfe6>
    6e9c:	e226      	b.n	72ec <_svfprintf_r+0x1434>
    6e9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6ea0:	2b66      	cmp	r3, #102	; 0x66
    6ea2:	d100      	bne.n	6ea6 <_svfprintf_r+0xfee>
    6ea4:	e1f4      	b.n	7290 <_svfprintf_r+0x13d8>
    6ea6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6ea8:	9313      	str	r3, [sp, #76]	; 0x4c
    6eaa:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6eac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    6eae:	0019      	movs	r1, r3
    6eb0:	4291      	cmp	r1, r2
    6eb2:	dd00      	ble.n	6eb6 <_svfprintf_r+0xffe>
    6eb4:	e1d4      	b.n	7260 <_svfprintf_r+0x13a8>
    6eb6:	07e3      	lsls	r3, r4, #31
    6eb8:	d500      	bpl.n	6ebc <_svfprintf_r+0x1004>
    6eba:	e249      	b.n	7350 <_svfprintf_r+0x1498>
    6ebc:	43d3      	mvns	r3, r2
    6ebe:	17db      	asrs	r3, r3, #31
    6ec0:	0011      	movs	r1, r2
    6ec2:	401a      	ands	r2, r3
    6ec4:	2367      	movs	r3, #103	; 0x67
    6ec6:	9207      	str	r2, [sp, #28]
    6ec8:	910e      	str	r1, [sp, #56]	; 0x38
    6eca:	9312      	str	r3, [sp, #72]	; 0x48
    6ecc:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6ece:	2b00      	cmp	r3, #0
    6ed0:	d000      	beq.n	6ed4 <_svfprintf_r+0x101c>
    6ed2:	e0cf      	b.n	7074 <_svfprintf_r+0x11bc>
    6ed4:	ab16      	add	r3, sp, #88	; 0x58
    6ed6:	7fdb      	ldrb	r3, [r3, #31]
    6ed8:	4698      	mov	r8, r3
    6eda:	2300      	movs	r3, #0
    6edc:	469a      	mov	sl, r3
    6ede:	f7ff f903 	bl	60e8 <_svfprintf_r+0x230>
    6ee2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6ee4:	990a      	ldr	r1, [sp, #40]	; 0x28
    6ee6:	6813      	ldr	r3, [r2, #0]
    6ee8:	6019      	str	r1, [r3, #0]
    6eea:	0013      	movs	r3, r2
    6eec:	3304      	adds	r3, #4
    6eee:	930f      	str	r3, [sp, #60]	; 0x3c
    6ef0:	f7ff f80d 	bl	5f0e <_svfprintf_r+0x56>
    6ef4:	003a      	movs	r2, r7
    6ef6:	9906      	ldr	r1, [sp, #24]
    6ef8:	9809      	ldr	r0, [sp, #36]	; 0x24
    6efa:	f004 feb5 	bl	bc68 <__ssprint_r>
    6efe:	2800      	cmp	r0, #0
    6f00:	d001      	beq.n	6f06 <_svfprintf_r+0x104e>
    6f02:	f7ff f860 	bl	5fc6 <_svfprintf_r+0x10e>
    6f06:	ae32      	add	r6, sp, #200	; 0xc8
    6f08:	e48e      	b.n	6828 <_svfprintf_r+0x970>
    6f0a:	4bde      	ldr	r3, [pc, #888]	; (7284 <_svfprintf_r+0x13cc>)
    6f0c:	3401      	adds	r4, #1
    6f0e:	6033      	str	r3, [r6, #0]
    6f10:	2301      	movs	r3, #1
    6f12:	6073      	str	r3, [r6, #4]
    6f14:	687b      	ldr	r3, [r7, #4]
    6f16:	60bc      	str	r4, [r7, #8]
    6f18:	3301      	adds	r3, #1
    6f1a:	607b      	str	r3, [r7, #4]
    6f1c:	2b07      	cmp	r3, #7
    6f1e:	dc7a      	bgt.n	7016 <_svfprintf_r+0x115e>
    6f20:	3608      	adds	r6, #8
    6f22:	2800      	cmp	r0, #0
    6f24:	d107      	bne.n	6f36 <_svfprintf_r+0x107e>
    6f26:	9b14      	ldr	r3, [sp, #80]	; 0x50
    6f28:	2b00      	cmp	r3, #0
    6f2a:	d104      	bne.n	6f36 <_svfprintf_r+0x107e>
    6f2c:	9b08      	ldr	r3, [sp, #32]
    6f2e:	07db      	lsls	r3, r3, #31
    6f30:	d401      	bmi.n	6f36 <_svfprintf_r+0x107e>
    6f32:	f7ff fbb7 	bl	66a4 <_svfprintf_r+0x7ec>
    6f36:	9b19      	ldr	r3, [sp, #100]	; 0x64
    6f38:	6033      	str	r3, [r6, #0]
    6f3a:	9b18      	ldr	r3, [sp, #96]	; 0x60
    6f3c:	1919      	adds	r1, r3, r4
    6f3e:	6073      	str	r3, [r6, #4]
    6f40:	687b      	ldr	r3, [r7, #4]
    6f42:	60b9      	str	r1, [r7, #8]
    6f44:	3301      	adds	r3, #1
    6f46:	607b      	str	r3, [r7, #4]
    6f48:	2b07      	cmp	r3, #7
    6f4a:	dd00      	ble.n	6f4e <_svfprintf_r+0x1096>
    6f4c:	e1f2      	b.n	7334 <_svfprintf_r+0x147c>
    6f4e:	0032      	movs	r2, r6
    6f50:	3208      	adds	r2, #8
    6f52:	2800      	cmp	r0, #0
    6f54:	da00      	bge.n	6f58 <_svfprintf_r+0x10a0>
    6f56:	e1cc      	b.n	72f2 <_svfprintf_r+0x143a>
    6f58:	9811      	ldr	r0, [sp, #68]	; 0x44
    6f5a:	3301      	adds	r3, #1
    6f5c:	6010      	str	r0, [r2, #0]
    6f5e:	9814      	ldr	r0, [sp, #80]	; 0x50
    6f60:	607b      	str	r3, [r7, #4]
    6f62:	1844      	adds	r4, r0, r1
    6f64:	6050      	str	r0, [r2, #4]
    6f66:	60bc      	str	r4, [r7, #8]
    6f68:	2b07      	cmp	r3, #7
    6f6a:	dd00      	ble.n	6f6e <_svfprintf_r+0x10b6>
    6f6c:	e437      	b.n	67de <_svfprintf_r+0x926>
    6f6e:	3208      	adds	r2, #8
    6f70:	0016      	movs	r6, r2
    6f72:	f7ff fb97 	bl	66a4 <_svfprintf_r+0x7ec>
    6f76:	990f      	ldr	r1, [sp, #60]	; 0x3c
    6f78:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6f7a:	680b      	ldr	r3, [r1, #0]
    6f7c:	601a      	str	r2, [r3, #0]
    6f7e:	17d2      	asrs	r2, r2, #31
    6f80:	605a      	str	r2, [r3, #4]
    6f82:	000b      	movs	r3, r1
    6f84:	3304      	adds	r3, #4
    6f86:	930f      	str	r3, [sp, #60]	; 0x3c
    6f88:	f7fe ffc1 	bl	5f0e <_svfprintf_r+0x56>
    6f8c:	464b      	mov	r3, r9
    6f8e:	3101      	adds	r1, #1
    6f90:	431c      	orrs	r4, r3
    6f92:	780b      	ldrb	r3, [r1, #0]
    6f94:	f7fe fff4 	bl	5f80 <_svfprintf_r+0xc8>
    6f98:	4bbb      	ldr	r3, [pc, #748]	; (7288 <_svfprintf_r+0x13d0>)
    6f9a:	9311      	str	r3, [sp, #68]	; 0x44
    6f9c:	f7ff f937 	bl	620e <_svfprintf_r+0x356>
    6fa0:	003a      	movs	r2, r7
    6fa2:	9906      	ldr	r1, [sp, #24]
    6fa4:	9809      	ldr	r0, [sp, #36]	; 0x24
    6fa6:	f004 fe5f 	bl	bc68 <__ssprint_r>
    6faa:	2800      	cmp	r0, #0
    6fac:	d001      	beq.n	6fb2 <_svfprintf_r+0x10fa>
    6fae:	f7ff f80a 	bl	5fc6 <_svfprintf_r+0x10e>
    6fb2:	68bc      	ldr	r4, [r7, #8]
    6fb4:	ae32      	add	r6, sp, #200	; 0xc8
    6fb6:	e5f1      	b.n	6b9c <_svfprintf_r+0xce4>
    6fb8:	2140      	movs	r1, #64	; 0x40
    6fba:	9809      	ldr	r0, [sp, #36]	; 0x24
    6fbc:	f002 fb74 	bl	96a8 <_malloc_r>
    6fc0:	9b06      	ldr	r3, [sp, #24]
    6fc2:	6018      	str	r0, [r3, #0]
    6fc4:	6118      	str	r0, [r3, #16]
    6fc6:	2800      	cmp	r0, #0
    6fc8:	d100      	bne.n	6fcc <_svfprintf_r+0x1114>
    6fca:	e24f      	b.n	746c <_svfprintf_r+0x15b4>
    6fcc:	2340      	movs	r3, #64	; 0x40
    6fce:	9a06      	ldr	r2, [sp, #24]
    6fd0:	6153      	str	r3, [r2, #20]
    6fd2:	f7fe ff8e 	bl	5ef2 <_svfprintf_r+0x3a>
    6fd6:	ab23      	add	r3, sp, #140	; 0x8c
    6fd8:	931b      	str	r3, [sp, #108]	; 0x6c
    6fda:	9304      	str	r3, [sp, #16]
    6fdc:	ab20      	add	r3, sp, #128	; 0x80
    6fde:	9303      	str	r3, [sp, #12]
    6fe0:	ab1f      	add	r3, sp, #124	; 0x7c
    6fe2:	9302      	str	r3, [sp, #8]
    6fe4:	4653      	mov	r3, sl
    6fe6:	9301      	str	r3, [sp, #4]
    6fe8:	2303      	movs	r3, #3
    6fea:	464a      	mov	r2, r9
    6fec:	9300      	str	r3, [sp, #0]
    6fee:	9809      	ldr	r0, [sp, #36]	; 0x24
    6ff0:	9b07      	ldr	r3, [sp, #28]
    6ff2:	f001 fa0b 	bl	840c <_dtoa_r>
    6ff6:	4655      	mov	r5, sl
    6ff8:	9011      	str	r0, [sp, #68]	; 0x44
    6ffa:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6ffc:	4698      	mov	r8, r3
    6ffe:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7000:	44a8      	add	r8, r5
    7002:	2b46      	cmp	r3, #70	; 0x46
    7004:	d000      	beq.n	7008 <_svfprintf_r+0x1150>
    7006:	e72b      	b.n	6e60 <_svfprintf_r+0xfa8>
    7008:	9b11      	ldr	r3, [sp, #68]	; 0x44
    700a:	781b      	ldrb	r3, [r3, #0]
    700c:	2b30      	cmp	r3, #48	; 0x30
    700e:	d016      	beq.n	703e <_svfprintf_r+0x1186>
    7010:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    7012:	4498      	add	r8, r3
    7014:	e724      	b.n	6e60 <_svfprintf_r+0xfa8>
    7016:	003a      	movs	r2, r7
    7018:	9906      	ldr	r1, [sp, #24]
    701a:	9809      	ldr	r0, [sp, #36]	; 0x24
    701c:	f004 fe24 	bl	bc68 <__ssprint_r>
    7020:	2800      	cmp	r0, #0
    7022:	d001      	beq.n	7028 <_svfprintf_r+0x1170>
    7024:	f7fe ffcf 	bl	5fc6 <_svfprintf_r+0x10e>
    7028:	981f      	ldr	r0, [sp, #124]	; 0x7c
    702a:	68bc      	ldr	r4, [r7, #8]
    702c:	ae32      	add	r6, sp, #200	; 0xc8
    702e:	e778      	b.n	6f22 <_svfprintf_r+0x106a>
    7030:	4653      	mov	r3, sl
    7032:	2b00      	cmp	r3, #0
    7034:	d000      	beq.n	7038 <_svfprintf_r+0x1180>
    7036:	e6de      	b.n	6df6 <_svfprintf_r+0xf3e>
    7038:	3301      	adds	r3, #1
    703a:	469a      	mov	sl, r3
    703c:	e6db      	b.n	6df6 <_svfprintf_r+0xf3e>
    703e:	2200      	movs	r2, #0
    7040:	2300      	movs	r3, #0
    7042:	4648      	mov	r0, r9
    7044:	9907      	ldr	r1, [sp, #28]
    7046:	f7fe f8f1 	bl	522c <__aeabi_dcmpeq>
    704a:	2800      	cmp	r0, #0
    704c:	d1e0      	bne.n	7010 <_svfprintf_r+0x1158>
    704e:	2301      	movs	r3, #1
    7050:	1b5b      	subs	r3, r3, r5
    7052:	931f      	str	r3, [sp, #124]	; 0x7c
    7054:	4498      	add	r8, r3
    7056:	e703      	b.n	6e60 <_svfprintf_r+0xfa8>
    7058:	9a11      	ldr	r2, [sp, #68]	; 0x44
    705a:	ab32      	add	r3, sp, #200	; 0xc8
    705c:	1a9b      	subs	r3, r3, r2
    705e:	930e      	str	r3, [sp, #56]	; 0x38
    7060:	f7ff f83a 	bl	60d8 <_svfprintf_r+0x220>
    7064:	9811      	ldr	r0, [sp, #68]	; 0x44
    7066:	f7fe fbe5 	bl	5834 <strlen>
    706a:	0002      	movs	r2, r0
    706c:	900e      	str	r0, [sp, #56]	; 0x38
    706e:	0003      	movs	r3, r0
    7070:	f7ff f9cd 	bl	640e <_svfprintf_r+0x556>
    7074:	232d      	movs	r3, #45	; 0x2d
    7076:	aa16      	add	r2, sp, #88	; 0x58
    7078:	77d3      	strb	r3, [r2, #31]
    707a:	4698      	mov	r8, r3
    707c:	2300      	movs	r3, #0
    707e:	469a      	mov	sl, r3
    7080:	f7ff f835 	bl	60ee <_svfprintf_r+0x236>
    7084:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    7086:	9313      	str	r3, [sp, #76]	; 0x4c
    7088:	1cda      	adds	r2, r3, #3
    708a:	db02      	blt.n	7092 <_svfprintf_r+0x11da>
    708c:	459a      	cmp	sl, r3
    708e:	db00      	blt.n	7092 <_svfprintf_r+0x11da>
    7090:	e70b      	b.n	6eaa <_svfprintf_r+0xff2>
    7092:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7094:	3b02      	subs	r3, #2
    7096:	9312      	str	r3, [sp, #72]	; 0x48
    7098:	222c      	movs	r2, #44	; 0x2c
    709a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    709c:	2148      	movs	r1, #72	; 0x48
    709e:	1e5d      	subs	r5, r3, #1
    70a0:	ab16      	add	r3, sp, #88	; 0x58
    70a2:	189b      	adds	r3, r3, r2
    70a4:	466a      	mov	r2, sp
    70a6:	1852      	adds	r2, r2, r1
    70a8:	7812      	ldrb	r2, [r2, #0]
    70aa:	951f      	str	r5, [sp, #124]	; 0x7c
    70ac:	701a      	strb	r2, [r3, #0]
    70ae:	2d00      	cmp	r5, #0
    70b0:	da00      	bge.n	70b4 <_svfprintf_r+0x11fc>
    70b2:	e1a4      	b.n	73fe <_svfprintf_r+0x1546>
    70b4:	212d      	movs	r1, #45	; 0x2d
    70b6:	232b      	movs	r3, #43	; 0x2b
    70b8:	aa16      	add	r2, sp, #88	; 0x58
    70ba:	1852      	adds	r2, r2, r1
    70bc:	7013      	strb	r3, [r2, #0]
    70be:	2d09      	cmp	r5, #9
    70c0:	dc00      	bgt.n	70c4 <_svfprintf_r+0x120c>
    70c2:	e14c      	b.n	735e <_svfprintf_r+0x14a6>
    70c4:	aa16      	add	r2, sp, #88	; 0x58
    70c6:	233b      	movs	r3, #59	; 0x3b
    70c8:	4694      	mov	ip, r2
    70ca:	4463      	add	r3, ip
    70cc:	469a      	mov	sl, r3
    70ce:	46b1      	mov	r9, r6
    70d0:	46a0      	mov	r8, r4
    70d2:	4656      	mov	r6, sl
    70d4:	e000      	b.n	70d8 <_svfprintf_r+0x1220>
    70d6:	0026      	movs	r6, r4
    70d8:	0028      	movs	r0, r5
    70da:	210a      	movs	r1, #10
    70dc:	f7fc fc74 	bl	39c8 <__aeabi_idivmod>
    70e0:	1e74      	subs	r4, r6, #1
    70e2:	3130      	adds	r1, #48	; 0x30
    70e4:	7021      	strb	r1, [r4, #0]
    70e6:	0028      	movs	r0, r5
    70e8:	210a      	movs	r1, #10
    70ea:	f7fc fb87 	bl	37fc <__divsi3>
    70ee:	0005      	movs	r5, r0
    70f0:	2809      	cmp	r0, #9
    70f2:	dcf0      	bgt.n	70d6 <_svfprintf_r+0x121e>
    70f4:	0023      	movs	r3, r4
    70f6:	4644      	mov	r4, r8
    70f8:	46b0      	mov	r8, r6
    70fa:	464e      	mov	r6, r9
    70fc:	4699      	mov	r9, r3
    70fe:	0003      	movs	r3, r0
    7100:	3330      	adds	r3, #48	; 0x30
    7102:	b2d8      	uxtb	r0, r3
    7104:	4643      	mov	r3, r8
    7106:	3b02      	subs	r3, #2
    7108:	7018      	strb	r0, [r3, #0]
    710a:	459a      	cmp	sl, r3
    710c:	d800      	bhi.n	7110 <_svfprintf_r+0x1258>
    710e:	e1b4      	b.n	747a <_svfprintf_r+0x15c2>
    7110:	4642      	mov	r2, r8
    7112:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7114:	4645      	mov	r5, r8
    7116:	1a99      	subs	r1, r3, r2
    7118:	2301      	movs	r3, #1
    711a:	3107      	adds	r1, #7
    711c:	425b      	negs	r3, r3
    711e:	e001      	b.n	7124 <_svfprintf_r+0x126c>
    7120:	5ce8      	ldrb	r0, [r5, r3]
    7122:	3301      	adds	r3, #1
    7124:	aa21      	add	r2, sp, #132	; 0x84
    7126:	18d2      	adds	r2, r2, r3
    7128:	70d0      	strb	r0, [r2, #3]
    712a:	428b      	cmp	r3, r1
    712c:	d1f8      	bne.n	7120 <_svfprintf_r+0x1268>
    712e:	a916      	add	r1, sp, #88	; 0x58
    7130:	468c      	mov	ip, r1
    7132:	222e      	movs	r2, #46	; 0x2e
    7134:	464b      	mov	r3, r9
    7136:	4462      	add	r2, ip
    7138:	4694      	mov	ip, r2
    713a:	1afb      	subs	r3, r7, r3
    713c:	4463      	add	r3, ip
    713e:	aa21      	add	r2, sp, #132	; 0x84
    7140:	9914      	ldr	r1, [sp, #80]	; 0x50
    7142:	1a9b      	subs	r3, r3, r2
    7144:	469c      	mov	ip, r3
    7146:	000a      	movs	r2, r1
    7148:	4462      	add	r2, ip
    714a:	931a      	str	r3, [sp, #104]	; 0x68
    714c:	920e      	str	r2, [sp, #56]	; 0x38
    714e:	2901      	cmp	r1, #1
    7150:	dc00      	bgt.n	7154 <_svfprintf_r+0x129c>
    7152:	e145      	b.n	73e0 <_svfprintf_r+0x1528>
    7154:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7156:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7158:	4694      	mov	ip, r2
    715a:	4463      	add	r3, ip
    715c:	001a      	movs	r2, r3
    715e:	930e      	str	r3, [sp, #56]	; 0x38
    7160:	43db      	mvns	r3, r3
    7162:	17db      	asrs	r3, r3, #31
    7164:	401a      	ands	r2, r3
    7166:	2300      	movs	r3, #0
    7168:	9207      	str	r2, [sp, #28]
    716a:	9313      	str	r3, [sp, #76]	; 0x4c
    716c:	e6ae      	b.n	6ecc <_svfprintf_r+0x1014>
    716e:	2301      	movs	r3, #1
    7170:	425b      	negs	r3, r3
    7172:	930a      	str	r3, [sp, #40]	; 0x28
    7174:	f7fe ff2d 	bl	5fd2 <_svfprintf_r+0x11a>
    7178:	003a      	movs	r2, r7
    717a:	9906      	ldr	r1, [sp, #24]
    717c:	9809      	ldr	r0, [sp, #36]	; 0x24
    717e:	f004 fd73 	bl	bc68 <__ssprint_r>
    7182:	2800      	cmp	r0, #0
    7184:	d001      	beq.n	718a <_svfprintf_r+0x12d2>
    7186:	f7fe ff1e 	bl	5fc6 <_svfprintf_r+0x10e>
    718a:	68bc      	ldr	r4, [r7, #8]
    718c:	ae32      	add	r6, sp, #200	; 0xc8
    718e:	e43c      	b.n	6a0a <_svfprintf_r+0xb52>
    7190:	003a      	movs	r2, r7
    7192:	9906      	ldr	r1, [sp, #24]
    7194:	9809      	ldr	r0, [sp, #36]	; 0x24
    7196:	f004 fd67 	bl	bc68 <__ssprint_r>
    719a:	2800      	cmp	r0, #0
    719c:	d001      	beq.n	71a2 <_svfprintf_r+0x12ea>
    719e:	f7fe ff12 	bl	5fc6 <_svfprintf_r+0x10e>
    71a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    71a4:	68bc      	ldr	r4, [r7, #8]
    71a6:	ae32      	add	r6, sp, #200	; 0xc8
    71a8:	e56a      	b.n	6c80 <_svfprintf_r+0xdc8>
    71aa:	003a      	movs	r2, r7
    71ac:	9906      	ldr	r1, [sp, #24]
    71ae:	9809      	ldr	r0, [sp, #36]	; 0x24
    71b0:	f004 fd5a 	bl	bc68 <__ssprint_r>
    71b4:	2800      	cmp	r0, #0
    71b6:	d001      	beq.n	71bc <_svfprintf_r+0x1304>
    71b8:	f7fe ff05 	bl	5fc6 <_svfprintf_r+0x10e>
    71bc:	68bc      	ldr	r4, [r7, #8]
    71be:	ae32      	add	r6, sp, #200	; 0xc8
    71c0:	e557      	b.n	6c72 <_svfprintf_r+0xdba>
    71c2:	003a      	movs	r2, r7
    71c4:	9906      	ldr	r1, [sp, #24]
    71c6:	9809      	ldr	r0, [sp, #36]	; 0x24
    71c8:	f004 fd4e 	bl	bc68 <__ssprint_r>
    71cc:	2800      	cmp	r0, #0
    71ce:	d001      	beq.n	71d4 <_svfprintf_r+0x131c>
    71d0:	f7fe fef9 	bl	5fc6 <_svfprintf_r+0x10e>
    71d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    71d6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    71d8:	68bc      	ldr	r4, [r7, #8]
    71da:	1a9b      	subs	r3, r3, r2
    71dc:	ae32      	add	r6, sp, #200	; 0xc8
    71de:	e56a      	b.n	6cb6 <_svfprintf_r+0xdfe>
    71e0:	4653      	mov	r3, sl
    71e2:	9307      	str	r3, [sp, #28]
    71e4:	2b06      	cmp	r3, #6
    71e6:	d901      	bls.n	71ec <_svfprintf_r+0x1334>
    71e8:	2306      	movs	r3, #6
    71ea:	9307      	str	r3, [sp, #28]
    71ec:	9b07      	ldr	r3, [sp, #28]
    71ee:	950f      	str	r5, [sp, #60]	; 0x3c
    71f0:	930e      	str	r3, [sp, #56]	; 0x38
    71f2:	2300      	movs	r3, #0
    71f4:	4698      	mov	r8, r3
    71f6:	469a      	mov	sl, r3
    71f8:	9313      	str	r3, [sp, #76]	; 0x4c
    71fa:	4b24      	ldr	r3, [pc, #144]	; (728c <_svfprintf_r+0x13d4>)
    71fc:	9408      	str	r4, [sp, #32]
    71fe:	9311      	str	r3, [sp, #68]	; 0x44
    7200:	f7fe ff78 	bl	60f4 <_svfprintf_r+0x23c>
    7204:	2320      	movs	r3, #32
    7206:	9a12      	ldr	r2, [sp, #72]	; 0x48
    7208:	439a      	bics	r2, r3
    720a:	3b1a      	subs	r3, #26
    720c:	920e      	str	r2, [sp, #56]	; 0x38
    720e:	469a      	mov	sl, r3
    7210:	e5f1      	b.n	6df6 <_svfprintf_r+0xf3e>
    7212:	ab23      	add	r3, sp, #140	; 0x8c
    7214:	931b      	str	r3, [sp, #108]	; 0x6c
    7216:	9304      	str	r3, [sp, #16]
    7218:	ab20      	add	r3, sp, #128	; 0x80
    721a:	9303      	str	r3, [sp, #12]
    721c:	ab1f      	add	r3, sp, #124	; 0x7c
    721e:	9302      	str	r3, [sp, #8]
    7220:	4653      	mov	r3, sl
    7222:	9301      	str	r3, [sp, #4]
    7224:	2303      	movs	r3, #3
    7226:	464a      	mov	r2, r9
    7228:	9300      	str	r3, [sp, #0]
    722a:	9809      	ldr	r0, [sp, #36]	; 0x24
    722c:	9b07      	ldr	r3, [sp, #28]
    722e:	f001 f8ed 	bl	840c <_dtoa_r>
    7232:	0003      	movs	r3, r0
    7234:	4453      	add	r3, sl
    7236:	9011      	str	r0, [sp, #68]	; 0x44
    7238:	4698      	mov	r8, r3
    723a:	4655      	mov	r5, sl
    723c:	e6e4      	b.n	7008 <_svfprintf_r+0x1150>
    723e:	232d      	movs	r3, #45	; 0x2d
    7240:	aa16      	add	r2, sp, #88	; 0x58
    7242:	77d3      	strb	r3, [r2, #31]
    7244:	4698      	mov	r8, r3
    7246:	f7fe ffdb 	bl	6200 <_svfprintf_r+0x348>
    724a:	2280      	movs	r2, #128	; 0x80
    724c:	0612      	lsls	r2, r2, #24
    724e:	4694      	mov	ip, r2
    7250:	9b16      	ldr	r3, [sp, #88]	; 0x58
    7252:	4699      	mov	r9, r3
    7254:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7256:	4463      	add	r3, ip
    7258:	9307      	str	r3, [sp, #28]
    725a:	232d      	movs	r3, #45	; 0x2d
    725c:	9310      	str	r3, [sp, #64]	; 0x40
    725e:	e5d7      	b.n	6e10 <_svfprintf_r+0xf58>
    7260:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7262:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7264:	4694      	mov	ip, r2
    7266:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7268:	4463      	add	r3, ip
    726a:	930e      	str	r3, [sp, #56]	; 0x38
    726c:	2a00      	cmp	r2, #0
    726e:	dc00      	bgt.n	7272 <_svfprintf_r+0x13ba>
    7270:	e0ce      	b.n	7410 <_svfprintf_r+0x1558>
    7272:	001a      	movs	r2, r3
    7274:	43db      	mvns	r3, r3
    7276:	17db      	asrs	r3, r3, #31
    7278:	401a      	ands	r2, r3
    727a:	2367      	movs	r3, #103	; 0x67
    727c:	9207      	str	r2, [sp, #28]
    727e:	9312      	str	r3, [sp, #72]	; 0x48
    7280:	e624      	b.n	6ecc <_svfprintf_r+0x1014>
    7282:	46c0      	nop			; (mov r8, r8)
    7284:	0000ee1c 	.word	0x0000ee1c
    7288:	0000ede0 	.word	0x0000ede0
    728c:	0000ee14 	.word	0x0000ee14
    7290:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    7292:	9313      	str	r3, [sp, #76]	; 0x4c
    7294:	2b00      	cmp	r3, #0
    7296:	dc00      	bgt.n	729a <_svfprintf_r+0x13e2>
    7298:	e0d5      	b.n	7446 <_svfprintf_r+0x158e>
    729a:	4652      	mov	r2, sl
    729c:	2a00      	cmp	r2, #0
    729e:	d000      	beq.n	72a2 <_svfprintf_r+0x13ea>
    72a0:	e092      	b.n	73c8 <_svfprintf_r+0x1510>
    72a2:	07e2      	lsls	r2, r4, #31
    72a4:	d500      	bpl.n	72a8 <_svfprintf_r+0x13f0>
    72a6:	e08f      	b.n	73c8 <_svfprintf_r+0x1510>
    72a8:	9307      	str	r3, [sp, #28]
    72aa:	930e      	str	r3, [sp, #56]	; 0x38
    72ac:	e60e      	b.n	6ecc <_svfprintf_r+0x1014>
    72ae:	ab16      	add	r3, sp, #88	; 0x58
    72b0:	7fdb      	ldrb	r3, [r3, #31]
    72b2:	950f      	str	r5, [sp, #60]	; 0x3c
    72b4:	4698      	mov	r8, r3
    72b6:	4653      	mov	r3, sl
    72b8:	9307      	str	r3, [sp, #28]
    72ba:	930e      	str	r3, [sp, #56]	; 0x38
    72bc:	2300      	movs	r3, #0
    72be:	9408      	str	r4, [sp, #32]
    72c0:	469a      	mov	sl, r3
    72c2:	9313      	str	r3, [sp, #76]	; 0x4c
    72c4:	f7fe ff10 	bl	60e8 <_svfprintf_r+0x230>
    72c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    72ca:	4698      	mov	r8, r3
    72cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    72ce:	44a8      	add	r8, r5
    72d0:	2b47      	cmp	r3, #71	; 0x47
    72d2:	d000      	beq.n	72d6 <_svfprintf_r+0x141e>
    72d4:	e5c4      	b.n	6e60 <_svfprintf_r+0xfa8>
    72d6:	07e3      	lsls	r3, r4, #31
    72d8:	d500      	bpl.n	72dc <_svfprintf_r+0x1424>
    72da:	e68e      	b.n	6ffa <_svfprintf_r+0x1142>
    72dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    72de:	9a11      	ldr	r2, [sp, #68]	; 0x44
    72e0:	1a9b      	subs	r3, r3, r2
    72e2:	9314      	str	r3, [sp, #80]	; 0x50
    72e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    72e6:	2b47      	cmp	r3, #71	; 0x47
    72e8:	d100      	bne.n	72ec <_svfprintf_r+0x1434>
    72ea:	e6cb      	b.n	7084 <_svfprintf_r+0x11cc>
    72ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    72ee:	9313      	str	r3, [sp, #76]	; 0x4c
    72f0:	e6d2      	b.n	7098 <_svfprintf_r+0x11e0>
    72f2:	4244      	negs	r4, r0
    72f4:	3010      	adds	r0, #16
    72f6:	db00      	blt.n	72fa <_svfprintf_r+0x1442>
    72f8:	e0d0      	b.n	749c <_svfprintf_r+0x15e4>
    72fa:	486e      	ldr	r0, [pc, #440]	; (74b4 <_svfprintf_r+0x15fc>)
    72fc:	2610      	movs	r6, #16
    72fe:	0005      	movs	r5, r0
    7300:	e003      	b.n	730a <_svfprintf_r+0x1452>
    7302:	3208      	adds	r2, #8
    7304:	3c10      	subs	r4, #16
    7306:	2c10      	cmp	r4, #16
    7308:	dd38      	ble.n	737c <_svfprintf_r+0x14c4>
    730a:	3110      	adds	r1, #16
    730c:	3301      	adds	r3, #1
    730e:	6015      	str	r5, [r2, #0]
    7310:	6056      	str	r6, [r2, #4]
    7312:	60b9      	str	r1, [r7, #8]
    7314:	607b      	str	r3, [r7, #4]
    7316:	2b07      	cmp	r3, #7
    7318:	ddf3      	ble.n	7302 <_svfprintf_r+0x144a>
    731a:	003a      	movs	r2, r7
    731c:	9906      	ldr	r1, [sp, #24]
    731e:	9809      	ldr	r0, [sp, #36]	; 0x24
    7320:	f004 fca2 	bl	bc68 <__ssprint_r>
    7324:	2800      	cmp	r0, #0
    7326:	d001      	beq.n	732c <_svfprintf_r+0x1474>
    7328:	f7fe fe4d 	bl	5fc6 <_svfprintf_r+0x10e>
    732c:	68b9      	ldr	r1, [r7, #8]
    732e:	687b      	ldr	r3, [r7, #4]
    7330:	aa32      	add	r2, sp, #200	; 0xc8
    7332:	e7e7      	b.n	7304 <_svfprintf_r+0x144c>
    7334:	003a      	movs	r2, r7
    7336:	9906      	ldr	r1, [sp, #24]
    7338:	9809      	ldr	r0, [sp, #36]	; 0x24
    733a:	f004 fc95 	bl	bc68 <__ssprint_r>
    733e:	2800      	cmp	r0, #0
    7340:	d001      	beq.n	7346 <_svfprintf_r+0x148e>
    7342:	f7fe fe40 	bl	5fc6 <_svfprintf_r+0x10e>
    7346:	981f      	ldr	r0, [sp, #124]	; 0x7c
    7348:	68b9      	ldr	r1, [r7, #8]
    734a:	687b      	ldr	r3, [r7, #4]
    734c:	aa32      	add	r2, sp, #200	; 0xc8
    734e:	e600      	b.n	6f52 <_svfprintf_r+0x109a>
    7350:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7352:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    7354:	4694      	mov	ip, r2
    7356:	4463      	add	r3, ip
    7358:	001a      	movs	r2, r3
    735a:	930e      	str	r3, [sp, #56]	; 0x38
    735c:	e78a      	b.n	7274 <_svfprintf_r+0x13bc>
    735e:	212e      	movs	r1, #46	; 0x2e
    7360:	2330      	movs	r3, #48	; 0x30
    7362:	aa16      	add	r2, sp, #88	; 0x58
    7364:	1852      	adds	r2, r2, r1
    7366:	7013      	strb	r3, [r2, #0]
    7368:	002b      	movs	r3, r5
    736a:	aa16      	add	r2, sp, #88	; 0x58
    736c:	3101      	adds	r1, #1
    736e:	3330      	adds	r3, #48	; 0x30
    7370:	1852      	adds	r2, r2, r1
    7372:	7013      	strb	r3, [r2, #0]
    7374:	ab22      	add	r3, sp, #136	; 0x88
    7376:	e6e2      	b.n	713e <_svfprintf_r+0x1286>
    7378:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    737a:	e585      	b.n	6e88 <_svfprintf_r+0xfd0>
    737c:	46a9      	mov	r9, r5
    737e:	4648      	mov	r0, r9
    7380:	1909      	adds	r1, r1, r4
    7382:	3301      	adds	r3, #1
    7384:	6010      	str	r0, [r2, #0]
    7386:	6054      	str	r4, [r2, #4]
    7388:	60b9      	str	r1, [r7, #8]
    738a:	3208      	adds	r2, #8
    738c:	607b      	str	r3, [r7, #4]
    738e:	2b07      	cmp	r3, #7
    7390:	dc00      	bgt.n	7394 <_svfprintf_r+0x14dc>
    7392:	e5e1      	b.n	6f58 <_svfprintf_r+0x10a0>
    7394:	003a      	movs	r2, r7
    7396:	9906      	ldr	r1, [sp, #24]
    7398:	9809      	ldr	r0, [sp, #36]	; 0x24
    739a:	f004 fc65 	bl	bc68 <__ssprint_r>
    739e:	2800      	cmp	r0, #0
    73a0:	d001      	beq.n	73a6 <_svfprintf_r+0x14ee>
    73a2:	f7fe fe10 	bl	5fc6 <_svfprintf_r+0x10e>
    73a6:	68b9      	ldr	r1, [r7, #8]
    73a8:	687b      	ldr	r3, [r7, #4]
    73aa:	aa32      	add	r2, sp, #200	; 0xc8
    73ac:	e5d4      	b.n	6f58 <_svfprintf_r+0x10a0>
    73ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
    73b0:	2b00      	cmp	r3, #0
    73b2:	db38      	blt.n	7426 <_svfprintf_r+0x156e>
    73b4:	ab16      	add	r3, sp, #88	; 0x58
    73b6:	7fdb      	ldrb	r3, [r3, #31]
    73b8:	4698      	mov	r8, r3
    73ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
    73bc:	2b47      	cmp	r3, #71	; 0x47
    73be:	dc2e      	bgt.n	741e <_svfprintf_r+0x1566>
    73c0:	4b3d      	ldr	r3, [pc, #244]	; (74b8 <_svfprintf_r+0x1600>)
    73c2:	9311      	str	r3, [sp, #68]	; 0x44
    73c4:	f7fe ff23 	bl	620e <_svfprintf_r+0x356>
    73c8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    73ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    73cc:	4694      	mov	ip, r2
    73ce:	4463      	add	r3, ip
    73d0:	4453      	add	r3, sl
    73d2:	001a      	movs	r2, r3
    73d4:	930e      	str	r3, [sp, #56]	; 0x38
    73d6:	43db      	mvns	r3, r3
    73d8:	17db      	asrs	r3, r3, #31
    73da:	401a      	ands	r2, r3
    73dc:	9207      	str	r2, [sp, #28]
    73de:	e575      	b.n	6ecc <_svfprintf_r+0x1014>
    73e0:	2301      	movs	r3, #1
    73e2:	4023      	ands	r3, r4
    73e4:	9313      	str	r3, [sp, #76]	; 0x4c
    73e6:	d000      	beq.n	73ea <_svfprintf_r+0x1532>
    73e8:	e6b4      	b.n	7154 <_svfprintf_r+0x129c>
    73ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    73ec:	43d3      	mvns	r3, r2
    73ee:	17db      	asrs	r3, r3, #31
    73f0:	401a      	ands	r2, r3
    73f2:	9207      	str	r2, [sp, #28]
    73f4:	e56a      	b.n	6ecc <_svfprintf_r+0x1014>
    73f6:	4a2f      	ldr	r2, [pc, #188]	; (74b4 <_svfprintf_r+0x15fc>)
    73f8:	687b      	ldr	r3, [r7, #4]
    73fa:	4691      	mov	r9, r2
    73fc:	e42d      	b.n	6c5a <_svfprintf_r+0xda2>
    73fe:	2301      	movs	r3, #1
    7400:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7402:	391b      	subs	r1, #27
    7404:	1a9d      	subs	r5, r3, r2
    7406:	aa16      	add	r2, sp, #88	; 0x58
    7408:	332c      	adds	r3, #44	; 0x2c
    740a:	1852      	adds	r2, r2, r1
    740c:	7013      	strb	r3, [r2, #0]
    740e:	e656      	b.n	70be <_svfprintf_r+0x1206>
    7410:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7412:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    7414:	1a98      	subs	r0, r3, r2
    7416:	1c43      	adds	r3, r0, #1
    7418:	001a      	movs	r2, r3
    741a:	930e      	str	r3, [sp, #56]	; 0x38
    741c:	e72a      	b.n	7274 <_svfprintf_r+0x13bc>
    741e:	4b27      	ldr	r3, [pc, #156]	; (74bc <_svfprintf_r+0x1604>)
    7420:	9311      	str	r3, [sp, #68]	; 0x44
    7422:	f7fe fef4 	bl	620e <_svfprintf_r+0x356>
    7426:	232d      	movs	r3, #45	; 0x2d
    7428:	aa16      	add	r2, sp, #88	; 0x58
    742a:	77d3      	strb	r3, [r2, #31]
    742c:	4698      	mov	r8, r3
    742e:	e7c4      	b.n	73ba <_svfprintf_r+0x1502>
    7430:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7432:	1d1a      	adds	r2, r3, #4
    7434:	681b      	ldr	r3, [r3, #0]
    7436:	469a      	mov	sl, r3
    7438:	2b00      	cmp	r3, #0
    743a:	db36      	blt.n	74aa <_svfprintf_r+0x15f2>
    743c:	784b      	ldrb	r3, [r1, #1]
    743e:	920f      	str	r2, [sp, #60]	; 0x3c
    7440:	4659      	mov	r1, fp
    7442:	f7fe fd9d 	bl	5f80 <_svfprintf_r+0xc8>
    7446:	4653      	mov	r3, sl
    7448:	2b00      	cmp	r3, #0
    744a:	d101      	bne.n	7450 <_svfprintf_r+0x1598>
    744c:	07e3      	lsls	r3, r4, #31
    744e:	d503      	bpl.n	7458 <_svfprintf_r+0x15a0>
    7450:	9b18      	ldr	r3, [sp, #96]	; 0x60
    7452:	1c58      	adds	r0, r3, #1
    7454:	0003      	movs	r3, r0
    7456:	e7bb      	b.n	73d0 <_svfprintf_r+0x1518>
    7458:	2301      	movs	r3, #1
    745a:	e725      	b.n	72a8 <_svfprintf_r+0x13f0>
    745c:	ab16      	add	r3, sp, #88	; 0x58
    745e:	77d8      	strb	r0, [r3, #31]
    7460:	f7fe ff6c 	bl	633c <_svfprintf_r+0x484>
    7464:	ab16      	add	r3, sp, #88	; 0x58
    7466:	77d8      	strb	r0, [r3, #31]
    7468:	f7ff f814 	bl	6494 <_svfprintf_r+0x5dc>
    746c:	230c      	movs	r3, #12
    746e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7470:	6013      	str	r3, [r2, #0]
    7472:	3b0d      	subs	r3, #13
    7474:	930a      	str	r3, [sp, #40]	; 0x28
    7476:	f7fe fdac 	bl	5fd2 <_svfprintf_r+0x11a>
    747a:	aa16      	add	r2, sp, #88	; 0x58
    747c:	232e      	movs	r3, #46	; 0x2e
    747e:	4694      	mov	ip, r2
    7480:	4463      	add	r3, ip
    7482:	e65c      	b.n	713e <_svfprintf_r+0x1286>
    7484:	ab16      	add	r3, sp, #88	; 0x58
    7486:	77d8      	strb	r0, [r3, #31]
    7488:	f7fe fe85 	bl	6196 <_svfprintf_r+0x2de>
    748c:	ab16      	add	r3, sp, #88	; 0x58
    748e:	77d8      	strb	r0, [r3, #31]
    7490:	f7fe fddd 	bl	604e <_svfprintf_r+0x196>
    7494:	ab16      	add	r3, sp, #88	; 0x58
    7496:	77d8      	strb	r0, [r3, #31]
    7498:	f7ff f87d 	bl	6596 <_svfprintf_r+0x6de>
    749c:	4805      	ldr	r0, [pc, #20]	; (74b4 <_svfprintf_r+0x15fc>)
    749e:	4681      	mov	r9, r0
    74a0:	e76d      	b.n	737e <_svfprintf_r+0x14c6>
    74a2:	ab16      	add	r3, sp, #88	; 0x58
    74a4:	77d8      	strb	r0, [r3, #31]
    74a6:	f7fe ff79 	bl	639c <_svfprintf_r+0x4e4>
    74aa:	2301      	movs	r3, #1
    74ac:	425b      	negs	r3, r3
    74ae:	469a      	mov	sl, r3
    74b0:	e7c4      	b.n	743c <_svfprintf_r+0x1584>
    74b2:	46c0      	nop			; (mov r8, r8)
    74b4:	0000ee30 	.word	0x0000ee30
    74b8:	0000ede4 	.word	0x0000ede4
    74bc:	0000ede8 	.word	0x0000ede8

000074c0 <__ssvfscanf_r>:
    74c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    74c2:	464e      	mov	r6, r9
    74c4:	4645      	mov	r5, r8
    74c6:	46de      	mov	lr, fp
    74c8:	4657      	mov	r7, sl
    74ca:	b5e0      	push	{r5, r6, r7, lr}
    74cc:	4cce      	ldr	r4, [pc, #824]	; (7808 <__ssvfscanf_r+0x348>)
    74ce:	000e      	movs	r6, r1
    74d0:	44a5      	add	sp, r4
    74d2:	9307      	str	r3, [sp, #28]
    74d4:	230c      	movs	r3, #12
    74d6:	5ec9      	ldrsh	r1, [r1, r3]
    74d8:	2380      	movs	r3, #128	; 0x80
    74da:	019b      	lsls	r3, r3, #6
    74dc:	4680      	mov	r8, r0
    74de:	4219      	tst	r1, r3
    74e0:	d105      	bne.n	74ee <__ssvfscanf_r+0x2e>
    74e2:	430b      	orrs	r3, r1
    74e4:	81b3      	strh	r3, [r6, #12]
    74e6:	6e71      	ldr	r1, [r6, #100]	; 0x64
    74e8:	4bc8      	ldr	r3, [pc, #800]	; (780c <__ssvfscanf_r+0x34c>)
    74ea:	400b      	ands	r3, r1
    74ec:	6673      	str	r3, [r6, #100]	; 0x64
    74ee:	2300      	movs	r3, #0
    74f0:	0014      	movs	r4, r2
    74f2:	9309      	str	r3, [sp, #36]	; 0x24
    74f4:	9305      	str	r3, [sp, #20]
    74f6:	9308      	str	r3, [sp, #32]
    74f8:	7823      	ldrb	r3, [r4, #0]
    74fa:	1c62      	adds	r2, r4, #1
    74fc:	2700      	movs	r7, #0
    74fe:	9311      	str	r3, [sp, #68]	; 0x44
    7500:	4692      	mov	sl, r2
    7502:	2b00      	cmp	r3, #0
    7504:	d029      	beq.n	755a <__ssvfscanf_r+0x9a>
    7506:	f002 f8ad 	bl	9664 <__locale_ctype_ptr>
    750a:	2508      	movs	r5, #8
    750c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    750e:	18c0      	adds	r0, r0, r3
    7510:	7842      	ldrb	r2, [r0, #1]
    7512:	4015      	ands	r5, r2
    7514:	d02b      	beq.n	756e <__ssvfscanf_r+0xae>
    7516:	6873      	ldr	r3, [r6, #4]
    7518:	2408      	movs	r4, #8
    751a:	4645      	mov	r5, r8
    751c:	e00d      	b.n	753a <__ssvfscanf_r+0x7a>
    751e:	f002 f8a1 	bl	9664 <__locale_ctype_ptr>
    7522:	6832      	ldr	r2, [r6, #0]
    7524:	7813      	ldrb	r3, [r2, #0]
    7526:	18c0      	adds	r0, r0, r3
    7528:	7843      	ldrb	r3, [r0, #1]
    752a:	421c      	tst	r4, r3
    752c:	d00d      	beq.n	754a <__ssvfscanf_r+0x8a>
    752e:	6873      	ldr	r3, [r6, #4]
    7530:	3201      	adds	r2, #1
    7532:	3b01      	subs	r3, #1
    7534:	3701      	adds	r7, #1
    7536:	6073      	str	r3, [r6, #4]
    7538:	6032      	str	r2, [r6, #0]
    753a:	2b00      	cmp	r3, #0
    753c:	dcef      	bgt.n	751e <__ssvfscanf_r+0x5e>
    753e:	0031      	movs	r1, r6
    7540:	0028      	movs	r0, r5
    7542:	f004 fc63 	bl	be0c <__ssrefill_r>
    7546:	2800      	cmp	r0, #0
    7548:	d0e9      	beq.n	751e <__ssvfscanf_r+0x5e>
    754a:	46a8      	mov	r8, r5
    754c:	4654      	mov	r4, sl
    754e:	7823      	ldrb	r3, [r4, #0]
    7550:	1c62      	adds	r2, r4, #1
    7552:	9311      	str	r3, [sp, #68]	; 0x44
    7554:	4692      	mov	sl, r2
    7556:	2b00      	cmp	r3, #0
    7558:	d1d5      	bne.n	7506 <__ssvfscanf_r+0x46>
    755a:	9808      	ldr	r0, [sp, #32]
    755c:	23ad      	movs	r3, #173	; 0xad
    755e:	009b      	lsls	r3, r3, #2
    7560:	449d      	add	sp, r3
    7562:	bc3c      	pop	{r2, r3, r4, r5}
    7564:	4690      	mov	r8, r2
    7566:	4699      	mov	r9, r3
    7568:	46a2      	mov	sl, r4
    756a:	46ab      	mov	fp, r5
    756c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    756e:	2b25      	cmp	r3, #37	; 0x25
    7570:	d116      	bne.n	75a0 <__ssvfscanf_r+0xe0>
    7572:	7863      	ldrb	r3, [r4, #1]
    7574:	2400      	movs	r4, #0
    7576:	469b      	mov	fp, r3
    7578:	2300      	movs	r3, #0
    757a:	4699      	mov	r9, r3
    757c:	3301      	adds	r3, #1
    757e:	9304      	str	r3, [sp, #16]
    7580:	2004      	movs	r0, #4
    7582:	465b      	mov	r3, fp
    7584:	2202      	movs	r2, #2
    7586:	46a3      	mov	fp, r4
    7588:	4654      	mov	r4, sl
    758a:	3401      	adds	r4, #1
    758c:	9403      	str	r4, [sp, #12]
    758e:	2b78      	cmp	r3, #120	; 0x78
    7590:	d900      	bls.n	7594 <__ssvfscanf_r+0xd4>
    7592:	e0d5      	b.n	7740 <__ssvfscanf_r+0x280>
    7594:	499e      	ldr	r1, [pc, #632]	; (7810 <__ssvfscanf_r+0x350>)
    7596:	009c      	lsls	r4, r3, #2
    7598:	590c      	ldr	r4, [r1, r4]
    759a:	46a7      	mov	pc, r4
    759c:	9b03      	ldr	r3, [sp, #12]
    759e:	469a      	mov	sl, r3
    75a0:	6873      	ldr	r3, [r6, #4]
    75a2:	2b00      	cmp	r3, #0
    75a4:	dc01      	bgt.n	75aa <__ssvfscanf_r+0xea>
    75a6:	f000 fd64 	bl	8072 <__ssvfscanf_r+0xbb2>
    75aa:	4652      	mov	r2, sl
    75ac:	6833      	ldr	r3, [r6, #0]
    75ae:	3a01      	subs	r2, #1
    75b0:	7811      	ldrb	r1, [r2, #0]
    75b2:	781a      	ldrb	r2, [r3, #0]
    75b4:	4291      	cmp	r1, r2
    75b6:	d1d0      	bne.n	755a <__ssvfscanf_r+0x9a>
    75b8:	6872      	ldr	r2, [r6, #4]
    75ba:	3301      	adds	r3, #1
    75bc:	3a01      	subs	r2, #1
    75be:	6072      	str	r2, [r6, #4]
    75c0:	6033      	str	r3, [r6, #0]
    75c2:	3701      	adds	r7, #1
    75c4:	4654      	mov	r4, sl
    75c6:	e7c2      	b.n	754e <__ssvfscanf_r+0x8e>
    75c8:	4655      	mov	r5, sl
    75ca:	1c83      	adds	r3, r0, #2
    75cc:	d001      	beq.n	75d2 <__ssvfscanf_r+0x112>
    75ce:	f000 fe1a 	bl	8206 <__ssvfscanf_r+0xd46>
    75d2:	6873      	ldr	r3, [r6, #4]
    75d4:	2b00      	cmp	r3, #0
    75d6:	dd01      	ble.n	75dc <__ssvfscanf_r+0x11c>
    75d8:	f000 fc2a 	bl	7e30 <__ssvfscanf_r+0x970>
    75dc:	0031      	movs	r1, r6
    75de:	4640      	mov	r0, r8
    75e0:	f004 fc14 	bl	be0c <__ssrefill_r>
    75e4:	2800      	cmp	r0, #0
    75e6:	d101      	bne.n	75ec <__ssvfscanf_r+0x12c>
    75e8:	f000 fc22 	bl	7e30 <__ssvfscanf_r+0x970>
    75ec:	2d00      	cmp	r5, #0
    75ee:	d101      	bne.n	75f4 <__ssvfscanf_r+0x134>
    75f0:	f000 fc2a 	bl	7e48 <__ssvfscanf_r+0x988>
    75f4:	9b08      	ldr	r3, [sp, #32]
    75f6:	2b00      	cmp	r3, #0
    75f8:	d002      	beq.n	7600 <__ssvfscanf_r+0x140>
    75fa:	89b3      	ldrh	r3, [r6, #12]
    75fc:	065b      	lsls	r3, r3, #25
    75fe:	d5ac      	bpl.n	755a <__ssvfscanf_r+0x9a>
    7600:	2301      	movs	r3, #1
    7602:	425b      	negs	r3, r3
    7604:	9308      	str	r3, [sp, #32]
    7606:	e7a8      	b.n	755a <__ssvfscanf_r+0x9a>
    7608:	4b82      	ldr	r3, [pc, #520]	; (7814 <__ssvfscanf_r+0x354>)
    760a:	465c      	mov	r4, fp
    760c:	9309      	str	r3, [sp, #36]	; 0x24
    760e:	2300      	movs	r3, #0
    7610:	9305      	str	r3, [sp, #20]
    7612:	3303      	adds	r3, #3
    7614:	469b      	mov	fp, r3
    7616:	6873      	ldr	r3, [r6, #4]
    7618:	2b00      	cmp	r3, #0
    761a:	dd27      	ble.n	766c <__ssvfscanf_r+0x1ac>
    761c:	464b      	mov	r3, r9
    761e:	065b      	lsls	r3, r3, #25
    7620:	d42d      	bmi.n	767e <__ssvfscanf_r+0x1be>
    7622:	2308      	movs	r3, #8
    7624:	469a      	mov	sl, r3
    7626:	e001      	b.n	762c <__ssvfscanf_r+0x16c>
    7628:	3201      	adds	r2, #1
    762a:	6032      	str	r2, [r6, #0]
    762c:	f002 f81a 	bl	9664 <__locale_ctype_ptr>
    7630:	4651      	mov	r1, sl
    7632:	6832      	ldr	r2, [r6, #0]
    7634:	7813      	ldrb	r3, [r2, #0]
    7636:	18c0      	adds	r0, r0, r3
    7638:	7843      	ldrb	r3, [r0, #1]
    763a:	4219      	tst	r1, r3
    763c:	d01f      	beq.n	767e <__ssvfscanf_r+0x1be>
    763e:	6873      	ldr	r3, [r6, #4]
    7640:	3701      	adds	r7, #1
    7642:	3b01      	subs	r3, #1
    7644:	6073      	str	r3, [r6, #4]
    7646:	2b00      	cmp	r3, #0
    7648:	dcee      	bgt.n	7628 <__ssvfscanf_r+0x168>
    764a:	0031      	movs	r1, r6
    764c:	4640      	mov	r0, r8
    764e:	f004 fbdd 	bl	be0c <__ssrefill_r>
    7652:	2800      	cmp	r0, #0
    7654:	d0ea      	beq.n	762c <__ssvfscanf_r+0x16c>
    7656:	e7cd      	b.n	75f4 <__ssvfscanf_r+0x134>
    7658:	465c      	mov	r4, fp
    765a:	4b6f      	ldr	r3, [pc, #444]	; (7818 <__ssvfscanf_r+0x358>)
    765c:	9309      	str	r3, [sp, #36]	; 0x24
    765e:	230a      	movs	r3, #10
    7660:	9305      	str	r3, [sp, #20]
    7662:	3b07      	subs	r3, #7
    7664:	469b      	mov	fp, r3
    7666:	6873      	ldr	r3, [r6, #4]
    7668:	2b00      	cmp	r3, #0
    766a:	dcd7      	bgt.n	761c <__ssvfscanf_r+0x15c>
    766c:	0031      	movs	r1, r6
    766e:	4640      	mov	r0, r8
    7670:	f004 fbcc 	bl	be0c <__ssrefill_r>
    7674:	2800      	cmp	r0, #0
    7676:	d1bd      	bne.n	75f4 <__ssvfscanf_r+0x134>
    7678:	464b      	mov	r3, r9
    767a:	065b      	lsls	r3, r3, #25
    767c:	d5d1      	bpl.n	7622 <__ssvfscanf_r+0x162>
    767e:	465b      	mov	r3, fp
    7680:	2b02      	cmp	r3, #2
    7682:	d100      	bne.n	7686 <__ssvfscanf_r+0x1c6>
    7684:	e326      	b.n	7cd4 <__ssvfscanf_r+0x814>
    7686:	dc00      	bgt.n	768a <__ssvfscanf_r+0x1ca>
    7688:	e21b      	b.n	7ac2 <__ssvfscanf_r+0x602>
    768a:	465b      	mov	r3, fp
    768c:	2b03      	cmp	r3, #3
    768e:	d100      	bne.n	7692 <__ssvfscanf_r+0x1d2>
    7690:	e28a      	b.n	7ba8 <__ssvfscanf_r+0x6e8>
    7692:	2b04      	cmp	r3, #4
    7694:	d000      	beq.n	7698 <__ssvfscanf_r+0x1d8>
    7696:	e25b      	b.n	7b50 <__ssvfscanf_r+0x690>
    7698:	4640      	mov	r0, r8
    769a:	f001 fff3 	bl	9684 <_localeconv_r>
    769e:	22ae      	movs	r2, #174	; 0xae
    76a0:	2100      	movs	r1, #0
    76a2:	6803      	ldr	r3, [r0, #0]
    76a4:	0052      	lsls	r2, r2, #1
    76a6:	930c      	str	r3, [sp, #48]	; 0x30
    76a8:	1e63      	subs	r3, r4, #1
    76aa:	910d      	str	r1, [sp, #52]	; 0x34
    76ac:	4293      	cmp	r3, r2
    76ae:	d904      	bls.n	76ba <__ssvfscanf_r+0x1fa>
    76b0:	3c5e      	subs	r4, #94	; 0x5e
    76b2:	3cff      	subs	r4, #255	; 0xff
    76b4:	940d      	str	r4, [sp, #52]	; 0x34
    76b6:	245e      	movs	r4, #94	; 0x5e
    76b8:	34ff      	adds	r4, #255	; 0xff
    76ba:	23f0      	movs	r3, #240	; 0xf0
    76bc:	464a      	mov	r2, r9
    76be:	00db      	lsls	r3, r3, #3
    76c0:	431a      	orrs	r2, r3
    76c2:	2300      	movs	r3, #0
    76c4:	9304      	str	r3, [sp, #16]
    76c6:	930e      	str	r3, [sp, #56]	; 0x38
    76c8:	930f      	str	r3, [sp, #60]	; 0x3c
    76ca:	9306      	str	r3, [sp, #24]
    76cc:	930b      	str	r3, [sp, #44]	; 0x2c
    76ce:	ab54      	add	r3, sp, #336	; 0x150
    76d0:	469b      	mov	fp, r3
    76d2:	930a      	str	r3, [sp, #40]	; 0x28
    76d4:	4b51      	ldr	r3, [pc, #324]	; (781c <__ssvfscanf_r+0x35c>)
    76d6:	4691      	mov	r9, r2
    76d8:	469a      	mov	sl, r3
    76da:	002b      	movs	r3, r5
    76dc:	003d      	movs	r5, r7
    76de:	465f      	mov	r7, fp
    76e0:	469b      	mov	fp, r3
    76e2:	6832      	ldr	r2, [r6, #0]
    76e4:	7811      	ldrb	r1, [r2, #0]
    76e6:	000b      	movs	r3, r1
    76e8:	3b2b      	subs	r3, #43	; 0x2b
    76ea:	b2db      	uxtb	r3, r3
    76ec:	2b4e      	cmp	r3, #78	; 0x4e
    76ee:	d900      	bls.n	76f2 <__ssvfscanf_r+0x232>
    76f0:	e1d6      	b.n	7aa0 <__ssvfscanf_r+0x5e0>
    76f2:	4650      	mov	r0, sl
    76f4:	009b      	lsls	r3, r3, #2
    76f6:	58c3      	ldr	r3, [r0, r3]
    76f8:	469f      	mov	pc, r3
    76fa:	2302      	movs	r3, #2
    76fc:	465c      	mov	r4, fp
    76fe:	469b      	mov	fp, r3
    7700:	e789      	b.n	7616 <__ssvfscanf_r+0x156>
    7702:	465c      	mov	r4, fp
    7704:	2388      	movs	r3, #136	; 0x88
    7706:	464a      	mov	r2, r9
    7708:	009b      	lsls	r3, r3, #2
    770a:	431a      	orrs	r2, r3
    770c:	4b42      	ldr	r3, [pc, #264]	; (7818 <__ssvfscanf_r+0x358>)
    770e:	4691      	mov	r9, r2
    7710:	9309      	str	r3, [sp, #36]	; 0x24
    7712:	2310      	movs	r3, #16
    7714:	9305      	str	r3, [sp, #20]
    7716:	3b0d      	subs	r3, #13
    7718:	469b      	mov	fp, r3
    771a:	e77c      	b.n	7616 <__ssvfscanf_r+0x156>
    771c:	4653      	mov	r3, sl
    771e:	785b      	ldrb	r3, [r3, #1]
    7720:	2b6c      	cmp	r3, #108	; 0x6c
    7722:	d101      	bne.n	7728 <__ssvfscanf_r+0x268>
    7724:	f000 fcd0 	bl	80c8 <__ssvfscanf_r+0xc08>
    7728:	4649      	mov	r1, r9
    772a:	9c04      	ldr	r4, [sp, #16]
    772c:	4321      	orrs	r1, r4
    772e:	4689      	mov	r9, r1
    7730:	9903      	ldr	r1, [sp, #12]
    7732:	468a      	mov	sl, r1
    7734:	4654      	mov	r4, sl
    7736:	3401      	adds	r4, #1
    7738:	9403      	str	r4, [sp, #12]
    773a:	2b78      	cmp	r3, #120	; 0x78
    773c:	d800      	bhi.n	7740 <__ssvfscanf_r+0x280>
    773e:	e729      	b.n	7594 <__ssvfscanf_r+0xd4>
    7740:	465c      	mov	r4, fp
    7742:	469b      	mov	fp, r3
    7744:	f001 ff8e 	bl	9664 <__locale_ctype_ptr>
    7748:	2303      	movs	r3, #3
    774a:	4458      	add	r0, fp
    774c:	7842      	ldrb	r2, [r0, #1]
    774e:	4013      	ands	r3, r2
    7750:	2b01      	cmp	r3, #1
    7752:	d100      	bne.n	7756 <__ssvfscanf_r+0x296>
    7754:	e30a      	b.n	7d6c <__ssvfscanf_r+0x8ac>
    7756:	4b2f      	ldr	r3, [pc, #188]	; (7814 <__ssvfscanf_r+0x354>)
    7758:	e780      	b.n	765c <__ssvfscanf_r+0x19c>
    775a:	465c      	mov	r4, fp
    775c:	4b2e      	ldr	r3, [pc, #184]	; (7818 <__ssvfscanf_r+0x358>)
    775e:	9309      	str	r3, [sp, #36]	; 0x24
    7760:	2308      	movs	r3, #8
    7762:	9305      	str	r3, [sp, #20]
    7764:	3b05      	subs	r3, #5
    7766:	469b      	mov	fp, r3
    7768:	e755      	b.n	7616 <__ssvfscanf_r+0x156>
    776a:	9b03      	ldr	r3, [sp, #12]
    776c:	469a      	mov	sl, r3
    776e:	464b      	mov	r3, r9
    7770:	06db      	lsls	r3, r3, #27
    7772:	d500      	bpl.n	7776 <__ssvfscanf_r+0x2b6>
    7774:	e6ea      	b.n	754c <__ssvfscanf_r+0x8c>
    7776:	464b      	mov	r3, r9
    7778:	075b      	lsls	r3, r3, #29
    777a:	d501      	bpl.n	7780 <__ssvfscanf_r+0x2c0>
    777c:	f000 fce2 	bl	8144 <__ssvfscanf_r+0xc84>
    7780:	464b      	mov	r3, r9
    7782:	07db      	lsls	r3, r3, #31
    7784:	d500      	bpl.n	7788 <__ssvfscanf_r+0x2c8>
    7786:	e30e      	b.n	7da6 <__ssvfscanf_r+0x8e6>
    7788:	464b      	mov	r3, r9
    778a:	079b      	lsls	r3, r3, #30
    778c:	d400      	bmi.n	7790 <__ssvfscanf_r+0x2d0>
    778e:	e30a      	b.n	7da6 <__ssvfscanf_r+0x8e6>
    7790:	9907      	ldr	r1, [sp, #28]
    7792:	17fa      	asrs	r2, r7, #31
    7794:	680b      	ldr	r3, [r1, #0]
    7796:	4654      	mov	r4, sl
    7798:	601f      	str	r7, [r3, #0]
    779a:	605a      	str	r2, [r3, #4]
    779c:	000b      	movs	r3, r1
    779e:	3304      	adds	r3, #4
    77a0:	9307      	str	r3, [sp, #28]
    77a2:	e6d4      	b.n	754e <__ssvfscanf_r+0x8e>
    77a4:	464b      	mov	r3, r9
    77a6:	4303      	orrs	r3, r0
    77a8:	4699      	mov	r9, r3
    77aa:	4653      	mov	r3, sl
    77ac:	9903      	ldr	r1, [sp, #12]
    77ae:	785b      	ldrb	r3, [r3, #1]
    77b0:	468a      	mov	sl, r1
    77b2:	e6e9      	b.n	7588 <__ssvfscanf_r+0xc8>
    77b4:	465c      	mov	r4, fp
    77b6:	4b17      	ldr	r3, [pc, #92]	; (7814 <__ssvfscanf_r+0x354>)
    77b8:	e750      	b.n	765c <__ssvfscanf_r+0x19c>
    77ba:	2340      	movs	r3, #64	; 0x40
    77bc:	464a      	mov	r2, r9
    77be:	431a      	orrs	r2, r3
    77c0:	2300      	movs	r3, #0
    77c2:	465c      	mov	r4, fp
    77c4:	4691      	mov	r9, r2
    77c6:	469b      	mov	fp, r3
    77c8:	e725      	b.n	7616 <__ssvfscanf_r+0x156>
    77ca:	ab14      	add	r3, sp, #80	; 0x50
    77cc:	0018      	movs	r0, r3
    77ce:	9903      	ldr	r1, [sp, #12]
    77d0:	f002 ffde 	bl	a790 <__sccl>
    77d4:	2340      	movs	r3, #64	; 0x40
    77d6:	464a      	mov	r2, r9
    77d8:	431a      	orrs	r2, r3
    77da:	3b3f      	subs	r3, #63	; 0x3f
    77dc:	465c      	mov	r4, fp
    77de:	9003      	str	r0, [sp, #12]
    77e0:	4691      	mov	r9, r2
    77e2:	469b      	mov	fp, r3
    77e4:	e717      	b.n	7616 <__ssvfscanf_r+0x156>
    77e6:	465c      	mov	r4, fp
    77e8:	2380      	movs	r3, #128	; 0x80
    77ea:	e78c      	b.n	7706 <__ssvfscanf_r+0x246>
    77ec:	464a      	mov	r2, r9
    77ee:	2301      	movs	r3, #1
    77f0:	431a      	orrs	r2, r3
    77f2:	465c      	mov	r4, fp
    77f4:	4691      	mov	r9, r2
    77f6:	e7b1      	b.n	775c <__ssvfscanf_r+0x29c>
    77f8:	464b      	mov	r3, r9
    77fa:	4313      	orrs	r3, r2
    77fc:	e7d4      	b.n	77a8 <__ssvfscanf_r+0x2e8>
    77fe:	2304      	movs	r3, #4
    7800:	465c      	mov	r4, fp
    7802:	469b      	mov	fp, r3
    7804:	e707      	b.n	7616 <__ssvfscanf_r+0x156>
    7806:	46c0      	nop			; (mov r8, r8)
    7808:	fffffd4c 	.word	0xfffffd4c
    780c:	ffffdfff 	.word	0xffffdfff
    7810:	0000ee40 	.word	0x0000ee40
    7814:	00005e95 	.word	0x00005e95
    7818:	0000ba5d 	.word	0x0000ba5d
    781c:	0000f024 	.word	0x0000f024
    7820:	2301      	movs	r3, #1
    7822:	464a      	mov	r2, r9
    7824:	431a      	orrs	r2, r3
    7826:	465c      	mov	r4, fp
    7828:	4691      	mov	r9, r2
    782a:	4bc5      	ldr	r3, [pc, #788]	; (7b40 <__ssvfscanf_r+0x680>)
    782c:	e716      	b.n	765c <__ssvfscanf_r+0x19c>
    782e:	4659      	mov	r1, fp
    7830:	008c      	lsls	r4, r1, #2
    7832:	2130      	movs	r1, #48	; 0x30
    7834:	4249      	negs	r1, r1
    7836:	445c      	add	r4, fp
    7838:	468b      	mov	fp, r1
    783a:	0064      	lsls	r4, r4, #1
    783c:	18e3      	adds	r3, r4, r3
    783e:	449b      	add	fp, r3
    7840:	4653      	mov	r3, sl
    7842:	9903      	ldr	r1, [sp, #12]
    7844:	785b      	ldrb	r3, [r3, #1]
    7846:	468a      	mov	sl, r1
    7848:	e69e      	b.n	7588 <__ssvfscanf_r+0xc8>
    784a:	464b      	mov	r3, r9
    784c:	2110      	movs	r1, #16
    784e:	430b      	orrs	r3, r1
    7850:	e7aa      	b.n	77a8 <__ssvfscanf_r+0x2e8>
    7852:	9b04      	ldr	r3, [sp, #16]
    7854:	445b      	add	r3, fp
    7856:	2b00      	cmp	r3, #0
    7858:	d111      	bne.n	787e <__ssvfscanf_r+0x3be>
    785a:	4648      	mov	r0, r9
    785c:	4bb9      	ldr	r3, [pc, #740]	; (7b44 <__ssvfscanf_r+0x684>)
    785e:	4018      	ands	r0, r3
    7860:	4681      	mov	r9, r0
    7862:	7039      	strb	r1, [r7, #0]
    7864:	3701      	adds	r7, #1
    7866:	6873      	ldr	r3, [r6, #4]
    7868:	3c01      	subs	r4, #1
    786a:	3b01      	subs	r3, #1
    786c:	3501      	adds	r5, #1
    786e:	6073      	str	r3, [r6, #4]
    7870:	2b00      	cmp	r3, #0
    7872:	dd23      	ble.n	78bc <__ssvfscanf_r+0x3fc>
    7874:	3201      	adds	r2, #1
    7876:	6032      	str	r2, [r6, #0]
    7878:	2c00      	cmp	r4, #0
    787a:	d000      	beq.n	787e <__ssvfscanf_r+0x3be>
    787c:	e731      	b.n	76e2 <__ssvfscanf_r+0x222>
    787e:	465b      	mov	r3, fp
    7880:	46bb      	mov	fp, r7
    7882:	002f      	movs	r7, r5
    7884:	001d      	movs	r5, r3
    7886:	9b06      	ldr	r3, [sp, #24]
    7888:	2b00      	cmp	r3, #0
    788a:	d056      	beq.n	793a <__ssvfscanf_r+0x47a>
    788c:	e251      	b.n	7d32 <__ssvfscanf_r+0x872>
    788e:	464b      	mov	r3, r9
    7890:	05db      	lsls	r3, r3, #23
    7892:	d5de      	bpl.n	7852 <__ssvfscanf_r+0x392>
    7894:	2380      	movs	r3, #128	; 0x80
    7896:	4649      	mov	r1, r9
    7898:	4399      	bics	r1, r3
    789a:	9b06      	ldr	r3, [sp, #24]
    789c:	4689      	mov	r9, r1
    789e:	3301      	adds	r3, #1
    78a0:	9306      	str	r3, [sp, #24]
    78a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    78a4:	2b00      	cmp	r3, #0
    78a6:	d0de      	beq.n	7866 <__ssvfscanf_r+0x3a6>
    78a8:	3b01      	subs	r3, #1
    78aa:	930d      	str	r3, [sp, #52]	; 0x34
    78ac:	6873      	ldr	r3, [r6, #4]
    78ae:	3401      	adds	r4, #1
    78b0:	3b01      	subs	r3, #1
    78b2:	3c01      	subs	r4, #1
    78b4:	3501      	adds	r5, #1
    78b6:	6073      	str	r3, [r6, #4]
    78b8:	2b00      	cmp	r3, #0
    78ba:	dcdb      	bgt.n	7874 <__ssvfscanf_r+0x3b4>
    78bc:	0031      	movs	r1, r6
    78be:	4640      	mov	r0, r8
    78c0:	f004 faa4 	bl	be0c <__ssrefill_r>
    78c4:	2800      	cmp	r0, #0
    78c6:	d0d7      	beq.n	7878 <__ssvfscanf_r+0x3b8>
    78c8:	e7d9      	b.n	787e <__ssvfscanf_r+0x3be>
    78ca:	2380      	movs	r3, #128	; 0x80
    78cc:	4648      	mov	r0, r9
    78ce:	4203      	tst	r3, r0
    78d0:	d0d5      	beq.n	787e <__ssvfscanf_r+0x3be>
    78d2:	4398      	bics	r0, r3
    78d4:	4681      	mov	r9, r0
    78d6:	e7c4      	b.n	7862 <__ssvfscanf_r+0x3a2>
    78d8:	465b      	mov	r3, fp
    78da:	2b06      	cmp	r3, #6
    78dc:	d1d0      	bne.n	7880 <__ssvfscanf_r+0x3c0>
    78de:	2307      	movs	r3, #7
    78e0:	469b      	mov	fp, r3
    78e2:	e7be      	b.n	7862 <__ssvfscanf_r+0x3a2>
    78e4:	9b04      	ldr	r3, [sp, #16]
    78e6:	2b00      	cmp	r3, #0
    78e8:	d000      	beq.n	78ec <__ssvfscanf_r+0x42c>
    78ea:	e121      	b.n	7b30 <__ssvfscanf_r+0x670>
    78ec:	9b06      	ldr	r3, [sp, #24]
    78ee:	2b00      	cmp	r3, #0
    78f0:	d106      	bne.n	7900 <__ssvfscanf_r+0x440>
    78f2:	23e0      	movs	r3, #224	; 0xe0
    78f4:	4648      	mov	r0, r9
    78f6:	00db      	lsls	r3, r3, #3
    78f8:	4018      	ands	r0, r3
    78fa:	4298      	cmp	r0, r3
    78fc:	d100      	bne.n	7900 <__ssvfscanf_r+0x440>
    78fe:	e3db      	b.n	80b8 <__ssvfscanf_r+0xbf8>
    7900:	465b      	mov	r3, fp
    7902:	2b01      	cmp	r3, #1
    7904:	d001      	beq.n	790a <__ssvfscanf_r+0x44a>
    7906:	2b04      	cmp	r3, #4
    7908:	d1b9      	bne.n	787e <__ssvfscanf_r+0x3be>
    790a:	465b      	mov	r3, fp
    790c:	3301      	adds	r3, #1
    790e:	b2db      	uxtb	r3, r3
    7910:	469b      	mov	fp, r3
    7912:	e7a6      	b.n	7862 <__ssvfscanf_r+0x3a2>
    7914:	465b      	mov	r3, fp
    7916:	2b00      	cmp	r3, #0
    7918:	d000      	beq.n	791c <__ssvfscanf_r+0x45c>
    791a:	e0ff      	b.n	7b1c <__ssvfscanf_r+0x65c>
    791c:	9b06      	ldr	r3, [sp, #24]
    791e:	2b00      	cmp	r3, #0
    7920:	d000      	beq.n	7924 <__ssvfscanf_r+0x464>
    7922:	e202      	b.n	7d2a <__ssvfscanf_r+0x86a>
    7924:	23e0      	movs	r3, #224	; 0xe0
    7926:	4648      	mov	r0, r9
    7928:	00db      	lsls	r3, r3, #3
    792a:	4018      	ands	r0, r3
    792c:	4298      	cmp	r0, r3
    792e:	d100      	bne.n	7932 <__ssvfscanf_r+0x472>
    7930:	e3ba      	b.n	80a8 <__ssvfscanf_r+0xbe8>
    7932:	465b      	mov	r3, fp
    7934:	46bb      	mov	fp, r7
    7936:	002f      	movs	r7, r5
    7938:	001d      	movs	r5, r3
    793a:	9b04      	ldr	r3, [sp, #16]
    793c:	3b01      	subs	r3, #1
    793e:	2b01      	cmp	r3, #1
    7940:	d801      	bhi.n	7946 <__ssvfscanf_r+0x486>
    7942:	f000 fc63 	bl	820c <__ssvfscanf_r+0xd4c>
    7946:	1e6b      	subs	r3, r5, #1
    7948:	2b06      	cmp	r3, #6
    794a:	d820      	bhi.n	798e <__ssvfscanf_r+0x4ce>
    794c:	2d02      	cmp	r5, #2
    794e:	d801      	bhi.n	7954 <__ssvfscanf_r+0x494>
    7950:	f000 fc6e 	bl	8230 <__ssvfscanf_r+0xd70>
    7954:	2d03      	cmp	r5, #3
    7956:	d01a      	beq.n	798e <__ssvfscanf_r+0x4ce>
    7958:	3d04      	subs	r5, #4
    795a:	b2ed      	uxtb	r5, r5
    795c:	43ec      	mvns	r4, r5
    795e:	0033      	movs	r3, r6
    7960:	445c      	add	r4, fp
    7962:	46aa      	mov	sl, r5
    7964:	4646      	mov	r6, r8
    7966:	0025      	movs	r5, r4
    7968:	46b8      	mov	r8, r7
    796a:	465c      	mov	r4, fp
    796c:	001f      	movs	r7, r3
    796e:	3c01      	subs	r4, #1
    7970:	7821      	ldrb	r1, [r4, #0]
    7972:	003a      	movs	r2, r7
    7974:	0030      	movs	r0, r6
    7976:	f004 fa07 	bl	bd88 <_sungetc_r>
    797a:	42a5      	cmp	r5, r4
    797c:	d1f7      	bne.n	796e <__ssvfscanf_r+0x4ae>
    797e:	003b      	movs	r3, r7
    7980:	4647      	mov	r7, r8
    7982:	4655      	mov	r5, sl
    7984:	46b0      	mov	r8, r6
    7986:	46a3      	mov	fp, r4
    7988:	001e      	movs	r6, r3
    798a:	3f01      	subs	r7, #1
    798c:	1b7f      	subs	r7, r7, r5
    798e:	464b      	mov	r3, r9
    7990:	05db      	lsls	r3, r3, #23
    7992:	d519      	bpl.n	79c8 <__ssvfscanf_r+0x508>
    7994:	464b      	mov	r3, r9
    7996:	055b      	lsls	r3, r3, #21
    7998:	d501      	bpl.n	799e <__ssvfscanf_r+0x4de>
    799a:	f000 fc5b 	bl	8254 <__ssvfscanf_r+0xd94>
    799e:	465b      	mov	r3, fp
    79a0:	1e5c      	subs	r4, r3, #1
    79a2:	7821      	ldrb	r1, [r4, #0]
    79a4:	1e7d      	subs	r5, r7, #1
    79a6:	2965      	cmp	r1, #101	; 0x65
    79a8:	d008      	beq.n	79bc <__ssvfscanf_r+0x4fc>
    79aa:	2945      	cmp	r1, #69	; 0x45
    79ac:	d006      	beq.n	79bc <__ssvfscanf_r+0x4fc>
    79ae:	0032      	movs	r2, r6
    79b0:	4640      	mov	r0, r8
    79b2:	3c01      	subs	r4, #1
    79b4:	f004 f9e8 	bl	bd88 <_sungetc_r>
    79b8:	7821      	ldrb	r1, [r4, #0]
    79ba:	1ebd      	subs	r5, r7, #2
    79bc:	0032      	movs	r2, r6
    79be:	4640      	mov	r0, r8
    79c0:	f004 f9e2 	bl	bd88 <_sungetc_r>
    79c4:	002f      	movs	r7, r5
    79c6:	46a3      	mov	fp, r4
    79c8:	464a      	mov	r2, r9
    79ca:	2310      	movs	r3, #16
    79cc:	4013      	ands	r3, r2
    79ce:	9a03      	ldr	r2, [sp, #12]
    79d0:	4692      	mov	sl, r2
    79d2:	d000      	beq.n	79d6 <__ssvfscanf_r+0x516>
    79d4:	e5ba      	b.n	754c <__ssvfscanf_r+0x8c>
    79d6:	465a      	mov	r2, fp
    79d8:	7013      	strb	r3, [r2, #0]
    79da:	23c0      	movs	r3, #192	; 0xc0
    79dc:	464a      	mov	r2, r9
    79de:	00db      	lsls	r3, r3, #3
    79e0:	4013      	ands	r3, r2
    79e2:	2280      	movs	r2, #128	; 0x80
    79e4:	00d2      	lsls	r2, r2, #3
    79e6:	4293      	cmp	r3, r2
    79e8:	d100      	bne.n	79ec <__ssvfscanf_r+0x52c>
    79ea:	e389      	b.n	8100 <__ssvfscanf_r+0xc40>
    79ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    79ee:	2b00      	cmp	r3, #0
    79f0:	d000      	beq.n	79f4 <__ssvfscanf_r+0x534>
    79f2:	e1c0      	b.n	7d76 <__ssvfscanf_r+0x8b6>
    79f4:	2200      	movs	r2, #0
    79f6:	990a      	ldr	r1, [sp, #40]	; 0x28
    79f8:	4640      	mov	r0, r8
    79fa:	f003 fe89 	bl	b710 <_strtod_r>
    79fe:	464b      	mov	r3, r9
    7a00:	0004      	movs	r4, r0
    7a02:	000d      	movs	r5, r1
    7a04:	07db      	lsls	r3, r3, #31
    7a06:	d403      	bmi.n	7a10 <__ssvfscanf_r+0x550>
    7a08:	464b      	mov	r3, r9
    7a0a:	079b      	lsls	r3, r3, #30
    7a0c:	d400      	bmi.n	7a10 <__ssvfscanf_r+0x550>
    7a0e:	e198      	b.n	7d42 <__ssvfscanf_r+0x882>
    7a10:	9a07      	ldr	r2, [sp, #28]
    7a12:	6813      	ldr	r3, [r2, #0]
    7a14:	601c      	str	r4, [r3, #0]
    7a16:	605d      	str	r5, [r3, #4]
    7a18:	0013      	movs	r3, r2
    7a1a:	3304      	adds	r3, #4
    7a1c:	9307      	str	r3, [sp, #28]
    7a1e:	9b08      	ldr	r3, [sp, #32]
    7a20:	3301      	adds	r3, #1
    7a22:	9308      	str	r3, [sp, #32]
    7a24:	9b03      	ldr	r3, [sp, #12]
    7a26:	469a      	mov	sl, r3
    7a28:	4654      	mov	r4, sl
    7a2a:	e590      	b.n	754e <__ssvfscanf_r+0x8e>
    7a2c:	465b      	mov	r3, fp
    7a2e:	2b02      	cmp	r3, #2
    7a30:	d000      	beq.n	7a34 <__ssvfscanf_r+0x574>
    7a32:	e725      	b.n	7880 <__ssvfscanf_r+0x3c0>
    7a34:	2303      	movs	r3, #3
    7a36:	469b      	mov	fp, r3
    7a38:	e713      	b.n	7862 <__ssvfscanf_r+0x3a2>
    7a3a:	23a0      	movs	r3, #160	; 0xa0
    7a3c:	4648      	mov	r0, r9
    7a3e:	00db      	lsls	r3, r3, #3
    7a40:	4003      	ands	r3, r0
    7a42:	2080      	movs	r0, #128	; 0x80
    7a44:	00c0      	lsls	r0, r0, #3
    7a46:	4283      	cmp	r3, r0
    7a48:	d007      	beq.n	7a5a <__ssvfscanf_r+0x59a>
    7a4a:	464b      	mov	r3, r9
    7a4c:	4203      	tst	r3, r0
    7a4e:	d100      	bne.n	7a52 <__ssvfscanf_r+0x592>
    7a50:	e715      	b.n	787e <__ssvfscanf_r+0x3be>
    7a52:	9b06      	ldr	r3, [sp, #24]
    7a54:	2b00      	cmp	r3, #0
    7a56:	d100      	bne.n	7a5a <__ssvfscanf_r+0x59a>
    7a58:	e76b      	b.n	7932 <__ssvfscanf_r+0x472>
    7a5a:	2080      	movs	r0, #128	; 0x80
    7a5c:	464b      	mov	r3, r9
    7a5e:	0080      	lsls	r0, r0, #2
    7a60:	4203      	tst	r3, r0
    7a62:	d104      	bne.n	7a6e <__ssvfscanf_r+0x5ae>
    7a64:	9b06      	ldr	r3, [sp, #24]
    7a66:	980b      	ldr	r0, [sp, #44]	; 0x2c
    7a68:	970e      	str	r7, [sp, #56]	; 0x38
    7a6a:	1a1b      	subs	r3, r3, r0
    7a6c:	930f      	str	r3, [sp, #60]	; 0x3c
    7a6e:	4648      	mov	r0, r9
    7a70:	4b35      	ldr	r3, [pc, #212]	; (7b48 <__ssvfscanf_r+0x688>)
    7a72:	4018      	ands	r0, r3
    7a74:	0003      	movs	r3, r0
    7a76:	20c0      	movs	r0, #192	; 0xc0
    7a78:	0040      	lsls	r0, r0, #1
    7a7a:	4318      	orrs	r0, r3
    7a7c:	2300      	movs	r3, #0
    7a7e:	4681      	mov	r9, r0
    7a80:	9306      	str	r3, [sp, #24]
    7a82:	e6ee      	b.n	7862 <__ssvfscanf_r+0x3a2>
    7a84:	9b04      	ldr	r3, [sp, #16]
    7a86:	2b01      	cmp	r3, #1
    7a88:	d000      	beq.n	7a8c <__ssvfscanf_r+0x5cc>
    7a8a:	e6f8      	b.n	787e <__ssvfscanf_r+0x3be>
    7a8c:	2302      	movs	r3, #2
    7a8e:	9304      	str	r3, [sp, #16]
    7a90:	e6e7      	b.n	7862 <__ssvfscanf_r+0x3a2>
    7a92:	465b      	mov	r3, fp
    7a94:	2b07      	cmp	r3, #7
    7a96:	d000      	beq.n	7a9a <__ssvfscanf_r+0x5da>
    7a98:	e6f2      	b.n	7880 <__ssvfscanf_r+0x3c0>
    7a9a:	2308      	movs	r3, #8
    7a9c:	469b      	mov	fp, r3
    7a9e:	e6e0      	b.n	7862 <__ssvfscanf_r+0x3a2>
    7aa0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7aa2:	781b      	ldrb	r3, [r3, #0]
    7aa4:	428b      	cmp	r3, r1
    7aa6:	d000      	beq.n	7aaa <__ssvfscanf_r+0x5ea>
    7aa8:	e6e9      	b.n	787e <__ssvfscanf_r+0x3be>
    7aaa:	2080      	movs	r0, #128	; 0x80
    7aac:	464b      	mov	r3, r9
    7aae:	0080      	lsls	r0, r0, #2
    7ab0:	4203      	tst	r3, r0
    7ab2:	d100      	bne.n	7ab6 <__ssvfscanf_r+0x5f6>
    7ab4:	e6e3      	b.n	787e <__ssvfscanf_r+0x3be>
    7ab6:	4825      	ldr	r0, [pc, #148]	; (7b4c <__ssvfscanf_r+0x68c>)
    7ab8:	4003      	ands	r3, r0
    7aba:	4699      	mov	r9, r3
    7abc:	9b06      	ldr	r3, [sp, #24]
    7abe:	930b      	str	r3, [sp, #44]	; 0x2c
    7ac0:	e6cf      	b.n	7862 <__ssvfscanf_r+0x3a2>
    7ac2:	2b01      	cmp	r3, #1
    7ac4:	d144      	bne.n	7b50 <__ssvfscanf_r+0x690>
    7ac6:	2c00      	cmp	r4, #0
    7ac8:	d100      	bne.n	7acc <__ssvfscanf_r+0x60c>
    7aca:	3c01      	subs	r4, #1
    7acc:	464b      	mov	r3, r9
    7ace:	06db      	lsls	r3, r3, #27
    7ad0:	d400      	bmi.n	7ad4 <__ssvfscanf_r+0x614>
    7ad2:	e1c1      	b.n	7e58 <__ssvfscanf_r+0x998>
    7ad4:	ab14      	add	r3, sp, #80	; 0x50
    7ad6:	2500      	movs	r5, #0
    7ad8:	469a      	mov	sl, r3
    7ada:	6832      	ldr	r2, [r6, #0]
    7adc:	4651      	mov	r1, sl
    7ade:	7813      	ldrb	r3, [r2, #0]
    7ae0:	5ccb      	ldrb	r3, [r1, r3]
    7ae2:	2b00      	cmp	r3, #0
    7ae4:	d015      	beq.n	7b12 <__ssvfscanf_r+0x652>
    7ae6:	6873      	ldr	r3, [r6, #4]
    7ae8:	3201      	adds	r2, #1
    7aea:	3b01      	subs	r3, #1
    7aec:	3501      	adds	r5, #1
    7aee:	6073      	str	r3, [r6, #4]
    7af0:	6032      	str	r2, [r6, #0]
    7af2:	42ac      	cmp	r4, r5
    7af4:	d010      	beq.n	7b18 <__ssvfscanf_r+0x658>
    7af6:	2b00      	cmp	r3, #0
    7af8:	dcf0      	bgt.n	7adc <__ssvfscanf_r+0x61c>
    7afa:	0031      	movs	r1, r6
    7afc:	4640      	mov	r0, r8
    7afe:	f004 f985 	bl	be0c <__ssrefill_r>
    7b02:	2800      	cmp	r0, #0
    7b04:	d108      	bne.n	7b18 <__ssvfscanf_r+0x658>
    7b06:	4651      	mov	r1, sl
    7b08:	6832      	ldr	r2, [r6, #0]
    7b0a:	7813      	ldrb	r3, [r2, #0]
    7b0c:	5ccb      	ldrb	r3, [r1, r3]
    7b0e:	2b00      	cmp	r3, #0
    7b10:	d1e9      	bne.n	7ae6 <__ssvfscanf_r+0x626>
    7b12:	2d00      	cmp	r5, #0
    7b14:	d100      	bne.n	7b18 <__ssvfscanf_r+0x658>
    7b16:	e520      	b.n	755a <__ssvfscanf_r+0x9a>
    7b18:	197f      	adds	r7, r7, r5
    7b1a:	e783      	b.n	7a24 <__ssvfscanf_r+0x564>
    7b1c:	465b      	mov	r3, fp
    7b1e:	20fd      	movs	r0, #253	; 0xfd
    7b20:	3b03      	subs	r3, #3
    7b22:	4203      	tst	r3, r0
    7b24:	d000      	beq.n	7b28 <__ssvfscanf_r+0x668>
    7b26:	e6aa      	b.n	787e <__ssvfscanf_r+0x3be>
    7b28:	3304      	adds	r3, #4
    7b2a:	b2db      	uxtb	r3, r3
    7b2c:	469b      	mov	fp, r3
    7b2e:	e698      	b.n	7862 <__ssvfscanf_r+0x3a2>
    7b30:	9b04      	ldr	r3, [sp, #16]
    7b32:	2b02      	cmp	r3, #2
    7b34:	d000      	beq.n	7b38 <__ssvfscanf_r+0x678>
    7b36:	e6e3      	b.n	7900 <__ssvfscanf_r+0x440>
    7b38:	2303      	movs	r3, #3
    7b3a:	9304      	str	r3, [sp, #16]
    7b3c:	e691      	b.n	7862 <__ssvfscanf_r+0x3a2>
    7b3e:	46c0      	nop			; (mov r8, r8)
    7b40:	00005e95 	.word	0x00005e95
    7b44:	fffffe7f 	.word	0xfffffe7f
    7b48:	fffff87f 	.word	0xfffff87f
    7b4c:	fffffd7f 	.word	0xfffffd7f
    7b50:	2c00      	cmp	r4, #0
    7b52:	d100      	bne.n	7b56 <__ssvfscanf_r+0x696>
    7b54:	3401      	adds	r4, #1
    7b56:	464b      	mov	r3, r9
    7b58:	07db      	lsls	r3, r3, #31
    7b5a:	d500      	bpl.n	7b5e <__ssvfscanf_r+0x69e>
    7b5c:	e1aa      	b.n	7eb4 <__ssvfscanf_r+0x9f4>
    7b5e:	464b      	mov	r3, r9
    7b60:	06db      	lsls	r3, r3, #27
    7b62:	d400      	bmi.n	7b66 <__ssvfscanf_r+0x6a6>
    7b64:	e22f      	b.n	7fc6 <__ssvfscanf_r+0xb06>
    7b66:	4643      	mov	r3, r8
    7b68:	2500      	movs	r5, #0
    7b6a:	46b8      	mov	r8, r7
    7b6c:	001f      	movs	r7, r3
    7b6e:	e00c      	b.n	7b8a <__ssvfscanf_r+0x6ca>
    7b70:	6832      	ldr	r2, [r6, #0]
    7b72:	18ed      	adds	r5, r5, r3
    7b74:	4694      	mov	ip, r2
    7b76:	1ae4      	subs	r4, r4, r3
    7b78:	4463      	add	r3, ip
    7b7a:	6033      	str	r3, [r6, #0]
    7b7c:	0031      	movs	r1, r6
    7b7e:	0038      	movs	r0, r7
    7b80:	f004 f944 	bl	be0c <__ssrefill_r>
    7b84:	2800      	cmp	r0, #0
    7b86:	d000      	beq.n	7b8a <__ssvfscanf_r+0x6ca>
    7b88:	e214      	b.n	7fb4 <__ssvfscanf_r+0xaf4>
    7b8a:	6873      	ldr	r3, [r6, #4]
    7b8c:	42a3      	cmp	r3, r4
    7b8e:	dbef      	blt.n	7b70 <__ssvfscanf_r+0x6b0>
    7b90:	1b1b      	subs	r3, r3, r4
    7b92:	6073      	str	r3, [r6, #4]
    7b94:	6833      	ldr	r3, [r6, #0]
    7b96:	003a      	movs	r2, r7
    7b98:	469c      	mov	ip, r3
    7b9a:	4647      	mov	r7, r8
    7b9c:	192d      	adds	r5, r5, r4
    7b9e:	4464      	add	r4, ip
    7ba0:	4690      	mov	r8, r2
    7ba2:	6034      	str	r4, [r6, #0]
    7ba4:	197f      	adds	r7, r7, r5
    7ba6:	e73d      	b.n	7a24 <__ssvfscanf_r+0x564>
    7ba8:	22ae      	movs	r2, #174	; 0xae
    7baa:	2100      	movs	r1, #0
    7bac:	1e63      	subs	r3, r4, #1
    7bae:	0052      	lsls	r2, r2, #1
    7bb0:	468b      	mov	fp, r1
    7bb2:	4293      	cmp	r3, r2
    7bb4:	d904      	bls.n	7bc0 <__ssvfscanf_r+0x700>
    7bb6:	4bcb      	ldr	r3, [pc, #812]	; (7ee4 <__ssvfscanf_r+0xa24>)
    7bb8:	469b      	mov	fp, r3
    7bba:	44a3      	add	fp, r4
    7bbc:	245e      	movs	r4, #94	; 0x5e
    7bbe:	34ff      	adds	r4, #255	; 0xff
    7bc0:	23d8      	movs	r3, #216	; 0xd8
    7bc2:	464a      	mov	r2, r9
    7bc4:	011b      	lsls	r3, r3, #4
    7bc6:	431a      	orrs	r2, r3
    7bc8:	2300      	movs	r3, #0
    7bca:	469a      	mov	sl, r3
    7bcc:	ab54      	add	r3, sp, #336	; 0x150
    7bce:	930a      	str	r3, [sp, #40]	; 0x28
    7bd0:	001d      	movs	r5, r3
    7bd2:	003b      	movs	r3, r7
    7bd4:	0017      	movs	r7, r2
    7bd6:	4699      	mov	r9, r3
    7bd8:	6832      	ldr	r2, [r6, #0]
    7bda:	7811      	ldrb	r1, [r2, #0]
    7bdc:	000b      	movs	r3, r1
    7bde:	3b2b      	subs	r3, #43	; 0x2b
    7be0:	b2db      	uxtb	r3, r3
    7be2:	2b4d      	cmp	r3, #77	; 0x4d
    7be4:	d81d      	bhi.n	7c22 <__ssvfscanf_r+0x762>
    7be6:	48c0      	ldr	r0, [pc, #768]	; (7ee8 <__ssvfscanf_r+0xa28>)
    7be8:	009b      	lsls	r3, r3, #2
    7bea:	58c3      	ldr	r3, [r0, r3]
    7bec:	469f      	mov	pc, r3
    7bee:	23c0      	movs	r3, #192	; 0xc0
    7bf0:	2080      	movs	r0, #128	; 0x80
    7bf2:	00db      	lsls	r3, r3, #3
    7bf4:	403b      	ands	r3, r7
    7bf6:	0080      	lsls	r0, r0, #2
    7bf8:	4283      	cmp	r3, r0
    7bfa:	d112      	bne.n	7c22 <__ssvfscanf_r+0x762>
    7bfc:	4bbb      	ldr	r3, [pc, #748]	; (7eec <__ssvfscanf_r+0xa2c>)
    7bfe:	401f      	ands	r7, r3
    7c00:	23a0      	movs	r3, #160	; 0xa0
    7c02:	00db      	lsls	r3, r3, #3
    7c04:	431f      	orrs	r7, r3
    7c06:	2310      	movs	r3, #16
    7c08:	9305      	str	r3, [sp, #20]
    7c0a:	6873      	ldr	r3, [r6, #4]
    7c0c:	7029      	strb	r1, [r5, #0]
    7c0e:	3b01      	subs	r3, #1
    7c10:	3501      	adds	r5, #1
    7c12:	6073      	str	r3, [r6, #4]
    7c14:	2b00      	cmp	r3, #0
    7c16:	dd49      	ble.n	7cac <__ssvfscanf_r+0x7ec>
    7c18:	3201      	adds	r2, #1
    7c1a:	6032      	str	r2, [r6, #0]
    7c1c:	3c01      	subs	r4, #1
    7c1e:	2c00      	cmp	r4, #0
    7c20:	d1da      	bne.n	7bd8 <__ssvfscanf_r+0x718>
    7c22:	464b      	mov	r3, r9
    7c24:	46b9      	mov	r9, r7
    7c26:	001f      	movs	r7, r3
    7c28:	464b      	mov	r3, r9
    7c2a:	05db      	lsls	r3, r3, #23
    7c2c:	d507      	bpl.n	7c3e <__ssvfscanf_r+0x77e>
    7c2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7c30:	429d      	cmp	r5, r3
    7c32:	d900      	bls.n	7c36 <__ssvfscanf_r+0x776>
    7c34:	e231      	b.n	809a <__ssvfscanf_r+0xbda>
    7c36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7c38:	429d      	cmp	r5, r3
    7c3a:	d100      	bne.n	7c3e <__ssvfscanf_r+0x77e>
    7c3c:	e48d      	b.n	755a <__ssvfscanf_r+0x9a>
    7c3e:	2310      	movs	r3, #16
    7c40:	464a      	mov	r2, r9
    7c42:	4013      	ands	r3, r2
    7c44:	d100      	bne.n	7c48 <__ssvfscanf_r+0x788>
    7c46:	e0b7      	b.n	7db8 <__ssvfscanf_r+0x8f8>
    7c48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7c4a:	1aed      	subs	r5, r5, r3
    7c4c:	4455      	add	r5, sl
    7c4e:	197f      	adds	r7, r7, r5
    7c50:	e6e8      	b.n	7a24 <__ssvfscanf_r+0x564>
    7c52:	9b05      	ldr	r3, [sp, #20]
    7c54:	2b0a      	cmp	r3, #10
    7c56:	dde4      	ble.n	7c22 <__ssvfscanf_r+0x762>
    7c58:	4ba5      	ldr	r3, [pc, #660]	; (7ef0 <__ssvfscanf_r+0xa30>)
    7c5a:	401f      	ands	r7, r3
    7c5c:	e7d5      	b.n	7c0a <__ssvfscanf_r+0x74a>
    7c5e:	9b05      	ldr	r3, [sp, #20]
    7c60:	48a4      	ldr	r0, [pc, #656]	; (7ef4 <__ssvfscanf_r+0xa34>)
    7c62:	005b      	lsls	r3, r3, #1
    7c64:	5e1b      	ldrsh	r3, [r3, r0]
    7c66:	9305      	str	r3, [sp, #20]
    7c68:	4ba1      	ldr	r3, [pc, #644]	; (7ef0 <__ssvfscanf_r+0xa30>)
    7c6a:	401f      	ands	r7, r3
    7c6c:	e7cd      	b.n	7c0a <__ssvfscanf_r+0x74a>
    7c6e:	053b      	lsls	r3, r7, #20
    7c70:	d5cb      	bpl.n	7c0a <__ssvfscanf_r+0x74a>
    7c72:	9b05      	ldr	r3, [sp, #20]
    7c74:	2b00      	cmp	r3, #0
    7c76:	d105      	bne.n	7c84 <__ssvfscanf_r+0x7c4>
    7c78:	2380      	movs	r3, #128	; 0x80
    7c7a:	009b      	lsls	r3, r3, #2
    7c7c:	431f      	orrs	r7, r3
    7c7e:	3bf9      	subs	r3, #249	; 0xf9
    7c80:	3bff      	subs	r3, #255	; 0xff
    7c82:	9305      	str	r3, [sp, #20]
    7c84:	057b      	lsls	r3, r7, #21
    7c86:	d459      	bmi.n	7d3c <__ssvfscanf_r+0x87c>
    7c88:	4b9b      	ldr	r3, [pc, #620]	; (7ef8 <__ssvfscanf_r+0xa38>)
    7c8a:	401f      	ands	r7, r3
    7c8c:	465b      	mov	r3, fp
    7c8e:	2b00      	cmp	r3, #0
    7c90:	d004      	beq.n	7c9c <__ssvfscanf_r+0x7dc>
    7c92:	2301      	movs	r3, #1
    7c94:	425b      	negs	r3, r3
    7c96:	469c      	mov	ip, r3
    7c98:	3401      	adds	r4, #1
    7c9a:	44e3      	add	fp, ip
    7c9c:	2301      	movs	r3, #1
    7c9e:	469c      	mov	ip, r3
    7ca0:	6873      	ldr	r3, [r6, #4]
    7ca2:	44e2      	add	sl, ip
    7ca4:	3b01      	subs	r3, #1
    7ca6:	6073      	str	r3, [r6, #4]
    7ca8:	2b00      	cmp	r3, #0
    7caa:	dcb5      	bgt.n	7c18 <__ssvfscanf_r+0x758>
    7cac:	0031      	movs	r1, r6
    7cae:	4640      	mov	r0, r8
    7cb0:	f004 f8ac 	bl	be0c <__ssrefill_r>
    7cb4:	2800      	cmp	r0, #0
    7cb6:	d0b1      	beq.n	7c1c <__ssvfscanf_r+0x75c>
    7cb8:	e7b3      	b.n	7c22 <__ssvfscanf_r+0x762>
    7cba:	9b05      	ldr	r3, [sp, #20]
    7cbc:	488d      	ldr	r0, [pc, #564]	; (7ef4 <__ssvfscanf_r+0xa34>)
    7cbe:	005b      	lsls	r3, r3, #1
    7cc0:	5e1b      	ldrsh	r3, [r3, r0]
    7cc2:	9305      	str	r3, [sp, #20]
    7cc4:	2b08      	cmp	r3, #8
    7cc6:	dcc7      	bgt.n	7c58 <__ssvfscanf_r+0x798>
    7cc8:	e7ab      	b.n	7c22 <__ssvfscanf_r+0x762>
    7cca:	2380      	movs	r3, #128	; 0x80
    7ccc:	423b      	tst	r3, r7
    7cce:	d0a8      	beq.n	7c22 <__ssvfscanf_r+0x762>
    7cd0:	439f      	bics	r7, r3
    7cd2:	e79a      	b.n	7c0a <__ssvfscanf_r+0x74a>
    7cd4:	2c00      	cmp	r4, #0
    7cd6:	d100      	bne.n	7cda <__ssvfscanf_r+0x81a>
    7cd8:	3c01      	subs	r4, #1
    7cda:	2501      	movs	r5, #1
    7cdc:	464b      	mov	r3, r9
    7cde:	401d      	ands	r5, r3
    7ce0:	d000      	beq.n	7ce4 <__ssvfscanf_r+0x824>
    7ce2:	e093      	b.n	7e0c <__ssvfscanf_r+0x94c>
    7ce4:	464b      	mov	r3, r9
    7ce6:	06db      	lsls	r3, r3, #27
    7ce8:	d400      	bmi.n	7cec <__ssvfscanf_r+0x82c>
    7cea:	e183      	b.n	7ff4 <__ssvfscanf_r+0xb34>
    7cec:	2308      	movs	r3, #8
    7cee:	4699      	mov	r9, r3
    7cf0:	f001 fcb8 	bl	9664 <__locale_ctype_ptr>
    7cf4:	4649      	mov	r1, r9
    7cf6:	6833      	ldr	r3, [r6, #0]
    7cf8:	781a      	ldrb	r2, [r3, #0]
    7cfa:	1880      	adds	r0, r0, r2
    7cfc:	7842      	ldrb	r2, [r0, #1]
    7cfe:	4211      	tst	r1, r2
    7d00:	d000      	beq.n	7d04 <__ssvfscanf_r+0x844>
    7d02:	e709      	b.n	7b18 <__ssvfscanf_r+0x658>
    7d04:	6872      	ldr	r2, [r6, #4]
    7d06:	3301      	adds	r3, #1
    7d08:	3a01      	subs	r2, #1
    7d0a:	3501      	adds	r5, #1
    7d0c:	6072      	str	r2, [r6, #4]
    7d0e:	6033      	str	r3, [r6, #0]
    7d10:	42ac      	cmp	r4, r5
    7d12:	d100      	bne.n	7d16 <__ssvfscanf_r+0x856>
    7d14:	e700      	b.n	7b18 <__ssvfscanf_r+0x658>
    7d16:	2a00      	cmp	r2, #0
    7d18:	dcea      	bgt.n	7cf0 <__ssvfscanf_r+0x830>
    7d1a:	0031      	movs	r1, r6
    7d1c:	4640      	mov	r0, r8
    7d1e:	f004 f875 	bl	be0c <__ssrefill_r>
    7d22:	2800      	cmp	r0, #0
    7d24:	d0e4      	beq.n	7cf0 <__ssvfscanf_r+0x830>
    7d26:	197f      	adds	r7, r7, r5
    7d28:	e67c      	b.n	7a24 <__ssvfscanf_r+0x564>
    7d2a:	465b      	mov	r3, fp
    7d2c:	46bb      	mov	fp, r7
    7d2e:	002f      	movs	r7, r5
    7d30:	001d      	movs	r5, r3
    7d32:	464a      	mov	r2, r9
    7d34:	4b71      	ldr	r3, [pc, #452]	; (7efc <__ssvfscanf_r+0xa3c>)
    7d36:	401a      	ands	r2, r3
    7d38:	4691      	mov	r9, r2
    7d3a:	e5fe      	b.n	793a <__ssvfscanf_r+0x47a>
    7d3c:	4b70      	ldr	r3, [pc, #448]	; (7f00 <__ssvfscanf_r+0xa40>)
    7d3e:	401f      	ands	r7, r3
    7d40:	e763      	b.n	7c0a <__ssvfscanf_r+0x74a>
    7d42:	9b07      	ldr	r3, [sp, #28]
    7d44:	1d1a      	adds	r2, r3, #4
    7d46:	681b      	ldr	r3, [r3, #0]
    7d48:	4692      	mov	sl, r2
    7d4a:	4699      	mov	r9, r3
    7d4c:	0002      	movs	r2, r0
    7d4e:	000b      	movs	r3, r1
    7d50:	f005 faf6 	bl	d340 <__aeabi_dcmpun>
    7d54:	2800      	cmp	r0, #0
    7d56:	d000      	beq.n	7d5a <__ssvfscanf_r+0x89a>
    7d58:	e28e      	b.n	8278 <__ssvfscanf_r+0xdb8>
    7d5a:	0020      	movs	r0, r4
    7d5c:	0029      	movs	r1, r5
    7d5e:	f005 fb0f 	bl	d380 <__aeabi_d2f>
    7d62:	464b      	mov	r3, r9
    7d64:	6018      	str	r0, [r3, #0]
    7d66:	4653      	mov	r3, sl
    7d68:	9307      	str	r3, [sp, #28]
    7d6a:	e658      	b.n	7a1e <__ssvfscanf_r+0x55e>
    7d6c:	464a      	mov	r2, r9
    7d6e:	431a      	orrs	r2, r3
    7d70:	4691      	mov	r9, r2
    7d72:	4b64      	ldr	r3, [pc, #400]	; (7f04 <__ssvfscanf_r+0xa44>)
    7d74:	e472      	b.n	765c <__ssvfscanf_r+0x19c>
    7d76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7d78:	2200      	movs	r2, #0
    7d7a:	1c59      	adds	r1, r3, #1
    7d7c:	4640      	mov	r0, r8
    7d7e:	230a      	movs	r3, #10
    7d80:	f7fe f888 	bl	5e94 <_strtol_r>
    7d84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7d86:	1ac2      	subs	r2, r0, r3
    7d88:	a90e      	add	r1, sp, #56	; 0x38
    7d8a:	468c      	mov	ip, r1
    7d8c:	4b5e      	ldr	r3, [pc, #376]	; (7f08 <__ssvfscanf_r+0xa48>)
    7d8e:	990e      	ldr	r1, [sp, #56]	; 0x38
    7d90:	4463      	add	r3, ip
    7d92:	4299      	cmp	r1, r3
    7d94:	d302      	bcc.n	7d9c <__ssvfscanf_r+0x8dc>
    7d96:	4b5d      	ldr	r3, [pc, #372]	; (7f0c <__ssvfscanf_r+0xa4c>)
    7d98:	4463      	add	r3, ip
    7d9a:	930e      	str	r3, [sp, #56]	; 0x38
    7d9c:	495c      	ldr	r1, [pc, #368]	; (7f10 <__ssvfscanf_r+0xa50>)
    7d9e:	980e      	ldr	r0, [sp, #56]	; 0x38
    7da0:	f002 fd30 	bl	a804 <sprintf>
    7da4:	e626      	b.n	79f4 <__ssvfscanf_r+0x534>
    7da6:	9a07      	ldr	r2, [sp, #28]
    7da8:	4654      	mov	r4, sl
    7daa:	6813      	ldr	r3, [r2, #0]
    7dac:	601f      	str	r7, [r3, #0]
    7dae:	0013      	movs	r3, r2
    7db0:	3304      	adds	r3, #4
    7db2:	9307      	str	r3, [sp, #28]
    7db4:	f7ff fbcb 	bl	754e <__ssvfscanf_r+0x8e>
    7db8:	702b      	strb	r3, [r5, #0]
    7dba:	2200      	movs	r2, #0
    7dbc:	9b05      	ldr	r3, [sp, #20]
    7dbe:	990a      	ldr	r1, [sp, #40]	; 0x28
    7dc0:	4640      	mov	r0, r8
    7dc2:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7dc4:	47a0      	blx	r4
    7dc6:	464b      	mov	r3, r9
    7dc8:	069b      	lsls	r3, r3, #26
    7dca:	d500      	bpl.n	7dce <__ssvfscanf_r+0x90e>
    7dcc:	e15b      	b.n	8086 <__ssvfscanf_r+0xbc6>
    7dce:	464b      	mov	r3, r9
    7dd0:	075b      	lsls	r3, r3, #29
    7dd2:	d500      	bpl.n	7dd6 <__ssvfscanf_r+0x916>
    7dd4:	e1c6      	b.n	8164 <__ssvfscanf_r+0xca4>
    7dd6:	464b      	mov	r3, r9
    7dd8:	07db      	lsls	r3, r3, #31
    7dda:	d500      	bpl.n	7dde <__ssvfscanf_r+0x91e>
    7ddc:	e153      	b.n	8086 <__ssvfscanf_r+0xbc6>
    7dde:	464b      	mov	r3, r9
    7de0:	079b      	lsls	r3, r3, #30
    7de2:	d400      	bmi.n	7de6 <__ssvfscanf_r+0x926>
    7de4:	e14f      	b.n	8086 <__ssvfscanf_r+0xbc6>
    7de6:	4b4b      	ldr	r3, [pc, #300]	; (7f14 <__ssvfscanf_r+0xa54>)
    7de8:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7dea:	429a      	cmp	r2, r3
    7dec:	d100      	bne.n	7df0 <__ssvfscanf_r+0x930>
    7dee:	e1b2      	b.n	8156 <__ssvfscanf_r+0xc96>
    7df0:	9b05      	ldr	r3, [sp, #20]
    7df2:	2200      	movs	r2, #0
    7df4:	990a      	ldr	r1, [sp, #40]	; 0x28
    7df6:	4640      	mov	r0, r8
    7df8:	f003 fd78 	bl	b8ec <_strtoll_r>
    7dfc:	9a07      	ldr	r2, [sp, #28]
    7dfe:	6813      	ldr	r3, [r2, #0]
    7e00:	6018      	str	r0, [r3, #0]
    7e02:	6059      	str	r1, [r3, #4]
    7e04:	0013      	movs	r3, r2
    7e06:	3304      	adds	r3, #4
    7e08:	9307      	str	r3, [sp, #28]
    7e0a:	e142      	b.n	8092 <__ssvfscanf_r+0xbd2>
    7e0c:	ab12      	add	r3, sp, #72	; 0x48
    7e0e:	2208      	movs	r2, #8
    7e10:	0018      	movs	r0, r3
    7e12:	2100      	movs	r1, #0
    7e14:	9306      	str	r3, [sp, #24]
    7e16:	f7fd fba5 	bl	5564 <memset>
    7e1a:	2310      	movs	r3, #16
    7e1c:	464a      	mov	r2, r9
    7e1e:	401a      	ands	r2, r3
    7e20:	ab11      	add	r3, sp, #68	; 0x44
    7e22:	4693      	mov	fp, r2
    7e24:	4699      	mov	r9, r3
    7e26:	2a00      	cmp	r2, #0
    7e28:	d100      	bne.n	7e2c <__ssvfscanf_r+0x96c>
    7e2a:	e17f      	b.n	812c <__ssvfscanf_r+0xc6c>
    7e2c:	2300      	movs	r3, #0
    7e2e:	001d      	movs	r5, r3
    7e30:	f001 fc18 	bl	9664 <__locale_ctype_ptr>
    7e34:	2208      	movs	r2, #8
    7e36:	6833      	ldr	r3, [r6, #0]
    7e38:	781b      	ldrb	r3, [r3, #0]
    7e3a:	18c0      	adds	r0, r0, r3
    7e3c:	7843      	ldrb	r3, [r0, #1]
    7e3e:	421a      	tst	r2, r3
    7e40:	d102      	bne.n	7e48 <__ssvfscanf_r+0x988>
    7e42:	2c00      	cmp	r4, #0
    7e44:	d000      	beq.n	7e48 <__ssvfscanf_r+0x988>
    7e46:	e194      	b.n	8172 <__ssvfscanf_r+0xcb2>
    7e48:	465b      	mov	r3, fp
    7e4a:	2b00      	cmp	r3, #0
    7e4c:	d000      	beq.n	7e50 <__ssvfscanf_r+0x990>
    7e4e:	e5e9      	b.n	7a24 <__ssvfscanf_r+0x564>
    7e50:	464b      	mov	r3, r9
    7e52:	465a      	mov	r2, fp
    7e54:	601a      	str	r2, [r3, #0]
    7e56:	e5e2      	b.n	7a1e <__ssvfscanf_r+0x55e>
    7e58:	9b07      	ldr	r3, [sp, #28]
    7e5a:	3c01      	subs	r4, #1
    7e5c:	1d1a      	adds	r2, r3, #4
    7e5e:	681b      	ldr	r3, [r3, #0]
    7e60:	4693      	mov	fp, r2
    7e62:	4699      	mov	r9, r3
    7e64:	001a      	movs	r2, r3
    7e66:	444c      	add	r4, r9
    7e68:	ab14      	add	r3, sp, #80	; 0x50
    7e6a:	46ba      	mov	sl, r7
    7e6c:	001d      	movs	r5, r3
    7e6e:	0027      	movs	r7, r4
    7e70:	6833      	ldr	r3, [r6, #0]
    7e72:	7819      	ldrb	r1, [r3, #0]
    7e74:	5c69      	ldrb	r1, [r5, r1]
    7e76:	2900      	cmp	r1, #0
    7e78:	d100      	bne.n	7e7c <__ssvfscanf_r+0x9bc>
    7e7a:	e13e      	b.n	80fa <__ssvfscanf_r+0xc3a>
    7e7c:	6871      	ldr	r1, [r6, #4]
    7e7e:	1c54      	adds	r4, r2, #1
    7e80:	3901      	subs	r1, #1
    7e82:	6071      	str	r1, [r6, #4]
    7e84:	1c59      	adds	r1, r3, #1
    7e86:	6031      	str	r1, [r6, #0]
    7e88:	781b      	ldrb	r3, [r3, #0]
    7e8a:	7013      	strb	r3, [r2, #0]
    7e8c:	42ba      	cmp	r2, r7
    7e8e:	d100      	bne.n	7e92 <__ssvfscanf_r+0x9d2>
    7e90:	e124      	b.n	80dc <__ssvfscanf_r+0xc1c>
    7e92:	6873      	ldr	r3, [r6, #4]
    7e94:	2b00      	cmp	r3, #0
    7e96:	dd01      	ble.n	7e9c <__ssvfscanf_r+0x9dc>
    7e98:	0022      	movs	r2, r4
    7e9a:	e7e9      	b.n	7e70 <__ssvfscanf_r+0x9b0>
    7e9c:	0031      	movs	r1, r6
    7e9e:	4640      	mov	r0, r8
    7ea0:	f003 ffb4 	bl	be0c <__ssrefill_r>
    7ea4:	2800      	cmp	r0, #0
    7ea6:	d0f7      	beq.n	7e98 <__ssvfscanf_r+0x9d8>
    7ea8:	4657      	mov	r7, sl
    7eaa:	45a1      	cmp	r9, r4
    7eac:	d000      	beq.n	7eb0 <__ssvfscanf_r+0x9f0>
    7eae:	e116      	b.n	80de <__ssvfscanf_r+0xc1e>
    7eb0:	f7ff fba0 	bl	75f4 <__ssvfscanf_r+0x134>
    7eb4:	ab12      	add	r3, sp, #72	; 0x48
    7eb6:	2208      	movs	r2, #8
    7eb8:	0018      	movs	r0, r3
    7eba:	2100      	movs	r1, #0
    7ebc:	9306      	str	r3, [sp, #24]
    7ebe:	f7fd fb51 	bl	5564 <memset>
    7ec2:	2310      	movs	r3, #16
    7ec4:	464a      	mov	r2, r9
    7ec6:	401a      	ands	r2, r3
    7ec8:	9204      	str	r2, [sp, #16]
    7eca:	d100      	bne.n	7ece <__ssvfscanf_r+0xa0e>
    7ecc:	e124      	b.n	8118 <__ssvfscanf_r+0xc58>
    7ece:	2300      	movs	r3, #0
    7ed0:	469b      	mov	fp, r3
    7ed2:	2c00      	cmp	r4, #0
    7ed4:	d100      	bne.n	7ed8 <__ssvfscanf_r+0xa18>
    7ed6:	e5a5      	b.n	7a24 <__ssvfscanf_r+0x564>
    7ed8:	9b06      	ldr	r3, [sp, #24]
    7eda:	46b9      	mov	r9, r7
    7edc:	2500      	movs	r5, #0
    7ede:	0027      	movs	r7, r4
    7ee0:	469a      	mov	sl, r3
    7ee2:	e02a      	b.n	7f3a <__ssvfscanf_r+0xa7a>
    7ee4:	fffffea3 	.word	0xfffffea3
    7ee8:	0000f160 	.word	0x0000f160
    7eec:	fffffdff 	.word	0xfffffdff
    7ef0:	fffff47f 	.word	0xfffff47f
    7ef4:	0000f2a0 	.word	0x0000f2a0
    7ef8:	fffffc7f 	.word	0xfffffc7f
    7efc:	fffffeff 	.word	0xfffffeff
    7f00:	fffffa7f 	.word	0xfffffa7f
    7f04:	00005e95 	.word	0x00005e95
    7f08:	0000026b 	.word	0x0000026b
    7f0c:	0000026a 	.word	0x0000026a
    7f10:	0000f298 	.word	0x0000f298
    7f14:	0000ba5d 	.word	0x0000ba5d
    7f18:	9b04      	ldr	r3, [sp, #16]
    7f1a:	2b00      	cmp	r3, #0
    7f1c:	d146      	bne.n	7fac <__ssvfscanf_r+0xaec>
    7f1e:	465a      	mov	r2, fp
    7f20:	44a1      	add	r9, r4
    7f22:	6013      	str	r3, [r2, #0]
    7f24:	3f01      	subs	r7, #1
    7f26:	2304      	movs	r3, #4
    7f28:	469c      	mov	ip, r3
    7f2a:	2500      	movs	r5, #0
    7f2c:	44e3      	add	fp, ip
    7f2e:	6873      	ldr	r3, [r6, #4]
    7f30:	2b00      	cmp	r3, #0
    7f32:	dd2f      	ble.n	7f94 <__ssvfscanf_r+0xad4>
    7f34:	2f00      	cmp	r7, #0
    7f36:	d100      	bne.n	7f3a <__ssvfscanf_r+0xa7a>
    7f38:	e0fe      	b.n	8138 <__ssvfscanf_r+0xc78>
    7f3a:	f001 fb7f 	bl	963c <__locale_mb_cur_max>
    7f3e:	42a8      	cmp	r0, r5
    7f40:	d101      	bne.n	7f46 <__ssvfscanf_r+0xa86>
    7f42:	f7ff fb57 	bl	75f4 <__ssvfscanf_r+0x134>
    7f46:	208c      	movs	r0, #140	; 0x8c
    7f48:	6833      	ldr	r3, [r6, #0]
    7f4a:	0040      	lsls	r0, r0, #1
    7f4c:	781a      	ldrb	r2, [r3, #0]
    7f4e:	3301      	adds	r3, #1
    7f50:	6033      	str	r3, [r6, #0]
    7f52:	4653      	mov	r3, sl
    7f54:	a90e      	add	r1, sp, #56	; 0x38
    7f56:	1809      	adds	r1, r1, r0
    7f58:	554a      	strb	r2, [r1, r5]
    7f5a:	6872      	ldr	r2, [r6, #4]
    7f5c:	1c6c      	adds	r4, r5, #1
    7f5e:	3a01      	subs	r2, #1
    7f60:	6072      	str	r2, [r6, #4]
    7f62:	4659      	mov	r1, fp
    7f64:	9300      	str	r3, [sp, #0]
    7f66:	aa54      	add	r2, sp, #336	; 0x150
    7f68:	0023      	movs	r3, r4
    7f6a:	4640      	mov	r0, r8
    7f6c:	f001 fe50 	bl	9c10 <_mbrtowc_r>
    7f70:	1c43      	adds	r3, r0, #1
    7f72:	d101      	bne.n	7f78 <__ssvfscanf_r+0xab8>
    7f74:	f7ff fb3e 	bl	75f4 <__ssvfscanf_r+0x134>
    7f78:	2800      	cmp	r0, #0
    7f7a:	d0cd      	beq.n	7f18 <__ssvfscanf_r+0xa58>
    7f7c:	0025      	movs	r5, r4
    7f7e:	1c83      	adds	r3, r0, #2
    7f80:	d0d5      	beq.n	7f2e <__ssvfscanf_r+0xa6e>
    7f82:	9b04      	ldr	r3, [sp, #16]
    7f84:	44a1      	add	r9, r4
    7f86:	3f01      	subs	r7, #1
    7f88:	2500      	movs	r5, #0
    7f8a:	2b00      	cmp	r3, #0
    7f8c:	d0cb      	beq.n	7f26 <__ssvfscanf_r+0xa66>
    7f8e:	6873      	ldr	r3, [r6, #4]
    7f90:	2b00      	cmp	r3, #0
    7f92:	dccf      	bgt.n	7f34 <__ssvfscanf_r+0xa74>
    7f94:	0031      	movs	r1, r6
    7f96:	4640      	mov	r0, r8
    7f98:	f003 ff38 	bl	be0c <__ssrefill_r>
    7f9c:	2800      	cmp	r0, #0
    7f9e:	d0c9      	beq.n	7f34 <__ssvfscanf_r+0xa74>
    7fa0:	464f      	mov	r7, r9
    7fa2:	2d00      	cmp	r5, #0
    7fa4:	d100      	bne.n	7fa8 <__ssvfscanf_r+0xae8>
    7fa6:	e0c8      	b.n	813a <__ssvfscanf_r+0xc7a>
    7fa8:	f7ff fb24 	bl	75f4 <__ssvfscanf_r+0x134>
    7fac:	44a1      	add	r9, r4
    7fae:	3f01      	subs	r7, #1
    7fb0:	2500      	movs	r5, #0
    7fb2:	e7bc      	b.n	7f2e <__ssvfscanf_r+0xa6e>
    7fb4:	003b      	movs	r3, r7
    7fb6:	4647      	mov	r7, r8
    7fb8:	4698      	mov	r8, r3
    7fba:	2d00      	cmp	r5, #0
    7fbc:	d101      	bne.n	7fc2 <__ssvfscanf_r+0xb02>
    7fbe:	f7ff fb19 	bl	75f4 <__ssvfscanf_r+0x134>
    7fc2:	197f      	adds	r7, r7, r5
    7fc4:	e52e      	b.n	7a24 <__ssvfscanf_r+0x564>
    7fc6:	9b07      	ldr	r3, [sp, #28]
    7fc8:	2201      	movs	r2, #1
    7fca:	6819      	ldr	r1, [r3, #0]
    7fcc:	1d1d      	adds	r5, r3, #4
    7fce:	9600      	str	r6, [sp, #0]
    7fd0:	0023      	movs	r3, r4
    7fd2:	4640      	mov	r0, r8
    7fd4:	f003 ff3a 	bl	be4c <_sfread_r>
    7fd8:	2800      	cmp	r0, #0
    7fda:	d101      	bne.n	7fe0 <__ssvfscanf_r+0xb20>
    7fdc:	f7ff fb0a 	bl	75f4 <__ssvfscanf_r+0x134>
    7fe0:	9b08      	ldr	r3, [sp, #32]
    7fe2:	183f      	adds	r7, r7, r0
    7fe4:	3301      	adds	r3, #1
    7fe6:	9308      	str	r3, [sp, #32]
    7fe8:	9b03      	ldr	r3, [sp, #12]
    7fea:	9507      	str	r5, [sp, #28]
    7fec:	469a      	mov	sl, r3
    7fee:	4654      	mov	r4, sl
    7ff0:	f7ff faad 	bl	754e <__ssvfscanf_r+0x8e>
    7ff4:	9b07      	ldr	r3, [sp, #28]
    7ff6:	46b9      	mov	r9, r7
    7ff8:	1d1a      	adds	r2, r3, #4
    7ffa:	681b      	ldr	r3, [r3, #0]
    7ffc:	3c01      	subs	r4, #1
    7ffe:	469a      	mov	sl, r3
    8000:	9306      	str	r3, [sp, #24]
    8002:	001d      	movs	r5, r3
    8004:	2308      	movs	r3, #8
    8006:	469b      	mov	fp, r3
    8008:	9204      	str	r2, [sp, #16]
    800a:	44a2      	add	sl, r4
    800c:	f001 fb2a 	bl	9664 <__locale_ctype_ptr>
    8010:	4659      	mov	r1, fp
    8012:	6833      	ldr	r3, [r6, #0]
    8014:	781a      	ldrb	r2, [r3, #0]
    8016:	1880      	adds	r0, r0, r2
    8018:	7842      	ldrb	r2, [r0, #1]
    801a:	4211      	tst	r1, r2
    801c:	d179      	bne.n	8112 <__ssvfscanf_r+0xc52>
    801e:	6872      	ldr	r2, [r6, #4]
    8020:	1c6c      	adds	r4, r5, #1
    8022:	3a01      	subs	r2, #1
    8024:	6072      	str	r2, [r6, #4]
    8026:	1c5a      	adds	r2, r3, #1
    8028:	6032      	str	r2, [r6, #0]
    802a:	781b      	ldrb	r3, [r3, #0]
    802c:	0027      	movs	r7, r4
    802e:	702b      	strb	r3, [r5, #0]
    8030:	4555      	cmp	r5, sl
    8032:	d00a      	beq.n	804a <__ssvfscanf_r+0xb8a>
    8034:	6873      	ldr	r3, [r6, #4]
    8036:	2b00      	cmp	r3, #0
    8038:	dd01      	ble.n	803e <__ssvfscanf_r+0xb7e>
    803a:	0025      	movs	r5, r4
    803c:	e7e6      	b.n	800c <__ssvfscanf_r+0xb4c>
    803e:	0031      	movs	r1, r6
    8040:	4640      	mov	r0, r8
    8042:	f003 fee3 	bl	be0c <__ssrefill_r>
    8046:	2800      	cmp	r0, #0
    8048:	d0f7      	beq.n	803a <__ssvfscanf_r+0xb7a>
    804a:	464b      	mov	r3, r9
    804c:	46b9      	mov	r9, r7
    804e:	001f      	movs	r7, r3
    8050:	2300      	movs	r3, #0
    8052:	464a      	mov	r2, r9
    8054:	7013      	strb	r3, [r2, #0]
    8056:	464b      	mov	r3, r9
    8058:	9a06      	ldr	r2, [sp, #24]
    805a:	1a9b      	subs	r3, r3, r2
    805c:	18ff      	adds	r7, r7, r3
    805e:	9b08      	ldr	r3, [sp, #32]
    8060:	3301      	adds	r3, #1
    8062:	9308      	str	r3, [sp, #32]
    8064:	9b04      	ldr	r3, [sp, #16]
    8066:	9307      	str	r3, [sp, #28]
    8068:	9b03      	ldr	r3, [sp, #12]
    806a:	469a      	mov	sl, r3
    806c:	4654      	mov	r4, sl
    806e:	f7ff fa6e 	bl	754e <__ssvfscanf_r+0x8e>
    8072:	0031      	movs	r1, r6
    8074:	4640      	mov	r0, r8
    8076:	f003 fec9 	bl	be0c <__ssrefill_r>
    807a:	2800      	cmp	r0, #0
    807c:	d101      	bne.n	8082 <__ssvfscanf_r+0xbc2>
    807e:	f7ff fa94 	bl	75aa <__ssvfscanf_r+0xea>
    8082:	f7ff fab7 	bl	75f4 <__ssvfscanf_r+0x134>
    8086:	9a07      	ldr	r2, [sp, #28]
    8088:	6813      	ldr	r3, [r2, #0]
    808a:	6018      	str	r0, [r3, #0]
    808c:	0013      	movs	r3, r2
    808e:	3304      	adds	r3, #4
    8090:	9307      	str	r3, [sp, #28]
    8092:	9b08      	ldr	r3, [sp, #32]
    8094:	3301      	adds	r3, #1
    8096:	9308      	str	r3, [sp, #32]
    8098:	e5d6      	b.n	7c48 <__ssvfscanf_r+0x788>
    809a:	3d01      	subs	r5, #1
    809c:	7829      	ldrb	r1, [r5, #0]
    809e:	0032      	movs	r2, r6
    80a0:	4640      	mov	r0, r8
    80a2:	f003 fe71 	bl	bd88 <_sungetc_r>
    80a6:	e5c6      	b.n	7c36 <__ssvfscanf_r+0x776>
    80a8:	4648      	mov	r0, r9
    80aa:	4b78      	ldr	r3, [pc, #480]	; (828c <__ssvfscanf_r+0xdcc>)
    80ac:	4018      	ands	r0, r3
    80ae:	2301      	movs	r3, #1
    80b0:	4681      	mov	r9, r0
    80b2:	469b      	mov	fp, r3
    80b4:	f7ff fbd5 	bl	7862 <__ssvfscanf_r+0x3a2>
    80b8:	4648      	mov	r0, r9
    80ba:	4b74      	ldr	r3, [pc, #464]	; (828c <__ssvfscanf_r+0xdcc>)
    80bc:	4018      	ands	r0, r3
    80be:	2301      	movs	r3, #1
    80c0:	4681      	mov	r9, r0
    80c2:	9304      	str	r3, [sp, #16]
    80c4:	f7ff fbcd 	bl	7862 <__ssvfscanf_r+0x3a2>
    80c8:	464b      	mov	r3, r9
    80ca:	2102      	movs	r1, #2
    80cc:	4313      	orrs	r3, r2
    80ce:	4699      	mov	r9, r3
    80d0:	468c      	mov	ip, r1
    80d2:	4653      	mov	r3, sl
    80d4:	44e2      	add	sl, ip
    80d6:	789b      	ldrb	r3, [r3, #2]
    80d8:	f7ff fa56 	bl	7588 <__ssvfscanf_r+0xc8>
    80dc:	4657      	mov	r7, sl
    80de:	464b      	mov	r3, r9
    80e0:	1ae5      	subs	r5, r4, r3
    80e2:	d101      	bne.n	80e8 <__ssvfscanf_r+0xc28>
    80e4:	f7ff fa39 	bl	755a <__ssvfscanf_r+0x9a>
    80e8:	2300      	movs	r3, #0
    80ea:	7023      	strb	r3, [r4, #0]
    80ec:	9b08      	ldr	r3, [sp, #32]
    80ee:	197f      	adds	r7, r7, r5
    80f0:	3301      	adds	r3, #1
    80f2:	9308      	str	r3, [sp, #32]
    80f4:	465b      	mov	r3, fp
    80f6:	9307      	str	r3, [sp, #28]
    80f8:	e494      	b.n	7a24 <__ssvfscanf_r+0x564>
    80fa:	4657      	mov	r7, sl
    80fc:	0014      	movs	r4, r2
    80fe:	e7ee      	b.n	80de <__ssvfscanf_r+0xc1e>
    8100:	9b06      	ldr	r3, [sp, #24]
    8102:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    8104:	1a9a      	subs	r2, r3, r2
    8106:	d100      	bne.n	810a <__ssvfscanf_r+0xc4a>
    8108:	e474      	b.n	79f4 <__ssvfscanf_r+0x534>
    810a:	465b      	mov	r3, fp
    810c:	4252      	negs	r2, r2
    810e:	930e      	str	r3, [sp, #56]	; 0x38
    8110:	e63a      	b.n	7d88 <__ssvfscanf_r+0x8c8>
    8112:	464f      	mov	r7, r9
    8114:	46a9      	mov	r9, r5
    8116:	e79b      	b.n	8050 <__ssvfscanf_r+0xb90>
    8118:	9a07      	ldr	r2, [sp, #28]
    811a:	0013      	movs	r3, r2
    811c:	6812      	ldr	r2, [r2, #0]
    811e:	3304      	adds	r3, #4
    8120:	4693      	mov	fp, r2
    8122:	9307      	str	r3, [sp, #28]
    8124:	2c00      	cmp	r4, #0
    8126:	d000      	beq.n	812a <__ssvfscanf_r+0xc6a>
    8128:	e6d6      	b.n	7ed8 <__ssvfscanf_r+0xa18>
    812a:	e478      	b.n	7a1e <__ssvfscanf_r+0x55e>
    812c:	9b07      	ldr	r3, [sp, #28]
    812e:	681a      	ldr	r2, [r3, #0]
    8130:	3304      	adds	r3, #4
    8132:	4691      	mov	r9, r2
    8134:	9307      	str	r3, [sp, #28]
    8136:	e679      	b.n	7e2c <__ssvfscanf_r+0x96c>
    8138:	464f      	mov	r7, r9
    813a:	9b04      	ldr	r3, [sp, #16]
    813c:	2b00      	cmp	r3, #0
    813e:	d100      	bne.n	8142 <__ssvfscanf_r+0xc82>
    8140:	e46d      	b.n	7a1e <__ssvfscanf_r+0x55e>
    8142:	e46f      	b.n	7a24 <__ssvfscanf_r+0x564>
    8144:	9b07      	ldr	r3, [sp, #28]
    8146:	4654      	mov	r4, sl
    8148:	681a      	ldr	r2, [r3, #0]
    814a:	3304      	adds	r3, #4
    814c:	9203      	str	r2, [sp, #12]
    814e:	8017      	strh	r7, [r2, #0]
    8150:	9307      	str	r3, [sp, #28]
    8152:	f7ff f9fc 	bl	754e <__ssvfscanf_r+0x8e>
    8156:	9b05      	ldr	r3, [sp, #20]
    8158:	2200      	movs	r2, #0
    815a:	990a      	ldr	r1, [sp, #40]	; 0x28
    815c:	4640      	mov	r0, r8
    815e:	f003 fd71 	bl	bc44 <_strtoull_r>
    8162:	e64b      	b.n	7dfc <__ssvfscanf_r+0x93c>
    8164:	9b07      	ldr	r3, [sp, #28]
    8166:	681a      	ldr	r2, [r3, #0]
    8168:	3304      	adds	r3, #4
    816a:	9204      	str	r2, [sp, #16]
    816c:	8010      	strh	r0, [r2, #0]
    816e:	9307      	str	r3, [sp, #28]
    8170:	e78f      	b.n	8092 <__ssvfscanf_r+0xbd2>
    8172:	f001 fa63 	bl	963c <__locale_mb_cur_max>
    8176:	4285      	cmp	r5, r0
    8178:	d101      	bne.n	817e <__ssvfscanf_r+0xcbe>
    817a:	f7ff fa3b 	bl	75f4 <__ssvfscanf_r+0x134>
    817e:	208c      	movs	r0, #140	; 0x8c
    8180:	1c6b      	adds	r3, r5, #1
    8182:	469a      	mov	sl, r3
    8184:	6833      	ldr	r3, [r6, #0]
    8186:	0040      	lsls	r0, r0, #1
    8188:	781a      	ldrb	r2, [r3, #0]
    818a:	a90e      	add	r1, sp, #56	; 0x38
    818c:	1809      	adds	r1, r1, r0
    818e:	554a      	strb	r2, [r1, r5]
    8190:	3301      	adds	r3, #1
    8192:	6872      	ldr	r2, [r6, #4]
    8194:	6033      	str	r3, [r6, #0]
    8196:	9b06      	ldr	r3, [sp, #24]
    8198:	3a01      	subs	r2, #1
    819a:	6072      	str	r2, [r6, #4]
    819c:	4649      	mov	r1, r9
    819e:	9300      	str	r3, [sp, #0]
    81a0:	aa54      	add	r2, sp, #336	; 0x150
    81a2:	4653      	mov	r3, sl
    81a4:	4640      	mov	r0, r8
    81a6:	f001 fd33 	bl	9c10 <_mbrtowc_r>
    81aa:	1c43      	adds	r3, r0, #1
    81ac:	d101      	bne.n	81b2 <__ssvfscanf_r+0xcf2>
    81ae:	f7ff fa21 	bl	75f4 <__ssvfscanf_r+0x134>
    81b2:	2800      	cmp	r0, #0
    81b4:	d001      	beq.n	81ba <__ssvfscanf_r+0xcfa>
    81b6:	f7ff fa07 	bl	75c8 <__ssvfscanf_r+0x108>
    81ba:	464b      	mov	r3, r9
    81bc:	6018      	str	r0, [r3, #0]
    81be:	f001 fa31 	bl	9624 <iswspace>
    81c2:	1e05      	subs	r5, r0, #0
    81c4:	d012      	beq.n	81ec <__ssvfscanf_r+0xd2c>
    81c6:	4655      	mov	r5, sl
    81c8:	2d00      	cmp	r5, #0
    81ca:	d100      	bne.n	81ce <__ssvfscanf_r+0xd0e>
    81cc:	e63c      	b.n	7e48 <__ssvfscanf_r+0x988>
    81ce:	4644      	mov	r4, r8
    81d0:	228c      	movs	r2, #140	; 0x8c
    81d2:	ab0e      	add	r3, sp, #56	; 0x38
    81d4:	0052      	lsls	r2, r2, #1
    81d6:	3d01      	subs	r5, #1
    81d8:	189b      	adds	r3, r3, r2
    81da:	5d59      	ldrb	r1, [r3, r5]
    81dc:	0032      	movs	r2, r6
    81de:	0020      	movs	r0, r4
    81e0:	f003 fdd2 	bl	bd88 <_sungetc_r>
    81e4:	2d00      	cmp	r5, #0
    81e6:	d1f3      	bne.n	81d0 <__ssvfscanf_r+0xd10>
    81e8:	46a0      	mov	r8, r4
    81ea:	e62d      	b.n	7e48 <__ssvfscanf_r+0x988>
    81ec:	465b      	mov	r3, fp
    81ee:	4457      	add	r7, sl
    81f0:	3c01      	subs	r4, #1
    81f2:	2b00      	cmp	r3, #0
    81f4:	d001      	beq.n	81fa <__ssvfscanf_r+0xd3a>
    81f6:	f7ff f9ec 	bl	75d2 <__ssvfscanf_r+0x112>
    81fa:	3304      	adds	r3, #4
    81fc:	469c      	mov	ip, r3
    81fe:	465d      	mov	r5, fp
    8200:	44e1      	add	r9, ip
    8202:	f7ff f9e6 	bl	75d2 <__ssvfscanf_r+0x112>
    8206:	464b      	mov	r3, r9
    8208:	6818      	ldr	r0, [r3, #0]
    820a:	e7d8      	b.n	81be <__ssvfscanf_r+0xcfe>
    820c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    820e:	459b      	cmp	fp, r3
    8210:	d801      	bhi.n	8216 <__ssvfscanf_r+0xd56>
    8212:	f7ff f9a2 	bl	755a <__ssvfscanf_r+0x9a>
    8216:	465c      	mov	r4, fp
    8218:	4645      	mov	r5, r8
    821a:	3c01      	subs	r4, #1
    821c:	7821      	ldrb	r1, [r4, #0]
    821e:	0032      	movs	r2, r6
    8220:	0028      	movs	r0, r5
    8222:	f003 fdb1 	bl	bd88 <_sungetc_r>
    8226:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8228:	429c      	cmp	r4, r3
    822a:	d1f6      	bne.n	821a <__ssvfscanf_r+0xd5a>
    822c:	f7ff f995 	bl	755a <__ssvfscanf_r+0x9a>
    8230:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8232:	465c      	mov	r4, fp
    8234:	4645      	mov	r5, r8
    8236:	459b      	cmp	fp, r3
    8238:	d801      	bhi.n	823e <__ssvfscanf_r+0xd7e>
    823a:	f7ff f98e 	bl	755a <__ssvfscanf_r+0x9a>
    823e:	3c01      	subs	r4, #1
    8240:	7821      	ldrb	r1, [r4, #0]
    8242:	0032      	movs	r2, r6
    8244:	0028      	movs	r0, r5
    8246:	f003 fd9f 	bl	bd88 <_sungetc_r>
    824a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    824c:	429c      	cmp	r4, r3
    824e:	d1f6      	bne.n	823e <__ssvfscanf_r+0xd7e>
    8250:	f7ff f983 	bl	755a <__ssvfscanf_r+0x9a>
    8254:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8256:	459b      	cmp	fp, r3
    8258:	d801      	bhi.n	825e <__ssvfscanf_r+0xd9e>
    825a:	f7ff f97e 	bl	755a <__ssvfscanf_r+0x9a>
    825e:	465c      	mov	r4, fp
    8260:	4645      	mov	r5, r8
    8262:	3c01      	subs	r4, #1
    8264:	7821      	ldrb	r1, [r4, #0]
    8266:	0032      	movs	r2, r6
    8268:	0028      	movs	r0, r5
    826a:	f003 fd8d 	bl	bd88 <_sungetc_r>
    826e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8270:	429c      	cmp	r4, r3
    8272:	d1f6      	bne.n	8262 <__ssvfscanf_r+0xda2>
    8274:	f7ff f971 	bl	755a <__ssvfscanf_r+0x9a>
    8278:	2000      	movs	r0, #0
    827a:	f002 fabf 	bl	a7fc <nanf>
    827e:	464b      	mov	r3, r9
    8280:	6018      	str	r0, [r3, #0]
    8282:	4653      	mov	r3, sl
    8284:	9307      	str	r3, [sp, #28]
    8286:	f7ff fbca 	bl	7a1e <__ssvfscanf_r+0x55e>
    828a:	46c0      	nop			; (mov r8, r8)
    828c:	fffff87f 	.word	0xfffff87f

00008290 <register_fini>:
    8290:	4b03      	ldr	r3, [pc, #12]	; (82a0 <register_fini+0x10>)
    8292:	b510      	push	{r4, lr}
    8294:	2b00      	cmp	r3, #0
    8296:	d002      	beq.n	829e <register_fini+0xe>
    8298:	4802      	ldr	r0, [pc, #8]	; (82a4 <register_fini+0x14>)
    829a:	f000 f805 	bl	82a8 <atexit>
    829e:	bd10      	pop	{r4, pc}
    82a0:	00000000 	.word	0x00000000
    82a4:	00009395 	.word	0x00009395

000082a8 <atexit>:
    82a8:	b510      	push	{r4, lr}
    82aa:	0001      	movs	r1, r0
    82ac:	2300      	movs	r3, #0
    82ae:	2200      	movs	r2, #0
    82b0:	2000      	movs	r0, #0
    82b2:	f003 fe63 	bl	bf7c <__register_exitproc>
    82b6:	bd10      	pop	{r4, pc}

000082b8 <quorem>:
    82b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    82ba:	4645      	mov	r5, r8
    82bc:	4680      	mov	r8, r0
    82be:	46de      	mov	lr, fp
    82c0:	4657      	mov	r7, sl
    82c2:	464e      	mov	r6, r9
    82c4:	4642      	mov	r2, r8
    82c6:	b5e0      	push	{r5, r6, r7, lr}
    82c8:	690c      	ldr	r4, [r1, #16]
    82ca:	6912      	ldr	r2, [r2, #16]
    82cc:	b085      	sub	sp, #20
    82ce:	000b      	movs	r3, r1
    82d0:	9102      	str	r1, [sp, #8]
    82d2:	2000      	movs	r0, #0
    82d4:	4294      	cmp	r4, r2
    82d6:	dd00      	ble.n	82da <quorem+0x22>
    82d8:	e090      	b.n	83fc <quorem+0x144>
    82da:	2214      	movs	r2, #20
    82dc:	4694      	mov	ip, r2
    82de:	4463      	add	r3, ip
    82e0:	4699      	mov	r9, r3
    82e2:	464a      	mov	r2, r9
    82e4:	3c01      	subs	r4, #1
    82e6:	00a3      	lsls	r3, r4, #2
    82e8:	18d6      	adds	r6, r2, r3
    82ea:	2214      	movs	r2, #20
    82ec:	4442      	add	r2, r8
    82ee:	4693      	mov	fp, r2
    82f0:	449b      	add	fp, r3
    82f2:	6833      	ldr	r3, [r6, #0]
    82f4:	0015      	movs	r5, r2
    82f6:	1c59      	adds	r1, r3, #1
    82f8:	465b      	mov	r3, fp
    82fa:	6818      	ldr	r0, [r3, #0]
    82fc:	9201      	str	r2, [sp, #4]
    82fe:	f7fb f9f3 	bl	36e8 <__udivsi3>
    8302:	1e03      	subs	r3, r0, #0
    8304:	9000      	str	r0, [sp, #0]
    8306:	d042      	beq.n	838e <quorem+0xd6>
    8308:	0029      	movs	r1, r5
    830a:	2700      	movs	r7, #0
    830c:	464d      	mov	r5, r9
    830e:	2000      	movs	r0, #0
    8310:	46b1      	mov	r9, r6
    8312:	46a2      	mov	sl, r4
    8314:	003e      	movs	r6, r7
    8316:	0004      	movs	r4, r0
    8318:	469c      	mov	ip, r3
    831a:	002f      	movs	r7, r5
    831c:	0008      	movs	r0, r1
    831e:	9503      	str	r5, [sp, #12]
    8320:	4663      	mov	r3, ip
    8322:	cf04      	ldmia	r7!, {r2}
    8324:	0415      	lsls	r5, r2, #16
    8326:	0c2d      	lsrs	r5, r5, #16
    8328:	435d      	muls	r5, r3
    832a:	0c12      	lsrs	r2, r2, #16
    832c:	435a      	muls	r2, r3
    832e:	19ad      	adds	r5, r5, r6
    8330:	0c2b      	lsrs	r3, r5, #16
    8332:	18d2      	adds	r2, r2, r3
    8334:	6803      	ldr	r3, [r0, #0]
    8336:	042d      	lsls	r5, r5, #16
    8338:	0419      	lsls	r1, r3, #16
    833a:	0c09      	lsrs	r1, r1, #16
    833c:	1909      	adds	r1, r1, r4
    833e:	0c16      	lsrs	r6, r2, #16
    8340:	0c2d      	lsrs	r5, r5, #16
    8342:	0412      	lsls	r2, r2, #16
    8344:	1b49      	subs	r1, r1, r5
    8346:	0c12      	lsrs	r2, r2, #16
    8348:	0c1b      	lsrs	r3, r3, #16
    834a:	1a9b      	subs	r3, r3, r2
    834c:	140a      	asrs	r2, r1, #16
    834e:	189b      	adds	r3, r3, r2
    8350:	0409      	lsls	r1, r1, #16
    8352:	141c      	asrs	r4, r3, #16
    8354:	0c09      	lsrs	r1, r1, #16
    8356:	041b      	lsls	r3, r3, #16
    8358:	4319      	orrs	r1, r3
    835a:	c002      	stmia	r0!, {r1}
    835c:	45b9      	cmp	r9, r7
    835e:	d2df      	bcs.n	8320 <quorem+0x68>
    8360:	9b03      	ldr	r3, [sp, #12]
    8362:	464e      	mov	r6, r9
    8364:	4699      	mov	r9, r3
    8366:	465b      	mov	r3, fp
    8368:	681b      	ldr	r3, [r3, #0]
    836a:	4654      	mov	r4, sl
    836c:	2b00      	cmp	r3, #0
    836e:	d10e      	bne.n	838e <quorem+0xd6>
    8370:	465b      	mov	r3, fp
    8372:	9a01      	ldr	r2, [sp, #4]
    8374:	3b04      	subs	r3, #4
    8376:	429a      	cmp	r2, r3
    8378:	d304      	bcc.n	8384 <quorem+0xcc>
    837a:	e006      	b.n	838a <quorem+0xd2>
    837c:	3b04      	subs	r3, #4
    837e:	3c01      	subs	r4, #1
    8380:	429a      	cmp	r2, r3
    8382:	d202      	bcs.n	838a <quorem+0xd2>
    8384:	6819      	ldr	r1, [r3, #0]
    8386:	2900      	cmp	r1, #0
    8388:	d0f8      	beq.n	837c <quorem+0xc4>
    838a:	4643      	mov	r3, r8
    838c:	611c      	str	r4, [r3, #16]
    838e:	9902      	ldr	r1, [sp, #8]
    8390:	4640      	mov	r0, r8
    8392:	f001 ffbb 	bl	a30c <__mcmp>
    8396:	2800      	cmp	r0, #0
    8398:	db2f      	blt.n	83fa <quorem+0x142>
    839a:	464f      	mov	r7, r9
    839c:	2000      	movs	r0, #0
    839e:	9b00      	ldr	r3, [sp, #0]
    83a0:	9d01      	ldr	r5, [sp, #4]
    83a2:	3301      	adds	r3, #1
    83a4:	9300      	str	r3, [sp, #0]
    83a6:	682b      	ldr	r3, [r5, #0]
    83a8:	cf02      	ldmia	r7!, {r1}
    83aa:	041a      	lsls	r2, r3, #16
    83ac:	0c12      	lsrs	r2, r2, #16
    83ae:	1810      	adds	r0, r2, r0
    83b0:	040a      	lsls	r2, r1, #16
    83b2:	0c12      	lsrs	r2, r2, #16
    83b4:	1a82      	subs	r2, r0, r2
    83b6:	0c09      	lsrs	r1, r1, #16
    83b8:	0c1b      	lsrs	r3, r3, #16
    83ba:	1a5b      	subs	r3, r3, r1
    83bc:	1411      	asrs	r1, r2, #16
    83be:	185b      	adds	r3, r3, r1
    83c0:	0412      	lsls	r2, r2, #16
    83c2:	1418      	asrs	r0, r3, #16
    83c4:	0c12      	lsrs	r2, r2, #16
    83c6:	041b      	lsls	r3, r3, #16
    83c8:	4313      	orrs	r3, r2
    83ca:	c508      	stmia	r5!, {r3}
    83cc:	42be      	cmp	r6, r7
    83ce:	d2ea      	bcs.n	83a6 <quorem+0xee>
    83d0:	9901      	ldr	r1, [sp, #4]
    83d2:	00a3      	lsls	r3, r4, #2
    83d4:	468c      	mov	ip, r1
    83d6:	4463      	add	r3, ip
    83d8:	681a      	ldr	r2, [r3, #0]
    83da:	2a00      	cmp	r2, #0
    83dc:	d10d      	bne.n	83fa <quorem+0x142>
    83de:	3b04      	subs	r3, #4
    83e0:	000a      	movs	r2, r1
    83e2:	4299      	cmp	r1, r3
    83e4:	d304      	bcc.n	83f0 <quorem+0x138>
    83e6:	e006      	b.n	83f6 <quorem+0x13e>
    83e8:	3b04      	subs	r3, #4
    83ea:	3c01      	subs	r4, #1
    83ec:	429a      	cmp	r2, r3
    83ee:	d202      	bcs.n	83f6 <quorem+0x13e>
    83f0:	6819      	ldr	r1, [r3, #0]
    83f2:	2900      	cmp	r1, #0
    83f4:	d0f8      	beq.n	83e8 <quorem+0x130>
    83f6:	4643      	mov	r3, r8
    83f8:	611c      	str	r4, [r3, #16]
    83fa:	9800      	ldr	r0, [sp, #0]
    83fc:	b005      	add	sp, #20
    83fe:	bc3c      	pop	{r2, r3, r4, r5}
    8400:	4690      	mov	r8, r2
    8402:	4699      	mov	r9, r3
    8404:	46a2      	mov	sl, r4
    8406:	46ab      	mov	fp, r5
    8408:	bdf0      	pop	{r4, r5, r6, r7, pc}
    840a:	46c0      	nop			; (mov r8, r8)

0000840c <_dtoa_r>:
    840c:	b5f0      	push	{r4, r5, r6, r7, lr}
    840e:	4657      	mov	r7, sl
    8410:	464e      	mov	r6, r9
    8412:	4645      	mov	r5, r8
    8414:	46de      	mov	lr, fp
    8416:	b5e0      	push	{r5, r6, r7, lr}
    8418:	6c01      	ldr	r1, [r0, #64]	; 0x40
    841a:	b099      	sub	sp, #100	; 0x64
    841c:	4682      	mov	sl, r0
    841e:	001d      	movs	r5, r3
    8420:	0016      	movs	r6, r2
    8422:	001f      	movs	r7, r3
    8424:	2900      	cmp	r1, #0
    8426:	d009      	beq.n	843c <_dtoa_r+0x30>
    8428:	2301      	movs	r3, #1
    842a:	6c42      	ldr	r2, [r0, #68]	; 0x44
    842c:	4093      	lsls	r3, r2
    842e:	604a      	str	r2, [r1, #4]
    8430:	608b      	str	r3, [r1, #8]
    8432:	f001 fd15 	bl	9e60 <_Bfree>
    8436:	2300      	movs	r3, #0
    8438:	4652      	mov	r2, sl
    843a:	6413      	str	r3, [r2, #64]	; 0x40
    843c:	46b8      	mov	r8, r7
    843e:	2f00      	cmp	r7, #0
    8440:	db37      	blt.n	84b2 <_dtoa_r+0xa6>
    8442:	2300      	movs	r3, #0
    8444:	9a25      	ldr	r2, [sp, #148]	; 0x94
    8446:	6013      	str	r3, [r2, #0]
    8448:	4642      	mov	r2, r8
    844a:	4bd6      	ldr	r3, [pc, #856]	; (87a4 <_dtoa_r+0x398>)
    844c:	401a      	ands	r2, r3
    844e:	429a      	cmp	r2, r3
    8450:	d018      	beq.n	8484 <_dtoa_r+0x78>
    8452:	2200      	movs	r2, #0
    8454:	2300      	movs	r3, #0
    8456:	0030      	movs	r0, r6
    8458:	0039      	movs	r1, r7
    845a:	f7fc fee7 	bl	522c <__aeabi_dcmpeq>
    845e:	2800      	cmp	r0, #0
    8460:	d02f      	beq.n	84c2 <_dtoa_r+0xb6>
    8462:	2301      	movs	r3, #1
    8464:	9a24      	ldr	r2, [sp, #144]	; 0x90
    8466:	6013      	str	r3, [r2, #0]
    8468:	9b26      	ldr	r3, [sp, #152]	; 0x98
    846a:	2b00      	cmp	r3, #0
    846c:	d100      	bne.n	8470 <_dtoa_r+0x64>
    846e:	e22a      	b.n	88c6 <_dtoa_r+0x4ba>
    8470:	48cd      	ldr	r0, [pc, #820]	; (87a8 <_dtoa_r+0x39c>)
    8472:	6018      	str	r0, [r3, #0]
    8474:	3801      	subs	r0, #1
    8476:	b019      	add	sp, #100	; 0x64
    8478:	bc3c      	pop	{r2, r3, r4, r5}
    847a:	4690      	mov	r8, r2
    847c:	4699      	mov	r9, r3
    847e:	46a2      	mov	sl, r4
    8480:	46ab      	mov	fp, r5
    8482:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8484:	4bc9      	ldr	r3, [pc, #804]	; (87ac <_dtoa_r+0x3a0>)
    8486:	9a24      	ldr	r2, [sp, #144]	; 0x90
    8488:	6013      	str	r3, [r2, #0]
    848a:	2e00      	cmp	r6, #0
    848c:	d10b      	bne.n	84a6 <_dtoa_r+0x9a>
    848e:	4643      	mov	r3, r8
    8490:	0318      	lsls	r0, r3, #12
    8492:	d108      	bne.n	84a6 <_dtoa_r+0x9a>
    8494:	9b26      	ldr	r3, [sp, #152]	; 0x98
    8496:	48c6      	ldr	r0, [pc, #792]	; (87b0 <_dtoa_r+0x3a4>)
    8498:	2b00      	cmp	r3, #0
    849a:	d0ec      	beq.n	8476 <_dtoa_r+0x6a>
    849c:	0003      	movs	r3, r0
    849e:	3308      	adds	r3, #8
    84a0:	9a26      	ldr	r2, [sp, #152]	; 0x98
    84a2:	6013      	str	r3, [r2, #0]
    84a4:	e7e7      	b.n	8476 <_dtoa_r+0x6a>
    84a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
    84a8:	48c2      	ldr	r0, [pc, #776]	; (87b4 <_dtoa_r+0x3a8>)
    84aa:	2b00      	cmp	r3, #0
    84ac:	d0e3      	beq.n	8476 <_dtoa_r+0x6a>
    84ae:	1cc3      	adds	r3, r0, #3
    84b0:	e7f6      	b.n	84a0 <_dtoa_r+0x94>
    84b2:	2301      	movs	r3, #1
    84b4:	9a25      	ldr	r2, [sp, #148]	; 0x94
    84b6:	0068      	lsls	r0, r5, #1
    84b8:	6013      	str	r3, [r2, #0]
    84ba:	0843      	lsrs	r3, r0, #1
    84bc:	4698      	mov	r8, r3
    84be:	001f      	movs	r7, r3
    84c0:	e7c2      	b.n	8448 <_dtoa_r+0x3c>
    84c2:	ab16      	add	r3, sp, #88	; 0x58
    84c4:	9301      	str	r3, [sp, #4]
    84c6:	ab17      	add	r3, sp, #92	; 0x5c
    84c8:	9300      	str	r3, [sp, #0]
    84ca:	0032      	movs	r2, r6
    84cc:	003b      	movs	r3, r7
    84ce:	4650      	mov	r0, sl
    84d0:	f002 f864 	bl	a59c <__d2b>
    84d4:	4643      	mov	r3, r8
    84d6:	4683      	mov	fp, r0
    84d8:	0d1a      	lsrs	r2, r3, #20
    84da:	d100      	bne.n	84de <_dtoa_r+0xd2>
    84dc:	e1d6      	b.n	888c <_dtoa_r+0x480>
    84de:	033b      	lsls	r3, r7, #12
    84e0:	4cb5      	ldr	r4, [pc, #724]	; (87b8 <_dtoa_r+0x3ac>)
    84e2:	0b1b      	lsrs	r3, r3, #12
    84e4:	431c      	orrs	r4, r3
    84e6:	4bb5      	ldr	r3, [pc, #724]	; (87bc <_dtoa_r+0x3b0>)
    84e8:	0030      	movs	r0, r6
    84ea:	4698      	mov	r8, r3
    84ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
    84ee:	0021      	movs	r1, r4
    84f0:	4699      	mov	r9, r3
    84f2:	2300      	movs	r3, #0
    84f4:	4490      	add	r8, r2
    84f6:	930f      	str	r3, [sp, #60]	; 0x3c
    84f8:	2200      	movs	r2, #0
    84fa:	4bb1      	ldr	r3, [pc, #708]	; (87c0 <_dtoa_r+0x3b4>)
    84fc:	f7fc fa70 	bl	49e0 <__aeabi_dsub>
    8500:	4ab0      	ldr	r2, [pc, #704]	; (87c4 <_dtoa_r+0x3b8>)
    8502:	4bb1      	ldr	r3, [pc, #708]	; (87c8 <_dtoa_r+0x3bc>)
    8504:	f7fb ffec 	bl	44e0 <__aeabi_dmul>
    8508:	4ab0      	ldr	r2, [pc, #704]	; (87cc <_dtoa_r+0x3c0>)
    850a:	4bb1      	ldr	r3, [pc, #708]	; (87d0 <_dtoa_r+0x3c4>)
    850c:	f004 fc08 	bl	cd20 <__aeabi_dadd>
    8510:	0004      	movs	r4, r0
    8512:	4640      	mov	r0, r8
    8514:	000d      	movs	r5, r1
    8516:	f7fc fdad 	bl	5074 <__aeabi_i2d>
    851a:	4aae      	ldr	r2, [pc, #696]	; (87d4 <_dtoa_r+0x3c8>)
    851c:	4bae      	ldr	r3, [pc, #696]	; (87d8 <_dtoa_r+0x3cc>)
    851e:	f7fb ffdf 	bl	44e0 <__aeabi_dmul>
    8522:	0002      	movs	r2, r0
    8524:	000b      	movs	r3, r1
    8526:	0020      	movs	r0, r4
    8528:	0029      	movs	r1, r5
    852a:	f004 fbf9 	bl	cd20 <__aeabi_dadd>
    852e:	0004      	movs	r4, r0
    8530:	000d      	movs	r5, r1
    8532:	f7fc fd6b 	bl	500c <__aeabi_d2iz>
    8536:	2200      	movs	r2, #0
    8538:	9003      	str	r0, [sp, #12]
    853a:	2300      	movs	r3, #0
    853c:	0020      	movs	r0, r4
    853e:	0029      	movs	r1, r5
    8540:	f7fc fe7a 	bl	5238 <__aeabi_dcmplt>
    8544:	2800      	cmp	r0, #0
    8546:	d000      	beq.n	854a <_dtoa_r+0x13e>
    8548:	e2b1      	b.n	8aae <_dtoa_r+0x6a2>
    854a:	2301      	movs	r3, #1
    854c:	9c03      	ldr	r4, [sp, #12]
    854e:	930c      	str	r3, [sp, #48]	; 0x30
    8550:	2c16      	cmp	r4, #22
    8552:	d810      	bhi.n	8576 <_dtoa_r+0x16a>
    8554:	49a1      	ldr	r1, [pc, #644]	; (87dc <_dtoa_r+0x3d0>)
    8556:	00e3      	lsls	r3, r4, #3
    8558:	18c9      	adds	r1, r1, r3
    855a:	0032      	movs	r2, r6
    855c:	6808      	ldr	r0, [r1, #0]
    855e:	6849      	ldr	r1, [r1, #4]
    8560:	003b      	movs	r3, r7
    8562:	f7fc fe7d 	bl	5260 <__aeabi_dcmpgt>
    8566:	2800      	cmp	r0, #0
    8568:	d100      	bne.n	856c <_dtoa_r+0x160>
    856a:	e31d      	b.n	8ba8 <_dtoa_r+0x79c>
    856c:	0023      	movs	r3, r4
    856e:	3b01      	subs	r3, #1
    8570:	9303      	str	r3, [sp, #12]
    8572:	2300      	movs	r3, #0
    8574:	930c      	str	r3, [sp, #48]	; 0x30
    8576:	464b      	mov	r3, r9
    8578:	4642      	mov	r2, r8
    857a:	1a9a      	subs	r2, r3, r2
    857c:	2300      	movs	r3, #0
    857e:	9306      	str	r3, [sp, #24]
    8580:	0013      	movs	r3, r2
    8582:	3b01      	subs	r3, #1
    8584:	9304      	str	r3, [sp, #16]
    8586:	d500      	bpl.n	858a <_dtoa_r+0x17e>
    8588:	e2a1      	b.n	8ace <_dtoa_r+0x6c2>
    858a:	9b03      	ldr	r3, [sp, #12]
    858c:	2b00      	cmp	r3, #0
    858e:	da00      	bge.n	8592 <_dtoa_r+0x186>
    8590:	e284      	b.n	8a9c <_dtoa_r+0x690>
    8592:	469c      	mov	ip, r3
    8594:	930d      	str	r3, [sp, #52]	; 0x34
    8596:	2300      	movs	r3, #0
    8598:	9a04      	ldr	r2, [sp, #16]
    859a:	4699      	mov	r9, r3
    859c:	0011      	movs	r1, r2
    859e:	4461      	add	r1, ip
    85a0:	9104      	str	r1, [sp, #16]
    85a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    85a4:	2b09      	cmp	r3, #9
    85a6:	d900      	bls.n	85aa <_dtoa_r+0x19e>
    85a8:	e18f      	b.n	88ca <_dtoa_r+0x4be>
    85aa:	2401      	movs	r4, #1
    85ac:	2b05      	cmp	r3, #5
    85ae:	dd02      	ble.n	85b6 <_dtoa_r+0x1aa>
    85b0:	2400      	movs	r4, #0
    85b2:	3b04      	subs	r3, #4
    85b4:	9322      	str	r3, [sp, #136]	; 0x88
    85b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    85b8:	2b03      	cmp	r3, #3
    85ba:	d101      	bne.n	85c0 <_dtoa_r+0x1b4>
    85bc:	f000 fcce 	bl	8f5c <_dtoa_r+0xb50>
    85c0:	dc01      	bgt.n	85c6 <_dtoa_r+0x1ba>
    85c2:	f000 fc92 	bl	8eea <_dtoa_r+0xade>
    85c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
    85c8:	2b04      	cmp	r3, #4
    85ca:	d101      	bne.n	85d0 <_dtoa_r+0x1c4>
    85cc:	f000 fc40 	bl	8e50 <_dtoa_r+0xa44>
    85d0:	2301      	movs	r3, #1
    85d2:	930b      	str	r3, [sp, #44]	; 0x2c
    85d4:	9b22      	ldr	r3, [sp, #136]	; 0x88
    85d6:	2b05      	cmp	r3, #5
    85d8:	d001      	beq.n	85de <_dtoa_r+0x1d2>
    85da:	f000 fc8b 	bl	8ef4 <_dtoa_r+0xae8>
    85de:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    85e0:	9b03      	ldr	r3, [sp, #12]
    85e2:	4694      	mov	ip, r2
    85e4:	4463      	add	r3, ip
    85e6:	930e      	str	r3, [sp, #56]	; 0x38
    85e8:	3301      	adds	r3, #1
    85ea:	9307      	str	r3, [sp, #28]
    85ec:	1e1d      	subs	r5, r3, #0
    85ee:	dc01      	bgt.n	85f4 <_dtoa_r+0x1e8>
    85f0:	f000 fd49 	bl	9086 <_dtoa_r+0xc7a>
    85f4:	9b07      	ldr	r3, [sp, #28]
    85f6:	4698      	mov	r8, r3
    85f8:	2300      	movs	r3, #0
    85fa:	4652      	mov	r2, sl
    85fc:	2100      	movs	r1, #0
    85fe:	6453      	str	r3, [r2, #68]	; 0x44
    8600:	2d17      	cmp	r5, #23
    8602:	d90a      	bls.n	861a <_dtoa_r+0x20e>
    8604:	2201      	movs	r2, #1
    8606:	3304      	adds	r3, #4
    8608:	005b      	lsls	r3, r3, #1
    860a:	0018      	movs	r0, r3
    860c:	3014      	adds	r0, #20
    860e:	0011      	movs	r1, r2
    8610:	3201      	adds	r2, #1
    8612:	4285      	cmp	r5, r0
    8614:	d2f8      	bcs.n	8608 <_dtoa_r+0x1fc>
    8616:	4653      	mov	r3, sl
    8618:	6459      	str	r1, [r3, #68]	; 0x44
    861a:	4650      	mov	r0, sl
    861c:	f001 fbf8 	bl	9e10 <_Balloc>
    8620:	4653      	mov	r3, sl
    8622:	6418      	str	r0, [r3, #64]	; 0x40
    8624:	4643      	mov	r3, r8
    8626:	900a      	str	r0, [sp, #40]	; 0x28
    8628:	2b0e      	cmp	r3, #14
    862a:	d900      	bls.n	862e <_dtoa_r+0x222>
    862c:	e161      	b.n	88f2 <_dtoa_r+0x4e6>
    862e:	2c00      	cmp	r4, #0
    8630:	d100      	bne.n	8634 <_dtoa_r+0x228>
    8632:	e15e      	b.n	88f2 <_dtoa_r+0x4e6>
    8634:	9610      	str	r6, [sp, #64]	; 0x40
    8636:	9711      	str	r7, [sp, #68]	; 0x44
    8638:	9e03      	ldr	r6, [sp, #12]
    863a:	2e00      	cmp	r6, #0
    863c:	dc01      	bgt.n	8642 <_dtoa_r+0x236>
    863e:	f000 fd25 	bl	908c <_dtoa_r+0xc80>
    8642:	0032      	movs	r2, r6
    8644:	210f      	movs	r1, #15
    8646:	4b65      	ldr	r3, [pc, #404]	; (87dc <_dtoa_r+0x3d0>)
    8648:	400a      	ands	r2, r1
    864a:	00d2      	lsls	r2, r2, #3
    864c:	189b      	adds	r3, r3, r2
    864e:	1136      	asrs	r6, r6, #4
    8650:	681c      	ldr	r4, [r3, #0]
    8652:	685d      	ldr	r5, [r3, #4]
    8654:	06f3      	lsls	r3, r6, #27
    8656:	d401      	bmi.n	865c <_dtoa_r+0x250>
    8658:	f000 fcca 	bl	8ff0 <_dtoa_r+0xbe4>
    865c:	4b60      	ldr	r3, [pc, #384]	; (87e0 <_dtoa_r+0x3d4>)
    865e:	400e      	ands	r6, r1
    8660:	6a1a      	ldr	r2, [r3, #32]
    8662:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    8664:	9810      	ldr	r0, [sp, #64]	; 0x40
    8666:	9911      	ldr	r1, [sp, #68]	; 0x44
    8668:	f7fb fc06 	bl	3e78 <__aeabi_ddiv>
    866c:	2303      	movs	r3, #3
    866e:	4698      	mov	r8, r3
    8670:	9008      	str	r0, [sp, #32]
    8672:	9109      	str	r1, [sp, #36]	; 0x24
    8674:	2e00      	cmp	r6, #0
    8676:	d011      	beq.n	869c <_dtoa_r+0x290>
    8678:	4f59      	ldr	r7, [pc, #356]	; (87e0 <_dtoa_r+0x3d4>)
    867a:	2301      	movs	r3, #1
    867c:	4233      	tst	r3, r6
    867e:	d009      	beq.n	8694 <_dtoa_r+0x288>
    8680:	469c      	mov	ip, r3
    8682:	683a      	ldr	r2, [r7, #0]
    8684:	687b      	ldr	r3, [r7, #4]
    8686:	0020      	movs	r0, r4
    8688:	0029      	movs	r1, r5
    868a:	44e0      	add	r8, ip
    868c:	f7fb ff28 	bl	44e0 <__aeabi_dmul>
    8690:	0004      	movs	r4, r0
    8692:	000d      	movs	r5, r1
    8694:	1076      	asrs	r6, r6, #1
    8696:	3708      	adds	r7, #8
    8698:	2e00      	cmp	r6, #0
    869a:	d1ee      	bne.n	867a <_dtoa_r+0x26e>
    869c:	0022      	movs	r2, r4
    869e:	9808      	ldr	r0, [sp, #32]
    86a0:	9909      	ldr	r1, [sp, #36]	; 0x24
    86a2:	002b      	movs	r3, r5
    86a4:	f7fb fbe8 	bl	3e78 <__aeabi_ddiv>
    86a8:	0006      	movs	r6, r0
    86aa:	000f      	movs	r7, r1
    86ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    86ae:	2b00      	cmp	r3, #0
    86b0:	d009      	beq.n	86c6 <_dtoa_r+0x2ba>
    86b2:	2200      	movs	r2, #0
    86b4:	4b40      	ldr	r3, [pc, #256]	; (87b8 <_dtoa_r+0x3ac>)
    86b6:	0030      	movs	r0, r6
    86b8:	0039      	movs	r1, r7
    86ba:	f7fc fdbd 	bl	5238 <__aeabi_dcmplt>
    86be:	2800      	cmp	r0, #0
    86c0:	d001      	beq.n	86c6 <_dtoa_r+0x2ba>
    86c2:	f000 fdc2 	bl	924a <_dtoa_r+0xe3e>
    86c6:	4640      	mov	r0, r8
    86c8:	f7fc fcd4 	bl	5074 <__aeabi_i2d>
    86cc:	0032      	movs	r2, r6
    86ce:	003b      	movs	r3, r7
    86d0:	f7fb ff06 	bl	44e0 <__aeabi_dmul>
    86d4:	2200      	movs	r2, #0
    86d6:	4b43      	ldr	r3, [pc, #268]	; (87e4 <_dtoa_r+0x3d8>)
    86d8:	f004 fb22 	bl	cd20 <__aeabi_dadd>
    86dc:	4a42      	ldr	r2, [pc, #264]	; (87e8 <_dtoa_r+0x3dc>)
    86de:	000b      	movs	r3, r1
    86e0:	4694      	mov	ip, r2
    86e2:	4463      	add	r3, ip
    86e4:	9008      	str	r0, [sp, #32]
    86e6:	9109      	str	r1, [sp, #36]	; 0x24
    86e8:	9309      	str	r3, [sp, #36]	; 0x24
    86ea:	9b07      	ldr	r3, [sp, #28]
    86ec:	2b00      	cmp	r3, #0
    86ee:	d101      	bne.n	86f4 <_dtoa_r+0x2e8>
    86f0:	f000 fc50 	bl	8f94 <_dtoa_r+0xb88>
    86f4:	9b03      	ldr	r3, [sp, #12]
    86f6:	9313      	str	r3, [sp, #76]	; 0x4c
    86f8:	9b07      	ldr	r3, [sp, #28]
    86fa:	9312      	str	r3, [sp, #72]	; 0x48
    86fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    86fe:	2b00      	cmp	r3, #0
    8700:	d101      	bne.n	8706 <_dtoa_r+0x2fa>
    8702:	f000 fd1d 	bl	9140 <_dtoa_r+0xd34>
    8706:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8708:	2000      	movs	r0, #0
    870a:	1e5a      	subs	r2, r3, #1
    870c:	4b33      	ldr	r3, [pc, #204]	; (87dc <_dtoa_r+0x3d0>)
    870e:	00d2      	lsls	r2, r2, #3
    8710:	189b      	adds	r3, r3, r2
    8712:	681a      	ldr	r2, [r3, #0]
    8714:	685b      	ldr	r3, [r3, #4]
    8716:	4935      	ldr	r1, [pc, #212]	; (87ec <_dtoa_r+0x3e0>)
    8718:	f7fb fbae 	bl	3e78 <__aeabi_ddiv>
    871c:	9a08      	ldr	r2, [sp, #32]
    871e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8720:	f7fc f95e 	bl	49e0 <__aeabi_dsub>
    8724:	9008      	str	r0, [sp, #32]
    8726:	9109      	str	r1, [sp, #36]	; 0x24
    8728:	0039      	movs	r1, r7
    872a:	0030      	movs	r0, r6
    872c:	f7fc fc6e 	bl	500c <__aeabi_d2iz>
    8730:	0004      	movs	r4, r0
    8732:	f7fc fc9f 	bl	5074 <__aeabi_i2d>
    8736:	0002      	movs	r2, r0
    8738:	000b      	movs	r3, r1
    873a:	0030      	movs	r0, r6
    873c:	0039      	movs	r1, r7
    873e:	f7fc f94f 	bl	49e0 <__aeabi_dsub>
    8742:	0005      	movs	r5, r0
    8744:	000e      	movs	r6, r1
    8746:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8748:	3430      	adds	r4, #48	; 0x30
    874a:	1c51      	adds	r1, r2, #1
    874c:	b2e7      	uxtb	r7, r4
    874e:	9114      	str	r1, [sp, #80]	; 0x50
    8750:	7017      	strb	r7, [r2, #0]
    8752:	0033      	movs	r3, r6
    8754:	9808      	ldr	r0, [sp, #32]
    8756:	9909      	ldr	r1, [sp, #36]	; 0x24
    8758:	002a      	movs	r2, r5
    875a:	f7fc fd81 	bl	5260 <__aeabi_dcmpgt>
    875e:	2800      	cmp	r0, #0
    8760:	d001      	beq.n	8766 <_dtoa_r+0x35a>
    8762:	f000 fdfe 	bl	9362 <_dtoa_r+0xf56>
    8766:	002a      	movs	r2, r5
    8768:	0033      	movs	r3, r6
    876a:	2000      	movs	r0, #0
    876c:	4912      	ldr	r1, [pc, #72]	; (87b8 <_dtoa_r+0x3ac>)
    876e:	f7fc f937 	bl	49e0 <__aeabi_dsub>
    8772:	0002      	movs	r2, r0
    8774:	000b      	movs	r3, r1
    8776:	9808      	ldr	r0, [sp, #32]
    8778:	9909      	ldr	r1, [sp, #36]	; 0x24
    877a:	f7fc fd71 	bl	5260 <__aeabi_dcmpgt>
    877e:	2800      	cmp	r0, #0
    8780:	d001      	beq.n	8786 <_dtoa_r+0x37a>
    8782:	f000 fde7 	bl	9354 <_dtoa_r+0xf48>
    8786:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8788:	2b01      	cmp	r3, #1
    878a:	d101      	bne.n	8790 <_dtoa_r+0x384>
    878c:	f000 fc78 	bl	9080 <_dtoa_r+0xc74>
    8790:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8792:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8794:	4694      	mov	ip, r2
    8796:	4463      	add	r3, ip
    8798:	4698      	mov	r8, r3
    879a:	464b      	mov	r3, r9
    879c:	9312      	str	r3, [sp, #72]	; 0x48
    879e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    87a0:	4699      	mov	r9, r3
    87a2:	e038      	b.n	8816 <_dtoa_r+0x40a>
    87a4:	7ff00000 	.word	0x7ff00000
    87a8:	0000ee1d 	.word	0x0000ee1d
    87ac:	0000270f 	.word	0x0000270f
    87b0:	0000f2c4 	.word	0x0000f2c4
    87b4:	0000f2d0 	.word	0x0000f2d0
    87b8:	3ff00000 	.word	0x3ff00000
    87bc:	fffffc01 	.word	0xfffffc01
    87c0:	3ff80000 	.word	0x3ff80000
    87c4:	636f4361 	.word	0x636f4361
    87c8:	3fd287a7 	.word	0x3fd287a7
    87cc:	8b60c8b3 	.word	0x8b60c8b3
    87d0:	3fc68a28 	.word	0x3fc68a28
    87d4:	509f79fb 	.word	0x509f79fb
    87d8:	3fd34413 	.word	0x3fd34413
    87dc:	0000f310 	.word	0x0000f310
    87e0:	0000f2e8 	.word	0x0000f2e8
    87e4:	401c0000 	.word	0x401c0000
    87e8:	fcc00000 	.word	0xfcc00000
    87ec:	3fe00000 	.word	0x3fe00000
    87f0:	002a      	movs	r2, r5
    87f2:	0033      	movs	r3, r6
    87f4:	2000      	movs	r0, #0
    87f6:	49b9      	ldr	r1, [pc, #740]	; (8adc <_dtoa_r+0x6d0>)
    87f8:	f7fc f8f2 	bl	49e0 <__aeabi_dsub>
    87fc:	9a08      	ldr	r2, [sp, #32]
    87fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8800:	f7fc fd1a 	bl	5238 <__aeabi_dcmplt>
    8804:	2800      	cmp	r0, #0
    8806:	d001      	beq.n	880c <_dtoa_r+0x400>
    8808:	f000 fd74 	bl	92f4 <_dtoa_r+0xee8>
    880c:	46a1      	mov	r9, r4
    880e:	4544      	cmp	r4, r8
    8810:	d101      	bne.n	8816 <_dtoa_r+0x40a>
    8812:	f000 fc33 	bl	907c <_dtoa_r+0xc70>
    8816:	9808      	ldr	r0, [sp, #32]
    8818:	9909      	ldr	r1, [sp, #36]	; 0x24
    881a:	2200      	movs	r2, #0
    881c:	4bb0      	ldr	r3, [pc, #704]	; (8ae0 <_dtoa_r+0x6d4>)
    881e:	f7fb fe5f 	bl	44e0 <__aeabi_dmul>
    8822:	2200      	movs	r2, #0
    8824:	4bae      	ldr	r3, [pc, #696]	; (8ae0 <_dtoa_r+0x6d4>)
    8826:	9008      	str	r0, [sp, #32]
    8828:	9109      	str	r1, [sp, #36]	; 0x24
    882a:	0028      	movs	r0, r5
    882c:	0031      	movs	r1, r6
    882e:	f7fb fe57 	bl	44e0 <__aeabi_dmul>
    8832:	000d      	movs	r5, r1
    8834:	0004      	movs	r4, r0
    8836:	f7fc fbe9 	bl	500c <__aeabi_d2iz>
    883a:	0007      	movs	r7, r0
    883c:	f7fc fc1a 	bl	5074 <__aeabi_i2d>
    8840:	0002      	movs	r2, r0
    8842:	000b      	movs	r3, r1
    8844:	0020      	movs	r0, r4
    8846:	0029      	movs	r1, r5
    8848:	f7fc f8ca 	bl	49e0 <__aeabi_dsub>
    884c:	464b      	mov	r3, r9
    884e:	3730      	adds	r7, #48	; 0x30
    8850:	b2ff      	uxtb	r7, r7
    8852:	1c5c      	adds	r4, r3, #1
    8854:	701f      	strb	r7, [r3, #0]
    8856:	9a08      	ldr	r2, [sp, #32]
    8858:	9b09      	ldr	r3, [sp, #36]	; 0x24
    885a:	0005      	movs	r5, r0
    885c:	000e      	movs	r6, r1
    885e:	f7fc fceb 	bl	5238 <__aeabi_dcmplt>
    8862:	2800      	cmp	r0, #0
    8864:	d0c4      	beq.n	87f0 <_dtoa_r+0x3e4>
    8866:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8868:	9303      	str	r3, [sp, #12]
    886a:	4659      	mov	r1, fp
    886c:	4650      	mov	r0, sl
    886e:	f001 faf7 	bl	9e60 <_Bfree>
    8872:	2300      	movs	r3, #0
    8874:	7023      	strb	r3, [r4, #0]
    8876:	9b03      	ldr	r3, [sp, #12]
    8878:	9a24      	ldr	r2, [sp, #144]	; 0x90
    887a:	3301      	adds	r3, #1
    887c:	6013      	str	r3, [r2, #0]
    887e:	9b26      	ldr	r3, [sp, #152]	; 0x98
    8880:	2b00      	cmp	r3, #0
    8882:	d100      	bne.n	8886 <_dtoa_r+0x47a>
    8884:	e3a8      	b.n	8fd8 <_dtoa_r+0xbcc>
    8886:	601c      	str	r4, [r3, #0]
    8888:	980a      	ldr	r0, [sp, #40]	; 0x28
    888a:	e5f4      	b.n	8476 <_dtoa_r+0x6a>
    888c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    888e:	4699      	mov	r9, r3
    8890:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    8892:	444b      	add	r3, r9
    8894:	001c      	movs	r4, r3
    8896:	4b93      	ldr	r3, [pc, #588]	; (8ae4 <_dtoa_r+0x6d8>)
    8898:	18e3      	adds	r3, r4, r3
    889a:	2b20      	cmp	r3, #32
    889c:	dc00      	bgt.n	88a0 <_dtoa_r+0x494>
    889e:	e17e      	b.n	8b9e <_dtoa_r+0x792>
    88a0:	0031      	movs	r1, r6
    88a2:	4a91      	ldr	r2, [pc, #580]	; (8ae8 <_dtoa_r+0x6dc>)
    88a4:	4640      	mov	r0, r8
    88a6:	18a2      	adds	r2, r4, r2
    88a8:	40d1      	lsrs	r1, r2
    88aa:	000a      	movs	r2, r1
    88ac:	2140      	movs	r1, #64	; 0x40
    88ae:	1acb      	subs	r3, r1, r3
    88b0:	4098      	lsls	r0, r3
    88b2:	4310      	orrs	r0, r2
    88b4:	f7fc fc20 	bl	50f8 <__aeabi_ui2d>
    88b8:	1e63      	subs	r3, r4, #1
    88ba:	4698      	mov	r8, r3
    88bc:	2301      	movs	r3, #1
    88be:	4d8b      	ldr	r5, [pc, #556]	; (8aec <_dtoa_r+0x6e0>)
    88c0:	930f      	str	r3, [sp, #60]	; 0x3c
    88c2:	1949      	adds	r1, r1, r5
    88c4:	e618      	b.n	84f8 <_dtoa_r+0xec>
    88c6:	488a      	ldr	r0, [pc, #552]	; (8af0 <_dtoa_r+0x6e4>)
    88c8:	e5d5      	b.n	8476 <_dtoa_r+0x6a>
    88ca:	2300      	movs	r3, #0
    88cc:	4652      	mov	r2, sl
    88ce:	2100      	movs	r1, #0
    88d0:	6453      	str	r3, [r2, #68]	; 0x44
    88d2:	4650      	mov	r0, sl
    88d4:	f001 fa9c 	bl	9e10 <_Balloc>
    88d8:	4653      	mov	r3, sl
    88da:	6418      	str	r0, [r3, #64]	; 0x40
    88dc:	2301      	movs	r3, #1
    88de:	425b      	negs	r3, r3
    88e0:	9307      	str	r3, [sp, #28]
    88e2:	930e      	str	r3, [sp, #56]	; 0x38
    88e4:	3302      	adds	r3, #2
    88e6:	2200      	movs	r2, #0
    88e8:	930b      	str	r3, [sp, #44]	; 0x2c
    88ea:	2300      	movs	r3, #0
    88ec:	900a      	str	r0, [sp, #40]	; 0x28
    88ee:	9223      	str	r2, [sp, #140]	; 0x8c
    88f0:	9322      	str	r3, [sp, #136]	; 0x88
    88f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    88f4:	2b00      	cmp	r3, #0
    88f6:	da00      	bge.n	88fa <_dtoa_r+0x4ee>
    88f8:	e0ab      	b.n	8a52 <_dtoa_r+0x646>
    88fa:	9a03      	ldr	r2, [sp, #12]
    88fc:	2a0e      	cmp	r2, #14
    88fe:	dd00      	ble.n	8902 <_dtoa_r+0x4f6>
    8900:	e0a7      	b.n	8a52 <_dtoa_r+0x646>
    8902:	4b7c      	ldr	r3, [pc, #496]	; (8af4 <_dtoa_r+0x6e8>)
    8904:	00d2      	lsls	r2, r2, #3
    8906:	189b      	adds	r3, r3, r2
    8908:	685c      	ldr	r4, [r3, #4]
    890a:	681b      	ldr	r3, [r3, #0]
    890c:	9304      	str	r3, [sp, #16]
    890e:	9405      	str	r4, [sp, #20]
    8910:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8912:	2b00      	cmp	r3, #0
    8914:	da00      	bge.n	8918 <_dtoa_r+0x50c>
    8916:	e2a7      	b.n	8e68 <_dtoa_r+0xa5c>
    8918:	9c04      	ldr	r4, [sp, #16]
    891a:	9d05      	ldr	r5, [sp, #20]
    891c:	0030      	movs	r0, r6
    891e:	0022      	movs	r2, r4
    8920:	002b      	movs	r3, r5
    8922:	0039      	movs	r1, r7
    8924:	f7fb faa8 	bl	3e78 <__aeabi_ddiv>
    8928:	f7fc fb70 	bl	500c <__aeabi_d2iz>
    892c:	4680      	mov	r8, r0
    892e:	f7fc fba1 	bl	5074 <__aeabi_i2d>
    8932:	0022      	movs	r2, r4
    8934:	002b      	movs	r3, r5
    8936:	f7fb fdd3 	bl	44e0 <__aeabi_dmul>
    893a:	0002      	movs	r2, r0
    893c:	000b      	movs	r3, r1
    893e:	0030      	movs	r0, r6
    8940:	0039      	movs	r1, r7
    8942:	f7fc f84d 	bl	49e0 <__aeabi_dsub>
    8946:	4643      	mov	r3, r8
    8948:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    894a:	3330      	adds	r3, #48	; 0x30
    894c:	7013      	strb	r3, [r2, #0]
    894e:	9b07      	ldr	r3, [sp, #28]
    8950:	0006      	movs	r6, r0
    8952:	000f      	movs	r7, r1
    8954:	1c54      	adds	r4, r2, #1
    8956:	2b01      	cmp	r3, #1
    8958:	d04e      	beq.n	89f8 <_dtoa_r+0x5ec>
    895a:	2200      	movs	r2, #0
    895c:	4b60      	ldr	r3, [pc, #384]	; (8ae0 <_dtoa_r+0x6d4>)
    895e:	f7fb fdbf 	bl	44e0 <__aeabi_dmul>
    8962:	2200      	movs	r2, #0
    8964:	2300      	movs	r3, #0
    8966:	0006      	movs	r6, r0
    8968:	000f      	movs	r7, r1
    896a:	f7fc fc5f 	bl	522c <__aeabi_dcmpeq>
    896e:	2800      	cmp	r0, #0
    8970:	d000      	beq.n	8974 <_dtoa_r+0x568>
    8972:	e77a      	b.n	886a <_dtoa_r+0x45e>
    8974:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8976:	9a07      	ldr	r2, [sp, #28]
    8978:	1c9d      	adds	r5, r3, #2
    897a:	469c      	mov	ip, r3
    897c:	465b      	mov	r3, fp
    897e:	9306      	str	r3, [sp, #24]
    8980:	4653      	mov	r3, sl
    8982:	4462      	add	r2, ip
    8984:	46aa      	mov	sl, r5
    8986:	9c04      	ldr	r4, [sp, #16]
    8988:	9d05      	ldr	r5, [sp, #20]
    898a:	4691      	mov	r9, r2
    898c:	9307      	str	r3, [sp, #28]
    898e:	e00f      	b.n	89b0 <_dtoa_r+0x5a4>
    8990:	2200      	movs	r2, #0
    8992:	4b53      	ldr	r3, [pc, #332]	; (8ae0 <_dtoa_r+0x6d4>)
    8994:	f7fb fda4 	bl	44e0 <__aeabi_dmul>
    8998:	2301      	movs	r3, #1
    899a:	469c      	mov	ip, r3
    899c:	2200      	movs	r2, #0
    899e:	2300      	movs	r3, #0
    89a0:	0006      	movs	r6, r0
    89a2:	000f      	movs	r7, r1
    89a4:	44e2      	add	sl, ip
    89a6:	f7fc fc41 	bl	522c <__aeabi_dcmpeq>
    89aa:	2800      	cmp	r0, #0
    89ac:	d000      	beq.n	89b0 <_dtoa_r+0x5a4>
    89ae:	e2d9      	b.n	8f64 <_dtoa_r+0xb58>
    89b0:	0022      	movs	r2, r4
    89b2:	002b      	movs	r3, r5
    89b4:	0030      	movs	r0, r6
    89b6:	0039      	movs	r1, r7
    89b8:	f7fb fa5e 	bl	3e78 <__aeabi_ddiv>
    89bc:	f7fc fb26 	bl	500c <__aeabi_d2iz>
    89c0:	4680      	mov	r8, r0
    89c2:	f7fc fb57 	bl	5074 <__aeabi_i2d>
    89c6:	0022      	movs	r2, r4
    89c8:	002b      	movs	r3, r5
    89ca:	f7fb fd89 	bl	44e0 <__aeabi_dmul>
    89ce:	0002      	movs	r2, r0
    89d0:	000b      	movs	r3, r1
    89d2:	0030      	movs	r0, r6
    89d4:	0039      	movs	r1, r7
    89d6:	f7fc f803 	bl	49e0 <__aeabi_dsub>
    89da:	4653      	mov	r3, sl
    89dc:	4642      	mov	r2, r8
    89de:	3b01      	subs	r3, #1
    89e0:	3230      	adds	r2, #48	; 0x30
    89e2:	0006      	movs	r6, r0
    89e4:	000f      	movs	r7, r1
    89e6:	46d3      	mov	fp, sl
    89e8:	701a      	strb	r2, [r3, #0]
    89ea:	45d1      	cmp	r9, sl
    89ec:	d1d0      	bne.n	8990 <_dtoa_r+0x584>
    89ee:	9b06      	ldr	r3, [sp, #24]
    89f0:	4654      	mov	r4, sl
    89f2:	469b      	mov	fp, r3
    89f4:	9b07      	ldr	r3, [sp, #28]
    89f6:	469a      	mov	sl, r3
    89f8:	0032      	movs	r2, r6
    89fa:	003b      	movs	r3, r7
    89fc:	0030      	movs	r0, r6
    89fe:	0039      	movs	r1, r7
    8a00:	f004 f98e 	bl	cd20 <__aeabi_dadd>
    8a04:	0006      	movs	r6, r0
    8a06:	000f      	movs	r7, r1
    8a08:	0002      	movs	r2, r0
    8a0a:	000b      	movs	r3, r1
    8a0c:	9804      	ldr	r0, [sp, #16]
    8a0e:	9905      	ldr	r1, [sp, #20]
    8a10:	f7fc fc12 	bl	5238 <__aeabi_dcmplt>
    8a14:	2800      	cmp	r0, #0
    8a16:	d10c      	bne.n	8a32 <_dtoa_r+0x626>
    8a18:	9804      	ldr	r0, [sp, #16]
    8a1a:	9905      	ldr	r1, [sp, #20]
    8a1c:	0032      	movs	r2, r6
    8a1e:	003b      	movs	r3, r7
    8a20:	f7fc fc04 	bl	522c <__aeabi_dcmpeq>
    8a24:	2800      	cmp	r0, #0
    8a26:	d100      	bne.n	8a2a <_dtoa_r+0x61e>
    8a28:	e71f      	b.n	886a <_dtoa_r+0x45e>
    8a2a:	4643      	mov	r3, r8
    8a2c:	07db      	lsls	r3, r3, #31
    8a2e:	d400      	bmi.n	8a32 <_dtoa_r+0x626>
    8a30:	e71b      	b.n	886a <_dtoa_r+0x45e>
    8a32:	1e65      	subs	r5, r4, #1
    8a34:	782f      	ldrb	r7, [r5, #0]
    8a36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8a38:	e006      	b.n	8a48 <_dtoa_r+0x63c>
    8a3a:	429d      	cmp	r5, r3
    8a3c:	d100      	bne.n	8a40 <_dtoa_r+0x634>
    8a3e:	e351      	b.n	90e4 <_dtoa_r+0xcd8>
    8a40:	3c02      	subs	r4, #2
    8a42:	7827      	ldrb	r7, [r4, #0]
    8a44:	002c      	movs	r4, r5
    8a46:	3d01      	subs	r5, #1
    8a48:	2f39      	cmp	r7, #57	; 0x39
    8a4a:	d0f6      	beq.n	8a3a <_dtoa_r+0x62e>
    8a4c:	3701      	adds	r7, #1
    8a4e:	702f      	strb	r7, [r5, #0]
    8a50:	e70b      	b.n	886a <_dtoa_r+0x45e>
    8a52:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    8a54:	2a00      	cmp	r2, #0
    8a56:	d04f      	beq.n	8af8 <_dtoa_r+0x6ec>
    8a58:	9a22      	ldr	r2, [sp, #136]	; 0x88
    8a5a:	2a01      	cmp	r2, #1
    8a5c:	dc00      	bgt.n	8a60 <_dtoa_r+0x654>
    8a5e:	e22c      	b.n	8eba <_dtoa_r+0xaae>
    8a60:	9b07      	ldr	r3, [sp, #28]
    8a62:	1e5c      	subs	r4, r3, #1
    8a64:	464b      	mov	r3, r9
    8a66:	45a1      	cmp	r9, r4
    8a68:	da00      	bge.n	8a6c <_dtoa_r+0x660>
    8a6a:	e2b8      	b.n	8fde <_dtoa_r+0xbd2>
    8a6c:	1b1c      	subs	r4, r3, r4
    8a6e:	9b07      	ldr	r3, [sp, #28]
    8a70:	2b00      	cmp	r3, #0
    8a72:	da00      	bge.n	8a76 <_dtoa_r+0x66a>
    8a74:	e3d4      	b.n	9220 <_dtoa_r+0xe14>
    8a76:	9b06      	ldr	r3, [sp, #24]
    8a78:	9308      	str	r3, [sp, #32]
    8a7a:	9b07      	ldr	r3, [sp, #28]
    8a7c:	9a06      	ldr	r2, [sp, #24]
    8a7e:	2101      	movs	r1, #1
    8a80:	4694      	mov	ip, r2
    8a82:	449c      	add	ip, r3
    8a84:	4662      	mov	r2, ip
    8a86:	9206      	str	r2, [sp, #24]
    8a88:	9a04      	ldr	r2, [sp, #16]
    8a8a:	4650      	mov	r0, sl
    8a8c:	4694      	mov	ip, r2
    8a8e:	449c      	add	ip, r3
    8a90:	4663      	mov	r3, ip
    8a92:	9304      	str	r3, [sp, #16]
    8a94:	f001 fac6 	bl	a024 <__i2b>
    8a98:	4680      	mov	r8, r0
    8a9a:	e032      	b.n	8b02 <_dtoa_r+0x6f6>
    8a9c:	9a06      	ldr	r2, [sp, #24]
    8a9e:	9b03      	ldr	r3, [sp, #12]
    8aa0:	1ad2      	subs	r2, r2, r3
    8aa2:	425b      	negs	r3, r3
    8aa4:	4699      	mov	r9, r3
    8aa6:	2300      	movs	r3, #0
    8aa8:	9206      	str	r2, [sp, #24]
    8aaa:	930d      	str	r3, [sp, #52]	; 0x34
    8aac:	e579      	b.n	85a2 <_dtoa_r+0x196>
    8aae:	9803      	ldr	r0, [sp, #12]
    8ab0:	f7fc fae0 	bl	5074 <__aeabi_i2d>
    8ab4:	000b      	movs	r3, r1
    8ab6:	0002      	movs	r2, r0
    8ab8:	0029      	movs	r1, r5
    8aba:	0020      	movs	r0, r4
    8abc:	f7fc fbb6 	bl	522c <__aeabi_dcmpeq>
    8ac0:	0002      	movs	r2, r0
    8ac2:	4250      	negs	r0, r2
    8ac4:	4150      	adcs	r0, r2
    8ac6:	9b03      	ldr	r3, [sp, #12]
    8ac8:	1a1b      	subs	r3, r3, r0
    8aca:	9303      	str	r3, [sp, #12]
    8acc:	e53d      	b.n	854a <_dtoa_r+0x13e>
    8ace:	2301      	movs	r3, #1
    8ad0:	1a9b      	subs	r3, r3, r2
    8ad2:	9306      	str	r3, [sp, #24]
    8ad4:	2300      	movs	r3, #0
    8ad6:	9304      	str	r3, [sp, #16]
    8ad8:	e557      	b.n	858a <_dtoa_r+0x17e>
    8ada:	46c0      	nop			; (mov r8, r8)
    8adc:	3ff00000 	.word	0x3ff00000
    8ae0:	40240000 	.word	0x40240000
    8ae4:	00000432 	.word	0x00000432
    8ae8:	00000412 	.word	0x00000412
    8aec:	fe100000 	.word	0xfe100000
    8af0:	0000ee1c 	.word	0x0000ee1c
    8af4:	0000f310 	.word	0x0000f310
    8af8:	9b06      	ldr	r3, [sp, #24]
    8afa:	464c      	mov	r4, r9
    8afc:	9308      	str	r3, [sp, #32]
    8afe:	2300      	movs	r3, #0
    8b00:	4698      	mov	r8, r3
    8b02:	9908      	ldr	r1, [sp, #32]
    8b04:	1e0b      	subs	r3, r1, #0
    8b06:	dd0e      	ble.n	8b26 <_dtoa_r+0x71a>
    8b08:	9a04      	ldr	r2, [sp, #16]
    8b0a:	2a00      	cmp	r2, #0
    8b0c:	dd0b      	ble.n	8b26 <_dtoa_r+0x71a>
    8b0e:	4293      	cmp	r3, r2
    8b10:	dd00      	ble.n	8b14 <_dtoa_r+0x708>
    8b12:	e187      	b.n	8e24 <_dtoa_r+0xa18>
    8b14:	9a06      	ldr	r2, [sp, #24]
    8b16:	1ad2      	subs	r2, r2, r3
    8b18:	9206      	str	r2, [sp, #24]
    8b1a:	9a08      	ldr	r2, [sp, #32]
    8b1c:	1ad2      	subs	r2, r2, r3
    8b1e:	9208      	str	r2, [sp, #32]
    8b20:	9a04      	ldr	r2, [sp, #16]
    8b22:	1ad3      	subs	r3, r2, r3
    8b24:	9304      	str	r3, [sp, #16]
    8b26:	464b      	mov	r3, r9
    8b28:	2b00      	cmp	r3, #0
    8b2a:	d01a      	beq.n	8b62 <_dtoa_r+0x756>
    8b2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8b2e:	2b00      	cmp	r3, #0
    8b30:	d100      	bne.n	8b34 <_dtoa_r+0x728>
    8b32:	e1bb      	b.n	8eac <_dtoa_r+0xaa0>
    8b34:	2c00      	cmp	r4, #0
    8b36:	dd10      	ble.n	8b5a <_dtoa_r+0x74e>
    8b38:	4641      	mov	r1, r8
    8b3a:	0022      	movs	r2, r4
    8b3c:	4650      	mov	r0, sl
    8b3e:	f001 fb25 	bl	a18c <__pow5mult>
    8b42:	465a      	mov	r2, fp
    8b44:	0001      	movs	r1, r0
    8b46:	4680      	mov	r8, r0
    8b48:	4650      	mov	r0, sl
    8b4a:	f001 fa75 	bl	a038 <__multiply>
    8b4e:	0005      	movs	r5, r0
    8b50:	4659      	mov	r1, fp
    8b52:	4650      	mov	r0, sl
    8b54:	f001 f984 	bl	9e60 <_Bfree>
    8b58:	46ab      	mov	fp, r5
    8b5a:	464b      	mov	r3, r9
    8b5c:	1b1a      	subs	r2, r3, r4
    8b5e:	d000      	beq.n	8b62 <_dtoa_r+0x756>
    8b60:	e1a5      	b.n	8eae <_dtoa_r+0xaa2>
    8b62:	2101      	movs	r1, #1
    8b64:	4650      	mov	r0, sl
    8b66:	f001 fa5d 	bl	a024 <__i2b>
    8b6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8b6c:	4681      	mov	r9, r0
    8b6e:	2b00      	cmp	r3, #0
    8b70:	dd1d      	ble.n	8bae <_dtoa_r+0x7a2>
    8b72:	001a      	movs	r2, r3
    8b74:	0001      	movs	r1, r0
    8b76:	4650      	mov	r0, sl
    8b78:	f001 fb08 	bl	a18c <__pow5mult>
    8b7c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8b7e:	4681      	mov	r9, r0
    8b80:	2b01      	cmp	r3, #1
    8b82:	dc00      	bgt.n	8b86 <_dtoa_r+0x77a>
    8b84:	e150      	b.n	8e28 <_dtoa_r+0xa1c>
    8b86:	2400      	movs	r4, #0
    8b88:	464b      	mov	r3, r9
    8b8a:	691b      	ldr	r3, [r3, #16]
    8b8c:	3303      	adds	r3, #3
    8b8e:	009b      	lsls	r3, r3, #2
    8b90:	444b      	add	r3, r9
    8b92:	6858      	ldr	r0, [r3, #4]
    8b94:	f001 f9fe 	bl	9f94 <__hi0bits>
    8b98:	2320      	movs	r3, #32
    8b9a:	1a1b      	subs	r3, r3, r0
    8b9c:	e010      	b.n	8bc0 <_dtoa_r+0x7b4>
    8b9e:	2220      	movs	r2, #32
    8ba0:	0030      	movs	r0, r6
    8ba2:	1ad3      	subs	r3, r2, r3
    8ba4:	4098      	lsls	r0, r3
    8ba6:	e685      	b.n	88b4 <_dtoa_r+0x4a8>
    8ba8:	2300      	movs	r3, #0
    8baa:	930c      	str	r3, [sp, #48]	; 0x30
    8bac:	e4e3      	b.n	8576 <_dtoa_r+0x16a>
    8bae:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8bb0:	2400      	movs	r4, #0
    8bb2:	2b01      	cmp	r3, #1
    8bb4:	dc00      	bgt.n	8bb8 <_dtoa_r+0x7ac>
    8bb6:	e18b      	b.n	8ed0 <_dtoa_r+0xac4>
    8bb8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    8bba:	2301      	movs	r3, #1
    8bbc:	2a00      	cmp	r2, #0
    8bbe:	d1e3      	bne.n	8b88 <_dtoa_r+0x77c>
    8bc0:	9904      	ldr	r1, [sp, #16]
    8bc2:	201f      	movs	r0, #31
    8bc4:	468c      	mov	ip, r1
    8bc6:	4463      	add	r3, ip
    8bc8:	4018      	ands	r0, r3
    8bca:	d100      	bne.n	8bce <_dtoa_r+0x7c2>
    8bcc:	e0ae      	b.n	8d2c <_dtoa_r+0x920>
    8bce:	2320      	movs	r3, #32
    8bd0:	1a1b      	subs	r3, r3, r0
    8bd2:	2b04      	cmp	r3, #4
    8bd4:	dc00      	bgt.n	8bd8 <_dtoa_r+0x7cc>
    8bd6:	e3cc      	b.n	9372 <_dtoa_r+0xf66>
    8bd8:	231c      	movs	r3, #28
    8bda:	1a18      	subs	r0, r3, r0
    8bdc:	9b06      	ldr	r3, [sp, #24]
    8bde:	469c      	mov	ip, r3
    8be0:	4484      	add	ip, r0
    8be2:	4663      	mov	r3, ip
    8be4:	9306      	str	r3, [sp, #24]
    8be6:	9b08      	ldr	r3, [sp, #32]
    8be8:	469c      	mov	ip, r3
    8bea:	4484      	add	ip, r0
    8bec:	4663      	mov	r3, ip
    8bee:	468c      	mov	ip, r1
    8bf0:	4484      	add	ip, r0
    8bf2:	9308      	str	r3, [sp, #32]
    8bf4:	4663      	mov	r3, ip
    8bf6:	9304      	str	r3, [sp, #16]
    8bf8:	9b06      	ldr	r3, [sp, #24]
    8bfa:	2b00      	cmp	r3, #0
    8bfc:	dd05      	ble.n	8c0a <_dtoa_r+0x7fe>
    8bfe:	4659      	mov	r1, fp
    8c00:	001a      	movs	r2, r3
    8c02:	4650      	mov	r0, sl
    8c04:	f001 fb22 	bl	a24c <__lshift>
    8c08:	4683      	mov	fp, r0
    8c0a:	9b04      	ldr	r3, [sp, #16]
    8c0c:	2b00      	cmp	r3, #0
    8c0e:	dd05      	ble.n	8c1c <_dtoa_r+0x810>
    8c10:	4649      	mov	r1, r9
    8c12:	001a      	movs	r2, r3
    8c14:	4650      	mov	r0, sl
    8c16:	f001 fb19 	bl	a24c <__lshift>
    8c1a:	4681      	mov	r9, r0
    8c1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8c1e:	2b00      	cmp	r3, #0
    8c20:	d000      	beq.n	8c24 <_dtoa_r+0x818>
    8c22:	e094      	b.n	8d4e <_dtoa_r+0x942>
    8c24:	9b07      	ldr	r3, [sp, #28]
    8c26:	2b00      	cmp	r3, #0
    8c28:	dc00      	bgt.n	8c2c <_dtoa_r+0x820>
    8c2a:	e175      	b.n	8f18 <_dtoa_r+0xb0c>
    8c2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8c2e:	2b00      	cmp	r3, #0
    8c30:	d100      	bne.n	8c34 <_dtoa_r+0x828>
    8c32:	e0a6      	b.n	8d82 <_dtoa_r+0x976>
    8c34:	9b08      	ldr	r3, [sp, #32]
    8c36:	2b00      	cmp	r3, #0
    8c38:	dd05      	ble.n	8c46 <_dtoa_r+0x83a>
    8c3a:	4641      	mov	r1, r8
    8c3c:	001a      	movs	r2, r3
    8c3e:	4650      	mov	r0, sl
    8c40:	f001 fb04 	bl	a24c <__lshift>
    8c44:	4680      	mov	r8, r0
    8c46:	4643      	mov	r3, r8
    8c48:	930c      	str	r3, [sp, #48]	; 0x30
    8c4a:	2c00      	cmp	r4, #0
    8c4c:	d000      	beq.n	8c50 <_dtoa_r+0x844>
    8c4e:	e250      	b.n	90f2 <_dtoa_r+0xce6>
    8c50:	9c07      	ldr	r4, [sp, #28]
    8c52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8c54:	3c01      	subs	r4, #1
    8c56:	0023      	movs	r3, r4
    8c58:	4694      	mov	ip, r2
    8c5a:	4463      	add	r3, ip
    8c5c:	9308      	str	r3, [sp, #32]
    8c5e:	2301      	movs	r3, #1
    8c60:	4033      	ands	r3, r6
    8c62:	9307      	str	r3, [sp, #28]
    8c64:	464b      	mov	r3, r9
    8c66:	9306      	str	r3, [sp, #24]
    8c68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8c6a:	4657      	mov	r7, sl
    8c6c:	4645      	mov	r5, r8
    8c6e:	465e      	mov	r6, fp
    8c70:	4692      	mov	sl, r2
    8c72:	4698      	mov	r8, r3
    8c74:	9b06      	ldr	r3, [sp, #24]
    8c76:	0030      	movs	r0, r6
    8c78:	0019      	movs	r1, r3
    8c7a:	4699      	mov	r9, r3
    8c7c:	f7ff fb1c 	bl	82b8 <quorem>
    8c80:	0003      	movs	r3, r0
    8c82:	900b      	str	r0, [sp, #44]	; 0x2c
    8c84:	3330      	adds	r3, #48	; 0x30
    8c86:	0029      	movs	r1, r5
    8c88:	0030      	movs	r0, r6
    8c8a:	9304      	str	r3, [sp, #16]
    8c8c:	f001 fb3e 	bl	a30c <__mcmp>
    8c90:	4649      	mov	r1, r9
    8c92:	0004      	movs	r4, r0
    8c94:	4642      	mov	r2, r8
    8c96:	0038      	movs	r0, r7
    8c98:	f001 fb52 	bl	a340 <__mdiff>
    8c9c:	68c3      	ldr	r3, [r0, #12]
    8c9e:	4681      	mov	r9, r0
    8ca0:	2b00      	cmp	r3, #0
    8ca2:	d000      	beq.n	8ca6 <_dtoa_r+0x89a>
    8ca4:	e11e      	b.n	8ee4 <_dtoa_r+0xad8>
    8ca6:	0001      	movs	r1, r0
    8ca8:	0030      	movs	r0, r6
    8caa:	f001 fb2f 	bl	a30c <__mcmp>
    8cae:	4683      	mov	fp, r0
    8cb0:	4649      	mov	r1, r9
    8cb2:	0038      	movs	r0, r7
    8cb4:	f001 f8d4 	bl	9e60 <_Bfree>
    8cb8:	465b      	mov	r3, fp
    8cba:	9a22      	ldr	r2, [sp, #136]	; 0x88
    8cbc:	4313      	orrs	r3, r2
    8cbe:	d103      	bne.n	8cc8 <_dtoa_r+0x8bc>
    8cc0:	9b07      	ldr	r3, [sp, #28]
    8cc2:	2b00      	cmp	r3, #0
    8cc4:	d100      	bne.n	8cc8 <_dtoa_r+0x8bc>
    8cc6:	e306      	b.n	92d6 <_dtoa_r+0xeca>
    8cc8:	2c00      	cmp	r4, #0
    8cca:	da00      	bge.n	8cce <_dtoa_r+0x8c2>
    8ccc:	e1a8      	b.n	9020 <_dtoa_r+0xc14>
    8cce:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8cd0:	431c      	orrs	r4, r3
    8cd2:	d103      	bne.n	8cdc <_dtoa_r+0x8d0>
    8cd4:	9b07      	ldr	r3, [sp, #28]
    8cd6:	2b00      	cmp	r3, #0
    8cd8:	d100      	bne.n	8cdc <_dtoa_r+0x8d0>
    8cda:	e1a1      	b.n	9020 <_dtoa_r+0xc14>
    8cdc:	465b      	mov	r3, fp
    8cde:	2b00      	cmp	r3, #0
    8ce0:	dd00      	ble.n	8ce4 <_dtoa_r+0x8d8>
    8ce2:	e282      	b.n	91ea <_dtoa_r+0xdde>
    8ce4:	4669      	mov	r1, sp
    8ce6:	4652      	mov	r2, sl
    8ce8:	4653      	mov	r3, sl
    8cea:	7c09      	ldrb	r1, [r1, #16]
    8cec:	1c5c      	adds	r4, r3, #1
    8cee:	7011      	strb	r1, [r2, #0]
    8cf0:	9a08      	ldr	r2, [sp, #32]
    8cf2:	4552      	cmp	r2, sl
    8cf4:	d100      	bne.n	8cf8 <_dtoa_r+0x8ec>
    8cf6:	e28a      	b.n	920e <_dtoa_r+0xe02>
    8cf8:	0031      	movs	r1, r6
    8cfa:	2300      	movs	r3, #0
    8cfc:	220a      	movs	r2, #10
    8cfe:	0038      	movs	r0, r7
    8d00:	f001 f8b8 	bl	9e74 <__multadd>
    8d04:	2300      	movs	r3, #0
    8d06:	0006      	movs	r6, r0
    8d08:	220a      	movs	r2, #10
    8d0a:	0029      	movs	r1, r5
    8d0c:	0038      	movs	r0, r7
    8d0e:	4545      	cmp	r5, r8
    8d10:	d100      	bne.n	8d14 <_dtoa_r+0x908>
    8d12:	e0e1      	b.n	8ed8 <_dtoa_r+0xacc>
    8d14:	f001 f8ae 	bl	9e74 <__multadd>
    8d18:	4641      	mov	r1, r8
    8d1a:	0005      	movs	r5, r0
    8d1c:	2300      	movs	r3, #0
    8d1e:	220a      	movs	r2, #10
    8d20:	0038      	movs	r0, r7
    8d22:	f001 f8a7 	bl	9e74 <__multadd>
    8d26:	46a2      	mov	sl, r4
    8d28:	4680      	mov	r8, r0
    8d2a:	e7a3      	b.n	8c74 <_dtoa_r+0x868>
    8d2c:	201c      	movs	r0, #28
    8d2e:	9b06      	ldr	r3, [sp, #24]
    8d30:	469c      	mov	ip, r3
    8d32:	4484      	add	ip, r0
    8d34:	4663      	mov	r3, ip
    8d36:	9306      	str	r3, [sp, #24]
    8d38:	9b08      	ldr	r3, [sp, #32]
    8d3a:	469c      	mov	ip, r3
    8d3c:	4484      	add	ip, r0
    8d3e:	4663      	mov	r3, ip
    8d40:	9308      	str	r3, [sp, #32]
    8d42:	9b04      	ldr	r3, [sp, #16]
    8d44:	469c      	mov	ip, r3
    8d46:	4484      	add	ip, r0
    8d48:	4663      	mov	r3, ip
    8d4a:	9304      	str	r3, [sp, #16]
    8d4c:	e754      	b.n	8bf8 <_dtoa_r+0x7ec>
    8d4e:	4649      	mov	r1, r9
    8d50:	4658      	mov	r0, fp
    8d52:	f001 fadb 	bl	a30c <__mcmp>
    8d56:	2800      	cmp	r0, #0
    8d58:	db00      	blt.n	8d5c <_dtoa_r+0x950>
    8d5a:	e763      	b.n	8c24 <_dtoa_r+0x818>
    8d5c:	9b03      	ldr	r3, [sp, #12]
    8d5e:	4659      	mov	r1, fp
    8d60:	3b01      	subs	r3, #1
    8d62:	9303      	str	r3, [sp, #12]
    8d64:	220a      	movs	r2, #10
    8d66:	2300      	movs	r3, #0
    8d68:	4650      	mov	r0, sl
    8d6a:	f001 f883 	bl	9e74 <__multadd>
    8d6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    8d70:	4683      	mov	fp, r0
    8d72:	2b00      	cmp	r3, #0
    8d74:	d000      	beq.n	8d78 <_dtoa_r+0x96c>
    8d76:	e2ca      	b.n	930e <_dtoa_r+0xf02>
    8d78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8d7a:	2b00      	cmp	r3, #0
    8d7c:	dc00      	bgt.n	8d80 <_dtoa_r+0x974>
    8d7e:	e2d8      	b.n	9332 <_dtoa_r+0xf26>
    8d80:	9307      	str	r3, [sp, #28]
    8d82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8d84:	465d      	mov	r5, fp
    8d86:	2400      	movs	r4, #0
    8d88:	9f07      	ldr	r7, [sp, #28]
    8d8a:	469b      	mov	fp, r3
    8d8c:	e006      	b.n	8d9c <_dtoa_r+0x990>
    8d8e:	0029      	movs	r1, r5
    8d90:	2300      	movs	r3, #0
    8d92:	220a      	movs	r2, #10
    8d94:	4650      	mov	r0, sl
    8d96:	f001 f86d 	bl	9e74 <__multadd>
    8d9a:	0005      	movs	r5, r0
    8d9c:	4649      	mov	r1, r9
    8d9e:	0028      	movs	r0, r5
    8da0:	f7ff fa8a 	bl	82b8 <quorem>
    8da4:	465b      	mov	r3, fp
    8da6:	3030      	adds	r0, #48	; 0x30
    8da8:	5518      	strb	r0, [r3, r4]
    8daa:	3401      	adds	r4, #1
    8dac:	42bc      	cmp	r4, r7
    8dae:	dbee      	blt.n	8d8e <_dtoa_r+0x982>
    8db0:	46ab      	mov	fp, r5
    8db2:	0006      	movs	r6, r0
    8db4:	9c07      	ldr	r4, [sp, #28]
    8db6:	2c00      	cmp	r4, #0
    8db8:	dc00      	bgt.n	8dbc <_dtoa_r+0x9b0>
    8dba:	e237      	b.n	922c <_dtoa_r+0xe20>
    8dbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8dbe:	2700      	movs	r7, #0
    8dc0:	469c      	mov	ip, r3
    8dc2:	4464      	add	r4, ip
    8dc4:	4659      	mov	r1, fp
    8dc6:	2201      	movs	r2, #1
    8dc8:	4650      	mov	r0, sl
    8dca:	f001 fa3f 	bl	a24c <__lshift>
    8dce:	4649      	mov	r1, r9
    8dd0:	4683      	mov	fp, r0
    8dd2:	f001 fa9b 	bl	a30c <__mcmp>
    8dd6:	2800      	cmp	r0, #0
    8dd8:	dc00      	bgt.n	8ddc <_dtoa_r+0x9d0>
    8dda:	e144      	b.n	9066 <_dtoa_r+0xc5a>
    8ddc:	1e65      	subs	r5, r4, #1
    8dde:	782b      	ldrb	r3, [r5, #0]
    8de0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8de2:	e006      	b.n	8df2 <_dtoa_r+0x9e6>
    8de4:	4295      	cmp	r5, r2
    8de6:	d100      	bne.n	8dea <_dtoa_r+0x9de>
    8de8:	e0b1      	b.n	8f4e <_dtoa_r+0xb42>
    8dea:	3c02      	subs	r4, #2
    8dec:	7823      	ldrb	r3, [r4, #0]
    8dee:	002c      	movs	r4, r5
    8df0:	3d01      	subs	r5, #1
    8df2:	2b39      	cmp	r3, #57	; 0x39
    8df4:	d0f6      	beq.n	8de4 <_dtoa_r+0x9d8>
    8df6:	3301      	adds	r3, #1
    8df8:	702b      	strb	r3, [r5, #0]
    8dfa:	4649      	mov	r1, r9
    8dfc:	4650      	mov	r0, sl
    8dfe:	f001 f82f 	bl	9e60 <_Bfree>
    8e02:	4643      	mov	r3, r8
    8e04:	2b00      	cmp	r3, #0
    8e06:	d100      	bne.n	8e0a <_dtoa_r+0x9fe>
    8e08:	e52f      	b.n	886a <_dtoa_r+0x45e>
    8e0a:	2f00      	cmp	r7, #0
    8e0c:	d005      	beq.n	8e1a <_dtoa_r+0xa0e>
    8e0e:	4547      	cmp	r7, r8
    8e10:	d003      	beq.n	8e1a <_dtoa_r+0xa0e>
    8e12:	0039      	movs	r1, r7
    8e14:	4650      	mov	r0, sl
    8e16:	f001 f823 	bl	9e60 <_Bfree>
    8e1a:	4641      	mov	r1, r8
    8e1c:	4650      	mov	r0, sl
    8e1e:	f001 f81f 	bl	9e60 <_Bfree>
    8e22:	e522      	b.n	886a <_dtoa_r+0x45e>
    8e24:	0013      	movs	r3, r2
    8e26:	e675      	b.n	8b14 <_dtoa_r+0x708>
    8e28:	2e00      	cmp	r6, #0
    8e2a:	d000      	beq.n	8e2e <_dtoa_r+0xa22>
    8e2c:	e6ab      	b.n	8b86 <_dtoa_r+0x77a>
    8e2e:	033b      	lsls	r3, r7, #12
    8e30:	2400      	movs	r4, #0
    8e32:	2b00      	cmp	r3, #0
    8e34:	d000      	beq.n	8e38 <_dtoa_r+0xa2c>
    8e36:	e6bf      	b.n	8bb8 <_dtoa_r+0x7ac>
    8e38:	4bba      	ldr	r3, [pc, #744]	; (9124 <_dtoa_r+0xd18>)
    8e3a:	423b      	tst	r3, r7
    8e3c:	d100      	bne.n	8e40 <_dtoa_r+0xa34>
    8e3e:	e6bb      	b.n	8bb8 <_dtoa_r+0x7ac>
    8e40:	9b06      	ldr	r3, [sp, #24]
    8e42:	3401      	adds	r4, #1
    8e44:	3301      	adds	r3, #1
    8e46:	9306      	str	r3, [sp, #24]
    8e48:	9b04      	ldr	r3, [sp, #16]
    8e4a:	3301      	adds	r3, #1
    8e4c:	9304      	str	r3, [sp, #16]
    8e4e:	e6b3      	b.n	8bb8 <_dtoa_r+0x7ac>
    8e50:	2301      	movs	r3, #1
    8e52:	930b      	str	r3, [sp, #44]	; 0x2c
    8e54:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8e56:	2b00      	cmp	r3, #0
    8e58:	dc00      	bgt.n	8e5c <_dtoa_r+0xa50>
    8e5a:	e0d1      	b.n	9000 <_dtoa_r+0xbf4>
    8e5c:	001d      	movs	r5, r3
    8e5e:	4698      	mov	r8, r3
    8e60:	930e      	str	r3, [sp, #56]	; 0x38
    8e62:	9307      	str	r3, [sp, #28]
    8e64:	f7ff fbc8 	bl	85f8 <_dtoa_r+0x1ec>
    8e68:	9b07      	ldr	r3, [sp, #28]
    8e6a:	2b00      	cmp	r3, #0
    8e6c:	dd00      	ble.n	8e70 <_dtoa_r+0xa64>
    8e6e:	e553      	b.n	8918 <_dtoa_r+0x50c>
    8e70:	d000      	beq.n	8e74 <_dtoa_r+0xa68>
    8e72:	e0ad      	b.n	8fd0 <_dtoa_r+0xbc4>
    8e74:	9804      	ldr	r0, [sp, #16]
    8e76:	9905      	ldr	r1, [sp, #20]
    8e78:	2200      	movs	r2, #0
    8e7a:	4bab      	ldr	r3, [pc, #684]	; (9128 <_dtoa_r+0xd1c>)
    8e7c:	f7fb fb30 	bl	44e0 <__aeabi_dmul>
    8e80:	003b      	movs	r3, r7
    8e82:	0032      	movs	r2, r6
    8e84:	f7fc f9f6 	bl	5274 <__aeabi_dcmpge>
    8e88:	2300      	movs	r3, #0
    8e8a:	4699      	mov	r9, r3
    8e8c:	4698      	mov	r8, r3
    8e8e:	2800      	cmp	r0, #0
    8e90:	d055      	beq.n	8f3e <_dtoa_r+0xb32>
    8e92:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8e94:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    8e96:	43db      	mvns	r3, r3
    8e98:	9303      	str	r3, [sp, #12]
    8e9a:	4649      	mov	r1, r9
    8e9c:	4650      	mov	r0, sl
    8e9e:	f000 ffdf 	bl	9e60 <_Bfree>
    8ea2:	4643      	mov	r3, r8
    8ea4:	2b00      	cmp	r3, #0
    8ea6:	d100      	bne.n	8eaa <_dtoa_r+0xa9e>
    8ea8:	e4df      	b.n	886a <_dtoa_r+0x45e>
    8eaa:	e7b6      	b.n	8e1a <_dtoa_r+0xa0e>
    8eac:	464a      	mov	r2, r9
    8eae:	4659      	mov	r1, fp
    8eb0:	4650      	mov	r0, sl
    8eb2:	f001 f96b 	bl	a18c <__pow5mult>
    8eb6:	4683      	mov	fp, r0
    8eb8:	e653      	b.n	8b62 <_dtoa_r+0x756>
    8eba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    8ebc:	2a00      	cmp	r2, #0
    8ebe:	d100      	bne.n	8ec2 <_dtoa_r+0xab6>
    8ec0:	e1b6      	b.n	9230 <_dtoa_r+0xe24>
    8ec2:	4a9a      	ldr	r2, [pc, #616]	; (912c <_dtoa_r+0xd20>)
    8ec4:	464c      	mov	r4, r9
    8ec6:	4694      	mov	ip, r2
    8ec8:	9a06      	ldr	r2, [sp, #24]
    8eca:	4463      	add	r3, ip
    8ecc:	9208      	str	r2, [sp, #32]
    8ece:	e5d5      	b.n	8a7c <_dtoa_r+0x670>
    8ed0:	2e00      	cmp	r6, #0
    8ed2:	d000      	beq.n	8ed6 <_dtoa_r+0xaca>
    8ed4:	e670      	b.n	8bb8 <_dtoa_r+0x7ac>
    8ed6:	e7aa      	b.n	8e2e <_dtoa_r+0xa22>
    8ed8:	f000 ffcc 	bl	9e74 <__multadd>
    8edc:	46a2      	mov	sl, r4
    8ede:	0005      	movs	r5, r0
    8ee0:	4680      	mov	r8, r0
    8ee2:	e6c7      	b.n	8c74 <_dtoa_r+0x868>
    8ee4:	2301      	movs	r3, #1
    8ee6:	469b      	mov	fp, r3
    8ee8:	e6e2      	b.n	8cb0 <_dtoa_r+0x8a4>
    8eea:	2300      	movs	r3, #0
    8eec:	930b      	str	r3, [sp, #44]	; 0x2c
    8eee:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8ef0:	2b02      	cmp	r3, #2
    8ef2:	d0af      	beq.n	8e54 <_dtoa_r+0xa48>
    8ef4:	2400      	movs	r4, #0
    8ef6:	4653      	mov	r3, sl
    8ef8:	0021      	movs	r1, r4
    8efa:	645c      	str	r4, [r3, #68]	; 0x44
    8efc:	4650      	mov	r0, sl
    8efe:	f000 ff87 	bl	9e10 <_Balloc>
    8f02:	4653      	mov	r3, sl
    8f04:	6418      	str	r0, [r3, #64]	; 0x40
    8f06:	2301      	movs	r3, #1
    8f08:	425b      	negs	r3, r3
    8f0a:	9307      	str	r3, [sp, #28]
    8f0c:	930e      	str	r3, [sp, #56]	; 0x38
    8f0e:	3302      	adds	r3, #2
    8f10:	900a      	str	r0, [sp, #40]	; 0x28
    8f12:	9423      	str	r4, [sp, #140]	; 0x8c
    8f14:	930b      	str	r3, [sp, #44]	; 0x2c
    8f16:	e4ec      	b.n	88f2 <_dtoa_r+0x4e6>
    8f18:	9b22      	ldr	r3, [sp, #136]	; 0x88
    8f1a:	2b02      	cmp	r3, #2
    8f1c:	dc00      	bgt.n	8f20 <_dtoa_r+0xb14>
    8f1e:	e685      	b.n	8c2c <_dtoa_r+0x820>
    8f20:	9b07      	ldr	r3, [sp, #28]
    8f22:	2b00      	cmp	r3, #0
    8f24:	d1b5      	bne.n	8e92 <_dtoa_r+0xa86>
    8f26:	4649      	mov	r1, r9
    8f28:	2205      	movs	r2, #5
    8f2a:	4650      	mov	r0, sl
    8f2c:	f000 ffa2 	bl	9e74 <__multadd>
    8f30:	4681      	mov	r9, r0
    8f32:	0001      	movs	r1, r0
    8f34:	4658      	mov	r0, fp
    8f36:	f001 f9e9 	bl	a30c <__mcmp>
    8f3a:	2800      	cmp	r0, #0
    8f3c:	dda9      	ble.n	8e92 <_dtoa_r+0xa86>
    8f3e:	2331      	movs	r3, #49	; 0x31
    8f40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8f42:	7013      	strb	r3, [r2, #0]
    8f44:	9b03      	ldr	r3, [sp, #12]
    8f46:	1c54      	adds	r4, r2, #1
    8f48:	3301      	adds	r3, #1
    8f4a:	9303      	str	r3, [sp, #12]
    8f4c:	e7a5      	b.n	8e9a <_dtoa_r+0xa8e>
    8f4e:	9b03      	ldr	r3, [sp, #12]
    8f50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8f52:	3301      	adds	r3, #1
    8f54:	9303      	str	r3, [sp, #12]
    8f56:	2331      	movs	r3, #49	; 0x31
    8f58:	7013      	strb	r3, [r2, #0]
    8f5a:	e74e      	b.n	8dfa <_dtoa_r+0x9ee>
    8f5c:	2300      	movs	r3, #0
    8f5e:	930b      	str	r3, [sp, #44]	; 0x2c
    8f60:	f7ff fb3d 	bl	85de <_dtoa_r+0x1d2>
    8f64:	9b06      	ldr	r3, [sp, #24]
    8f66:	465c      	mov	r4, fp
    8f68:	469b      	mov	fp, r3
    8f6a:	9b07      	ldr	r3, [sp, #28]
    8f6c:	469a      	mov	sl, r3
    8f6e:	e47c      	b.n	886a <_dtoa_r+0x45e>
    8f70:	4640      	mov	r0, r8
    8f72:	f7fc f87f 	bl	5074 <__aeabi_i2d>
    8f76:	0032      	movs	r2, r6
    8f78:	003b      	movs	r3, r7
    8f7a:	f7fb fab1 	bl	44e0 <__aeabi_dmul>
    8f7e:	2200      	movs	r2, #0
    8f80:	4b6b      	ldr	r3, [pc, #428]	; (9130 <_dtoa_r+0xd24>)
    8f82:	f003 fecd 	bl	cd20 <__aeabi_dadd>
    8f86:	4a6b      	ldr	r2, [pc, #428]	; (9134 <_dtoa_r+0xd28>)
    8f88:	000b      	movs	r3, r1
    8f8a:	4694      	mov	ip, r2
    8f8c:	4463      	add	r3, ip
    8f8e:	9008      	str	r0, [sp, #32]
    8f90:	9109      	str	r1, [sp, #36]	; 0x24
    8f92:	9309      	str	r3, [sp, #36]	; 0x24
    8f94:	2200      	movs	r2, #0
    8f96:	4b64      	ldr	r3, [pc, #400]	; (9128 <_dtoa_r+0xd1c>)
    8f98:	0030      	movs	r0, r6
    8f9a:	0039      	movs	r1, r7
    8f9c:	f7fb fd20 	bl	49e0 <__aeabi_dsub>
    8fa0:	9e08      	ldr	r6, [sp, #32]
    8fa2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8fa4:	0032      	movs	r2, r6
    8fa6:	003b      	movs	r3, r7
    8fa8:	0004      	movs	r4, r0
    8faa:	000d      	movs	r5, r1
    8fac:	f7fc f958 	bl	5260 <__aeabi_dcmpgt>
    8fb0:	2800      	cmp	r0, #0
    8fb2:	d000      	beq.n	8fb6 <_dtoa_r+0xbaa>
    8fb4:	e0b2      	b.n	911c <_dtoa_r+0xd10>
    8fb6:	2080      	movs	r0, #128	; 0x80
    8fb8:	0600      	lsls	r0, r0, #24
    8fba:	4684      	mov	ip, r0
    8fbc:	0039      	movs	r1, r7
    8fbe:	4461      	add	r1, ip
    8fc0:	000b      	movs	r3, r1
    8fc2:	0032      	movs	r2, r6
    8fc4:	0020      	movs	r0, r4
    8fc6:	0029      	movs	r1, r5
    8fc8:	f7fc f936 	bl	5238 <__aeabi_dcmplt>
    8fcc:	2800      	cmp	r0, #0
    8fce:	d057      	beq.n	9080 <_dtoa_r+0xc74>
    8fd0:	2300      	movs	r3, #0
    8fd2:	4699      	mov	r9, r3
    8fd4:	4698      	mov	r8, r3
    8fd6:	e75c      	b.n	8e92 <_dtoa_r+0xa86>
    8fd8:	980a      	ldr	r0, [sp, #40]	; 0x28
    8fda:	f7ff fa4c 	bl	8476 <_dtoa_r+0x6a>
    8fde:	1ae2      	subs	r2, r4, r3
    8fe0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8fe2:	46a1      	mov	r9, r4
    8fe4:	469c      	mov	ip, r3
    8fe6:	4494      	add	ip, r2
    8fe8:	4663      	mov	r3, ip
    8fea:	2400      	movs	r4, #0
    8fec:	930d      	str	r3, [sp, #52]	; 0x34
    8fee:	e53e      	b.n	8a6e <_dtoa_r+0x662>
    8ff0:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8ff2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8ff4:	9208      	str	r2, [sp, #32]
    8ff6:	9309      	str	r3, [sp, #36]	; 0x24
    8ff8:	2302      	movs	r3, #2
    8ffa:	4698      	mov	r8, r3
    8ffc:	f7ff fb3a 	bl	8674 <_dtoa_r+0x268>
    9000:	2300      	movs	r3, #0
    9002:	4652      	mov	r2, sl
    9004:	2100      	movs	r1, #0
    9006:	6453      	str	r3, [r2, #68]	; 0x44
    9008:	4650      	mov	r0, sl
    900a:	f000 ff01 	bl	9e10 <_Balloc>
    900e:	4653      	mov	r3, sl
    9010:	6418      	str	r0, [r3, #64]	; 0x40
    9012:	2301      	movs	r3, #1
    9014:	900a      	str	r0, [sp, #40]	; 0x28
    9016:	9307      	str	r3, [sp, #28]
    9018:	9323      	str	r3, [sp, #140]	; 0x8c
    901a:	930e      	str	r3, [sp, #56]	; 0x38
    901c:	f7ff fb07 	bl	862e <_dtoa_r+0x222>
    9020:	4643      	mov	r3, r8
    9022:	930c      	str	r3, [sp, #48]	; 0x30
    9024:	465b      	mov	r3, fp
    9026:	9a06      	ldr	r2, [sp, #24]
    9028:	46a8      	mov	r8, r5
    902a:	46b3      	mov	fp, r6
    902c:	4655      	mov	r5, sl
    902e:	9e04      	ldr	r6, [sp, #16]
    9030:	4691      	mov	r9, r2
    9032:	46ba      	mov	sl, r7
    9034:	2b00      	cmp	r3, #0
    9036:	dd10      	ble.n	905a <_dtoa_r+0xc4e>
    9038:	4659      	mov	r1, fp
    903a:	2201      	movs	r2, #1
    903c:	0038      	movs	r0, r7
    903e:	f001 f905 	bl	a24c <__lshift>
    9042:	4649      	mov	r1, r9
    9044:	4683      	mov	fp, r0
    9046:	f001 f961 	bl	a30c <__mcmp>
    904a:	2800      	cmp	r0, #0
    904c:	dc00      	bgt.n	9050 <_dtoa_r+0xc44>
    904e:	e157      	b.n	9300 <_dtoa_r+0xef4>
    9050:	2e39      	cmp	r6, #57	; 0x39
    9052:	d100      	bne.n	9056 <_dtoa_r+0xc4a>
    9054:	e122      	b.n	929c <_dtoa_r+0xe90>
    9056:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    9058:	3631      	adds	r6, #49	; 0x31
    905a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    905c:	4647      	mov	r7, r8
    905e:	1c6c      	adds	r4, r5, #1
    9060:	702e      	strb	r6, [r5, #0]
    9062:	4698      	mov	r8, r3
    9064:	e6c9      	b.n	8dfa <_dtoa_r+0x9ee>
    9066:	2800      	cmp	r0, #0
    9068:	d103      	bne.n	9072 <_dtoa_r+0xc66>
    906a:	07f3      	lsls	r3, r6, #31
    906c:	d501      	bpl.n	9072 <_dtoa_r+0xc66>
    906e:	e6b5      	b.n	8ddc <_dtoa_r+0x9d0>
    9070:	001c      	movs	r4, r3
    9072:	1e63      	subs	r3, r4, #1
    9074:	781a      	ldrb	r2, [r3, #0]
    9076:	2a30      	cmp	r2, #48	; 0x30
    9078:	d0fa      	beq.n	9070 <_dtoa_r+0xc64>
    907a:	e6be      	b.n	8dfa <_dtoa_r+0x9ee>
    907c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    907e:	4699      	mov	r9, r3
    9080:	9e10      	ldr	r6, [sp, #64]	; 0x40
    9082:	9f11      	ldr	r7, [sp, #68]	; 0x44
    9084:	e435      	b.n	88f2 <_dtoa_r+0x4e6>
    9086:	2501      	movs	r5, #1
    9088:	f7ff fab4 	bl	85f4 <_dtoa_r+0x1e8>
    908c:	9b03      	ldr	r3, [sp, #12]
    908e:	2b00      	cmp	r3, #0
    9090:	d100      	bne.n	9094 <_dtoa_r+0xc88>
    9092:	e0d4      	b.n	923e <_dtoa_r+0xe32>
    9094:	9810      	ldr	r0, [sp, #64]	; 0x40
    9096:	9911      	ldr	r1, [sp, #68]	; 0x44
    9098:	425c      	negs	r4, r3
    909a:	230f      	movs	r3, #15
    909c:	4a26      	ldr	r2, [pc, #152]	; (9138 <_dtoa_r+0xd2c>)
    909e:	4023      	ands	r3, r4
    90a0:	00db      	lsls	r3, r3, #3
    90a2:	18d3      	adds	r3, r2, r3
    90a4:	681a      	ldr	r2, [r3, #0]
    90a6:	685b      	ldr	r3, [r3, #4]
    90a8:	f7fb fa1a 	bl	44e0 <__aeabi_dmul>
    90ac:	1124      	asrs	r4, r4, #4
    90ae:	0006      	movs	r6, r0
    90b0:	000f      	movs	r7, r1
    90b2:	2c00      	cmp	r4, #0
    90b4:	d100      	bne.n	90b8 <_dtoa_r+0xcac>
    90b6:	e149      	b.n	934c <_dtoa_r+0xf40>
    90b8:	2302      	movs	r3, #2
    90ba:	4698      	mov	r8, r3
    90bc:	4d1f      	ldr	r5, [pc, #124]	; (913c <_dtoa_r+0xd30>)
    90be:	2301      	movs	r3, #1
    90c0:	4223      	tst	r3, r4
    90c2:	d009      	beq.n	90d8 <_dtoa_r+0xccc>
    90c4:	469c      	mov	ip, r3
    90c6:	682a      	ldr	r2, [r5, #0]
    90c8:	686b      	ldr	r3, [r5, #4]
    90ca:	0030      	movs	r0, r6
    90cc:	0039      	movs	r1, r7
    90ce:	44e0      	add	r8, ip
    90d0:	f7fb fa06 	bl	44e0 <__aeabi_dmul>
    90d4:	0006      	movs	r6, r0
    90d6:	000f      	movs	r7, r1
    90d8:	1064      	asrs	r4, r4, #1
    90da:	3508      	adds	r5, #8
    90dc:	2c00      	cmp	r4, #0
    90de:	d1ee      	bne.n	90be <_dtoa_r+0xcb2>
    90e0:	f7ff fae4 	bl	86ac <_dtoa_r+0x2a0>
    90e4:	9b03      	ldr	r3, [sp, #12]
    90e6:	2730      	movs	r7, #48	; 0x30
    90e8:	3301      	adds	r3, #1
    90ea:	9303      	str	r3, [sp, #12]
    90ec:	2330      	movs	r3, #48	; 0x30
    90ee:	702b      	strb	r3, [r5, #0]
    90f0:	e4ac      	b.n	8a4c <_dtoa_r+0x640>
    90f2:	6859      	ldr	r1, [r3, #4]
    90f4:	4650      	mov	r0, sl
    90f6:	f000 fe8b 	bl	9e10 <_Balloc>
    90fa:	4643      	mov	r3, r8
    90fc:	4641      	mov	r1, r8
    90fe:	0004      	movs	r4, r0
    9100:	691b      	ldr	r3, [r3, #16]
    9102:	310c      	adds	r1, #12
    9104:	1c9a      	adds	r2, r3, #2
    9106:	0092      	lsls	r2, r2, #2
    9108:	300c      	adds	r0, #12
    910a:	f000 fe2f 	bl	9d6c <memcpy>
    910e:	2201      	movs	r2, #1
    9110:	0021      	movs	r1, r4
    9112:	4650      	mov	r0, sl
    9114:	f001 f89a 	bl	a24c <__lshift>
    9118:	900c      	str	r0, [sp, #48]	; 0x30
    911a:	e599      	b.n	8c50 <_dtoa_r+0x844>
    911c:	2300      	movs	r3, #0
    911e:	4699      	mov	r9, r3
    9120:	4698      	mov	r8, r3
    9122:	e70c      	b.n	8f3e <_dtoa_r+0xb32>
    9124:	7ff00000 	.word	0x7ff00000
    9128:	40140000 	.word	0x40140000
    912c:	00000433 	.word	0x00000433
    9130:	401c0000 	.word	0x401c0000
    9134:	fcc00000 	.word	0xfcc00000
    9138:	0000f310 	.word	0x0000f310
    913c:	0000f2e8 	.word	0x0000f2e8
    9140:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9142:	498f      	ldr	r1, [pc, #572]	; (9380 <_dtoa_r+0xf74>)
    9144:	3b01      	subs	r3, #1
    9146:	00db      	lsls	r3, r3, #3
    9148:	18c9      	adds	r1, r1, r3
    914a:	6808      	ldr	r0, [r1, #0]
    914c:	6849      	ldr	r1, [r1, #4]
    914e:	9a08      	ldr	r2, [sp, #32]
    9150:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9152:	f7fb f9c5 	bl	44e0 <__aeabi_dmul>
    9156:	9014      	str	r0, [sp, #80]	; 0x50
    9158:	9115      	str	r1, [sp, #84]	; 0x54
    915a:	0039      	movs	r1, r7
    915c:	0030      	movs	r0, r6
    915e:	f7fb ff55 	bl	500c <__aeabi_d2iz>
    9162:	0005      	movs	r5, r0
    9164:	f7fb ff86 	bl	5074 <__aeabi_i2d>
    9168:	0002      	movs	r2, r0
    916a:	000b      	movs	r3, r1
    916c:	0030      	movs	r0, r6
    916e:	0039      	movs	r1, r7
    9170:	f7fb fc36 	bl	49e0 <__aeabi_dsub>
    9174:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9176:	9008      	str	r0, [sp, #32]
    9178:	9109      	str	r1, [sp, #36]	; 0x24
    917a:	990a      	ldr	r1, [sp, #40]	; 0x28
    917c:	001a      	movs	r2, r3
    917e:	468c      	mov	ip, r1
    9180:	3530      	adds	r5, #48	; 0x30
    9182:	4462      	add	r2, ip
    9184:	1c4c      	adds	r4, r1, #1
    9186:	700d      	strb	r5, [r1, #0]
    9188:	4690      	mov	r8, r2
    918a:	2b01      	cmp	r3, #1
    918c:	d01b      	beq.n	91c6 <_dtoa_r+0xdba>
    918e:	9808      	ldr	r0, [sp, #32]
    9190:	9909      	ldr	r1, [sp, #36]	; 0x24
    9192:	0025      	movs	r5, r4
    9194:	2200      	movs	r2, #0
    9196:	4b7b      	ldr	r3, [pc, #492]	; (9384 <_dtoa_r+0xf78>)
    9198:	f7fb f9a2 	bl	44e0 <__aeabi_dmul>
    919c:	000f      	movs	r7, r1
    919e:	0006      	movs	r6, r0
    91a0:	f7fb ff34 	bl	500c <__aeabi_d2iz>
    91a4:	0004      	movs	r4, r0
    91a6:	f7fb ff65 	bl	5074 <__aeabi_i2d>
    91aa:	3430      	adds	r4, #48	; 0x30
    91ac:	0002      	movs	r2, r0
    91ae:	000b      	movs	r3, r1
    91b0:	0030      	movs	r0, r6
    91b2:	0039      	movs	r1, r7
    91b4:	f7fb fc14 	bl	49e0 <__aeabi_dsub>
    91b8:	702c      	strb	r4, [r5, #0]
    91ba:	3501      	adds	r5, #1
    91bc:	45a8      	cmp	r8, r5
    91be:	d1e9      	bne.n	9194 <_dtoa_r+0xd88>
    91c0:	4644      	mov	r4, r8
    91c2:	9008      	str	r0, [sp, #32]
    91c4:	9109      	str	r1, [sp, #36]	; 0x24
    91c6:	9814      	ldr	r0, [sp, #80]	; 0x50
    91c8:	9915      	ldr	r1, [sp, #84]	; 0x54
    91ca:	2200      	movs	r2, #0
    91cc:	4b6e      	ldr	r3, [pc, #440]	; (9388 <_dtoa_r+0xf7c>)
    91ce:	f003 fda7 	bl	cd20 <__aeabi_dadd>
    91d2:	9a08      	ldr	r2, [sp, #32]
    91d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    91d6:	f7fc f82f 	bl	5238 <__aeabi_dcmplt>
    91da:	2800      	cmp	r0, #0
    91dc:	d067      	beq.n	92ae <_dtoa_r+0xea2>
    91de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    91e0:	1e65      	subs	r5, r4, #1
    91e2:	9303      	str	r3, [sp, #12]
    91e4:	782f      	ldrb	r7, [r5, #0]
    91e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    91e8:	e42e      	b.n	8a48 <_dtoa_r+0x63c>
    91ea:	4643      	mov	r3, r8
    91ec:	46b3      	mov	fp, r6
    91ee:	930c      	str	r3, [sp, #48]	; 0x30
    91f0:	9e04      	ldr	r6, [sp, #16]
    91f2:	9b06      	ldr	r3, [sp, #24]
    91f4:	46a8      	mov	r8, r5
    91f6:	4699      	mov	r9, r3
    91f8:	4655      	mov	r5, sl
    91fa:	46ba      	mov	sl, r7
    91fc:	2e39      	cmp	r6, #57	; 0x39
    91fe:	d04d      	beq.n	929c <_dtoa_r+0xe90>
    9200:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9202:	3601      	adds	r6, #1
    9204:	4647      	mov	r7, r8
    9206:	1c6c      	adds	r4, r5, #1
    9208:	702e      	strb	r6, [r5, #0]
    920a:	4698      	mov	r8, r3
    920c:	e5f5      	b.n	8dfa <_dtoa_r+0x9ee>
    920e:	4642      	mov	r2, r8
    9210:	9b06      	ldr	r3, [sp, #24]
    9212:	46b3      	mov	fp, r6
    9214:	46ba      	mov	sl, r7
    9216:	9e04      	ldr	r6, [sp, #16]
    9218:	4699      	mov	r9, r3
    921a:	002f      	movs	r7, r5
    921c:	4690      	mov	r8, r2
    921e:	e5d1      	b.n	8dc4 <_dtoa_r+0x9b8>
    9220:	9b06      	ldr	r3, [sp, #24]
    9222:	9a07      	ldr	r2, [sp, #28]
    9224:	1a9b      	subs	r3, r3, r2
    9226:	9308      	str	r3, [sp, #32]
    9228:	2300      	movs	r3, #0
    922a:	e427      	b.n	8a7c <_dtoa_r+0x670>
    922c:	2401      	movs	r4, #1
    922e:	e5c5      	b.n	8dbc <_dtoa_r+0x9b0>
    9230:	2336      	movs	r3, #54	; 0x36
    9232:	9a16      	ldr	r2, [sp, #88]	; 0x58
    9234:	464c      	mov	r4, r9
    9236:	1a9b      	subs	r3, r3, r2
    9238:	9a06      	ldr	r2, [sp, #24]
    923a:	9208      	str	r2, [sp, #32]
    923c:	e41e      	b.n	8a7c <_dtoa_r+0x670>
    923e:	2302      	movs	r3, #2
    9240:	9e10      	ldr	r6, [sp, #64]	; 0x40
    9242:	9f11      	ldr	r7, [sp, #68]	; 0x44
    9244:	4698      	mov	r8, r3
    9246:	f7ff fa31 	bl	86ac <_dtoa_r+0x2a0>
    924a:	9b07      	ldr	r3, [sp, #28]
    924c:	2b00      	cmp	r3, #0
    924e:	d100      	bne.n	9252 <_dtoa_r+0xe46>
    9250:	e68e      	b.n	8f70 <_dtoa_r+0xb64>
    9252:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    9254:	2c00      	cmp	r4, #0
    9256:	dc00      	bgt.n	925a <_dtoa_r+0xe4e>
    9258:	e712      	b.n	9080 <_dtoa_r+0xc74>
    925a:	9b03      	ldr	r3, [sp, #12]
    925c:	2200      	movs	r2, #0
    925e:	3b01      	subs	r3, #1
    9260:	9313      	str	r3, [sp, #76]	; 0x4c
    9262:	0030      	movs	r0, r6
    9264:	4b47      	ldr	r3, [pc, #284]	; (9384 <_dtoa_r+0xf78>)
    9266:	0039      	movs	r1, r7
    9268:	f7fb f93a 	bl	44e0 <__aeabi_dmul>
    926c:	0006      	movs	r6, r0
    926e:	4640      	mov	r0, r8
    9270:	000f      	movs	r7, r1
    9272:	3001      	adds	r0, #1
    9274:	f7fb fefe 	bl	5074 <__aeabi_i2d>
    9278:	0032      	movs	r2, r6
    927a:	003b      	movs	r3, r7
    927c:	f7fb f930 	bl	44e0 <__aeabi_dmul>
    9280:	2200      	movs	r2, #0
    9282:	4b42      	ldr	r3, [pc, #264]	; (938c <_dtoa_r+0xf80>)
    9284:	f003 fd4c 	bl	cd20 <__aeabi_dadd>
    9288:	4a41      	ldr	r2, [pc, #260]	; (9390 <_dtoa_r+0xf84>)
    928a:	000b      	movs	r3, r1
    928c:	4694      	mov	ip, r2
    928e:	4463      	add	r3, ip
    9290:	9008      	str	r0, [sp, #32]
    9292:	9109      	str	r1, [sp, #36]	; 0x24
    9294:	9412      	str	r4, [sp, #72]	; 0x48
    9296:	9309      	str	r3, [sp, #36]	; 0x24
    9298:	f7ff fa30 	bl	86fc <_dtoa_r+0x2f0>
    929c:	2339      	movs	r3, #57	; 0x39
    929e:	702b      	strb	r3, [r5, #0]
    92a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    92a2:	4647      	mov	r7, r8
    92a4:	1c6c      	adds	r4, r5, #1
    92a6:	4698      	mov	r8, r3
    92a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    92aa:	2339      	movs	r3, #57	; 0x39
    92ac:	e5a1      	b.n	8df2 <_dtoa_r+0x9e6>
    92ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
    92b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
    92b2:	2000      	movs	r0, #0
    92b4:	4934      	ldr	r1, [pc, #208]	; (9388 <_dtoa_r+0xf7c>)
    92b6:	f7fb fb93 	bl	49e0 <__aeabi_dsub>
    92ba:	9a08      	ldr	r2, [sp, #32]
    92bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    92be:	f7fb ffcf 	bl	5260 <__aeabi_dcmpgt>
    92c2:	2800      	cmp	r0, #0
    92c4:	d101      	bne.n	92ca <_dtoa_r+0xebe>
    92c6:	e6db      	b.n	9080 <_dtoa_r+0xc74>
    92c8:	001c      	movs	r4, r3
    92ca:	1e63      	subs	r3, r4, #1
    92cc:	781a      	ldrb	r2, [r3, #0]
    92ce:	2a30      	cmp	r2, #48	; 0x30
    92d0:	d0fa      	beq.n	92c8 <_dtoa_r+0xebc>
    92d2:	f7ff fac8 	bl	8866 <_dtoa_r+0x45a>
    92d6:	4643      	mov	r3, r8
    92d8:	46b3      	mov	fp, r6
    92da:	930c      	str	r3, [sp, #48]	; 0x30
    92dc:	9e04      	ldr	r6, [sp, #16]
    92de:	9b06      	ldr	r3, [sp, #24]
    92e0:	46a8      	mov	r8, r5
    92e2:	4699      	mov	r9, r3
    92e4:	4655      	mov	r5, sl
    92e6:	46ba      	mov	sl, r7
    92e8:	2e39      	cmp	r6, #57	; 0x39
    92ea:	d0d7      	beq.n	929c <_dtoa_r+0xe90>
    92ec:	2c00      	cmp	r4, #0
    92ee:	dd00      	ble.n	92f2 <_dtoa_r+0xee6>
    92f0:	e6b1      	b.n	9056 <_dtoa_r+0xc4a>
    92f2:	e6b2      	b.n	905a <_dtoa_r+0xc4e>
    92f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    92f6:	464d      	mov	r5, r9
    92f8:	9203      	str	r2, [sp, #12]
    92fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    92fc:	f7ff fba4 	bl	8a48 <_dtoa_r+0x63c>
    9300:	2800      	cmp	r0, #0
    9302:	d000      	beq.n	9306 <_dtoa_r+0xefa>
    9304:	e6a9      	b.n	905a <_dtoa_r+0xc4e>
    9306:	07f3      	lsls	r3, r6, #31
    9308:	d400      	bmi.n	930c <_dtoa_r+0xf00>
    930a:	e6a6      	b.n	905a <_dtoa_r+0xc4e>
    930c:	e6a0      	b.n	9050 <_dtoa_r+0xc44>
    930e:	2300      	movs	r3, #0
    9310:	4641      	mov	r1, r8
    9312:	220a      	movs	r2, #10
    9314:	4650      	mov	r0, sl
    9316:	f000 fdad 	bl	9e74 <__multadd>
    931a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    931c:	4680      	mov	r8, r0
    931e:	2b00      	cmp	r3, #0
    9320:	dd01      	ble.n	9326 <_dtoa_r+0xf1a>
    9322:	9307      	str	r3, [sp, #28]
    9324:	e486      	b.n	8c34 <_dtoa_r+0x828>
    9326:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9328:	2b02      	cmp	r3, #2
    932a:	dc1f      	bgt.n	936c <_dtoa_r+0xf60>
    932c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    932e:	9307      	str	r3, [sp, #28]
    9330:	e480      	b.n	8c34 <_dtoa_r+0x828>
    9332:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9334:	2b02      	cmp	r3, #2
    9336:	dc19      	bgt.n	936c <_dtoa_r+0xf60>
    9338:	4649      	mov	r1, r9
    933a:	f7fe ffbd 	bl	82b8 <quorem>
    933e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9340:	3030      	adds	r0, #48	; 0x30
    9342:	7018      	strb	r0, [r3, #0]
    9344:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9346:	0006      	movs	r6, r0
    9348:	9307      	str	r3, [sp, #28]
    934a:	e533      	b.n	8db4 <_dtoa_r+0x9a8>
    934c:	2302      	movs	r3, #2
    934e:	4698      	mov	r8, r3
    9350:	f7ff f9ac 	bl	86ac <_dtoa_r+0x2a0>
    9354:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9356:	9c14      	ldr	r4, [sp, #80]	; 0x50
    9358:	9303      	str	r3, [sp, #12]
    935a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    935c:	001d      	movs	r5, r3
    935e:	f7ff fb73 	bl	8a48 <_dtoa_r+0x63c>
    9362:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9364:	9c14      	ldr	r4, [sp, #80]	; 0x50
    9366:	9303      	str	r3, [sp, #12]
    9368:	f7ff fa7f 	bl	886a <_dtoa_r+0x45e>
    936c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    936e:	9307      	str	r3, [sp, #28]
    9370:	e5d6      	b.n	8f20 <_dtoa_r+0xb14>
    9372:	2b04      	cmp	r3, #4
    9374:	d100      	bne.n	9378 <_dtoa_r+0xf6c>
    9376:	e43f      	b.n	8bf8 <_dtoa_r+0x7ec>
    9378:	233c      	movs	r3, #60	; 0x3c
    937a:	1a18      	subs	r0, r3, r0
    937c:	e4d7      	b.n	8d2e <_dtoa_r+0x922>
    937e:	46c0      	nop			; (mov r8, r8)
    9380:	0000f310 	.word	0x0000f310
    9384:	40240000 	.word	0x40240000
    9388:	3fe00000 	.word	0x3fe00000
    938c:	401c0000 	.word	0x401c0000
    9390:	fcc00000 	.word	0xfcc00000

00009394 <__libc_fini_array>:
    9394:	b570      	push	{r4, r5, r6, lr}
    9396:	4b09      	ldr	r3, [pc, #36]	; (93bc <__libc_fini_array+0x28>)
    9398:	4c09      	ldr	r4, [pc, #36]	; (93c0 <__libc_fini_array+0x2c>)
    939a:	1ae4      	subs	r4, r4, r3
    939c:	10a4      	asrs	r4, r4, #2
    939e:	d009      	beq.n	93b4 <__libc_fini_array+0x20>
    93a0:	4a08      	ldr	r2, [pc, #32]	; (93c4 <__libc_fini_array+0x30>)
    93a2:	18a5      	adds	r5, r4, r2
    93a4:	00ad      	lsls	r5, r5, #2
    93a6:	18ed      	adds	r5, r5, r3
    93a8:	682b      	ldr	r3, [r5, #0]
    93aa:	3c01      	subs	r4, #1
    93ac:	4798      	blx	r3
    93ae:	3d04      	subs	r5, #4
    93b0:	2c00      	cmp	r4, #0
    93b2:	d1f9      	bne.n	93a8 <__libc_fini_array+0x14>
    93b4:	f006 f9bc 	bl	f730 <_fini>
    93b8:	bd70      	pop	{r4, r5, r6, pc}
    93ba:	46c0      	nop			; (mov r8, r8)
    93bc:	0000f73c 	.word	0x0000f73c
    93c0:	0000f740 	.word	0x0000f740
    93c4:	3fffffff 	.word	0x3fffffff

000093c8 <_malloc_trim_r>:
    93c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    93ca:	000c      	movs	r4, r1
    93cc:	0006      	movs	r6, r0
    93ce:	f000 fd0f 	bl	9df0 <__malloc_lock>
    93d2:	4f20      	ldr	r7, [pc, #128]	; (9454 <_malloc_trim_r+0x8c>)
    93d4:	68bb      	ldr	r3, [r7, #8]
    93d6:	685d      	ldr	r5, [r3, #4]
    93d8:	2303      	movs	r3, #3
    93da:	439d      	bics	r5, r3
    93dc:	4b1e      	ldr	r3, [pc, #120]	; (9458 <_malloc_trim_r+0x90>)
    93de:	1b2c      	subs	r4, r5, r4
    93e0:	469c      	mov	ip, r3
    93e2:	4464      	add	r4, ip
    93e4:	0b24      	lsrs	r4, r4, #12
    93e6:	4b1d      	ldr	r3, [pc, #116]	; (945c <_malloc_trim_r+0x94>)
    93e8:	3c01      	subs	r4, #1
    93ea:	0324      	lsls	r4, r4, #12
    93ec:	429c      	cmp	r4, r3
    93ee:	dd07      	ble.n	9400 <_malloc_trim_r+0x38>
    93f0:	2100      	movs	r1, #0
    93f2:	0030      	movs	r0, r6
    93f4:	f001 f9ba 	bl	a76c <_sbrk_r>
    93f8:	68bb      	ldr	r3, [r7, #8]
    93fa:	195b      	adds	r3, r3, r5
    93fc:	4298      	cmp	r0, r3
    93fe:	d004      	beq.n	940a <_malloc_trim_r+0x42>
    9400:	0030      	movs	r0, r6
    9402:	f000 fcfd 	bl	9e00 <__malloc_unlock>
    9406:	2000      	movs	r0, #0
    9408:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    940a:	4261      	negs	r1, r4
    940c:	0030      	movs	r0, r6
    940e:	f001 f9ad 	bl	a76c <_sbrk_r>
    9412:	1c43      	adds	r3, r0, #1
    9414:	d00d      	beq.n	9432 <_malloc_trim_r+0x6a>
    9416:	2201      	movs	r2, #1
    9418:	68bb      	ldr	r3, [r7, #8]
    941a:	1b2d      	subs	r5, r5, r4
    941c:	4315      	orrs	r5, r2
    941e:	605d      	str	r5, [r3, #4]
    9420:	4b0f      	ldr	r3, [pc, #60]	; (9460 <_malloc_trim_r+0x98>)
    9422:	0030      	movs	r0, r6
    9424:	681a      	ldr	r2, [r3, #0]
    9426:	1b14      	subs	r4, r2, r4
    9428:	601c      	str	r4, [r3, #0]
    942a:	f000 fce9 	bl	9e00 <__malloc_unlock>
    942e:	2001      	movs	r0, #1
    9430:	e7ea      	b.n	9408 <_malloc_trim_r+0x40>
    9432:	2100      	movs	r1, #0
    9434:	0030      	movs	r0, r6
    9436:	f001 f999 	bl	a76c <_sbrk_r>
    943a:	68ba      	ldr	r2, [r7, #8]
    943c:	1a83      	subs	r3, r0, r2
    943e:	2b0f      	cmp	r3, #15
    9440:	ddde      	ble.n	9400 <_malloc_trim_r+0x38>
    9442:	4908      	ldr	r1, [pc, #32]	; (9464 <_malloc_trim_r+0x9c>)
    9444:	6809      	ldr	r1, [r1, #0]
    9446:	1a40      	subs	r0, r0, r1
    9448:	4905      	ldr	r1, [pc, #20]	; (9460 <_malloc_trim_r+0x98>)
    944a:	6008      	str	r0, [r1, #0]
    944c:	2101      	movs	r1, #1
    944e:	430b      	orrs	r3, r1
    9450:	6053      	str	r3, [r2, #4]
    9452:	e7d5      	b.n	9400 <_malloc_trim_r+0x38>
    9454:	20000638 	.word	0x20000638
    9458:	00000fef 	.word	0x00000fef
    945c:	00000fff 	.word	0x00000fff
    9460:	20000ac8 	.word	0x20000ac8
    9464:	20000a40 	.word	0x20000a40

00009468 <_free_r>:
    9468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    946a:	0004      	movs	r4, r0
    946c:	1e0d      	subs	r5, r1, #0
    946e:	d03c      	beq.n	94ea <_free_r+0x82>
    9470:	f000 fcbe 	bl	9df0 <__malloc_lock>
    9474:	0029      	movs	r1, r5
    9476:	3908      	subs	r1, #8
    9478:	6848      	ldr	r0, [r1, #4]
    947a:	2301      	movs	r3, #1
    947c:	0005      	movs	r5, r0
    947e:	2603      	movs	r6, #3
    9480:	439d      	bics	r5, r3
    9482:	194a      	adds	r2, r1, r5
    9484:	469c      	mov	ip, r3
    9486:	4f61      	ldr	r7, [pc, #388]	; (960c <_free_r+0x1a4>)
    9488:	6853      	ldr	r3, [r2, #4]
    948a:	43b3      	bics	r3, r6
    948c:	68be      	ldr	r6, [r7, #8]
    948e:	42b2      	cmp	r2, r6
    9490:	d056      	beq.n	9540 <_free_r+0xd8>
    9492:	4666      	mov	r6, ip
    9494:	6053      	str	r3, [r2, #4]
    9496:	4206      	tst	r6, r0
    9498:	d10a      	bne.n	94b0 <_free_r+0x48>
    949a:	003e      	movs	r6, r7
    949c:	6808      	ldr	r0, [r1, #0]
    949e:	3608      	adds	r6, #8
    94a0:	1a09      	subs	r1, r1, r0
    94a2:	182d      	adds	r5, r5, r0
    94a4:	6888      	ldr	r0, [r1, #8]
    94a6:	42b0      	cmp	r0, r6
    94a8:	d065      	beq.n	9576 <_free_r+0x10e>
    94aa:	68ce      	ldr	r6, [r1, #12]
    94ac:	60c6      	str	r6, [r0, #12]
    94ae:	60b0      	str	r0, [r6, #8]
    94b0:	2001      	movs	r0, #1
    94b2:	18d6      	adds	r6, r2, r3
    94b4:	6876      	ldr	r6, [r6, #4]
    94b6:	4206      	tst	r6, r0
    94b8:	d033      	beq.n	9522 <_free_r+0xba>
    94ba:	4b55      	ldr	r3, [pc, #340]	; (9610 <_free_r+0x1a8>)
    94bc:	4328      	orrs	r0, r5
    94be:	6048      	str	r0, [r1, #4]
    94c0:	514d      	str	r5, [r1, r5]
    94c2:	429d      	cmp	r5, r3
    94c4:	d812      	bhi.n	94ec <_free_r+0x84>
    94c6:	08ed      	lsrs	r5, r5, #3
    94c8:	3bff      	subs	r3, #255	; 0xff
    94ca:	10aa      	asrs	r2, r5, #2
    94cc:	3bff      	subs	r3, #255	; 0xff
    94ce:	4093      	lsls	r3, r2
    94d0:	687a      	ldr	r2, [r7, #4]
    94d2:	00ed      	lsls	r5, r5, #3
    94d4:	4313      	orrs	r3, r2
    94d6:	607b      	str	r3, [r7, #4]
    94d8:	19ef      	adds	r7, r5, r7
    94da:	68bb      	ldr	r3, [r7, #8]
    94dc:	60cf      	str	r7, [r1, #12]
    94de:	608b      	str	r3, [r1, #8]
    94e0:	60b9      	str	r1, [r7, #8]
    94e2:	60d9      	str	r1, [r3, #12]
    94e4:	0020      	movs	r0, r4
    94e6:	f000 fc8b 	bl	9e00 <__malloc_unlock>
    94ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    94ec:	0a68      	lsrs	r0, r5, #9
    94ee:	2804      	cmp	r0, #4
    94f0:	d850      	bhi.n	9594 <_free_r+0x12c>
    94f2:	09a8      	lsrs	r0, r5, #6
    94f4:	0002      	movs	r2, r0
    94f6:	3039      	adds	r0, #57	; 0x39
    94f8:	3238      	adds	r2, #56	; 0x38
    94fa:	00c0      	lsls	r0, r0, #3
    94fc:	1838      	adds	r0, r7, r0
    94fe:	3808      	subs	r0, #8
    9500:	6883      	ldr	r3, [r0, #8]
    9502:	2603      	movs	r6, #3
    9504:	4298      	cmp	r0, r3
    9506:	d04c      	beq.n	95a2 <_free_r+0x13a>
    9508:	685a      	ldr	r2, [r3, #4]
    950a:	43b2      	bics	r2, r6
    950c:	4295      	cmp	r5, r2
    950e:	d230      	bcs.n	9572 <_free_r+0x10a>
    9510:	689b      	ldr	r3, [r3, #8]
    9512:	4298      	cmp	r0, r3
    9514:	d1f8      	bne.n	9508 <_free_r+0xa0>
    9516:	68c3      	ldr	r3, [r0, #12]
    9518:	60cb      	str	r3, [r1, #12]
    951a:	6088      	str	r0, [r1, #8]
    951c:	6099      	str	r1, [r3, #8]
    951e:	60c1      	str	r1, [r0, #12]
    9520:	e7e0      	b.n	94e4 <_free_r+0x7c>
    9522:	18ed      	adds	r5, r5, r3
    9524:	4e3b      	ldr	r6, [pc, #236]	; (9614 <_free_r+0x1ac>)
    9526:	6893      	ldr	r3, [r2, #8]
    9528:	42b3      	cmp	r3, r6
    952a:	d042      	beq.n	95b2 <_free_r+0x14a>
    952c:	68d2      	ldr	r2, [r2, #12]
    952e:	4328      	orrs	r0, r5
    9530:	60da      	str	r2, [r3, #12]
    9532:	6093      	str	r3, [r2, #8]
    9534:	4b36      	ldr	r3, [pc, #216]	; (9610 <_free_r+0x1a8>)
    9536:	6048      	str	r0, [r1, #4]
    9538:	514d      	str	r5, [r1, r5]
    953a:	429d      	cmp	r5, r3
    953c:	d8d6      	bhi.n	94ec <_free_r+0x84>
    953e:	e7c2      	b.n	94c6 <_free_r+0x5e>
    9540:	4662      	mov	r2, ip
    9542:	18eb      	adds	r3, r5, r3
    9544:	4202      	tst	r2, r0
    9546:	d106      	bne.n	9556 <_free_r+0xee>
    9548:	680a      	ldr	r2, [r1, #0]
    954a:	1a89      	subs	r1, r1, r2
    954c:	6888      	ldr	r0, [r1, #8]
    954e:	189b      	adds	r3, r3, r2
    9550:	68ca      	ldr	r2, [r1, #12]
    9552:	60c2      	str	r2, [r0, #12]
    9554:	6090      	str	r0, [r2, #8]
    9556:	2201      	movs	r2, #1
    9558:	431a      	orrs	r2, r3
    955a:	604a      	str	r2, [r1, #4]
    955c:	4a2e      	ldr	r2, [pc, #184]	; (9618 <_free_r+0x1b0>)
    955e:	60b9      	str	r1, [r7, #8]
    9560:	6812      	ldr	r2, [r2, #0]
    9562:	4293      	cmp	r3, r2
    9564:	d3be      	bcc.n	94e4 <_free_r+0x7c>
    9566:	4b2d      	ldr	r3, [pc, #180]	; (961c <_free_r+0x1b4>)
    9568:	0020      	movs	r0, r4
    956a:	6819      	ldr	r1, [r3, #0]
    956c:	f7ff ff2c 	bl	93c8 <_malloc_trim_r>
    9570:	e7b8      	b.n	94e4 <_free_r+0x7c>
    9572:	0018      	movs	r0, r3
    9574:	e7cf      	b.n	9516 <_free_r+0xae>
    9576:	4666      	mov	r6, ip
    9578:	18d0      	adds	r0, r2, r3
    957a:	6840      	ldr	r0, [r0, #4]
    957c:	4230      	tst	r0, r6
    957e:	d13f      	bne.n	9600 <_free_r+0x198>
    9580:	6890      	ldr	r0, [r2, #8]
    9582:	195d      	adds	r5, r3, r5
    9584:	68d3      	ldr	r3, [r2, #12]
    9586:	60c3      	str	r3, [r0, #12]
    9588:	6098      	str	r0, [r3, #8]
    958a:	4663      	mov	r3, ip
    958c:	432b      	orrs	r3, r5
    958e:	604b      	str	r3, [r1, #4]
    9590:	514d      	str	r5, [r1, r5]
    9592:	e7a7      	b.n	94e4 <_free_r+0x7c>
    9594:	2814      	cmp	r0, #20
    9596:	d814      	bhi.n	95c2 <_free_r+0x15a>
    9598:	0002      	movs	r2, r0
    959a:	305c      	adds	r0, #92	; 0x5c
    959c:	325b      	adds	r2, #91	; 0x5b
    959e:	00c0      	lsls	r0, r0, #3
    95a0:	e7ac      	b.n	94fc <_free_r+0x94>
    95a2:	2301      	movs	r3, #1
    95a4:	1092      	asrs	r2, r2, #2
    95a6:	4093      	lsls	r3, r2
    95a8:	687a      	ldr	r2, [r7, #4]
    95aa:	4313      	orrs	r3, r2
    95ac:	607b      	str	r3, [r7, #4]
    95ae:	0003      	movs	r3, r0
    95b0:	e7b2      	b.n	9518 <_free_r+0xb0>
    95b2:	4328      	orrs	r0, r5
    95b4:	60d9      	str	r1, [r3, #12]
    95b6:	6099      	str	r1, [r3, #8]
    95b8:	60cb      	str	r3, [r1, #12]
    95ba:	608b      	str	r3, [r1, #8]
    95bc:	6048      	str	r0, [r1, #4]
    95be:	514d      	str	r5, [r1, r5]
    95c0:	e790      	b.n	94e4 <_free_r+0x7c>
    95c2:	2854      	cmp	r0, #84	; 0x54
    95c4:	d805      	bhi.n	95d2 <_free_r+0x16a>
    95c6:	0b28      	lsrs	r0, r5, #12
    95c8:	0002      	movs	r2, r0
    95ca:	306f      	adds	r0, #111	; 0x6f
    95cc:	326e      	adds	r2, #110	; 0x6e
    95ce:	00c0      	lsls	r0, r0, #3
    95d0:	e794      	b.n	94fc <_free_r+0x94>
    95d2:	22aa      	movs	r2, #170	; 0xaa
    95d4:	0052      	lsls	r2, r2, #1
    95d6:	4290      	cmp	r0, r2
    95d8:	d805      	bhi.n	95e6 <_free_r+0x17e>
    95da:	0be8      	lsrs	r0, r5, #15
    95dc:	0002      	movs	r2, r0
    95de:	3078      	adds	r0, #120	; 0x78
    95e0:	3277      	adds	r2, #119	; 0x77
    95e2:	00c0      	lsls	r0, r0, #3
    95e4:	e78a      	b.n	94fc <_free_r+0x94>
    95e6:	4a0e      	ldr	r2, [pc, #56]	; (9620 <_free_r+0x1b8>)
    95e8:	4290      	cmp	r0, r2
    95ea:	d805      	bhi.n	95f8 <_free_r+0x190>
    95ec:	0ca8      	lsrs	r0, r5, #18
    95ee:	0002      	movs	r2, r0
    95f0:	307d      	adds	r0, #125	; 0x7d
    95f2:	327c      	adds	r2, #124	; 0x7c
    95f4:	00c0      	lsls	r0, r0, #3
    95f6:	e781      	b.n	94fc <_free_r+0x94>
    95f8:	20fe      	movs	r0, #254	; 0xfe
    95fa:	227e      	movs	r2, #126	; 0x7e
    95fc:	0080      	lsls	r0, r0, #2
    95fe:	e77d      	b.n	94fc <_free_r+0x94>
    9600:	4663      	mov	r3, ip
    9602:	432b      	orrs	r3, r5
    9604:	604b      	str	r3, [r1, #4]
    9606:	6015      	str	r5, [r2, #0]
    9608:	e76c      	b.n	94e4 <_free_r+0x7c>
    960a:	46c0      	nop			; (mov r8, r8)
    960c:	20000638 	.word	0x20000638
    9610:	000001ff 	.word	0x000001ff
    9614:	20000640 	.word	0x20000640
    9618:	20000a44 	.word	0x20000a44
    961c:	20000af8 	.word	0x20000af8
    9620:	00000554 	.word	0x00000554

00009624 <iswspace>:
    9624:	b510      	push	{r4, lr}
    9626:	0004      	movs	r4, r0
    9628:	2000      	movs	r0, #0
    962a:	2cff      	cmp	r4, #255	; 0xff
    962c:	d805      	bhi.n	963a <iswspace+0x16>
    962e:	f000 f819 	bl	9664 <__locale_ctype_ptr>
    9632:	1904      	adds	r4, r0, r4
    9634:	2008      	movs	r0, #8
    9636:	7863      	ldrb	r3, [r4, #1]
    9638:	4018      	ands	r0, r3
    963a:	bd10      	pop	{r4, pc}

0000963c <__locale_mb_cur_max>:
    963c:	4b05      	ldr	r3, [pc, #20]	; (9654 <__locale_mb_cur_max+0x18>)
    963e:	681b      	ldr	r3, [r3, #0]
    9640:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9642:	2b00      	cmp	r3, #0
    9644:	d003      	beq.n	964e <__locale_mb_cur_max+0x12>
    9646:	2294      	movs	r2, #148	; 0x94
    9648:	0052      	lsls	r2, r2, #1
    964a:	5c98      	ldrb	r0, [r3, r2]
    964c:	4770      	bx	lr
    964e:	4b02      	ldr	r3, [pc, #8]	; (9658 <__locale_mb_cur_max+0x1c>)
    9650:	e7f9      	b.n	9646 <__locale_mb_cur_max+0xa>
    9652:	46c0      	nop			; (mov r8, r8)
    9654:	20000098 	.word	0x20000098
    9658:	200004cc 	.word	0x200004cc

0000965c <__locale_ctype_ptr_l>:
    965c:	23ec      	movs	r3, #236	; 0xec
    965e:	58c0      	ldr	r0, [r0, r3]
    9660:	4770      	bx	lr
    9662:	46c0      	nop			; (mov r8, r8)

00009664 <__locale_ctype_ptr>:
    9664:	4b04      	ldr	r3, [pc, #16]	; (9678 <__locale_ctype_ptr+0x14>)
    9666:	681b      	ldr	r3, [r3, #0]
    9668:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    966a:	2b00      	cmp	r3, #0
    966c:	d002      	beq.n	9674 <__locale_ctype_ptr+0x10>
    966e:	22ec      	movs	r2, #236	; 0xec
    9670:	5898      	ldr	r0, [r3, r2]
    9672:	4770      	bx	lr
    9674:	4b01      	ldr	r3, [pc, #4]	; (967c <__locale_ctype_ptr+0x18>)
    9676:	e7fa      	b.n	966e <__locale_ctype_ptr+0xa>
    9678:	20000098 	.word	0x20000098
    967c:	200004cc 	.word	0x200004cc

00009680 <__localeconv_l>:
    9680:	30f0      	adds	r0, #240	; 0xf0
    9682:	4770      	bx	lr

00009684 <_localeconv_r>:
    9684:	4b04      	ldr	r3, [pc, #16]	; (9698 <_localeconv_r+0x14>)
    9686:	681b      	ldr	r3, [r3, #0]
    9688:	6b58      	ldr	r0, [r3, #52]	; 0x34
    968a:	2800      	cmp	r0, #0
    968c:	d001      	beq.n	9692 <_localeconv_r+0xe>
    968e:	30f0      	adds	r0, #240	; 0xf0
    9690:	4770      	bx	lr
    9692:	4802      	ldr	r0, [pc, #8]	; (969c <_localeconv_r+0x18>)
    9694:	e7fb      	b.n	968e <_localeconv_r+0xa>
    9696:	46c0      	nop			; (mov r8, r8)
    9698:	20000098 	.word	0x20000098
    969c:	200004cc 	.word	0x200004cc

000096a0 <__retarget_lock_acquire_recursive>:
    96a0:	4770      	bx	lr
    96a2:	46c0      	nop			; (mov r8, r8)

000096a4 <__retarget_lock_release_recursive>:
    96a4:	4770      	bx	lr
    96a6:	46c0      	nop			; (mov r8, r8)

000096a8 <_malloc_r>:
    96a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    96aa:	4657      	mov	r7, sl
    96ac:	4645      	mov	r5, r8
    96ae:	46de      	mov	lr, fp
    96b0:	464e      	mov	r6, r9
    96b2:	b5e0      	push	{r5, r6, r7, lr}
    96b4:	000d      	movs	r5, r1
    96b6:	350b      	adds	r5, #11
    96b8:	b083      	sub	sp, #12
    96ba:	0007      	movs	r7, r0
    96bc:	2d16      	cmp	r5, #22
    96be:	d800      	bhi.n	96c2 <_malloc_r+0x1a>
    96c0:	e09f      	b.n	9802 <_malloc_r+0x15a>
    96c2:	2307      	movs	r3, #7
    96c4:	439d      	bics	r5, r3
    96c6:	d500      	bpl.n	96ca <_malloc_r+0x22>
    96c8:	e0c4      	b.n	9854 <_malloc_r+0x1ac>
    96ca:	42a9      	cmp	r1, r5
    96cc:	d900      	bls.n	96d0 <_malloc_r+0x28>
    96ce:	e0c1      	b.n	9854 <_malloc_r+0x1ac>
    96d0:	f000 fb8e 	bl	9df0 <__malloc_lock>
    96d4:	23f8      	movs	r3, #248	; 0xf8
    96d6:	33ff      	adds	r3, #255	; 0xff
    96d8:	429d      	cmp	r5, r3
    96da:	d800      	bhi.n	96de <_malloc_r+0x36>
    96dc:	e28f      	b.n	9bfe <_malloc_r+0x556>
    96de:	0a68      	lsrs	r0, r5, #9
    96e0:	d100      	bne.n	96e4 <_malloc_r+0x3c>
    96e2:	e0bb      	b.n	985c <_malloc_r+0x1b4>
    96e4:	2804      	cmp	r0, #4
    96e6:	d900      	bls.n	96ea <_malloc_r+0x42>
    96e8:	e162      	b.n	99b0 <_malloc_r+0x308>
    96ea:	2338      	movs	r3, #56	; 0x38
    96ec:	4698      	mov	r8, r3
    96ee:	09a8      	lsrs	r0, r5, #6
    96f0:	4480      	add	r8, r0
    96f2:	3039      	adds	r0, #57	; 0x39
    96f4:	00c1      	lsls	r1, r0, #3
    96f6:	4ed2      	ldr	r6, [pc, #840]	; (9a40 <_malloc_r+0x398>)
    96f8:	1871      	adds	r1, r6, r1
    96fa:	3908      	subs	r1, #8
    96fc:	68cc      	ldr	r4, [r1, #12]
    96fe:	42a1      	cmp	r1, r4
    9700:	d019      	beq.n	9736 <_malloc_r+0x8e>
    9702:	2303      	movs	r3, #3
    9704:	6862      	ldr	r2, [r4, #4]
    9706:	439a      	bics	r2, r3
    9708:	0013      	movs	r3, r2
    970a:	1b52      	subs	r2, r2, r5
    970c:	2a0f      	cmp	r2, #15
    970e:	dd00      	ble.n	9712 <_malloc_r+0x6a>
    9710:	e0aa      	b.n	9868 <_malloc_r+0x1c0>
    9712:	2a00      	cmp	r2, #0
    9714:	db00      	blt.n	9718 <_malloc_r+0x70>
    9716:	e088      	b.n	982a <_malloc_r+0x182>
    9718:	2303      	movs	r3, #3
    971a:	469c      	mov	ip, r3
    971c:	e008      	b.n	9730 <_malloc_r+0x88>
    971e:	4662      	mov	r2, ip
    9720:	6863      	ldr	r3, [r4, #4]
    9722:	4393      	bics	r3, r2
    9724:	1b5a      	subs	r2, r3, r5
    9726:	2a0f      	cmp	r2, #15
    9728:	dd00      	ble.n	972c <_malloc_r+0x84>
    972a:	e09d      	b.n	9868 <_malloc_r+0x1c0>
    972c:	2a00      	cmp	r2, #0
    972e:	da7c      	bge.n	982a <_malloc_r+0x182>
    9730:	68e4      	ldr	r4, [r4, #12]
    9732:	42a1      	cmp	r1, r4
    9734:	d1f3      	bne.n	971e <_malloc_r+0x76>
    9736:	0032      	movs	r2, r6
    9738:	6934      	ldr	r4, [r6, #16]
    973a:	3208      	adds	r2, #8
    973c:	4294      	cmp	r4, r2
    973e:	d100      	bne.n	9742 <_malloc_r+0x9a>
    9740:	e190      	b.n	9a64 <_malloc_r+0x3bc>
    9742:	2303      	movs	r3, #3
    9744:	6861      	ldr	r1, [r4, #4]
    9746:	4399      	bics	r1, r3
    9748:	4689      	mov	r9, r1
    974a:	1b49      	subs	r1, r1, r5
    974c:	290f      	cmp	r1, #15
    974e:	dd00      	ble.n	9752 <_malloc_r+0xaa>
    9750:	e162      	b.n	9a18 <_malloc_r+0x370>
    9752:	6172      	str	r2, [r6, #20]
    9754:	6132      	str	r2, [r6, #16]
    9756:	2900      	cmp	r1, #0
    9758:	db00      	blt.n	975c <_malloc_r+0xb4>
    975a:	e087      	b.n	986c <_malloc_r+0x1c4>
    975c:	4ab9      	ldr	r2, [pc, #740]	; (9a44 <_malloc_r+0x39c>)
    975e:	464b      	mov	r3, r9
    9760:	4591      	cmp	r9, r2
    9762:	d900      	bls.n	9766 <_malloc_r+0xbe>
    9764:	e130      	b.n	99c8 <_malloc_r+0x320>
    9766:	08db      	lsrs	r3, r3, #3
    9768:	3aff      	subs	r2, #255	; 0xff
    976a:	1099      	asrs	r1, r3, #2
    976c:	3aff      	subs	r2, #255	; 0xff
    976e:	408a      	lsls	r2, r1
    9770:	00db      	lsls	r3, r3, #3
    9772:	6871      	ldr	r1, [r6, #4]
    9774:	199b      	adds	r3, r3, r6
    9776:	430a      	orrs	r2, r1
    9778:	6899      	ldr	r1, [r3, #8]
    977a:	6072      	str	r2, [r6, #4]
    977c:	60e3      	str	r3, [r4, #12]
    977e:	60a1      	str	r1, [r4, #8]
    9780:	609c      	str	r4, [r3, #8]
    9782:	0013      	movs	r3, r2
    9784:	60cc      	str	r4, [r1, #12]
    9786:	2101      	movs	r1, #1
    9788:	1082      	asrs	r2, r0, #2
    978a:	4091      	lsls	r1, r2
    978c:	4299      	cmp	r1, r3
    978e:	d86f      	bhi.n	9870 <_malloc_r+0x1c8>
    9790:	420b      	tst	r3, r1
    9792:	d105      	bne.n	97a0 <_malloc_r+0xf8>
    9794:	2203      	movs	r2, #3
    9796:	4390      	bics	r0, r2
    9798:	0049      	lsls	r1, r1, #1
    979a:	3004      	adds	r0, #4
    979c:	420b      	tst	r3, r1
    979e:	d0fb      	beq.n	9798 <_malloc_r+0xf0>
    97a0:	2303      	movs	r3, #3
    97a2:	4698      	mov	r8, r3
    97a4:	00c3      	lsls	r3, r0, #3
    97a6:	4699      	mov	r9, r3
    97a8:	44b1      	add	r9, r6
    97aa:	46cc      	mov	ip, r9
    97ac:	4682      	mov	sl, r0
    97ae:	4663      	mov	r3, ip
    97b0:	68dc      	ldr	r4, [r3, #12]
    97b2:	45a4      	cmp	ip, r4
    97b4:	d107      	bne.n	97c6 <_malloc_r+0x11e>
    97b6:	e157      	b.n	9a68 <_malloc_r+0x3c0>
    97b8:	2a00      	cmp	r2, #0
    97ba:	db00      	blt.n	97be <_malloc_r+0x116>
    97bc:	e166      	b.n	9a8c <_malloc_r+0x3e4>
    97be:	68e4      	ldr	r4, [r4, #12]
    97c0:	45a4      	cmp	ip, r4
    97c2:	d100      	bne.n	97c6 <_malloc_r+0x11e>
    97c4:	e150      	b.n	9a68 <_malloc_r+0x3c0>
    97c6:	4642      	mov	r2, r8
    97c8:	6863      	ldr	r3, [r4, #4]
    97ca:	4393      	bics	r3, r2
    97cc:	1b5a      	subs	r2, r3, r5
    97ce:	2a0f      	cmp	r2, #15
    97d0:	ddf2      	ble.n	97b8 <_malloc_r+0x110>
    97d2:	2001      	movs	r0, #1
    97d4:	4680      	mov	r8, r0
    97d6:	1961      	adds	r1, r4, r5
    97d8:	4305      	orrs	r5, r0
    97da:	6065      	str	r5, [r4, #4]
    97dc:	68a0      	ldr	r0, [r4, #8]
    97de:	68e5      	ldr	r5, [r4, #12]
    97e0:	3608      	adds	r6, #8
    97e2:	60c5      	str	r5, [r0, #12]
    97e4:	60a8      	str	r0, [r5, #8]
    97e6:	4640      	mov	r0, r8
    97e8:	60f1      	str	r1, [r6, #12]
    97ea:	60b1      	str	r1, [r6, #8]
    97ec:	4310      	orrs	r0, r2
    97ee:	6048      	str	r0, [r1, #4]
    97f0:	60ce      	str	r6, [r1, #12]
    97f2:	608e      	str	r6, [r1, #8]
    97f4:	0038      	movs	r0, r7
    97f6:	50e2      	str	r2, [r4, r3]
    97f8:	f000 fb02 	bl	9e00 <__malloc_unlock>
    97fc:	0020      	movs	r0, r4
    97fe:	3008      	adds	r0, #8
    9800:	e021      	b.n	9846 <_malloc_r+0x19e>
    9802:	2910      	cmp	r1, #16
    9804:	d826      	bhi.n	9854 <_malloc_r+0x1ac>
    9806:	0038      	movs	r0, r7
    9808:	f000 faf2 	bl	9df0 <__malloc_lock>
    980c:	2510      	movs	r5, #16
    980e:	2318      	movs	r3, #24
    9810:	2002      	movs	r0, #2
    9812:	4e8b      	ldr	r6, [pc, #556]	; (9a40 <_malloc_r+0x398>)
    9814:	18f3      	adds	r3, r6, r3
    9816:	001a      	movs	r2, r3
    9818:	685c      	ldr	r4, [r3, #4]
    981a:	3a08      	subs	r2, #8
    981c:	4294      	cmp	r4, r2
    981e:	d100      	bne.n	9822 <_malloc_r+0x17a>
    9820:	e12e      	b.n	9a80 <_malloc_r+0x3d8>
    9822:	2303      	movs	r3, #3
    9824:	6862      	ldr	r2, [r4, #4]
    9826:	439a      	bics	r2, r3
    9828:	0013      	movs	r3, r2
    982a:	68e2      	ldr	r2, [r4, #12]
    982c:	68a1      	ldr	r1, [r4, #8]
    982e:	60ca      	str	r2, [r1, #12]
    9830:	6091      	str	r1, [r2, #8]
    9832:	2201      	movs	r2, #1
    9834:	18e3      	adds	r3, r4, r3
    9836:	6859      	ldr	r1, [r3, #4]
    9838:	0038      	movs	r0, r7
    983a:	430a      	orrs	r2, r1
    983c:	605a      	str	r2, [r3, #4]
    983e:	f000 fadf 	bl	9e00 <__malloc_unlock>
    9842:	0020      	movs	r0, r4
    9844:	3008      	adds	r0, #8
    9846:	b003      	add	sp, #12
    9848:	bc3c      	pop	{r2, r3, r4, r5}
    984a:	4690      	mov	r8, r2
    984c:	4699      	mov	r9, r3
    984e:	46a2      	mov	sl, r4
    9850:	46ab      	mov	fp, r5
    9852:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9854:	230c      	movs	r3, #12
    9856:	2000      	movs	r0, #0
    9858:	603b      	str	r3, [r7, #0]
    985a:	e7f4      	b.n	9846 <_malloc_r+0x19e>
    985c:	2180      	movs	r1, #128	; 0x80
    985e:	233f      	movs	r3, #63	; 0x3f
    9860:	2040      	movs	r0, #64	; 0x40
    9862:	0089      	lsls	r1, r1, #2
    9864:	4698      	mov	r8, r3
    9866:	e746      	b.n	96f6 <_malloc_r+0x4e>
    9868:	4640      	mov	r0, r8
    986a:	e764      	b.n	9736 <_malloc_r+0x8e>
    986c:	464b      	mov	r3, r9
    986e:	e7e0      	b.n	9832 <_malloc_r+0x18a>
    9870:	2303      	movs	r3, #3
    9872:	68b4      	ldr	r4, [r6, #8]
    9874:	6862      	ldr	r2, [r4, #4]
    9876:	439a      	bics	r2, r3
    9878:	4690      	mov	r8, r2
    987a:	42aa      	cmp	r2, r5
    987c:	d303      	bcc.n	9886 <_malloc_r+0x1de>
    987e:	1b53      	subs	r3, r2, r5
    9880:	2b0f      	cmp	r3, #15
    9882:	dd00      	ble.n	9886 <_malloc_r+0x1de>
    9884:	e086      	b.n	9994 <_malloc_r+0x2ec>
    9886:	0023      	movs	r3, r4
    9888:	4443      	add	r3, r8
    988a:	4a6f      	ldr	r2, [pc, #444]	; (9a48 <_malloc_r+0x3a0>)
    988c:	9301      	str	r3, [sp, #4]
    988e:	4b6f      	ldr	r3, [pc, #444]	; (9a4c <_malloc_r+0x3a4>)
    9890:	4693      	mov	fp, r2
    9892:	681b      	ldr	r3, [r3, #0]
    9894:	6812      	ldr	r2, [r2, #0]
    9896:	18eb      	adds	r3, r5, r3
    9898:	3201      	adds	r2, #1
    989a:	d100      	bne.n	989e <_malloc_r+0x1f6>
    989c:	e168      	b.n	9b70 <_malloc_r+0x4c8>
    989e:	4a6c      	ldr	r2, [pc, #432]	; (9a50 <_malloc_r+0x3a8>)
    98a0:	4694      	mov	ip, r2
    98a2:	4463      	add	r3, ip
    98a4:	0b1b      	lsrs	r3, r3, #12
    98a6:	031b      	lsls	r3, r3, #12
    98a8:	9300      	str	r3, [sp, #0]
    98aa:	9900      	ldr	r1, [sp, #0]
    98ac:	0038      	movs	r0, r7
    98ae:	f000 ff5d 	bl	a76c <_sbrk_r>
    98b2:	0003      	movs	r3, r0
    98b4:	4681      	mov	r9, r0
    98b6:	3301      	adds	r3, #1
    98b8:	d061      	beq.n	997e <_malloc_r+0x2d6>
    98ba:	9b01      	ldr	r3, [sp, #4]
    98bc:	4283      	cmp	r3, r0
    98be:	d900      	bls.n	98c2 <_malloc_r+0x21a>
    98c0:	e0ff      	b.n	9ac2 <_malloc_r+0x41a>
    98c2:	4b64      	ldr	r3, [pc, #400]	; (9a54 <_malloc_r+0x3ac>)
    98c4:	9a00      	ldr	r2, [sp, #0]
    98c6:	469a      	mov	sl, r3
    98c8:	681b      	ldr	r3, [r3, #0]
    98ca:	469c      	mov	ip, r3
    98cc:	4653      	mov	r3, sl
    98ce:	4462      	add	r2, ip
    98d0:	601a      	str	r2, [r3, #0]
    98d2:	9b01      	ldr	r3, [sp, #4]
    98d4:	0011      	movs	r1, r2
    98d6:	4283      	cmp	r3, r0
    98d8:	d100      	bne.n	98dc <_malloc_r+0x234>
    98da:	e155      	b.n	9b88 <_malloc_r+0x4e0>
    98dc:	465b      	mov	r3, fp
    98de:	681b      	ldr	r3, [r3, #0]
    98e0:	3301      	adds	r3, #1
    98e2:	d100      	bne.n	98e6 <_malloc_r+0x23e>
    98e4:	e16c      	b.n	9bc0 <_malloc_r+0x518>
    98e6:	464b      	mov	r3, r9
    98e8:	9a01      	ldr	r2, [sp, #4]
    98ea:	1a9b      	subs	r3, r3, r2
    98ec:	1859      	adds	r1, r3, r1
    98ee:	4653      	mov	r3, sl
    98f0:	6019      	str	r1, [r3, #0]
    98f2:	2307      	movs	r3, #7
    98f4:	464a      	mov	r2, r9
    98f6:	4013      	ands	r3, r2
    98f8:	d100      	bne.n	98fc <_malloc_r+0x254>
    98fa:	e124      	b.n	9b46 <_malloc_r+0x49e>
    98fc:	2108      	movs	r1, #8
    98fe:	4689      	mov	r9, r1
    9900:	4955      	ldr	r1, [pc, #340]	; (9a58 <_malloc_r+0x3b0>)
    9902:	1ad2      	subs	r2, r2, r3
    9904:	4491      	add	r9, r2
    9906:	1acb      	subs	r3, r1, r3
    9908:	9a00      	ldr	r2, [sp, #0]
    990a:	0038      	movs	r0, r7
    990c:	444a      	add	r2, r9
    990e:	0511      	lsls	r1, r2, #20
    9910:	0d09      	lsrs	r1, r1, #20
    9912:	1a5b      	subs	r3, r3, r1
    9914:	0019      	movs	r1, r3
    9916:	469b      	mov	fp, r3
    9918:	f000 ff28 	bl	a76c <_sbrk_r>
    991c:	1c43      	adds	r3, r0, #1
    991e:	d100      	bne.n	9922 <_malloc_r+0x27a>
    9920:	e142      	b.n	9ba8 <_malloc_r+0x500>
    9922:	464b      	mov	r3, r9
    9924:	1ac0      	subs	r0, r0, r3
    9926:	2301      	movs	r3, #1
    9928:	4458      	add	r0, fp
    992a:	4318      	orrs	r0, r3
    992c:	4653      	mov	r3, sl
    992e:	681b      	ldr	r3, [r3, #0]
    9930:	445b      	add	r3, fp
    9932:	0019      	movs	r1, r3
    9934:	4653      	mov	r3, sl
    9936:	6019      	str	r1, [r3, #0]
    9938:	464b      	mov	r3, r9
    993a:	60b3      	str	r3, [r6, #8]
    993c:	6058      	str	r0, [r3, #4]
    993e:	42b4      	cmp	r4, r6
    9940:	d013      	beq.n	996a <_malloc_r+0x2c2>
    9942:	4643      	mov	r3, r8
    9944:	2b0f      	cmp	r3, #15
    9946:	d800      	bhi.n	994a <_malloc_r+0x2a2>
    9948:	e0e8      	b.n	9b1c <_malloc_r+0x474>
    994a:	4643      	mov	r3, r8
    994c:	2207      	movs	r2, #7
    994e:	6860      	ldr	r0, [r4, #4]
    9950:	3b0c      	subs	r3, #12
    9952:	4393      	bics	r3, r2
    9954:	3a06      	subs	r2, #6
    9956:	4002      	ands	r2, r0
    9958:	2005      	movs	r0, #5
    995a:	431a      	orrs	r2, r3
    995c:	6062      	str	r2, [r4, #4]
    995e:	18e2      	adds	r2, r4, r3
    9960:	6050      	str	r0, [r2, #4]
    9962:	6090      	str	r0, [r2, #8]
    9964:	2b0f      	cmp	r3, #15
    9966:	d900      	bls.n	996a <_malloc_r+0x2c2>
    9968:	e122      	b.n	9bb0 <_malloc_r+0x508>
    996a:	4b3c      	ldr	r3, [pc, #240]	; (9a5c <_malloc_r+0x3b4>)
    996c:	681a      	ldr	r2, [r3, #0]
    996e:	4291      	cmp	r1, r2
    9970:	d900      	bls.n	9974 <_malloc_r+0x2cc>
    9972:	6019      	str	r1, [r3, #0]
    9974:	4b3a      	ldr	r3, [pc, #232]	; (9a60 <_malloc_r+0x3b8>)
    9976:	681a      	ldr	r2, [r3, #0]
    9978:	4291      	cmp	r1, r2
    997a:	d900      	bls.n	997e <_malloc_r+0x2d6>
    997c:	6019      	str	r1, [r3, #0]
    997e:	2303      	movs	r3, #3
    9980:	68b4      	ldr	r4, [r6, #8]
    9982:	6862      	ldr	r2, [r4, #4]
    9984:	439a      	bics	r2, r3
    9986:	1b53      	subs	r3, r2, r5
    9988:	4295      	cmp	r5, r2
    998a:	d900      	bls.n	998e <_malloc_r+0x2e6>
    998c:	e0c9      	b.n	9b22 <_malloc_r+0x47a>
    998e:	2b0f      	cmp	r3, #15
    9990:	dc00      	bgt.n	9994 <_malloc_r+0x2ec>
    9992:	e0c6      	b.n	9b22 <_malloc_r+0x47a>
    9994:	2201      	movs	r2, #1
    9996:	0029      	movs	r1, r5
    9998:	4313      	orrs	r3, r2
    999a:	4311      	orrs	r1, r2
    999c:	1965      	adds	r5, r4, r5
    999e:	6061      	str	r1, [r4, #4]
    99a0:	0038      	movs	r0, r7
    99a2:	60b5      	str	r5, [r6, #8]
    99a4:	606b      	str	r3, [r5, #4]
    99a6:	f000 fa2b 	bl	9e00 <__malloc_unlock>
    99aa:	0020      	movs	r0, r4
    99ac:	3008      	adds	r0, #8
    99ae:	e74a      	b.n	9846 <_malloc_r+0x19e>
    99b0:	2814      	cmp	r0, #20
    99b2:	d97a      	bls.n	9aaa <_malloc_r+0x402>
    99b4:	2854      	cmp	r0, #84	; 0x54
    99b6:	d900      	bls.n	99ba <_malloc_r+0x312>
    99b8:	e0ba      	b.n	9b30 <_malloc_r+0x488>
    99ba:	236e      	movs	r3, #110	; 0x6e
    99bc:	4698      	mov	r8, r3
    99be:	0b28      	lsrs	r0, r5, #12
    99c0:	4480      	add	r8, r0
    99c2:	306f      	adds	r0, #111	; 0x6f
    99c4:	00c1      	lsls	r1, r0, #3
    99c6:	e696      	b.n	96f6 <_malloc_r+0x4e>
    99c8:	0a5a      	lsrs	r2, r3, #9
    99ca:	2a04      	cmp	r2, #4
    99cc:	d973      	bls.n	9ab6 <_malloc_r+0x40e>
    99ce:	2a14      	cmp	r2, #20
    99d0:	d900      	bls.n	99d4 <_malloc_r+0x32c>
    99d2:	e0d0      	b.n	9b76 <_malloc_r+0x4ce>
    99d4:	0011      	movs	r1, r2
    99d6:	325c      	adds	r2, #92	; 0x5c
    99d8:	315b      	adds	r1, #91	; 0x5b
    99da:	00d2      	lsls	r2, r2, #3
    99dc:	2308      	movs	r3, #8
    99de:	425b      	negs	r3, r3
    99e0:	469c      	mov	ip, r3
    99e2:	18b2      	adds	r2, r6, r2
    99e4:	4494      	add	ip, r2
    99e6:	4663      	mov	r3, ip
    99e8:	689a      	ldr	r2, [r3, #8]
    99ea:	2303      	movs	r3, #3
    99ec:	4698      	mov	r8, r3
    99ee:	4594      	cmp	ip, r2
    99f0:	d100      	bne.n	99f4 <_malloc_r+0x34c>
    99f2:	e0ab      	b.n	9b4c <_malloc_r+0x4a4>
    99f4:	4643      	mov	r3, r8
    99f6:	6851      	ldr	r1, [r2, #4]
    99f8:	4399      	bics	r1, r3
    99fa:	4589      	cmp	r9, r1
    99fc:	d300      	bcc.n	9a00 <_malloc_r+0x358>
    99fe:	e095      	b.n	9b2c <_malloc_r+0x484>
    9a00:	6892      	ldr	r2, [r2, #8]
    9a02:	4594      	cmp	ip, r2
    9a04:	d1f6      	bne.n	99f4 <_malloc_r+0x34c>
    9a06:	4663      	mov	r3, ip
    9a08:	68da      	ldr	r2, [r3, #12]
    9a0a:	6873      	ldr	r3, [r6, #4]
    9a0c:	4661      	mov	r1, ip
    9a0e:	60e2      	str	r2, [r4, #12]
    9a10:	60a1      	str	r1, [r4, #8]
    9a12:	6094      	str	r4, [r2, #8]
    9a14:	60cc      	str	r4, [r1, #12]
    9a16:	e6b6      	b.n	9786 <_malloc_r+0xde>
    9a18:	2301      	movs	r3, #1
    9a1a:	1960      	adds	r0, r4, r5
    9a1c:	431d      	orrs	r5, r3
    9a1e:	6065      	str	r5, [r4, #4]
    9a20:	6170      	str	r0, [r6, #20]
    9a22:	6130      	str	r0, [r6, #16]
    9a24:	60c2      	str	r2, [r0, #12]
    9a26:	6082      	str	r2, [r0, #8]
    9a28:	001a      	movs	r2, r3
    9a2a:	464b      	mov	r3, r9
    9a2c:	430a      	orrs	r2, r1
    9a2e:	6042      	str	r2, [r0, #4]
    9a30:	0038      	movs	r0, r7
    9a32:	50e1      	str	r1, [r4, r3]
    9a34:	f000 f9e4 	bl	9e00 <__malloc_unlock>
    9a38:	0020      	movs	r0, r4
    9a3a:	3008      	adds	r0, #8
    9a3c:	e703      	b.n	9846 <_malloc_r+0x19e>
    9a3e:	46c0      	nop			; (mov r8, r8)
    9a40:	20000638 	.word	0x20000638
    9a44:	000001ff 	.word	0x000001ff
    9a48:	20000a40 	.word	0x20000a40
    9a4c:	20000af8 	.word	0x20000af8
    9a50:	0000100f 	.word	0x0000100f
    9a54:	20000ac8 	.word	0x20000ac8
    9a58:	00001008 	.word	0x00001008
    9a5c:	20000af0 	.word	0x20000af0
    9a60:	20000af4 	.word	0x20000af4
    9a64:	6873      	ldr	r3, [r6, #4]
    9a66:	e68e      	b.n	9786 <_malloc_r+0xde>
    9a68:	2308      	movs	r3, #8
    9a6a:	469b      	mov	fp, r3
    9a6c:	3b07      	subs	r3, #7
    9a6e:	44dc      	add	ip, fp
    9a70:	469b      	mov	fp, r3
    9a72:	44da      	add	sl, fp
    9a74:	4643      	mov	r3, r8
    9a76:	4652      	mov	r2, sl
    9a78:	4213      	tst	r3, r2
    9a7a:	d000      	beq.n	9a7e <_malloc_r+0x3d6>
    9a7c:	e697      	b.n	97ae <_malloc_r+0x106>
    9a7e:	e037      	b.n	9af0 <_malloc_r+0x448>
    9a80:	68dc      	ldr	r4, [r3, #12]
    9a82:	3002      	adds	r0, #2
    9a84:	42a3      	cmp	r3, r4
    9a86:	d100      	bne.n	9a8a <_malloc_r+0x3e2>
    9a88:	e655      	b.n	9736 <_malloc_r+0x8e>
    9a8a:	e6ca      	b.n	9822 <_malloc_r+0x17a>
    9a8c:	2201      	movs	r2, #1
    9a8e:	18e3      	adds	r3, r4, r3
    9a90:	6859      	ldr	r1, [r3, #4]
    9a92:	0038      	movs	r0, r7
    9a94:	430a      	orrs	r2, r1
    9a96:	605a      	str	r2, [r3, #4]
    9a98:	68e3      	ldr	r3, [r4, #12]
    9a9a:	68a2      	ldr	r2, [r4, #8]
    9a9c:	60d3      	str	r3, [r2, #12]
    9a9e:	609a      	str	r2, [r3, #8]
    9aa0:	f000 f9ae 	bl	9e00 <__malloc_unlock>
    9aa4:	0020      	movs	r0, r4
    9aa6:	3008      	adds	r0, #8
    9aa8:	e6cd      	b.n	9846 <_malloc_r+0x19e>
    9aaa:	235b      	movs	r3, #91	; 0x5b
    9aac:	4698      	mov	r8, r3
    9aae:	4480      	add	r8, r0
    9ab0:	305c      	adds	r0, #92	; 0x5c
    9ab2:	00c1      	lsls	r1, r0, #3
    9ab4:	e61f      	b.n	96f6 <_malloc_r+0x4e>
    9ab6:	099a      	lsrs	r2, r3, #6
    9ab8:	0011      	movs	r1, r2
    9aba:	3239      	adds	r2, #57	; 0x39
    9abc:	3138      	adds	r1, #56	; 0x38
    9abe:	00d2      	lsls	r2, r2, #3
    9ac0:	e78c      	b.n	99dc <_malloc_r+0x334>
    9ac2:	42b4      	cmp	r4, r6
    9ac4:	d000      	beq.n	9ac8 <_malloc_r+0x420>
    9ac6:	e75a      	b.n	997e <_malloc_r+0x2d6>
    9ac8:	4b4f      	ldr	r3, [pc, #316]	; (9c08 <_malloc_r+0x560>)
    9aca:	9a00      	ldr	r2, [sp, #0]
    9acc:	469a      	mov	sl, r3
    9ace:	681b      	ldr	r3, [r3, #0]
    9ad0:	469c      	mov	ip, r3
    9ad2:	4653      	mov	r3, sl
    9ad4:	4462      	add	r2, ip
    9ad6:	0011      	movs	r1, r2
    9ad8:	601a      	str	r2, [r3, #0]
    9ada:	e6ff      	b.n	98dc <_malloc_r+0x234>
    9adc:	2308      	movs	r3, #8
    9ade:	425b      	negs	r3, r3
    9ae0:	469c      	mov	ip, r3
    9ae2:	44e1      	add	r9, ip
    9ae4:	464b      	mov	r3, r9
    9ae6:	689b      	ldr	r3, [r3, #8]
    9ae8:	3801      	subs	r0, #1
    9aea:	4599      	cmp	r9, r3
    9aec:	d000      	beq.n	9af0 <_malloc_r+0x448>
    9aee:	e084      	b.n	9bfa <_malloc_r+0x552>
    9af0:	4643      	mov	r3, r8
    9af2:	4203      	tst	r3, r0
    9af4:	d1f2      	bne.n	9adc <_malloc_r+0x434>
    9af6:	6873      	ldr	r3, [r6, #4]
    9af8:	438b      	bics	r3, r1
    9afa:	6073      	str	r3, [r6, #4]
    9afc:	0049      	lsls	r1, r1, #1
    9afe:	4299      	cmp	r1, r3
    9b00:	d900      	bls.n	9b04 <_malloc_r+0x45c>
    9b02:	e6b5      	b.n	9870 <_malloc_r+0x1c8>
    9b04:	2900      	cmp	r1, #0
    9b06:	d100      	bne.n	9b0a <_malloc_r+0x462>
    9b08:	e6b2      	b.n	9870 <_malloc_r+0x1c8>
    9b0a:	4650      	mov	r0, sl
    9b0c:	420b      	tst	r3, r1
    9b0e:	d000      	beq.n	9b12 <_malloc_r+0x46a>
    9b10:	e648      	b.n	97a4 <_malloc_r+0xfc>
    9b12:	0049      	lsls	r1, r1, #1
    9b14:	3004      	adds	r0, #4
    9b16:	420b      	tst	r3, r1
    9b18:	d0fb      	beq.n	9b12 <_malloc_r+0x46a>
    9b1a:	e643      	b.n	97a4 <_malloc_r+0xfc>
    9b1c:	2301      	movs	r3, #1
    9b1e:	464a      	mov	r2, r9
    9b20:	6053      	str	r3, [r2, #4]
    9b22:	0038      	movs	r0, r7
    9b24:	f000 f96c 	bl	9e00 <__malloc_unlock>
    9b28:	2000      	movs	r0, #0
    9b2a:	e68c      	b.n	9846 <_malloc_r+0x19e>
    9b2c:	4694      	mov	ip, r2
    9b2e:	e76a      	b.n	9a06 <_malloc_r+0x35e>
    9b30:	23aa      	movs	r3, #170	; 0xaa
    9b32:	005b      	lsls	r3, r3, #1
    9b34:	4298      	cmp	r0, r3
    9b36:	d811      	bhi.n	9b5c <_malloc_r+0x4b4>
    9b38:	3bdd      	subs	r3, #221	; 0xdd
    9b3a:	4698      	mov	r8, r3
    9b3c:	0be8      	lsrs	r0, r5, #15
    9b3e:	4480      	add	r8, r0
    9b40:	3078      	adds	r0, #120	; 0x78
    9b42:	00c1      	lsls	r1, r0, #3
    9b44:	e5d7      	b.n	96f6 <_malloc_r+0x4e>
    9b46:	2380      	movs	r3, #128	; 0x80
    9b48:	015b      	lsls	r3, r3, #5
    9b4a:	e6dd      	b.n	9908 <_malloc_r+0x260>
    9b4c:	1089      	asrs	r1, r1, #2
    9b4e:	3b02      	subs	r3, #2
    9b50:	408b      	lsls	r3, r1
    9b52:	6872      	ldr	r2, [r6, #4]
    9b54:	4313      	orrs	r3, r2
    9b56:	6073      	str	r3, [r6, #4]
    9b58:	4662      	mov	r2, ip
    9b5a:	e757      	b.n	9a0c <_malloc_r+0x364>
    9b5c:	4b2b      	ldr	r3, [pc, #172]	; (9c0c <_malloc_r+0x564>)
    9b5e:	4298      	cmp	r0, r3
    9b60:	d81c      	bhi.n	9b9c <_malloc_r+0x4f4>
    9b62:	237c      	movs	r3, #124	; 0x7c
    9b64:	4698      	mov	r8, r3
    9b66:	0ca8      	lsrs	r0, r5, #18
    9b68:	4480      	add	r8, r0
    9b6a:	307d      	adds	r0, #125	; 0x7d
    9b6c:	00c1      	lsls	r1, r0, #3
    9b6e:	e5c2      	b.n	96f6 <_malloc_r+0x4e>
    9b70:	3310      	adds	r3, #16
    9b72:	9300      	str	r3, [sp, #0]
    9b74:	e699      	b.n	98aa <_malloc_r+0x202>
    9b76:	2a54      	cmp	r2, #84	; 0x54
    9b78:	d826      	bhi.n	9bc8 <_malloc_r+0x520>
    9b7a:	464b      	mov	r3, r9
    9b7c:	0b1a      	lsrs	r2, r3, #12
    9b7e:	0011      	movs	r1, r2
    9b80:	326f      	adds	r2, #111	; 0x6f
    9b82:	316e      	adds	r1, #110	; 0x6e
    9b84:	00d2      	lsls	r2, r2, #3
    9b86:	e729      	b.n	99dc <_malloc_r+0x334>
    9b88:	051b      	lsls	r3, r3, #20
    9b8a:	d000      	beq.n	9b8e <_malloc_r+0x4e6>
    9b8c:	e6a6      	b.n	98dc <_malloc_r+0x234>
    9b8e:	2001      	movs	r0, #1
    9b90:	9b00      	ldr	r3, [sp, #0]
    9b92:	68b2      	ldr	r2, [r6, #8]
    9b94:	4443      	add	r3, r8
    9b96:	4303      	orrs	r3, r0
    9b98:	6053      	str	r3, [r2, #4]
    9b9a:	e6e6      	b.n	996a <_malloc_r+0x2c2>
    9b9c:	21fe      	movs	r1, #254	; 0xfe
    9b9e:	237e      	movs	r3, #126	; 0x7e
    9ba0:	207f      	movs	r0, #127	; 0x7f
    9ba2:	0089      	lsls	r1, r1, #2
    9ba4:	4698      	mov	r8, r3
    9ba6:	e5a6      	b.n	96f6 <_malloc_r+0x4e>
    9ba8:	2300      	movs	r3, #0
    9baa:	2001      	movs	r0, #1
    9bac:	469b      	mov	fp, r3
    9bae:	e6bd      	b.n	992c <_malloc_r+0x284>
    9bb0:	0021      	movs	r1, r4
    9bb2:	0038      	movs	r0, r7
    9bb4:	3108      	adds	r1, #8
    9bb6:	f7ff fc57 	bl	9468 <_free_r>
    9bba:	4653      	mov	r3, sl
    9bbc:	6819      	ldr	r1, [r3, #0]
    9bbe:	e6d4      	b.n	996a <_malloc_r+0x2c2>
    9bc0:	465b      	mov	r3, fp
    9bc2:	464a      	mov	r2, r9
    9bc4:	601a      	str	r2, [r3, #0]
    9bc6:	e694      	b.n	98f2 <_malloc_r+0x24a>
    9bc8:	21aa      	movs	r1, #170	; 0xaa
    9bca:	0049      	lsls	r1, r1, #1
    9bcc:	428a      	cmp	r2, r1
    9bce:	d806      	bhi.n	9bde <_malloc_r+0x536>
    9bd0:	464b      	mov	r3, r9
    9bd2:	0bda      	lsrs	r2, r3, #15
    9bd4:	0011      	movs	r1, r2
    9bd6:	3278      	adds	r2, #120	; 0x78
    9bd8:	3177      	adds	r1, #119	; 0x77
    9bda:	00d2      	lsls	r2, r2, #3
    9bdc:	e6fe      	b.n	99dc <_malloc_r+0x334>
    9bde:	490b      	ldr	r1, [pc, #44]	; (9c0c <_malloc_r+0x564>)
    9be0:	428a      	cmp	r2, r1
    9be2:	d806      	bhi.n	9bf2 <_malloc_r+0x54a>
    9be4:	464b      	mov	r3, r9
    9be6:	0c9a      	lsrs	r2, r3, #18
    9be8:	0011      	movs	r1, r2
    9bea:	327d      	adds	r2, #125	; 0x7d
    9bec:	317c      	adds	r1, #124	; 0x7c
    9bee:	00d2      	lsls	r2, r2, #3
    9bf0:	e6f4      	b.n	99dc <_malloc_r+0x334>
    9bf2:	22fe      	movs	r2, #254	; 0xfe
    9bf4:	217e      	movs	r1, #126	; 0x7e
    9bf6:	0092      	lsls	r2, r2, #2
    9bf8:	e6f0      	b.n	99dc <_malloc_r+0x334>
    9bfa:	6873      	ldr	r3, [r6, #4]
    9bfc:	e77e      	b.n	9afc <_malloc_r+0x454>
    9bfe:	002b      	movs	r3, r5
    9c00:	08e8      	lsrs	r0, r5, #3
    9c02:	3308      	adds	r3, #8
    9c04:	e605      	b.n	9812 <_malloc_r+0x16a>
    9c06:	46c0      	nop			; (mov r8, r8)
    9c08:	20000ac8 	.word	0x20000ac8
    9c0c:	00000554 	.word	0x00000554

00009c10 <_mbrtowc_r>:
    9c10:	b530      	push	{r4, r5, lr}
    9c12:	0004      	movs	r4, r0
    9c14:	b083      	sub	sp, #12
    9c16:	2a00      	cmp	r2, #0
    9c18:	d013      	beq.n	9c42 <_mbrtowc_r+0x32>
    9c1a:	4813      	ldr	r0, [pc, #76]	; (9c68 <_mbrtowc_r+0x58>)
    9c1c:	6800      	ldr	r0, [r0, #0]
    9c1e:	6b40      	ldr	r0, [r0, #52]	; 0x34
    9c20:	2800      	cmp	r0, #0
    9c22:	d01d      	beq.n	9c60 <_mbrtowc_r+0x50>
    9c24:	9d06      	ldr	r5, [sp, #24]
    9c26:	9500      	str	r5, [sp, #0]
    9c28:	25e4      	movs	r5, #228	; 0xe4
    9c2a:	5945      	ldr	r5, [r0, r5]
    9c2c:	0020      	movs	r0, r4
    9c2e:	47a8      	blx	r5
    9c30:	1c43      	adds	r3, r0, #1
    9c32:	d104      	bne.n	9c3e <_mbrtowc_r+0x2e>
    9c34:	2300      	movs	r3, #0
    9c36:	9a06      	ldr	r2, [sp, #24]
    9c38:	6013      	str	r3, [r2, #0]
    9c3a:	338a      	adds	r3, #138	; 0x8a
    9c3c:	6023      	str	r3, [r4, #0]
    9c3e:	b003      	add	sp, #12
    9c40:	bd30      	pop	{r4, r5, pc}
    9c42:	4b09      	ldr	r3, [pc, #36]	; (9c68 <_mbrtowc_r+0x58>)
    9c44:	681b      	ldr	r3, [r3, #0]
    9c46:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9c48:	2b00      	cmp	r3, #0
    9c4a:	d00b      	beq.n	9c64 <_mbrtowc_r+0x54>
    9c4c:	9a06      	ldr	r2, [sp, #24]
    9c4e:	2100      	movs	r1, #0
    9c50:	9200      	str	r2, [sp, #0]
    9c52:	22e4      	movs	r2, #228	; 0xe4
    9c54:	0020      	movs	r0, r4
    9c56:	589d      	ldr	r5, [r3, r2]
    9c58:	2301      	movs	r3, #1
    9c5a:	4a04      	ldr	r2, [pc, #16]	; (9c6c <_mbrtowc_r+0x5c>)
    9c5c:	47a8      	blx	r5
    9c5e:	e7e7      	b.n	9c30 <_mbrtowc_r+0x20>
    9c60:	4803      	ldr	r0, [pc, #12]	; (9c70 <_mbrtowc_r+0x60>)
    9c62:	e7df      	b.n	9c24 <_mbrtowc_r+0x14>
    9c64:	4b02      	ldr	r3, [pc, #8]	; (9c70 <_mbrtowc_r+0x60>)
    9c66:	e7f1      	b.n	9c4c <_mbrtowc_r+0x3c>
    9c68:	20000098 	.word	0x20000098
    9c6c:	0000edfc 	.word	0x0000edfc
    9c70:	200004cc 	.word	0x200004cc

00009c74 <__ascii_mbtowc>:
    9c74:	b082      	sub	sp, #8
    9c76:	2900      	cmp	r1, #0
    9c78:	d00a      	beq.n	9c90 <__ascii_mbtowc+0x1c>
    9c7a:	2a00      	cmp	r2, #0
    9c7c:	d00b      	beq.n	9c96 <__ascii_mbtowc+0x22>
    9c7e:	2b00      	cmp	r3, #0
    9c80:	d00b      	beq.n	9c9a <__ascii_mbtowc+0x26>
    9c82:	7813      	ldrb	r3, [r2, #0]
    9c84:	600b      	str	r3, [r1, #0]
    9c86:	7810      	ldrb	r0, [r2, #0]
    9c88:	1e43      	subs	r3, r0, #1
    9c8a:	4198      	sbcs	r0, r3
    9c8c:	b002      	add	sp, #8
    9c8e:	4770      	bx	lr
    9c90:	a901      	add	r1, sp, #4
    9c92:	2a00      	cmp	r2, #0
    9c94:	d1f3      	bne.n	9c7e <__ascii_mbtowc+0xa>
    9c96:	2000      	movs	r0, #0
    9c98:	e7f8      	b.n	9c8c <__ascii_mbtowc+0x18>
    9c9a:	2002      	movs	r0, #2
    9c9c:	4240      	negs	r0, r0
    9c9e:	e7f5      	b.n	9c8c <__ascii_mbtowc+0x18>

00009ca0 <memchr>:
    9ca0:	b570      	push	{r4, r5, r6, lr}
    9ca2:	b2cd      	uxtb	r5, r1
    9ca4:	0783      	lsls	r3, r0, #30
    9ca6:	d034      	beq.n	9d12 <memchr+0x72>
    9ca8:	1e54      	subs	r4, r2, #1
    9caa:	2a00      	cmp	r2, #0
    9cac:	d01b      	beq.n	9ce6 <memchr+0x46>
    9cae:	7803      	ldrb	r3, [r0, #0]
    9cb0:	42ab      	cmp	r3, r5
    9cb2:	d019      	beq.n	9ce8 <memchr+0x48>
    9cb4:	2203      	movs	r2, #3
    9cb6:	e004      	b.n	9cc2 <memchr+0x22>
    9cb8:	3c01      	subs	r4, #1
    9cba:	d314      	bcc.n	9ce6 <memchr+0x46>
    9cbc:	7803      	ldrb	r3, [r0, #0]
    9cbe:	42ab      	cmp	r3, r5
    9cc0:	d012      	beq.n	9ce8 <memchr+0x48>
    9cc2:	3001      	adds	r0, #1
    9cc4:	4210      	tst	r0, r2
    9cc6:	d1f7      	bne.n	9cb8 <memchr+0x18>
    9cc8:	2c03      	cmp	r4, #3
    9cca:	d80e      	bhi.n	9cea <memchr+0x4a>
    9ccc:	2c00      	cmp	r4, #0
    9cce:	d00a      	beq.n	9ce6 <memchr+0x46>
    9cd0:	7803      	ldrb	r3, [r0, #0]
    9cd2:	42ab      	cmp	r3, r5
    9cd4:	d008      	beq.n	9ce8 <memchr+0x48>
    9cd6:	1904      	adds	r4, r0, r4
    9cd8:	e002      	b.n	9ce0 <memchr+0x40>
    9cda:	7803      	ldrb	r3, [r0, #0]
    9cdc:	42ab      	cmp	r3, r5
    9cde:	d003      	beq.n	9ce8 <memchr+0x48>
    9ce0:	3001      	adds	r0, #1
    9ce2:	4284      	cmp	r4, r0
    9ce4:	d1f9      	bne.n	9cda <memchr+0x3a>
    9ce6:	2000      	movs	r0, #0
    9ce8:	bd70      	pop	{r4, r5, r6, pc}
    9cea:	22ff      	movs	r2, #255	; 0xff
    9cec:	060b      	lsls	r3, r1, #24
    9cee:	0c1b      	lsrs	r3, r3, #16
    9cf0:	4011      	ands	r1, r2
    9cf2:	4319      	orrs	r1, r3
    9cf4:	040b      	lsls	r3, r1, #16
    9cf6:	4e08      	ldr	r6, [pc, #32]	; (9d18 <memchr+0x78>)
    9cf8:	4319      	orrs	r1, r3
    9cfa:	6803      	ldr	r3, [r0, #0]
    9cfc:	4a07      	ldr	r2, [pc, #28]	; (9d1c <memchr+0x7c>)
    9cfe:	404b      	eors	r3, r1
    9d00:	189a      	adds	r2, r3, r2
    9d02:	439a      	bics	r2, r3
    9d04:	4232      	tst	r2, r6
    9d06:	d1e3      	bne.n	9cd0 <memchr+0x30>
    9d08:	3c04      	subs	r4, #4
    9d0a:	3004      	adds	r0, #4
    9d0c:	2c03      	cmp	r4, #3
    9d0e:	d8f4      	bhi.n	9cfa <memchr+0x5a>
    9d10:	e7dc      	b.n	9ccc <memchr+0x2c>
    9d12:	0014      	movs	r4, r2
    9d14:	e7d8      	b.n	9cc8 <memchr+0x28>
    9d16:	46c0      	nop			; (mov r8, r8)
    9d18:	80808080 	.word	0x80808080
    9d1c:	fefefeff 	.word	0xfefefeff

00009d20 <memcmp>:
    9d20:	b510      	push	{r4, lr}
    9d22:	2a03      	cmp	r2, #3
    9d24:	d91c      	bls.n	9d60 <memcmp+0x40>
    9d26:	0003      	movs	r3, r0
    9d28:	430b      	orrs	r3, r1
    9d2a:	079b      	lsls	r3, r3, #30
    9d2c:	d00f      	beq.n	9d4e <memcmp+0x2e>
    9d2e:	7803      	ldrb	r3, [r0, #0]
    9d30:	780c      	ldrb	r4, [r1, #0]
    9d32:	1882      	adds	r2, r0, r2
    9d34:	42a3      	cmp	r3, r4
    9d36:	d004      	beq.n	9d42 <memcmp+0x22>
    9d38:	e015      	b.n	9d66 <memcmp+0x46>
    9d3a:	7803      	ldrb	r3, [r0, #0]
    9d3c:	780c      	ldrb	r4, [r1, #0]
    9d3e:	42a3      	cmp	r3, r4
    9d40:	d111      	bne.n	9d66 <memcmp+0x46>
    9d42:	3001      	adds	r0, #1
    9d44:	3101      	adds	r1, #1
    9d46:	4282      	cmp	r2, r0
    9d48:	d1f7      	bne.n	9d3a <memcmp+0x1a>
    9d4a:	2000      	movs	r0, #0
    9d4c:	bd10      	pop	{r4, pc}
    9d4e:	6803      	ldr	r3, [r0, #0]
    9d50:	680c      	ldr	r4, [r1, #0]
    9d52:	42a3      	cmp	r3, r4
    9d54:	d1eb      	bne.n	9d2e <memcmp+0xe>
    9d56:	3a04      	subs	r2, #4
    9d58:	3004      	adds	r0, #4
    9d5a:	3104      	adds	r1, #4
    9d5c:	2a03      	cmp	r2, #3
    9d5e:	d8f6      	bhi.n	9d4e <memcmp+0x2e>
    9d60:	2a00      	cmp	r2, #0
    9d62:	d1e4      	bne.n	9d2e <memcmp+0xe>
    9d64:	e7f1      	b.n	9d4a <memcmp+0x2a>
    9d66:	1b18      	subs	r0, r3, r4
    9d68:	e7f0      	b.n	9d4c <memcmp+0x2c>
    9d6a:	46c0      	nop			; (mov r8, r8)

00009d6c <memcpy>:
    9d6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    9d6e:	0005      	movs	r5, r0
    9d70:	2a0f      	cmp	r2, #15
    9d72:	d92f      	bls.n	9dd4 <memcpy+0x68>
    9d74:	000b      	movs	r3, r1
    9d76:	4303      	orrs	r3, r0
    9d78:	079b      	lsls	r3, r3, #30
    9d7a:	d134      	bne.n	9de6 <memcpy+0x7a>
    9d7c:	0016      	movs	r6, r2
    9d7e:	000c      	movs	r4, r1
    9d80:	0003      	movs	r3, r0
    9d82:	3e10      	subs	r6, #16
    9d84:	0935      	lsrs	r5, r6, #4
    9d86:	3501      	adds	r5, #1
    9d88:	012d      	lsls	r5, r5, #4
    9d8a:	1945      	adds	r5, r0, r5
    9d8c:	6827      	ldr	r7, [r4, #0]
    9d8e:	601f      	str	r7, [r3, #0]
    9d90:	6867      	ldr	r7, [r4, #4]
    9d92:	605f      	str	r7, [r3, #4]
    9d94:	68a7      	ldr	r7, [r4, #8]
    9d96:	609f      	str	r7, [r3, #8]
    9d98:	68e7      	ldr	r7, [r4, #12]
    9d9a:	3410      	adds	r4, #16
    9d9c:	60df      	str	r7, [r3, #12]
    9d9e:	3310      	adds	r3, #16
    9da0:	429d      	cmp	r5, r3
    9da2:	d1f3      	bne.n	9d8c <memcpy+0x20>
    9da4:	230f      	movs	r3, #15
    9da6:	439e      	bics	r6, r3
    9da8:	3610      	adds	r6, #16
    9daa:	1985      	adds	r5, r0, r6
    9dac:	1989      	adds	r1, r1, r6
    9dae:	4013      	ands	r3, r2
    9db0:	2b03      	cmp	r3, #3
    9db2:	d91a      	bls.n	9dea <memcpy+0x7e>
    9db4:	1f1e      	subs	r6, r3, #4
    9db6:	2300      	movs	r3, #0
    9db8:	08b4      	lsrs	r4, r6, #2
    9dba:	3401      	adds	r4, #1
    9dbc:	00a4      	lsls	r4, r4, #2
    9dbe:	58cf      	ldr	r7, [r1, r3]
    9dc0:	50ef      	str	r7, [r5, r3]
    9dc2:	3304      	adds	r3, #4
    9dc4:	42a3      	cmp	r3, r4
    9dc6:	d1fa      	bne.n	9dbe <memcpy+0x52>
    9dc8:	2403      	movs	r4, #3
    9dca:	43a6      	bics	r6, r4
    9dcc:	1d33      	adds	r3, r6, #4
    9dce:	4022      	ands	r2, r4
    9dd0:	18c9      	adds	r1, r1, r3
    9dd2:	18ed      	adds	r5, r5, r3
    9dd4:	2a00      	cmp	r2, #0
    9dd6:	d005      	beq.n	9de4 <memcpy+0x78>
    9dd8:	2300      	movs	r3, #0
    9dda:	5ccc      	ldrb	r4, [r1, r3]
    9ddc:	54ec      	strb	r4, [r5, r3]
    9dde:	3301      	adds	r3, #1
    9de0:	4293      	cmp	r3, r2
    9de2:	d1fa      	bne.n	9dda <memcpy+0x6e>
    9de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9de6:	0005      	movs	r5, r0
    9de8:	e7f6      	b.n	9dd8 <memcpy+0x6c>
    9dea:	001a      	movs	r2, r3
    9dec:	e7f2      	b.n	9dd4 <memcpy+0x68>
    9dee:	46c0      	nop			; (mov r8, r8)

00009df0 <__malloc_lock>:
    9df0:	b510      	push	{r4, lr}
    9df2:	4802      	ldr	r0, [pc, #8]	; (9dfc <__malloc_lock+0xc>)
    9df4:	f7ff fc54 	bl	96a0 <__retarget_lock_acquire_recursive>
    9df8:	bd10      	pop	{r4, pc}
    9dfa:	46c0      	nop			; (mov r8, r8)
    9dfc:	20001448 	.word	0x20001448

00009e00 <__malloc_unlock>:
    9e00:	b510      	push	{r4, lr}
    9e02:	4802      	ldr	r0, [pc, #8]	; (9e0c <__malloc_unlock+0xc>)
    9e04:	f7ff fc4e 	bl	96a4 <__retarget_lock_release_recursive>
    9e08:	bd10      	pop	{r4, pc}
    9e0a:	46c0      	nop			; (mov r8, r8)
    9e0c:	20001448 	.word	0x20001448

00009e10 <_Balloc>:
    9e10:	b570      	push	{r4, r5, r6, lr}
    9e12:	0004      	movs	r4, r0
    9e14:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    9e16:	000d      	movs	r5, r1
    9e18:	2800      	cmp	r0, #0
    9e1a:	d00a      	beq.n	9e32 <_Balloc+0x22>
    9e1c:	00ab      	lsls	r3, r5, #2
    9e1e:	18c3      	adds	r3, r0, r3
    9e20:	6818      	ldr	r0, [r3, #0]
    9e22:	2800      	cmp	r0, #0
    9e24:	d00f      	beq.n	9e46 <_Balloc+0x36>
    9e26:	6802      	ldr	r2, [r0, #0]
    9e28:	601a      	str	r2, [r3, #0]
    9e2a:	2300      	movs	r3, #0
    9e2c:	6103      	str	r3, [r0, #16]
    9e2e:	60c3      	str	r3, [r0, #12]
    9e30:	bd70      	pop	{r4, r5, r6, pc}
    9e32:	2221      	movs	r2, #33	; 0x21
    9e34:	2104      	movs	r1, #4
    9e36:	0020      	movs	r0, r4
    9e38:	f002 f91a 	bl	c070 <_calloc_r>
    9e3c:	64e0      	str	r0, [r4, #76]	; 0x4c
    9e3e:	2800      	cmp	r0, #0
    9e40:	d1ec      	bne.n	9e1c <_Balloc+0xc>
    9e42:	2000      	movs	r0, #0
    9e44:	e7f4      	b.n	9e30 <_Balloc+0x20>
    9e46:	2601      	movs	r6, #1
    9e48:	40ae      	lsls	r6, r5
    9e4a:	1d72      	adds	r2, r6, #5
    9e4c:	0092      	lsls	r2, r2, #2
    9e4e:	2101      	movs	r1, #1
    9e50:	0020      	movs	r0, r4
    9e52:	f002 f90d 	bl	c070 <_calloc_r>
    9e56:	2800      	cmp	r0, #0
    9e58:	d0f3      	beq.n	9e42 <_Balloc+0x32>
    9e5a:	6045      	str	r5, [r0, #4]
    9e5c:	6086      	str	r6, [r0, #8]
    9e5e:	e7e4      	b.n	9e2a <_Balloc+0x1a>

00009e60 <_Bfree>:
    9e60:	2900      	cmp	r1, #0
    9e62:	d006      	beq.n	9e72 <_Bfree+0x12>
    9e64:	684b      	ldr	r3, [r1, #4]
    9e66:	009a      	lsls	r2, r3, #2
    9e68:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    9e6a:	189b      	adds	r3, r3, r2
    9e6c:	681a      	ldr	r2, [r3, #0]
    9e6e:	600a      	str	r2, [r1, #0]
    9e70:	6019      	str	r1, [r3, #0]
    9e72:	4770      	bx	lr

00009e74 <__multadd>:
    9e74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9e76:	46ce      	mov	lr, r9
    9e78:	4647      	mov	r7, r8
    9e7a:	4681      	mov	r9, r0
    9e7c:	0008      	movs	r0, r1
    9e7e:	b580      	push	{r7, lr}
    9e80:	000d      	movs	r5, r1
    9e82:	690c      	ldr	r4, [r1, #16]
    9e84:	001f      	movs	r7, r3
    9e86:	2100      	movs	r1, #0
    9e88:	3014      	adds	r0, #20
    9e8a:	6803      	ldr	r3, [r0, #0]
    9e8c:	3101      	adds	r1, #1
    9e8e:	041e      	lsls	r6, r3, #16
    9e90:	0c36      	lsrs	r6, r6, #16
    9e92:	4356      	muls	r6, r2
    9e94:	0c1b      	lsrs	r3, r3, #16
    9e96:	4353      	muls	r3, r2
    9e98:	19f6      	adds	r6, r6, r7
    9e9a:	0c37      	lsrs	r7, r6, #16
    9e9c:	19db      	adds	r3, r3, r7
    9e9e:	0436      	lsls	r6, r6, #16
    9ea0:	0c1f      	lsrs	r7, r3, #16
    9ea2:	0c36      	lsrs	r6, r6, #16
    9ea4:	041b      	lsls	r3, r3, #16
    9ea6:	199b      	adds	r3, r3, r6
    9ea8:	c008      	stmia	r0!, {r3}
    9eaa:	428c      	cmp	r4, r1
    9eac:	dced      	bgt.n	9e8a <__multadd+0x16>
    9eae:	2f00      	cmp	r7, #0
    9eb0:	d008      	beq.n	9ec4 <__multadd+0x50>
    9eb2:	68ab      	ldr	r3, [r5, #8]
    9eb4:	429c      	cmp	r4, r3
    9eb6:	da0a      	bge.n	9ece <__multadd+0x5a>
    9eb8:	1d23      	adds	r3, r4, #4
    9eba:	009b      	lsls	r3, r3, #2
    9ebc:	18eb      	adds	r3, r5, r3
    9ebe:	3401      	adds	r4, #1
    9ec0:	605f      	str	r7, [r3, #4]
    9ec2:	612c      	str	r4, [r5, #16]
    9ec4:	0028      	movs	r0, r5
    9ec6:	bc0c      	pop	{r2, r3}
    9ec8:	4690      	mov	r8, r2
    9eca:	4699      	mov	r9, r3
    9ecc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9ece:	686b      	ldr	r3, [r5, #4]
    9ed0:	4648      	mov	r0, r9
    9ed2:	1c59      	adds	r1, r3, #1
    9ed4:	f7ff ff9c 	bl	9e10 <_Balloc>
    9ed8:	0029      	movs	r1, r5
    9eda:	692b      	ldr	r3, [r5, #16]
    9edc:	4680      	mov	r8, r0
    9ede:	1c9a      	adds	r2, r3, #2
    9ee0:	0092      	lsls	r2, r2, #2
    9ee2:	310c      	adds	r1, #12
    9ee4:	300c      	adds	r0, #12
    9ee6:	f7ff ff41 	bl	9d6c <memcpy>
    9eea:	686b      	ldr	r3, [r5, #4]
    9eec:	009a      	lsls	r2, r3, #2
    9eee:	464b      	mov	r3, r9
    9ef0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    9ef2:	189b      	adds	r3, r3, r2
    9ef4:	681a      	ldr	r2, [r3, #0]
    9ef6:	602a      	str	r2, [r5, #0]
    9ef8:	601d      	str	r5, [r3, #0]
    9efa:	4645      	mov	r5, r8
    9efc:	e7dc      	b.n	9eb8 <__multadd+0x44>
    9efe:	46c0      	nop			; (mov r8, r8)

00009f00 <__s2b>:
    9f00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9f02:	4647      	mov	r7, r8
    9f04:	46ce      	mov	lr, r9
    9f06:	0006      	movs	r6, r0
    9f08:	0018      	movs	r0, r3
    9f0a:	b580      	push	{r7, lr}
    9f0c:	000d      	movs	r5, r1
    9f0e:	3008      	adds	r0, #8
    9f10:	2109      	movs	r1, #9
    9f12:	4690      	mov	r8, r2
    9f14:	001f      	movs	r7, r3
    9f16:	f7f9 fc71 	bl	37fc <__divsi3>
    9f1a:	2801      	cmp	r0, #1
    9f1c:	dd38      	ble.n	9f90 <__s2b+0x90>
    9f1e:	2201      	movs	r2, #1
    9f20:	2100      	movs	r1, #0
    9f22:	0052      	lsls	r2, r2, #1
    9f24:	3101      	adds	r1, #1
    9f26:	4290      	cmp	r0, r2
    9f28:	dcfb      	bgt.n	9f22 <__s2b+0x22>
    9f2a:	0030      	movs	r0, r6
    9f2c:	f7ff ff70 	bl	9e10 <_Balloc>
    9f30:	9b08      	ldr	r3, [sp, #32]
    9f32:	6143      	str	r3, [r0, #20]
    9f34:	2301      	movs	r3, #1
    9f36:	6103      	str	r3, [r0, #16]
    9f38:	4643      	mov	r3, r8
    9f3a:	2b09      	cmp	r3, #9
    9f3c:	dd24      	ble.n	9f88 <__s2b+0x88>
    9f3e:	2309      	movs	r3, #9
    9f40:	4699      	mov	r9, r3
    9f42:	44a9      	add	r9, r5
    9f44:	464c      	mov	r4, r9
    9f46:	4445      	add	r5, r8
    9f48:	7823      	ldrb	r3, [r4, #0]
    9f4a:	0001      	movs	r1, r0
    9f4c:	3b30      	subs	r3, #48	; 0x30
    9f4e:	220a      	movs	r2, #10
    9f50:	0030      	movs	r0, r6
    9f52:	3401      	adds	r4, #1
    9f54:	f7ff ff8e 	bl	9e74 <__multadd>
    9f58:	42ac      	cmp	r4, r5
    9f5a:	d1f5      	bne.n	9f48 <__s2b+0x48>
    9f5c:	4645      	mov	r5, r8
    9f5e:	3d08      	subs	r5, #8
    9f60:	444d      	add	r5, r9
    9f62:	4547      	cmp	r7, r8
    9f64:	dd0c      	ble.n	9f80 <__s2b+0x80>
    9f66:	4643      	mov	r3, r8
    9f68:	1aff      	subs	r7, r7, r3
    9f6a:	19ef      	adds	r7, r5, r7
    9f6c:	782b      	ldrb	r3, [r5, #0]
    9f6e:	0001      	movs	r1, r0
    9f70:	3b30      	subs	r3, #48	; 0x30
    9f72:	220a      	movs	r2, #10
    9f74:	0030      	movs	r0, r6
    9f76:	3501      	adds	r5, #1
    9f78:	f7ff ff7c 	bl	9e74 <__multadd>
    9f7c:	42bd      	cmp	r5, r7
    9f7e:	d1f5      	bne.n	9f6c <__s2b+0x6c>
    9f80:	bc0c      	pop	{r2, r3}
    9f82:	4690      	mov	r8, r2
    9f84:	4699      	mov	r9, r3
    9f86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9f88:	2309      	movs	r3, #9
    9f8a:	350a      	adds	r5, #10
    9f8c:	4698      	mov	r8, r3
    9f8e:	e7e8      	b.n	9f62 <__s2b+0x62>
    9f90:	2100      	movs	r1, #0
    9f92:	e7ca      	b.n	9f2a <__s2b+0x2a>

00009f94 <__hi0bits>:
    9f94:	0003      	movs	r3, r0
    9f96:	0c02      	lsrs	r2, r0, #16
    9f98:	2000      	movs	r0, #0
    9f9a:	2a00      	cmp	r2, #0
    9f9c:	d101      	bne.n	9fa2 <__hi0bits+0xe>
    9f9e:	041b      	lsls	r3, r3, #16
    9fa0:	3010      	adds	r0, #16
    9fa2:	0e1a      	lsrs	r2, r3, #24
    9fa4:	d101      	bne.n	9faa <__hi0bits+0x16>
    9fa6:	3008      	adds	r0, #8
    9fa8:	021b      	lsls	r3, r3, #8
    9faa:	0f1a      	lsrs	r2, r3, #28
    9fac:	d101      	bne.n	9fb2 <__hi0bits+0x1e>
    9fae:	3004      	adds	r0, #4
    9fb0:	011b      	lsls	r3, r3, #4
    9fb2:	0f9a      	lsrs	r2, r3, #30
    9fb4:	d101      	bne.n	9fba <__hi0bits+0x26>
    9fb6:	3002      	adds	r0, #2
    9fb8:	009b      	lsls	r3, r3, #2
    9fba:	2b00      	cmp	r3, #0
    9fbc:	db03      	blt.n	9fc6 <__hi0bits+0x32>
    9fbe:	3001      	adds	r0, #1
    9fc0:	005b      	lsls	r3, r3, #1
    9fc2:	d400      	bmi.n	9fc6 <__hi0bits+0x32>
    9fc4:	2020      	movs	r0, #32
    9fc6:	4770      	bx	lr

00009fc8 <__lo0bits>:
    9fc8:	6803      	ldr	r3, [r0, #0]
    9fca:	075a      	lsls	r2, r3, #29
    9fcc:	d009      	beq.n	9fe2 <__lo0bits+0x1a>
    9fce:	2200      	movs	r2, #0
    9fd0:	07d9      	lsls	r1, r3, #31
    9fd2:	d404      	bmi.n	9fde <__lo0bits+0x16>
    9fd4:	079a      	lsls	r2, r3, #30
    9fd6:	d420      	bmi.n	a01a <__lo0bits+0x52>
    9fd8:	2202      	movs	r2, #2
    9fda:	089b      	lsrs	r3, r3, #2
    9fdc:	6003      	str	r3, [r0, #0]
    9fde:	0010      	movs	r0, r2
    9fe0:	4770      	bx	lr
    9fe2:	0419      	lsls	r1, r3, #16
    9fe4:	2200      	movs	r2, #0
    9fe6:	2900      	cmp	r1, #0
    9fe8:	d101      	bne.n	9fee <__lo0bits+0x26>
    9fea:	0c1b      	lsrs	r3, r3, #16
    9fec:	3210      	adds	r2, #16
    9fee:	21ff      	movs	r1, #255	; 0xff
    9ff0:	4219      	tst	r1, r3
    9ff2:	d101      	bne.n	9ff8 <__lo0bits+0x30>
    9ff4:	3208      	adds	r2, #8
    9ff6:	0a1b      	lsrs	r3, r3, #8
    9ff8:	0719      	lsls	r1, r3, #28
    9ffa:	d101      	bne.n	a000 <__lo0bits+0x38>
    9ffc:	3204      	adds	r2, #4
    9ffe:	091b      	lsrs	r3, r3, #4
    a000:	0799      	lsls	r1, r3, #30
    a002:	d101      	bne.n	a008 <__lo0bits+0x40>
    a004:	3202      	adds	r2, #2
    a006:	089b      	lsrs	r3, r3, #2
    a008:	07d9      	lsls	r1, r3, #31
    a00a:	d404      	bmi.n	a016 <__lo0bits+0x4e>
    a00c:	085b      	lsrs	r3, r3, #1
    a00e:	d101      	bne.n	a014 <__lo0bits+0x4c>
    a010:	2220      	movs	r2, #32
    a012:	e7e4      	b.n	9fde <__lo0bits+0x16>
    a014:	3201      	adds	r2, #1
    a016:	6003      	str	r3, [r0, #0]
    a018:	e7e1      	b.n	9fde <__lo0bits+0x16>
    a01a:	085b      	lsrs	r3, r3, #1
    a01c:	6003      	str	r3, [r0, #0]
    a01e:	2201      	movs	r2, #1
    a020:	e7dd      	b.n	9fde <__lo0bits+0x16>
    a022:	46c0      	nop			; (mov r8, r8)

0000a024 <__i2b>:
    a024:	b510      	push	{r4, lr}
    a026:	000c      	movs	r4, r1
    a028:	2101      	movs	r1, #1
    a02a:	f7ff fef1 	bl	9e10 <_Balloc>
    a02e:	2301      	movs	r3, #1
    a030:	6144      	str	r4, [r0, #20]
    a032:	6103      	str	r3, [r0, #16]
    a034:	bd10      	pop	{r4, pc}
    a036:	46c0      	nop			; (mov r8, r8)

0000a038 <__multiply>:
    a038:	b5f0      	push	{r4, r5, r6, r7, lr}
    a03a:	4657      	mov	r7, sl
    a03c:	464e      	mov	r6, r9
    a03e:	4645      	mov	r5, r8
    a040:	46de      	mov	lr, fp
    a042:	b5e0      	push	{r5, r6, r7, lr}
    a044:	6914      	ldr	r4, [r2, #16]
    a046:	690e      	ldr	r6, [r1, #16]
    a048:	b085      	sub	sp, #20
    a04a:	000f      	movs	r7, r1
    a04c:	0015      	movs	r5, r2
    a04e:	42a6      	cmp	r6, r4
    a050:	da04      	bge.n	a05c <__multiply+0x24>
    a052:	0033      	movs	r3, r6
    a054:	0017      	movs	r7, r2
    a056:	0026      	movs	r6, r4
    a058:	000d      	movs	r5, r1
    a05a:	001c      	movs	r4, r3
    a05c:	1933      	adds	r3, r6, r4
    a05e:	4698      	mov	r8, r3
    a060:	68bb      	ldr	r3, [r7, #8]
    a062:	6879      	ldr	r1, [r7, #4]
    a064:	4598      	cmp	r8, r3
    a066:	dd00      	ble.n	a06a <__multiply+0x32>
    a068:	3101      	adds	r1, #1
    a06a:	f7ff fed1 	bl	9e10 <_Balloc>
    a06e:	2214      	movs	r2, #20
    a070:	0003      	movs	r3, r0
    a072:	4694      	mov	ip, r2
    a074:	4463      	add	r3, ip
    a076:	469b      	mov	fp, r3
    a078:	4643      	mov	r3, r8
    a07a:	009b      	lsls	r3, r3, #2
    a07c:	445b      	add	r3, fp
    a07e:	0019      	movs	r1, r3
    a080:	9302      	str	r3, [sp, #8]
    a082:	9003      	str	r0, [sp, #12]
    a084:	465b      	mov	r3, fp
    a086:	2200      	movs	r2, #0
    a088:	458b      	cmp	fp, r1
    a08a:	d203      	bcs.n	a094 <__multiply+0x5c>
    a08c:	9902      	ldr	r1, [sp, #8]
    a08e:	c304      	stmia	r3!, {r2}
    a090:	4299      	cmp	r1, r3
    a092:	d8fc      	bhi.n	a08e <__multiply+0x56>
    a094:	2314      	movs	r3, #20
    a096:	00a4      	lsls	r4, r4, #2
    a098:	469a      	mov	sl, r3
    a09a:	3714      	adds	r7, #20
    a09c:	0023      	movs	r3, r4
    a09e:	46bc      	mov	ip, r7
    a0a0:	44aa      	add	sl, r5
    a0a2:	00b6      	lsls	r6, r6, #2
    a0a4:	4453      	add	r3, sl
    a0a6:	9700      	str	r7, [sp, #0]
    a0a8:	44b4      	add	ip, r6
    a0aa:	9301      	str	r3, [sp, #4]
    a0ac:	459a      	cmp	sl, r3
    a0ae:	d24f      	bcs.n	a150 <__multiply+0x118>
    a0b0:	4653      	mov	r3, sl
    a0b2:	681b      	ldr	r3, [r3, #0]
    a0b4:	041e      	lsls	r6, r3, #16
    a0b6:	0c36      	lsrs	r6, r6, #16
    a0b8:	d020      	beq.n	a0fc <__multiply+0xc4>
    a0ba:	465c      	mov	r4, fp
    a0bc:	2700      	movs	r7, #0
    a0be:	9d00      	ldr	r5, [sp, #0]
    a0c0:	0021      	movs	r1, r4
    a0c2:	cc08      	ldmia	r4!, {r3}
    a0c4:	cd04      	ldmia	r5!, {r2}
    a0c6:	4699      	mov	r9, r3
    a0c8:	4648      	mov	r0, r9
    a0ca:	0413      	lsls	r3, r2, #16
    a0cc:	0c1b      	lsrs	r3, r3, #16
    a0ce:	4373      	muls	r3, r6
    a0d0:	0400      	lsls	r0, r0, #16
    a0d2:	0c00      	lsrs	r0, r0, #16
    a0d4:	181b      	adds	r3, r3, r0
    a0d6:	19d8      	adds	r0, r3, r7
    a0d8:	0c13      	lsrs	r3, r2, #16
    a0da:	464a      	mov	r2, r9
    a0dc:	4373      	muls	r3, r6
    a0de:	0c12      	lsrs	r2, r2, #16
    a0e0:	189b      	adds	r3, r3, r2
    a0e2:	0c02      	lsrs	r2, r0, #16
    a0e4:	189b      	adds	r3, r3, r2
    a0e6:	0402      	lsls	r2, r0, #16
    a0e8:	0c1f      	lsrs	r7, r3, #16
    a0ea:	0c12      	lsrs	r2, r2, #16
    a0ec:	041b      	lsls	r3, r3, #16
    a0ee:	4313      	orrs	r3, r2
    a0f0:	600b      	str	r3, [r1, #0]
    a0f2:	45ac      	cmp	ip, r5
    a0f4:	d8e4      	bhi.n	a0c0 <__multiply+0x88>
    a0f6:	4653      	mov	r3, sl
    a0f8:	6027      	str	r7, [r4, #0]
    a0fa:	681b      	ldr	r3, [r3, #0]
    a0fc:	0c1e      	lsrs	r6, r3, #16
    a0fe:	d020      	beq.n	a142 <__multiply+0x10a>
    a100:	465b      	mov	r3, fp
    a102:	2100      	movs	r1, #0
    a104:	681b      	ldr	r3, [r3, #0]
    a106:	465c      	mov	r4, fp
    a108:	0018      	movs	r0, r3
    a10a:	000f      	movs	r7, r1
    a10c:	4662      	mov	r2, ip
    a10e:	9d00      	ldr	r5, [sp, #0]
    a110:	8829      	ldrh	r1, [r5, #0]
    a112:	0c00      	lsrs	r0, r0, #16
    a114:	4371      	muls	r1, r6
    a116:	1809      	adds	r1, r1, r0
    a118:	19c9      	adds	r1, r1, r7
    a11a:	041b      	lsls	r3, r3, #16
    a11c:	0408      	lsls	r0, r1, #16
    a11e:	0c1b      	lsrs	r3, r3, #16
    a120:	4303      	orrs	r3, r0
    a122:	6023      	str	r3, [r4, #0]
    a124:	cd08      	ldmia	r5!, {r3}
    a126:	6860      	ldr	r0, [r4, #4]
    a128:	0c1b      	lsrs	r3, r3, #16
    a12a:	4373      	muls	r3, r6
    a12c:	0407      	lsls	r7, r0, #16
    a12e:	0c3f      	lsrs	r7, r7, #16
    a130:	19db      	adds	r3, r3, r7
    a132:	0c09      	lsrs	r1, r1, #16
    a134:	185b      	adds	r3, r3, r1
    a136:	0c1f      	lsrs	r7, r3, #16
    a138:	3404      	adds	r4, #4
    a13a:	42aa      	cmp	r2, r5
    a13c:	d8e8      	bhi.n	a110 <__multiply+0xd8>
    a13e:	4694      	mov	ip, r2
    a140:	6023      	str	r3, [r4, #0]
    a142:	2304      	movs	r3, #4
    a144:	4699      	mov	r9, r3
    a146:	9b01      	ldr	r3, [sp, #4]
    a148:	44ca      	add	sl, r9
    a14a:	44cb      	add	fp, r9
    a14c:	4553      	cmp	r3, sl
    a14e:	d8af      	bhi.n	a0b0 <__multiply+0x78>
    a150:	4643      	mov	r3, r8
    a152:	2b00      	cmp	r3, #0
    a154:	dd0e      	ble.n	a174 <__multiply+0x13c>
    a156:	9b02      	ldr	r3, [sp, #8]
    a158:	3b04      	subs	r3, #4
    a15a:	681a      	ldr	r2, [r3, #0]
    a15c:	2a00      	cmp	r2, #0
    a15e:	d109      	bne.n	a174 <__multiply+0x13c>
    a160:	4642      	mov	r2, r8
    a162:	e003      	b.n	a16c <__multiply+0x134>
    a164:	3b04      	subs	r3, #4
    a166:	6819      	ldr	r1, [r3, #0]
    a168:	2900      	cmp	r1, #0
    a16a:	d102      	bne.n	a172 <__multiply+0x13a>
    a16c:	3a01      	subs	r2, #1
    a16e:	2a00      	cmp	r2, #0
    a170:	d1f8      	bne.n	a164 <__multiply+0x12c>
    a172:	4690      	mov	r8, r2
    a174:	9b03      	ldr	r3, [sp, #12]
    a176:	4642      	mov	r2, r8
    a178:	0018      	movs	r0, r3
    a17a:	611a      	str	r2, [r3, #16]
    a17c:	b005      	add	sp, #20
    a17e:	bc3c      	pop	{r2, r3, r4, r5}
    a180:	4690      	mov	r8, r2
    a182:	4699      	mov	r9, r3
    a184:	46a2      	mov	sl, r4
    a186:	46ab      	mov	fp, r5
    a188:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a18a:	46c0      	nop			; (mov r8, r8)

0000a18c <__pow5mult>:
    a18c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a18e:	4647      	mov	r7, r8
    a190:	46ce      	mov	lr, r9
    a192:	2303      	movs	r3, #3
    a194:	b580      	push	{r7, lr}
    a196:	4680      	mov	r8, r0
    a198:	000f      	movs	r7, r1
    a19a:	0014      	movs	r4, r2
    a19c:	4013      	ands	r3, r2
    a19e:	d13a      	bne.n	a216 <__pow5mult+0x8a>
    a1a0:	10a4      	asrs	r4, r4, #2
    a1a2:	003e      	movs	r6, r7
    a1a4:	2c00      	cmp	r4, #0
    a1a6:	d025      	beq.n	a1f4 <__pow5mult+0x68>
    a1a8:	4643      	mov	r3, r8
    a1aa:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    a1ac:	2d00      	cmp	r5, #0
    a1ae:	d03b      	beq.n	a228 <__pow5mult+0x9c>
    a1b0:	003e      	movs	r6, r7
    a1b2:	2300      	movs	r3, #0
    a1b4:	2701      	movs	r7, #1
    a1b6:	4699      	mov	r9, r3
    a1b8:	4227      	tst	r7, r4
    a1ba:	d107      	bne.n	a1cc <__pow5mult+0x40>
    a1bc:	1064      	asrs	r4, r4, #1
    a1be:	d019      	beq.n	a1f4 <__pow5mult+0x68>
    a1c0:	6828      	ldr	r0, [r5, #0]
    a1c2:	2800      	cmp	r0, #0
    a1c4:	d01b      	beq.n	a1fe <__pow5mult+0x72>
    a1c6:	0005      	movs	r5, r0
    a1c8:	4227      	tst	r7, r4
    a1ca:	d0f7      	beq.n	a1bc <__pow5mult+0x30>
    a1cc:	002a      	movs	r2, r5
    a1ce:	0031      	movs	r1, r6
    a1d0:	4640      	mov	r0, r8
    a1d2:	f7ff ff31 	bl	a038 <__multiply>
    a1d6:	2e00      	cmp	r6, #0
    a1d8:	d01b      	beq.n	a212 <__pow5mult+0x86>
    a1da:	4642      	mov	r2, r8
    a1dc:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    a1de:	6873      	ldr	r3, [r6, #4]
    a1e0:	4694      	mov	ip, r2
    a1e2:	009b      	lsls	r3, r3, #2
    a1e4:	4463      	add	r3, ip
    a1e6:	681a      	ldr	r2, [r3, #0]
    a1e8:	1064      	asrs	r4, r4, #1
    a1ea:	6032      	str	r2, [r6, #0]
    a1ec:	601e      	str	r6, [r3, #0]
    a1ee:	0006      	movs	r6, r0
    a1f0:	2c00      	cmp	r4, #0
    a1f2:	d1e5      	bne.n	a1c0 <__pow5mult+0x34>
    a1f4:	0030      	movs	r0, r6
    a1f6:	bc0c      	pop	{r2, r3}
    a1f8:	4690      	mov	r8, r2
    a1fa:	4699      	mov	r9, r3
    a1fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a1fe:	002a      	movs	r2, r5
    a200:	0029      	movs	r1, r5
    a202:	4640      	mov	r0, r8
    a204:	f7ff ff18 	bl	a038 <__multiply>
    a208:	464b      	mov	r3, r9
    a20a:	6028      	str	r0, [r5, #0]
    a20c:	6003      	str	r3, [r0, #0]
    a20e:	0005      	movs	r5, r0
    a210:	e7da      	b.n	a1c8 <__pow5mult+0x3c>
    a212:	0006      	movs	r6, r0
    a214:	e7d2      	b.n	a1bc <__pow5mult+0x30>
    a216:	4a0b      	ldr	r2, [pc, #44]	; (a244 <__pow5mult+0xb8>)
    a218:	3b01      	subs	r3, #1
    a21a:	009b      	lsls	r3, r3, #2
    a21c:	589a      	ldr	r2, [r3, r2]
    a21e:	2300      	movs	r3, #0
    a220:	f7ff fe28 	bl	9e74 <__multadd>
    a224:	0007      	movs	r7, r0
    a226:	e7bb      	b.n	a1a0 <__pow5mult+0x14>
    a228:	2101      	movs	r1, #1
    a22a:	4640      	mov	r0, r8
    a22c:	f7ff fdf0 	bl	9e10 <_Balloc>
    a230:	4b05      	ldr	r3, [pc, #20]	; (a248 <__pow5mult+0xbc>)
    a232:	0005      	movs	r5, r0
    a234:	6143      	str	r3, [r0, #20]
    a236:	2301      	movs	r3, #1
    a238:	6103      	str	r3, [r0, #16]
    a23a:	4643      	mov	r3, r8
    a23c:	6498      	str	r0, [r3, #72]	; 0x48
    a23e:	2300      	movs	r3, #0
    a240:	6003      	str	r3, [r0, #0]
    a242:	e7b5      	b.n	a1b0 <__pow5mult+0x24>
    a244:	0000f3d8 	.word	0x0000f3d8
    a248:	00000271 	.word	0x00000271

0000a24c <__lshift>:
    a24c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a24e:	464e      	mov	r6, r9
    a250:	4645      	mov	r5, r8
    a252:	46de      	mov	lr, fp
    a254:	4657      	mov	r7, sl
    a256:	b5e0      	push	{r5, r6, r7, lr}
    a258:	000e      	movs	r6, r1
    a25a:	6933      	ldr	r3, [r6, #16]
    a25c:	1154      	asrs	r4, r2, #5
    a25e:	4698      	mov	r8, r3
    a260:	44a0      	add	r8, r4
    a262:	4643      	mov	r3, r8
    a264:	1c5d      	adds	r5, r3, #1
    a266:	68b3      	ldr	r3, [r6, #8]
    a268:	4683      	mov	fp, r0
    a26a:	4691      	mov	r9, r2
    a26c:	6849      	ldr	r1, [r1, #4]
    a26e:	429d      	cmp	r5, r3
    a270:	dd03      	ble.n	a27a <__lshift+0x2e>
    a272:	3101      	adds	r1, #1
    a274:	005b      	lsls	r3, r3, #1
    a276:	429d      	cmp	r5, r3
    a278:	dcfb      	bgt.n	a272 <__lshift+0x26>
    a27a:	4658      	mov	r0, fp
    a27c:	f7ff fdc8 	bl	9e10 <_Balloc>
    a280:	0003      	movs	r3, r0
    a282:	4684      	mov	ip, r0
    a284:	3314      	adds	r3, #20
    a286:	2c00      	cmp	r4, #0
    a288:	dd06      	ble.n	a298 <__lshift+0x4c>
    a28a:	2100      	movs	r1, #0
    a28c:	00a4      	lsls	r4, r4, #2
    a28e:	001a      	movs	r2, r3
    a290:	191b      	adds	r3, r3, r4
    a292:	c202      	stmia	r2!, {r1}
    a294:	4293      	cmp	r3, r2
    a296:	d1fc      	bne.n	a292 <__lshift+0x46>
    a298:	6932      	ldr	r2, [r6, #16]
    a29a:	4648      	mov	r0, r9
    a29c:	0097      	lsls	r7, r2, #2
    a29e:	0031      	movs	r1, r6
    a2a0:	221f      	movs	r2, #31
    a2a2:	3114      	adds	r1, #20
    a2a4:	4010      	ands	r0, r2
    a2a6:	19cf      	adds	r7, r1, r7
    a2a8:	4681      	mov	r9, r0
    a2aa:	2800      	cmp	r0, #0
    a2ac:	d025      	beq.n	a2fa <__lshift+0xae>
    a2ae:	2220      	movs	r2, #32
    a2b0:	1a12      	subs	r2, r2, r0
    a2b2:	4692      	mov	sl, r2
    a2b4:	2200      	movs	r2, #0
    a2b6:	4648      	mov	r0, r9
    a2b8:	680c      	ldr	r4, [r1, #0]
    a2ba:	4084      	lsls	r4, r0
    a2bc:	4650      	mov	r0, sl
    a2be:	4314      	orrs	r4, r2
    a2c0:	601c      	str	r4, [r3, #0]
    a2c2:	c904      	ldmia	r1!, {r2}
    a2c4:	3304      	adds	r3, #4
    a2c6:	40c2      	lsrs	r2, r0
    a2c8:	428f      	cmp	r7, r1
    a2ca:	d8f4      	bhi.n	a2b6 <__lshift+0x6a>
    a2cc:	601a      	str	r2, [r3, #0]
    a2ce:	2a00      	cmp	r2, #0
    a2d0:	d001      	beq.n	a2d6 <__lshift+0x8a>
    a2d2:	4645      	mov	r5, r8
    a2d4:	3502      	adds	r5, #2
    a2d6:	4663      	mov	r3, ip
    a2d8:	3d01      	subs	r5, #1
    a2da:	611d      	str	r5, [r3, #16]
    a2dc:	6873      	ldr	r3, [r6, #4]
    a2de:	4660      	mov	r0, ip
    a2e0:	009a      	lsls	r2, r3, #2
    a2e2:	465b      	mov	r3, fp
    a2e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    a2e6:	189b      	adds	r3, r3, r2
    a2e8:	681a      	ldr	r2, [r3, #0]
    a2ea:	6032      	str	r2, [r6, #0]
    a2ec:	601e      	str	r6, [r3, #0]
    a2ee:	bc3c      	pop	{r2, r3, r4, r5}
    a2f0:	4690      	mov	r8, r2
    a2f2:	4699      	mov	r9, r3
    a2f4:	46a2      	mov	sl, r4
    a2f6:	46ab      	mov	fp, r5
    a2f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a2fa:	c904      	ldmia	r1!, {r2}
    a2fc:	c304      	stmia	r3!, {r2}
    a2fe:	428f      	cmp	r7, r1
    a300:	d9e9      	bls.n	a2d6 <__lshift+0x8a>
    a302:	c904      	ldmia	r1!, {r2}
    a304:	c304      	stmia	r3!, {r2}
    a306:	428f      	cmp	r7, r1
    a308:	d8f7      	bhi.n	a2fa <__lshift+0xae>
    a30a:	e7e4      	b.n	a2d6 <__lshift+0x8a>

0000a30c <__mcmp>:
    a30c:	690a      	ldr	r2, [r1, #16]
    a30e:	6903      	ldr	r3, [r0, #16]
    a310:	b530      	push	{r4, r5, lr}
    a312:	0005      	movs	r5, r0
    a314:	1a98      	subs	r0, r3, r2
    a316:	d111      	bne.n	a33c <__mcmp+0x30>
    a318:	0092      	lsls	r2, r2, #2
    a31a:	3514      	adds	r5, #20
    a31c:	3114      	adds	r1, #20
    a31e:	18ab      	adds	r3, r5, r2
    a320:	1889      	adds	r1, r1, r2
    a322:	e001      	b.n	a328 <__mcmp+0x1c>
    a324:	429d      	cmp	r5, r3
    a326:	d209      	bcs.n	a33c <__mcmp+0x30>
    a328:	3b04      	subs	r3, #4
    a32a:	3904      	subs	r1, #4
    a32c:	681c      	ldr	r4, [r3, #0]
    a32e:	680a      	ldr	r2, [r1, #0]
    a330:	4294      	cmp	r4, r2
    a332:	d0f7      	beq.n	a324 <__mcmp+0x18>
    a334:	4294      	cmp	r4, r2
    a336:	4180      	sbcs	r0, r0
    a338:	2201      	movs	r2, #1
    a33a:	4310      	orrs	r0, r2
    a33c:	bd30      	pop	{r4, r5, pc}
    a33e:	46c0      	nop			; (mov r8, r8)

0000a340 <__mdiff>:
    a340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a342:	4645      	mov	r5, r8
    a344:	46de      	mov	lr, fp
    a346:	4657      	mov	r7, sl
    a348:	464e      	mov	r6, r9
    a34a:	0014      	movs	r4, r2
    a34c:	690b      	ldr	r3, [r1, #16]
    a34e:	6912      	ldr	r2, [r2, #16]
    a350:	b5e0      	push	{r5, r6, r7, lr}
    a352:	4688      	mov	r8, r1
    a354:	1a9d      	subs	r5, r3, r2
    a356:	d11a      	bne.n	a38e <__mdiff+0x4e>
    a358:	000f      	movs	r7, r1
    a35a:	2114      	movs	r1, #20
    a35c:	468c      	mov	ip, r1
    a35e:	0092      	lsls	r2, r2, #2
    a360:	3714      	adds	r7, #20
    a362:	44a4      	add	ip, r4
    a364:	18bb      	adds	r3, r7, r2
    a366:	4462      	add	r2, ip
    a368:	e002      	b.n	a370 <__mdiff+0x30>
    a36a:	429f      	cmp	r7, r3
    a36c:	d300      	bcc.n	a370 <__mdiff+0x30>
    a36e:	e070      	b.n	a452 <__mdiff+0x112>
    a370:	3b04      	subs	r3, #4
    a372:	3a04      	subs	r2, #4
    a374:	681e      	ldr	r6, [r3, #0]
    a376:	6811      	ldr	r1, [r2, #0]
    a378:	428e      	cmp	r6, r1
    a37a:	d0f6      	beq.n	a36a <__mdiff+0x2a>
    a37c:	d300      	bcc.n	a380 <__mdiff+0x40>
    a37e:	e071      	b.n	a464 <__mdiff+0x124>
    a380:	4643      	mov	r3, r8
    a382:	003e      	movs	r6, r7
    a384:	46a0      	mov	r8, r4
    a386:	4667      	mov	r7, ip
    a388:	001c      	movs	r4, r3
    a38a:	2501      	movs	r5, #1
    a38c:	e006      	b.n	a39c <__mdiff+0x5c>
    a38e:	2d00      	cmp	r5, #0
    a390:	db6a      	blt.n	a468 <__mdiff+0x128>
    a392:	4647      	mov	r7, r8
    a394:	0026      	movs	r6, r4
    a396:	2500      	movs	r5, #0
    a398:	3714      	adds	r7, #20
    a39a:	3614      	adds	r6, #20
    a39c:	4643      	mov	r3, r8
    a39e:	6859      	ldr	r1, [r3, #4]
    a3a0:	f7ff fd36 	bl	9e10 <_Balloc>
    a3a4:	4643      	mov	r3, r8
    a3a6:	4681      	mov	r9, r0
    a3a8:	60c5      	str	r5, [r0, #12]
    a3aa:	6918      	ldr	r0, [r3, #16]
    a3ac:	464d      	mov	r5, r9
    a3ae:	0083      	lsls	r3, r0, #2
    a3b0:	469c      	mov	ip, r3
    a3b2:	6923      	ldr	r3, [r4, #16]
    a3b4:	44bc      	add	ip, r7
    a3b6:	009b      	lsls	r3, r3, #2
    a3b8:	4698      	mov	r8, r3
    a3ba:	2300      	movs	r3, #0
    a3bc:	44b0      	add	r8, r6
    a3be:	3514      	adds	r5, #20
    a3c0:	469a      	mov	sl, r3
    a3c2:	e000      	b.n	a3c6 <__mdiff+0x86>
    a3c4:	0027      	movs	r7, r4
    a3c6:	ce04      	ldmia	r6!, {r2}
    a3c8:	003c      	movs	r4, r7
    a3ca:	4693      	mov	fp, r2
    a3cc:	4659      	mov	r1, fp
    a3ce:	cc08      	ldmia	r4!, {r3}
    a3d0:	0409      	lsls	r1, r1, #16
    a3d2:	041a      	lsls	r2, r3, #16
    a3d4:	0c12      	lsrs	r2, r2, #16
    a3d6:	4452      	add	r2, sl
    a3d8:	0c09      	lsrs	r1, r1, #16
    a3da:	1a52      	subs	r2, r2, r1
    a3dc:	0c19      	lsrs	r1, r3, #16
    a3de:	465b      	mov	r3, fp
    a3e0:	0c1b      	lsrs	r3, r3, #16
    a3e2:	1acb      	subs	r3, r1, r3
    a3e4:	1411      	asrs	r1, r2, #16
    a3e6:	185b      	adds	r3, r3, r1
    a3e8:	0412      	lsls	r2, r2, #16
    a3ea:	1419      	asrs	r1, r3, #16
    a3ec:	0c12      	lsrs	r2, r2, #16
    a3ee:	041b      	lsls	r3, r3, #16
    a3f0:	468a      	mov	sl, r1
    a3f2:	4313      	orrs	r3, r2
    a3f4:	1d29      	adds	r1, r5, #4
    a3f6:	602b      	str	r3, [r5, #0]
    a3f8:	000d      	movs	r5, r1
    a3fa:	45b0      	cmp	r8, r6
    a3fc:	d8e2      	bhi.n	a3c4 <__mdiff+0x84>
    a3fe:	45a4      	cmp	ip, r4
    a400:	d916      	bls.n	a430 <__mdiff+0xf0>
    a402:	cc08      	ldmia	r4!, {r3}
    a404:	041a      	lsls	r2, r3, #16
    a406:	0c12      	lsrs	r2, r2, #16
    a408:	4452      	add	r2, sl
    a40a:	1416      	asrs	r6, r2, #16
    a40c:	0c1b      	lsrs	r3, r3, #16
    a40e:	199b      	adds	r3, r3, r6
    a410:	0412      	lsls	r2, r2, #16
    a412:	141e      	asrs	r6, r3, #16
    a414:	0c12      	lsrs	r2, r2, #16
    a416:	041b      	lsls	r3, r3, #16
    a418:	4313      	orrs	r3, r2
    a41a:	46b2      	mov	sl, r6
    a41c:	c508      	stmia	r5!, {r3}
    a41e:	45a4      	cmp	ip, r4
    a420:	d8ef      	bhi.n	a402 <__mdiff+0xc2>
    a422:	4662      	mov	r2, ip
    a424:	2403      	movs	r4, #3
    a426:	1bd2      	subs	r2, r2, r7
    a428:	3a05      	subs	r2, #5
    a42a:	43a2      	bics	r2, r4
    a42c:	3204      	adds	r2, #4
    a42e:	1889      	adds	r1, r1, r2
    a430:	3904      	subs	r1, #4
    a432:	2b00      	cmp	r3, #0
    a434:	d104      	bne.n	a440 <__mdiff+0x100>
    a436:	3904      	subs	r1, #4
    a438:	680b      	ldr	r3, [r1, #0]
    a43a:	3801      	subs	r0, #1
    a43c:	2b00      	cmp	r3, #0
    a43e:	d0fa      	beq.n	a436 <__mdiff+0xf6>
    a440:	464b      	mov	r3, r9
    a442:	6118      	str	r0, [r3, #16]
    a444:	4648      	mov	r0, r9
    a446:	bc3c      	pop	{r2, r3, r4, r5}
    a448:	4690      	mov	r8, r2
    a44a:	4699      	mov	r9, r3
    a44c:	46a2      	mov	sl, r4
    a44e:	46ab      	mov	fp, r5
    a450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a452:	2100      	movs	r1, #0
    a454:	f7ff fcdc 	bl	9e10 <_Balloc>
    a458:	2301      	movs	r3, #1
    a45a:	6103      	str	r3, [r0, #16]
    a45c:	2300      	movs	r3, #0
    a45e:	4681      	mov	r9, r0
    a460:	6143      	str	r3, [r0, #20]
    a462:	e7ef      	b.n	a444 <__mdiff+0x104>
    a464:	4666      	mov	r6, ip
    a466:	e799      	b.n	a39c <__mdiff+0x5c>
    a468:	0027      	movs	r7, r4
    a46a:	000e      	movs	r6, r1
    a46c:	46a0      	mov	r8, r4
    a46e:	3714      	adds	r7, #20
    a470:	3614      	adds	r6, #20
    a472:	000c      	movs	r4, r1
    a474:	2501      	movs	r5, #1
    a476:	e791      	b.n	a39c <__mdiff+0x5c>

0000a478 <__ulp>:
    a478:	4b10      	ldr	r3, [pc, #64]	; (a4bc <__ulp+0x44>)
    a47a:	b510      	push	{r4, lr}
    a47c:	4019      	ands	r1, r3
    a47e:	4b10      	ldr	r3, [pc, #64]	; (a4c0 <__ulp+0x48>)
    a480:	469c      	mov	ip, r3
    a482:	4461      	add	r1, ip
    a484:	2900      	cmp	r1, #0
    a486:	dd04      	ble.n	a492 <__ulp+0x1a>
    a488:	2200      	movs	r2, #0
    a48a:	000b      	movs	r3, r1
    a48c:	0010      	movs	r0, r2
    a48e:	0019      	movs	r1, r3
    a490:	bd10      	pop	{r4, pc}
    a492:	4249      	negs	r1, r1
    a494:	1509      	asrs	r1, r1, #20
    a496:	2200      	movs	r2, #0
    a498:	2300      	movs	r3, #0
    a49a:	2913      	cmp	r1, #19
    a49c:	dd08      	ble.n	a4b0 <__ulp+0x38>
    a49e:	3914      	subs	r1, #20
    a4a0:	2001      	movs	r0, #1
    a4a2:	291e      	cmp	r1, #30
    a4a4:	dc02      	bgt.n	a4ac <__ulp+0x34>
    a4a6:	241f      	movs	r4, #31
    a4a8:	1a61      	subs	r1, r4, r1
    a4aa:	4088      	lsls	r0, r1
    a4ac:	0002      	movs	r2, r0
    a4ae:	e7ed      	b.n	a48c <__ulp+0x14>
    a4b0:	2080      	movs	r0, #128	; 0x80
    a4b2:	0300      	lsls	r0, r0, #12
    a4b4:	4108      	asrs	r0, r1
    a4b6:	0003      	movs	r3, r0
    a4b8:	e7e8      	b.n	a48c <__ulp+0x14>
    a4ba:	46c0      	nop			; (mov r8, r8)
    a4bc:	7ff00000 	.word	0x7ff00000
    a4c0:	fcc00000 	.word	0xfcc00000

0000a4c4 <__b2d>:
    a4c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    a4c6:	464f      	mov	r7, r9
    a4c8:	4646      	mov	r6, r8
    a4ca:	46d6      	mov	lr, sl
    a4cc:	6904      	ldr	r4, [r0, #16]
    a4ce:	b5c0      	push	{r6, r7, lr}
    a4d0:	00a4      	lsls	r4, r4, #2
    a4d2:	0006      	movs	r6, r0
    a4d4:	46a1      	mov	r9, r4
    a4d6:	3614      	adds	r6, #20
    a4d8:	44b1      	add	r9, r6
    a4da:	464b      	mov	r3, r9
    a4dc:	4688      	mov	r8, r1
    a4de:	1f1f      	subs	r7, r3, #4
    a4e0:	683d      	ldr	r5, [r7, #0]
    a4e2:	0028      	movs	r0, r5
    a4e4:	f7ff fd56 	bl	9f94 <__hi0bits>
    a4e8:	2120      	movs	r1, #32
    a4ea:	4643      	mov	r3, r8
    a4ec:	1a0a      	subs	r2, r1, r0
    a4ee:	601a      	str	r2, [r3, #0]
    a4f0:	280a      	cmp	r0, #10
    a4f2:	dc20      	bgt.n	a536 <__b2d+0x72>
    a4f4:	3915      	subs	r1, #21
    a4f6:	1a0b      	subs	r3, r1, r0
    a4f8:	469a      	mov	sl, r3
    a4fa:	002b      	movs	r3, r5
    a4fc:	4652      	mov	r2, sl
    a4fe:	4926      	ldr	r1, [pc, #152]	; (a598 <__b2d+0xd4>)
    a500:	40d3      	lsrs	r3, r2
    a502:	4688      	mov	r8, r1
    a504:	0019      	movs	r1, r3
    a506:	4644      	mov	r4, r8
    a508:	4321      	orrs	r1, r4
    a50a:	000b      	movs	r3, r1
    a50c:	2100      	movs	r1, #0
    a50e:	468c      	mov	ip, r1
    a510:	42be      	cmp	r6, r7
    a512:	d204      	bcs.n	a51e <__b2d+0x5a>
    a514:	464c      	mov	r4, r9
    a516:	3c08      	subs	r4, #8
    a518:	6824      	ldr	r4, [r4, #0]
    a51a:	40d4      	lsrs	r4, r2
    a51c:	46a4      	mov	ip, r4
    a51e:	3015      	adds	r0, #21
    a520:	4085      	lsls	r5, r0
    a522:	4661      	mov	r1, ip
    a524:	4329      	orrs	r1, r5
    a526:	000a      	movs	r2, r1
    a528:	0010      	movs	r0, r2
    a52a:	0019      	movs	r1, r3
    a52c:	bc1c      	pop	{r2, r3, r4}
    a52e:	4690      	mov	r8, r2
    a530:	4699      	mov	r9, r3
    a532:	46a2      	mov	sl, r4
    a534:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a536:	42be      	cmp	r6, r7
    a538:	d21b      	bcs.n	a572 <__b2d+0xae>
    a53a:	2308      	movs	r3, #8
    a53c:	425b      	negs	r3, r3
    a53e:	469c      	mov	ip, r3
    a540:	44cc      	add	ip, r9
    a542:	4663      	mov	r3, ip
    a544:	380b      	subs	r0, #11
    a546:	681f      	ldr	r7, [r3, #0]
    a548:	2800      	cmp	r0, #0
    a54a:	d016      	beq.n	a57a <__b2d+0xb6>
    a54c:	4085      	lsls	r5, r0
    a54e:	4b12      	ldr	r3, [pc, #72]	; (a598 <__b2d+0xd4>)
    a550:	1a09      	subs	r1, r1, r0
    a552:	431d      	orrs	r5, r3
    a554:	003b      	movs	r3, r7
    a556:	40cb      	lsrs	r3, r1
    a558:	001c      	movs	r4, r3
    a55a:	432c      	orrs	r4, r5
    a55c:	0023      	movs	r3, r4
    a55e:	4566      	cmp	r6, ip
    a560:	d217      	bcs.n	a592 <__b2d+0xce>
    a562:	464c      	mov	r4, r9
    a564:	3c0c      	subs	r4, #12
    a566:	6824      	ldr	r4, [r4, #0]
    a568:	4087      	lsls	r7, r0
    a56a:	40cc      	lsrs	r4, r1
    a56c:	4327      	orrs	r7, r4
    a56e:	003a      	movs	r2, r7
    a570:	e7da      	b.n	a528 <__b2d+0x64>
    a572:	380b      	subs	r0, #11
    a574:	2700      	movs	r7, #0
    a576:	2800      	cmp	r0, #0
    a578:	d104      	bne.n	a584 <__b2d+0xc0>
    a57a:	4907      	ldr	r1, [pc, #28]	; (a598 <__b2d+0xd4>)
    a57c:	003a      	movs	r2, r7
    a57e:	4329      	orrs	r1, r5
    a580:	000b      	movs	r3, r1
    a582:	e7d1      	b.n	a528 <__b2d+0x64>
    a584:	4085      	lsls	r5, r0
    a586:	2700      	movs	r7, #0
    a588:	4903      	ldr	r1, [pc, #12]	; (a598 <__b2d+0xd4>)
    a58a:	003a      	movs	r2, r7
    a58c:	4329      	orrs	r1, r5
    a58e:	000b      	movs	r3, r1
    a590:	e7ca      	b.n	a528 <__b2d+0x64>
    a592:	4087      	lsls	r7, r0
    a594:	003a      	movs	r2, r7
    a596:	e7c7      	b.n	a528 <__b2d+0x64>
    a598:	3ff00000 	.word	0x3ff00000

0000a59c <__d2b>:
    a59c:	b5f0      	push	{r4, r5, r6, r7, lr}
    a59e:	2101      	movs	r1, #1
    a5a0:	001c      	movs	r4, r3
    a5a2:	b083      	sub	sp, #12
    a5a4:	9e08      	ldr	r6, [sp, #32]
    a5a6:	0015      	movs	r5, r2
    a5a8:	f7ff fc32 	bl	9e10 <_Balloc>
    a5ac:	0323      	lsls	r3, r4, #12
    a5ae:	0064      	lsls	r4, r4, #1
    a5b0:	0007      	movs	r7, r0
    a5b2:	0b1b      	lsrs	r3, r3, #12
    a5b4:	0d64      	lsrs	r4, r4, #21
    a5b6:	d002      	beq.n	a5be <__d2b+0x22>
    a5b8:	2280      	movs	r2, #128	; 0x80
    a5ba:	0352      	lsls	r2, r2, #13
    a5bc:	4313      	orrs	r3, r2
    a5be:	9301      	str	r3, [sp, #4]
    a5c0:	2d00      	cmp	r5, #0
    a5c2:	d019      	beq.n	a5f8 <__d2b+0x5c>
    a5c4:	4668      	mov	r0, sp
    a5c6:	9500      	str	r5, [sp, #0]
    a5c8:	f7ff fcfe 	bl	9fc8 <__lo0bits>
    a5cc:	2800      	cmp	r0, #0
    a5ce:	d130      	bne.n	a632 <__d2b+0x96>
    a5d0:	9b00      	ldr	r3, [sp, #0]
    a5d2:	617b      	str	r3, [r7, #20]
    a5d4:	9b01      	ldr	r3, [sp, #4]
    a5d6:	61bb      	str	r3, [r7, #24]
    a5d8:	1e5a      	subs	r2, r3, #1
    a5da:	4193      	sbcs	r3, r2
    a5dc:	1c5d      	adds	r5, r3, #1
    a5de:	613d      	str	r5, [r7, #16]
    a5e0:	2c00      	cmp	r4, #0
    a5e2:	d014      	beq.n	a60e <__d2b+0x72>
    a5e4:	4b19      	ldr	r3, [pc, #100]	; (a64c <__d2b+0xb0>)
    a5e6:	469c      	mov	ip, r3
    a5e8:	2335      	movs	r3, #53	; 0x35
    a5ea:	4464      	add	r4, ip
    a5ec:	1824      	adds	r4, r4, r0
    a5ee:	1a18      	subs	r0, r3, r0
    a5f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a5f2:	6034      	str	r4, [r6, #0]
    a5f4:	6018      	str	r0, [r3, #0]
    a5f6:	e019      	b.n	a62c <__d2b+0x90>
    a5f8:	a801      	add	r0, sp, #4
    a5fa:	f7ff fce5 	bl	9fc8 <__lo0bits>
    a5fe:	9b01      	ldr	r3, [sp, #4]
    a600:	3020      	adds	r0, #32
    a602:	617b      	str	r3, [r7, #20]
    a604:	2301      	movs	r3, #1
    a606:	2501      	movs	r5, #1
    a608:	613b      	str	r3, [r7, #16]
    a60a:	2c00      	cmp	r4, #0
    a60c:	d1ea      	bne.n	a5e4 <__d2b+0x48>
    a60e:	4b10      	ldr	r3, [pc, #64]	; (a650 <__d2b+0xb4>)
    a610:	469c      	mov	ip, r3
    a612:	4b10      	ldr	r3, [pc, #64]	; (a654 <__d2b+0xb8>)
    a614:	4460      	add	r0, ip
    a616:	18eb      	adds	r3, r5, r3
    a618:	009b      	lsls	r3, r3, #2
    a61a:	18fb      	adds	r3, r7, r3
    a61c:	6030      	str	r0, [r6, #0]
    a61e:	6958      	ldr	r0, [r3, #20]
    a620:	f7ff fcb8 	bl	9f94 <__hi0bits>
    a624:	016b      	lsls	r3, r5, #5
    a626:	1a18      	subs	r0, r3, r0
    a628:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a62a:	6018      	str	r0, [r3, #0]
    a62c:	0038      	movs	r0, r7
    a62e:	b003      	add	sp, #12
    a630:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a632:	9b01      	ldr	r3, [sp, #4]
    a634:	2220      	movs	r2, #32
    a636:	0019      	movs	r1, r3
    a638:	1a12      	subs	r2, r2, r0
    a63a:	4091      	lsls	r1, r2
    a63c:	000a      	movs	r2, r1
    a63e:	40c3      	lsrs	r3, r0
    a640:	9900      	ldr	r1, [sp, #0]
    a642:	9301      	str	r3, [sp, #4]
    a644:	430a      	orrs	r2, r1
    a646:	617a      	str	r2, [r7, #20]
    a648:	e7c5      	b.n	a5d6 <__d2b+0x3a>
    a64a:	46c0      	nop			; (mov r8, r8)
    a64c:	fffffbcd 	.word	0xfffffbcd
    a650:	fffffbce 	.word	0xfffffbce
    a654:	3fffffff 	.word	0x3fffffff

0000a658 <__ratio>:
    a658:	b5f0      	push	{r4, r5, r6, r7, lr}
    a65a:	46ce      	mov	lr, r9
    a65c:	4647      	mov	r7, r8
    a65e:	b580      	push	{r7, lr}
    a660:	b085      	sub	sp, #20
    a662:	4688      	mov	r8, r1
    a664:	a902      	add	r1, sp, #8
    a666:	4681      	mov	r9, r0
    a668:	f7ff ff2c 	bl	a4c4 <__b2d>
    a66c:	0006      	movs	r6, r0
    a66e:	000f      	movs	r7, r1
    a670:	4640      	mov	r0, r8
    a672:	a903      	add	r1, sp, #12
    a674:	f7ff ff26 	bl	a4c4 <__b2d>
    a678:	464b      	mov	r3, r9
    a67a:	691b      	ldr	r3, [r3, #16]
    a67c:	9000      	str	r0, [sp, #0]
    a67e:	9101      	str	r1, [sp, #4]
    a680:	469c      	mov	ip, r3
    a682:	4643      	mov	r3, r8
    a684:	691b      	ldr	r3, [r3, #16]
    a686:	4698      	mov	r8, r3
    a688:	4663      	mov	r3, ip
    a68a:	4642      	mov	r2, r8
    a68c:	1a9b      	subs	r3, r3, r2
    a68e:	015b      	lsls	r3, r3, #5
    a690:	469c      	mov	ip, r3
    a692:	9a03      	ldr	r2, [sp, #12]
    a694:	9b02      	ldr	r3, [sp, #8]
    a696:	1a9b      	subs	r3, r3, r2
    a698:	4698      	mov	r8, r3
    a69a:	44c4      	add	ip, r8
    a69c:	4663      	mov	r3, ip
    a69e:	2b00      	cmp	r3, #0
    a6a0:	dd0d      	ble.n	a6be <__ratio+0x66>
    a6a2:	051b      	lsls	r3, r3, #20
    a6a4:	19dd      	adds	r5, r3, r7
    a6a6:	002f      	movs	r7, r5
    a6a8:	0002      	movs	r2, r0
    a6aa:	000b      	movs	r3, r1
    a6ac:	0030      	movs	r0, r6
    a6ae:	0039      	movs	r1, r7
    a6b0:	f7f9 fbe2 	bl	3e78 <__aeabi_ddiv>
    a6b4:	b005      	add	sp, #20
    a6b6:	bc0c      	pop	{r2, r3}
    a6b8:	4690      	mov	r8, r2
    a6ba:	4699      	mov	r9, r3
    a6bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a6be:	4663      	mov	r3, ip
    a6c0:	0518      	lsls	r0, r3, #20
    a6c2:	1a0b      	subs	r3, r1, r0
    a6c4:	9301      	str	r3, [sp, #4]
    a6c6:	9800      	ldr	r0, [sp, #0]
    a6c8:	9901      	ldr	r1, [sp, #4]
    a6ca:	e7ed      	b.n	a6a8 <__ratio+0x50>

0000a6cc <__copybits>:
    a6cc:	0013      	movs	r3, r2
    a6ce:	b570      	push	{r4, r5, r6, lr}
    a6d0:	1e4c      	subs	r4, r1, #1
    a6d2:	6911      	ldr	r1, [r2, #16]
    a6d4:	1164      	asrs	r4, r4, #5
    a6d6:	3401      	adds	r4, #1
    a6d8:	3314      	adds	r3, #20
    a6da:	0089      	lsls	r1, r1, #2
    a6dc:	00a4      	lsls	r4, r4, #2
    a6de:	1859      	adds	r1, r3, r1
    a6e0:	1904      	adds	r4, r0, r4
    a6e2:	428b      	cmp	r3, r1
    a6e4:	d20b      	bcs.n	a6fe <__copybits+0x32>
    a6e6:	0005      	movs	r5, r0
    a6e8:	cb40      	ldmia	r3!, {r6}
    a6ea:	c540      	stmia	r5!, {r6}
    a6ec:	4299      	cmp	r1, r3
    a6ee:	d8fb      	bhi.n	a6e8 <__copybits+0x1c>
    a6f0:	2303      	movs	r3, #3
    a6f2:	3218      	adds	r2, #24
    a6f4:	1a9a      	subs	r2, r3, r2
    a6f6:	1889      	adds	r1, r1, r2
    a6f8:	4399      	bics	r1, r3
    a6fa:	3104      	adds	r1, #4
    a6fc:	1840      	adds	r0, r0, r1
    a6fe:	2300      	movs	r3, #0
    a700:	4284      	cmp	r4, r0
    a702:	d902      	bls.n	a70a <__copybits+0x3e>
    a704:	c008      	stmia	r0!, {r3}
    a706:	4284      	cmp	r4, r0
    a708:	d8fc      	bhi.n	a704 <__copybits+0x38>
    a70a:	bd70      	pop	{r4, r5, r6, pc}

0000a70c <__any_on>:
    a70c:	0002      	movs	r2, r0
    a70e:	6903      	ldr	r3, [r0, #16]
    a710:	b510      	push	{r4, lr}
    a712:	3214      	adds	r2, #20
    a714:	1148      	asrs	r0, r1, #5
    a716:	4283      	cmp	r3, r0
    a718:	da0f      	bge.n	a73a <__any_on+0x2e>
    a71a:	009b      	lsls	r3, r3, #2
    a71c:	18d3      	adds	r3, r2, r3
    a71e:	429a      	cmp	r2, r3
    a720:	d221      	bcs.n	a766 <__any_on+0x5a>
    a722:	3b04      	subs	r3, #4
    a724:	6818      	ldr	r0, [r3, #0]
    a726:	2800      	cmp	r0, #0
    a728:	d004      	beq.n	a734 <__any_on+0x28>
    a72a:	e01a      	b.n	a762 <__any_on+0x56>
    a72c:	3b04      	subs	r3, #4
    a72e:	6819      	ldr	r1, [r3, #0]
    a730:	2900      	cmp	r1, #0
    a732:	d116      	bne.n	a762 <__any_on+0x56>
    a734:	429a      	cmp	r2, r3
    a736:	d3f9      	bcc.n	a72c <__any_on+0x20>
    a738:	bd10      	pop	{r4, pc}
    a73a:	4283      	cmp	r3, r0
    a73c:	dd0e      	ble.n	a75c <__any_on+0x50>
    a73e:	231f      	movs	r3, #31
    a740:	4019      	ands	r1, r3
    a742:	0083      	lsls	r3, r0, #2
    a744:	18d3      	adds	r3, r2, r3
    a746:	2900      	cmp	r1, #0
    a748:	d0e9      	beq.n	a71e <__any_on+0x12>
    a74a:	681c      	ldr	r4, [r3, #0]
    a74c:	0020      	movs	r0, r4
    a74e:	40c8      	lsrs	r0, r1
    a750:	4088      	lsls	r0, r1
    a752:	0001      	movs	r1, r0
    a754:	2001      	movs	r0, #1
    a756:	428c      	cmp	r4, r1
    a758:	d1ee      	bne.n	a738 <__any_on+0x2c>
    a75a:	e7e0      	b.n	a71e <__any_on+0x12>
    a75c:	0083      	lsls	r3, r0, #2
    a75e:	18d3      	adds	r3, r2, r3
    a760:	e7dd      	b.n	a71e <__any_on+0x12>
    a762:	2001      	movs	r0, #1
    a764:	e7e8      	b.n	a738 <__any_on+0x2c>
    a766:	2000      	movs	r0, #0
    a768:	e7e6      	b.n	a738 <__any_on+0x2c>
    a76a:	46c0      	nop			; (mov r8, r8)

0000a76c <_sbrk_r>:
    a76c:	2300      	movs	r3, #0
    a76e:	b570      	push	{r4, r5, r6, lr}
    a770:	4c06      	ldr	r4, [pc, #24]	; (a78c <_sbrk_r+0x20>)
    a772:	0005      	movs	r5, r0
    a774:	0008      	movs	r0, r1
    a776:	6023      	str	r3, [r4, #0]
    a778:	f7f6 f8ee 	bl	958 <_sbrk>
    a77c:	1c43      	adds	r3, r0, #1
    a77e:	d000      	beq.n	a782 <_sbrk_r+0x16>
    a780:	bd70      	pop	{r4, r5, r6, pc}
    a782:	6823      	ldr	r3, [r4, #0]
    a784:	2b00      	cmp	r3, #0
    a786:	d0fb      	beq.n	a780 <_sbrk_r+0x14>
    a788:	602b      	str	r3, [r5, #0]
    a78a:	e7f9      	b.n	a780 <_sbrk_r+0x14>
    a78c:	2000145c 	.word	0x2000145c

0000a790 <__sccl>:
    a790:	b570      	push	{r4, r5, r6, lr}
    a792:	780c      	ldrb	r4, [r1, #0]
    a794:	2c5e      	cmp	r4, #94	; 0x5e
    a796:	d028      	beq.n	a7ea <__sccl+0x5a>
    a798:	1c4e      	adds	r6, r1, #1
    a79a:	2500      	movs	r5, #0
    a79c:	2100      	movs	r1, #0
    a79e:	0003      	movs	r3, r0
    a7a0:	1c42      	adds	r2, r0, #1
    a7a2:	32ff      	adds	r2, #255	; 0xff
    a7a4:	7019      	strb	r1, [r3, #0]
    a7a6:	3301      	adds	r3, #1
    a7a8:	429a      	cmp	r2, r3
    a7aa:	d1fb      	bne.n	a7a4 <__sccl+0x14>
    a7ac:	1e71      	subs	r1, r6, #1
    a7ae:	2c00      	cmp	r4, #0
    a7b0:	d00e      	beq.n	a7d0 <__sccl+0x40>
    a7b2:	2301      	movs	r3, #1
    a7b4:	406b      	eors	r3, r5
    a7b6:	5503      	strb	r3, [r0, r4]
    a7b8:	7832      	ldrb	r2, [r6, #0]
    a7ba:	1c71      	adds	r1, r6, #1
    a7bc:	2a2d      	cmp	r2, #45	; 0x2d
    a7be:	d009      	beq.n	a7d4 <__sccl+0x44>
    a7c0:	2a5d      	cmp	r2, #93	; 0x5d
    a7c2:	d005      	beq.n	a7d0 <__sccl+0x40>
    a7c4:	2a00      	cmp	r2, #0
    a7c6:	d002      	beq.n	a7ce <__sccl+0x3e>
    a7c8:	0014      	movs	r4, r2
    a7ca:	000e      	movs	r6, r1
    a7cc:	e7f3      	b.n	a7b6 <__sccl+0x26>
    a7ce:	0031      	movs	r1, r6
    a7d0:	0008      	movs	r0, r1
    a7d2:	bd70      	pop	{r4, r5, r6, pc}
    a7d4:	7872      	ldrb	r2, [r6, #1]
    a7d6:	2a5d      	cmp	r2, #93	; 0x5d
    a7d8:	d00c      	beq.n	a7f4 <__sccl+0x64>
    a7da:	4294      	cmp	r4, r2
    a7dc:	dc0a      	bgt.n	a7f4 <__sccl+0x64>
    a7de:	3602      	adds	r6, #2
    a7e0:	3401      	adds	r4, #1
    a7e2:	5503      	strb	r3, [r0, r4]
    a7e4:	42a2      	cmp	r2, r4
    a7e6:	dcfb      	bgt.n	a7e0 <__sccl+0x50>
    a7e8:	e7e6      	b.n	a7b8 <__sccl+0x28>
    a7ea:	1c8e      	adds	r6, r1, #2
    a7ec:	784c      	ldrb	r4, [r1, #1]
    a7ee:	2501      	movs	r5, #1
    a7f0:	2101      	movs	r1, #1
    a7f2:	e7d4      	b.n	a79e <__sccl+0xe>
    a7f4:	242d      	movs	r4, #45	; 0x2d
    a7f6:	000e      	movs	r6, r1
    a7f8:	e7dd      	b.n	a7b6 <__sccl+0x26>
    a7fa:	46c0      	nop			; (mov r8, r8)

0000a7fc <nanf>:
    a7fc:	4800      	ldr	r0, [pc, #0]	; (a800 <nanf+0x4>)
    a7fe:	4770      	bx	lr
    a800:	7fc00000 	.word	0x7fc00000

0000a804 <sprintf>:
    a804:	b40e      	push	{r1, r2, r3}
    a806:	b510      	push	{r4, lr}
    a808:	b09d      	sub	sp, #116	; 0x74
    a80a:	a902      	add	r1, sp, #8
    a80c:	9002      	str	r0, [sp, #8]
    a80e:	6108      	str	r0, [r1, #16]
    a810:	480b      	ldr	r0, [pc, #44]	; (a840 <sprintf+0x3c>)
    a812:	2482      	movs	r4, #130	; 0x82
    a814:	6088      	str	r0, [r1, #8]
    a816:	6148      	str	r0, [r1, #20]
    a818:	2001      	movs	r0, #1
    a81a:	4240      	negs	r0, r0
    a81c:	ab1f      	add	r3, sp, #124	; 0x7c
    a81e:	81c8      	strh	r0, [r1, #14]
    a820:	4808      	ldr	r0, [pc, #32]	; (a844 <sprintf+0x40>)
    a822:	cb04      	ldmia	r3!, {r2}
    a824:	00a4      	lsls	r4, r4, #2
    a826:	6800      	ldr	r0, [r0, #0]
    a828:	9301      	str	r3, [sp, #4]
    a82a:	818c      	strh	r4, [r1, #12]
    a82c:	f7fb fb44 	bl	5eb8 <_svfprintf_r>
    a830:	2300      	movs	r3, #0
    a832:	9a02      	ldr	r2, [sp, #8]
    a834:	7013      	strb	r3, [r2, #0]
    a836:	b01d      	add	sp, #116	; 0x74
    a838:	bc10      	pop	{r4}
    a83a:	bc08      	pop	{r3}
    a83c:	b003      	add	sp, #12
    a83e:	4718      	bx	r3
    a840:	7fffffff 	.word	0x7fffffff
    a844:	20000098 	.word	0x20000098

0000a848 <sulp>:
    a848:	b570      	push	{r4, r5, r6, lr}
    a84a:	0016      	movs	r6, r2
    a84c:	000d      	movs	r5, r1
    a84e:	f7ff fe13 	bl	a478 <__ulp>
    a852:	2e00      	cmp	r6, #0
    a854:	d00d      	beq.n	a872 <sulp+0x2a>
    a856:	236b      	movs	r3, #107	; 0x6b
    a858:	006a      	lsls	r2, r5, #1
    a85a:	0d52      	lsrs	r2, r2, #21
    a85c:	1a9b      	subs	r3, r3, r2
    a85e:	2b00      	cmp	r3, #0
    a860:	dd07      	ble.n	a872 <sulp+0x2a>
    a862:	2400      	movs	r4, #0
    a864:	4a03      	ldr	r2, [pc, #12]	; (a874 <sulp+0x2c>)
    a866:	051b      	lsls	r3, r3, #20
    a868:	189d      	adds	r5, r3, r2
    a86a:	002b      	movs	r3, r5
    a86c:	0022      	movs	r2, r4
    a86e:	f7f9 fe37 	bl	44e0 <__aeabi_dmul>
    a872:	bd70      	pop	{r4, r5, r6, pc}
    a874:	3ff00000 	.word	0x3ff00000

0000a878 <_strtod_l>:
    a878:	b5f0      	push	{r4, r5, r6, r7, lr}
    a87a:	46de      	mov	lr, fp
    a87c:	4657      	mov	r7, sl
    a87e:	464e      	mov	r6, r9
    a880:	4645      	mov	r5, r8
    a882:	b5e0      	push	{r5, r6, r7, lr}
    a884:	001d      	movs	r5, r3
    a886:	2300      	movs	r3, #0
    a888:	b0a3      	sub	sp, #140	; 0x8c
    a88a:	9009      	str	r0, [sp, #36]	; 0x24
    a88c:	0028      	movs	r0, r5
    a88e:	000e      	movs	r6, r1
    a890:	931e      	str	r3, [sp, #120]	; 0x78
    a892:	4693      	mov	fp, r2
    a894:	f7fe fef4 	bl	9680 <__localeconv_l>
    a898:	0007      	movs	r7, r0
    a89a:	6800      	ldr	r0, [r0, #0]
    a89c:	f7fa ffca 	bl	5834 <strlen>
    a8a0:	2400      	movs	r4, #0
    a8a2:	2300      	movs	r3, #0
    a8a4:	9304      	str	r3, [sp, #16]
    a8a6:	9405      	str	r4, [sp, #20]
    a8a8:	0033      	movs	r3, r6
    a8aa:	961d      	str	r6, [sp, #116]	; 0x74
    a8ac:	781c      	ldrb	r4, [r3, #0]
    a8ae:	9008      	str	r0, [sp, #32]
    a8b0:	49c4      	ldr	r1, [pc, #784]	; (abc4 <_strtod_l+0x34c>)
    a8b2:	2c2d      	cmp	r4, #45	; 0x2d
    a8b4:	d900      	bls.n	a8b8 <_strtod_l+0x40>
    a8b6:	e070      	b.n	a99a <_strtod_l+0x122>
    a8b8:	00a2      	lsls	r2, r4, #2
    a8ba:	588a      	ldr	r2, [r1, r2]
    a8bc:	4697      	mov	pc, r2
    a8be:	4689      	mov	r9, r1
    a8c0:	0014      	movs	r4, r2
    a8c2:	6839      	ldr	r1, [r7, #0]
    a8c4:	9a08      	ldr	r2, [sp, #32]
    a8c6:	4698      	mov	r8, r3
    a8c8:	f002 f9e0 	bl	cc8c <strncmp>
    a8cc:	2800      	cmp	r0, #0
    a8ce:	d100      	bne.n	a8d2 <_strtod_l+0x5a>
    a8d0:	e084      	b.n	a9dc <_strtod_l+0x164>
    a8d2:	2200      	movs	r2, #0
    a8d4:	2300      	movs	r3, #0
    a8d6:	2000      	movs	r0, #0
    a8d8:	950a      	str	r5, [sp, #40]	; 0x28
    a8da:	9208      	str	r2, [sp, #32]
    a8dc:	2220      	movs	r2, #32
    a8de:	0021      	movs	r1, r4
    a8e0:	4391      	bics	r1, r2
    a8e2:	2200      	movs	r2, #0
    a8e4:	2945      	cmp	r1, #69	; 0x45
    a8e6:	d100      	bne.n	a8ea <_strtod_l+0x72>
    a8e8:	e0a6      	b.n	aa38 <_strtod_l+0x1c0>
    a8ea:	2d00      	cmp	r5, #0
    a8ec:	d000      	beq.n	a8f0 <_strtod_l+0x78>
    a8ee:	e104      	b.n	aafa <_strtod_l+0x282>
    a8f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a8f2:	4313      	orrs	r3, r2
    a8f4:	d000      	beq.n	a8f8 <_strtod_l+0x80>
    a8f6:	e0f8      	b.n	aaea <_strtod_l+0x272>
    a8f8:	9b08      	ldr	r3, [sp, #32]
    a8fa:	2b00      	cmp	r3, #0
    a8fc:	d100      	bne.n	a900 <_strtod_l+0x88>
    a8fe:	e13d      	b.n	ab7c <_strtod_l+0x304>
    a900:	465b      	mov	r3, fp
    a902:	2400      	movs	r4, #0
    a904:	2500      	movs	r5, #0
    a906:	2b00      	cmp	r3, #0
    a908:	d006      	beq.n	a918 <_strtod_l+0xa0>
    a90a:	2300      	movs	r3, #0
    a90c:	9307      	str	r3, [sp, #28]
    a90e:	465b      	mov	r3, fp
    a910:	601e      	str	r6, [r3, #0]
    a912:	9b07      	ldr	r3, [sp, #28]
    a914:	2b00      	cmp	r3, #0
    a916:	d108      	bne.n	a92a <_strtod_l+0xb2>
    a918:	0020      	movs	r0, r4
    a91a:	0029      	movs	r1, r5
    a91c:	b023      	add	sp, #140	; 0x8c
    a91e:	bc3c      	pop	{r2, r3, r4, r5}
    a920:	4690      	mov	r8, r2
    a922:	4699      	mov	r9, r3
    a924:	46a2      	mov	sl, r4
    a926:	46ab      	mov	fp, r5
    a928:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a92a:	2180      	movs	r1, #128	; 0x80
    a92c:	0609      	lsls	r1, r1, #24
    a92e:	186b      	adds	r3, r5, r1
    a930:	001d      	movs	r5, r3
    a932:	e7f1      	b.n	a918 <_strtod_l+0xa0>
    a934:	2200      	movs	r2, #0
    a936:	9207      	str	r2, [sp, #28]
    a938:	1c5a      	adds	r2, r3, #1
    a93a:	921d      	str	r2, [sp, #116]	; 0x74
    a93c:	785c      	ldrb	r4, [r3, #1]
    a93e:	4692      	mov	sl, r2
    a940:	2c00      	cmp	r4, #0
    a942:	d0dd      	beq.n	a900 <_strtod_l+0x88>
    a944:	2300      	movs	r3, #0
    a946:	930c      	str	r3, [sp, #48]	; 0x30
    a948:	2c30      	cmp	r4, #48	; 0x30
    a94a:	d02d      	beq.n	a9a8 <_strtod_l+0x130>
    a94c:	0023      	movs	r3, r4
    a94e:	3b30      	subs	r3, #48	; 0x30
    a950:	2b09      	cmp	r3, #9
    a952:	d900      	bls.n	a956 <_strtod_l+0xde>
    a954:	e38c      	b.n	b070 <_strtod_l+0x7f8>
    a956:	2300      	movs	r3, #0
    a958:	4650      	mov	r0, sl
    a95a:	2500      	movs	r5, #0
    a95c:	0019      	movs	r1, r3
    a95e:	0022      	movs	r2, r4
    a960:	e00c      	b.n	a97c <_strtod_l+0x104>
    a962:	009c      	lsls	r4, r3, #2
    a964:	18e3      	adds	r3, r4, r3
    a966:	005b      	lsls	r3, r3, #1
    a968:	189b      	adds	r3, r3, r2
    a96a:	3b30      	subs	r3, #48	; 0x30
    a96c:	3001      	adds	r0, #1
    a96e:	901d      	str	r0, [sp, #116]	; 0x74
    a970:	7802      	ldrb	r2, [r0, #0]
    a972:	3501      	adds	r5, #1
    a974:	0014      	movs	r4, r2
    a976:	3c30      	subs	r4, #48	; 0x30
    a978:	2c09      	cmp	r4, #9
    a97a:	d8a0      	bhi.n	a8be <_strtod_l+0x46>
    a97c:	2d08      	cmp	r5, #8
    a97e:	ddf0      	ble.n	a962 <_strtod_l+0xea>
    a980:	008c      	lsls	r4, r1, #2
    a982:	1864      	adds	r4, r4, r1
    a984:	0064      	lsls	r4, r4, #1
    a986:	18a4      	adds	r4, r4, r2
    a988:	0021      	movs	r1, r4
    a98a:	3930      	subs	r1, #48	; 0x30
    a98c:	e7ee      	b.n	a96c <_strtod_l+0xf4>
    a98e:	3301      	adds	r3, #1
    a990:	931d      	str	r3, [sp, #116]	; 0x74
    a992:	781c      	ldrb	r4, [r3, #0]
    a994:	2c2d      	cmp	r4, #45	; 0x2d
    a996:	d800      	bhi.n	a99a <_strtod_l+0x122>
    a998:	e78e      	b.n	a8b8 <_strtod_l+0x40>
    a99a:	469a      	mov	sl, r3
    a99c:	2300      	movs	r3, #0
    a99e:	9307      	str	r3, [sp, #28]
    a9a0:	2300      	movs	r3, #0
    a9a2:	930c      	str	r3, [sp, #48]	; 0x30
    a9a4:	2c30      	cmp	r4, #48	; 0x30
    a9a6:	d1d1      	bne.n	a94c <_strtod_l+0xd4>
    a9a8:	4653      	mov	r3, sl
    a9aa:	785b      	ldrb	r3, [r3, #1]
    a9ac:	2b58      	cmp	r3, #88	; 0x58
    a9ae:	d100      	bne.n	a9b2 <_strtod_l+0x13a>
    a9b0:	e334      	b.n	b01c <_strtod_l+0x7a4>
    a9b2:	2b78      	cmp	r3, #120	; 0x78
    a9b4:	d100      	bne.n	a9b8 <_strtod_l+0x140>
    a9b6:	e331      	b.n	b01c <_strtod_l+0x7a4>
    a9b8:	4653      	mov	r3, sl
    a9ba:	3301      	adds	r3, #1
    a9bc:	001a      	movs	r2, r3
    a9be:	931d      	str	r3, [sp, #116]	; 0x74
    a9c0:	7814      	ldrb	r4, [r2, #0]
    a9c2:	3301      	adds	r3, #1
    a9c4:	2c30      	cmp	r4, #48	; 0x30
    a9c6:	d0f9      	beq.n	a9bc <_strtod_l+0x144>
    a9c8:	4692      	mov	sl, r2
    a9ca:	2c00      	cmp	r4, #0
    a9cc:	d100      	bne.n	a9d0 <_strtod_l+0x158>
    a9ce:	e08c      	b.n	aaea <_strtod_l+0x272>
    a9d0:	2301      	movs	r3, #1
    a9d2:	930c      	str	r3, [sp, #48]	; 0x30
    a9d4:	e7ba      	b.n	a94c <_strtod_l+0xd4>
    a9d6:	2201      	movs	r2, #1
    a9d8:	9207      	str	r2, [sp, #28]
    a9da:	e7ad      	b.n	a938 <_strtod_l+0xc0>
    a9dc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    a9de:	9b08      	ldr	r3, [sp, #32]
    a9e0:	4694      	mov	ip, r2
    a9e2:	4463      	add	r3, ip
    a9e4:	931d      	str	r3, [sp, #116]	; 0x74
    a9e6:	781c      	ldrb	r4, [r3, #0]
    a9e8:	2300      	movs	r3, #0
    a9ea:	950a      	str	r5, [sp, #40]	; 0x28
    a9ec:	0022      	movs	r2, r4
    a9ee:	3a30      	subs	r2, #48	; 0x30
    a9f0:	2a09      	cmp	r2, #9
    a9f2:	d900      	bls.n	a9f6 <_strtod_l+0x17e>
    a9f4:	e0e2      	b.n	abbc <_strtod_l+0x344>
    a9f6:	1c5c      	adds	r4, r3, #1
    a9f8:	4694      	mov	ip, r2
    a9fa:	2a00      	cmp	r2, #0
    a9fc:	d101      	bne.n	aa02 <_strtod_l+0x18a>
    a9fe:	f000 fe76 	bl	b6ee <_strtod_l+0xe76>
    aa02:	1900      	adds	r0, r0, r4
    aa04:	195b      	adds	r3, r3, r5
    aa06:	2c01      	cmp	r4, #1
    aa08:	d101      	bne.n	aa0e <_strtod_l+0x196>
    aa0a:	f000 fe6c 	bl	b6e6 <_strtod_l+0xe6e>
    aa0e:	4644      	mov	r4, r8
    aa10:	e007      	b.n	aa22 <_strtod_l+0x1aa>
    aa12:	00a1      	lsls	r1, r4, #2
    aa14:	190c      	adds	r4, r1, r4
    aa16:	0064      	lsls	r4, r4, #1
    aa18:	429f      	cmp	r7, r3
    aa1a:	d101      	bne.n	aa20 <_strtod_l+0x1a8>
    aa1c:	f000 fbef 	bl	b1fe <_strtod_l+0x986>
    aa20:	003d      	movs	r5, r7
    aa22:	1c6f      	adds	r7, r5, #1
    aa24:	2d08      	cmp	r5, #8
    aa26:	ddf4      	ble.n	aa12 <_strtod_l+0x19a>
    aa28:	2f10      	cmp	r7, #16
    aa2a:	dcf5      	bgt.n	aa18 <_strtod_l+0x1a0>
    aa2c:	4649      	mov	r1, r9
    aa2e:	0089      	lsls	r1, r1, #2
    aa30:	4449      	add	r1, r9
    aa32:	0049      	lsls	r1, r1, #1
    aa34:	4689      	mov	r9, r1
    aa36:	e7ef      	b.n	aa18 <_strtod_l+0x1a0>
    aa38:	002a      	movs	r2, r5
    aa3a:	990c      	ldr	r1, [sp, #48]	; 0x30
    aa3c:	431a      	orrs	r2, r3
    aa3e:	430a      	orrs	r2, r1
    aa40:	d100      	bne.n	aa44 <_strtod_l+0x1cc>
    aa42:	e75d      	b.n	a900 <_strtod_l+0x88>
    aa44:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    aa46:	1c72      	adds	r2, r6, #1
    aa48:	921d      	str	r2, [sp, #116]	; 0x74
    aa4a:	7874      	ldrb	r4, [r6, #1]
    aa4c:	2c2b      	cmp	r4, #43	; 0x2b
    aa4e:	d100      	bne.n	aa52 <_strtod_l+0x1da>
    aa50:	e39a      	b.n	b188 <_strtod_l+0x910>
    aa52:	2c2d      	cmp	r4, #45	; 0x2d
    aa54:	d100      	bne.n	aa58 <_strtod_l+0x1e0>
    aa56:	e230      	b.n	aeba <_strtod_l+0x642>
    aa58:	2200      	movs	r2, #0
    aa5a:	920d      	str	r2, [sp, #52]	; 0x34
    aa5c:	0022      	movs	r2, r4
    aa5e:	3a30      	subs	r2, #48	; 0x30
    aa60:	2a09      	cmp	r2, #9
    aa62:	d900      	bls.n	aa66 <_strtod_l+0x1ee>
    aa64:	e2f5      	b.n	b052 <_strtod_l+0x7da>
    aa66:	2c30      	cmp	r4, #48	; 0x30
    aa68:	d106      	bne.n	aa78 <_strtod_l+0x200>
    aa6a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    aa6c:	3201      	adds	r2, #1
    aa6e:	921d      	str	r2, [sp, #116]	; 0x74
    aa70:	7814      	ldrb	r4, [r2, #0]
    aa72:	3201      	adds	r2, #1
    aa74:	2c30      	cmp	r4, #48	; 0x30
    aa76:	d0fa      	beq.n	aa6e <_strtod_l+0x1f6>
    aa78:	0021      	movs	r1, r4
    aa7a:	3931      	subs	r1, #49	; 0x31
    aa7c:	2200      	movs	r2, #0
    aa7e:	2908      	cmp	r1, #8
    aa80:	d900      	bls.n	aa84 <_strtod_l+0x20c>
    aa82:	e732      	b.n	a8ea <_strtod_l+0x72>
    aa84:	991d      	ldr	r1, [sp, #116]	; 0x74
    aa86:	0022      	movs	r2, r4
    aa88:	1c4c      	adds	r4, r1, #1
    aa8a:	941d      	str	r4, [sp, #116]	; 0x74
    aa8c:	46a4      	mov	ip, r4
    aa8e:	784c      	ldrb	r4, [r1, #1]
    aa90:	000f      	movs	r7, r1
    aa92:	910e      	str	r1, [sp, #56]	; 0x38
    aa94:	0021      	movs	r1, r4
    aa96:	3930      	subs	r1, #48	; 0x30
    aa98:	3a30      	subs	r2, #48	; 0x30
    aa9a:	2909      	cmp	r1, #9
    aa9c:	d815      	bhi.n	aaca <_strtod_l+0x252>
    aa9e:	0039      	movs	r1, r7
    aaa0:	469c      	mov	ip, r3
    aaa2:	0027      	movs	r7, r4
    aaa4:	3102      	adds	r1, #2
    aaa6:	0094      	lsls	r4, r2, #2
    aaa8:	18a4      	adds	r4, r4, r2
    aaaa:	911d      	str	r1, [sp, #116]	; 0x74
    aaac:	0064      	lsls	r4, r4, #1
    aaae:	19e4      	adds	r4, r4, r7
    aab0:	780f      	ldrb	r7, [r1, #0]
    aab2:	0022      	movs	r2, r4
    aab4:	003c      	movs	r4, r7
    aab6:	3c30      	subs	r4, #48	; 0x30
    aab8:	000b      	movs	r3, r1
    aaba:	3a30      	subs	r2, #48	; 0x30
    aabc:	3101      	adds	r1, #1
    aabe:	2c09      	cmp	r4, #9
    aac0:	d9f1      	bls.n	aaa6 <_strtod_l+0x22e>
    aac2:	0019      	movs	r1, r3
    aac4:	003c      	movs	r4, r7
    aac6:	4663      	mov	r3, ip
    aac8:	468c      	mov	ip, r1
    aaca:	4661      	mov	r1, ip
    aacc:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    aace:	1bc9      	subs	r1, r1, r7
    aad0:	2908      	cmp	r1, #8
    aad2:	dd00      	ble.n	aad6 <_strtod_l+0x25e>
    aad4:	e256      	b.n	af84 <_strtod_l+0x70c>
    aad6:	493c      	ldr	r1, [pc, #240]	; (abc8 <_strtod_l+0x350>)
    aad8:	428a      	cmp	r2, r1
    aada:	dd00      	ble.n	aade <_strtod_l+0x266>
    aadc:	e252      	b.n	af84 <_strtod_l+0x70c>
    aade:	990d      	ldr	r1, [sp, #52]	; 0x34
    aae0:	2900      	cmp	r1, #0
    aae2:	d100      	bne.n	aae6 <_strtod_l+0x26e>
    aae4:	e701      	b.n	a8ea <_strtod_l+0x72>
    aae6:	4252      	negs	r2, r2
    aae8:	e6ff      	b.n	a8ea <_strtod_l+0x72>
    aaea:	2400      	movs	r4, #0
    aaec:	2500      	movs	r5, #0
    aaee:	465b      	mov	r3, fp
    aaf0:	2b00      	cmp	r3, #0
    aaf2:	d100      	bne.n	aaf6 <_strtod_l+0x27e>
    aaf4:	e70d      	b.n	a912 <_strtod_l+0x9a>
    aaf6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    aaf8:	e709      	b.n	a90e <_strtod_l+0x96>
    aafa:	1a13      	subs	r3, r2, r0
    aafc:	9308      	str	r3, [sp, #32]
    aafe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    ab00:	2b00      	cmp	r3, #0
    ab02:	d100      	bne.n	ab06 <_strtod_l+0x28e>
    ab04:	950a      	str	r5, [sp, #40]	; 0x28
    ab06:	002c      	movs	r4, r5
    ab08:	2d10      	cmp	r5, #16
    ab0a:	dd00      	ble.n	ab0e <_strtod_l+0x296>
    ab0c:	2410      	movs	r4, #16
    ab0e:	4640      	mov	r0, r8
    ab10:	f7fa faf2 	bl	50f8 <__aeabi_ui2d>
    ab14:	9004      	str	r0, [sp, #16]
    ab16:	9105      	str	r1, [sp, #20]
    ab18:	2c09      	cmp	r4, #9
    ab1a:	dd15      	ble.n	ab48 <_strtod_l+0x2d0>
    ab1c:	0022      	movs	r2, r4
    ab1e:	4b2b      	ldr	r3, [pc, #172]	; (abcc <_strtod_l+0x354>)
    ab20:	3a09      	subs	r2, #9
    ab22:	00d2      	lsls	r2, r2, #3
    ab24:	189b      	adds	r3, r3, r2
    ab26:	681a      	ldr	r2, [r3, #0]
    ab28:	685b      	ldr	r3, [r3, #4]
    ab2a:	f7f9 fcd9 	bl	44e0 <__aeabi_dmul>
    ab2e:	0006      	movs	r6, r0
    ab30:	4648      	mov	r0, r9
    ab32:	000f      	movs	r7, r1
    ab34:	f7fa fae0 	bl	50f8 <__aeabi_ui2d>
    ab38:	0002      	movs	r2, r0
    ab3a:	000b      	movs	r3, r1
    ab3c:	0030      	movs	r0, r6
    ab3e:	0039      	movs	r1, r7
    ab40:	f002 f8ee 	bl	cd20 <__aeabi_dadd>
    ab44:	9004      	str	r0, [sp, #16]
    ab46:	9105      	str	r1, [sp, #20]
    ab48:	2d0f      	cmp	r5, #15
    ab4a:	dc45      	bgt.n	abd8 <_strtod_l+0x360>
    ab4c:	9b08      	ldr	r3, [sp, #32]
    ab4e:	2b00      	cmp	r3, #0
    ab50:	d031      	beq.n	abb6 <_strtod_l+0x33e>
    ab52:	9b08      	ldr	r3, [sp, #32]
    ab54:	2b00      	cmp	r3, #0
    ab56:	dc01      	bgt.n	ab5c <_strtod_l+0x2e4>
    ab58:	f000 fc69 	bl	b42e <_strtod_l+0xbb6>
    ab5c:	2b16      	cmp	r3, #22
    ab5e:	dd01      	ble.n	ab64 <_strtod_l+0x2ec>
    ab60:	f000 fc15 	bl	b38e <_strtod_l+0xb16>
    ab64:	4919      	ldr	r1, [pc, #100]	; (abcc <_strtod_l+0x354>)
    ab66:	00da      	lsls	r2, r3, #3
    ab68:	1889      	adds	r1, r1, r2
    ab6a:	6808      	ldr	r0, [r1, #0]
    ab6c:	6849      	ldr	r1, [r1, #4]
    ab6e:	9a04      	ldr	r2, [sp, #16]
    ab70:	9b05      	ldr	r3, [sp, #20]
    ab72:	f7f9 fcb5 	bl	44e0 <__aeabi_dmul>
    ab76:	0004      	movs	r4, r0
    ab78:	000d      	movs	r5, r1
    ab7a:	e7b8      	b.n	aaee <_strtod_l+0x276>
    ab7c:	2c4e      	cmp	r4, #78	; 0x4e
    ab7e:	d009      	beq.n	ab94 <_strtod_l+0x31c>
    ab80:	dc01      	bgt.n	ab86 <_strtod_l+0x30e>
    ab82:	f000 fc2b 	bl	b3dc <_strtod_l+0xb64>
    ab86:	2c69      	cmp	r4, #105	; 0x69
    ab88:	d101      	bne.n	ab8e <_strtod_l+0x316>
    ab8a:	f000 fc2b 	bl	b3e4 <_strtod_l+0xb6c>
    ab8e:	2c6e      	cmp	r4, #110	; 0x6e
    ab90:	d000      	beq.n	ab94 <_strtod_l+0x31c>
    ab92:	e6b5      	b.n	a900 <_strtod_l+0x88>
    ab94:	490e      	ldr	r1, [pc, #56]	; (abd0 <_strtod_l+0x358>)
    ab96:	a81d      	add	r0, sp, #116	; 0x74
    ab98:	f001 fd80 	bl	c69c <__match>
    ab9c:	2800      	cmp	r0, #0
    ab9e:	d100      	bne.n	aba2 <_strtod_l+0x32a>
    aba0:	e6ae      	b.n	a900 <_strtod_l+0x88>
    aba2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    aba4:	781b      	ldrb	r3, [r3, #0]
    aba6:	2b28      	cmp	r3, #40	; 0x28
    aba8:	d101      	bne.n	abae <_strtod_l+0x336>
    abaa:	f000 fd0d 	bl	b5c8 <_strtod_l+0xd50>
    abae:	4b09      	ldr	r3, [pc, #36]	; (abd4 <_strtod_l+0x35c>)
    abb0:	9305      	str	r3, [sp, #20]
    abb2:	2300      	movs	r3, #0
    abb4:	9304      	str	r3, [sp, #16]
    abb6:	9c04      	ldr	r4, [sp, #16]
    abb8:	9d05      	ldr	r5, [sp, #20]
    abba:	e798      	b.n	aaee <_strtod_l+0x276>
    abbc:	2201      	movs	r2, #1
    abbe:	9208      	str	r2, [sp, #32]
    abc0:	e68c      	b.n	a8dc <_strtod_l+0x64>
    abc2:	46c0      	nop			; (mov r8, r8)
    abc4:	0000f3e4 	.word	0x0000f3e4
    abc8:	00004e1f 	.word	0x00004e1f
    abcc:	0000f310 	.word	0x0000f310
    abd0:	0000f4c0 	.word	0x0000f4c0
    abd4:	fff80000 	.word	0xfff80000
    abd8:	9b08      	ldr	r3, [sp, #32]
    abda:	1b2c      	subs	r4, r5, r4
    abdc:	469c      	mov	ip, r3
    abde:	4464      	add	r4, ip
    abe0:	2c00      	cmp	r4, #0
    abe2:	dc00      	bgt.n	abe6 <_strtod_l+0x36e>
    abe4:	e31f      	b.n	b226 <_strtod_l+0x9ae>
    abe6:	230f      	movs	r3, #15
    abe8:	4023      	ands	r3, r4
    abea:	d00a      	beq.n	ac02 <_strtod_l+0x38a>
    abec:	49d9      	ldr	r1, [pc, #868]	; (af54 <_strtod_l+0x6dc>)
    abee:	00db      	lsls	r3, r3, #3
    abf0:	18c9      	adds	r1, r1, r3
    abf2:	6808      	ldr	r0, [r1, #0]
    abf4:	6849      	ldr	r1, [r1, #4]
    abf6:	9a04      	ldr	r2, [sp, #16]
    abf8:	9b05      	ldr	r3, [sp, #20]
    abfa:	f7f9 fc71 	bl	44e0 <__aeabi_dmul>
    abfe:	9004      	str	r0, [sp, #16]
    ac00:	9105      	str	r1, [sp, #20]
    ac02:	230f      	movs	r3, #15
    ac04:	439c      	bics	r4, r3
    ac06:	d000      	beq.n	ac0a <_strtod_l+0x392>
    ac08:	e15d      	b.n	aec6 <_strtod_l+0x64e>
    ac0a:	2300      	movs	r3, #0
    ac0c:	930c      	str	r3, [sp, #48]	; 0x30
    ac0e:	4643      	mov	r3, r8
    ac10:	9300      	str	r3, [sp, #0]
    ac12:	002b      	movs	r3, r5
    ac14:	9d09      	ldr	r5, [sp, #36]	; 0x24
    ac16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ac18:	4651      	mov	r1, sl
    ac1a:	0028      	movs	r0, r5
    ac1c:	f7ff f970 	bl	9f00 <__s2b>
    ac20:	2800      	cmp	r0, #0
    ac22:	d100      	bne.n	ac26 <_strtod_l+0x3ae>
    ac24:	e255      	b.n	b0d2 <_strtod_l+0x85a>
    ac26:	9908      	ldr	r1, [sp, #32]
    ac28:	424b      	negs	r3, r1
    ac2a:	17ca      	asrs	r2, r1, #31
    ac2c:	401a      	ands	r2, r3
    ac2e:	920e      	str	r2, [sp, #56]	; 0x38
    ac30:	43ca      	mvns	r2, r1
    ac32:	000b      	movs	r3, r1
    ac34:	17d2      	asrs	r2, r2, #31
    ac36:	4013      	ands	r3, r2
    ac38:	930d      	str	r3, [sp, #52]	; 0x34
    ac3a:	2300      	movs	r3, #0
    ac3c:	4699      	mov	r9, r3
    ac3e:	4698      	mov	r8, r3
    ac40:	465b      	mov	r3, fp
    ac42:	4683      	mov	fp, r0
    ac44:	9315      	str	r3, [sp, #84]	; 0x54
    ac46:	e0f4      	b.n	ae32 <_strtod_l+0x5ba>
    ac48:	1ac9      	subs	r1, r1, r3
    ac4a:	1a52      	subs	r2, r2, r1
    ac4c:	291f      	cmp	r1, #31
    ac4e:	dd00      	ble.n	ac52 <_strtod_l+0x3da>
    ac50:	e1b5      	b.n	afbe <_strtod_l+0x746>
    ac52:	2301      	movs	r3, #1
    ac54:	408b      	lsls	r3, r1
    ac56:	9310      	str	r3, [sp, #64]	; 0x40
    ac58:	2300      	movs	r3, #0
    ac5a:	9311      	str	r3, [sp, #68]	; 0x44
    ac5c:	18bb      	adds	r3, r7, r2
    ac5e:	469a      	mov	sl, r3
    ac60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ac62:	18b6      	adds	r6, r6, r2
    ac64:	469c      	mov	ip, r3
    ac66:	003b      	movs	r3, r7
    ac68:	4466      	add	r6, ip
    ac6a:	4557      	cmp	r7, sl
    ac6c:	dd00      	ble.n	ac70 <_strtod_l+0x3f8>
    ac6e:	4653      	mov	r3, sl
    ac70:	42b3      	cmp	r3, r6
    ac72:	dd00      	ble.n	ac76 <_strtod_l+0x3fe>
    ac74:	0033      	movs	r3, r6
    ac76:	2b00      	cmp	r3, #0
    ac78:	dd04      	ble.n	ac84 <_strtod_l+0x40c>
    ac7a:	4652      	mov	r2, sl
    ac7c:	1ad2      	subs	r2, r2, r3
    ac7e:	4692      	mov	sl, r2
    ac80:	1af6      	subs	r6, r6, r3
    ac82:	1aff      	subs	r7, r7, r3
    ac84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ac86:	2b00      	cmp	r3, #0
    ac88:	d015      	beq.n	acb6 <_strtod_l+0x43e>
    ac8a:	4641      	mov	r1, r8
    ac8c:	001a      	movs	r2, r3
    ac8e:	0028      	movs	r0, r5
    ac90:	f7ff fa7c 	bl	a18c <__pow5mult>
    ac94:	4680      	mov	r8, r0
    ac96:	2800      	cmp	r0, #0
    ac98:	d100      	bne.n	ac9c <_strtod_l+0x424>
    ac9a:	e252      	b.n	b142 <_strtod_l+0x8ca>
    ac9c:	0001      	movs	r1, r0
    ac9e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    aca0:	0028      	movs	r0, r5
    aca2:	f7ff f9c9 	bl	a038 <__multiply>
    aca6:	1e04      	subs	r4, r0, #0
    aca8:	d100      	bne.n	acac <_strtod_l+0x434>
    acaa:	e24a      	b.n	b142 <_strtod_l+0x8ca>
    acac:	991e      	ldr	r1, [sp, #120]	; 0x78
    acae:	0028      	movs	r0, r5
    acb0:	f7ff f8d6 	bl	9e60 <_Bfree>
    acb4:	941e      	str	r4, [sp, #120]	; 0x78
    acb6:	4653      	mov	r3, sl
    acb8:	2b00      	cmp	r3, #0
    acba:	dd08      	ble.n	acce <_strtod_l+0x456>
    acbc:	4652      	mov	r2, sl
    acbe:	991e      	ldr	r1, [sp, #120]	; 0x78
    acc0:	0028      	movs	r0, r5
    acc2:	f7ff fac3 	bl	a24c <__lshift>
    acc6:	901e      	str	r0, [sp, #120]	; 0x78
    acc8:	2800      	cmp	r0, #0
    acca:	d100      	bne.n	acce <_strtod_l+0x456>
    accc:	e3c2      	b.n	b454 <_strtod_l+0xbdc>
    acce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    acd0:	2b00      	cmp	r3, #0
    acd2:	d008      	beq.n	ace6 <_strtod_l+0x46e>
    acd4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    acd6:	9908      	ldr	r1, [sp, #32]
    acd8:	0028      	movs	r0, r5
    acda:	f7ff fa57 	bl	a18c <__pow5mult>
    acde:	9008      	str	r0, [sp, #32]
    ace0:	2800      	cmp	r0, #0
    ace2:	d100      	bne.n	ace6 <_strtod_l+0x46e>
    ace4:	e22d      	b.n	b142 <_strtod_l+0x8ca>
    ace6:	2e00      	cmp	r6, #0
    ace8:	dd08      	ble.n	acfc <_strtod_l+0x484>
    acea:	0032      	movs	r2, r6
    acec:	9908      	ldr	r1, [sp, #32]
    acee:	0028      	movs	r0, r5
    acf0:	f7ff faac 	bl	a24c <__lshift>
    acf4:	9008      	str	r0, [sp, #32]
    acf6:	2800      	cmp	r0, #0
    acf8:	d100      	bne.n	acfc <_strtod_l+0x484>
    acfa:	e222      	b.n	b142 <_strtod_l+0x8ca>
    acfc:	2f00      	cmp	r7, #0
    acfe:	dd08      	ble.n	ad12 <_strtod_l+0x49a>
    ad00:	4641      	mov	r1, r8
    ad02:	003a      	movs	r2, r7
    ad04:	0028      	movs	r0, r5
    ad06:	f7ff faa1 	bl	a24c <__lshift>
    ad0a:	4680      	mov	r8, r0
    ad0c:	2800      	cmp	r0, #0
    ad0e:	d100      	bne.n	ad12 <_strtod_l+0x49a>
    ad10:	e217      	b.n	b142 <_strtod_l+0x8ca>
    ad12:	9a08      	ldr	r2, [sp, #32]
    ad14:	991e      	ldr	r1, [sp, #120]	; 0x78
    ad16:	0028      	movs	r0, r5
    ad18:	f7ff fb12 	bl	a340 <__mdiff>
    ad1c:	4681      	mov	r9, r0
    ad1e:	2800      	cmp	r0, #0
    ad20:	d100      	bne.n	ad24 <_strtod_l+0x4ac>
    ad22:	e20e      	b.n	b142 <_strtod_l+0x8ca>
    ad24:	68c3      	ldr	r3, [r0, #12]
    ad26:	4641      	mov	r1, r8
    ad28:	930f      	str	r3, [sp, #60]	; 0x3c
    ad2a:	2300      	movs	r3, #0
    ad2c:	60c3      	str	r3, [r0, #12]
    ad2e:	f7ff faed 	bl	a30c <__mcmp>
    ad32:	2800      	cmp	r0, #0
    ad34:	da01      	bge.n	ad3a <_strtod_l+0x4c2>
    ad36:	f000 fbd8 	bl	b4ea <_strtod_l+0xc72>
    ad3a:	d100      	bne.n	ad3e <_strtod_l+0x4c6>
    ad3c:	e38e      	b.n	b45c <_strtod_l+0xbe4>
    ad3e:	4641      	mov	r1, r8
    ad40:	4648      	mov	r0, r9
    ad42:	f7ff fc89 	bl	a658 <__ratio>
    ad46:	2380      	movs	r3, #128	; 0x80
    ad48:	2200      	movs	r2, #0
    ad4a:	05db      	lsls	r3, r3, #23
    ad4c:	0006      	movs	r6, r0
    ad4e:	000f      	movs	r7, r1
    ad50:	f7fa fa7c 	bl	524c <__aeabi_dcmple>
    ad54:	2800      	cmp	r0, #0
    ad56:	d100      	bne.n	ad5a <_strtod_l+0x4e2>
    ad58:	e116      	b.n	af88 <_strtod_l+0x710>
    ad5a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    ad5c:	2b00      	cmp	r3, #0
    ad5e:	d100      	bne.n	ad62 <_strtod_l+0x4ea>
    ad60:	e135      	b.n	afce <_strtod_l+0x756>
    ad62:	9b05      	ldr	r3, [sp, #20]
    ad64:	2600      	movs	r6, #0
    ad66:	9310      	str	r3, [sp, #64]	; 0x40
    ad68:	2300      	movs	r3, #0
    ad6a:	9311      	str	r3, [sp, #68]	; 0x44
    ad6c:	4b7a      	ldr	r3, [pc, #488]	; (af58 <_strtod_l+0x6e0>)
    ad6e:	4f7a      	ldr	r7, [pc, #488]	; (af58 <_strtod_l+0x6e0>)
    ad70:	9314      	str	r3, [sp, #80]	; 0x50
    ad72:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ad74:	4a79      	ldr	r2, [pc, #484]	; (af5c <_strtod_l+0x6e4>)
    ad76:	4013      	ands	r3, r2
    ad78:	469a      	mov	sl, r3
    ad7a:	4b79      	ldr	r3, [pc, #484]	; (af60 <_strtod_l+0x6e8>)
    ad7c:	459a      	cmp	sl, r3
    ad7e:	d100      	bne.n	ad82 <_strtod_l+0x50a>
    ad80:	e1af      	b.n	b0e2 <_strtod_l+0x86a>
    ad82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ad84:	2b00      	cmp	r3, #0
    ad86:	d02a      	beq.n	adde <_strtod_l+0x566>
    ad88:	23d4      	movs	r3, #212	; 0xd4
    ad8a:	04db      	lsls	r3, r3, #19
    ad8c:	459a      	cmp	sl, r3
    ad8e:	d826      	bhi.n	adde <_strtod_l+0x566>
    ad90:	9c14      	ldr	r4, [sp, #80]	; 0x50
    ad92:	4a74      	ldr	r2, [pc, #464]	; (af64 <_strtod_l+0x6ec>)
    ad94:	4b74      	ldr	r3, [pc, #464]	; (af68 <_strtod_l+0x6f0>)
    ad96:	9811      	ldr	r0, [sp, #68]	; 0x44
    ad98:	0021      	movs	r1, r4
    ad9a:	f7fa fa57 	bl	524c <__aeabi_dcmple>
    ad9e:	2800      	cmp	r0, #0
    ada0:	d018      	beq.n	add4 <_strtod_l+0x55c>
    ada2:	9811      	ldr	r0, [sp, #68]	; 0x44
    ada4:	0021      	movs	r1, r4
    ada6:	f7f8 fe69 	bl	3a7c <__aeabi_d2uiz>
    adaa:	2800      	cmp	r0, #0
    adac:	d100      	bne.n	adb0 <_strtod_l+0x538>
    adae:	e310      	b.n	b3d2 <_strtod_l+0xb5a>
    adb0:	f7fa f9a2 	bl	50f8 <__aeabi_ui2d>
    adb4:	9011      	str	r0, [sp, #68]	; 0x44
    adb6:	9114      	str	r1, [sp, #80]	; 0x50
    adb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    adba:	2b00      	cmp	r3, #0
    adbc:	d000      	beq.n	adc0 <_strtod_l+0x548>
    adbe:	e303      	b.n	b3c8 <_strtod_l+0xb50>
    adc0:	2280      	movs	r2, #128	; 0x80
    adc2:	0612      	lsls	r2, r2, #24
    adc4:	4694      	mov	ip, r2
    adc6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    adc8:	9318      	str	r3, [sp, #96]	; 0x60
    adca:	9b14      	ldr	r3, [sp, #80]	; 0x50
    adcc:	4463      	add	r3, ip
    adce:	9319      	str	r3, [sp, #100]	; 0x64
    add0:	9e18      	ldr	r6, [sp, #96]	; 0x60
    add2:	9f19      	ldr	r7, [sp, #100]	; 0x64
    add4:	23d6      	movs	r3, #214	; 0xd6
    add6:	4652      	mov	r2, sl
    add8:	04db      	lsls	r3, r3, #19
    adda:	18fb      	adds	r3, r7, r3
    addc:	1a9f      	subs	r7, r3, r2
    adde:	980a      	ldr	r0, [sp, #40]	; 0x28
    ade0:	990b      	ldr	r1, [sp, #44]	; 0x2c
    ade2:	f7ff fb49 	bl	a478 <__ulp>
    ade6:	0002      	movs	r2, r0
    ade8:	000b      	movs	r3, r1
    adea:	0030      	movs	r0, r6
    adec:	0039      	movs	r1, r7
    adee:	f7f9 fb77 	bl	44e0 <__aeabi_dmul>
    adf2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    adf4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    adf6:	f001 ff93 	bl	cd20 <__aeabi_dadd>
    adfa:	0003      	movs	r3, r0
    adfc:	000c      	movs	r4, r1
    adfe:	9304      	str	r3, [sp, #16]
    ae00:	9405      	str	r4, [sp, #20]
    ae02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ae04:	2b00      	cmp	r3, #0
    ae06:	d104      	bne.n	ae12 <_strtod_l+0x59a>
    ae08:	4b54      	ldr	r3, [pc, #336]	; (af5c <_strtod_l+0x6e4>)
    ae0a:	4023      	ands	r3, r4
    ae0c:	459a      	cmp	sl, r3
    ae0e:	d100      	bne.n	ae12 <_strtod_l+0x59a>
    ae10:	e1bd      	b.n	b18e <_strtod_l+0x916>
    ae12:	991e      	ldr	r1, [sp, #120]	; 0x78
    ae14:	0028      	movs	r0, r5
    ae16:	f7ff f823 	bl	9e60 <_Bfree>
    ae1a:	9908      	ldr	r1, [sp, #32]
    ae1c:	0028      	movs	r0, r5
    ae1e:	f7ff f81f 	bl	9e60 <_Bfree>
    ae22:	4641      	mov	r1, r8
    ae24:	0028      	movs	r0, r5
    ae26:	f7ff f81b 	bl	9e60 <_Bfree>
    ae2a:	4649      	mov	r1, r9
    ae2c:	0028      	movs	r0, r5
    ae2e:	f7ff f817 	bl	9e60 <_Bfree>
    ae32:	465b      	mov	r3, fp
    ae34:	0028      	movs	r0, r5
    ae36:	6859      	ldr	r1, [r3, #4]
    ae38:	f7fe ffea 	bl	9e10 <_Balloc>
    ae3c:	9008      	str	r0, [sp, #32]
    ae3e:	2800      	cmp	r0, #0
    ae40:	d100      	bne.n	ae44 <_strtod_l+0x5cc>
    ae42:	e17e      	b.n	b142 <_strtod_l+0x8ca>
    ae44:	465a      	mov	r2, fp
    ae46:	4659      	mov	r1, fp
    ae48:	6912      	ldr	r2, [r2, #16]
    ae4a:	310c      	adds	r1, #12
    ae4c:	3202      	adds	r2, #2
    ae4e:	0092      	lsls	r2, r2, #2
    ae50:	300c      	adds	r0, #12
    ae52:	f7fe ff8b 	bl	9d6c <memcpy>
    ae56:	9b04      	ldr	r3, [sp, #16]
    ae58:	9c05      	ldr	r4, [sp, #20]
    ae5a:	0019      	movs	r1, r3
    ae5c:	0022      	movs	r2, r4
    ae5e:	ab20      	add	r3, sp, #128	; 0x80
    ae60:	9301      	str	r3, [sp, #4]
    ae62:	ab1f      	add	r3, sp, #124	; 0x7c
    ae64:	910a      	str	r1, [sp, #40]	; 0x28
    ae66:	920b      	str	r2, [sp, #44]	; 0x2c
    ae68:	9300      	str	r3, [sp, #0]
    ae6a:	000a      	movs	r2, r1
    ae6c:	0023      	movs	r3, r4
    ae6e:	0028      	movs	r0, r5
    ae70:	f7ff fb94 	bl	a59c <__d2b>
    ae74:	901e      	str	r0, [sp, #120]	; 0x78
    ae76:	2800      	cmp	r0, #0
    ae78:	d100      	bne.n	ae7c <_strtod_l+0x604>
    ae7a:	e2eb      	b.n	b454 <_strtod_l+0xbdc>
    ae7c:	2101      	movs	r1, #1
    ae7e:	0028      	movs	r0, r5
    ae80:	f7ff f8d0 	bl	a024 <__i2b>
    ae84:	4680      	mov	r8, r0
    ae86:	2800      	cmp	r0, #0
    ae88:	d100      	bne.n	ae8c <_strtod_l+0x614>
    ae8a:	e15a      	b.n	b142 <_strtod_l+0x8ca>
    ae8c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    ae8e:	2b00      	cmp	r3, #0
    ae90:	da00      	bge.n	ae94 <_strtod_l+0x61c>
    ae92:	e090      	b.n	afb6 <_strtod_l+0x73e>
    ae94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    ae96:	9e0d      	ldr	r6, [sp, #52]	; 0x34
    ae98:	18d7      	adds	r7, r2, r3
    ae9a:	990c      	ldr	r1, [sp, #48]	; 0x30
    ae9c:	9a20      	ldr	r2, [sp, #128]	; 0x80
    ae9e:	1a5b      	subs	r3, r3, r1
    aea0:	2136      	movs	r1, #54	; 0x36
    aea2:	189b      	adds	r3, r3, r2
    aea4:	1a8a      	subs	r2, r1, r2
    aea6:	4931      	ldr	r1, [pc, #196]	; (af6c <_strtod_l+0x6f4>)
    aea8:	3b01      	subs	r3, #1
    aeaa:	428b      	cmp	r3, r1
    aeac:	da00      	bge.n	aeb0 <_strtod_l+0x638>
    aeae:	e6cb      	b.n	ac48 <_strtod_l+0x3d0>
    aeb0:	2300      	movs	r3, #0
    aeb2:	9311      	str	r3, [sp, #68]	; 0x44
    aeb4:	3301      	adds	r3, #1
    aeb6:	9310      	str	r3, [sp, #64]	; 0x40
    aeb8:	e6d0      	b.n	ac5c <_strtod_l+0x3e4>
    aeba:	2201      	movs	r2, #1
    aebc:	920d      	str	r2, [sp, #52]	; 0x34
    aebe:	1cb2      	adds	r2, r6, #2
    aec0:	921d      	str	r2, [sp, #116]	; 0x74
    aec2:	78b4      	ldrb	r4, [r6, #2]
    aec4:	e5ca      	b.n	aa5c <_strtod_l+0x1e4>
    aec6:	239a      	movs	r3, #154	; 0x9a
    aec8:	005b      	lsls	r3, r3, #1
    aeca:	429c      	cmp	r4, r3
    aecc:	dd00      	ble.n	aed0 <_strtod_l+0x658>
    aece:	e100      	b.n	b0d2 <_strtod_l+0x85a>
    aed0:	1124      	asrs	r4, r4, #4
    aed2:	2c01      	cmp	r4, #1
    aed4:	dc00      	bgt.n	aed8 <_strtod_l+0x660>
    aed6:	e361      	b.n	b59c <_strtod_l+0xd24>
    aed8:	9804      	ldr	r0, [sp, #16]
    aeda:	9905      	ldr	r1, [sp, #20]
    aedc:	2201      	movs	r2, #1
    aede:	4b24      	ldr	r3, [pc, #144]	; (af70 <_strtod_l+0x6f8>)
    aee0:	2700      	movs	r7, #0
    aee2:	930c      	str	r3, [sp, #48]	; 0x30
    aee4:	001e      	movs	r6, r3
    aee6:	4691      	mov	r9, r2
    aee8:	2300      	movs	r3, #0
    aeea:	464a      	mov	r2, r9
    aeec:	4222      	tst	r2, r4
    aeee:	d004      	beq.n	aefa <_strtod_l+0x682>
    aef0:	6832      	ldr	r2, [r6, #0]
    aef2:	6873      	ldr	r3, [r6, #4]
    aef4:	f7f9 faf4 	bl	44e0 <__aeabi_dmul>
    aef8:	2301      	movs	r3, #1
    aefa:	3701      	adds	r7, #1
    aefc:	1064      	asrs	r4, r4, #1
    aefe:	3608      	adds	r6, #8
    af00:	2c01      	cmp	r4, #1
    af02:	d1f2      	bne.n	aeea <_strtod_l+0x672>
    af04:	2b00      	cmp	r3, #0
    af06:	d001      	beq.n	af0c <_strtod_l+0x694>
    af08:	f000 fbf4 	bl	b6f4 <_strtod_l+0xe7c>
    af0c:	4a19      	ldr	r2, [pc, #100]	; (af74 <_strtod_l+0x6fc>)
    af0e:	9b05      	ldr	r3, [sp, #20]
    af10:	4694      	mov	ip, r2
    af12:	4463      	add	r3, ip
    af14:	9305      	str	r3, [sp, #20]
    af16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    af18:	00ff      	lsls	r7, r7, #3
    af1a:	469c      	mov	ip, r3
    af1c:	9a04      	ldr	r2, [sp, #16]
    af1e:	9b05      	ldr	r3, [sp, #20]
    af20:	4467      	add	r7, ip
    af22:	6838      	ldr	r0, [r7, #0]
    af24:	6879      	ldr	r1, [r7, #4]
    af26:	f7f9 fadb 	bl	44e0 <__aeabi_dmul>
    af2a:	000a      	movs	r2, r1
    af2c:	0003      	movs	r3, r0
    af2e:	0014      	movs	r4, r2
    af30:	9304      	str	r3, [sp, #16]
    af32:	9405      	str	r4, [sp, #20]
    af34:	4b09      	ldr	r3, [pc, #36]	; (af5c <_strtod_l+0x6e4>)
    af36:	4013      	ands	r3, r2
    af38:	4a0f      	ldr	r2, [pc, #60]	; (af78 <_strtod_l+0x700>)
    af3a:	4293      	cmp	r3, r2
    af3c:	d900      	bls.n	af40 <_strtod_l+0x6c8>
    af3e:	e0c8      	b.n	b0d2 <_strtod_l+0x85a>
    af40:	4a0e      	ldr	r2, [pc, #56]	; (af7c <_strtod_l+0x704>)
    af42:	4293      	cmp	r3, r2
    af44:	d800      	bhi.n	af48 <_strtod_l+0x6d0>
    af46:	e308      	b.n	b55a <_strtod_l+0xce2>
    af48:	4b0d      	ldr	r3, [pc, #52]	; (af80 <_strtod_l+0x708>)
    af4a:	9305      	str	r3, [sp, #20]
    af4c:	2301      	movs	r3, #1
    af4e:	425b      	negs	r3, r3
    af50:	9304      	str	r3, [sp, #16]
    af52:	e65a      	b.n	ac0a <_strtod_l+0x392>
    af54:	0000f310 	.word	0x0000f310
    af58:	3ff00000 	.word	0x3ff00000
    af5c:	7ff00000 	.word	0x7ff00000
    af60:	7fe00000 	.word	0x7fe00000
    af64:	ffc00000 	.word	0xffc00000
    af68:	41dfffff 	.word	0x41dfffff
    af6c:	fffffc02 	.word	0xfffffc02
    af70:	0000f2e8 	.word	0x0000f2e8
    af74:	fcb00000 	.word	0xfcb00000
    af78:	7ca00000 	.word	0x7ca00000
    af7c:	7c900000 	.word	0x7c900000
    af80:	7fefffff 	.word	0x7fefffff
    af84:	4ace      	ldr	r2, [pc, #824]	; (b2c0 <_strtod_l+0xa48>)
    af86:	e5aa      	b.n	aade <_strtod_l+0x266>
    af88:	4bce      	ldr	r3, [pc, #824]	; (b2c4 <_strtod_l+0xa4c>)
    af8a:	2200      	movs	r2, #0
    af8c:	0030      	movs	r0, r6
    af8e:	0039      	movs	r1, r7
    af90:	f7f9 faa6 	bl	44e0 <__aeabi_dmul>
    af94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    af96:	9011      	str	r0, [sp, #68]	; 0x44
    af98:	9114      	str	r1, [sp, #80]	; 0x50
    af9a:	2b00      	cmp	r3, #0
    af9c:	d139      	bne.n	b012 <_strtod_l+0x79a>
    af9e:	2280      	movs	r2, #128	; 0x80
    afa0:	0612      	lsls	r2, r2, #24
    afa2:	000b      	movs	r3, r1
    afa4:	4694      	mov	ip, r2
    afa6:	4463      	add	r3, ip
    afa8:	9012      	str	r0, [sp, #72]	; 0x48
    afaa:	9313      	str	r3, [sp, #76]	; 0x4c
    afac:	9b05      	ldr	r3, [sp, #20]
    afae:	9e12      	ldr	r6, [sp, #72]	; 0x48
    afb0:	9f13      	ldr	r7, [sp, #76]	; 0x4c
    afb2:	9310      	str	r3, [sp, #64]	; 0x40
    afb4:	e6dd      	b.n	ad72 <_strtod_l+0x4fa>
    afb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    afb8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    afba:	1ad6      	subs	r6, r2, r3
    afbc:	e76d      	b.n	ae9a <_strtod_l+0x622>
    afbe:	49c2      	ldr	r1, [pc, #776]	; (b2c8 <_strtod_l+0xa50>)
    afc0:	1acb      	subs	r3, r1, r3
    afc2:	2101      	movs	r1, #1
    afc4:	4099      	lsls	r1, r3
    afc6:	2301      	movs	r3, #1
    afc8:	9111      	str	r1, [sp, #68]	; 0x44
    afca:	9310      	str	r3, [sp, #64]	; 0x40
    afcc:	e646      	b.n	ac5c <_strtod_l+0x3e4>
    afce:	9904      	ldr	r1, [sp, #16]
    afd0:	9a05      	ldr	r2, [sp, #20]
    afd2:	2900      	cmp	r1, #0
    afd4:	d140      	bne.n	b058 <_strtod_l+0x7e0>
    afd6:	9210      	str	r2, [sp, #64]	; 0x40
    afd8:	0313      	lsls	r3, r2, #12
    afda:	d142      	bne.n	b062 <_strtod_l+0x7ea>
    afdc:	2200      	movs	r2, #0
    afde:	4bbb      	ldr	r3, [pc, #748]	; (b2cc <_strtod_l+0xa54>)
    afe0:	0030      	movs	r0, r6
    afe2:	0039      	movs	r1, r7
    afe4:	f7fa f928 	bl	5238 <__aeabi_dcmplt>
    afe8:	2800      	cmp	r0, #0
    afea:	d000      	beq.n	afee <_strtod_l+0x776>
    afec:	e2bf      	b.n	b56e <_strtod_l+0xcf6>
    afee:	2200      	movs	r2, #0
    aff0:	4bb4      	ldr	r3, [pc, #720]	; (b2c4 <_strtod_l+0xa4c>)
    aff2:	0030      	movs	r0, r6
    aff4:	0039      	movs	r1, r7
    aff6:	f7f9 fa73 	bl	44e0 <__aeabi_dmul>
    affa:	2280      	movs	r2, #128	; 0x80
    affc:	0612      	lsls	r2, r2, #24
    affe:	000b      	movs	r3, r1
    b000:	4694      	mov	ip, r2
    b002:	4463      	add	r3, ip
    b004:	9011      	str	r0, [sp, #68]	; 0x44
    b006:	9114      	str	r1, [sp, #80]	; 0x50
    b008:	901a      	str	r0, [sp, #104]	; 0x68
    b00a:	931b      	str	r3, [sp, #108]	; 0x6c
    b00c:	9e1a      	ldr	r6, [sp, #104]	; 0x68
    b00e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
    b010:	e6af      	b.n	ad72 <_strtod_l+0x4fa>
    b012:	9a11      	ldr	r2, [sp, #68]	; 0x44
    b014:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b016:	9212      	str	r2, [sp, #72]	; 0x48
    b018:	9313      	str	r3, [sp, #76]	; 0x4c
    b01a:	e7c7      	b.n	afac <_strtod_l+0x734>
    b01c:	9b07      	ldr	r3, [sp, #28]
    b01e:	9502      	str	r5, [sp, #8]
    b020:	9301      	str	r3, [sp, #4]
    b022:	ab1e      	add	r3, sp, #120	; 0x78
    b024:	9300      	str	r3, [sp, #0]
    b026:	4aaa      	ldr	r2, [pc, #680]	; (b2d0 <_strtod_l+0xa58>)
    b028:	ab1f      	add	r3, sp, #124	; 0x7c
    b02a:	a91d      	add	r1, sp, #116	; 0x74
    b02c:	9809      	ldr	r0, [sp, #36]	; 0x24
    b02e:	f001 f8a1 	bl	c174 <__gethex>
    b032:	2407      	movs	r4, #7
    b034:	0005      	movs	r5, r0
    b036:	4004      	ands	r4, r0
    b038:	d100      	bne.n	b03c <_strtod_l+0x7c4>
    b03a:	e556      	b.n	aaea <_strtod_l+0x272>
    b03c:	2c06      	cmp	r4, #6
    b03e:	d000      	beq.n	b042 <_strtod_l+0x7ca>
    b040:	e15e      	b.n	b300 <_strtod_l+0xa88>
    b042:	4653      	mov	r3, sl
    b044:	3301      	adds	r3, #1
    b046:	931d      	str	r3, [sp, #116]	; 0x74
    b048:	2300      	movs	r3, #0
    b04a:	2400      	movs	r4, #0
    b04c:	2500      	movs	r5, #0
    b04e:	9307      	str	r3, [sp, #28]
    b050:	e54d      	b.n	aaee <_strtod_l+0x276>
    b052:	961d      	str	r6, [sp, #116]	; 0x74
    b054:	2200      	movs	r2, #0
    b056:	e448      	b.n	a8ea <_strtod_l+0x72>
    b058:	2901      	cmp	r1, #1
    b05a:	d100      	bne.n	b05e <_strtod_l+0x7e6>
    b05c:	e1d8      	b.n	b410 <_strtod_l+0xb98>
    b05e:	9b05      	ldr	r3, [sp, #20]
    b060:	9310      	str	r3, [sp, #64]	; 0x40
    b062:	2300      	movs	r3, #0
    b064:	9311      	str	r3, [sp, #68]	; 0x44
    b066:	4b99      	ldr	r3, [pc, #612]	; (b2cc <_strtod_l+0xa54>)
    b068:	2600      	movs	r6, #0
    b06a:	4f9a      	ldr	r7, [pc, #616]	; (b2d4 <_strtod_l+0xa5c>)
    b06c:	9314      	str	r3, [sp, #80]	; 0x50
    b06e:	e680      	b.n	ad72 <_strtod_l+0x4fa>
    b070:	6839      	ldr	r1, [r7, #0]
    b072:	9a08      	ldr	r2, [sp, #32]
    b074:	4650      	mov	r0, sl
    b076:	f001 fe09 	bl	cc8c <strncmp>
    b07a:	900a      	str	r0, [sp, #40]	; 0x28
    b07c:	2800      	cmp	r0, #0
    b07e:	d009      	beq.n	b094 <_strtod_l+0x81c>
    b080:	2300      	movs	r3, #0
    b082:	2200      	movs	r2, #0
    b084:	930a      	str	r3, [sp, #40]	; 0x28
    b086:	4699      	mov	r9, r3
    b088:	4698      	mov	r8, r3
    b08a:	2000      	movs	r0, #0
    b08c:	2500      	movs	r5, #0
    b08e:	9208      	str	r2, [sp, #32]
    b090:	f7ff fc24 	bl	a8dc <_strtod_l+0x64>
    b094:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    b096:	9b08      	ldr	r3, [sp, #32]
    b098:	4694      	mov	ip, r2
    b09a:	4463      	add	r3, ip
    b09c:	931d      	str	r3, [sp, #116]	; 0x74
    b09e:	781c      	ldrb	r4, [r3, #0]
    b0a0:	0019      	movs	r1, r3
    b0a2:	1c5a      	adds	r2, r3, #1
    b0a4:	2300      	movs	r3, #0
    b0a6:	2c30      	cmp	r4, #48	; 0x30
    b0a8:	d105      	bne.n	b0b6 <_strtod_l+0x83e>
    b0aa:	921d      	str	r2, [sp, #116]	; 0x74
    b0ac:	7814      	ldrb	r4, [r2, #0]
    b0ae:	1a53      	subs	r3, r2, r1
    b0b0:	3201      	adds	r2, #1
    b0b2:	2c30      	cmp	r4, #48	; 0x30
    b0b4:	d0f9      	beq.n	b0aa <_strtod_l+0x832>
    b0b6:	0022      	movs	r2, r4
    b0b8:	3a31      	subs	r2, #49	; 0x31
    b0ba:	2a08      	cmp	r2, #8
    b0bc:	d800      	bhi.n	b0c0 <_strtod_l+0x848>
    b0be:	e153      	b.n	b368 <_strtod_l+0xaf0>
    b0c0:	2200      	movs	r2, #0
    b0c2:	4691      	mov	r9, r2
    b0c4:	4690      	mov	r8, r2
    b0c6:	3201      	adds	r2, #1
    b0c8:	2000      	movs	r0, #0
    b0ca:	2500      	movs	r5, #0
    b0cc:	9208      	str	r2, [sp, #32]
    b0ce:	f7ff fc05 	bl	a8dc <_strtod_l+0x64>
    b0d2:	2322      	movs	r3, #34	; 0x22
    b0d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b0d6:	6013      	str	r3, [r2, #0]
    b0d8:	4b7f      	ldr	r3, [pc, #508]	; (b2d8 <_strtod_l+0xa60>)
    b0da:	9305      	str	r3, [sp, #20]
    b0dc:	2300      	movs	r3, #0
    b0de:	9304      	str	r3, [sp, #16]
    b0e0:	e569      	b.n	abb6 <_strtod_l+0x33e>
    b0e2:	497e      	ldr	r1, [pc, #504]	; (b2dc <_strtod_l+0xa64>)
    b0e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
    b0e6:	468c      	mov	ip, r1
    b0e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b0ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    b0ec:	4462      	add	r2, ip
    b0ee:	9205      	str	r2, [sp, #20]
    b0f0:	960a      	str	r6, [sp, #40]	; 0x28
    b0f2:	970b      	str	r7, [sp, #44]	; 0x2c
    b0f4:	9e04      	ldr	r6, [sp, #16]
    b0f6:	9f05      	ldr	r7, [sp, #20]
    b0f8:	0030      	movs	r0, r6
    b0fa:	0039      	movs	r1, r7
    b0fc:	9316      	str	r3, [sp, #88]	; 0x58
    b0fe:	9417      	str	r4, [sp, #92]	; 0x5c
    b100:	f7ff f9ba 	bl	a478 <__ulp>
    b104:	0002      	movs	r2, r0
    b106:	000b      	movs	r3, r1
    b108:	980a      	ldr	r0, [sp, #40]	; 0x28
    b10a:	990b      	ldr	r1, [sp, #44]	; 0x2c
    b10c:	f7f9 f9e8 	bl	44e0 <__aeabi_dmul>
    b110:	0032      	movs	r2, r6
    b112:	003b      	movs	r3, r7
    b114:	f001 fe04 	bl	cd20 <__aeabi_dadd>
    b118:	4b6f      	ldr	r3, [pc, #444]	; (b2d8 <_strtod_l+0xa60>)
    b11a:	4a71      	ldr	r2, [pc, #452]	; (b2e0 <_strtod_l+0xa68>)
    b11c:	9004      	str	r0, [sp, #16]
    b11e:	9105      	str	r1, [sp, #20]
    b120:	400b      	ands	r3, r1
    b122:	4293      	cmp	r3, r2
    b124:	d800      	bhi.n	b128 <_strtod_l+0x8b0>
    b126:	e0c6      	b.n	b2b6 <_strtod_l+0xa3e>
    b128:	4b6e      	ldr	r3, [pc, #440]	; (b2e4 <_strtod_l+0xa6c>)
    b12a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    b12c:	429a      	cmp	r2, r3
    b12e:	d005      	beq.n	b13c <_strtod_l+0x8c4>
    b130:	4b6c      	ldr	r3, [pc, #432]	; (b2e4 <_strtod_l+0xa6c>)
    b132:	9305      	str	r3, [sp, #20]
    b134:	2301      	movs	r3, #1
    b136:	425b      	negs	r3, r3
    b138:	9304      	str	r3, [sp, #16]
    b13a:	e66a      	b.n	ae12 <_strtod_l+0x59a>
    b13c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    b13e:	3301      	adds	r3, #1
    b140:	d1f6      	bne.n	b130 <_strtod_l+0x8b8>
    b142:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b144:	46da      	mov	sl, fp
    b146:	469b      	mov	fp, r3
    b148:	981e      	ldr	r0, [sp, #120]	; 0x78
    b14a:	2322      	movs	r3, #34	; 0x22
    b14c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b14e:	6013      	str	r3, [r2, #0]
    b150:	4b61      	ldr	r3, [pc, #388]	; (b2d8 <_strtod_l+0xa60>)
    b152:	9305      	str	r3, [sp, #20]
    b154:	2300      	movs	r3, #0
    b156:	9304      	str	r3, [sp, #16]
    b158:	9c04      	ldr	r4, [sp, #16]
    b15a:	9d05      	ldr	r5, [sp, #20]
    b15c:	9e09      	ldr	r6, [sp, #36]	; 0x24
    b15e:	0001      	movs	r1, r0
    b160:	0030      	movs	r0, r6
    b162:	f7fe fe7d 	bl	9e60 <_Bfree>
    b166:	9908      	ldr	r1, [sp, #32]
    b168:	0030      	movs	r0, r6
    b16a:	f7fe fe79 	bl	9e60 <_Bfree>
    b16e:	4641      	mov	r1, r8
    b170:	0030      	movs	r0, r6
    b172:	f7fe fe75 	bl	9e60 <_Bfree>
    b176:	4651      	mov	r1, sl
    b178:	0030      	movs	r0, r6
    b17a:	f7fe fe71 	bl	9e60 <_Bfree>
    b17e:	4649      	mov	r1, r9
    b180:	0030      	movs	r0, r6
    b182:	f7fe fe6d 	bl	9e60 <_Bfree>
    b186:	e4b2      	b.n	aaee <_strtod_l+0x276>
    b188:	2200      	movs	r2, #0
    b18a:	920d      	str	r2, [sp, #52]	; 0x34
    b18c:	e697      	b.n	aebe <_strtod_l+0x646>
    b18e:	9f11      	ldr	r7, [sp, #68]	; 0x44
    b190:	9e14      	ldr	r6, [sp, #80]	; 0x50
    b192:	0038      	movs	r0, r7
    b194:	0031      	movs	r1, r6
    b196:	f7f9 ff39 	bl	500c <__aeabi_d2iz>
    b19a:	f7f9 ff6b 	bl	5074 <__aeabi_i2d>
    b19e:	000b      	movs	r3, r1
    b1a0:	0002      	movs	r2, r0
    b1a2:	0031      	movs	r1, r6
    b1a4:	0038      	movs	r0, r7
    b1a6:	f7f9 fc1b 	bl	49e0 <__aeabi_dsub>
    b1aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b1ac:	0006      	movs	r6, r0
    b1ae:	000f      	movs	r7, r1
    b1b0:	2b00      	cmp	r3, #0
    b1b2:	d112      	bne.n	b1da <_strtod_l+0x962>
    b1b4:	9b04      	ldr	r3, [sp, #16]
    b1b6:	2b00      	cmp	r3, #0
    b1b8:	d10f      	bne.n	b1da <_strtod_l+0x962>
    b1ba:	0324      	lsls	r4, r4, #12
    b1bc:	d10d      	bne.n	b1da <_strtod_l+0x962>
    b1be:	4a4a      	ldr	r2, [pc, #296]	; (b2e8 <_strtod_l+0xa70>)
    b1c0:	4b4a      	ldr	r3, [pc, #296]	; (b2ec <_strtod_l+0xa74>)
    b1c2:	f7fa f839 	bl	5238 <__aeabi_dcmplt>
    b1c6:	2800      	cmp	r0, #0
    b1c8:	d100      	bne.n	b1cc <_strtod_l+0x954>
    b1ca:	e622      	b.n	ae12 <_strtod_l+0x59a>
    b1cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b1ce:	46da      	mov	sl, fp
    b1d0:	9c04      	ldr	r4, [sp, #16]
    b1d2:	9d05      	ldr	r5, [sp, #20]
    b1d4:	469b      	mov	fp, r3
    b1d6:	981e      	ldr	r0, [sp, #120]	; 0x78
    b1d8:	e7c0      	b.n	b15c <_strtod_l+0x8e4>
    b1da:	4a43      	ldr	r2, [pc, #268]	; (b2e8 <_strtod_l+0xa70>)
    b1dc:	4b44      	ldr	r3, [pc, #272]	; (b2f0 <_strtod_l+0xa78>)
    b1de:	0030      	movs	r0, r6
    b1e0:	0039      	movs	r1, r7
    b1e2:	f7fa f829 	bl	5238 <__aeabi_dcmplt>
    b1e6:	2800      	cmp	r0, #0
    b1e8:	d1f0      	bne.n	b1cc <_strtod_l+0x954>
    b1ea:	4a42      	ldr	r2, [pc, #264]	; (b2f4 <_strtod_l+0xa7c>)
    b1ec:	4b35      	ldr	r3, [pc, #212]	; (b2c4 <_strtod_l+0xa4c>)
    b1ee:	0030      	movs	r0, r6
    b1f0:	0039      	movs	r1, r7
    b1f2:	f7fa f835 	bl	5260 <__aeabi_dcmpgt>
    b1f6:	2800      	cmp	r0, #0
    b1f8:	d100      	bne.n	b1fc <_strtod_l+0x984>
    b1fa:	e60a      	b.n	ae12 <_strtod_l+0x59a>
    b1fc:	e7e6      	b.n	b1cc <_strtod_l+0x954>
    b1fe:	46a0      	mov	r8, r4
    b200:	991d      	ldr	r1, [sp, #116]	; 0x74
    b202:	3502      	adds	r5, #2
    b204:	2f08      	cmp	r7, #8
    b206:	dc00      	bgt.n	b20a <_strtod_l+0x992>
    b208:	e0b9      	b.n	b37e <_strtod_l+0xb06>
    b20a:	2300      	movs	r3, #0
    b20c:	2d10      	cmp	r5, #16
    b20e:	dc05      	bgt.n	b21c <_strtod_l+0x9a4>
    b210:	464c      	mov	r4, r9
    b212:	00a4      	lsls	r4, r4, #2
    b214:	444c      	add	r4, r9
    b216:	4691      	mov	r9, r2
    b218:	0064      	lsls	r4, r4, #1
    b21a:	44a1      	add	r9, r4
    b21c:	1c4a      	adds	r2, r1, #1
    b21e:	921d      	str	r2, [sp, #116]	; 0x74
    b220:	784c      	ldrb	r4, [r1, #1]
    b222:	f7ff fbe3 	bl	a9ec <_strtod_l+0x174>
    b226:	2c00      	cmp	r4, #0
    b228:	d100      	bne.n	b22c <_strtod_l+0x9b4>
    b22a:	e4ee      	b.n	ac0a <_strtod_l+0x392>
    b22c:	230f      	movs	r3, #15
    b22e:	4264      	negs	r4, r4
    b230:	4023      	ands	r3, r4
    b232:	d00a      	beq.n	b24a <_strtod_l+0x9d2>
    b234:	9804      	ldr	r0, [sp, #16]
    b236:	9905      	ldr	r1, [sp, #20]
    b238:	4a2f      	ldr	r2, [pc, #188]	; (b2f8 <_strtod_l+0xa80>)
    b23a:	00db      	lsls	r3, r3, #3
    b23c:	18d3      	adds	r3, r2, r3
    b23e:	681a      	ldr	r2, [r3, #0]
    b240:	685b      	ldr	r3, [r3, #4]
    b242:	f7f8 fe19 	bl	3e78 <__aeabi_ddiv>
    b246:	9004      	str	r0, [sp, #16]
    b248:	9105      	str	r1, [sp, #20]
    b24a:	1124      	asrs	r4, r4, #4
    b24c:	d100      	bne.n	b250 <_strtod_l+0x9d8>
    b24e:	e4dc      	b.n	ac0a <_strtod_l+0x392>
    b250:	2c1f      	cmp	r4, #31
    b252:	dc29      	bgt.n	b2a8 <_strtod_l+0xa30>
    b254:	2310      	movs	r3, #16
    b256:	4023      	ands	r3, r4
    b258:	930c      	str	r3, [sp, #48]	; 0x30
    b25a:	d100      	bne.n	b25e <_strtod_l+0x9e6>
    b25c:	e1c5      	b.n	b5ea <_strtod_l+0xd72>
    b25e:	236a      	movs	r3, #106	; 0x6a
    b260:	930c      	str	r3, [sp, #48]	; 0x30
    b262:	2c00      	cmp	r4, #0
    b264:	dc00      	bgt.n	b268 <_strtod_l+0x9f0>
    b266:	e1c4      	b.n	b5f2 <_strtod_l+0xd7a>
    b268:	9804      	ldr	r0, [sp, #16]
    b26a:	9905      	ldr	r1, [sp, #20]
    b26c:	2300      	movs	r3, #0
    b26e:	2701      	movs	r7, #1
    b270:	4e22      	ldr	r6, [pc, #136]	; (b2fc <_strtod_l+0xa84>)
    b272:	4227      	tst	r7, r4
    b274:	d004      	beq.n	b280 <_strtod_l+0xa08>
    b276:	6832      	ldr	r2, [r6, #0]
    b278:	6873      	ldr	r3, [r6, #4]
    b27a:	f7f9 f931 	bl	44e0 <__aeabi_dmul>
    b27e:	2301      	movs	r3, #1
    b280:	1064      	asrs	r4, r4, #1
    b282:	3608      	adds	r6, #8
    b284:	2c00      	cmp	r4, #0
    b286:	d1f4      	bne.n	b272 <_strtod_l+0x9fa>
    b288:	2b00      	cmp	r3, #0
    b28a:	d000      	beq.n	b28e <_strtod_l+0xa16>
    b28c:	e221      	b.n	b6d2 <_strtod_l+0xe5a>
    b28e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b290:	2b00      	cmp	r3, #0
    b292:	d000      	beq.n	b296 <_strtod_l+0xa1e>
    b294:	e1ad      	b.n	b5f2 <_strtod_l+0xd7a>
    b296:	9804      	ldr	r0, [sp, #16]
    b298:	9905      	ldr	r1, [sp, #20]
    b29a:	2200      	movs	r2, #0
    b29c:	2300      	movs	r3, #0
    b29e:	f7f9 ffc5 	bl	522c <__aeabi_dcmpeq>
    b2a2:	2800      	cmp	r0, #0
    b2a4:	d100      	bne.n	b2a8 <_strtod_l+0xa30>
    b2a6:	e4b2      	b.n	ac0e <_strtod_l+0x396>
    b2a8:	2322      	movs	r3, #34	; 0x22
    b2aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b2ac:	2400      	movs	r4, #0
    b2ae:	6013      	str	r3, [r2, #0]
    b2b0:	2500      	movs	r5, #0
    b2b2:	f7ff fc1c 	bl	aaee <_strtod_l+0x276>
    b2b6:	23d4      	movs	r3, #212	; 0xd4
    b2b8:	049b      	lsls	r3, r3, #18
    b2ba:	18cc      	adds	r4, r1, r3
    b2bc:	9405      	str	r4, [sp, #20]
    b2be:	e5a0      	b.n	ae02 <_strtod_l+0x58a>
    b2c0:	00004e1f 	.word	0x00004e1f
    b2c4:	3fe00000 	.word	0x3fe00000
    b2c8:	fffffbe2 	.word	0xfffffbe2
    b2cc:	3ff00000 	.word	0x3ff00000
    b2d0:	0000f4c4 	.word	0x0000f4c4
    b2d4:	bff00000 	.word	0xbff00000
    b2d8:	7ff00000 	.word	0x7ff00000
    b2dc:	fcb00000 	.word	0xfcb00000
    b2e0:	7c9fffff 	.word	0x7c9fffff
    b2e4:	7fefffff 	.word	0x7fefffff
    b2e8:	94a03595 	.word	0x94a03595
    b2ec:	3fcfffff 	.word	0x3fcfffff
    b2f0:	3fdfffff 	.word	0x3fdfffff
    b2f4:	35afe535 	.word	0x35afe535
    b2f8:	0000f310 	.word	0x0000f310
    b2fc:	0000f4f0 	.word	0x0000f4f0
    b300:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    b302:	2a00      	cmp	r2, #0
    b304:	d007      	beq.n	b316 <_strtod_l+0xa9e>
    b306:	2135      	movs	r1, #53	; 0x35
    b308:	a820      	add	r0, sp, #128	; 0x80
    b30a:	f7ff f9df 	bl	a6cc <__copybits>
    b30e:	991e      	ldr	r1, [sp, #120]	; 0x78
    b310:	9809      	ldr	r0, [sp, #36]	; 0x24
    b312:	f7fe fda5 	bl	9e60 <_Bfree>
    b316:	2c05      	cmp	r4, #5
    b318:	d808      	bhi.n	b32c <_strtod_l+0xab4>
    b31a:	4bd1      	ldr	r3, [pc, #836]	; (b660 <_strtod_l+0xde8>)
    b31c:	00a4      	lsls	r4, r4, #2
    b31e:	591b      	ldr	r3, [r3, r4]
    b320:	469f      	mov	pc, r3
    b322:	4bd0      	ldr	r3, [pc, #832]	; (b664 <_strtod_l+0xdec>)
    b324:	9305      	str	r3, [sp, #20]
    b326:	2301      	movs	r3, #1
    b328:	425b      	negs	r3, r3
    b32a:	9304      	str	r3, [sp, #16]
    b32c:	072b      	lsls	r3, r5, #28
    b32e:	d400      	bmi.n	b332 <_strtod_l+0xaba>
    b330:	e441      	b.n	abb6 <_strtod_l+0x33e>
    b332:	2380      	movs	r3, #128	; 0x80
    b334:	9a05      	ldr	r2, [sp, #20]
    b336:	061b      	lsls	r3, r3, #24
    b338:	431a      	orrs	r2, r3
    b33a:	9205      	str	r2, [sp, #20]
    b33c:	e43b      	b.n	abb6 <_strtod_l+0x33e>
    b33e:	4bca      	ldr	r3, [pc, #808]	; (b668 <_strtod_l+0xdf0>)
    b340:	9305      	str	r3, [sp, #20]
    b342:	e7f3      	b.n	b32c <_strtod_l+0xab4>
    b344:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b346:	9304      	str	r3, [sp, #16]
    b348:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b34a:	9305      	str	r3, [sp, #20]
    b34c:	e7ee      	b.n	b32c <_strtod_l+0xab4>
    b34e:	49c7      	ldr	r1, [pc, #796]	; (b66c <_strtod_l+0xdf4>)
    b350:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b352:	468c      	mov	ip, r1
    b354:	9304      	str	r3, [sp, #16]
    b356:	4ac6      	ldr	r2, [pc, #792]	; (b670 <_strtod_l+0xdf8>)
    b358:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b35a:	401a      	ands	r2, r3
    b35c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b35e:	4463      	add	r3, ip
    b360:	051b      	lsls	r3, r3, #20
    b362:	431a      	orrs	r2, r3
    b364:	9205      	str	r2, [sp, #20]
    b366:	e7e1      	b.n	b32c <_strtod_l+0xab4>
    b368:	2230      	movs	r2, #48	; 0x30
    b36a:	1c58      	adds	r0, r3, #1
    b36c:	2300      	movs	r3, #0
    b36e:	991d      	ldr	r1, [sp, #116]	; 0x74
    b370:	4252      	negs	r2, r2
    b372:	4694      	mov	ip, r2
    b374:	468a      	mov	sl, r1
    b376:	4698      	mov	r8, r3
    b378:	2501      	movs	r5, #1
    b37a:	4699      	mov	r9, r3
    b37c:	44a4      	add	ip, r4
    b37e:	4643      	mov	r3, r8
    b380:	009c      	lsls	r4, r3, #2
    b382:	4444      	add	r4, r8
    b384:	0064      	lsls	r4, r4, #1
    b386:	4464      	add	r4, ip
    b388:	46a0      	mov	r8, r4
    b38a:	2300      	movs	r3, #0
    b38c:	e746      	b.n	b21c <_strtod_l+0x9a4>
    b38e:	2325      	movs	r3, #37	; 0x25
    b390:	9e08      	ldr	r6, [sp, #32]
    b392:	1b5b      	subs	r3, r3, r5
    b394:	429e      	cmp	r6, r3
    b396:	dd01      	ble.n	b39c <_strtod_l+0xb24>
    b398:	f7ff fc1e 	bl	abd8 <_strtod_l+0x360>
    b39c:	230f      	movs	r3, #15
    b39e:	4cb5      	ldr	r4, [pc, #724]	; (b674 <_strtod_l+0xdfc>)
    b3a0:	1b5d      	subs	r5, r3, r5
    b3a2:	00e9      	lsls	r1, r5, #3
    b3a4:	1b75      	subs	r5, r6, r5
    b3a6:	1861      	adds	r1, r4, r1
    b3a8:	00ed      	lsls	r5, r5, #3
    b3aa:	1964      	adds	r4, r4, r5
    b3ac:	9a04      	ldr	r2, [sp, #16]
    b3ae:	9b05      	ldr	r3, [sp, #20]
    b3b0:	6808      	ldr	r0, [r1, #0]
    b3b2:	6849      	ldr	r1, [r1, #4]
    b3b4:	f7f9 f894 	bl	44e0 <__aeabi_dmul>
    b3b8:	6822      	ldr	r2, [r4, #0]
    b3ba:	6863      	ldr	r3, [r4, #4]
    b3bc:	f7f9 f890 	bl	44e0 <__aeabi_dmul>
    b3c0:	0004      	movs	r4, r0
    b3c2:	000d      	movs	r5, r1
    b3c4:	f7ff fb93 	bl	aaee <_strtod_l+0x276>
    b3c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
    b3ca:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b3cc:	9218      	str	r2, [sp, #96]	; 0x60
    b3ce:	9319      	str	r3, [sp, #100]	; 0x64
    b3d0:	e4fe      	b.n	add0 <_strtod_l+0x558>
    b3d2:	2300      	movs	r3, #0
    b3d4:	9311      	str	r3, [sp, #68]	; 0x44
    b3d6:	4ba8      	ldr	r3, [pc, #672]	; (b678 <_strtod_l+0xe00>)
    b3d8:	9314      	str	r3, [sp, #80]	; 0x50
    b3da:	e4ed      	b.n	adb8 <_strtod_l+0x540>
    b3dc:	2c49      	cmp	r4, #73	; 0x49
    b3de:	d001      	beq.n	b3e4 <_strtod_l+0xb6c>
    b3e0:	f7ff fa8e 	bl	a900 <_strtod_l+0x88>
    b3e4:	49a5      	ldr	r1, [pc, #660]	; (b67c <_strtod_l+0xe04>)
    b3e6:	a81d      	add	r0, sp, #116	; 0x74
    b3e8:	f001 f958 	bl	c69c <__match>
    b3ec:	2800      	cmp	r0, #0
    b3ee:	d101      	bne.n	b3f4 <_strtod_l+0xb7c>
    b3f0:	f7ff fa86 	bl	a900 <_strtod_l+0x88>
    b3f4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b3f6:	49a2      	ldr	r1, [pc, #648]	; (b680 <_strtod_l+0xe08>)
    b3f8:	3b01      	subs	r3, #1
    b3fa:	a81d      	add	r0, sp, #116	; 0x74
    b3fc:	931d      	str	r3, [sp, #116]	; 0x74
    b3fe:	f001 f94d 	bl	c69c <__match>
    b402:	2800      	cmp	r0, #0
    b404:	d000      	beq.n	b408 <_strtod_l+0xb90>
    b406:	e667      	b.n	b0d8 <_strtod_l+0x860>
    b408:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b40a:	3301      	adds	r3, #1
    b40c:	931d      	str	r3, [sp, #116]	; 0x74
    b40e:	e663      	b.n	b0d8 <_strtod_l+0x860>
    b410:	9b05      	ldr	r3, [sp, #20]
    b412:	9310      	str	r3, [sp, #64]	; 0x40
    b414:	2b00      	cmp	r3, #0
    b416:	d000      	beq.n	b41a <_strtod_l+0xba2>
    b418:	e623      	b.n	b062 <_strtod_l+0x7ea>
    b41a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b41c:	46da      	mov	sl, fp
    b41e:	469b      	mov	fp, r3
    b420:	2322      	movs	r3, #34	; 0x22
    b422:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b424:	981e      	ldr	r0, [sp, #120]	; 0x78
    b426:	6013      	str	r3, [r2, #0]
    b428:	2400      	movs	r4, #0
    b42a:	2500      	movs	r5, #0
    b42c:	e696      	b.n	b15c <_strtod_l+0x8e4>
    b42e:	9a08      	ldr	r2, [sp, #32]
    b430:	0013      	movs	r3, r2
    b432:	3316      	adds	r3, #22
    b434:	da01      	bge.n	b43a <_strtod_l+0xbc2>
    b436:	f7ff fbcf 	bl	abd8 <_strtod_l+0x360>
    b43a:	00d0      	lsls	r0, r2, #3
    b43c:	4a8d      	ldr	r2, [pc, #564]	; (b674 <_strtod_l+0xdfc>)
    b43e:	1a12      	subs	r2, r2, r0
    b440:	6853      	ldr	r3, [r2, #4]
    b442:	6812      	ldr	r2, [r2, #0]
    b444:	9804      	ldr	r0, [sp, #16]
    b446:	9905      	ldr	r1, [sp, #20]
    b448:	f7f8 fd16 	bl	3e78 <__aeabi_ddiv>
    b44c:	0004      	movs	r4, r0
    b44e:	000d      	movs	r5, r1
    b450:	f7ff fb4d 	bl	aaee <_strtod_l+0x276>
    b454:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b456:	46da      	mov	sl, fp
    b458:	469b      	mov	fp, r3
    b45a:	e676      	b.n	b14a <_strtod_l+0x8d2>
    b45c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b45e:	46da      	mov	sl, fp
    b460:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    b462:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    b464:	469b      	mov	fp, r3
    b466:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b468:	2b00      	cmp	r3, #0
    b46a:	d100      	bne.n	b46e <_strtod_l+0xbf6>
    b46c:	e08d      	b.n	b58a <_strtod_l+0xd12>
    b46e:	9804      	ldr	r0, [sp, #16]
    b470:	9905      	ldr	r1, [sp, #20]
    b472:	030b      	lsls	r3, r1, #12
    b474:	000a      	movs	r2, r1
    b476:	4983      	ldr	r1, [pc, #524]	; (b684 <_strtod_l+0xe0c>)
    b478:	0b1b      	lsrs	r3, r3, #12
    b47a:	428b      	cmp	r3, r1
    b47c:	d100      	bne.n	b480 <_strtod_l+0xc08>
    b47e:	e0cc      	b.n	b61a <_strtod_l+0xda2>
    b480:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b482:	2b00      	cmp	r3, #0
    b484:	d100      	bne.n	b488 <_strtod_l+0xc10>
    b486:	e07b      	b.n	b580 <_strtod_l+0xd08>
    b488:	9a05      	ldr	r2, [sp, #20]
    b48a:	4213      	tst	r3, r2
    b48c:	d010      	beq.n	b4b0 <_strtod_l+0xc38>
    b48e:	9804      	ldr	r0, [sp, #16]
    b490:	9905      	ldr	r1, [sp, #20]
    b492:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b494:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    b496:	2b00      	cmp	r3, #0
    b498:	d100      	bne.n	b49c <_strtod_l+0xc24>
    b49a:	e083      	b.n	b5a4 <_strtod_l+0xd2c>
    b49c:	f7ff f9d4 	bl	a848 <sulp>
    b4a0:	0002      	movs	r2, r0
    b4a2:	000b      	movs	r3, r1
    b4a4:	0020      	movs	r0, r4
    b4a6:	0029      	movs	r1, r5
    b4a8:	f001 fc3a 	bl	cd20 <__aeabi_dadd>
    b4ac:	0004      	movs	r4, r0
    b4ae:	000d      	movs	r5, r1
    b4b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b4b2:	2b00      	cmp	r3, #0
    b4b4:	d017      	beq.n	b4e6 <_strtod_l+0xc6e>
    b4b6:	4b74      	ldr	r3, [pc, #464]	; (b688 <_strtod_l+0xe10>)
    b4b8:	0020      	movs	r0, r4
    b4ba:	9317      	str	r3, [sp, #92]	; 0x5c
    b4bc:	2300      	movs	r3, #0
    b4be:	9316      	str	r3, [sp, #88]	; 0x58
    b4c0:	9a16      	ldr	r2, [sp, #88]	; 0x58
    b4c2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    b4c4:	0029      	movs	r1, r5
    b4c6:	f7f9 f80b 	bl	44e0 <__aeabi_dmul>
    b4ca:	0002      	movs	r2, r0
    b4cc:	000b      	movs	r3, r1
    b4ce:	0004      	movs	r4, r0
    b4d0:	000d      	movs	r5, r1
    b4d2:	9204      	str	r2, [sp, #16]
    b4d4:	9305      	str	r3, [sp, #20]
    b4d6:	2900      	cmp	r1, #0
    b4d8:	d105      	bne.n	b4e6 <_strtod_l+0xc6e>
    b4da:	9b04      	ldr	r3, [sp, #16]
    b4dc:	2b00      	cmp	r3, #0
    b4de:	d102      	bne.n	b4e6 <_strtod_l+0xc6e>
    b4e0:	2322      	movs	r3, #34	; 0x22
    b4e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b4e4:	6013      	str	r3, [r2, #0]
    b4e6:	981e      	ldr	r0, [sp, #120]	; 0x78
    b4e8:	e638      	b.n	b15c <_strtod_l+0x8e4>
    b4ea:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b4ec:	46da      	mov	sl, fp
    b4ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    b4f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    b4f2:	469b      	mov	fp, r3
    b4f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b4f6:	2b00      	cmp	r3, #0
    b4f8:	d1da      	bne.n	b4b0 <_strtod_l+0xc38>
    b4fa:	9904      	ldr	r1, [sp, #16]
    b4fc:	9a05      	ldr	r2, [sp, #20]
    b4fe:	2900      	cmp	r1, #0
    b500:	d1d6      	bne.n	b4b0 <_strtod_l+0xc38>
    b502:	0313      	lsls	r3, r2, #12
    b504:	d1d4      	bne.n	b4b0 <_strtod_l+0xc38>
    b506:	4b58      	ldr	r3, [pc, #352]	; (b668 <_strtod_l+0xdf0>)
    b508:	4013      	ands	r3, r2
    b50a:	22d6      	movs	r2, #214	; 0xd6
    b50c:	04d2      	lsls	r2, r2, #19
    b50e:	4293      	cmp	r3, r2
    b510:	d9ce      	bls.n	b4b0 <_strtod_l+0xc38>
    b512:	464b      	mov	r3, r9
    b514:	695b      	ldr	r3, [r3, #20]
    b516:	2b00      	cmp	r3, #0
    b518:	d103      	bne.n	b522 <_strtod_l+0xcaa>
    b51a:	464b      	mov	r3, r9
    b51c:	691b      	ldr	r3, [r3, #16]
    b51e:	2b01      	cmp	r3, #1
    b520:	ddc6      	ble.n	b4b0 <_strtod_l+0xc38>
    b522:	4649      	mov	r1, r9
    b524:	2201      	movs	r2, #1
    b526:	9809      	ldr	r0, [sp, #36]	; 0x24
    b528:	f7fe fe90 	bl	a24c <__lshift>
    b52c:	4641      	mov	r1, r8
    b52e:	4681      	mov	r9, r0
    b530:	f7fe feec 	bl	a30c <__mcmp>
    b534:	2800      	cmp	r0, #0
    b536:	ddbb      	ble.n	b4b0 <_strtod_l+0xc38>
    b538:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b53a:	2b00      	cmp	r3, #0
    b53c:	d100      	bne.n	b540 <_strtod_l+0xcc8>
    b53e:	e0b2      	b.n	b6a6 <_strtod_l+0xe2e>
    b540:	9a05      	ldr	r2, [sp, #20]
    b542:	4b49      	ldr	r3, [pc, #292]	; (b668 <_strtod_l+0xdf0>)
    b544:	4013      	ands	r3, r2
    b546:	22d6      	movs	r2, #214	; 0xd6
    b548:	04d2      	lsls	r2, r2, #19
    b54a:	4293      	cmp	r3, r2
    b54c:	dd00      	ble.n	b550 <_strtod_l+0xcd8>
    b54e:	e0aa      	b.n	b6a6 <_strtod_l+0xe2e>
    b550:	22dc      	movs	r2, #220	; 0xdc
    b552:	0492      	lsls	r2, r2, #18
    b554:	4293      	cmp	r3, r2
    b556:	dcae      	bgt.n	b4b6 <_strtod_l+0xc3e>
    b558:	e762      	b.n	b420 <_strtod_l+0xba8>
    b55a:	22d4      	movs	r2, #212	; 0xd4
    b55c:	0492      	lsls	r2, r2, #18
    b55e:	0023      	movs	r3, r4
    b560:	4694      	mov	ip, r2
    b562:	4463      	add	r3, ip
    b564:	9305      	str	r3, [sp, #20]
    b566:	2300      	movs	r3, #0
    b568:	930c      	str	r3, [sp, #48]	; 0x30
    b56a:	f7ff fb50 	bl	ac0e <_strtod_l+0x396>
    b56e:	2300      	movs	r3, #0
    b570:	4c46      	ldr	r4, [pc, #280]	; (b68c <_strtod_l+0xe14>)
    b572:	931a      	str	r3, [sp, #104]	; 0x68
    b574:	941b      	str	r4, [sp, #108]	; 0x6c
    b576:	2300      	movs	r3, #0
    b578:	9311      	str	r3, [sp, #68]	; 0x44
    b57a:	4b45      	ldr	r3, [pc, #276]	; (b690 <_strtod_l+0xe18>)
    b57c:	9314      	str	r3, [sp, #80]	; 0x50
    b57e:	e545      	b.n	b00c <_strtod_l+0x794>
    b580:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b582:	9a04      	ldr	r2, [sp, #16]
    b584:	4213      	tst	r3, r2
    b586:	d093      	beq.n	b4b0 <_strtod_l+0xc38>
    b588:	e781      	b.n	b48e <_strtod_l+0xc16>
    b58a:	9904      	ldr	r1, [sp, #16]
    b58c:	9a05      	ldr	r2, [sp, #20]
    b58e:	0313      	lsls	r3, r2, #12
    b590:	d000      	beq.n	b594 <_strtod_l+0xd1c>
    b592:	e775      	b.n	b480 <_strtod_l+0xc08>
    b594:	2900      	cmp	r1, #0
    b596:	d000      	beq.n	b59a <_strtod_l+0xd22>
    b598:	e772      	b.n	b480 <_strtod_l+0xc08>
    b59a:	e7cd      	b.n	b538 <_strtod_l+0xcc0>
    b59c:	4b3d      	ldr	r3, [pc, #244]	; (b694 <_strtod_l+0xe1c>)
    b59e:	2700      	movs	r7, #0
    b5a0:	930c      	str	r3, [sp, #48]	; 0x30
    b5a2:	e4b3      	b.n	af0c <_strtod_l+0x694>
    b5a4:	f7ff f950 	bl	a848 <sulp>
    b5a8:	0002      	movs	r2, r0
    b5aa:	000b      	movs	r3, r1
    b5ac:	0020      	movs	r0, r4
    b5ae:	0029      	movs	r1, r5
    b5b0:	f7f9 fa16 	bl	49e0 <__aeabi_dsub>
    b5b4:	2200      	movs	r2, #0
    b5b6:	2300      	movs	r3, #0
    b5b8:	0004      	movs	r4, r0
    b5ba:	000d      	movs	r5, r1
    b5bc:	f7f9 fe36 	bl	522c <__aeabi_dcmpeq>
    b5c0:	2800      	cmp	r0, #0
    b5c2:	d000      	beq.n	b5c6 <_strtod_l+0xd4e>
    b5c4:	e72c      	b.n	b420 <_strtod_l+0xba8>
    b5c6:	e773      	b.n	b4b0 <_strtod_l+0xc38>
    b5c8:	aa20      	add	r2, sp, #128	; 0x80
    b5ca:	4933      	ldr	r1, [pc, #204]	; (b698 <_strtod_l+0xe20>)
    b5cc:	a81d      	add	r0, sp, #116	; 0x74
    b5ce:	f001 f87b 	bl	c6c8 <__hexnan>
    b5d2:	2805      	cmp	r0, #5
    b5d4:	d001      	beq.n	b5da <_strtod_l+0xd62>
    b5d6:	f7ff faea 	bl	abae <_strtod_l+0x336>
    b5da:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b5dc:	4a22      	ldr	r2, [pc, #136]	; (b668 <_strtod_l+0xdf0>)
    b5de:	431a      	orrs	r2, r3
    b5e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b5e2:	9205      	str	r2, [sp, #20]
    b5e4:	9304      	str	r3, [sp, #16]
    b5e6:	f7ff fae6 	bl	abb6 <_strtod_l+0x33e>
    b5ea:	2c00      	cmp	r4, #0
    b5ec:	dd00      	ble.n	b5f0 <_strtod_l+0xd78>
    b5ee:	e63b      	b.n	b268 <_strtod_l+0x9f0>
    b5f0:	e651      	b.n	b296 <_strtod_l+0xa1e>
    b5f2:	9b04      	ldr	r3, [sp, #16]
    b5f4:	9c05      	ldr	r4, [sp, #20]
    b5f6:	236b      	movs	r3, #107	; 0x6b
    b5f8:	0061      	lsls	r1, r4, #1
    b5fa:	0d49      	lsrs	r1, r1, #21
    b5fc:	0022      	movs	r2, r4
    b5fe:	1a5b      	subs	r3, r3, r1
    b600:	2b00      	cmp	r3, #0
    b602:	dc00      	bgt.n	b606 <_strtod_l+0xd8e>
    b604:	e647      	b.n	b296 <_strtod_l+0xa1e>
    b606:	2b1f      	cmp	r3, #31
    b608:	dd5c      	ble.n	b6c4 <_strtod_l+0xe4c>
    b60a:	2100      	movs	r1, #0
    b60c:	9104      	str	r1, [sp, #16]
    b60e:	2b34      	cmp	r3, #52	; 0x34
    b610:	dd62      	ble.n	b6d8 <_strtod_l+0xe60>
    b612:	23dc      	movs	r3, #220	; 0xdc
    b614:	049b      	lsls	r3, r3, #18
    b616:	9305      	str	r3, [sp, #20]
    b618:	e63d      	b.n	b296 <_strtod_l+0xa1e>
    b61a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b61c:	9904      	ldr	r1, [sp, #16]
    b61e:	2b00      	cmp	r3, #0
    b620:	d03e      	beq.n	b6a0 <_strtod_l+0xe28>
    b622:	20d4      	movs	r0, #212	; 0xd4
    b624:	4b10      	ldr	r3, [pc, #64]	; (b668 <_strtod_l+0xdf0>)
    b626:	04c0      	lsls	r0, r0, #19
    b628:	4013      	ands	r3, r2
    b62a:	4283      	cmp	r3, r0
    b62c:	d838      	bhi.n	b6a0 <_strtod_l+0xe28>
    b62e:	206b      	movs	r0, #107	; 0x6b
    b630:	0d1b      	lsrs	r3, r3, #20
    b632:	1ac0      	subs	r0, r0, r3
    b634:	2301      	movs	r3, #1
    b636:	425b      	negs	r3, r3
    b638:	4083      	lsls	r3, r0
    b63a:	428b      	cmp	r3, r1
    b63c:	d000      	beq.n	b640 <_strtod_l+0xdc8>
    b63e:	e71f      	b.n	b480 <_strtod_l+0xc08>
    b640:	4916      	ldr	r1, [pc, #88]	; (b69c <_strtod_l+0xe24>)
    b642:	428a      	cmp	r2, r1
    b644:	d05a      	beq.n	b6fc <_strtod_l+0xe84>
    b646:	2180      	movs	r1, #128	; 0x80
    b648:	4b07      	ldr	r3, [pc, #28]	; (b668 <_strtod_l+0xdf0>)
    b64a:	0349      	lsls	r1, r1, #13
    b64c:	401a      	ands	r2, r3
    b64e:	0013      	movs	r3, r2
    b650:	468c      	mov	ip, r1
    b652:	4463      	add	r3, ip
    b654:	9305      	str	r3, [sp, #20]
    b656:	2300      	movs	r3, #0
    b658:	9304      	str	r3, [sp, #16]
    b65a:	9c04      	ldr	r4, [sp, #16]
    b65c:	9d05      	ldr	r5, [sp, #20]
    b65e:	e727      	b.n	b4b0 <_strtod_l+0xc38>
    b660:	0000f49c 	.word	0x0000f49c
    b664:	7fffffff 	.word	0x7fffffff
    b668:	7ff00000 	.word	0x7ff00000
    b66c:	00000433 	.word	0x00000433
    b670:	ffefffff 	.word	0xffefffff
    b674:	0000f310 	.word	0x0000f310
    b678:	3ff00000 	.word	0x3ff00000
    b67c:	0000f4b4 	.word	0x0000f4b4
    b680:	0000f4b8 	.word	0x0000f4b8
    b684:	000fffff 	.word	0x000fffff
    b688:	39500000 	.word	0x39500000
    b68c:	bfe00000 	.word	0xbfe00000
    b690:	3fe00000 	.word	0x3fe00000
    b694:	0000f2e8 	.word	0x0000f2e8
    b698:	0000f4d8 	.word	0x0000f4d8
    b69c:	7fefffff 	.word	0x7fefffff
    b6a0:	2301      	movs	r3, #1
    b6a2:	425b      	negs	r3, r3
    b6a4:	e7c9      	b.n	b63a <_strtod_l+0xdc2>
    b6a6:	9a05      	ldr	r2, [sp, #20]
    b6a8:	4b16      	ldr	r3, [pc, #88]	; (b704 <_strtod_l+0xe8c>)
    b6aa:	4013      	ands	r3, r2
    b6ac:	4a16      	ldr	r2, [pc, #88]	; (b708 <_strtod_l+0xe90>)
    b6ae:	4694      	mov	ip, r2
    b6b0:	4a16      	ldr	r2, [pc, #88]	; (b70c <_strtod_l+0xe94>)
    b6b2:	4463      	add	r3, ip
    b6b4:	431a      	orrs	r2, r3
    b6b6:	2301      	movs	r3, #1
    b6b8:	425b      	negs	r3, r3
    b6ba:	9205      	str	r2, [sp, #20]
    b6bc:	9304      	str	r3, [sp, #16]
    b6be:	9c04      	ldr	r4, [sp, #16]
    b6c0:	9d05      	ldr	r5, [sp, #20]
    b6c2:	e6f5      	b.n	b4b0 <_strtod_l+0xc38>
    b6c4:	2201      	movs	r2, #1
    b6c6:	4252      	negs	r2, r2
    b6c8:	409a      	lsls	r2, r3
    b6ca:	9b04      	ldr	r3, [sp, #16]
    b6cc:	4013      	ands	r3, r2
    b6ce:	9304      	str	r3, [sp, #16]
    b6d0:	e5e1      	b.n	b296 <_strtod_l+0xa1e>
    b6d2:	9004      	str	r0, [sp, #16]
    b6d4:	9105      	str	r1, [sp, #20]
    b6d6:	e5da      	b.n	b28e <_strtod_l+0xa16>
    b6d8:	2101      	movs	r1, #1
    b6da:	3b20      	subs	r3, #32
    b6dc:	4249      	negs	r1, r1
    b6de:	4099      	lsls	r1, r3
    b6e0:	400a      	ands	r2, r1
    b6e2:	9205      	str	r2, [sp, #20]
    b6e4:	e5d7      	b.n	b296 <_strtod_l+0xa1e>
    b6e6:	002f      	movs	r7, r5
    b6e8:	991d      	ldr	r1, [sp, #116]	; 0x74
    b6ea:	3501      	adds	r5, #1
    b6ec:	e58a      	b.n	b204 <_strtod_l+0x98c>
    b6ee:	991d      	ldr	r1, [sp, #116]	; 0x74
    b6f0:	0023      	movs	r3, r4
    b6f2:	e593      	b.n	b21c <_strtod_l+0x9a4>
    b6f4:	9004      	str	r0, [sp, #16]
    b6f6:	9105      	str	r1, [sp, #20]
    b6f8:	f7ff fc08 	bl	af0c <_strtod_l+0x694>
    b6fc:	3301      	adds	r3, #1
    b6fe:	d1a2      	bne.n	b646 <_strtod_l+0xdce>
    b700:	e522      	b.n	b148 <_strtod_l+0x8d0>
    b702:	46c0      	nop			; (mov r8, r8)
    b704:	7ff00000 	.word	0x7ff00000
    b708:	fff00000 	.word	0xfff00000
    b70c:	000fffff 	.word	0x000fffff

0000b710 <_strtod_r>:
    b710:	4b05      	ldr	r3, [pc, #20]	; (b728 <_strtod_r+0x18>)
    b712:	b510      	push	{r4, lr}
    b714:	681b      	ldr	r3, [r3, #0]
    b716:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    b718:	2b00      	cmp	r3, #0
    b71a:	d002      	beq.n	b722 <_strtod_r+0x12>
    b71c:	f7ff f8ac 	bl	a878 <_strtod_l>
    b720:	bd10      	pop	{r4, pc}
    b722:	4b02      	ldr	r3, [pc, #8]	; (b72c <_strtod_r+0x1c>)
    b724:	e7fa      	b.n	b71c <_strtod_r+0xc>
    b726:	46c0      	nop			; (mov r8, r8)
    b728:	20000098 	.word	0x20000098
    b72c:	200004cc 	.word	0x200004cc

0000b730 <_strtoll_l.isra.0>:
    b730:	b5f0      	push	{r4, r5, r6, r7, lr}
    b732:	46de      	mov	lr, fp
    b734:	4657      	mov	r7, sl
    b736:	464e      	mov	r6, r9
    b738:	4645      	mov	r5, r8
    b73a:	b5e0      	push	{r5, r6, r7, lr}
    b73c:	001f      	movs	r7, r3
    b73e:	2308      	movs	r3, #8
    b740:	b089      	sub	sp, #36	; 0x24
    b742:	9007      	str	r0, [sp, #28]
    b744:	9106      	str	r1, [sp, #24]
    b746:	4693      	mov	fp, r2
    b748:	000e      	movs	r6, r1
    b74a:	4698      	mov	r8, r3
    b74c:	e000      	b.n	b750 <_strtoll_l.isra.0+0x20>
    b74e:	002e      	movs	r6, r5
    b750:	9812      	ldr	r0, [sp, #72]	; 0x48
    b752:	7834      	ldrb	r4, [r6, #0]
    b754:	f7fd ff82 	bl	965c <__locale_ctype_ptr_l>
    b758:	4642      	mov	r2, r8
    b75a:	1900      	adds	r0, r0, r4
    b75c:	7843      	ldrb	r3, [r0, #1]
    b75e:	1c75      	adds	r5, r6, #1
    b760:	421a      	tst	r2, r3
    b762:	d1f4      	bne.n	b74e <_strtoll_l.isra.0+0x1e>
    b764:	2c2d      	cmp	r4, #45	; 0x2d
    b766:	d100      	bne.n	b76a <_strtoll_l.isra.0+0x3a>
    b768:	e087      	b.n	b87a <_strtoll_l.isra.0+0x14a>
    b76a:	2300      	movs	r3, #0
    b76c:	9303      	str	r3, [sp, #12]
    b76e:	2c2b      	cmp	r4, #43	; 0x2b
    b770:	d100      	bne.n	b774 <_strtoll_l.isra.0+0x44>
    b772:	e094      	b.n	b89e <_strtoll_l.isra.0+0x16e>
    b774:	2f00      	cmp	r7, #0
    b776:	d00e      	beq.n	b796 <_strtoll_l.isra.0+0x66>
    b778:	2f10      	cmp	r7, #16
    b77a:	d100      	bne.n	b77e <_strtoll_l.isra.0+0x4e>
    b77c:	e092      	b.n	b8a4 <_strtoll_l.isra.0+0x174>
    b77e:	17fb      	asrs	r3, r7, #31
    b780:	4699      	mov	r9, r3
    b782:	9b03      	ldr	r3, [sp, #12]
    b784:	46ba      	mov	sl, r7
    b786:	2b00      	cmp	r3, #0
    b788:	d110      	bne.n	b7ac <_strtoll_l.isra.0+0x7c>
    b78a:	2301      	movs	r3, #1
    b78c:	425b      	negs	r3, r3
    b78e:	9304      	str	r3, [sp, #16]
    b790:	4b55      	ldr	r3, [pc, #340]	; (b8e8 <_strtoll_l.isra.0+0x1b8>)
    b792:	9305      	str	r3, [sp, #20]
    b794:	e00f      	b.n	b7b6 <_strtoll_l.isra.0+0x86>
    b796:	2c30      	cmp	r4, #48	; 0x30
    b798:	d100      	bne.n	b79c <_strtoll_l.isra.0+0x6c>
    b79a:	e092      	b.n	b8c2 <_strtoll_l.isra.0+0x192>
    b79c:	230a      	movs	r3, #10
    b79e:	469a      	mov	sl, r3
    b7a0:	2300      	movs	r3, #0
    b7a2:	270a      	movs	r7, #10
    b7a4:	4699      	mov	r9, r3
    b7a6:	9b03      	ldr	r3, [sp, #12]
    b7a8:	2b00      	cmp	r3, #0
    b7aa:	d0ee      	beq.n	b78a <_strtoll_l.isra.0+0x5a>
    b7ac:	2300      	movs	r3, #0
    b7ae:	9304      	str	r3, [sp, #16]
    b7b0:	2380      	movs	r3, #128	; 0x80
    b7b2:	061b      	lsls	r3, r3, #24
    b7b4:	9305      	str	r3, [sp, #20]
    b7b6:	9904      	ldr	r1, [sp, #16]
    b7b8:	9e05      	ldr	r6, [sp, #20]
    b7ba:	4688      	mov	r8, r1
    b7bc:	0008      	movs	r0, r1
    b7be:	4652      	mov	r2, sl
    b7c0:	0031      	movs	r1, r6
    b7c2:	464b      	mov	r3, r9
    b7c4:	f7f8 f906 	bl	39d4 <__aeabi_uldivmod>
    b7c8:	4640      	mov	r0, r8
    b7ca:	9202      	str	r2, [sp, #8]
    b7cc:	0031      	movs	r1, r6
    b7ce:	4652      	mov	r2, sl
    b7d0:	464b      	mov	r3, r9
    b7d2:	f7f8 f8ff 	bl	39d4 <__aeabi_uldivmod>
    b7d6:	2200      	movs	r2, #0
    b7d8:	4680      	mov	r8, r0
    b7da:	000e      	movs	r6, r1
    b7dc:	2000      	movs	r0, #0
    b7de:	2100      	movs	r1, #0
    b7e0:	e019      	b.n	b816 <_strtoll_l.isra.0+0xe6>
    b7e2:	001c      	movs	r4, r3
    b7e4:	42a7      	cmp	r7, r4
    b7e6:	dd21      	ble.n	b82c <_strtoll_l.isra.0+0xfc>
    b7e8:	1c53      	adds	r3, r2, #1
    b7ea:	d012      	beq.n	b812 <_strtoll_l.isra.0+0xe2>
    b7ec:	42b1      	cmp	r1, r6
    b7ee:	d83b      	bhi.n	b868 <_strtoll_l.isra.0+0x138>
    b7f0:	d101      	bne.n	b7f6 <_strtoll_l.isra.0+0xc6>
    b7f2:	4540      	cmp	r0, r8
    b7f4:	d838      	bhi.n	b868 <_strtoll_l.isra.0+0x138>
    b7f6:	4580      	cmp	r8, r0
    b7f8:	d031      	beq.n	b85e <_strtoll_l.isra.0+0x12e>
    b7fa:	4652      	mov	r2, sl
    b7fc:	464b      	mov	r3, r9
    b7fe:	f7f8 f909 	bl	3a14 <__aeabi_lmul>
    b802:	17e3      	asrs	r3, r4, #31
    b804:	9400      	str	r4, [sp, #0]
    b806:	9301      	str	r3, [sp, #4]
    b808:	9b00      	ldr	r3, [sp, #0]
    b80a:	9c01      	ldr	r4, [sp, #4]
    b80c:	2201      	movs	r2, #1
    b80e:	18c0      	adds	r0, r0, r3
    b810:	4161      	adcs	r1, r4
    b812:	782c      	ldrb	r4, [r5, #0]
    b814:	3501      	adds	r5, #1
    b816:	0023      	movs	r3, r4
    b818:	3b30      	subs	r3, #48	; 0x30
    b81a:	2b09      	cmp	r3, #9
    b81c:	d9e1      	bls.n	b7e2 <_strtoll_l.isra.0+0xb2>
    b81e:	0023      	movs	r3, r4
    b820:	3b41      	subs	r3, #65	; 0x41
    b822:	2b19      	cmp	r3, #25
    b824:	d823      	bhi.n	b86e <_strtoll_l.isra.0+0x13e>
    b826:	3c37      	subs	r4, #55	; 0x37
    b828:	42a7      	cmp	r7, r4
    b82a:	dcdd      	bgt.n	b7e8 <_strtoll_l.isra.0+0xb8>
    b82c:	1c53      	adds	r3, r2, #1
    b82e:	d029      	beq.n	b884 <_strtoll_l.isra.0+0x154>
    b830:	9b03      	ldr	r3, [sp, #12]
    b832:	2b00      	cmp	r3, #0
    b834:	d004      	beq.n	b840 <_strtoll_l.isra.0+0x110>
    b836:	0003      	movs	r3, r0
    b838:	000c      	movs	r4, r1
    b83a:	2100      	movs	r1, #0
    b83c:	4258      	negs	r0, r3
    b83e:	41a1      	sbcs	r1, r4
    b840:	465b      	mov	r3, fp
    b842:	2b00      	cmp	r3, #0
    b844:	d004      	beq.n	b850 <_strtoll_l.isra.0+0x120>
    b846:	9b06      	ldr	r3, [sp, #24]
    b848:	2a00      	cmp	r2, #0
    b84a:	d125      	bne.n	b898 <_strtoll_l.isra.0+0x168>
    b84c:	465a      	mov	r2, fp
    b84e:	6013      	str	r3, [r2, #0]
    b850:	b009      	add	sp, #36	; 0x24
    b852:	bc3c      	pop	{r2, r3, r4, r5}
    b854:	4690      	mov	r8, r2
    b856:	4699      	mov	r9, r3
    b858:	46a2      	mov	sl, r4
    b85a:	46ab      	mov	fp, r5
    b85c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b85e:	428e      	cmp	r6, r1
    b860:	d1cb      	bne.n	b7fa <_strtoll_l.isra.0+0xca>
    b862:	9b02      	ldr	r3, [sp, #8]
    b864:	42a3      	cmp	r3, r4
    b866:	dac8      	bge.n	b7fa <_strtoll_l.isra.0+0xca>
    b868:	2201      	movs	r2, #1
    b86a:	4252      	negs	r2, r2
    b86c:	e7d1      	b.n	b812 <_strtoll_l.isra.0+0xe2>
    b86e:	0023      	movs	r3, r4
    b870:	3b61      	subs	r3, #97	; 0x61
    b872:	2b19      	cmp	r3, #25
    b874:	d8da      	bhi.n	b82c <_strtoll_l.isra.0+0xfc>
    b876:	3c57      	subs	r4, #87	; 0x57
    b878:	e7b4      	b.n	b7e4 <_strtoll_l.isra.0+0xb4>
    b87a:	2301      	movs	r3, #1
    b87c:	782c      	ldrb	r4, [r5, #0]
    b87e:	9303      	str	r3, [sp, #12]
    b880:	1cb5      	adds	r5, r6, #2
    b882:	e777      	b.n	b774 <_strtoll_l.isra.0+0x44>
    b884:	2322      	movs	r3, #34	; 0x22
    b886:	9a07      	ldr	r2, [sp, #28]
    b888:	6013      	str	r3, [r2, #0]
    b88a:	465b      	mov	r3, fp
    b88c:	2b00      	cmp	r3, #0
    b88e:	d028      	beq.n	b8e2 <_strtoll_l.isra.0+0x1b2>
    b890:	1e6b      	subs	r3, r5, #1
    b892:	9804      	ldr	r0, [sp, #16]
    b894:	9905      	ldr	r1, [sp, #20]
    b896:	e7d9      	b.n	b84c <_strtoll_l.isra.0+0x11c>
    b898:	9004      	str	r0, [sp, #16]
    b89a:	9105      	str	r1, [sp, #20]
    b89c:	e7f8      	b.n	b890 <_strtoll_l.isra.0+0x160>
    b89e:	782c      	ldrb	r4, [r5, #0]
    b8a0:	1cb5      	adds	r5, r6, #2
    b8a2:	e767      	b.n	b774 <_strtoll_l.isra.0+0x44>
    b8a4:	2c30      	cmp	r4, #48	; 0x30
    b8a6:	d117      	bne.n	b8d8 <_strtoll_l.isra.0+0x1a8>
    b8a8:	2220      	movs	r2, #32
    b8aa:	782b      	ldrb	r3, [r5, #0]
    b8ac:	4393      	bics	r3, r2
    b8ae:	2b58      	cmp	r3, #88	; 0x58
    b8b0:	d112      	bne.n	b8d8 <_strtoll_l.isra.0+0x1a8>
    b8b2:	2310      	movs	r3, #16
    b8b4:	469a      	mov	sl, r3
    b8b6:	2300      	movs	r3, #0
    b8b8:	786c      	ldrb	r4, [r5, #1]
    b8ba:	4699      	mov	r9, r3
    b8bc:	3502      	adds	r5, #2
    b8be:	2710      	movs	r7, #16
    b8c0:	e771      	b.n	b7a6 <_strtoll_l.isra.0+0x76>
    b8c2:	2220      	movs	r2, #32
    b8c4:	782b      	ldrb	r3, [r5, #0]
    b8c6:	4393      	bics	r3, r2
    b8c8:	2b58      	cmp	r3, #88	; 0x58
    b8ca:	d0f2      	beq.n	b8b2 <_strtoll_l.isra.0+0x182>
    b8cc:	2308      	movs	r3, #8
    b8ce:	469a      	mov	sl, r3
    b8d0:	2300      	movs	r3, #0
    b8d2:	2708      	movs	r7, #8
    b8d4:	4699      	mov	r9, r3
    b8d6:	e766      	b.n	b7a6 <_strtoll_l.isra.0+0x76>
    b8d8:	2310      	movs	r3, #16
    b8da:	469a      	mov	sl, r3
    b8dc:	2300      	movs	r3, #0
    b8de:	4699      	mov	r9, r3
    b8e0:	e761      	b.n	b7a6 <_strtoll_l.isra.0+0x76>
    b8e2:	9804      	ldr	r0, [sp, #16]
    b8e4:	9905      	ldr	r1, [sp, #20]
    b8e6:	e7b3      	b.n	b850 <_strtoll_l.isra.0+0x120>
    b8e8:	7fffffff 	.word	0x7fffffff

0000b8ec <_strtoll_r>:
    b8ec:	b510      	push	{r4, lr}
    b8ee:	4c06      	ldr	r4, [pc, #24]	; (b908 <_strtoll_r+0x1c>)
    b8f0:	b082      	sub	sp, #8
    b8f2:	6824      	ldr	r4, [r4, #0]
    b8f4:	6b64      	ldr	r4, [r4, #52]	; 0x34
    b8f6:	2c00      	cmp	r4, #0
    b8f8:	d004      	beq.n	b904 <_strtoll_r+0x18>
    b8fa:	9400      	str	r4, [sp, #0]
    b8fc:	f7ff ff18 	bl	b730 <_strtoll_l.isra.0>
    b900:	b002      	add	sp, #8
    b902:	bd10      	pop	{r4, pc}
    b904:	4c01      	ldr	r4, [pc, #4]	; (b90c <_strtoll_r+0x20>)
    b906:	e7f8      	b.n	b8fa <_strtoll_r+0xe>
    b908:	20000098 	.word	0x20000098
    b90c:	200004cc 	.word	0x200004cc

0000b910 <_strtoul_l.isra.0>:
    b910:	b5f0      	push	{r4, r5, r6, r7, lr}
    b912:	4657      	mov	r7, sl
    b914:	464e      	mov	r6, r9
    b916:	46de      	mov	lr, fp
    b918:	4645      	mov	r5, r8
    b91a:	b5e0      	push	{r5, r6, r7, lr}
    b91c:	001e      	movs	r6, r3
    b91e:	2308      	movs	r3, #8
    b920:	b083      	sub	sp, #12
    b922:	4683      	mov	fp, r0
    b924:	4689      	mov	r9, r1
    b926:	4692      	mov	sl, r2
    b928:	000f      	movs	r7, r1
    b92a:	4698      	mov	r8, r3
    b92c:	e000      	b.n	b930 <_strtoul_l.isra.0+0x20>
    b92e:	002f      	movs	r7, r5
    b930:	980c      	ldr	r0, [sp, #48]	; 0x30
    b932:	783c      	ldrb	r4, [r7, #0]
    b934:	f7fd fe92 	bl	965c <__locale_ctype_ptr_l>
    b938:	4642      	mov	r2, r8
    b93a:	1900      	adds	r0, r0, r4
    b93c:	7843      	ldrb	r3, [r0, #1]
    b93e:	1c7d      	adds	r5, r7, #1
    b940:	421a      	tst	r2, r3
    b942:	d1f4      	bne.n	b92e <_strtoul_l.isra.0+0x1e>
    b944:	2c2d      	cmp	r4, #45	; 0x2d
    b946:	d05b      	beq.n	ba00 <_strtoul_l.isra.0+0xf0>
    b948:	2300      	movs	r3, #0
    b94a:	9301      	str	r3, [sp, #4]
    b94c:	2c2b      	cmp	r4, #43	; 0x2b
    b94e:	d05c      	beq.n	ba0a <_strtoul_l.isra.0+0xfa>
    b950:	2e00      	cmp	r6, #0
    b952:	d00e      	beq.n	b972 <_strtoul_l.isra.0+0x62>
    b954:	2e10      	cmp	r6, #16
    b956:	d05b      	beq.n	ba10 <_strtoul_l.isra.0+0x100>
    b958:	2001      	movs	r0, #1
    b95a:	0031      	movs	r1, r6
    b95c:	4240      	negs	r0, r0
    b95e:	f7f7 fec3 	bl	36e8 <__udivsi3>
    b962:	0007      	movs	r7, r0
    b964:	2001      	movs	r0, #1
    b966:	0031      	movs	r1, r6
    b968:	4240      	negs	r0, r0
    b96a:	46b0      	mov	r8, r6
    b96c:	f7f7 ff42 	bl	37f4 <__aeabi_uidivmod>
    b970:	e006      	b.n	b980 <_strtoul_l.isra.0+0x70>
    b972:	2c30      	cmp	r4, #48	; 0x30
    b974:	d05b      	beq.n	ba2e <_strtoul_l.isra.0+0x11e>
    b976:	230a      	movs	r3, #10
    b978:	2105      	movs	r1, #5
    b97a:	4698      	mov	r8, r3
    b97c:	260a      	movs	r6, #10
    b97e:	4f34      	ldr	r7, [pc, #208]	; (ba50 <_strtoul_l.isra.0+0x140>)
    b980:	2200      	movs	r2, #0
    b982:	2000      	movs	r0, #0
    b984:	0023      	movs	r3, r4
    b986:	3b30      	subs	r3, #48	; 0x30
    b988:	2b09      	cmp	r3, #9
    b98a:	d907      	bls.n	b99c <_strtoul_l.isra.0+0x8c>
    b98c:	3b11      	subs	r3, #17
    b98e:	2b19      	cmp	r3, #25
    b990:	d903      	bls.n	b99a <_strtoul_l.isra.0+0x8a>
    b992:	0023      	movs	r3, r4
    b994:	3b61      	subs	r3, #97	; 0x61
    b996:	2b19      	cmp	r3, #25
    b998:	d80e      	bhi.n	b9b8 <_strtoul_l.isra.0+0xa8>
    b99a:	330a      	adds	r3, #10
    b99c:	429e      	cmp	r6, r3
    b99e:	dd0b      	ble.n	b9b8 <_strtoul_l.isra.0+0xa8>
    b9a0:	2a00      	cmp	r2, #0
    b9a2:	db20      	blt.n	b9e6 <_strtoul_l.isra.0+0xd6>
    b9a4:	42b8      	cmp	r0, r7
    b9a6:	d81e      	bhi.n	b9e6 <_strtoul_l.isra.0+0xd6>
    b9a8:	d01b      	beq.n	b9e2 <_strtoul_l.isra.0+0xd2>
    b9aa:	4642      	mov	r2, r8
    b9ac:	4350      	muls	r0, r2
    b9ae:	2201      	movs	r2, #1
    b9b0:	1818      	adds	r0, r3, r0
    b9b2:	782c      	ldrb	r4, [r5, #0]
    b9b4:	3501      	adds	r5, #1
    b9b6:	e7e5      	b.n	b984 <_strtoul_l.isra.0+0x74>
    b9b8:	2a00      	cmp	r2, #0
    b9ba:	db17      	blt.n	b9ec <_strtoul_l.isra.0+0xdc>
    b9bc:	9b01      	ldr	r3, [sp, #4]
    b9be:	2b00      	cmp	r3, #0
    b9c0:	d000      	beq.n	b9c4 <_strtoul_l.isra.0+0xb4>
    b9c2:	4240      	negs	r0, r0
    b9c4:	4653      	mov	r3, sl
    b9c6:	2b00      	cmp	r3, #0
    b9c8:	d004      	beq.n	b9d4 <_strtoul_l.isra.0+0xc4>
    b9ca:	464b      	mov	r3, r9
    b9cc:	2a00      	cmp	r2, #0
    b9ce:	d115      	bne.n	b9fc <_strtoul_l.isra.0+0xec>
    b9d0:	4652      	mov	r2, sl
    b9d2:	6013      	str	r3, [r2, #0]
    b9d4:	b003      	add	sp, #12
    b9d6:	bc3c      	pop	{r2, r3, r4, r5}
    b9d8:	4690      	mov	r8, r2
    b9da:	4699      	mov	r9, r3
    b9dc:	46a2      	mov	sl, r4
    b9de:	46ab      	mov	fp, r5
    b9e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b9e2:	428b      	cmp	r3, r1
    b9e4:	dde1      	ble.n	b9aa <_strtoul_l.isra.0+0x9a>
    b9e6:	2201      	movs	r2, #1
    b9e8:	4252      	negs	r2, r2
    b9ea:	e7e2      	b.n	b9b2 <_strtoul_l.isra.0+0xa2>
    b9ec:	2322      	movs	r3, #34	; 0x22
    b9ee:	465a      	mov	r2, fp
    b9f0:	2001      	movs	r0, #1
    b9f2:	6013      	str	r3, [r2, #0]
    b9f4:	4653      	mov	r3, sl
    b9f6:	4240      	negs	r0, r0
    b9f8:	2b00      	cmp	r3, #0
    b9fa:	d0eb      	beq.n	b9d4 <_strtoul_l.isra.0+0xc4>
    b9fc:	1e6b      	subs	r3, r5, #1
    b9fe:	e7e7      	b.n	b9d0 <_strtoul_l.isra.0+0xc0>
    ba00:	2301      	movs	r3, #1
    ba02:	782c      	ldrb	r4, [r5, #0]
    ba04:	9301      	str	r3, [sp, #4]
    ba06:	1cbd      	adds	r5, r7, #2
    ba08:	e7a2      	b.n	b950 <_strtoul_l.isra.0+0x40>
    ba0a:	782c      	ldrb	r4, [r5, #0]
    ba0c:	1cbd      	adds	r5, r7, #2
    ba0e:	e79f      	b.n	b950 <_strtoul_l.isra.0+0x40>
    ba10:	2c30      	cmp	r4, #48	; 0x30
    ba12:	d117      	bne.n	ba44 <_strtoul_l.isra.0+0x134>
    ba14:	2220      	movs	r2, #32
    ba16:	782b      	ldrb	r3, [r5, #0]
    ba18:	4393      	bics	r3, r2
    ba1a:	2b58      	cmp	r3, #88	; 0x58
    ba1c:	d112      	bne.n	ba44 <_strtoul_l.isra.0+0x134>
    ba1e:	2310      	movs	r3, #16
    ba20:	786c      	ldrb	r4, [r5, #1]
    ba22:	210f      	movs	r1, #15
    ba24:	3502      	adds	r5, #2
    ba26:	4f0b      	ldr	r7, [pc, #44]	; (ba54 <_strtoul_l.isra.0+0x144>)
    ba28:	4698      	mov	r8, r3
    ba2a:	2610      	movs	r6, #16
    ba2c:	e7a8      	b.n	b980 <_strtoul_l.isra.0+0x70>
    ba2e:	2220      	movs	r2, #32
    ba30:	782b      	ldrb	r3, [r5, #0]
    ba32:	4393      	bics	r3, r2
    ba34:	2b58      	cmp	r3, #88	; 0x58
    ba36:	d0f2      	beq.n	ba1e <_strtoul_l.isra.0+0x10e>
    ba38:	2308      	movs	r3, #8
    ba3a:	2107      	movs	r1, #7
    ba3c:	4f06      	ldr	r7, [pc, #24]	; (ba58 <_strtoul_l.isra.0+0x148>)
    ba3e:	4698      	mov	r8, r3
    ba40:	2608      	movs	r6, #8
    ba42:	e79d      	b.n	b980 <_strtoul_l.isra.0+0x70>
    ba44:	2310      	movs	r3, #16
    ba46:	210f      	movs	r1, #15
    ba48:	4f02      	ldr	r7, [pc, #8]	; (ba54 <_strtoul_l.isra.0+0x144>)
    ba4a:	4698      	mov	r8, r3
    ba4c:	e798      	b.n	b980 <_strtoul_l.isra.0+0x70>
    ba4e:	46c0      	nop			; (mov r8, r8)
    ba50:	19999999 	.word	0x19999999
    ba54:	0fffffff 	.word	0x0fffffff
    ba58:	1fffffff 	.word	0x1fffffff

0000ba5c <_strtoul_r>:
    ba5c:	b510      	push	{r4, lr}
    ba5e:	4c06      	ldr	r4, [pc, #24]	; (ba78 <_strtoul_r+0x1c>)
    ba60:	b082      	sub	sp, #8
    ba62:	6824      	ldr	r4, [r4, #0]
    ba64:	6b64      	ldr	r4, [r4, #52]	; 0x34
    ba66:	2c00      	cmp	r4, #0
    ba68:	d004      	beq.n	ba74 <_strtoul_r+0x18>
    ba6a:	9400      	str	r4, [sp, #0]
    ba6c:	f7ff ff50 	bl	b910 <_strtoul_l.isra.0>
    ba70:	b002      	add	sp, #8
    ba72:	bd10      	pop	{r4, pc}
    ba74:	4c01      	ldr	r4, [pc, #4]	; (ba7c <_strtoul_r+0x20>)
    ba76:	e7f8      	b.n	ba6a <_strtoul_r+0xe>
    ba78:	20000098 	.word	0x20000098
    ba7c:	200004cc 	.word	0x200004cc

0000ba80 <_strtoull_l.isra.0>:
    ba80:	b5f0      	push	{r4, r5, r6, r7, lr}
    ba82:	46de      	mov	lr, fp
    ba84:	4657      	mov	r7, sl
    ba86:	464e      	mov	r6, r9
    ba88:	4645      	mov	r5, r8
    ba8a:	b5e0      	push	{r5, r6, r7, lr}
    ba8c:	001e      	movs	r6, r3
    ba8e:	2308      	movs	r3, #8
    ba90:	b087      	sub	sp, #28
    ba92:	9005      	str	r0, [sp, #20]
    ba94:	9104      	str	r1, [sp, #16]
    ba96:	4693      	mov	fp, r2
    ba98:	000f      	movs	r7, r1
    ba9a:	4698      	mov	r8, r3
    ba9c:	e000      	b.n	baa0 <_strtoull_l.isra.0+0x20>
    ba9e:	002f      	movs	r7, r5
    baa0:	9810      	ldr	r0, [sp, #64]	; 0x40
    baa2:	783c      	ldrb	r4, [r7, #0]
    baa4:	f7fd fdda 	bl	965c <__locale_ctype_ptr_l>
    baa8:	4642      	mov	r2, r8
    baaa:	1900      	adds	r0, r0, r4
    baac:	7843      	ldrb	r3, [r0, #1]
    baae:	1c7d      	adds	r5, r7, #1
    bab0:	421a      	tst	r2, r3
    bab2:	d1f4      	bne.n	ba9e <_strtoull_l.isra.0+0x1e>
    bab4:	2c2d      	cmp	r4, #45	; 0x2d
    bab6:	d100      	bne.n	baba <_strtoull_l.isra.0+0x3a>
    bab8:	e085      	b.n	bbc6 <_strtoull_l.isra.0+0x146>
    baba:	2300      	movs	r3, #0
    babc:	9303      	str	r3, [sp, #12]
    babe:	2c2b      	cmp	r4, #43	; 0x2b
    bac0:	d100      	bne.n	bac4 <_strtoull_l.isra.0+0x44>
    bac2:	e085      	b.n	bbd0 <_strtoull_l.isra.0+0x150>
    bac4:	2e00      	cmp	r6, #0
    bac6:	d016      	beq.n	baf6 <_strtoull_l.isra.0+0x76>
    bac8:	2e10      	cmp	r6, #16
    baca:	d100      	bne.n	bace <_strtoull_l.isra.0+0x4e>
    bacc:	e083      	b.n	bbd6 <_strtoull_l.isra.0+0x156>
    bace:	17f3      	asrs	r3, r6, #31
    bad0:	0032      	movs	r2, r6
    bad2:	2001      	movs	r0, #1
    bad4:	4240      	negs	r0, r0
    bad6:	17c1      	asrs	r1, r0, #31
    bad8:	4699      	mov	r9, r3
    bada:	f7f7 ff7b 	bl	39d4 <__aeabi_uldivmod>
    bade:	0032      	movs	r2, r6
    bae0:	4680      	mov	r8, r0
    bae2:	000f      	movs	r7, r1
    bae4:	464b      	mov	r3, r9
    bae6:	2001      	movs	r0, #1
    bae8:	4240      	negs	r0, r0
    baea:	17c1      	asrs	r1, r0, #31
    baec:	f7f7 ff72 	bl	39d4 <__aeabi_uldivmod>
    baf0:	46b2      	mov	sl, r6
    baf2:	9202      	str	r2, [sp, #8]
    baf4:	e00c      	b.n	bb10 <_strtoull_l.isra.0+0x90>
    baf6:	2c30      	cmp	r4, #48	; 0x30
    baf8:	d100      	bne.n	bafc <_strtoull_l.isra.0+0x7c>
    bafa:	e080      	b.n	bbfe <_strtoull_l.isra.0+0x17e>
    bafc:	2305      	movs	r3, #5
    bafe:	9302      	str	r3, [sp, #8]
    bb00:	4b4c      	ldr	r3, [pc, #304]	; (bc34 <_strtoull_l.isra.0+0x1b4>)
    bb02:	260a      	movs	r6, #10
    bb04:	4698      	mov	r8, r3
    bb06:	230a      	movs	r3, #10
    bb08:	469a      	mov	sl, r3
    bb0a:	2300      	movs	r3, #0
    bb0c:	4699      	mov	r9, r3
    bb0e:	4f4a      	ldr	r7, [pc, #296]	; (bc38 <_strtoull_l.isra.0+0x1b8>)
    bb10:	2200      	movs	r2, #0
    bb12:	2000      	movs	r0, #0
    bb14:	2100      	movs	r1, #0
    bb16:	e019      	b.n	bb4c <_strtoull_l.isra.0+0xcc>
    bb18:	001c      	movs	r4, r3
    bb1a:	42a6      	cmp	r6, r4
    bb1c:	dd21      	ble.n	bb62 <_strtoull_l.isra.0+0xe2>
    bb1e:	2a00      	cmp	r2, #0
    bb20:	db3d      	blt.n	bb9e <_strtoull_l.isra.0+0x11e>
    bb22:	42b9      	cmp	r1, r7
    bb24:	d83b      	bhi.n	bb9e <_strtoull_l.isra.0+0x11e>
    bb26:	d101      	bne.n	bb2c <_strtoull_l.isra.0+0xac>
    bb28:	4540      	cmp	r0, r8
    bb2a:	d838      	bhi.n	bb9e <_strtoull_l.isra.0+0x11e>
    bb2c:	4540      	cmp	r0, r8
    bb2e:	d031      	beq.n	bb94 <_strtoull_l.isra.0+0x114>
    bb30:	4652      	mov	r2, sl
    bb32:	464b      	mov	r3, r9
    bb34:	f7f7 ff6e 	bl	3a14 <__aeabi_lmul>
    bb38:	17e3      	asrs	r3, r4, #31
    bb3a:	9400      	str	r4, [sp, #0]
    bb3c:	9301      	str	r3, [sp, #4]
    bb3e:	9b00      	ldr	r3, [sp, #0]
    bb40:	9c01      	ldr	r4, [sp, #4]
    bb42:	2201      	movs	r2, #1
    bb44:	18c0      	adds	r0, r0, r3
    bb46:	4161      	adcs	r1, r4
    bb48:	782c      	ldrb	r4, [r5, #0]
    bb4a:	3501      	adds	r5, #1
    bb4c:	0023      	movs	r3, r4
    bb4e:	3b30      	subs	r3, #48	; 0x30
    bb50:	2b09      	cmp	r3, #9
    bb52:	d9e1      	bls.n	bb18 <_strtoull_l.isra.0+0x98>
    bb54:	0023      	movs	r3, r4
    bb56:	3b41      	subs	r3, #65	; 0x41
    bb58:	2b19      	cmp	r3, #25
    bb5a:	d823      	bhi.n	bba4 <_strtoull_l.isra.0+0x124>
    bb5c:	3c37      	subs	r4, #55	; 0x37
    bb5e:	42a6      	cmp	r6, r4
    bb60:	dcdd      	bgt.n	bb1e <_strtoull_l.isra.0+0x9e>
    bb62:	2a00      	cmp	r2, #0
    bb64:	db24      	blt.n	bbb0 <_strtoull_l.isra.0+0x130>
    bb66:	9b03      	ldr	r3, [sp, #12]
    bb68:	2b00      	cmp	r3, #0
    bb6a:	d004      	beq.n	bb76 <_strtoull_l.isra.0+0xf6>
    bb6c:	0003      	movs	r3, r0
    bb6e:	000c      	movs	r4, r1
    bb70:	2100      	movs	r1, #0
    bb72:	4258      	negs	r0, r3
    bb74:	41a1      	sbcs	r1, r4
    bb76:	465b      	mov	r3, fp
    bb78:	2b00      	cmp	r3, #0
    bb7a:	d004      	beq.n	bb86 <_strtoull_l.isra.0+0x106>
    bb7c:	9b04      	ldr	r3, [sp, #16]
    bb7e:	2a00      	cmp	r2, #0
    bb80:	d11f      	bne.n	bbc2 <_strtoull_l.isra.0+0x142>
    bb82:	465a      	mov	r2, fp
    bb84:	6013      	str	r3, [r2, #0]
    bb86:	b007      	add	sp, #28
    bb88:	bc3c      	pop	{r2, r3, r4, r5}
    bb8a:	4690      	mov	r8, r2
    bb8c:	4699      	mov	r9, r3
    bb8e:	46a2      	mov	sl, r4
    bb90:	46ab      	mov	fp, r5
    bb92:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bb94:	42b9      	cmp	r1, r7
    bb96:	d1cb      	bne.n	bb30 <_strtoull_l.isra.0+0xb0>
    bb98:	9b02      	ldr	r3, [sp, #8]
    bb9a:	429c      	cmp	r4, r3
    bb9c:	ddc8      	ble.n	bb30 <_strtoull_l.isra.0+0xb0>
    bb9e:	2201      	movs	r2, #1
    bba0:	4252      	negs	r2, r2
    bba2:	e7d1      	b.n	bb48 <_strtoull_l.isra.0+0xc8>
    bba4:	0023      	movs	r3, r4
    bba6:	3b61      	subs	r3, #97	; 0x61
    bba8:	2b19      	cmp	r3, #25
    bbaa:	d8da      	bhi.n	bb62 <_strtoull_l.isra.0+0xe2>
    bbac:	3c57      	subs	r4, #87	; 0x57
    bbae:	e7b4      	b.n	bb1a <_strtoull_l.isra.0+0x9a>
    bbb0:	2322      	movs	r3, #34	; 0x22
    bbb2:	9a05      	ldr	r2, [sp, #20]
    bbb4:	2001      	movs	r0, #1
    bbb6:	4240      	negs	r0, r0
    bbb8:	17c1      	asrs	r1, r0, #31
    bbba:	6013      	str	r3, [r2, #0]
    bbbc:	465b      	mov	r3, fp
    bbbe:	2b00      	cmp	r3, #0
    bbc0:	d0e1      	beq.n	bb86 <_strtoull_l.isra.0+0x106>
    bbc2:	1e6b      	subs	r3, r5, #1
    bbc4:	e7dd      	b.n	bb82 <_strtoull_l.isra.0+0x102>
    bbc6:	2301      	movs	r3, #1
    bbc8:	782c      	ldrb	r4, [r5, #0]
    bbca:	9303      	str	r3, [sp, #12]
    bbcc:	1cbd      	adds	r5, r7, #2
    bbce:	e779      	b.n	bac4 <_strtoull_l.isra.0+0x44>
    bbd0:	782c      	ldrb	r4, [r5, #0]
    bbd2:	1cbd      	adds	r5, r7, #2
    bbd4:	e776      	b.n	bac4 <_strtoull_l.isra.0+0x44>
    bbd6:	2c30      	cmp	r4, #48	; 0x30
    bbd8:	d121      	bne.n	bc1e <_strtoull_l.isra.0+0x19e>
    bbda:	2220      	movs	r2, #32
    bbdc:	782b      	ldrb	r3, [r5, #0]
    bbde:	4393      	bics	r3, r2
    bbe0:	2b58      	cmp	r3, #88	; 0x58
    bbe2:	d11c      	bne.n	bc1e <_strtoull_l.isra.0+0x19e>
    bbe4:	230f      	movs	r3, #15
    bbe6:	9302      	str	r3, [sp, #8]
    bbe8:	3b10      	subs	r3, #16
    bbea:	4698      	mov	r8, r3
    bbec:	3311      	adds	r3, #17
    bbee:	469a      	mov	sl, r3
    bbf0:	2300      	movs	r3, #0
    bbf2:	786c      	ldrb	r4, [r5, #1]
    bbf4:	4f11      	ldr	r7, [pc, #68]	; (bc3c <_strtoull_l.isra.0+0x1bc>)
    bbf6:	3502      	adds	r5, #2
    bbf8:	4699      	mov	r9, r3
    bbfa:	2610      	movs	r6, #16
    bbfc:	e788      	b.n	bb10 <_strtoull_l.isra.0+0x90>
    bbfe:	2220      	movs	r2, #32
    bc00:	782b      	ldrb	r3, [r5, #0]
    bc02:	4393      	bics	r3, r2
    bc04:	2b58      	cmp	r3, #88	; 0x58
    bc06:	d0ed      	beq.n	bbe4 <_strtoull_l.isra.0+0x164>
    bc08:	2307      	movs	r3, #7
    bc0a:	9302      	str	r3, [sp, #8]
    bc0c:	3b08      	subs	r3, #8
    bc0e:	4698      	mov	r8, r3
    bc10:	3309      	adds	r3, #9
    bc12:	469a      	mov	sl, r3
    bc14:	2300      	movs	r3, #0
    bc16:	4f0a      	ldr	r7, [pc, #40]	; (bc40 <_strtoull_l.isra.0+0x1c0>)
    bc18:	4699      	mov	r9, r3
    bc1a:	2608      	movs	r6, #8
    bc1c:	e778      	b.n	bb10 <_strtoull_l.isra.0+0x90>
    bc1e:	230f      	movs	r3, #15
    bc20:	9302      	str	r3, [sp, #8]
    bc22:	3b10      	subs	r3, #16
    bc24:	4698      	mov	r8, r3
    bc26:	3311      	adds	r3, #17
    bc28:	469a      	mov	sl, r3
    bc2a:	2300      	movs	r3, #0
    bc2c:	4f03      	ldr	r7, [pc, #12]	; (bc3c <_strtoull_l.isra.0+0x1bc>)
    bc2e:	4699      	mov	r9, r3
    bc30:	e76e      	b.n	bb10 <_strtoull_l.isra.0+0x90>
    bc32:	46c0      	nop			; (mov r8, r8)
    bc34:	99999999 	.word	0x99999999
    bc38:	19999999 	.word	0x19999999
    bc3c:	0fffffff 	.word	0x0fffffff
    bc40:	1fffffff 	.word	0x1fffffff

0000bc44 <_strtoull_r>:
    bc44:	b510      	push	{r4, lr}
    bc46:	4c06      	ldr	r4, [pc, #24]	; (bc60 <_strtoull_r+0x1c>)
    bc48:	b082      	sub	sp, #8
    bc4a:	6824      	ldr	r4, [r4, #0]
    bc4c:	6b64      	ldr	r4, [r4, #52]	; 0x34
    bc4e:	2c00      	cmp	r4, #0
    bc50:	d004      	beq.n	bc5c <_strtoull_r+0x18>
    bc52:	9400      	str	r4, [sp, #0]
    bc54:	f7ff ff14 	bl	ba80 <_strtoull_l.isra.0>
    bc58:	b002      	add	sp, #8
    bc5a:	bd10      	pop	{r4, pc}
    bc5c:	4c01      	ldr	r4, [pc, #4]	; (bc64 <_strtoull_r+0x20>)
    bc5e:	e7f8      	b.n	bc52 <_strtoull_r+0xe>
    bc60:	20000098 	.word	0x20000098
    bc64:	200004cc 	.word	0x200004cc

0000bc68 <__ssprint_r>:
    bc68:	b5f0      	push	{r4, r5, r6, r7, lr}
    bc6a:	4657      	mov	r7, sl
    bc6c:	464e      	mov	r6, r9
    bc6e:	46de      	mov	lr, fp
    bc70:	4645      	mov	r5, r8
    bc72:	b5e0      	push	{r5, r6, r7, lr}
    bc74:	6893      	ldr	r3, [r2, #8]
    bc76:	b083      	sub	sp, #12
    bc78:	9001      	str	r0, [sp, #4]
    bc7a:	000e      	movs	r6, r1
    bc7c:	4692      	mov	sl, r2
    bc7e:	2b00      	cmp	r3, #0
    bc80:	d070      	beq.n	bd64 <__ssprint_r+0xfc>
    bc82:	688d      	ldr	r5, [r1, #8]
    bc84:	6813      	ldr	r3, [r2, #0]
    bc86:	002c      	movs	r4, r5
    bc88:	6808      	ldr	r0, [r1, #0]
    bc8a:	001d      	movs	r5, r3
    bc8c:	e046      	b.n	bd1c <__ssprint_r+0xb4>
    bc8e:	2290      	movs	r2, #144	; 0x90
    bc90:	89b3      	ldrh	r3, [r6, #12]
    bc92:	00d2      	lsls	r2, r2, #3
    bc94:	4213      	tst	r3, r2
    bc96:	d030      	beq.n	bcfa <__ssprint_r+0x92>
    bc98:	6931      	ldr	r1, [r6, #16]
    bc9a:	1a42      	subs	r2, r0, r1
    bc9c:	4693      	mov	fp, r2
    bc9e:	6970      	ldr	r0, [r6, #20]
    bca0:	0042      	lsls	r2, r0, #1
    bca2:	1812      	adds	r2, r2, r0
    bca4:	0fd0      	lsrs	r0, r2, #31
    bca6:	1882      	adds	r2, r0, r2
    bca8:	1052      	asrs	r2, r2, #1
    bcaa:	4690      	mov	r8, r2
    bcac:	465a      	mov	r2, fp
    bcae:	1c50      	adds	r0, r2, #1
    bcb0:	19c0      	adds	r0, r0, r7
    bcb2:	4642      	mov	r2, r8
    bcb4:	4540      	cmp	r0, r8
    bcb6:	d901      	bls.n	bcbc <__ssprint_r+0x54>
    bcb8:	4680      	mov	r8, r0
    bcba:	0002      	movs	r2, r0
    bcbc:	2080      	movs	r0, #128	; 0x80
    bcbe:	00c0      	lsls	r0, r0, #3
    bcc0:	4203      	tst	r3, r0
    bcc2:	d038      	beq.n	bd36 <__ssprint_r+0xce>
    bcc4:	0011      	movs	r1, r2
    bcc6:	9801      	ldr	r0, [sp, #4]
    bcc8:	f7fd fcee 	bl	96a8 <_malloc_r>
    bccc:	1e04      	subs	r4, r0, #0
    bcce:	d054      	beq.n	bd7a <__ssprint_r+0x112>
    bcd0:	465a      	mov	r2, fp
    bcd2:	6931      	ldr	r1, [r6, #16]
    bcd4:	f7fe f84a 	bl	9d6c <memcpy>
    bcd8:	89b3      	ldrh	r3, [r6, #12]
    bcda:	4a2a      	ldr	r2, [pc, #168]	; (bd84 <__ssprint_r+0x11c>)
    bcdc:	4013      	ands	r3, r2
    bcde:	2280      	movs	r2, #128	; 0x80
    bce0:	4313      	orrs	r3, r2
    bce2:	81b3      	strh	r3, [r6, #12]
    bce4:	4643      	mov	r3, r8
    bce6:	0020      	movs	r0, r4
    bce8:	465a      	mov	r2, fp
    bcea:	6134      	str	r4, [r6, #16]
    bcec:	46b8      	mov	r8, r7
    bcee:	003c      	movs	r4, r7
    bcf0:	4458      	add	r0, fp
    bcf2:	6173      	str	r3, [r6, #20]
    bcf4:	1a9b      	subs	r3, r3, r2
    bcf6:	6030      	str	r0, [r6, #0]
    bcf8:	60b3      	str	r3, [r6, #8]
    bcfa:	4642      	mov	r2, r8
    bcfc:	4649      	mov	r1, r9
    bcfe:	f000 fdb7 	bl	c870 <memmove>
    bd02:	68b3      	ldr	r3, [r6, #8]
    bd04:	1b1c      	subs	r4, r3, r4
    bd06:	6833      	ldr	r3, [r6, #0]
    bd08:	60b4      	str	r4, [r6, #8]
    bd0a:	4443      	add	r3, r8
    bd0c:	6033      	str	r3, [r6, #0]
    bd0e:	0018      	movs	r0, r3
    bd10:	4653      	mov	r3, sl
    bd12:	689b      	ldr	r3, [r3, #8]
    bd14:	1bdf      	subs	r7, r3, r7
    bd16:	4653      	mov	r3, sl
    bd18:	609f      	str	r7, [r3, #8]
    bd1a:	d023      	beq.n	bd64 <__ssprint_r+0xfc>
    bd1c:	686f      	ldr	r7, [r5, #4]
    bd1e:	002b      	movs	r3, r5
    bd20:	3508      	adds	r5, #8
    bd22:	2f00      	cmp	r7, #0
    bd24:	d0fa      	beq.n	bd1c <__ssprint_r+0xb4>
    bd26:	681b      	ldr	r3, [r3, #0]
    bd28:	46a0      	mov	r8, r4
    bd2a:	4699      	mov	r9, r3
    bd2c:	42a7      	cmp	r7, r4
    bd2e:	d2ae      	bcs.n	bc8e <__ssprint_r+0x26>
    bd30:	003c      	movs	r4, r7
    bd32:	46b8      	mov	r8, r7
    bd34:	e7e1      	b.n	bcfa <__ssprint_r+0x92>
    bd36:	9801      	ldr	r0, [sp, #4]
    bd38:	f000 fdea 	bl	c910 <_realloc_r>
    bd3c:	1e04      	subs	r4, r0, #0
    bd3e:	d1d1      	bne.n	bce4 <__ssprint_r+0x7c>
    bd40:	9c01      	ldr	r4, [sp, #4]
    bd42:	6931      	ldr	r1, [r6, #16]
    bd44:	0020      	movs	r0, r4
    bd46:	f7fd fb8f 	bl	9468 <_free_r>
    bd4a:	230c      	movs	r3, #12
    bd4c:	6023      	str	r3, [r4, #0]
    bd4e:	2240      	movs	r2, #64	; 0x40
    bd50:	89b3      	ldrh	r3, [r6, #12]
    bd52:	2001      	movs	r0, #1
    bd54:	4313      	orrs	r3, r2
    bd56:	81b3      	strh	r3, [r6, #12]
    bd58:	4652      	mov	r2, sl
    bd5a:	2300      	movs	r3, #0
    bd5c:	4240      	negs	r0, r0
    bd5e:	6093      	str	r3, [r2, #8]
    bd60:	6053      	str	r3, [r2, #4]
    bd62:	e003      	b.n	bd6c <__ssprint_r+0x104>
    bd64:	2300      	movs	r3, #0
    bd66:	4652      	mov	r2, sl
    bd68:	2000      	movs	r0, #0
    bd6a:	6053      	str	r3, [r2, #4]
    bd6c:	b003      	add	sp, #12
    bd6e:	bc3c      	pop	{r2, r3, r4, r5}
    bd70:	4690      	mov	r8, r2
    bd72:	4699      	mov	r9, r3
    bd74:	46a2      	mov	sl, r4
    bd76:	46ab      	mov	fp, r5
    bd78:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bd7a:	230c      	movs	r3, #12
    bd7c:	9a01      	ldr	r2, [sp, #4]
    bd7e:	6013      	str	r3, [r2, #0]
    bd80:	e7e5      	b.n	bd4e <__ssprint_r+0xe6>
    bd82:	46c0      	nop			; (mov r8, r8)
    bd84:	fffffb7f 	.word	0xfffffb7f

0000bd88 <_sungetc_r>:
    bd88:	b570      	push	{r4, r5, r6, lr}
    bd8a:	0014      	movs	r4, r2
    bd8c:	1c4b      	adds	r3, r1, #1
    bd8e:	d01b      	beq.n	bdc8 <_sungetc_r+0x40>
    bd90:	8993      	ldrh	r3, [r2, #12]
    bd92:	2220      	movs	r2, #32
    bd94:	25ff      	movs	r5, #255	; 0xff
    bd96:	4393      	bics	r3, r2
    bd98:	81a3      	strh	r3, [r4, #12]
    bd9a:	6b23      	ldr	r3, [r4, #48]	; 0x30
    bd9c:	b2ce      	uxtb	r6, r1
    bd9e:	400d      	ands	r5, r1
    bda0:	2b00      	cmp	r3, #0
    bda2:	d014      	beq.n	bdce <_sungetc_r+0x46>
    bda4:	6863      	ldr	r3, [r4, #4]
    bda6:	6b62      	ldr	r2, [r4, #52]	; 0x34
    bda8:	4293      	cmp	r3, r2
    bdaa:	da08      	bge.n	bdbe <_sungetc_r+0x36>
    bdac:	6823      	ldr	r3, [r4, #0]
    bdae:	3b01      	subs	r3, #1
    bdb0:	6023      	str	r3, [r4, #0]
    bdb2:	701e      	strb	r6, [r3, #0]
    bdb4:	6863      	ldr	r3, [r4, #4]
    bdb6:	3301      	adds	r3, #1
    bdb8:	6063      	str	r3, [r4, #4]
    bdba:	0028      	movs	r0, r5
    bdbc:	bd70      	pop	{r4, r5, r6, pc}
    bdbe:	0021      	movs	r1, r4
    bdc0:	f000 f88c 	bl	bedc <__submore>
    bdc4:	2800      	cmp	r0, #0
    bdc6:	d0f1      	beq.n	bdac <_sungetc_r+0x24>
    bdc8:	2501      	movs	r5, #1
    bdca:	426d      	negs	r5, r5
    bdcc:	e7f5      	b.n	bdba <_sungetc_r+0x32>
    bdce:	6922      	ldr	r2, [r4, #16]
    bdd0:	6823      	ldr	r3, [r4, #0]
    bdd2:	2a00      	cmp	r2, #0
    bdd4:	d005      	beq.n	bde2 <_sungetc_r+0x5a>
    bdd6:	429a      	cmp	r2, r3
    bdd8:	d203      	bcs.n	bde2 <_sungetc_r+0x5a>
    bdda:	1e5a      	subs	r2, r3, #1
    bddc:	7811      	ldrb	r1, [r2, #0]
    bdde:	428d      	cmp	r5, r1
    bde0:	d00f      	beq.n	be02 <_sungetc_r+0x7a>
    bde2:	63a3      	str	r3, [r4, #56]	; 0x38
    bde4:	0023      	movs	r3, r4
    bde6:	3340      	adds	r3, #64	; 0x40
    bde8:	6323      	str	r3, [r4, #48]	; 0x30
    bdea:	2303      	movs	r3, #3
    bdec:	6862      	ldr	r2, [r4, #4]
    bdee:	6363      	str	r3, [r4, #52]	; 0x34
    bdf0:	333f      	adds	r3, #63	; 0x3f
    bdf2:	63e2      	str	r2, [r4, #60]	; 0x3c
    bdf4:	54e6      	strb	r6, [r4, r3]
    bdf6:	0023      	movs	r3, r4
    bdf8:	3342      	adds	r3, #66	; 0x42
    bdfa:	6023      	str	r3, [r4, #0]
    bdfc:	2301      	movs	r3, #1
    bdfe:	6063      	str	r3, [r4, #4]
    be00:	e7db      	b.n	bdba <_sungetc_r+0x32>
    be02:	6863      	ldr	r3, [r4, #4]
    be04:	6022      	str	r2, [r4, #0]
    be06:	3301      	adds	r3, #1
    be08:	6063      	str	r3, [r4, #4]
    be0a:	e7d6      	b.n	bdba <_sungetc_r+0x32>

0000be0c <__ssrefill_r>:
    be0c:	b510      	push	{r4, lr}
    be0e:	000c      	movs	r4, r1
    be10:	6b09      	ldr	r1, [r1, #48]	; 0x30
    be12:	2900      	cmp	r1, #0
    be14:	d00f      	beq.n	be36 <__ssrefill_r+0x2a>
    be16:	0023      	movs	r3, r4
    be18:	3340      	adds	r3, #64	; 0x40
    be1a:	4299      	cmp	r1, r3
    be1c:	d001      	beq.n	be22 <__ssrefill_r+0x16>
    be1e:	f7fd fb23 	bl	9468 <_free_r>
    be22:	2300      	movs	r3, #0
    be24:	6323      	str	r3, [r4, #48]	; 0x30
    be26:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    be28:	6063      	str	r3, [r4, #4]
    be2a:	2b00      	cmp	r3, #0
    be2c:	d003      	beq.n	be36 <__ssrefill_r+0x2a>
    be2e:	2000      	movs	r0, #0
    be30:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    be32:	6023      	str	r3, [r4, #0]
    be34:	bd10      	pop	{r4, pc}
    be36:	6923      	ldr	r3, [r4, #16]
    be38:	2220      	movs	r2, #32
    be3a:	6023      	str	r3, [r4, #0]
    be3c:	2300      	movs	r3, #0
    be3e:	2001      	movs	r0, #1
    be40:	6063      	str	r3, [r4, #4]
    be42:	89a3      	ldrh	r3, [r4, #12]
    be44:	4240      	negs	r0, r0
    be46:	4313      	orrs	r3, r2
    be48:	81a3      	strh	r3, [r4, #12]
    be4a:	e7f3      	b.n	be34 <__ssrefill_r+0x28>

0000be4c <_sfread_r>:
    be4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    be4e:	46de      	mov	lr, fp
    be50:	4657      	mov	r7, sl
    be52:	4645      	mov	r5, r8
    be54:	464e      	mov	r6, r9
    be56:	469b      	mov	fp, r3
    be58:	b5e0      	push	{r5, r6, r7, lr}
    be5a:	b083      	sub	sp, #12
    be5c:	0013      	movs	r3, r2
    be5e:	9201      	str	r2, [sp, #4]
    be60:	465a      	mov	r2, fp
    be62:	4353      	muls	r3, r2
    be64:	4680      	mov	r8, r0
    be66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    be68:	469a      	mov	sl, r3
    be6a:	2b00      	cmp	r3, #0
    be6c:	d026      	beq.n	bebc <_sfread_r+0x70>
    be6e:	001f      	movs	r7, r3
    be70:	2300      	movs	r3, #0
    be72:	000e      	movs	r6, r1
    be74:	4699      	mov	r9, r3
    be76:	e011      	b.n	be9c <_sfread_r+0x50>
    be78:	6821      	ldr	r1, [r4, #0]
    be7a:	0030      	movs	r0, r6
    be7c:	002a      	movs	r2, r5
    be7e:	f7fd ff75 	bl	9d6c <memcpy>
    be82:	6823      	ldr	r3, [r4, #0]
    be84:	0021      	movs	r1, r4
    be86:	195b      	adds	r3, r3, r5
    be88:	6023      	str	r3, [r4, #0]
    be8a:	464b      	mov	r3, r9
    be8c:	4640      	mov	r0, r8
    be8e:	6063      	str	r3, [r4, #4]
    be90:	1976      	adds	r6, r6, r5
    be92:	1b7f      	subs	r7, r7, r5
    be94:	f7ff ffba 	bl	be0c <__ssrefill_r>
    be98:	2800      	cmp	r0, #0
    be9a:	d117      	bne.n	becc <_sfread_r+0x80>
    be9c:	6865      	ldr	r5, [r4, #4]
    be9e:	42af      	cmp	r7, r5
    bea0:	d8ea      	bhi.n	be78 <_sfread_r+0x2c>
    bea2:	003a      	movs	r2, r7
    bea4:	6821      	ldr	r1, [r4, #0]
    bea6:	0030      	movs	r0, r6
    bea8:	f7fd ff60 	bl	9d6c <memcpy>
    beac:	6863      	ldr	r3, [r4, #4]
    beae:	46da      	mov	sl, fp
    beb0:	1bdb      	subs	r3, r3, r7
    beb2:	6063      	str	r3, [r4, #4]
    beb4:	6823      	ldr	r3, [r4, #0]
    beb6:	469c      	mov	ip, r3
    beb8:	4467      	add	r7, ip
    beba:	6027      	str	r7, [r4, #0]
    bebc:	4650      	mov	r0, sl
    bebe:	b003      	add	sp, #12
    bec0:	bc3c      	pop	{r2, r3, r4, r5}
    bec2:	4690      	mov	r8, r2
    bec4:	4699      	mov	r9, r3
    bec6:	46a2      	mov	sl, r4
    bec8:	46ab      	mov	fp, r5
    beca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    becc:	4653      	mov	r3, sl
    bece:	9901      	ldr	r1, [sp, #4]
    bed0:	1bd8      	subs	r0, r3, r7
    bed2:	f7f7 fc09 	bl	36e8 <__udivsi3>
    bed6:	4682      	mov	sl, r0
    bed8:	e7f0      	b.n	bebc <_sfread_r+0x70>
    beda:	46c0      	nop			; (mov r8, r8)

0000bedc <__submore>:
    bedc:	b5f0      	push	{r4, r5, r6, r7, lr}
    bede:	000c      	movs	r4, r1
    bee0:	0023      	movs	r3, r4
    bee2:	46c6      	mov	lr, r8
    bee4:	6b09      	ldr	r1, [r1, #48]	; 0x30
    bee6:	3340      	adds	r3, #64	; 0x40
    bee8:	b500      	push	{lr}
    beea:	4299      	cmp	r1, r3
    beec:	d015      	beq.n	bf1a <__submore+0x3e>
    beee:	6b66      	ldr	r6, [r4, #52]	; 0x34
    bef0:	0077      	lsls	r7, r6, #1
    bef2:	003a      	movs	r2, r7
    bef4:	f000 fd0c 	bl	c910 <_realloc_r>
    bef8:	1e05      	subs	r5, r0, #0
    befa:	d028      	beq.n	bf4e <__submore+0x72>
    befc:	1983      	adds	r3, r0, r6
    befe:	4698      	mov	r8, r3
    bf00:	0001      	movs	r1, r0
    bf02:	0032      	movs	r2, r6
    bf04:	0018      	movs	r0, r3
    bf06:	f7fd ff31 	bl	9d6c <memcpy>
    bf0a:	4643      	mov	r3, r8
    bf0c:	2000      	movs	r0, #0
    bf0e:	6023      	str	r3, [r4, #0]
    bf10:	6325      	str	r5, [r4, #48]	; 0x30
    bf12:	6367      	str	r7, [r4, #52]	; 0x34
    bf14:	bc04      	pop	{r2}
    bf16:	4690      	mov	r8, r2
    bf18:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bf1a:	2580      	movs	r5, #128	; 0x80
    bf1c:	00ed      	lsls	r5, r5, #3
    bf1e:	0029      	movs	r1, r5
    bf20:	f7fd fbc2 	bl	96a8 <_malloc_r>
    bf24:	2800      	cmp	r0, #0
    bf26:	d012      	beq.n	bf4e <__submore+0x72>
    bf28:	2342      	movs	r3, #66	; 0x42
    bf2a:	6320      	str	r0, [r4, #48]	; 0x30
    bf2c:	6365      	str	r5, [r4, #52]	; 0x34
    bf2e:	5ce2      	ldrb	r2, [r4, r3]
    bf30:	4b08      	ldr	r3, [pc, #32]	; (bf54 <__submore+0x78>)
    bf32:	54c2      	strb	r2, [r0, r3]
    bf34:	2341      	movs	r3, #65	; 0x41
    bf36:	5ce2      	ldrb	r2, [r4, r3]
    bf38:	4b07      	ldr	r3, [pc, #28]	; (bf58 <__submore+0x7c>)
    bf3a:	54c2      	strb	r2, [r0, r3]
    bf3c:	2340      	movs	r3, #64	; 0x40
    bf3e:	5ce2      	ldrb	r2, [r4, r3]
    bf40:	4b06      	ldr	r3, [pc, #24]	; (bf5c <__submore+0x80>)
    bf42:	469c      	mov	ip, r3
    bf44:	54c2      	strb	r2, [r0, r3]
    bf46:	4460      	add	r0, ip
    bf48:	6020      	str	r0, [r4, #0]
    bf4a:	2000      	movs	r0, #0
    bf4c:	e7e2      	b.n	bf14 <__submore+0x38>
    bf4e:	2001      	movs	r0, #1
    bf50:	4240      	negs	r0, r0
    bf52:	e7df      	b.n	bf14 <__submore+0x38>
    bf54:	000003ff 	.word	0x000003ff
    bf58:	000003fe 	.word	0x000003fe
    bf5c:	000003fd 	.word	0x000003fd

0000bf60 <__ascii_wctomb>:
    bf60:	2900      	cmp	r1, #0
    bf62:	d004      	beq.n	bf6e <__ascii_wctomb+0xe>
    bf64:	2aff      	cmp	r2, #255	; 0xff
    bf66:	d804      	bhi.n	bf72 <__ascii_wctomb+0x12>
    bf68:	2001      	movs	r0, #1
    bf6a:	700a      	strb	r2, [r1, #0]
    bf6c:	4770      	bx	lr
    bf6e:	2000      	movs	r0, #0
    bf70:	e7fc      	b.n	bf6c <__ascii_wctomb+0xc>
    bf72:	238a      	movs	r3, #138	; 0x8a
    bf74:	6003      	str	r3, [r0, #0]
    bf76:	2001      	movs	r0, #1
    bf78:	4240      	negs	r0, r0
    bf7a:	e7f7      	b.n	bf6c <__ascii_wctomb+0xc>

0000bf7c <__register_exitproc>:
    bf7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    bf7e:	464e      	mov	r6, r9
    bf80:	4645      	mov	r5, r8
    bf82:	46de      	mov	lr, fp
    bf84:	4657      	mov	r7, sl
    bf86:	b5e0      	push	{r5, r6, r7, lr}
    bf88:	4d36      	ldr	r5, [pc, #216]	; (c064 <__register_exitproc+0xe8>)
    bf8a:	b083      	sub	sp, #12
    bf8c:	0006      	movs	r6, r0
    bf8e:	6828      	ldr	r0, [r5, #0]
    bf90:	4698      	mov	r8, r3
    bf92:	000f      	movs	r7, r1
    bf94:	4691      	mov	r9, r2
    bf96:	f7fd fb83 	bl	96a0 <__retarget_lock_acquire_recursive>
    bf9a:	4b33      	ldr	r3, [pc, #204]	; (c068 <__register_exitproc+0xec>)
    bf9c:	681c      	ldr	r4, [r3, #0]
    bf9e:	23a4      	movs	r3, #164	; 0xa4
    bfa0:	005b      	lsls	r3, r3, #1
    bfa2:	58e0      	ldr	r0, [r4, r3]
    bfa4:	2800      	cmp	r0, #0
    bfa6:	d052      	beq.n	c04e <__register_exitproc+0xd2>
    bfa8:	6843      	ldr	r3, [r0, #4]
    bfaa:	2b1f      	cmp	r3, #31
    bfac:	dc13      	bgt.n	bfd6 <__register_exitproc+0x5a>
    bfae:	1c5a      	adds	r2, r3, #1
    bfb0:	9201      	str	r2, [sp, #4]
    bfb2:	2e00      	cmp	r6, #0
    bfb4:	d128      	bne.n	c008 <__register_exitproc+0x8c>
    bfb6:	9a01      	ldr	r2, [sp, #4]
    bfb8:	3302      	adds	r3, #2
    bfba:	009b      	lsls	r3, r3, #2
    bfbc:	6042      	str	r2, [r0, #4]
    bfbe:	501f      	str	r7, [r3, r0]
    bfc0:	6828      	ldr	r0, [r5, #0]
    bfc2:	f7fd fb6f 	bl	96a4 <__retarget_lock_release_recursive>
    bfc6:	2000      	movs	r0, #0
    bfc8:	b003      	add	sp, #12
    bfca:	bc3c      	pop	{r2, r3, r4, r5}
    bfcc:	4690      	mov	r8, r2
    bfce:	4699      	mov	r9, r3
    bfd0:	46a2      	mov	sl, r4
    bfd2:	46ab      	mov	fp, r5
    bfd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bfd6:	4b25      	ldr	r3, [pc, #148]	; (c06c <__register_exitproc+0xf0>)
    bfd8:	2b00      	cmp	r3, #0
    bfda:	d03d      	beq.n	c058 <__register_exitproc+0xdc>
    bfdc:	20c8      	movs	r0, #200	; 0xc8
    bfde:	0040      	lsls	r0, r0, #1
    bfe0:	e000      	b.n	bfe4 <__register_exitproc+0x68>
    bfe2:	bf00      	nop
    bfe4:	2800      	cmp	r0, #0
    bfe6:	d037      	beq.n	c058 <__register_exitproc+0xdc>
    bfe8:	22a4      	movs	r2, #164	; 0xa4
    bfea:	2300      	movs	r3, #0
    bfec:	0052      	lsls	r2, r2, #1
    bfee:	58a1      	ldr	r1, [r4, r2]
    bff0:	6043      	str	r3, [r0, #4]
    bff2:	6001      	str	r1, [r0, #0]
    bff4:	50a0      	str	r0, [r4, r2]
    bff6:	3240      	adds	r2, #64	; 0x40
    bff8:	5083      	str	r3, [r0, r2]
    bffa:	3204      	adds	r2, #4
    bffc:	5083      	str	r3, [r0, r2]
    bffe:	3301      	adds	r3, #1
    c000:	9301      	str	r3, [sp, #4]
    c002:	2300      	movs	r3, #0
    c004:	2e00      	cmp	r6, #0
    c006:	d0d6      	beq.n	bfb6 <__register_exitproc+0x3a>
    c008:	009a      	lsls	r2, r3, #2
    c00a:	4692      	mov	sl, r2
    c00c:	4482      	add	sl, r0
    c00e:	464a      	mov	r2, r9
    c010:	2188      	movs	r1, #136	; 0x88
    c012:	4654      	mov	r4, sl
    c014:	5062      	str	r2, [r4, r1]
    c016:	22c4      	movs	r2, #196	; 0xc4
    c018:	0052      	lsls	r2, r2, #1
    c01a:	4691      	mov	r9, r2
    c01c:	4481      	add	r9, r0
    c01e:	464a      	mov	r2, r9
    c020:	3987      	subs	r1, #135	; 0x87
    c022:	4099      	lsls	r1, r3
    c024:	6812      	ldr	r2, [r2, #0]
    c026:	468b      	mov	fp, r1
    c028:	430a      	orrs	r2, r1
    c02a:	4694      	mov	ip, r2
    c02c:	464a      	mov	r2, r9
    c02e:	4661      	mov	r1, ip
    c030:	6011      	str	r1, [r2, #0]
    c032:	2284      	movs	r2, #132	; 0x84
    c034:	4641      	mov	r1, r8
    c036:	0052      	lsls	r2, r2, #1
    c038:	50a1      	str	r1, [r4, r2]
    c03a:	2e02      	cmp	r6, #2
    c03c:	d1bb      	bne.n	bfb6 <__register_exitproc+0x3a>
    c03e:	0002      	movs	r2, r0
    c040:	465c      	mov	r4, fp
    c042:	328d      	adds	r2, #141	; 0x8d
    c044:	32ff      	adds	r2, #255	; 0xff
    c046:	6811      	ldr	r1, [r2, #0]
    c048:	430c      	orrs	r4, r1
    c04a:	6014      	str	r4, [r2, #0]
    c04c:	e7b3      	b.n	bfb6 <__register_exitproc+0x3a>
    c04e:	0020      	movs	r0, r4
    c050:	304d      	adds	r0, #77	; 0x4d
    c052:	30ff      	adds	r0, #255	; 0xff
    c054:	50e0      	str	r0, [r4, r3]
    c056:	e7a7      	b.n	bfa8 <__register_exitproc+0x2c>
    c058:	6828      	ldr	r0, [r5, #0]
    c05a:	f7fd fb23 	bl	96a4 <__retarget_lock_release_recursive>
    c05e:	2001      	movs	r0, #1
    c060:	4240      	negs	r0, r0
    c062:	e7b1      	b.n	bfc8 <__register_exitproc+0x4c>
    c064:	200004c8 	.word	0x200004c8
    c068:	0000ec74 	.word	0x0000ec74
    c06c:	00000000 	.word	0x00000000

0000c070 <_calloc_r>:
    c070:	b510      	push	{r4, lr}
    c072:	4351      	muls	r1, r2
    c074:	f7fd fb18 	bl	96a8 <_malloc_r>
    c078:	1e04      	subs	r4, r0, #0
    c07a:	d01c      	beq.n	c0b6 <_calloc_r+0x46>
    c07c:	0003      	movs	r3, r0
    c07e:	3b08      	subs	r3, #8
    c080:	685a      	ldr	r2, [r3, #4]
    c082:	2303      	movs	r3, #3
    c084:	439a      	bics	r2, r3
    c086:	3a04      	subs	r2, #4
    c088:	2a24      	cmp	r2, #36	; 0x24
    c08a:	d816      	bhi.n	c0ba <_calloc_r+0x4a>
    c08c:	0003      	movs	r3, r0
    c08e:	2a13      	cmp	r2, #19
    c090:	d90d      	bls.n	c0ae <_calloc_r+0x3e>
    c092:	2100      	movs	r1, #0
    c094:	3308      	adds	r3, #8
    c096:	6001      	str	r1, [r0, #0]
    c098:	6041      	str	r1, [r0, #4]
    c09a:	2a1b      	cmp	r2, #27
    c09c:	d907      	bls.n	c0ae <_calloc_r+0x3e>
    c09e:	6081      	str	r1, [r0, #8]
    c0a0:	60c1      	str	r1, [r0, #12]
    c0a2:	2a24      	cmp	r2, #36	; 0x24
    c0a4:	d10d      	bne.n	c0c2 <_calloc_r+0x52>
    c0a6:	0003      	movs	r3, r0
    c0a8:	6101      	str	r1, [r0, #16]
    c0aa:	3318      	adds	r3, #24
    c0ac:	6141      	str	r1, [r0, #20]
    c0ae:	2200      	movs	r2, #0
    c0b0:	601a      	str	r2, [r3, #0]
    c0b2:	605a      	str	r2, [r3, #4]
    c0b4:	609a      	str	r2, [r3, #8]
    c0b6:	0020      	movs	r0, r4
    c0b8:	bd10      	pop	{r4, pc}
    c0ba:	2100      	movs	r1, #0
    c0bc:	f7f9 fa52 	bl	5564 <memset>
    c0c0:	e7f9      	b.n	c0b6 <_calloc_r+0x46>
    c0c2:	0003      	movs	r3, r0
    c0c4:	3310      	adds	r3, #16
    c0c6:	e7f2      	b.n	c0ae <_calloc_r+0x3e>

0000c0c8 <rshift>:
    c0c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    c0ca:	46ce      	mov	lr, r9
    c0cc:	4647      	mov	r7, r8
    c0ce:	0005      	movs	r5, r0
    c0d0:	6902      	ldr	r2, [r0, #16]
    c0d2:	b580      	push	{r7, lr}
    c0d4:	3514      	adds	r5, #20
    c0d6:	114c      	asrs	r4, r1, #5
    c0d8:	4294      	cmp	r4, r2
    c0da:	da2c      	bge.n	c136 <rshift+0x6e>
    c0dc:	0092      	lsls	r2, r2, #2
    c0de:	18af      	adds	r7, r5, r2
    c0e0:	231f      	movs	r3, #31
    c0e2:	00a2      	lsls	r2, r4, #2
    c0e4:	4691      	mov	r9, r2
    c0e6:	400b      	ands	r3, r1
    c0e8:	44a9      	add	r9, r5
    c0ea:	469c      	mov	ip, r3
    c0ec:	2b00      	cmp	r3, #0
    c0ee:	d02a      	beq.n	c146 <rshift+0x7e>
    c0f0:	4662      	mov	r2, ip
    c0f2:	2320      	movs	r3, #32
    c0f4:	1a9b      	subs	r3, r3, r2
    c0f6:	4698      	mov	r8, r3
    c0f8:	464b      	mov	r3, r9
    c0fa:	681e      	ldr	r6, [r3, #0]
    c0fc:	1d1c      	adds	r4, r3, #4
    c0fe:	40d6      	lsrs	r6, r2
    c100:	42a7      	cmp	r7, r4
    c102:	d935      	bls.n	c170 <rshift+0xa8>
    c104:	0029      	movs	r1, r5
    c106:	4642      	mov	r2, r8
    c108:	6823      	ldr	r3, [r4, #0]
    c10a:	4093      	lsls	r3, r2
    c10c:	4333      	orrs	r3, r6
    c10e:	c108      	stmia	r1!, {r3}
    c110:	4663      	mov	r3, ip
    c112:	cc40      	ldmia	r4!, {r6}
    c114:	40de      	lsrs	r6, r3
    c116:	42a7      	cmp	r7, r4
    c118:	d8f5      	bhi.n	c106 <rshift+0x3e>
    c11a:	464b      	mov	r3, r9
    c11c:	1afa      	subs	r2, r7, r3
    c11e:	2303      	movs	r3, #3
    c120:	3a05      	subs	r2, #5
    c122:	439a      	bics	r2, r3
    c124:	3204      	adds	r2, #4
    c126:	18aa      	adds	r2, r5, r2
    c128:	6016      	str	r6, [r2, #0]
    c12a:	2e00      	cmp	r6, #0
    c12c:	d01d      	beq.n	c16a <rshift+0xa2>
    c12e:	1d13      	adds	r3, r2, #4
    c130:	1b5b      	subs	r3, r3, r5
    c132:	109b      	asrs	r3, r3, #2
    c134:	e015      	b.n	c162 <rshift+0x9a>
    c136:	2300      	movs	r3, #0
    c138:	6103      	str	r3, [r0, #16]
    c13a:	2300      	movs	r3, #0
    c13c:	6143      	str	r3, [r0, #20]
    c13e:	bc0c      	pop	{r2, r3}
    c140:	4690      	mov	r8, r2
    c142:	4699      	mov	r9, r3
    c144:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c146:	4649      	mov	r1, r9
    c148:	454f      	cmp	r7, r9
    c14a:	d9f4      	bls.n	c136 <rshift+0x6e>
    c14c:	c910      	ldmia	r1!, {r4}
    c14e:	c510      	stmia	r5!, {r4}
    c150:	428f      	cmp	r7, r1
    c152:	d8fb      	bhi.n	c14c <rshift+0x84>
    c154:	464b      	mov	r3, r9
    c156:	43db      	mvns	r3, r3
    c158:	2203      	movs	r2, #3
    c15a:	19db      	adds	r3, r3, r7
    c15c:	4393      	bics	r3, r2
    c15e:	3304      	adds	r3, #4
    c160:	109b      	asrs	r3, r3, #2
    c162:	6103      	str	r3, [r0, #16]
    c164:	2b00      	cmp	r3, #0
    c166:	d1ea      	bne.n	c13e <rshift+0x76>
    c168:	e7e7      	b.n	c13a <rshift+0x72>
    c16a:	1b53      	subs	r3, r2, r5
    c16c:	109b      	asrs	r3, r3, #2
    c16e:	e7f8      	b.n	c162 <rshift+0x9a>
    c170:	002a      	movs	r2, r5
    c172:	e7d9      	b.n	c128 <rshift+0x60>

0000c174 <__gethex>:
    c174:	b5f0      	push	{r4, r5, r6, r7, lr}
    c176:	46de      	mov	lr, fp
    c178:	464e      	mov	r6, r9
    c17a:	4657      	mov	r7, sl
    c17c:	4645      	mov	r5, r8
    c17e:	b5e0      	push	{r5, r6, r7, lr}
    c180:	b08b      	sub	sp, #44	; 0x2c
    c182:	9006      	str	r0, [sp, #24]
    c184:	9816      	ldr	r0, [sp, #88]	; 0x58
    c186:	4689      	mov	r9, r1
    c188:	4693      	mov	fp, r2
    c18a:	9309      	str	r3, [sp, #36]	; 0x24
    c18c:	f7fd fa78 	bl	9680 <__localeconv_l>
    c190:	6803      	ldr	r3, [r0, #0]
    c192:	0018      	movs	r0, r3
    c194:	001c      	movs	r4, r3
    c196:	9304      	str	r3, [sp, #16]
    c198:	f7f9 fb4c 	bl	5834 <strlen>
    c19c:	46a4      	mov	ip, r4
    c19e:	0002      	movs	r2, r0
    c1a0:	4462      	add	r2, ip
    c1a2:	0013      	movs	r3, r2
    c1a4:	3b01      	subs	r3, #1
    c1a6:	781b      	ldrb	r3, [r3, #0]
    c1a8:	9002      	str	r0, [sp, #8]
    c1aa:	9301      	str	r3, [sp, #4]
    c1ac:	464b      	mov	r3, r9
    c1ae:	681c      	ldr	r4, [r3, #0]
    c1b0:	78a2      	ldrb	r2, [r4, #2]
    c1b2:	2a30      	cmp	r2, #48	; 0x30
    c1b4:	d000      	beq.n	c1b8 <__gethex+0x44>
    c1b6:	e1c4      	b.n	c542 <__gethex+0x3ce>
    c1b8:	2102      	movs	r1, #2
    c1ba:	4249      	negs	r1, r1
    c1bc:	1ce3      	adds	r3, r4, #3
    c1be:	1b09      	subs	r1, r1, r4
    c1c0:	18c8      	adds	r0, r1, r3
    c1c2:	001c      	movs	r4, r3
    c1c4:	3301      	adds	r3, #1
    c1c6:	1e5a      	subs	r2, r3, #1
    c1c8:	7812      	ldrb	r2, [r2, #0]
    c1ca:	2a30      	cmp	r2, #48	; 0x30
    c1cc:	d0f8      	beq.n	c1c0 <__gethex+0x4c>
    c1ce:	4680      	mov	r8, r0
    c1d0:	4fbf      	ldr	r7, [pc, #764]	; (c4d0 <__gethex+0x35c>)
    c1d2:	5cbb      	ldrb	r3, [r7, r2]
    c1d4:	2b00      	cmp	r3, #0
    c1d6:	d100      	bne.n	c1da <__gethex+0x66>
    c1d8:	e0b0      	b.n	c33c <__gethex+0x1c8>
    c1da:	2200      	movs	r2, #0
    c1dc:	2600      	movs	r6, #0
    c1de:	4692      	mov	sl, r2
    c1e0:	7823      	ldrb	r3, [r4, #0]
    c1e2:	5cfb      	ldrb	r3, [r7, r3]
    c1e4:	0025      	movs	r5, r4
    c1e6:	2b00      	cmp	r3, #0
    c1e8:	d004      	beq.n	c1f4 <__gethex+0x80>
    c1ea:	3501      	adds	r5, #1
    c1ec:	782b      	ldrb	r3, [r5, #0]
    c1ee:	5cfb      	ldrb	r3, [r7, r3]
    c1f0:	2b00      	cmp	r3, #0
    c1f2:	d1fa      	bne.n	c1ea <__gethex+0x76>
    c1f4:	9a02      	ldr	r2, [sp, #8]
    c1f6:	9904      	ldr	r1, [sp, #16]
    c1f8:	0028      	movs	r0, r5
    c1fa:	f000 fd47 	bl	cc8c <strncmp>
    c1fe:	2800      	cmp	r0, #0
    c200:	d100      	bne.n	c204 <__gethex+0x90>
    c202:	e08b      	b.n	c31c <__gethex+0x1a8>
    c204:	782b      	ldrb	r3, [r5, #0]
    c206:	2e00      	cmp	r6, #0
    c208:	d100      	bne.n	c20c <__gethex+0x98>
    c20a:	e189      	b.n	c520 <__gethex+0x3ac>
    c20c:	1b76      	subs	r6, r6, r5
    c20e:	00b2      	lsls	r2, r6, #2
    c210:	9203      	str	r2, [sp, #12]
    c212:	2b50      	cmp	r3, #80	; 0x50
    c214:	d100      	bne.n	c218 <__gethex+0xa4>
    c216:	e0b4      	b.n	c382 <__gethex+0x20e>
    c218:	002e      	movs	r6, r5
    c21a:	2b70      	cmp	r3, #112	; 0x70
    c21c:	d100      	bne.n	c220 <__gethex+0xac>
    c21e:	e0b0      	b.n	c382 <__gethex+0x20e>
    c220:	464b      	mov	r3, r9
    c222:	601d      	str	r5, [r3, #0]
    c224:	4653      	mov	r3, sl
    c226:	2b00      	cmp	r3, #0
    c228:	d000      	beq.n	c22c <__gethex+0xb8>
    c22a:	e098      	b.n	c35e <__gethex+0x1ea>
    c22c:	1b33      	subs	r3, r6, r4
    c22e:	3b01      	subs	r3, #1
    c230:	2100      	movs	r1, #0
    c232:	2b07      	cmp	r3, #7
    c234:	dd03      	ble.n	c23e <__gethex+0xca>
    c236:	3101      	adds	r1, #1
    c238:	105b      	asrs	r3, r3, #1
    c23a:	2b07      	cmp	r3, #7
    c23c:	dcfb      	bgt.n	c236 <__gethex+0xc2>
    c23e:	9806      	ldr	r0, [sp, #24]
    c240:	f7fd fde6 	bl	9e10 <_Balloc>
    c244:	0003      	movs	r3, r0
    c246:	3314      	adds	r3, #20
    c248:	9005      	str	r0, [sp, #20]
    c24a:	9308      	str	r3, [sp, #32]
    c24c:	42b4      	cmp	r4, r6
    c24e:	d300      	bcc.n	c252 <__gethex+0xde>
    c250:	e1c3      	b.n	c5da <__gethex+0x466>
    c252:	469a      	mov	sl, r3
    c254:	2300      	movs	r3, #0
    c256:	9a02      	ldr	r2, [sp, #8]
    c258:	4698      	mov	r8, r3
    c25a:	4699      	mov	r9, r3
    c25c:	3301      	adds	r3, #1
    c25e:	1a9b      	subs	r3, r3, r2
    c260:	9307      	str	r3, [sp, #28]
    c262:	0023      	movs	r3, r4
    c264:	4644      	mov	r4, r8
    c266:	4698      	mov	r8, r3
    c268:	e00e      	b.n	c288 <__gethex+0x114>
    c26a:	2c20      	cmp	r4, #32
    c26c:	d05b      	beq.n	c326 <__gethex+0x1b2>
    c26e:	0022      	movs	r2, r4
    c270:	3404      	adds	r4, #4
    c272:	210f      	movs	r1, #15
    c274:	782b      	ldrb	r3, [r5, #0]
    c276:	002e      	movs	r6, r5
    c278:	5cfb      	ldrb	r3, [r7, r3]
    c27a:	400b      	ands	r3, r1
    c27c:	4093      	lsls	r3, r2
    c27e:	464a      	mov	r2, r9
    c280:	431a      	orrs	r2, r3
    c282:	4691      	mov	r9, r2
    c284:	4546      	cmp	r6, r8
    c286:	d911      	bls.n	c2ac <__gethex+0x138>
    c288:	1e75      	subs	r5, r6, #1
    c28a:	782b      	ldrb	r3, [r5, #0]
    c28c:	9a01      	ldr	r2, [sp, #4]
    c28e:	4293      	cmp	r3, r2
    c290:	d1eb      	bne.n	c26a <__gethex+0xf6>
    c292:	9b07      	ldr	r3, [sp, #28]
    c294:	18ee      	adds	r6, r5, r3
    c296:	4546      	cmp	r6, r8
    c298:	d3e7      	bcc.n	c26a <__gethex+0xf6>
    c29a:	9a02      	ldr	r2, [sp, #8]
    c29c:	9904      	ldr	r1, [sp, #16]
    c29e:	0030      	movs	r0, r6
    c2a0:	f000 fcf4 	bl	cc8c <strncmp>
    c2a4:	2800      	cmp	r0, #0
    c2a6:	d1e0      	bne.n	c26a <__gethex+0xf6>
    c2a8:	4546      	cmp	r6, r8
    c2aa:	d8ed      	bhi.n	c288 <__gethex+0x114>
    c2ac:	4653      	mov	r3, sl
    c2ae:	464a      	mov	r2, r9
    c2b0:	c304      	stmia	r3!, {r2}
    c2b2:	9a08      	ldr	r2, [sp, #32]
    c2b4:	4648      	mov	r0, r9
    c2b6:	1a9b      	subs	r3, r3, r2
    c2b8:	9a05      	ldr	r2, [sp, #20]
    c2ba:	109b      	asrs	r3, r3, #2
    c2bc:	6113      	str	r3, [r2, #16]
    c2be:	015c      	lsls	r4, r3, #5
    c2c0:	f7fd fe68 	bl	9f94 <__hi0bits>
    c2c4:	465b      	mov	r3, fp
    c2c6:	681d      	ldr	r5, [r3, #0]
    c2c8:	1a24      	subs	r4, r4, r0
    c2ca:	42ac      	cmp	r4, r5
    c2cc:	dd00      	ble.n	c2d0 <__gethex+0x15c>
    c2ce:	e101      	b.n	c4d4 <__gethex+0x360>
    c2d0:	2600      	movs	r6, #0
    c2d2:	42ac      	cmp	r4, r5
    c2d4:	da00      	bge.n	c2d8 <__gethex+0x164>
    c2d6:	e126      	b.n	c526 <__gethex+0x3b2>
    c2d8:	465b      	mov	r3, fp
    c2da:	9a03      	ldr	r2, [sp, #12]
    c2dc:	689b      	ldr	r3, [r3, #8]
    c2de:	429a      	cmp	r2, r3
    c2e0:	dd00      	ble.n	c2e4 <__gethex+0x170>
    c2e2:	e0ba      	b.n	c45a <__gethex+0x2e6>
    c2e4:	465b      	mov	r3, fp
    c2e6:	9903      	ldr	r1, [sp, #12]
    c2e8:	685b      	ldr	r3, [r3, #4]
    c2ea:	4299      	cmp	r1, r3
    c2ec:	da00      	bge.n	c2f0 <__gethex+0x17c>
    c2ee:	e0d5      	b.n	c49c <__gethex+0x328>
    c2f0:	2401      	movs	r4, #1
    c2f2:	2e00      	cmp	r6, #0
    c2f4:	d00b      	beq.n	c30e <__gethex+0x19a>
    c2f6:	465b      	mov	r3, fp
    c2f8:	68db      	ldr	r3, [r3, #12]
    c2fa:	2b02      	cmp	r3, #2
    c2fc:	d100      	bne.n	c300 <__gethex+0x18c>
    c2fe:	e152      	b.n	c5a6 <__gethex+0x432>
    c300:	2b03      	cmp	r3, #3
    c302:	d100      	bne.n	c306 <__gethex+0x192>
    c304:	e153      	b.n	c5ae <__gethex+0x43a>
    c306:	2b01      	cmp	r3, #1
    c308:	d069      	beq.n	c3de <__gethex+0x26a>
    c30a:	2310      	movs	r3, #16
    c30c:	431c      	orrs	r4, r3
    c30e:	9b14      	ldr	r3, [sp, #80]	; 0x50
    c310:	9a05      	ldr	r2, [sp, #20]
    c312:	601a      	str	r2, [r3, #0]
    c314:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c316:	9a03      	ldr	r2, [sp, #12]
    c318:	601a      	str	r2, [r3, #0]
    c31a:	e026      	b.n	c36a <__gethex+0x1f6>
    c31c:	2e00      	cmp	r6, #0
    c31e:	d100      	bne.n	c322 <__gethex+0x1ae>
    c320:	e133      	b.n	c58a <__gethex+0x416>
    c322:	782b      	ldrb	r3, [r5, #0]
    c324:	e772      	b.n	c20c <__gethex+0x98>
    c326:	4653      	mov	r3, sl
    c328:	464a      	mov	r2, r9
    c32a:	601a      	str	r2, [r3, #0]
    c32c:	2304      	movs	r3, #4
    c32e:	469c      	mov	ip, r3
    c330:	2300      	movs	r3, #0
    c332:	44e2      	add	sl, ip
    c334:	2200      	movs	r2, #0
    c336:	2404      	movs	r4, #4
    c338:	4699      	mov	r9, r3
    c33a:	e79a      	b.n	c272 <__gethex+0xfe>
    c33c:	9d02      	ldr	r5, [sp, #8]
    c33e:	9904      	ldr	r1, [sp, #16]
    c340:	002a      	movs	r2, r5
    c342:	0020      	movs	r0, r4
    c344:	f000 fca2 	bl	cc8c <strncmp>
    c348:	2800      	cmp	r0, #0
    c34a:	d100      	bne.n	c34e <__gethex+0x1da>
    c34c:	e091      	b.n	c472 <__gethex+0x2fe>
    c34e:	0025      	movs	r5, r4
    c350:	7822      	ldrb	r2, [r4, #0]
    c352:	2a50      	cmp	r2, #80	; 0x50
    c354:	d011      	beq.n	c37a <__gethex+0x206>
    c356:	2a70      	cmp	r2, #112	; 0x70
    c358:	d00f      	beq.n	c37a <__gethex+0x206>
    c35a:	464b      	mov	r3, r9
    c35c:	601d      	str	r5, [r3, #0]
    c35e:	4643      	mov	r3, r8
    c360:	425a      	negs	r2, r3
    c362:	4153      	adcs	r3, r2
    c364:	2406      	movs	r4, #6
    c366:	425b      	negs	r3, r3
    c368:	401c      	ands	r4, r3
    c36a:	0020      	movs	r0, r4
    c36c:	b00b      	add	sp, #44	; 0x2c
    c36e:	bc3c      	pop	{r2, r3, r4, r5}
    c370:	4690      	mov	r8, r2
    c372:	4699      	mov	r9, r3
    c374:	46a2      	mov	sl, r4
    c376:	46ab      	mov	fp, r5
    c378:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c37a:	2300      	movs	r3, #0
    c37c:	9303      	str	r3, [sp, #12]
    c37e:	3301      	adds	r3, #1
    c380:	469a      	mov	sl, r3
    c382:	786b      	ldrb	r3, [r5, #1]
    c384:	2b2b      	cmp	r3, #43	; 0x2b
    c386:	d100      	bne.n	c38a <__gethex+0x216>
    c388:	e09f      	b.n	c4ca <__gethex+0x356>
    c38a:	2101      	movs	r1, #1
    c38c:	2b2d      	cmp	r3, #45	; 0x2d
    c38e:	d16d      	bne.n	c46c <__gethex+0x2f8>
    c390:	78ab      	ldrb	r3, [r5, #2]
    c392:	1ca8      	adds	r0, r5, #2
    c394:	5cfb      	ldrb	r3, [r7, r3]
    c396:	002e      	movs	r6, r5
    c398:	1e5a      	subs	r2, r3, #1
    c39a:	2a18      	cmp	r2, #24
    c39c:	d900      	bls.n	c3a0 <__gethex+0x22c>
    c39e:	e73f      	b.n	c220 <__gethex+0xac>
    c3a0:	1c42      	adds	r2, r0, #1
    c3a2:	7840      	ldrb	r0, [r0, #1]
    c3a4:	3b10      	subs	r3, #16
    c3a6:	5c38      	ldrb	r0, [r7, r0]
    c3a8:	1e46      	subs	r6, r0, #1
    c3aa:	2e18      	cmp	r6, #24
    c3ac:	d80c      	bhi.n	c3c8 <__gethex+0x254>
    c3ae:	0006      	movs	r6, r0
    c3b0:	0098      	lsls	r0, r3, #2
    c3b2:	18c0      	adds	r0, r0, r3
    c3b4:	0040      	lsls	r0, r0, #1
    c3b6:	1980      	adds	r0, r0, r6
    c3b8:	0003      	movs	r3, r0
    c3ba:	3201      	adds	r2, #1
    c3bc:	7810      	ldrb	r0, [r2, #0]
    c3be:	3b10      	subs	r3, #16
    c3c0:	5c3e      	ldrb	r6, [r7, r0]
    c3c2:	1e70      	subs	r0, r6, #1
    c3c4:	2818      	cmp	r0, #24
    c3c6:	d9f3      	bls.n	c3b0 <__gethex+0x23c>
    c3c8:	2900      	cmp	r1, #0
    c3ca:	d000      	beq.n	c3ce <__gethex+0x25a>
    c3cc:	425b      	negs	r3, r3
    c3ce:	9903      	ldr	r1, [sp, #12]
    c3d0:	002e      	movs	r6, r5
    c3d2:	468c      	mov	ip, r1
    c3d4:	449c      	add	ip, r3
    c3d6:	4663      	mov	r3, ip
    c3d8:	0015      	movs	r5, r2
    c3da:	9303      	str	r3, [sp, #12]
    c3dc:	e720      	b.n	c220 <__gethex+0xac>
    c3de:	07b2      	lsls	r2, r6, #30
    c3e0:	d593      	bpl.n	c30a <__gethex+0x196>
    c3e2:	9a08      	ldr	r2, [sp, #32]
    c3e4:	6812      	ldr	r2, [r2, #0]
    c3e6:	4316      	orrs	r6, r2
    c3e8:	9201      	str	r2, [sp, #4]
    c3ea:	4233      	tst	r3, r6
    c3ec:	d100      	bne.n	c3f0 <__gethex+0x27c>
    c3ee:	e78c      	b.n	c30a <__gethex+0x196>
    c3f0:	9b05      	ldr	r3, [sp, #20]
    c3f2:	691f      	ldr	r7, [r3, #16]
    c3f4:	9b08      	ldr	r3, [sp, #32]
    c3f6:	00b9      	lsls	r1, r7, #2
    c3f8:	4688      	mov	r8, r1
    c3fa:	001a      	movs	r2, r3
    c3fc:	4442      	add	r2, r8
    c3fe:	0016      	movs	r6, r2
    c400:	2100      	movs	r1, #0
    c402:	469c      	mov	ip, r3
    c404:	e003      	b.n	c40e <__gethex+0x29a>
    c406:	c302      	stmia	r3!, {r1}
    c408:	429e      	cmp	r6, r3
    c40a:	d800      	bhi.n	c40e <__gethex+0x29a>
    c40c:	e0ff      	b.n	c60e <__gethex+0x49a>
    c40e:	681a      	ldr	r2, [r3, #0]
    c410:	1c50      	adds	r0, r2, #1
    c412:	d0f8      	beq.n	c406 <__gethex+0x292>
    c414:	3201      	adds	r2, #1
    c416:	4660      	mov	r0, ip
    c418:	601a      	str	r2, [r3, #0]
    c41a:	2c02      	cmp	r4, #2
    c41c:	d100      	bne.n	c420 <__gethex+0x2ac>
    c41e:	e10c      	b.n	c63a <__gethex+0x4c6>
    c420:	231f      	movs	r3, #31
    c422:	2421      	movs	r4, #33	; 0x21
    c424:	401d      	ands	r5, r3
    c426:	d100      	bne.n	c42a <__gethex+0x2b6>
    c428:	e771      	b.n	c30e <__gethex+0x19a>
    c42a:	4440      	add	r0, r8
    c42c:	3804      	subs	r0, #4
    c42e:	6800      	ldr	r0, [r0, #0]
    c430:	f7fd fdb0 	bl	9f94 <__hi0bits>
    c434:	2320      	movs	r3, #32
    c436:	1b5d      	subs	r5, r3, r5
    c438:	42a8      	cmp	r0, r5
    c43a:	db00      	blt.n	c43e <__gethex+0x2ca>
    c43c:	e767      	b.n	c30e <__gethex+0x19a>
    c43e:	2101      	movs	r1, #1
    c440:	9805      	ldr	r0, [sp, #20]
    c442:	f7ff fe41 	bl	c0c8 <rshift>
    c446:	9b03      	ldr	r3, [sp, #12]
    c448:	2421      	movs	r4, #33	; 0x21
    c44a:	3301      	adds	r3, #1
    c44c:	001a      	movs	r2, r3
    c44e:	9303      	str	r3, [sp, #12]
    c450:	465b      	mov	r3, fp
    c452:	689b      	ldr	r3, [r3, #8]
    c454:	429a      	cmp	r2, r3
    c456:	dc00      	bgt.n	c45a <__gethex+0x2e6>
    c458:	e759      	b.n	c30e <__gethex+0x19a>
    c45a:	9905      	ldr	r1, [sp, #20]
    c45c:	9806      	ldr	r0, [sp, #24]
    c45e:	f7fd fcff 	bl	9e60 <_Bfree>
    c462:	2300      	movs	r3, #0
    c464:	9a14      	ldr	r2, [sp, #80]	; 0x50
    c466:	24a3      	movs	r4, #163	; 0xa3
    c468:	6013      	str	r3, [r2, #0]
    c46a:	e77e      	b.n	c36a <__gethex+0x1f6>
    c46c:	1c68      	adds	r0, r5, #1
    c46e:	2100      	movs	r1, #0
    c470:	e790      	b.n	c394 <__gethex+0x220>
    c472:	1965      	adds	r5, r4, r5
    c474:	782a      	ldrb	r2, [r5, #0]
    c476:	5cbb      	ldrb	r3, [r7, r2]
    c478:	2b00      	cmp	r3, #0
    c47a:	d100      	bne.n	c47e <__gethex+0x30a>
    c47c:	e769      	b.n	c352 <__gethex+0x1de>
    c47e:	002c      	movs	r4, r5
    c480:	2a30      	cmp	r2, #48	; 0x30
    c482:	d104      	bne.n	c48e <__gethex+0x31a>
    c484:	3401      	adds	r4, #1
    c486:	7823      	ldrb	r3, [r4, #0]
    c488:	2b30      	cmp	r3, #48	; 0x30
    c48a:	d0fb      	beq.n	c484 <__gethex+0x310>
    c48c:	5cfb      	ldrb	r3, [r7, r3]
    c48e:	4259      	negs	r1, r3
    c490:	4159      	adcs	r1, r3
    c492:	2201      	movs	r2, #1
    c494:	468a      	mov	sl, r1
    c496:	002e      	movs	r6, r5
    c498:	4690      	mov	r8, r2
    c49a:	e6a3      	b.n	c1e4 <__gethex+0x70>
    c49c:	1a5c      	subs	r4, r3, r1
    c49e:	42a5      	cmp	r5, r4
    c4a0:	dc53      	bgt.n	c54a <__gethex+0x3d6>
    c4a2:	465a      	mov	r2, fp
    c4a4:	68d2      	ldr	r2, [r2, #12]
    c4a6:	2a02      	cmp	r2, #2
    c4a8:	d100      	bne.n	c4ac <__gethex+0x338>
    c4aa:	e0ac      	b.n	c606 <__gethex+0x492>
    c4ac:	2a03      	cmp	r2, #3
    c4ae:	d100      	bne.n	c4b2 <__gethex+0x33e>
    c4b0:	e084      	b.n	c5bc <__gethex+0x448>
    c4b2:	2a01      	cmp	r2, #1
    c4b4:	d100      	bne.n	c4b8 <__gethex+0x344>
    c4b6:	e097      	b.n	c5e8 <__gethex+0x474>
    c4b8:	9905      	ldr	r1, [sp, #20]
    c4ba:	9806      	ldr	r0, [sp, #24]
    c4bc:	f7fd fcd0 	bl	9e60 <_Bfree>
    c4c0:	2300      	movs	r3, #0
    c4c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
    c4c4:	2450      	movs	r4, #80	; 0x50
    c4c6:	6013      	str	r3, [r2, #0]
    c4c8:	e74f      	b.n	c36a <__gethex+0x1f6>
    c4ca:	2100      	movs	r1, #0
    c4cc:	e760      	b.n	c390 <__gethex+0x21c>
    c4ce:	46c0      	nop			; (mov r8, r8)
    c4d0:	0000f61c 	.word	0x0000f61c
    c4d4:	1b64      	subs	r4, r4, r5
    c4d6:	0021      	movs	r1, r4
    c4d8:	9805      	ldr	r0, [sp, #20]
    c4da:	f7fe f917 	bl	a70c <__any_on>
    c4de:	1e06      	subs	r6, r0, #0
    c4e0:	d014      	beq.n	c50c <__gethex+0x398>
    c4e2:	211f      	movs	r1, #31
    c4e4:	2301      	movs	r3, #1
    c4e6:	1e60      	subs	r0, r4, #1
    c4e8:	4001      	ands	r1, r0
    c4ea:	408b      	lsls	r3, r1
    c4ec:	1142      	asrs	r2, r0, #5
    c4ee:	9908      	ldr	r1, [sp, #32]
    c4f0:	0092      	lsls	r2, r2, #2
    c4f2:	588a      	ldr	r2, [r1, r2]
    c4f4:	2601      	movs	r6, #1
    c4f6:	421a      	tst	r2, r3
    c4f8:	d008      	beq.n	c50c <__gethex+0x398>
    c4fa:	2801      	cmp	r0, #1
    c4fc:	dd72      	ble.n	c5e4 <__gethex+0x470>
    c4fe:	1ea1      	subs	r1, r4, #2
    c500:	9805      	ldr	r0, [sp, #20]
    c502:	f7fe f903 	bl	a70c <__any_on>
    c506:	2800      	cmp	r0, #0
    c508:	d06c      	beq.n	c5e4 <__gethex+0x470>
    c50a:	2603      	movs	r6, #3
    c50c:	0021      	movs	r1, r4
    c50e:	9805      	ldr	r0, [sp, #20]
    c510:	f7ff fdda 	bl	c0c8 <rshift>
    c514:	9b03      	ldr	r3, [sp, #12]
    c516:	469c      	mov	ip, r3
    c518:	44a4      	add	ip, r4
    c51a:	4663      	mov	r3, ip
    c51c:	9303      	str	r3, [sp, #12]
    c51e:	e6db      	b.n	c2d8 <__gethex+0x164>
    c520:	2200      	movs	r2, #0
    c522:	9203      	str	r2, [sp, #12]
    c524:	e675      	b.n	c212 <__gethex+0x9e>
    c526:	1b2c      	subs	r4, r5, r4
    c528:	0022      	movs	r2, r4
    c52a:	9905      	ldr	r1, [sp, #20]
    c52c:	9806      	ldr	r0, [sp, #24]
    c52e:	f7fd fe8d 	bl	a24c <__lshift>
    c532:	0003      	movs	r3, r0
    c534:	9a03      	ldr	r2, [sp, #12]
    c536:	3314      	adds	r3, #20
    c538:	1b12      	subs	r2, r2, r4
    c53a:	9005      	str	r0, [sp, #20]
    c53c:	9203      	str	r2, [sp, #12]
    c53e:	9308      	str	r3, [sp, #32]
    c540:	e6ca      	b.n	c2d8 <__gethex+0x164>
    c542:	2300      	movs	r3, #0
    c544:	3402      	adds	r4, #2
    c546:	4698      	mov	r8, r3
    c548:	e642      	b.n	c1d0 <__gethex+0x5c>
    c54a:	1e67      	subs	r7, r4, #1
    c54c:	2e00      	cmp	r6, #0
    c54e:	d133      	bne.n	c5b8 <__gethex+0x444>
    c550:	2f00      	cmp	r7, #0
    c552:	d004      	beq.n	c55e <__gethex+0x3ea>
    c554:	0039      	movs	r1, r7
    c556:	9805      	ldr	r0, [sp, #20]
    c558:	f7fe f8d8 	bl	a70c <__any_on>
    c55c:	0006      	movs	r6, r0
    c55e:	231f      	movs	r3, #31
    c560:	117a      	asrs	r2, r7, #5
    c562:	401f      	ands	r7, r3
    c564:	3b1e      	subs	r3, #30
    c566:	40bb      	lsls	r3, r7
    c568:	9908      	ldr	r1, [sp, #32]
    c56a:	0092      	lsls	r2, r2, #2
    c56c:	588a      	ldr	r2, [r1, r2]
    c56e:	421a      	tst	r2, r3
    c570:	d001      	beq.n	c576 <__gethex+0x402>
    c572:	2302      	movs	r3, #2
    c574:	431e      	orrs	r6, r3
    c576:	0021      	movs	r1, r4
    c578:	9805      	ldr	r0, [sp, #20]
    c57a:	f7ff fda5 	bl	c0c8 <rshift>
    c57e:	465b      	mov	r3, fp
    c580:	685b      	ldr	r3, [r3, #4]
    c582:	1b2d      	subs	r5, r5, r4
    c584:	9303      	str	r3, [sp, #12]
    c586:	2402      	movs	r4, #2
    c588:	e6b3      	b.n	c2f2 <__gethex+0x17e>
    c58a:	9b02      	ldr	r3, [sp, #8]
    c58c:	18ee      	adds	r6, r5, r3
    c58e:	7833      	ldrb	r3, [r6, #0]
    c590:	0035      	movs	r5, r6
    c592:	5cfa      	ldrb	r2, [r7, r3]
    c594:	2a00      	cmp	r2, #0
    c596:	d100      	bne.n	c59a <__gethex+0x426>
    c598:	e638      	b.n	c20c <__gethex+0x98>
    c59a:	3501      	adds	r5, #1
    c59c:	782b      	ldrb	r3, [r5, #0]
    c59e:	5cfa      	ldrb	r2, [r7, r3]
    c5a0:	2a00      	cmp	r2, #0
    c5a2:	d1fa      	bne.n	c59a <__gethex+0x426>
    c5a4:	e632      	b.n	c20c <__gethex+0x98>
    c5a6:	2301      	movs	r3, #1
    c5a8:	9a15      	ldr	r2, [sp, #84]	; 0x54
    c5aa:	1a9b      	subs	r3, r3, r2
    c5ac:	9315      	str	r3, [sp, #84]	; 0x54
    c5ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
    c5b0:	2b00      	cmp	r3, #0
    c5b2:	d100      	bne.n	c5b6 <__gethex+0x442>
    c5b4:	e6a9      	b.n	c30a <__gethex+0x196>
    c5b6:	e71b      	b.n	c3f0 <__gethex+0x27c>
    c5b8:	2601      	movs	r6, #1
    c5ba:	e7d0      	b.n	c55e <__gethex+0x3ea>
    c5bc:	9a15      	ldr	r2, [sp, #84]	; 0x54
    c5be:	2a00      	cmp	r2, #0
    c5c0:	d100      	bne.n	c5c4 <__gethex+0x450>
    c5c2:	e779      	b.n	c4b8 <__gethex+0x344>
    c5c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
    c5c6:	9908      	ldr	r1, [sp, #32]
    c5c8:	6013      	str	r3, [r2, #0]
    c5ca:	2301      	movs	r3, #1
    c5cc:	9a05      	ldr	r2, [sp, #20]
    c5ce:	2462      	movs	r4, #98	; 0x62
    c5d0:	6113      	str	r3, [r2, #16]
    c5d2:	600b      	str	r3, [r1, #0]
    c5d4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    c5d6:	601a      	str	r2, [r3, #0]
    c5d8:	e6c7      	b.n	c36a <__gethex+0x1f6>
    c5da:	9b08      	ldr	r3, [sp, #32]
    c5dc:	469a      	mov	sl, r3
    c5de:	2300      	movs	r3, #0
    c5e0:	4699      	mov	r9, r3
    c5e2:	e663      	b.n	c2ac <__gethex+0x138>
    c5e4:	2602      	movs	r6, #2
    c5e6:	e791      	b.n	c50c <__gethex+0x398>
    c5e8:	42a5      	cmp	r5, r4
    c5ea:	d000      	beq.n	c5ee <__gethex+0x47a>
    c5ec:	e764      	b.n	c4b8 <__gethex+0x344>
    c5ee:	2d01      	cmp	r5, #1
    c5f0:	dde8      	ble.n	c5c4 <__gethex+0x450>
    c5f2:	1e69      	subs	r1, r5, #1
    c5f4:	9805      	ldr	r0, [sp, #20]
    c5f6:	f7fe f889 	bl	a70c <__any_on>
    c5fa:	2800      	cmp	r0, #0
    c5fc:	d100      	bne.n	c600 <__gethex+0x48c>
    c5fe:	e75b      	b.n	c4b8 <__gethex+0x344>
    c600:	465b      	mov	r3, fp
    c602:	685b      	ldr	r3, [r3, #4]
    c604:	e7de      	b.n	c5c4 <__gethex+0x450>
    c606:	9a15      	ldr	r2, [sp, #84]	; 0x54
    c608:	2a00      	cmp	r2, #0
    c60a:	d0db      	beq.n	c5c4 <__gethex+0x450>
    c60c:	e754      	b.n	c4b8 <__gethex+0x344>
    c60e:	9b05      	ldr	r3, [sp, #20]
    c610:	689b      	ldr	r3, [r3, #8]
    c612:	9301      	str	r3, [sp, #4]
    c614:	429f      	cmp	r7, r3
    c616:	da23      	bge.n	c660 <__gethex+0x4ec>
    c618:	003b      	movs	r3, r7
    c61a:	9808      	ldr	r0, [sp, #32]
    c61c:	9905      	ldr	r1, [sp, #20]
    c61e:	1c5a      	adds	r2, r3, #1
    c620:	468c      	mov	ip, r1
    c622:	610a      	str	r2, [r1, #16]
    c624:	2101      	movs	r1, #1
    c626:	3304      	adds	r3, #4
    c628:	009b      	lsls	r3, r3, #2
    c62a:	4463      	add	r3, ip
    c62c:	6059      	str	r1, [r3, #4]
    c62e:	2c02      	cmp	r4, #2
    c630:	d003      	beq.n	c63a <__gethex+0x4c6>
    c632:	4297      	cmp	r7, r2
    c634:	da00      	bge.n	c638 <__gethex+0x4c4>
    c636:	e702      	b.n	c43e <__gethex+0x2ca>
    c638:	e6f2      	b.n	c420 <__gethex+0x2ac>
    c63a:	465b      	mov	r3, fp
    c63c:	681b      	ldr	r3, [r3, #0]
    c63e:	2422      	movs	r4, #34	; 0x22
    c640:	3b01      	subs	r3, #1
    c642:	429d      	cmp	r5, r3
    c644:	d000      	beq.n	c648 <__gethex+0x4d4>
    c646:	e662      	b.n	c30e <__gethex+0x19a>
    c648:	231f      	movs	r3, #31
    c64a:	116a      	asrs	r2, r5, #5
    c64c:	401d      	ands	r5, r3
    c64e:	3b1e      	subs	r3, #30
    c650:	40ab      	lsls	r3, r5
    c652:	0092      	lsls	r2, r2, #2
    c654:	5814      	ldr	r4, [r2, r0]
    c656:	4023      	ands	r3, r4
    c658:	425c      	negs	r4, r3
    c65a:	415c      	adcs	r4, r3
    c65c:	3421      	adds	r4, #33	; 0x21
    c65e:	e656      	b.n	c30e <__gethex+0x19a>
    c660:	9b05      	ldr	r3, [sp, #20]
    c662:	685a      	ldr	r2, [r3, #4]
    c664:	9b06      	ldr	r3, [sp, #24]
    c666:	1c51      	adds	r1, r2, #1
    c668:	0018      	movs	r0, r3
    c66a:	4699      	mov	r9, r3
    c66c:	9201      	str	r2, [sp, #4]
    c66e:	f7fd fbcf 	bl	9e10 <_Balloc>
    c672:	0006      	movs	r6, r0
    c674:	9b05      	ldr	r3, [sp, #20]
    c676:	300c      	adds	r0, #12
    c678:	691a      	ldr	r2, [r3, #16]
    c67a:	330c      	adds	r3, #12
    c67c:	9201      	str	r2, [sp, #4]
    c67e:	3202      	adds	r2, #2
    c680:	0019      	movs	r1, r3
    c682:	0092      	lsls	r2, r2, #2
    c684:	f7fd fb72 	bl	9d6c <memcpy>
    c688:	4648      	mov	r0, r9
    c68a:	9905      	ldr	r1, [sp, #20]
    c68c:	f7fd fbe8 	bl	9e60 <_Bfree>
    c690:	0030      	movs	r0, r6
    c692:	6933      	ldr	r3, [r6, #16]
    c694:	3014      	adds	r0, #20
    c696:	9605      	str	r6, [sp, #20]
    c698:	e7c0      	b.n	c61c <__gethex+0x4a8>
    c69a:	46c0      	nop			; (mov r8, r8)

0000c69c <__match>:
    c69c:	b530      	push	{r4, r5, lr}
    c69e:	6802      	ldr	r2, [r0, #0]
    c6a0:	e008      	b.n	c6b4 <__match+0x18>
    c6a2:	7813      	ldrb	r3, [r2, #0]
    c6a4:	001d      	movs	r5, r3
    c6a6:	3d41      	subs	r5, #65	; 0x41
    c6a8:	2d19      	cmp	r5, #25
    c6aa:	d800      	bhi.n	c6ae <__match+0x12>
    c6ac:	3320      	adds	r3, #32
    c6ae:	3101      	adds	r1, #1
    c6b0:	42a3      	cmp	r3, r4
    c6b2:	d106      	bne.n	c6c2 <__match+0x26>
    c6b4:	780c      	ldrb	r4, [r1, #0]
    c6b6:	3201      	adds	r2, #1
    c6b8:	2c00      	cmp	r4, #0
    c6ba:	d1f2      	bne.n	c6a2 <__match+0x6>
    c6bc:	6002      	str	r2, [r0, #0]
    c6be:	2001      	movs	r0, #1
    c6c0:	bd30      	pop	{r4, r5, pc}
    c6c2:	2000      	movs	r0, #0
    c6c4:	e7fc      	b.n	c6c0 <__match+0x24>
    c6c6:	46c0      	nop			; (mov r8, r8)

0000c6c8 <__hexnan>:
    c6c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    c6ca:	4657      	mov	r7, sl
    c6cc:	46de      	mov	lr, fp
    c6ce:	464e      	mov	r6, r9
    c6d0:	4645      	mov	r5, r8
    c6d2:	4692      	mov	sl, r2
    c6d4:	680a      	ldr	r2, [r1, #0]
    c6d6:	211f      	movs	r1, #31
    c6d8:	b5e0      	push	{r5, r6, r7, lr}
    c6da:	1153      	asrs	r3, r2, #5
    c6dc:	b085      	sub	sp, #20
    c6de:	009b      	lsls	r3, r3, #2
    c6e0:	4011      	ands	r1, r2
    c6e2:	9001      	str	r0, [sp, #4]
    c6e4:	4453      	add	r3, sl
    c6e6:	9103      	str	r1, [sp, #12]
    c6e8:	2900      	cmp	r1, #0
    c6ea:	d000      	beq.n	c6ee <__hexnan+0x26>
    c6ec:	3304      	adds	r3, #4
    c6ee:	3b04      	subs	r3, #4
    c6f0:	469b      	mov	fp, r3
    c6f2:	2300      	movs	r3, #0
    c6f4:	465a      	mov	r2, fp
    c6f6:	6013      	str	r3, [r2, #0]
    c6f8:	9b01      	ldr	r3, [sp, #4]
    c6fa:	465c      	mov	r4, fp
    c6fc:	6818      	ldr	r0, [r3, #0]
    c6fe:	2300      	movs	r3, #0
    c700:	7841      	ldrb	r1, [r0, #1]
    c702:	9300      	str	r3, [sp, #0]
    c704:	4b59      	ldr	r3, [pc, #356]	; (c86c <__hexnan+0x1a4>)
    c706:	46d8      	mov	r8, fp
    c708:	2500      	movs	r5, #0
    c70a:	2200      	movs	r2, #0
    c70c:	4699      	mov	r9, r3
    c70e:	9402      	str	r4, [sp, #8]
    c710:	1c46      	adds	r6, r0, #1
    c712:	2900      	cmp	r1, #0
    c714:	d036      	beq.n	c784 <__hexnan+0xbc>
    c716:	464b      	mov	r3, r9
    c718:	5c5b      	ldrb	r3, [r3, r1]
    c71a:	2b00      	cmp	r3, #0
    c71c:	d158      	bne.n	c7d0 <__hexnan+0x108>
    c71e:	2920      	cmp	r1, #32
    c720:	d868      	bhi.n	c7f4 <__hexnan+0x12c>
    c722:	9b00      	ldr	r3, [sp, #0]
    c724:	429a      	cmp	r2, r3
    c726:	dd28      	ble.n	c77a <__hexnan+0xb2>
    c728:	4544      	cmp	r4, r8
    c72a:	d21c      	bcs.n	c766 <__hexnan+0x9e>
    c72c:	2d07      	cmp	r5, #7
    c72e:	dc1a      	bgt.n	c766 <__hexnan+0x9e>
    c730:	2308      	movs	r3, #8
    c732:	1b5d      	subs	r5, r3, r5
    c734:	00ad      	lsls	r5, r5, #2
    c736:	3318      	adds	r3, #24
    c738:	1b5b      	subs	r3, r3, r5
    c73a:	469c      	mov	ip, r3
    c73c:	4661      	mov	r1, ip
    c73e:	6823      	ldr	r3, [r4, #0]
    c740:	0020      	movs	r0, r4
    c742:	4647      	mov	r7, r8
    c744:	4694      	mov	ip, r2
    c746:	46a0      	mov	r8, r4
    c748:	000a      	movs	r2, r1
    c74a:	001c      	movs	r4, r3
    c74c:	6841      	ldr	r1, [r0, #4]
    c74e:	000b      	movs	r3, r1
    c750:	4093      	lsls	r3, r2
    c752:	40e9      	lsrs	r1, r5
    c754:	4323      	orrs	r3, r4
    c756:	c008      	stmia	r0!, {r3}
    c758:	000c      	movs	r4, r1
    c75a:	6001      	str	r1, [r0, #0]
    c75c:	4287      	cmp	r7, r0
    c75e:	d8f5      	bhi.n	c74c <__hexnan+0x84>
    c760:	4644      	mov	r4, r8
    c762:	4662      	mov	r2, ip
    c764:	46b8      	mov	r8, r7
    c766:	2508      	movs	r5, #8
    c768:	4554      	cmp	r4, sl
    c76a:	d906      	bls.n	c77a <__hexnan+0xb2>
    c76c:	1f23      	subs	r3, r4, #4
    c76e:	2100      	movs	r1, #0
    c770:	4698      	mov	r8, r3
    c772:	001c      	movs	r4, r3
    c774:	2500      	movs	r5, #0
    c776:	6019      	str	r1, [r3, #0]
    c778:	9200      	str	r2, [sp, #0]
    c77a:	0030      	movs	r0, r6
    c77c:	7841      	ldrb	r1, [r0, #1]
    c77e:	1c46      	adds	r6, r0, #1
    c780:	2900      	cmp	r1, #0
    c782:	d1c8      	bne.n	c716 <__hexnan+0x4e>
    c784:	9b02      	ldr	r3, [sp, #8]
    c786:	469c      	mov	ip, r3
    c788:	2a00      	cmp	r2, #0
    c78a:	d037      	beq.n	c7fc <__hexnan+0x134>
    c78c:	4544      	cmp	r4, r8
    c78e:	d201      	bcs.n	c794 <__hexnan+0xcc>
    c790:	2d07      	cmp	r5, #7
    c792:	dd57      	ble.n	c844 <__hexnan+0x17c>
    c794:	4554      	cmp	r4, sl
    c796:	d939      	bls.n	c80c <__hexnan+0x144>
    c798:	4653      	mov	r3, sl
    c79a:	4659      	mov	r1, fp
    c79c:	cc04      	ldmia	r4!, {r2}
    c79e:	601a      	str	r2, [r3, #0]
    c7a0:	3304      	adds	r3, #4
    c7a2:	42a1      	cmp	r1, r4
    c7a4:	d2fa      	bcs.n	c79c <__hexnan+0xd4>
    c7a6:	2200      	movs	r2, #0
    c7a8:	c304      	stmia	r3!, {r2}
    c7aa:	4299      	cmp	r1, r3
    c7ac:	d2fc      	bcs.n	c7a8 <__hexnan+0xe0>
    c7ae:	468b      	mov	fp, r1
    c7b0:	680b      	ldr	r3, [r1, #0]
    c7b2:	2b00      	cmp	r3, #0
    c7b4:	d10a      	bne.n	c7cc <__hexnan+0x104>
    c7b6:	4663      	mov	r3, ip
    c7b8:	4652      	mov	r2, sl
    c7ba:	45da      	cmp	sl, fp
    c7bc:	d102      	bne.n	c7c4 <__hexnan+0xfc>
    c7be:	e035      	b.n	c82c <__hexnan+0x164>
    c7c0:	429a      	cmp	r2, r3
    c7c2:	d032      	beq.n	c82a <__hexnan+0x162>
    c7c4:	3b04      	subs	r3, #4
    c7c6:	6819      	ldr	r1, [r3, #0]
    c7c8:	2900      	cmp	r1, #0
    c7ca:	d0f9      	beq.n	c7c0 <__hexnan+0xf8>
    c7cc:	2005      	movs	r0, #5
    c7ce:	e016      	b.n	c7fe <__hexnan+0x136>
    c7d0:	3501      	adds	r5, #1
    c7d2:	3201      	adds	r2, #1
    c7d4:	2d08      	cmp	r5, #8
    c7d6:	dd05      	ble.n	c7e4 <__hexnan+0x11c>
    c7d8:	4554      	cmp	r4, sl
    c7da:	d9ce      	bls.n	c77a <__hexnan+0xb2>
    c7dc:	2100      	movs	r1, #0
    c7de:	2501      	movs	r5, #1
    c7e0:	3c04      	subs	r4, #4
    c7e2:	6021      	str	r1, [r4, #0]
    c7e4:	200f      	movs	r0, #15
    c7e6:	6821      	ldr	r1, [r4, #0]
    c7e8:	4003      	ands	r3, r0
    c7ea:	0109      	lsls	r1, r1, #4
    c7ec:	430b      	orrs	r3, r1
    c7ee:	6023      	str	r3, [r4, #0]
    c7f0:	0030      	movs	r0, r6
    c7f2:	e7c3      	b.n	c77c <__hexnan+0xb4>
    c7f4:	9b02      	ldr	r3, [sp, #8]
    c7f6:	469c      	mov	ip, r3
    c7f8:	2929      	cmp	r1, #41	; 0x29
    c7fa:	d01f      	beq.n	c83c <__hexnan+0x174>
    c7fc:	2004      	movs	r0, #4
    c7fe:	b005      	add	sp, #20
    c800:	bc3c      	pop	{r2, r3, r4, r5}
    c802:	4690      	mov	r8, r2
    c804:	4699      	mov	r9, r3
    c806:	46a2      	mov	sl, r4
    c808:	46ab      	mov	fp, r5
    c80a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c80c:	9b03      	ldr	r3, [sp, #12]
    c80e:	2b00      	cmp	r3, #0
    c810:	d011      	beq.n	c836 <__hexnan+0x16e>
    c812:	2220      	movs	r2, #32
    c814:	9b03      	ldr	r3, [sp, #12]
    c816:	1ad2      	subs	r2, r2, r3
    c818:	2301      	movs	r3, #1
    c81a:	425b      	negs	r3, r3
    c81c:	40d3      	lsrs	r3, r2
    c81e:	465a      	mov	r2, fp
    c820:	6812      	ldr	r2, [r2, #0]
    c822:	4013      	ands	r3, r2
    c824:	465a      	mov	r2, fp
    c826:	6013      	str	r3, [r2, #0]
    c828:	e7c3      	b.n	c7b2 <__hexnan+0xea>
    c82a:	4692      	mov	sl, r2
    c82c:	2301      	movs	r3, #1
    c82e:	4652      	mov	r2, sl
    c830:	2005      	movs	r0, #5
    c832:	6013      	str	r3, [r2, #0]
    c834:	e7e3      	b.n	c7fe <__hexnan+0x136>
    c836:	465b      	mov	r3, fp
    c838:	681b      	ldr	r3, [r3, #0]
    c83a:	e7ba      	b.n	c7b2 <__hexnan+0xea>
    c83c:	9b01      	ldr	r3, [sp, #4]
    c83e:	3002      	adds	r0, #2
    c840:	6018      	str	r0, [r3, #0]
    c842:	e7a1      	b.n	c788 <__hexnan+0xc0>
    c844:	2308      	movs	r3, #8
    c846:	1b5d      	subs	r5, r3, r5
    c848:	6823      	ldr	r3, [r4, #0]
    c84a:	2620      	movs	r6, #32
    c84c:	0021      	movs	r1, r4
    c84e:	4647      	mov	r7, r8
    c850:	001a      	movs	r2, r3
    c852:	00ad      	lsls	r5, r5, #2
    c854:	1b76      	subs	r6, r6, r5
    c856:	6848      	ldr	r0, [r1, #4]
    c858:	0003      	movs	r3, r0
    c85a:	40b3      	lsls	r3, r6
    c85c:	4313      	orrs	r3, r2
    c85e:	0002      	movs	r2, r0
    c860:	40ea      	lsrs	r2, r5
    c862:	c108      	stmia	r1!, {r3}
    c864:	600a      	str	r2, [r1, #0]
    c866:	428f      	cmp	r7, r1
    c868:	d8f5      	bhi.n	c856 <__hexnan+0x18e>
    c86a:	e793      	b.n	c794 <__hexnan+0xcc>
    c86c:	0000f61c 	.word	0x0000f61c

0000c870 <memmove>:
    c870:	b5f0      	push	{r4, r5, r6, r7, lr}
    c872:	4288      	cmp	r0, r1
    c874:	d90a      	bls.n	c88c <memmove+0x1c>
    c876:	188b      	adds	r3, r1, r2
    c878:	4298      	cmp	r0, r3
    c87a:	d207      	bcs.n	c88c <memmove+0x1c>
    c87c:	1e53      	subs	r3, r2, #1
    c87e:	2a00      	cmp	r2, #0
    c880:	d003      	beq.n	c88a <memmove+0x1a>
    c882:	5cca      	ldrb	r2, [r1, r3]
    c884:	54c2      	strb	r2, [r0, r3]
    c886:	3b01      	subs	r3, #1
    c888:	d2fb      	bcs.n	c882 <memmove+0x12>
    c88a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c88c:	0005      	movs	r5, r0
    c88e:	2a0f      	cmp	r2, #15
    c890:	d808      	bhi.n	c8a4 <memmove+0x34>
    c892:	2a00      	cmp	r2, #0
    c894:	d0f9      	beq.n	c88a <memmove+0x1a>
    c896:	2300      	movs	r3, #0
    c898:	5ccc      	ldrb	r4, [r1, r3]
    c89a:	54ec      	strb	r4, [r5, r3]
    c89c:	3301      	adds	r3, #1
    c89e:	4293      	cmp	r3, r2
    c8a0:	d1fa      	bne.n	c898 <memmove+0x28>
    c8a2:	e7f2      	b.n	c88a <memmove+0x1a>
    c8a4:	000b      	movs	r3, r1
    c8a6:	4303      	orrs	r3, r0
    c8a8:	079b      	lsls	r3, r3, #30
    c8aa:	d12d      	bne.n	c908 <memmove+0x98>
    c8ac:	0015      	movs	r5, r2
    c8ae:	000c      	movs	r4, r1
    c8b0:	0003      	movs	r3, r0
    c8b2:	3d10      	subs	r5, #16
    c8b4:	092f      	lsrs	r7, r5, #4
    c8b6:	3701      	adds	r7, #1
    c8b8:	013f      	lsls	r7, r7, #4
    c8ba:	19c7      	adds	r7, r0, r7
    c8bc:	6826      	ldr	r6, [r4, #0]
    c8be:	601e      	str	r6, [r3, #0]
    c8c0:	6866      	ldr	r6, [r4, #4]
    c8c2:	605e      	str	r6, [r3, #4]
    c8c4:	68a6      	ldr	r6, [r4, #8]
    c8c6:	609e      	str	r6, [r3, #8]
    c8c8:	68e6      	ldr	r6, [r4, #12]
    c8ca:	3410      	adds	r4, #16
    c8cc:	60de      	str	r6, [r3, #12]
    c8ce:	3310      	adds	r3, #16
    c8d0:	429f      	cmp	r7, r3
    c8d2:	d1f3      	bne.n	c8bc <memmove+0x4c>
    c8d4:	240f      	movs	r4, #15
    c8d6:	43a5      	bics	r5, r4
    c8d8:	3510      	adds	r5, #16
    c8da:	1949      	adds	r1, r1, r5
    c8dc:	4014      	ands	r4, r2
    c8de:	1945      	adds	r5, r0, r5
    c8e0:	2c03      	cmp	r4, #3
    c8e2:	d913      	bls.n	c90c <memmove+0x9c>
    c8e4:	2300      	movs	r3, #0
    c8e6:	1f27      	subs	r7, r4, #4
    c8e8:	08be      	lsrs	r6, r7, #2
    c8ea:	3601      	adds	r6, #1
    c8ec:	00b6      	lsls	r6, r6, #2
    c8ee:	58cc      	ldr	r4, [r1, r3]
    c8f0:	50ec      	str	r4, [r5, r3]
    c8f2:	3304      	adds	r3, #4
    c8f4:	42b3      	cmp	r3, r6
    c8f6:	d1fa      	bne.n	c8ee <memmove+0x7e>
    c8f8:	2603      	movs	r6, #3
    c8fa:	43b7      	bics	r7, r6
    c8fc:	1d3c      	adds	r4, r7, #4
    c8fe:	1909      	adds	r1, r1, r4
    c900:	192d      	adds	r5, r5, r4
    c902:	4032      	ands	r2, r6
    c904:	d1c7      	bne.n	c896 <memmove+0x26>
    c906:	e7c0      	b.n	c88a <memmove+0x1a>
    c908:	0005      	movs	r5, r0
    c90a:	e7c4      	b.n	c896 <memmove+0x26>
    c90c:	0022      	movs	r2, r4
    c90e:	e7c0      	b.n	c892 <memmove+0x22>

0000c910 <_realloc_r>:
    c910:	b5f0      	push	{r4, r5, r6, r7, lr}
    c912:	464e      	mov	r6, r9
    c914:	4645      	mov	r5, r8
    c916:	46de      	mov	lr, fp
    c918:	4657      	mov	r7, sl
    c91a:	b5e0      	push	{r5, r6, r7, lr}
    c91c:	b085      	sub	sp, #20
    c91e:	9001      	str	r0, [sp, #4]
    c920:	000e      	movs	r6, r1
    c922:	0015      	movs	r5, r2
    c924:	2900      	cmp	r1, #0
    c926:	d100      	bne.n	c92a <_realloc_r+0x1a>
    c928:	e09e      	b.n	ca68 <_realloc_r+0x158>
    c92a:	0037      	movs	r7, r6
    c92c:	9801      	ldr	r0, [sp, #4]
    c92e:	3f08      	subs	r7, #8
    c930:	f7fd fa5e 	bl	9df0 <__malloc_lock>
    c934:	687a      	ldr	r2, [r7, #4]
    c936:	2303      	movs	r3, #3
    c938:	0014      	movs	r4, r2
    c93a:	439c      	bics	r4, r3
    c93c:	002b      	movs	r3, r5
    c93e:	330b      	adds	r3, #11
    c940:	46b9      	mov	r9, r7
    c942:	2b16      	cmp	r3, #22
    c944:	d847      	bhi.n	c9d6 <_realloc_r+0xc6>
    c946:	2110      	movs	r1, #16
    c948:	2310      	movs	r3, #16
    c94a:	4688      	mov	r8, r1
    c94c:	4545      	cmp	r5, r8
    c94e:	d846      	bhi.n	c9de <_realloc_r+0xce>
    c950:	429c      	cmp	r4, r3
    c952:	da49      	bge.n	c9e8 <_realloc_r+0xd8>
    c954:	49cc      	ldr	r1, [pc, #816]	; (cc88 <_realloc_r+0x378>)
    c956:	1938      	adds	r0, r7, r4
    c958:	468b      	mov	fp, r1
    c95a:	6889      	ldr	r1, [r1, #8]
    c95c:	9002      	str	r0, [sp, #8]
    c95e:	4288      	cmp	r0, r1
    c960:	d100      	bne.n	c964 <_realloc_r+0x54>
    c962:	e0c2      	b.n	caea <_realloc_r+0x1da>
    c964:	2101      	movs	r1, #1
    c966:	468a      	mov	sl, r1
    c968:	6840      	ldr	r0, [r0, #4]
    c96a:	0001      	movs	r1, r0
    c96c:	9003      	str	r0, [sp, #12]
    c96e:	4650      	mov	r0, sl
    c970:	4381      	bics	r1, r0
    c972:	468c      	mov	ip, r1
    c974:	9902      	ldr	r1, [sp, #8]
    c976:	468b      	mov	fp, r1
    c978:	44dc      	add	ip, fp
    c97a:	4661      	mov	r1, ip
    c97c:	6849      	ldr	r1, [r1, #4]
    c97e:	4201      	tst	r1, r0
    c980:	d04d      	beq.n	ca1e <_realloc_r+0x10e>
    c982:	4210      	tst	r0, r2
    c984:	d100      	bne.n	c988 <_realloc_r+0x78>
    c986:	e0a2      	b.n	cace <_realloc_r+0x1be>
    c988:	0029      	movs	r1, r5
    c98a:	9801      	ldr	r0, [sp, #4]
    c98c:	f7fc fe8c 	bl	96a8 <_malloc_r>
    c990:	1e05      	subs	r5, r0, #0
    c992:	d039      	beq.n	ca08 <_realloc_r+0xf8>
    c994:	2301      	movs	r3, #1
    c996:	0002      	movs	r2, r0
    c998:	6879      	ldr	r1, [r7, #4]
    c99a:	3a08      	subs	r2, #8
    c99c:	4399      	bics	r1, r3
    c99e:	187f      	adds	r7, r7, r1
    c9a0:	42ba      	cmp	r2, r7
    c9a2:	d100      	bne.n	c9a6 <_realloc_r+0x96>
    c9a4:	e12e      	b.n	cc04 <_realloc_r+0x2f4>
    c9a6:	1f22      	subs	r2, r4, #4
    c9a8:	2a24      	cmp	r2, #36	; 0x24
    c9aa:	d900      	bls.n	c9ae <_realloc_r+0x9e>
    c9ac:	e114      	b.n	cbd8 <_realloc_r+0x2c8>
    c9ae:	2a13      	cmp	r2, #19
    c9b0:	d900      	bls.n	c9b4 <_realloc_r+0xa4>
    c9b2:	e0e8      	b.n	cb86 <_realloc_r+0x276>
    c9b4:	0003      	movs	r3, r0
    c9b6:	0032      	movs	r2, r6
    c9b8:	6811      	ldr	r1, [r2, #0]
    c9ba:	6019      	str	r1, [r3, #0]
    c9bc:	6851      	ldr	r1, [r2, #4]
    c9be:	6059      	str	r1, [r3, #4]
    c9c0:	6892      	ldr	r2, [r2, #8]
    c9c2:	609a      	str	r2, [r3, #8]
    c9c4:	9c01      	ldr	r4, [sp, #4]
    c9c6:	0031      	movs	r1, r6
    c9c8:	0020      	movs	r0, r4
    c9ca:	f7fc fd4d 	bl	9468 <_free_r>
    c9ce:	0020      	movs	r0, r4
    c9d0:	f7fd fa16 	bl	9e00 <__malloc_unlock>
    c9d4:	e01b      	b.n	ca0e <_realloc_r+0xfe>
    c9d6:	2107      	movs	r1, #7
    c9d8:	438b      	bics	r3, r1
    c9da:	4698      	mov	r8, r3
    c9dc:	d5b6      	bpl.n	c94c <_realloc_r+0x3c>
    c9de:	230c      	movs	r3, #12
    c9e0:	9a01      	ldr	r2, [sp, #4]
    c9e2:	2500      	movs	r5, #0
    c9e4:	6013      	str	r3, [r2, #0]
    c9e6:	e012      	b.n	ca0e <_realloc_r+0xfe>
    c9e8:	0035      	movs	r5, r6
    c9ea:	4643      	mov	r3, r8
    c9ec:	1ae3      	subs	r3, r4, r3
    c9ee:	2b0f      	cmp	r3, #15
    c9f0:	d825      	bhi.n	ca3e <_realloc_r+0x12e>
    c9f2:	464b      	mov	r3, r9
    c9f4:	2201      	movs	r2, #1
    c9f6:	4649      	mov	r1, r9
    c9f8:	685b      	ldr	r3, [r3, #4]
    c9fa:	4013      	ands	r3, r2
    c9fc:	4323      	orrs	r3, r4
    c9fe:	604b      	str	r3, [r1, #4]
    ca00:	444c      	add	r4, r9
    ca02:	6863      	ldr	r3, [r4, #4]
    ca04:	431a      	orrs	r2, r3
    ca06:	6062      	str	r2, [r4, #4]
    ca08:	9801      	ldr	r0, [sp, #4]
    ca0a:	f7fd f9f9 	bl	9e00 <__malloc_unlock>
    ca0e:	0028      	movs	r0, r5
    ca10:	b005      	add	sp, #20
    ca12:	bc3c      	pop	{r2, r3, r4, r5}
    ca14:	4690      	mov	r8, r2
    ca16:	4699      	mov	r9, r3
    ca18:	46a2      	mov	sl, r4
    ca1a:	46ab      	mov	fp, r5
    ca1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ca1e:	2103      	movs	r1, #3
    ca20:	9803      	ldr	r0, [sp, #12]
    ca22:	468c      	mov	ip, r1
    ca24:	4388      	bics	r0, r1
    ca26:	1821      	adds	r1, r4, r0
    ca28:	468b      	mov	fp, r1
    ca2a:	4299      	cmp	r1, r3
    ca2c:	db21      	blt.n	ca72 <_realloc_r+0x162>
    ca2e:	9a02      	ldr	r2, [sp, #8]
    ca30:	0035      	movs	r5, r6
    ca32:	68d3      	ldr	r3, [r2, #12]
    ca34:	6892      	ldr	r2, [r2, #8]
    ca36:	465c      	mov	r4, fp
    ca38:	60d3      	str	r3, [r2, #12]
    ca3a:	609a      	str	r2, [r3, #8]
    ca3c:	e7d5      	b.n	c9ea <_realloc_r+0xda>
    ca3e:	464a      	mov	r2, r9
    ca40:	2001      	movs	r0, #1
    ca42:	4646      	mov	r6, r8
    ca44:	6852      	ldr	r2, [r2, #4]
    ca46:	4649      	mov	r1, r9
    ca48:	4002      	ands	r2, r0
    ca4a:	4332      	orrs	r2, r6
    ca4c:	464e      	mov	r6, r9
    ca4e:	4441      	add	r1, r8
    ca50:	4303      	orrs	r3, r0
    ca52:	6072      	str	r2, [r6, #4]
    ca54:	444c      	add	r4, r9
    ca56:	604b      	str	r3, [r1, #4]
    ca58:	6863      	ldr	r3, [r4, #4]
    ca5a:	3108      	adds	r1, #8
    ca5c:	4318      	orrs	r0, r3
    ca5e:	6060      	str	r0, [r4, #4]
    ca60:	9801      	ldr	r0, [sp, #4]
    ca62:	f7fc fd01 	bl	9468 <_free_r>
    ca66:	e7cf      	b.n	ca08 <_realloc_r+0xf8>
    ca68:	0011      	movs	r1, r2
    ca6a:	f7fc fe1d 	bl	96a8 <_malloc_r>
    ca6e:	0005      	movs	r5, r0
    ca70:	e7cd      	b.n	ca0e <_realloc_r+0xfe>
    ca72:	4651      	mov	r1, sl
    ca74:	4211      	tst	r1, r2
    ca76:	d000      	beq.n	ca7a <_realloc_r+0x16a>
    ca78:	e786      	b.n	c988 <_realloc_r+0x78>
    ca7a:	4661      	mov	r1, ip
    ca7c:	683a      	ldr	r2, [r7, #0]
    ca7e:	1aba      	subs	r2, r7, r2
    ca80:	4692      	mov	sl, r2
    ca82:	6852      	ldr	r2, [r2, #4]
    ca84:	438a      	bics	r2, r1
    ca86:	1880      	adds	r0, r0, r2
    ca88:	4683      	mov	fp, r0
    ca8a:	44a3      	add	fp, r4
    ca8c:	459b      	cmp	fp, r3
    ca8e:	db26      	blt.n	cade <_realloc_r+0x1ce>
    ca90:	9a02      	ldr	r2, [sp, #8]
    ca92:	68d3      	ldr	r3, [r2, #12]
    ca94:	6892      	ldr	r2, [r2, #8]
    ca96:	60d3      	str	r3, [r2, #12]
    ca98:	609a      	str	r2, [r3, #8]
    ca9a:	4653      	mov	r3, sl
    ca9c:	4652      	mov	r2, sl
    ca9e:	4655      	mov	r5, sl
    caa0:	6892      	ldr	r2, [r2, #8]
    caa2:	68db      	ldr	r3, [r3, #12]
    caa4:	3508      	adds	r5, #8
    caa6:	60d3      	str	r3, [r2, #12]
    caa8:	609a      	str	r2, [r3, #8]
    caaa:	1f22      	subs	r2, r4, #4
    caac:	2a24      	cmp	r2, #36	; 0x24
    caae:	d900      	bls.n	cab2 <_realloc_r+0x1a2>
    cab0:	e096      	b.n	cbe0 <_realloc_r+0x2d0>
    cab2:	2a13      	cmp	r2, #19
    cab4:	d972      	bls.n	cb9c <_realloc_r+0x28c>
    cab6:	4653      	mov	r3, sl
    cab8:	6831      	ldr	r1, [r6, #0]
    caba:	6099      	str	r1, [r3, #8]
    cabc:	6871      	ldr	r1, [r6, #4]
    cabe:	60d9      	str	r1, [r3, #12]
    cac0:	2a1b      	cmp	r2, #27
    cac2:	d900      	bls.n	cac6 <_realloc_r+0x1b6>
    cac4:	e0a4      	b.n	cc10 <_realloc_r+0x300>
    cac6:	0032      	movs	r2, r6
    cac8:	3310      	adds	r3, #16
    caca:	3208      	adds	r2, #8
    cacc:	e068      	b.n	cba0 <_realloc_r+0x290>
    cace:	683a      	ldr	r2, [r7, #0]
    cad0:	1aba      	subs	r2, r7, r2
    cad2:	4692      	mov	sl, r2
    cad4:	4651      	mov	r1, sl
    cad6:	2203      	movs	r2, #3
    cad8:	6849      	ldr	r1, [r1, #4]
    cada:	4391      	bics	r1, r2
    cadc:	000a      	movs	r2, r1
    cade:	4693      	mov	fp, r2
    cae0:	44a3      	add	fp, r4
    cae2:	459b      	cmp	fp, r3
    cae4:	da00      	bge.n	cae8 <_realloc_r+0x1d8>
    cae6:	e74f      	b.n	c988 <_realloc_r+0x78>
    cae8:	e7d7      	b.n	ca9a <_realloc_r+0x18a>
    caea:	2003      	movs	r0, #3
    caec:	9902      	ldr	r1, [sp, #8]
    caee:	4684      	mov	ip, r0
    caf0:	6849      	ldr	r1, [r1, #4]
    caf2:	4381      	bics	r1, r0
    caf4:	4640      	mov	r0, r8
    caf6:	1909      	adds	r1, r1, r4
    caf8:	3010      	adds	r0, #16
    cafa:	9002      	str	r0, [sp, #8]
    cafc:	4281      	cmp	r1, r0
    cafe:	da58      	bge.n	cbb2 <_realloc_r+0x2a2>
    cb00:	07d2      	lsls	r2, r2, #31
    cb02:	d500      	bpl.n	cb06 <_realloc_r+0x1f6>
    cb04:	e740      	b.n	c988 <_realloc_r+0x78>
    cb06:	4660      	mov	r0, ip
    cb08:	683a      	ldr	r2, [r7, #0]
    cb0a:	1aba      	subs	r2, r7, r2
    cb0c:	4692      	mov	sl, r2
    cb0e:	6852      	ldr	r2, [r2, #4]
    cb10:	4382      	bics	r2, r0
    cb12:	9802      	ldr	r0, [sp, #8]
    cb14:	1851      	adds	r1, r2, r1
    cb16:	9103      	str	r1, [sp, #12]
    cb18:	4288      	cmp	r0, r1
    cb1a:	dce0      	bgt.n	cade <_realloc_r+0x1ce>
    cb1c:	4653      	mov	r3, sl
    cb1e:	4652      	mov	r2, sl
    cb20:	4655      	mov	r5, sl
    cb22:	6892      	ldr	r2, [r2, #8]
    cb24:	68db      	ldr	r3, [r3, #12]
    cb26:	3508      	adds	r5, #8
    cb28:	60d3      	str	r3, [r2, #12]
    cb2a:	609a      	str	r2, [r3, #8]
    cb2c:	1f22      	subs	r2, r4, #4
    cb2e:	2a24      	cmp	r2, #36	; 0x24
    cb30:	d900      	bls.n	cb34 <_realloc_r+0x224>
    cb32:	e08e      	b.n	cc52 <_realloc_r+0x342>
    cb34:	2a13      	cmp	r2, #19
    cb36:	d800      	bhi.n	cb3a <_realloc_r+0x22a>
    cb38:	e088      	b.n	cc4c <_realloc_r+0x33c>
    cb3a:	4653      	mov	r3, sl
    cb3c:	6831      	ldr	r1, [r6, #0]
    cb3e:	6099      	str	r1, [r3, #8]
    cb40:	6871      	ldr	r1, [r6, #4]
    cb42:	60d9      	str	r1, [r3, #12]
    cb44:	2a1b      	cmp	r2, #27
    cb46:	d900      	bls.n	cb4a <_realloc_r+0x23a>
    cb48:	e088      	b.n	cc5c <_realloc_r+0x34c>
    cb4a:	0032      	movs	r2, r6
    cb4c:	3310      	adds	r3, #16
    cb4e:	3208      	adds	r2, #8
    cb50:	6811      	ldr	r1, [r2, #0]
    cb52:	6019      	str	r1, [r3, #0]
    cb54:	6851      	ldr	r1, [r2, #4]
    cb56:	6059      	str	r1, [r3, #4]
    cb58:	6892      	ldr	r2, [r2, #8]
    cb5a:	609a      	str	r2, [r3, #8]
    cb5c:	4651      	mov	r1, sl
    cb5e:	465b      	mov	r3, fp
    cb60:	4642      	mov	r2, r8
    cb62:	4441      	add	r1, r8
    cb64:	6099      	str	r1, [r3, #8]
    cb66:	9b03      	ldr	r3, [sp, #12]
    cb68:	9801      	ldr	r0, [sp, #4]
    cb6a:	1a9a      	subs	r2, r3, r2
    cb6c:	2301      	movs	r3, #1
    cb6e:	431a      	orrs	r2, r3
    cb70:	604a      	str	r2, [r1, #4]
    cb72:	4652      	mov	r2, sl
    cb74:	6852      	ldr	r2, [r2, #4]
    cb76:	4013      	ands	r3, r2
    cb78:	4642      	mov	r2, r8
    cb7a:	4313      	orrs	r3, r2
    cb7c:	4652      	mov	r2, sl
    cb7e:	6053      	str	r3, [r2, #4]
    cb80:	f7fd f93e 	bl	9e00 <__malloc_unlock>
    cb84:	e743      	b.n	ca0e <_realloc_r+0xfe>
    cb86:	6833      	ldr	r3, [r6, #0]
    cb88:	6003      	str	r3, [r0, #0]
    cb8a:	6873      	ldr	r3, [r6, #4]
    cb8c:	6043      	str	r3, [r0, #4]
    cb8e:	2a1b      	cmp	r2, #27
    cb90:	d82d      	bhi.n	cbee <_realloc_r+0x2de>
    cb92:	0003      	movs	r3, r0
    cb94:	0032      	movs	r2, r6
    cb96:	3308      	adds	r3, #8
    cb98:	3208      	adds	r2, #8
    cb9a:	e70d      	b.n	c9b8 <_realloc_r+0xa8>
    cb9c:	002b      	movs	r3, r5
    cb9e:	0032      	movs	r2, r6
    cba0:	6811      	ldr	r1, [r2, #0]
    cba2:	465c      	mov	r4, fp
    cba4:	6019      	str	r1, [r3, #0]
    cba6:	6851      	ldr	r1, [r2, #4]
    cba8:	46d1      	mov	r9, sl
    cbaa:	6059      	str	r1, [r3, #4]
    cbac:	6892      	ldr	r2, [r2, #8]
    cbae:	609a      	str	r2, [r3, #8]
    cbb0:	e71b      	b.n	c9ea <_realloc_r+0xda>
    cbb2:	4643      	mov	r3, r8
    cbb4:	18fa      	adds	r2, r7, r3
    cbb6:	465b      	mov	r3, fp
    cbb8:	609a      	str	r2, [r3, #8]
    cbba:	4643      	mov	r3, r8
    cbbc:	1ac9      	subs	r1, r1, r3
    cbbe:	2301      	movs	r3, #1
    cbc0:	4319      	orrs	r1, r3
    cbc2:	6051      	str	r1, [r2, #4]
    cbc4:	687a      	ldr	r2, [r7, #4]
    cbc6:	9801      	ldr	r0, [sp, #4]
    cbc8:	4013      	ands	r3, r2
    cbca:	4642      	mov	r2, r8
    cbcc:	4313      	orrs	r3, r2
    cbce:	607b      	str	r3, [r7, #4]
    cbd0:	f7fd f916 	bl	9e00 <__malloc_unlock>
    cbd4:	0035      	movs	r5, r6
    cbd6:	e71a      	b.n	ca0e <_realloc_r+0xfe>
    cbd8:	0031      	movs	r1, r6
    cbda:	f7ff fe49 	bl	c870 <memmove>
    cbde:	e6f1      	b.n	c9c4 <_realloc_r+0xb4>
    cbe0:	0031      	movs	r1, r6
    cbe2:	0028      	movs	r0, r5
    cbe4:	f7ff fe44 	bl	c870 <memmove>
    cbe8:	465c      	mov	r4, fp
    cbea:	46d1      	mov	r9, sl
    cbec:	e6fd      	b.n	c9ea <_realloc_r+0xda>
    cbee:	68b3      	ldr	r3, [r6, #8]
    cbf0:	6083      	str	r3, [r0, #8]
    cbf2:	68f3      	ldr	r3, [r6, #12]
    cbf4:	60c3      	str	r3, [r0, #12]
    cbf6:	2a24      	cmp	r2, #36	; 0x24
    cbf8:	d015      	beq.n	cc26 <_realloc_r+0x316>
    cbfa:	0003      	movs	r3, r0
    cbfc:	0032      	movs	r2, r6
    cbfe:	3310      	adds	r3, #16
    cc00:	3210      	adds	r2, #16
    cc02:	e6d9      	b.n	c9b8 <_realloc_r+0xa8>
    cc04:	6853      	ldr	r3, [r2, #4]
    cc06:	2203      	movs	r2, #3
    cc08:	4393      	bics	r3, r2
    cc0a:	18e4      	adds	r4, r4, r3
    cc0c:	0035      	movs	r5, r6
    cc0e:	e6ec      	b.n	c9ea <_realloc_r+0xda>
    cc10:	4653      	mov	r3, sl
    cc12:	68b1      	ldr	r1, [r6, #8]
    cc14:	6119      	str	r1, [r3, #16]
    cc16:	68f1      	ldr	r1, [r6, #12]
    cc18:	6159      	str	r1, [r3, #20]
    cc1a:	2a24      	cmp	r2, #36	; 0x24
    cc1c:	d00c      	beq.n	cc38 <_realloc_r+0x328>
    cc1e:	0032      	movs	r2, r6
    cc20:	3318      	adds	r3, #24
    cc22:	3210      	adds	r2, #16
    cc24:	e7bc      	b.n	cba0 <_realloc_r+0x290>
    cc26:	6933      	ldr	r3, [r6, #16]
    cc28:	0032      	movs	r2, r6
    cc2a:	6103      	str	r3, [r0, #16]
    cc2c:	0003      	movs	r3, r0
    cc2e:	6971      	ldr	r1, [r6, #20]
    cc30:	3318      	adds	r3, #24
    cc32:	3218      	adds	r2, #24
    cc34:	6141      	str	r1, [r0, #20]
    cc36:	e6bf      	b.n	c9b8 <_realloc_r+0xa8>
    cc38:	4653      	mov	r3, sl
    cc3a:	6932      	ldr	r2, [r6, #16]
    cc3c:	4651      	mov	r1, sl
    cc3e:	619a      	str	r2, [r3, #24]
    cc40:	0032      	movs	r2, r6
    cc42:	6970      	ldr	r0, [r6, #20]
    cc44:	3320      	adds	r3, #32
    cc46:	3218      	adds	r2, #24
    cc48:	61c8      	str	r0, [r1, #28]
    cc4a:	e7a9      	b.n	cba0 <_realloc_r+0x290>
    cc4c:	002b      	movs	r3, r5
    cc4e:	0032      	movs	r2, r6
    cc50:	e77e      	b.n	cb50 <_realloc_r+0x240>
    cc52:	0031      	movs	r1, r6
    cc54:	0028      	movs	r0, r5
    cc56:	f7ff fe0b 	bl	c870 <memmove>
    cc5a:	e77f      	b.n	cb5c <_realloc_r+0x24c>
    cc5c:	4653      	mov	r3, sl
    cc5e:	68b1      	ldr	r1, [r6, #8]
    cc60:	6119      	str	r1, [r3, #16]
    cc62:	68f1      	ldr	r1, [r6, #12]
    cc64:	6159      	str	r1, [r3, #20]
    cc66:	2a24      	cmp	r2, #36	; 0x24
    cc68:	d003      	beq.n	cc72 <_realloc_r+0x362>
    cc6a:	0032      	movs	r2, r6
    cc6c:	3318      	adds	r3, #24
    cc6e:	3210      	adds	r2, #16
    cc70:	e76e      	b.n	cb50 <_realloc_r+0x240>
    cc72:	4653      	mov	r3, sl
    cc74:	6932      	ldr	r2, [r6, #16]
    cc76:	4651      	mov	r1, sl
    cc78:	619a      	str	r2, [r3, #24]
    cc7a:	0032      	movs	r2, r6
    cc7c:	6970      	ldr	r0, [r6, #20]
    cc7e:	3320      	adds	r3, #32
    cc80:	3218      	adds	r2, #24
    cc82:	61c8      	str	r0, [r1, #28]
    cc84:	e764      	b.n	cb50 <_realloc_r+0x240>
    cc86:	46c0      	nop			; (mov r8, r8)
    cc88:	20000638 	.word	0x20000638

0000cc8c <strncmp>:
    cc8c:	b530      	push	{r4, r5, lr}
    cc8e:	2400      	movs	r4, #0
    cc90:	2a00      	cmp	r2, #0
    cc92:	d039      	beq.n	cd08 <strncmp+0x7c>
    cc94:	0003      	movs	r3, r0
    cc96:	430b      	orrs	r3, r1
    cc98:	079b      	lsls	r3, r3, #30
    cc9a:	d120      	bne.n	ccde <strncmp+0x52>
    cc9c:	2a03      	cmp	r2, #3
    cc9e:	d91e      	bls.n	ccde <strncmp+0x52>
    cca0:	6803      	ldr	r3, [r0, #0]
    cca2:	680d      	ldr	r5, [r1, #0]
    cca4:	42ab      	cmp	r3, r5
    cca6:	d11a      	bne.n	ccde <strncmp+0x52>
    cca8:	3a04      	subs	r2, #4
    ccaa:	2a00      	cmp	r2, #0
    ccac:	d02c      	beq.n	cd08 <strncmp+0x7c>
    ccae:	4d1a      	ldr	r5, [pc, #104]	; (cd18 <strncmp+0x8c>)
    ccb0:	195d      	adds	r5, r3, r5
    ccb2:	439d      	bics	r5, r3
    ccb4:	002b      	movs	r3, r5
    ccb6:	4d19      	ldr	r5, [pc, #100]	; (cd1c <strncmp+0x90>)
    ccb8:	422b      	tst	r3, r5
    ccba:	d00c      	beq.n	ccd6 <strncmp+0x4a>
    ccbc:	e024      	b.n	cd08 <strncmp+0x7c>
    ccbe:	6803      	ldr	r3, [r0, #0]
    ccc0:	680c      	ldr	r4, [r1, #0]
    ccc2:	42a3      	cmp	r3, r4
    ccc4:	d10b      	bne.n	ccde <strncmp+0x52>
    ccc6:	3a04      	subs	r2, #4
    ccc8:	2a00      	cmp	r2, #0
    ccca:	d01f      	beq.n	cd0c <strncmp+0x80>
    cccc:	4c12      	ldr	r4, [pc, #72]	; (cd18 <strncmp+0x8c>)
    ccce:	191c      	adds	r4, r3, r4
    ccd0:	439c      	bics	r4, r3
    ccd2:	422c      	tst	r4, r5
    ccd4:	d11a      	bne.n	cd0c <strncmp+0x80>
    ccd6:	3004      	adds	r0, #4
    ccd8:	3104      	adds	r1, #4
    ccda:	2a03      	cmp	r2, #3
    ccdc:	d8ef      	bhi.n	ccbe <strncmp+0x32>
    ccde:	7803      	ldrb	r3, [r0, #0]
    cce0:	780d      	ldrb	r5, [r1, #0]
    cce2:	3a01      	subs	r2, #1
    cce4:	429d      	cmp	r5, r3
    cce6:	d113      	bne.n	cd10 <strncmp+0x84>
    cce8:	2a00      	cmp	r2, #0
    ccea:	d00f      	beq.n	cd0c <strncmp+0x80>
    ccec:	2d00      	cmp	r5, #0
    ccee:	d00d      	beq.n	cd0c <strncmp+0x80>
    ccf0:	2301      	movs	r3, #1
    ccf2:	e004      	b.n	ccfe <strncmp+0x72>
    ccf4:	429a      	cmp	r2, r3
    ccf6:	d009      	beq.n	cd0c <strncmp+0x80>
    ccf8:	3301      	adds	r3, #1
    ccfa:	2c00      	cmp	r4, #0
    ccfc:	d006      	beq.n	cd0c <strncmp+0x80>
    ccfe:	5cc4      	ldrb	r4, [r0, r3]
    cd00:	5ccd      	ldrb	r5, [r1, r3]
    cd02:	42ac      	cmp	r4, r5
    cd04:	d0f6      	beq.n	ccf4 <strncmp+0x68>
    cd06:	1b64      	subs	r4, r4, r5
    cd08:	0020      	movs	r0, r4
    cd0a:	bd30      	pop	{r4, r5, pc}
    cd0c:	2400      	movs	r4, #0
    cd0e:	e7fb      	b.n	cd08 <strncmp+0x7c>
    cd10:	001c      	movs	r4, r3
    cd12:	1b64      	subs	r4, r4, r5
    cd14:	e7f8      	b.n	cd08 <strncmp+0x7c>
    cd16:	46c0      	nop			; (mov r8, r8)
    cd18:	fefefeff 	.word	0xfefefeff
    cd1c:	80808080 	.word	0x80808080

0000cd20 <__aeabi_dadd>:
    cd20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    cd22:	4645      	mov	r5, r8
    cd24:	46de      	mov	lr, fp
    cd26:	4657      	mov	r7, sl
    cd28:	464e      	mov	r6, r9
    cd2a:	030c      	lsls	r4, r1, #12
    cd2c:	b5e0      	push	{r5, r6, r7, lr}
    cd2e:	004e      	lsls	r6, r1, #1
    cd30:	0fc9      	lsrs	r1, r1, #31
    cd32:	4688      	mov	r8, r1
    cd34:	000d      	movs	r5, r1
    cd36:	0a61      	lsrs	r1, r4, #9
    cd38:	0f44      	lsrs	r4, r0, #29
    cd3a:	430c      	orrs	r4, r1
    cd3c:	00c7      	lsls	r7, r0, #3
    cd3e:	0319      	lsls	r1, r3, #12
    cd40:	0058      	lsls	r0, r3, #1
    cd42:	0fdb      	lsrs	r3, r3, #31
    cd44:	469b      	mov	fp, r3
    cd46:	0a4b      	lsrs	r3, r1, #9
    cd48:	0f51      	lsrs	r1, r2, #29
    cd4a:	430b      	orrs	r3, r1
    cd4c:	0d76      	lsrs	r6, r6, #21
    cd4e:	0d40      	lsrs	r0, r0, #21
    cd50:	0019      	movs	r1, r3
    cd52:	00d2      	lsls	r2, r2, #3
    cd54:	45d8      	cmp	r8, fp
    cd56:	d100      	bne.n	cd5a <__aeabi_dadd+0x3a>
    cd58:	e0ae      	b.n	ceb8 <__aeabi_dadd+0x198>
    cd5a:	1a35      	subs	r5, r6, r0
    cd5c:	2d00      	cmp	r5, #0
    cd5e:	dc00      	bgt.n	cd62 <__aeabi_dadd+0x42>
    cd60:	e0f6      	b.n	cf50 <__aeabi_dadd+0x230>
    cd62:	2800      	cmp	r0, #0
    cd64:	d10f      	bne.n	cd86 <__aeabi_dadd+0x66>
    cd66:	4313      	orrs	r3, r2
    cd68:	d100      	bne.n	cd6c <__aeabi_dadd+0x4c>
    cd6a:	e0db      	b.n	cf24 <__aeabi_dadd+0x204>
    cd6c:	1e6b      	subs	r3, r5, #1
    cd6e:	2b00      	cmp	r3, #0
    cd70:	d000      	beq.n	cd74 <__aeabi_dadd+0x54>
    cd72:	e137      	b.n	cfe4 <__aeabi_dadd+0x2c4>
    cd74:	1aba      	subs	r2, r7, r2
    cd76:	4297      	cmp	r7, r2
    cd78:	41bf      	sbcs	r7, r7
    cd7a:	1a64      	subs	r4, r4, r1
    cd7c:	427f      	negs	r7, r7
    cd7e:	1be4      	subs	r4, r4, r7
    cd80:	2601      	movs	r6, #1
    cd82:	0017      	movs	r7, r2
    cd84:	e024      	b.n	cdd0 <__aeabi_dadd+0xb0>
    cd86:	4bc6      	ldr	r3, [pc, #792]	; (d0a0 <__aeabi_dadd+0x380>)
    cd88:	429e      	cmp	r6, r3
    cd8a:	d04d      	beq.n	ce28 <__aeabi_dadd+0x108>
    cd8c:	2380      	movs	r3, #128	; 0x80
    cd8e:	041b      	lsls	r3, r3, #16
    cd90:	4319      	orrs	r1, r3
    cd92:	2d38      	cmp	r5, #56	; 0x38
    cd94:	dd00      	ble.n	cd98 <__aeabi_dadd+0x78>
    cd96:	e107      	b.n	cfa8 <__aeabi_dadd+0x288>
    cd98:	2d1f      	cmp	r5, #31
    cd9a:	dd00      	ble.n	cd9e <__aeabi_dadd+0x7e>
    cd9c:	e138      	b.n	d010 <__aeabi_dadd+0x2f0>
    cd9e:	2020      	movs	r0, #32
    cda0:	1b43      	subs	r3, r0, r5
    cda2:	469a      	mov	sl, r3
    cda4:	000b      	movs	r3, r1
    cda6:	4650      	mov	r0, sl
    cda8:	4083      	lsls	r3, r0
    cdaa:	4699      	mov	r9, r3
    cdac:	0013      	movs	r3, r2
    cdae:	4648      	mov	r0, r9
    cdb0:	40eb      	lsrs	r3, r5
    cdb2:	4318      	orrs	r0, r3
    cdb4:	0003      	movs	r3, r0
    cdb6:	4650      	mov	r0, sl
    cdb8:	4082      	lsls	r2, r0
    cdba:	1e50      	subs	r0, r2, #1
    cdbc:	4182      	sbcs	r2, r0
    cdbe:	40e9      	lsrs	r1, r5
    cdc0:	431a      	orrs	r2, r3
    cdc2:	1aba      	subs	r2, r7, r2
    cdc4:	1a61      	subs	r1, r4, r1
    cdc6:	4297      	cmp	r7, r2
    cdc8:	41a4      	sbcs	r4, r4
    cdca:	0017      	movs	r7, r2
    cdcc:	4264      	negs	r4, r4
    cdce:	1b0c      	subs	r4, r1, r4
    cdd0:	0223      	lsls	r3, r4, #8
    cdd2:	d562      	bpl.n	ce9a <__aeabi_dadd+0x17a>
    cdd4:	0264      	lsls	r4, r4, #9
    cdd6:	0a65      	lsrs	r5, r4, #9
    cdd8:	2d00      	cmp	r5, #0
    cdda:	d100      	bne.n	cdde <__aeabi_dadd+0xbe>
    cddc:	e0df      	b.n	cf9e <__aeabi_dadd+0x27e>
    cdde:	0028      	movs	r0, r5
    cde0:	f7f8 fa52 	bl	5288 <__clzsi2>
    cde4:	0003      	movs	r3, r0
    cde6:	3b08      	subs	r3, #8
    cde8:	2b1f      	cmp	r3, #31
    cdea:	dd00      	ble.n	cdee <__aeabi_dadd+0xce>
    cdec:	e0d2      	b.n	cf94 <__aeabi_dadd+0x274>
    cdee:	2220      	movs	r2, #32
    cdf0:	003c      	movs	r4, r7
    cdf2:	1ad2      	subs	r2, r2, r3
    cdf4:	409d      	lsls	r5, r3
    cdf6:	40d4      	lsrs	r4, r2
    cdf8:	409f      	lsls	r7, r3
    cdfa:	4325      	orrs	r5, r4
    cdfc:	429e      	cmp	r6, r3
    cdfe:	dd00      	ble.n	ce02 <__aeabi_dadd+0xe2>
    ce00:	e0c4      	b.n	cf8c <__aeabi_dadd+0x26c>
    ce02:	1b9e      	subs	r6, r3, r6
    ce04:	1c73      	adds	r3, r6, #1
    ce06:	2b1f      	cmp	r3, #31
    ce08:	dd00      	ble.n	ce0c <__aeabi_dadd+0xec>
    ce0a:	e0f1      	b.n	cff0 <__aeabi_dadd+0x2d0>
    ce0c:	2220      	movs	r2, #32
    ce0e:	0038      	movs	r0, r7
    ce10:	0029      	movs	r1, r5
    ce12:	1ad2      	subs	r2, r2, r3
    ce14:	40d8      	lsrs	r0, r3
    ce16:	4091      	lsls	r1, r2
    ce18:	4097      	lsls	r7, r2
    ce1a:	002c      	movs	r4, r5
    ce1c:	4301      	orrs	r1, r0
    ce1e:	1e78      	subs	r0, r7, #1
    ce20:	4187      	sbcs	r7, r0
    ce22:	40dc      	lsrs	r4, r3
    ce24:	2600      	movs	r6, #0
    ce26:	430f      	orrs	r7, r1
    ce28:	077b      	lsls	r3, r7, #29
    ce2a:	d009      	beq.n	ce40 <__aeabi_dadd+0x120>
    ce2c:	230f      	movs	r3, #15
    ce2e:	403b      	ands	r3, r7
    ce30:	2b04      	cmp	r3, #4
    ce32:	d005      	beq.n	ce40 <__aeabi_dadd+0x120>
    ce34:	1d3b      	adds	r3, r7, #4
    ce36:	42bb      	cmp	r3, r7
    ce38:	41bf      	sbcs	r7, r7
    ce3a:	427f      	negs	r7, r7
    ce3c:	19e4      	adds	r4, r4, r7
    ce3e:	001f      	movs	r7, r3
    ce40:	0223      	lsls	r3, r4, #8
    ce42:	d52c      	bpl.n	ce9e <__aeabi_dadd+0x17e>
    ce44:	4b96      	ldr	r3, [pc, #600]	; (d0a0 <__aeabi_dadd+0x380>)
    ce46:	3601      	adds	r6, #1
    ce48:	429e      	cmp	r6, r3
    ce4a:	d100      	bne.n	ce4e <__aeabi_dadd+0x12e>
    ce4c:	e09a      	b.n	cf84 <__aeabi_dadd+0x264>
    ce4e:	4645      	mov	r5, r8
    ce50:	4b94      	ldr	r3, [pc, #592]	; (d0a4 <__aeabi_dadd+0x384>)
    ce52:	08ff      	lsrs	r7, r7, #3
    ce54:	401c      	ands	r4, r3
    ce56:	0760      	lsls	r0, r4, #29
    ce58:	0576      	lsls	r6, r6, #21
    ce5a:	0264      	lsls	r4, r4, #9
    ce5c:	4307      	orrs	r7, r0
    ce5e:	0b24      	lsrs	r4, r4, #12
    ce60:	0d76      	lsrs	r6, r6, #21
    ce62:	2100      	movs	r1, #0
    ce64:	0324      	lsls	r4, r4, #12
    ce66:	0b23      	lsrs	r3, r4, #12
    ce68:	0d0c      	lsrs	r4, r1, #20
    ce6a:	4a8f      	ldr	r2, [pc, #572]	; (d0a8 <__aeabi_dadd+0x388>)
    ce6c:	0524      	lsls	r4, r4, #20
    ce6e:	431c      	orrs	r4, r3
    ce70:	4014      	ands	r4, r2
    ce72:	0533      	lsls	r3, r6, #20
    ce74:	4323      	orrs	r3, r4
    ce76:	005b      	lsls	r3, r3, #1
    ce78:	07ed      	lsls	r5, r5, #31
    ce7a:	085b      	lsrs	r3, r3, #1
    ce7c:	432b      	orrs	r3, r5
    ce7e:	0038      	movs	r0, r7
    ce80:	0019      	movs	r1, r3
    ce82:	bc3c      	pop	{r2, r3, r4, r5}
    ce84:	4690      	mov	r8, r2
    ce86:	4699      	mov	r9, r3
    ce88:	46a2      	mov	sl, r4
    ce8a:	46ab      	mov	fp, r5
    ce8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ce8e:	4664      	mov	r4, ip
    ce90:	4304      	orrs	r4, r0
    ce92:	d100      	bne.n	ce96 <__aeabi_dadd+0x176>
    ce94:	e211      	b.n	d2ba <__aeabi_dadd+0x59a>
    ce96:	0004      	movs	r4, r0
    ce98:	4667      	mov	r7, ip
    ce9a:	077b      	lsls	r3, r7, #29
    ce9c:	d1c6      	bne.n	ce2c <__aeabi_dadd+0x10c>
    ce9e:	4645      	mov	r5, r8
    cea0:	0760      	lsls	r0, r4, #29
    cea2:	08ff      	lsrs	r7, r7, #3
    cea4:	4307      	orrs	r7, r0
    cea6:	08e4      	lsrs	r4, r4, #3
    cea8:	4b7d      	ldr	r3, [pc, #500]	; (d0a0 <__aeabi_dadd+0x380>)
    ceaa:	429e      	cmp	r6, r3
    ceac:	d030      	beq.n	cf10 <__aeabi_dadd+0x1f0>
    ceae:	0324      	lsls	r4, r4, #12
    ceb0:	0576      	lsls	r6, r6, #21
    ceb2:	0b24      	lsrs	r4, r4, #12
    ceb4:	0d76      	lsrs	r6, r6, #21
    ceb6:	e7d4      	b.n	ce62 <__aeabi_dadd+0x142>
    ceb8:	1a33      	subs	r3, r6, r0
    ceba:	469a      	mov	sl, r3
    cebc:	2b00      	cmp	r3, #0
    cebe:	dd78      	ble.n	cfb2 <__aeabi_dadd+0x292>
    cec0:	2800      	cmp	r0, #0
    cec2:	d031      	beq.n	cf28 <__aeabi_dadd+0x208>
    cec4:	4876      	ldr	r0, [pc, #472]	; (d0a0 <__aeabi_dadd+0x380>)
    cec6:	4286      	cmp	r6, r0
    cec8:	d0ae      	beq.n	ce28 <__aeabi_dadd+0x108>
    ceca:	2080      	movs	r0, #128	; 0x80
    cecc:	0400      	lsls	r0, r0, #16
    cece:	4301      	orrs	r1, r0
    ced0:	4653      	mov	r3, sl
    ced2:	2b38      	cmp	r3, #56	; 0x38
    ced4:	dc00      	bgt.n	ced8 <__aeabi_dadd+0x1b8>
    ced6:	e0e9      	b.n	d0ac <__aeabi_dadd+0x38c>
    ced8:	430a      	orrs	r2, r1
    ceda:	1e51      	subs	r1, r2, #1
    cedc:	418a      	sbcs	r2, r1
    cede:	2100      	movs	r1, #0
    cee0:	19d2      	adds	r2, r2, r7
    cee2:	42ba      	cmp	r2, r7
    cee4:	41bf      	sbcs	r7, r7
    cee6:	1909      	adds	r1, r1, r4
    cee8:	427c      	negs	r4, r7
    ceea:	0017      	movs	r7, r2
    ceec:	190c      	adds	r4, r1, r4
    ceee:	0223      	lsls	r3, r4, #8
    cef0:	d5d3      	bpl.n	ce9a <__aeabi_dadd+0x17a>
    cef2:	4b6b      	ldr	r3, [pc, #428]	; (d0a0 <__aeabi_dadd+0x380>)
    cef4:	3601      	adds	r6, #1
    cef6:	429e      	cmp	r6, r3
    cef8:	d100      	bne.n	cefc <__aeabi_dadd+0x1dc>
    cefa:	e13a      	b.n	d172 <__aeabi_dadd+0x452>
    cefc:	2001      	movs	r0, #1
    cefe:	4b69      	ldr	r3, [pc, #420]	; (d0a4 <__aeabi_dadd+0x384>)
    cf00:	401c      	ands	r4, r3
    cf02:	087b      	lsrs	r3, r7, #1
    cf04:	4007      	ands	r7, r0
    cf06:	431f      	orrs	r7, r3
    cf08:	07e0      	lsls	r0, r4, #31
    cf0a:	4307      	orrs	r7, r0
    cf0c:	0864      	lsrs	r4, r4, #1
    cf0e:	e78b      	b.n	ce28 <__aeabi_dadd+0x108>
    cf10:	0023      	movs	r3, r4
    cf12:	433b      	orrs	r3, r7
    cf14:	d100      	bne.n	cf18 <__aeabi_dadd+0x1f8>
    cf16:	e1cb      	b.n	d2b0 <__aeabi_dadd+0x590>
    cf18:	2280      	movs	r2, #128	; 0x80
    cf1a:	0312      	lsls	r2, r2, #12
    cf1c:	4314      	orrs	r4, r2
    cf1e:	0324      	lsls	r4, r4, #12
    cf20:	0b24      	lsrs	r4, r4, #12
    cf22:	e79e      	b.n	ce62 <__aeabi_dadd+0x142>
    cf24:	002e      	movs	r6, r5
    cf26:	e77f      	b.n	ce28 <__aeabi_dadd+0x108>
    cf28:	0008      	movs	r0, r1
    cf2a:	4310      	orrs	r0, r2
    cf2c:	d100      	bne.n	cf30 <__aeabi_dadd+0x210>
    cf2e:	e0b4      	b.n	d09a <__aeabi_dadd+0x37a>
    cf30:	1e58      	subs	r0, r3, #1
    cf32:	2800      	cmp	r0, #0
    cf34:	d000      	beq.n	cf38 <__aeabi_dadd+0x218>
    cf36:	e0de      	b.n	d0f6 <__aeabi_dadd+0x3d6>
    cf38:	18ba      	adds	r2, r7, r2
    cf3a:	42ba      	cmp	r2, r7
    cf3c:	419b      	sbcs	r3, r3
    cf3e:	1864      	adds	r4, r4, r1
    cf40:	425b      	negs	r3, r3
    cf42:	18e4      	adds	r4, r4, r3
    cf44:	0017      	movs	r7, r2
    cf46:	2601      	movs	r6, #1
    cf48:	0223      	lsls	r3, r4, #8
    cf4a:	d5a6      	bpl.n	ce9a <__aeabi_dadd+0x17a>
    cf4c:	2602      	movs	r6, #2
    cf4e:	e7d5      	b.n	cefc <__aeabi_dadd+0x1dc>
    cf50:	2d00      	cmp	r5, #0
    cf52:	d16e      	bne.n	d032 <__aeabi_dadd+0x312>
    cf54:	1c70      	adds	r0, r6, #1
    cf56:	0540      	lsls	r0, r0, #21
    cf58:	0d40      	lsrs	r0, r0, #21
    cf5a:	2801      	cmp	r0, #1
    cf5c:	dc00      	bgt.n	cf60 <__aeabi_dadd+0x240>
    cf5e:	e0f9      	b.n	d154 <__aeabi_dadd+0x434>
    cf60:	1ab8      	subs	r0, r7, r2
    cf62:	4684      	mov	ip, r0
    cf64:	4287      	cmp	r7, r0
    cf66:	4180      	sbcs	r0, r0
    cf68:	1ae5      	subs	r5, r4, r3
    cf6a:	4240      	negs	r0, r0
    cf6c:	1a2d      	subs	r5, r5, r0
    cf6e:	0228      	lsls	r0, r5, #8
    cf70:	d400      	bmi.n	cf74 <__aeabi_dadd+0x254>
    cf72:	e089      	b.n	d088 <__aeabi_dadd+0x368>
    cf74:	1bd7      	subs	r7, r2, r7
    cf76:	42ba      	cmp	r2, r7
    cf78:	4192      	sbcs	r2, r2
    cf7a:	1b1c      	subs	r4, r3, r4
    cf7c:	4252      	negs	r2, r2
    cf7e:	1aa5      	subs	r5, r4, r2
    cf80:	46d8      	mov	r8, fp
    cf82:	e729      	b.n	cdd8 <__aeabi_dadd+0xb8>
    cf84:	4645      	mov	r5, r8
    cf86:	2400      	movs	r4, #0
    cf88:	2700      	movs	r7, #0
    cf8a:	e76a      	b.n	ce62 <__aeabi_dadd+0x142>
    cf8c:	4c45      	ldr	r4, [pc, #276]	; (d0a4 <__aeabi_dadd+0x384>)
    cf8e:	1af6      	subs	r6, r6, r3
    cf90:	402c      	ands	r4, r5
    cf92:	e749      	b.n	ce28 <__aeabi_dadd+0x108>
    cf94:	003d      	movs	r5, r7
    cf96:	3828      	subs	r0, #40	; 0x28
    cf98:	4085      	lsls	r5, r0
    cf9a:	2700      	movs	r7, #0
    cf9c:	e72e      	b.n	cdfc <__aeabi_dadd+0xdc>
    cf9e:	0038      	movs	r0, r7
    cfa0:	f7f8 f972 	bl	5288 <__clzsi2>
    cfa4:	3020      	adds	r0, #32
    cfa6:	e71d      	b.n	cde4 <__aeabi_dadd+0xc4>
    cfa8:	430a      	orrs	r2, r1
    cfaa:	1e51      	subs	r1, r2, #1
    cfac:	418a      	sbcs	r2, r1
    cfae:	2100      	movs	r1, #0
    cfb0:	e707      	b.n	cdc2 <__aeabi_dadd+0xa2>
    cfb2:	2b00      	cmp	r3, #0
    cfb4:	d000      	beq.n	cfb8 <__aeabi_dadd+0x298>
    cfb6:	e0f3      	b.n	d1a0 <__aeabi_dadd+0x480>
    cfb8:	1c70      	adds	r0, r6, #1
    cfba:	0543      	lsls	r3, r0, #21
    cfbc:	0d5b      	lsrs	r3, r3, #21
    cfbe:	2b01      	cmp	r3, #1
    cfc0:	dc00      	bgt.n	cfc4 <__aeabi_dadd+0x2a4>
    cfc2:	e0ad      	b.n	d120 <__aeabi_dadd+0x400>
    cfc4:	4b36      	ldr	r3, [pc, #216]	; (d0a0 <__aeabi_dadd+0x380>)
    cfc6:	4298      	cmp	r0, r3
    cfc8:	d100      	bne.n	cfcc <__aeabi_dadd+0x2ac>
    cfca:	e0d1      	b.n	d170 <__aeabi_dadd+0x450>
    cfcc:	18ba      	adds	r2, r7, r2
    cfce:	42ba      	cmp	r2, r7
    cfd0:	41bf      	sbcs	r7, r7
    cfd2:	1864      	adds	r4, r4, r1
    cfd4:	427f      	negs	r7, r7
    cfd6:	19e4      	adds	r4, r4, r7
    cfd8:	07e7      	lsls	r7, r4, #31
    cfda:	0852      	lsrs	r2, r2, #1
    cfdc:	4317      	orrs	r7, r2
    cfde:	0864      	lsrs	r4, r4, #1
    cfe0:	0006      	movs	r6, r0
    cfe2:	e721      	b.n	ce28 <__aeabi_dadd+0x108>
    cfe4:	482e      	ldr	r0, [pc, #184]	; (d0a0 <__aeabi_dadd+0x380>)
    cfe6:	4285      	cmp	r5, r0
    cfe8:	d100      	bne.n	cfec <__aeabi_dadd+0x2cc>
    cfea:	e093      	b.n	d114 <__aeabi_dadd+0x3f4>
    cfec:	001d      	movs	r5, r3
    cfee:	e6d0      	b.n	cd92 <__aeabi_dadd+0x72>
    cff0:	0029      	movs	r1, r5
    cff2:	3e1f      	subs	r6, #31
    cff4:	40f1      	lsrs	r1, r6
    cff6:	2b20      	cmp	r3, #32
    cff8:	d100      	bne.n	cffc <__aeabi_dadd+0x2dc>
    cffa:	e08d      	b.n	d118 <__aeabi_dadd+0x3f8>
    cffc:	2240      	movs	r2, #64	; 0x40
    cffe:	1ad3      	subs	r3, r2, r3
    d000:	409d      	lsls	r5, r3
    d002:	432f      	orrs	r7, r5
    d004:	1e7d      	subs	r5, r7, #1
    d006:	41af      	sbcs	r7, r5
    d008:	2400      	movs	r4, #0
    d00a:	430f      	orrs	r7, r1
    d00c:	2600      	movs	r6, #0
    d00e:	e744      	b.n	ce9a <__aeabi_dadd+0x17a>
    d010:	002b      	movs	r3, r5
    d012:	0008      	movs	r0, r1
    d014:	3b20      	subs	r3, #32
    d016:	40d8      	lsrs	r0, r3
    d018:	0003      	movs	r3, r0
    d01a:	2d20      	cmp	r5, #32
    d01c:	d100      	bne.n	d020 <__aeabi_dadd+0x300>
    d01e:	e07d      	b.n	d11c <__aeabi_dadd+0x3fc>
    d020:	2040      	movs	r0, #64	; 0x40
    d022:	1b45      	subs	r5, r0, r5
    d024:	40a9      	lsls	r1, r5
    d026:	430a      	orrs	r2, r1
    d028:	1e51      	subs	r1, r2, #1
    d02a:	418a      	sbcs	r2, r1
    d02c:	2100      	movs	r1, #0
    d02e:	431a      	orrs	r2, r3
    d030:	e6c7      	b.n	cdc2 <__aeabi_dadd+0xa2>
    d032:	2e00      	cmp	r6, #0
    d034:	d050      	beq.n	d0d8 <__aeabi_dadd+0x3b8>
    d036:	4e1a      	ldr	r6, [pc, #104]	; (d0a0 <__aeabi_dadd+0x380>)
    d038:	42b0      	cmp	r0, r6
    d03a:	d057      	beq.n	d0ec <__aeabi_dadd+0x3cc>
    d03c:	2680      	movs	r6, #128	; 0x80
    d03e:	426b      	negs	r3, r5
    d040:	4699      	mov	r9, r3
    d042:	0436      	lsls	r6, r6, #16
    d044:	4334      	orrs	r4, r6
    d046:	464b      	mov	r3, r9
    d048:	2b38      	cmp	r3, #56	; 0x38
    d04a:	dd00      	ble.n	d04e <__aeabi_dadd+0x32e>
    d04c:	e0d6      	b.n	d1fc <__aeabi_dadd+0x4dc>
    d04e:	2b1f      	cmp	r3, #31
    d050:	dd00      	ble.n	d054 <__aeabi_dadd+0x334>
    d052:	e135      	b.n	d2c0 <__aeabi_dadd+0x5a0>
    d054:	2620      	movs	r6, #32
    d056:	1af5      	subs	r5, r6, r3
    d058:	0026      	movs	r6, r4
    d05a:	40ae      	lsls	r6, r5
    d05c:	46b2      	mov	sl, r6
    d05e:	003e      	movs	r6, r7
    d060:	40de      	lsrs	r6, r3
    d062:	46ac      	mov	ip, r5
    d064:	0035      	movs	r5, r6
    d066:	4656      	mov	r6, sl
    d068:	432e      	orrs	r6, r5
    d06a:	4665      	mov	r5, ip
    d06c:	40af      	lsls	r7, r5
    d06e:	1e7d      	subs	r5, r7, #1
    d070:	41af      	sbcs	r7, r5
    d072:	40dc      	lsrs	r4, r3
    d074:	4337      	orrs	r7, r6
    d076:	1bd7      	subs	r7, r2, r7
    d078:	42ba      	cmp	r2, r7
    d07a:	4192      	sbcs	r2, r2
    d07c:	1b0c      	subs	r4, r1, r4
    d07e:	4252      	negs	r2, r2
    d080:	1aa4      	subs	r4, r4, r2
    d082:	0006      	movs	r6, r0
    d084:	46d8      	mov	r8, fp
    d086:	e6a3      	b.n	cdd0 <__aeabi_dadd+0xb0>
    d088:	4664      	mov	r4, ip
    d08a:	4667      	mov	r7, ip
    d08c:	432c      	orrs	r4, r5
    d08e:	d000      	beq.n	d092 <__aeabi_dadd+0x372>
    d090:	e6a2      	b.n	cdd8 <__aeabi_dadd+0xb8>
    d092:	2500      	movs	r5, #0
    d094:	2600      	movs	r6, #0
    d096:	2700      	movs	r7, #0
    d098:	e706      	b.n	cea8 <__aeabi_dadd+0x188>
    d09a:	001e      	movs	r6, r3
    d09c:	e6c4      	b.n	ce28 <__aeabi_dadd+0x108>
    d09e:	46c0      	nop			; (mov r8, r8)
    d0a0:	000007ff 	.word	0x000007ff
    d0a4:	ff7fffff 	.word	0xff7fffff
    d0a8:	800fffff 	.word	0x800fffff
    d0ac:	2b1f      	cmp	r3, #31
    d0ae:	dc63      	bgt.n	d178 <__aeabi_dadd+0x458>
    d0b0:	2020      	movs	r0, #32
    d0b2:	1ac3      	subs	r3, r0, r3
    d0b4:	0008      	movs	r0, r1
    d0b6:	4098      	lsls	r0, r3
    d0b8:	469c      	mov	ip, r3
    d0ba:	4683      	mov	fp, r0
    d0bc:	4653      	mov	r3, sl
    d0be:	0010      	movs	r0, r2
    d0c0:	40d8      	lsrs	r0, r3
    d0c2:	0003      	movs	r3, r0
    d0c4:	4658      	mov	r0, fp
    d0c6:	4318      	orrs	r0, r3
    d0c8:	4663      	mov	r3, ip
    d0ca:	409a      	lsls	r2, r3
    d0cc:	1e53      	subs	r3, r2, #1
    d0ce:	419a      	sbcs	r2, r3
    d0d0:	4653      	mov	r3, sl
    d0d2:	4302      	orrs	r2, r0
    d0d4:	40d9      	lsrs	r1, r3
    d0d6:	e703      	b.n	cee0 <__aeabi_dadd+0x1c0>
    d0d8:	0026      	movs	r6, r4
    d0da:	433e      	orrs	r6, r7
    d0dc:	d006      	beq.n	d0ec <__aeabi_dadd+0x3cc>
    d0de:	43eb      	mvns	r3, r5
    d0e0:	4699      	mov	r9, r3
    d0e2:	2b00      	cmp	r3, #0
    d0e4:	d0c7      	beq.n	d076 <__aeabi_dadd+0x356>
    d0e6:	4e94      	ldr	r6, [pc, #592]	; (d338 <__aeabi_dadd+0x618>)
    d0e8:	42b0      	cmp	r0, r6
    d0ea:	d1ac      	bne.n	d046 <__aeabi_dadd+0x326>
    d0ec:	000c      	movs	r4, r1
    d0ee:	0017      	movs	r7, r2
    d0f0:	0006      	movs	r6, r0
    d0f2:	46d8      	mov	r8, fp
    d0f4:	e698      	b.n	ce28 <__aeabi_dadd+0x108>
    d0f6:	4b90      	ldr	r3, [pc, #576]	; (d338 <__aeabi_dadd+0x618>)
    d0f8:	459a      	cmp	sl, r3
    d0fa:	d00b      	beq.n	d114 <__aeabi_dadd+0x3f4>
    d0fc:	4682      	mov	sl, r0
    d0fe:	e6e7      	b.n	ced0 <__aeabi_dadd+0x1b0>
    d100:	2800      	cmp	r0, #0
    d102:	d000      	beq.n	d106 <__aeabi_dadd+0x3e6>
    d104:	e09e      	b.n	d244 <__aeabi_dadd+0x524>
    d106:	0018      	movs	r0, r3
    d108:	4310      	orrs	r0, r2
    d10a:	d100      	bne.n	d10e <__aeabi_dadd+0x3ee>
    d10c:	e0e9      	b.n	d2e2 <__aeabi_dadd+0x5c2>
    d10e:	001c      	movs	r4, r3
    d110:	0017      	movs	r7, r2
    d112:	46d8      	mov	r8, fp
    d114:	4e88      	ldr	r6, [pc, #544]	; (d338 <__aeabi_dadd+0x618>)
    d116:	e687      	b.n	ce28 <__aeabi_dadd+0x108>
    d118:	2500      	movs	r5, #0
    d11a:	e772      	b.n	d002 <__aeabi_dadd+0x2e2>
    d11c:	2100      	movs	r1, #0
    d11e:	e782      	b.n	d026 <__aeabi_dadd+0x306>
    d120:	0023      	movs	r3, r4
    d122:	433b      	orrs	r3, r7
    d124:	2e00      	cmp	r6, #0
    d126:	d000      	beq.n	d12a <__aeabi_dadd+0x40a>
    d128:	e0ab      	b.n	d282 <__aeabi_dadd+0x562>
    d12a:	2b00      	cmp	r3, #0
    d12c:	d100      	bne.n	d130 <__aeabi_dadd+0x410>
    d12e:	e0e7      	b.n	d300 <__aeabi_dadd+0x5e0>
    d130:	000b      	movs	r3, r1
    d132:	4313      	orrs	r3, r2
    d134:	d100      	bne.n	d138 <__aeabi_dadd+0x418>
    d136:	e677      	b.n	ce28 <__aeabi_dadd+0x108>
    d138:	18ba      	adds	r2, r7, r2
    d13a:	42ba      	cmp	r2, r7
    d13c:	41bf      	sbcs	r7, r7
    d13e:	1864      	adds	r4, r4, r1
    d140:	427f      	negs	r7, r7
    d142:	19e4      	adds	r4, r4, r7
    d144:	0223      	lsls	r3, r4, #8
    d146:	d400      	bmi.n	d14a <__aeabi_dadd+0x42a>
    d148:	e0f2      	b.n	d330 <__aeabi_dadd+0x610>
    d14a:	4b7c      	ldr	r3, [pc, #496]	; (d33c <__aeabi_dadd+0x61c>)
    d14c:	0017      	movs	r7, r2
    d14e:	401c      	ands	r4, r3
    d150:	0006      	movs	r6, r0
    d152:	e669      	b.n	ce28 <__aeabi_dadd+0x108>
    d154:	0020      	movs	r0, r4
    d156:	4338      	orrs	r0, r7
    d158:	2e00      	cmp	r6, #0
    d15a:	d1d1      	bne.n	d100 <__aeabi_dadd+0x3e0>
    d15c:	2800      	cmp	r0, #0
    d15e:	d15b      	bne.n	d218 <__aeabi_dadd+0x4f8>
    d160:	001c      	movs	r4, r3
    d162:	4314      	orrs	r4, r2
    d164:	d100      	bne.n	d168 <__aeabi_dadd+0x448>
    d166:	e0a8      	b.n	d2ba <__aeabi_dadd+0x59a>
    d168:	001c      	movs	r4, r3
    d16a:	0017      	movs	r7, r2
    d16c:	46d8      	mov	r8, fp
    d16e:	e65b      	b.n	ce28 <__aeabi_dadd+0x108>
    d170:	0006      	movs	r6, r0
    d172:	2400      	movs	r4, #0
    d174:	2700      	movs	r7, #0
    d176:	e697      	b.n	cea8 <__aeabi_dadd+0x188>
    d178:	4650      	mov	r0, sl
    d17a:	000b      	movs	r3, r1
    d17c:	3820      	subs	r0, #32
    d17e:	40c3      	lsrs	r3, r0
    d180:	4699      	mov	r9, r3
    d182:	4653      	mov	r3, sl
    d184:	2b20      	cmp	r3, #32
    d186:	d100      	bne.n	d18a <__aeabi_dadd+0x46a>
    d188:	e095      	b.n	d2b6 <__aeabi_dadd+0x596>
    d18a:	2340      	movs	r3, #64	; 0x40
    d18c:	4650      	mov	r0, sl
    d18e:	1a1b      	subs	r3, r3, r0
    d190:	4099      	lsls	r1, r3
    d192:	430a      	orrs	r2, r1
    d194:	1e51      	subs	r1, r2, #1
    d196:	418a      	sbcs	r2, r1
    d198:	464b      	mov	r3, r9
    d19a:	2100      	movs	r1, #0
    d19c:	431a      	orrs	r2, r3
    d19e:	e69f      	b.n	cee0 <__aeabi_dadd+0x1c0>
    d1a0:	2e00      	cmp	r6, #0
    d1a2:	d130      	bne.n	d206 <__aeabi_dadd+0x4e6>
    d1a4:	0026      	movs	r6, r4
    d1a6:	433e      	orrs	r6, r7
    d1a8:	d067      	beq.n	d27a <__aeabi_dadd+0x55a>
    d1aa:	43db      	mvns	r3, r3
    d1ac:	469a      	mov	sl, r3
    d1ae:	2b00      	cmp	r3, #0
    d1b0:	d01c      	beq.n	d1ec <__aeabi_dadd+0x4cc>
    d1b2:	4e61      	ldr	r6, [pc, #388]	; (d338 <__aeabi_dadd+0x618>)
    d1b4:	42b0      	cmp	r0, r6
    d1b6:	d060      	beq.n	d27a <__aeabi_dadd+0x55a>
    d1b8:	4653      	mov	r3, sl
    d1ba:	2b38      	cmp	r3, #56	; 0x38
    d1bc:	dd00      	ble.n	d1c0 <__aeabi_dadd+0x4a0>
    d1be:	e096      	b.n	d2ee <__aeabi_dadd+0x5ce>
    d1c0:	2b1f      	cmp	r3, #31
    d1c2:	dd00      	ble.n	d1c6 <__aeabi_dadd+0x4a6>
    d1c4:	e09f      	b.n	d306 <__aeabi_dadd+0x5e6>
    d1c6:	2620      	movs	r6, #32
    d1c8:	1af3      	subs	r3, r6, r3
    d1ca:	0026      	movs	r6, r4
    d1cc:	409e      	lsls	r6, r3
    d1ce:	469c      	mov	ip, r3
    d1d0:	46b3      	mov	fp, r6
    d1d2:	4653      	mov	r3, sl
    d1d4:	003e      	movs	r6, r7
    d1d6:	40de      	lsrs	r6, r3
    d1d8:	0033      	movs	r3, r6
    d1da:	465e      	mov	r6, fp
    d1dc:	431e      	orrs	r6, r3
    d1de:	4663      	mov	r3, ip
    d1e0:	409f      	lsls	r7, r3
    d1e2:	1e7b      	subs	r3, r7, #1
    d1e4:	419f      	sbcs	r7, r3
    d1e6:	4653      	mov	r3, sl
    d1e8:	40dc      	lsrs	r4, r3
    d1ea:	4337      	orrs	r7, r6
    d1ec:	18bf      	adds	r7, r7, r2
    d1ee:	4297      	cmp	r7, r2
    d1f0:	4192      	sbcs	r2, r2
    d1f2:	1864      	adds	r4, r4, r1
    d1f4:	4252      	negs	r2, r2
    d1f6:	18a4      	adds	r4, r4, r2
    d1f8:	0006      	movs	r6, r0
    d1fa:	e678      	b.n	ceee <__aeabi_dadd+0x1ce>
    d1fc:	4327      	orrs	r7, r4
    d1fe:	1e7c      	subs	r4, r7, #1
    d200:	41a7      	sbcs	r7, r4
    d202:	2400      	movs	r4, #0
    d204:	e737      	b.n	d076 <__aeabi_dadd+0x356>
    d206:	4e4c      	ldr	r6, [pc, #304]	; (d338 <__aeabi_dadd+0x618>)
    d208:	42b0      	cmp	r0, r6
    d20a:	d036      	beq.n	d27a <__aeabi_dadd+0x55a>
    d20c:	2680      	movs	r6, #128	; 0x80
    d20e:	425b      	negs	r3, r3
    d210:	0436      	lsls	r6, r6, #16
    d212:	469a      	mov	sl, r3
    d214:	4334      	orrs	r4, r6
    d216:	e7cf      	b.n	d1b8 <__aeabi_dadd+0x498>
    d218:	0018      	movs	r0, r3
    d21a:	4310      	orrs	r0, r2
    d21c:	d100      	bne.n	d220 <__aeabi_dadd+0x500>
    d21e:	e603      	b.n	ce28 <__aeabi_dadd+0x108>
    d220:	1ab8      	subs	r0, r7, r2
    d222:	4684      	mov	ip, r0
    d224:	4567      	cmp	r7, ip
    d226:	41ad      	sbcs	r5, r5
    d228:	1ae0      	subs	r0, r4, r3
    d22a:	426d      	negs	r5, r5
    d22c:	1b40      	subs	r0, r0, r5
    d22e:	0205      	lsls	r5, r0, #8
    d230:	d400      	bmi.n	d234 <__aeabi_dadd+0x514>
    d232:	e62c      	b.n	ce8e <__aeabi_dadd+0x16e>
    d234:	1bd7      	subs	r7, r2, r7
    d236:	42ba      	cmp	r2, r7
    d238:	4192      	sbcs	r2, r2
    d23a:	1b1c      	subs	r4, r3, r4
    d23c:	4252      	negs	r2, r2
    d23e:	1aa4      	subs	r4, r4, r2
    d240:	46d8      	mov	r8, fp
    d242:	e5f1      	b.n	ce28 <__aeabi_dadd+0x108>
    d244:	0018      	movs	r0, r3
    d246:	4310      	orrs	r0, r2
    d248:	d100      	bne.n	d24c <__aeabi_dadd+0x52c>
    d24a:	e763      	b.n	d114 <__aeabi_dadd+0x3f4>
    d24c:	08f8      	lsrs	r0, r7, #3
    d24e:	0767      	lsls	r7, r4, #29
    d250:	4307      	orrs	r7, r0
    d252:	2080      	movs	r0, #128	; 0x80
    d254:	08e4      	lsrs	r4, r4, #3
    d256:	0300      	lsls	r0, r0, #12
    d258:	4204      	tst	r4, r0
    d25a:	d008      	beq.n	d26e <__aeabi_dadd+0x54e>
    d25c:	08dd      	lsrs	r5, r3, #3
    d25e:	4205      	tst	r5, r0
    d260:	d105      	bne.n	d26e <__aeabi_dadd+0x54e>
    d262:	08d2      	lsrs	r2, r2, #3
    d264:	0759      	lsls	r1, r3, #29
    d266:	4311      	orrs	r1, r2
    d268:	000f      	movs	r7, r1
    d26a:	002c      	movs	r4, r5
    d26c:	46d8      	mov	r8, fp
    d26e:	0f7b      	lsrs	r3, r7, #29
    d270:	00e4      	lsls	r4, r4, #3
    d272:	431c      	orrs	r4, r3
    d274:	00ff      	lsls	r7, r7, #3
    d276:	4e30      	ldr	r6, [pc, #192]	; (d338 <__aeabi_dadd+0x618>)
    d278:	e5d6      	b.n	ce28 <__aeabi_dadd+0x108>
    d27a:	000c      	movs	r4, r1
    d27c:	0017      	movs	r7, r2
    d27e:	0006      	movs	r6, r0
    d280:	e5d2      	b.n	ce28 <__aeabi_dadd+0x108>
    d282:	2b00      	cmp	r3, #0
    d284:	d038      	beq.n	d2f8 <__aeabi_dadd+0x5d8>
    d286:	000b      	movs	r3, r1
    d288:	4313      	orrs	r3, r2
    d28a:	d100      	bne.n	d28e <__aeabi_dadd+0x56e>
    d28c:	e742      	b.n	d114 <__aeabi_dadd+0x3f4>
    d28e:	08f8      	lsrs	r0, r7, #3
    d290:	0767      	lsls	r7, r4, #29
    d292:	4307      	orrs	r7, r0
    d294:	2080      	movs	r0, #128	; 0x80
    d296:	08e4      	lsrs	r4, r4, #3
    d298:	0300      	lsls	r0, r0, #12
    d29a:	4204      	tst	r4, r0
    d29c:	d0e7      	beq.n	d26e <__aeabi_dadd+0x54e>
    d29e:	08cb      	lsrs	r3, r1, #3
    d2a0:	4203      	tst	r3, r0
    d2a2:	d1e4      	bne.n	d26e <__aeabi_dadd+0x54e>
    d2a4:	08d2      	lsrs	r2, r2, #3
    d2a6:	0749      	lsls	r1, r1, #29
    d2a8:	4311      	orrs	r1, r2
    d2aa:	000f      	movs	r7, r1
    d2ac:	001c      	movs	r4, r3
    d2ae:	e7de      	b.n	d26e <__aeabi_dadd+0x54e>
    d2b0:	2700      	movs	r7, #0
    d2b2:	2400      	movs	r4, #0
    d2b4:	e5d5      	b.n	ce62 <__aeabi_dadd+0x142>
    d2b6:	2100      	movs	r1, #0
    d2b8:	e76b      	b.n	d192 <__aeabi_dadd+0x472>
    d2ba:	2500      	movs	r5, #0
    d2bc:	2700      	movs	r7, #0
    d2be:	e5f3      	b.n	cea8 <__aeabi_dadd+0x188>
    d2c0:	464e      	mov	r6, r9
    d2c2:	0025      	movs	r5, r4
    d2c4:	3e20      	subs	r6, #32
    d2c6:	40f5      	lsrs	r5, r6
    d2c8:	464b      	mov	r3, r9
    d2ca:	002e      	movs	r6, r5
    d2cc:	2b20      	cmp	r3, #32
    d2ce:	d02d      	beq.n	d32c <__aeabi_dadd+0x60c>
    d2d0:	2540      	movs	r5, #64	; 0x40
    d2d2:	1aed      	subs	r5, r5, r3
    d2d4:	40ac      	lsls	r4, r5
    d2d6:	4327      	orrs	r7, r4
    d2d8:	1e7c      	subs	r4, r7, #1
    d2da:	41a7      	sbcs	r7, r4
    d2dc:	2400      	movs	r4, #0
    d2de:	4337      	orrs	r7, r6
    d2e0:	e6c9      	b.n	d076 <__aeabi_dadd+0x356>
    d2e2:	2480      	movs	r4, #128	; 0x80
    d2e4:	2500      	movs	r5, #0
    d2e6:	0324      	lsls	r4, r4, #12
    d2e8:	4e13      	ldr	r6, [pc, #76]	; (d338 <__aeabi_dadd+0x618>)
    d2ea:	2700      	movs	r7, #0
    d2ec:	e5dc      	b.n	cea8 <__aeabi_dadd+0x188>
    d2ee:	4327      	orrs	r7, r4
    d2f0:	1e7c      	subs	r4, r7, #1
    d2f2:	41a7      	sbcs	r7, r4
    d2f4:	2400      	movs	r4, #0
    d2f6:	e779      	b.n	d1ec <__aeabi_dadd+0x4cc>
    d2f8:	000c      	movs	r4, r1
    d2fa:	0017      	movs	r7, r2
    d2fc:	4e0e      	ldr	r6, [pc, #56]	; (d338 <__aeabi_dadd+0x618>)
    d2fe:	e593      	b.n	ce28 <__aeabi_dadd+0x108>
    d300:	000c      	movs	r4, r1
    d302:	0017      	movs	r7, r2
    d304:	e590      	b.n	ce28 <__aeabi_dadd+0x108>
    d306:	4656      	mov	r6, sl
    d308:	0023      	movs	r3, r4
    d30a:	3e20      	subs	r6, #32
    d30c:	40f3      	lsrs	r3, r6
    d30e:	4699      	mov	r9, r3
    d310:	4653      	mov	r3, sl
    d312:	2b20      	cmp	r3, #32
    d314:	d00e      	beq.n	d334 <__aeabi_dadd+0x614>
    d316:	2340      	movs	r3, #64	; 0x40
    d318:	4656      	mov	r6, sl
    d31a:	1b9b      	subs	r3, r3, r6
    d31c:	409c      	lsls	r4, r3
    d31e:	4327      	orrs	r7, r4
    d320:	1e7c      	subs	r4, r7, #1
    d322:	41a7      	sbcs	r7, r4
    d324:	464b      	mov	r3, r9
    d326:	2400      	movs	r4, #0
    d328:	431f      	orrs	r7, r3
    d32a:	e75f      	b.n	d1ec <__aeabi_dadd+0x4cc>
    d32c:	2400      	movs	r4, #0
    d32e:	e7d2      	b.n	d2d6 <__aeabi_dadd+0x5b6>
    d330:	0017      	movs	r7, r2
    d332:	e5b2      	b.n	ce9a <__aeabi_dadd+0x17a>
    d334:	2400      	movs	r4, #0
    d336:	e7f2      	b.n	d31e <__aeabi_dadd+0x5fe>
    d338:	000007ff 	.word	0x000007ff
    d33c:	ff7fffff 	.word	0xff7fffff

0000d340 <__aeabi_dcmpun>:
    d340:	b570      	push	{r4, r5, r6, lr}
    d342:	4e0e      	ldr	r6, [pc, #56]	; (d37c <__aeabi_dcmpun+0x3c>)
    d344:	030d      	lsls	r5, r1, #12
    d346:	031c      	lsls	r4, r3, #12
    d348:	0049      	lsls	r1, r1, #1
    d34a:	005b      	lsls	r3, r3, #1
    d34c:	0b2d      	lsrs	r5, r5, #12
    d34e:	0d49      	lsrs	r1, r1, #21
    d350:	0b24      	lsrs	r4, r4, #12
    d352:	0d5b      	lsrs	r3, r3, #21
    d354:	42b1      	cmp	r1, r6
    d356:	d004      	beq.n	d362 <__aeabi_dcmpun+0x22>
    d358:	4908      	ldr	r1, [pc, #32]	; (d37c <__aeabi_dcmpun+0x3c>)
    d35a:	2000      	movs	r0, #0
    d35c:	428b      	cmp	r3, r1
    d35e:	d008      	beq.n	d372 <__aeabi_dcmpun+0x32>
    d360:	bd70      	pop	{r4, r5, r6, pc}
    d362:	4305      	orrs	r5, r0
    d364:	2001      	movs	r0, #1
    d366:	2d00      	cmp	r5, #0
    d368:	d1fa      	bne.n	d360 <__aeabi_dcmpun+0x20>
    d36a:	4904      	ldr	r1, [pc, #16]	; (d37c <__aeabi_dcmpun+0x3c>)
    d36c:	2000      	movs	r0, #0
    d36e:	428b      	cmp	r3, r1
    d370:	d1f6      	bne.n	d360 <__aeabi_dcmpun+0x20>
    d372:	4314      	orrs	r4, r2
    d374:	0020      	movs	r0, r4
    d376:	1e44      	subs	r4, r0, #1
    d378:	41a0      	sbcs	r0, r4
    d37a:	e7f1      	b.n	d360 <__aeabi_dcmpun+0x20>
    d37c:	000007ff 	.word	0x000007ff

0000d380 <__aeabi_d2f>:
    d380:	b5f0      	push	{r4, r5, r6, r7, lr}
    d382:	004c      	lsls	r4, r1, #1
    d384:	0d64      	lsrs	r4, r4, #21
    d386:	030b      	lsls	r3, r1, #12
    d388:	1c62      	adds	r2, r4, #1
    d38a:	0f45      	lsrs	r5, r0, #29
    d38c:	0a5b      	lsrs	r3, r3, #9
    d38e:	0552      	lsls	r2, r2, #21
    d390:	432b      	orrs	r3, r5
    d392:	0fc9      	lsrs	r1, r1, #31
    d394:	00c5      	lsls	r5, r0, #3
    d396:	0d52      	lsrs	r2, r2, #21
    d398:	2a01      	cmp	r2, #1
    d39a:	dd28      	ble.n	d3ee <__aeabi_d2f+0x6e>
    d39c:	4a3a      	ldr	r2, [pc, #232]	; (d488 <__aeabi_d2f+0x108>)
    d39e:	18a6      	adds	r6, r4, r2
    d3a0:	2efe      	cmp	r6, #254	; 0xfe
    d3a2:	dc1b      	bgt.n	d3dc <__aeabi_d2f+0x5c>
    d3a4:	2e00      	cmp	r6, #0
    d3a6:	dd3e      	ble.n	d426 <__aeabi_d2f+0xa6>
    d3a8:	0180      	lsls	r0, r0, #6
    d3aa:	0002      	movs	r2, r0
    d3ac:	1e50      	subs	r0, r2, #1
    d3ae:	4182      	sbcs	r2, r0
    d3b0:	0f6d      	lsrs	r5, r5, #29
    d3b2:	432a      	orrs	r2, r5
    d3b4:	00db      	lsls	r3, r3, #3
    d3b6:	4313      	orrs	r3, r2
    d3b8:	075a      	lsls	r2, r3, #29
    d3ba:	d004      	beq.n	d3c6 <__aeabi_d2f+0x46>
    d3bc:	220f      	movs	r2, #15
    d3be:	401a      	ands	r2, r3
    d3c0:	2a04      	cmp	r2, #4
    d3c2:	d000      	beq.n	d3c6 <__aeabi_d2f+0x46>
    d3c4:	3304      	adds	r3, #4
    d3c6:	2280      	movs	r2, #128	; 0x80
    d3c8:	04d2      	lsls	r2, r2, #19
    d3ca:	401a      	ands	r2, r3
    d3cc:	d05a      	beq.n	d484 <__aeabi_d2f+0x104>
    d3ce:	3601      	adds	r6, #1
    d3d0:	2eff      	cmp	r6, #255	; 0xff
    d3d2:	d003      	beq.n	d3dc <__aeabi_d2f+0x5c>
    d3d4:	019b      	lsls	r3, r3, #6
    d3d6:	0a5b      	lsrs	r3, r3, #9
    d3d8:	b2f4      	uxtb	r4, r6
    d3da:	e001      	b.n	d3e0 <__aeabi_d2f+0x60>
    d3dc:	24ff      	movs	r4, #255	; 0xff
    d3de:	2300      	movs	r3, #0
    d3e0:	0258      	lsls	r0, r3, #9
    d3e2:	05e4      	lsls	r4, r4, #23
    d3e4:	0a40      	lsrs	r0, r0, #9
    d3e6:	07c9      	lsls	r1, r1, #31
    d3e8:	4320      	orrs	r0, r4
    d3ea:	4308      	orrs	r0, r1
    d3ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d3ee:	2c00      	cmp	r4, #0
    d3f0:	d007      	beq.n	d402 <__aeabi_d2f+0x82>
    d3f2:	431d      	orrs	r5, r3
    d3f4:	d0f2      	beq.n	d3dc <__aeabi_d2f+0x5c>
    d3f6:	2080      	movs	r0, #128	; 0x80
    d3f8:	00db      	lsls	r3, r3, #3
    d3fa:	0480      	lsls	r0, r0, #18
    d3fc:	4303      	orrs	r3, r0
    d3fe:	26ff      	movs	r6, #255	; 0xff
    d400:	e7da      	b.n	d3b8 <__aeabi_d2f+0x38>
    d402:	432b      	orrs	r3, r5
    d404:	d003      	beq.n	d40e <__aeabi_d2f+0x8e>
    d406:	2305      	movs	r3, #5
    d408:	08db      	lsrs	r3, r3, #3
    d40a:	2cff      	cmp	r4, #255	; 0xff
    d40c:	d003      	beq.n	d416 <__aeabi_d2f+0x96>
    d40e:	025b      	lsls	r3, r3, #9
    d410:	0a5b      	lsrs	r3, r3, #9
    d412:	b2e4      	uxtb	r4, r4
    d414:	e7e4      	b.n	d3e0 <__aeabi_d2f+0x60>
    d416:	2b00      	cmp	r3, #0
    d418:	d032      	beq.n	d480 <__aeabi_d2f+0x100>
    d41a:	2080      	movs	r0, #128	; 0x80
    d41c:	03c0      	lsls	r0, r0, #15
    d41e:	4303      	orrs	r3, r0
    d420:	025b      	lsls	r3, r3, #9
    d422:	0a5b      	lsrs	r3, r3, #9
    d424:	e7dc      	b.n	d3e0 <__aeabi_d2f+0x60>
    d426:	0032      	movs	r2, r6
    d428:	3217      	adds	r2, #23
    d42a:	db14      	blt.n	d456 <__aeabi_d2f+0xd6>
    d42c:	2280      	movs	r2, #128	; 0x80
    d42e:	271e      	movs	r7, #30
    d430:	0412      	lsls	r2, r2, #16
    d432:	4313      	orrs	r3, r2
    d434:	1bbf      	subs	r7, r7, r6
    d436:	2f1f      	cmp	r7, #31
    d438:	dc0f      	bgt.n	d45a <__aeabi_d2f+0xda>
    d43a:	4a14      	ldr	r2, [pc, #80]	; (d48c <__aeabi_d2f+0x10c>)
    d43c:	4694      	mov	ip, r2
    d43e:	4464      	add	r4, ip
    d440:	002a      	movs	r2, r5
    d442:	40a5      	lsls	r5, r4
    d444:	002e      	movs	r6, r5
    d446:	40a3      	lsls	r3, r4
    d448:	1e75      	subs	r5, r6, #1
    d44a:	41ae      	sbcs	r6, r5
    d44c:	40fa      	lsrs	r2, r7
    d44e:	4333      	orrs	r3, r6
    d450:	4313      	orrs	r3, r2
    d452:	2600      	movs	r6, #0
    d454:	e7b0      	b.n	d3b8 <__aeabi_d2f+0x38>
    d456:	2400      	movs	r4, #0
    d458:	e7d5      	b.n	d406 <__aeabi_d2f+0x86>
    d45a:	2202      	movs	r2, #2
    d45c:	4252      	negs	r2, r2
    d45e:	1b96      	subs	r6, r2, r6
    d460:	001a      	movs	r2, r3
    d462:	40f2      	lsrs	r2, r6
    d464:	2f20      	cmp	r7, #32
    d466:	d009      	beq.n	d47c <__aeabi_d2f+0xfc>
    d468:	4809      	ldr	r0, [pc, #36]	; (d490 <__aeabi_d2f+0x110>)
    d46a:	4684      	mov	ip, r0
    d46c:	4464      	add	r4, ip
    d46e:	40a3      	lsls	r3, r4
    d470:	432b      	orrs	r3, r5
    d472:	1e5d      	subs	r5, r3, #1
    d474:	41ab      	sbcs	r3, r5
    d476:	2600      	movs	r6, #0
    d478:	4313      	orrs	r3, r2
    d47a:	e79d      	b.n	d3b8 <__aeabi_d2f+0x38>
    d47c:	2300      	movs	r3, #0
    d47e:	e7f7      	b.n	d470 <__aeabi_d2f+0xf0>
    d480:	2300      	movs	r3, #0
    d482:	e7ad      	b.n	d3e0 <__aeabi_d2f+0x60>
    d484:	0034      	movs	r4, r6
    d486:	e7bf      	b.n	d408 <__aeabi_d2f+0x88>
    d488:	fffffc80 	.word	0xfffffc80
    d48c:	fffffc82 	.word	0xfffffc82
    d490:	fffffca2 	.word	0xfffffca2
    d494:	682f2e2e 	.word	0x682f2e2e
    d498:	732f6c61 	.word	0x732f6c61
    d49c:	682f6372 	.word	0x682f6372
    d4a0:	695f6c61 	.word	0x695f6c61
    d4a4:	6d5f6332 	.word	0x6d5f6332
    d4a8:	6e79735f 	.word	0x6e79735f
    d4ac:	00632e63 	.word	0x00632e63
    d4b0:	682f2e2e 	.word	0x682f2e2e
    d4b4:	732f6c61 	.word	0x732f6c61
    d4b8:	682f6372 	.word	0x682f6372
    d4bc:	695f6c61 	.word	0x695f6c61
    d4c0:	00632e6f 	.word	0x00632e6f
    d4c4:	682f2e2e 	.word	0x682f2e2e
    d4c8:	732f6c61 	.word	0x732f6c61
    d4cc:	682f6372 	.word	0x682f6372
    d4d0:	705f6c61 	.word	0x705f6c61
    d4d4:	632e6d77 	.word	0x632e6d77
    d4d8:	00000000 	.word	0x00000000
    d4dc:	682f2e2e 	.word	0x682f2e2e
    d4e0:	732f6c61 	.word	0x732f6c61
    d4e4:	682f6372 	.word	0x682f6372
    d4e8:	735f6c61 	.word	0x735f6c61
    d4ec:	6d5f6970 	.word	0x6d5f6970
    d4f0:	6e79735f 	.word	0x6e79735f
    d4f4:	00632e63 	.word	0x00632e63
    d4f8:	682f2e2e 	.word	0x682f2e2e
    d4fc:	732f6c61 	.word	0x732f6c61
    d500:	682f6372 	.word	0x682f6372
    d504:	745f6c61 	.word	0x745f6c61
    d508:	72656d69 	.word	0x72656d69
    d50c:	0000632e 	.word	0x0000632e
    d510:	682f2e2e 	.word	0x682f2e2e
    d514:	732f6c61 	.word	0x732f6c61
    d518:	682f6372 	.word	0x682f6372
    d51c:	755f6c61 	.word	0x755f6c61
    d520:	74726173 	.word	0x74726173
    d524:	6e79735f 	.word	0x6e79735f
    d528:	00632e63 	.word	0x00632e63
    d52c:	682f2e2e 	.word	0x682f2e2e
    d530:	752f6c61 	.word	0x752f6c61
    d534:	736c6974 	.word	0x736c6974
    d538:	6372732f 	.word	0x6372732f
    d53c:	6974752f 	.word	0x6974752f
    d540:	6c5f736c 	.word	0x6c5f736c
    d544:	2e747369 	.word	0x2e747369
    d548:	00000063 	.word	0x00000063
    d54c:	682f2e2e 	.word	0x682f2e2e
    d550:	652f6c70 	.word	0x652f6c70
    d554:	682f6369 	.word	0x682f6369
    d558:	655f6c70 	.word	0x655f6c70
    d55c:	632e6369 	.word	0x632e6369
    d560:	00000000 	.word	0x00000000

0000d564 <_map>:
    d564:	00000008 00000028 682f2e2e 722f6c70     ....(...../hpl/r
    d574:	682f6374 725f6c70 632e6374 00000000     tc/hpl_rtc.c....
    d584:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
    d594:	65735f6c 6d6f6372 0000632e              l_sercom.c..

0000d5a0 <_i2cms>:
    d5a0:	00000002 00200014 00000100 000000ea     ...... .........
    d5b0:	000000d7 02dc6c00                       .....l..

0000d5b8 <_usarts>:
    d5b8:	00000004 40010004 00030000 0000ff2e     .......@........

0000d5c8 <sercomspi_regs>:
    d5c8:	0020000c 00020000 00000000 000000fe     .. .............
    d5d8:	0020000c 00020000 00000000 030000fe     .. .............
    d5e8:	682f2e2e 742f6c70 70682f63 63745f6c     ../hpl/tc/hpl_tc
    d5f8:	0000632e 000029f6 00002a0a 00002a22     .c...)...*.."*..
    d608:	00002a3a 00002a64 00002a7e 00002b3c     :*..d*..~*..<+..
    d618:	00002aa8 00002acc 00002ad6 00002ae0     .*...*...*...*..
    d628:	00002af8 00002b1e 0000321c 00003226     .*...+...2..&2..
    d638:	00003230 00003238 00003242 0000324c     02..82..B2..L2..
    d648:	20544547 0000202f 20544547 7465732f     GET / ..GET /set
    d658:	6c61765f 00000073 3d706d61 76266625     _vals...amp=%f&v
    d668:	3d746c6f 00006625 50545448 312e312f     olt=%f..HTTP/1.1
    d678:	30303220 0d4b4f20 6e6f430a 746e6574      200 OK..Content
    d688:	7079542d 61203a65 696c7070 69746163     -Type: applicati
    d698:	6a2f6e6f 0d6e6f73 7b0a0d0a 63757322     on/json....{"suc
    d6a8:	73736563 72743a22 007d6575 20544547     cess":true}.GET 
    d6b8:	6e6f632f 6c6f7274 00000000 69766564     /control....devi
    d6c8:	253d6563 5d265e5b 74636126 3d6e6f69     ce=%[^&]&action=
    d6d8:	00007325 006e6166 00006e6f 0066666f     %s..fan.on..off.
    d6e8:	00757370 20544547 7465672f 6c61765f     psu.GET /get_val
    d6f8:	00000073 50545448 312e312f 30303220     s...HTTP/1.1 200
    d708:	0d4b4f20 6e6f430a 746e6574 7079542d      OK..Content-Typ
    d718:	61203a65 696c7070 69746163 6a2f6e6f     e: application/j
    d728:	0d6e6f73 7b0a0d0a 706d6122 2e253a22     son....{"amp":%.
    d738:	222c6632 746c6f76 2e253a22 222c6632     2f,"volt":%.2f,"
    d748:	74746177 2e253a22 222c6632 44706d61     watt":%.2f,"ampD
    d758:	3a224d4d 66322e25 6f76222c 4d44746c     MM":%.2f,"voltDM
    d768:	253a224d 2c66322e 74756f22 74617453     M":%.2f,"outStat
    d778:	253a2265 00007d64                       e":%d}..

0000d780 <psu_page>:
    d780:	50545448 312e312f 30303220 0d4b4f20     HTTP/1.1 200 OK.
    d790:	6e6f430a 746e6574 7079542d 74203a65     .Content-Type: t
    d7a0:	2f747865 6c6d7468 0a0d0a0d 4f44213c     ext/html....<!DO
    d7b0:	50595443 74682045 0a3e6c6d 6d74683c     CTYPE html>.<htm
    d7c0:	616c206c 223d676e 3e226e65 65683c0a     l lang="en">.<he
    d7d0:	0a3e6461 74656d3c 68632061 65737261     ad>.<meta charse
    d7e0:	55223d74 382d4654 3c0a3e22 6c746974     t="UTF-8">.<titl
    d7f0:	6f503e65 20726577 70707553 4320796c     e>Power Supply C
    d800:	72746e6f 2f3c6c6f 6c746974 3c0a3e65     ontrol</title>.<
    d810:	6c797473 620a3e65 2079646f 6f660a7b     style>.body {.fo
    d820:	662d746e 6c696d61 41203a79 6c616972     nt-family: Arial
    d830:	6173202c 732d736e 66697265 69640a3b     , sans-serif;.di
    d840:	616c7073 66203a79 3b78656c 656c660a     splay: flex;.fle
    d850:	69642d78 74636572 3a6e6f69 6c6f6320     x-direction: col
    d860:	3b6e6d75 696c610a 692d6e67 736d6574     umn;.align-items
    d870:	6563203a 7265746e 61700a3b 6e696464     : center;.paddin
    d880:	32203a67 3b787030 6361620a 6f72676b     g: 20px;.backgro
    d890:	3a646e75 30662320 30663066 0a7d0a3b     und: #f0f0f0;.}.
    d8a0:	6e6f632e 6e696174 7b207265 78616d0a     .container {.max
    d8b0:	6469772d 203a6874 70303034 770a3b78     -width: 400px;.w
    d8c0:	68746469 3031203a 0a3b2530 6b636162     idth: 100%;.back
    d8d0:	756f7267 203a646e 74696877 700a3b65     ground: white;.p
    d8e0:	69646461 203a676e 78703032 6f620a3b     adding: 20px;.bo
    d8f0:	72656472 6461722d 3a737569 70303120     rder-radius: 10p
    d900:	620a3b78 732d786f 6f646168 30203a77     x;.box-shadow: 0
    d910:	31203020 20787030 61626772 202c3028      0 10px rgba(0, 
    d920:	30202c30 2e30202c 0a3b2931 742e0a7d     0, 0, 0.1);.}..t
    d930:	656c7469 740a7b20 2d747865 67696c61     itle {.text-alig
    d940:	63203a6e 65746e65 6d0a3b72 69677261     n: center;.margi
    d950:	6f622d6e 6d6f7474 3032203a 0a3b7870     n-bottom: 20px;.
    d960:	722e0a7d 202c776f 706e692e 722d7475     }..row, .input-r
    d970:	202c776f 6572702e 2d746573 20776f72     ow, .preset-row 
    d980:	69640a7b 616c7073 66203a79 3b78656c     {.display: flex;
    d990:	73756a0a 79666974 6e6f632d 746e6574     .justify-content
    d9a0:	7073203a 2d656361 77746562 3b6e6565     : space-between;
    d9b0:	696c610a 692d6e67 736d6574 6563203a     .align-items: ce
    d9c0:	7265746e 616d0a3b 6e696772 746f622d     nter;.margin-bot
    d9d0:	3a6d6f74 70303120 7d0a3b78 6f722e0a     tom: 10px;.}..ro
    d9e0:	616c2077 2c6c6562 6e692e20 2d747570     w label, .input-
    d9f0:	20776f72 6562616c 2e202c6c 73657270     row label, .pres
    da00:	722d7465 6c20776f 6c656261 660a7b20     et-row label {.f
    da10:	3a78656c 0a3b3120 722e0a7d 6920776f     lex: 1;.}..row i
    da20:	7475706e 692e202c 7475706e 776f722d     nput, .input-row
    da30:	706e6920 202c7475 6572702e 2d746573      input, .preset-
    da40:	20776f72 75706e69 0a7b2074 74646977     row input {.widt
    da50:	31203a68 78703030 65740a3b 612d7478     h: 100px;.text-a
    da60:	6e67696c 6563203a 7265746e 0a7d0a3b     lign: center;.}.
    da70:	7475622e 2d6e6f74 20776f72 69640a7b     .button-row {.di
    da80:	616c7073 66203a79 3b78656c 73756a0a     splay: flex;.jus
    da90:	79666974 6e6f632d 746e6574 7073203a     tify-content: sp
    daa0:	2d656361 77746562 3b6e6565 72616d0a     ace-between;.mar
    dab0:	2d6e6967 3a706f74 70303220 7d0a3b78     gin-top: 20px;.}
    dac0:	75622e0a 6e6f7474 770a7b20 68746469     ..button {.width
    dad0:	3834203a 700a3b25 69646461 203a676e     : 48%;.padding: 
    dae0:	78703031 61620a3b 72676b63 646e756f     10px;.background
    daf0:	3023203a 66623730 630a3b66 726f6c6f     : #007bff;.color
    db00:	6877203a 3b657469 726f620a 3a726564     : white;.border:
    db10:	6e6f6e20 620a3b65 6564726f 61722d72      none;.border-ra
    db20:	73756964 7035203a 630a3b78 6f737275     dius: 5px;.curso
    db30:	70203a72 746e696f 0a3b7265 622e0a7d     r: pointer;.}..b
    db40:	6f747475 6f683a6e 20726576 61620a7b     utton:hover {.ba
    db50:	72676b63 646e756f 3023203a 62363530     ckground: #0056b
    db60:	7d0a3b33 72702e0a 74657365 776f722d     3;.}..preset-row
    db70:	640a7b20 6c707369 203a7961 78656c66      {.display: flex
    db80:	756a0a3b 66697473 6f632d79 6e65746e     ;.justify-conten
    db90:	73203a74 65636170 7465622d 6e656577     t: space-between
    dba0:	616d0a3b 6e696772 706f742d 3032203a     ;.margin-top: 20
    dbb0:	0a3b7870 702e0a7d 65736572 75622d74     px;.}..preset-bu
    dbc0:	6e6f7474 770a7b20 68746469 3233203a     tton {.width: 32
    dbd0:	700a3b25 69646461 203a676e 78703031     %;.padding: 10px
    dbe0:	61620a3b 72676b63 646e756f 3223203a     ;.background: #2
    dbf0:	34376138 630a3b35 726f6c6f 6877203a     8a745;.color: wh
    dc00:	3b657469 726f620a 3a726564 6e6f6e20     ite;.border: non
    dc10:	620a3b65 6564726f 61722d72 73756964     e;.border-radius
    dc20:	7035203a 630a3b78 6f737275 70203a72     : 5px;.cursor: p
    dc30:	746e696f 0a3b7265 702e0a7d 65736572     ointer;.}..prese
    dc40:	75622d74 6e6f7474 766f683a 7b207265     t-button:hover {
    dc50:	6361620a 6f72676b 3a646e75 31322320     .background: #21
    dc60:	38333838 0a7d0a3b 7065732e 74617261     8838;.}..separat
    dc70:	7b20726f 6469770a 203a6874 25303031     or {.width: 100%
    dc80:	65680a3b 74686769 7031203a 620a3b78     ;.height: 1px;.b
    dc90:	676b6361 6e756f72 23203a64 3b646464     ackground: #ddd;
    dca0:	72616d0a 3a6e6967 70303220 3b302078     .margin: 20px 0;
    dcb0:	2e0a7d0a 20776f72 6170732e 2d646563     .}..row .spaced-
    dcc0:	75706e69 0a7b2074 6772616d 6c2d6e69     input {.margin-l
    dcd0:	3a746665 70303120 7d0a3b78 74732e0a     eft: 10px;.}..st
    dce0:	73757461 646e692d 74616369 7b20726f     atus-indicator {
    dcf0:	6469770a 203a6874 78703032 65680a3b     .width: 20px;.he
    dd00:	74686769 3032203a 0a3b7870 64726f62     ight: 20px;.bord
    dd10:	722d7265 75696461 35203a73 0a3b2530     er-radius: 50%;.
    dd20:	6b636162 756f7267 203a646e 63636323     background: #ccc
    dd30:	2a2f203b 66654420 746c7561 206f7420     ; /* Default to 
    dd40:	79617267 0a2f2a20 2f3c0a7d 6c797473     gray */.}.</styl
    dd50:	3c0a3e65 6165682f 3c0a3e64 79646f62     e>.</head>.<body
    dd60:	643c0a3e 63207669 7373616c 6f63223d     >.<div class="co
    dd70:	6961746e 2272656e 683c0a3e 6c632031     ntainer">.<h1 cl
    dd80:	3d737361 74697422 3e22656c 65776f50     ass="title">Powe
    dd90:	75532072 796c7070 6e6f4320 6c6f7274     r Supply Control
    dda0:	31682f3c 643c0a3e 63207669 7373616c     </h1>.<div class
    ddb0:	6f72223d 0a3e2277 62616c3c 503e6c65     ="row">.<label>P
    ddc0:	65736572 6d412074 202f2070 3a4d4d44     reset Amp / DMM:
    ddd0:	616c2f3c 3e6c6562 6e693c0a 20747570     </label>.<input 
    dde0:	65707974 6574223d 20227478 223d6469     type="text" id="
    ddf0:	2d706d61 22746573 61657220 6c6e6f64     amp-set" readonl
    de00:	6c632079 3d737361 61707322 2d646563     y class="spaced-
    de10:	75706e69 0a3e2274 706e693c 74207475     input">.<input t
    de20:	3d657079 78657422 69202274 61223d64     ype="text" id="a
    de30:	642d706d 20226d6d 64616572 796c6e6f     mp-dmm" readonly
    de40:	616c6320 223d7373 63617073 692d6465      class="spaced-i
    de50:	7475706e 3c0a3e22 7669642f 643c0a3e     nput">.</div>.<d
    de60:	63207669 7373616c 6f72223d 0a3e2277     iv class="row">.
    de70:	62616c3c 503e6c65 65736572 6f562074     <label>Preset Vo
    de80:	2f20746c 4d4d4420 6c2f3c3a 6c656261     lt / DMM:</label
    de90:	693c0a3e 7475706e 70797420 74223d65     >.<input type="t
    dea0:	22747865 3d646920 6c6f7622 65732d74     ext" id="volt-se
    deb0:	72202274 6f646165 20796c6e 73616c63     t" readonly clas
    dec0:	73223d73 65636170 6e692d64 22747570     s="spaced-input"
    ded0:	693c0a3e 7475706e 70797420 74223d65     >.<input type="t
    dee0:	22747865 3d646920 6c6f7622 6d642d74     ext" id="volt-dm
    def0:	7220226d 6f646165 20796c6e 73616c63     m" readonly clas
    df00:	73223d73 65636170 6e692d64 22747570     s="spaced-input"
    df10:	2f3c0a3e 3e766964 69643c0a 6c632076     >.</div>.<div cl
    df20:	3d737361 776f7222 3c0a3e22 6562616c     ass="row">.<labe
    df30:	61573e6c 2d207474 74615720 4d442074     l>Watt - Watt DM
    df40:	2f3c3a4d 6562616c 3c0a3e6c 75706e69     M:</label>.<inpu
    df50:	79742074 223d6570 74786574 64692022     t type="text" id
    df60:	6177223d 642d7474 6c707369 20227961     ="watt-display" 
    df70:	64616572 796c6e6f 2f3c0a3e 3e766964     readonly>.</div>
    df80:	69643c0a 6c632076 3d737361 706e6922     .<div class="inp
    df90:	722d7475 3e22776f 616c3c0a 206c6562     ut-row">.<label 
    dfa0:	3d726f66 706d6122 706e692d 3e227475     for="amp-input">
    dfb0:	20746553 2077654e 3a706d41 616c2f3c     Set New Amp:</la
    dfc0:	3e6c6562 6e693c0a 20747570 65707974     bel>.<input type
    dfd0:	6574223d 20227478 223d6469 2d706d61     ="text" id="amp-
    dfe0:	75706e69 0a3e2274 69642f3c 3c0a3e76     input">.</div>.<
    dff0:	20766964 73616c63 69223d73 7475706e     div class="input
    e000:	776f722d 3c0a3e22 6562616c 6f66206c     -row">.<label fo
    e010:	76223d72 2d746c6f 75706e69 533e2274     r="volt-input">S
    e020:	4e207465 56207765 3a746c6f 616c2f3c     et New Volt:</la
    e030:	3e6c6562 6e693c0a 20747570 65707974     bel>.<input type
    e040:	6574223d 20227478 223d6469 746c6f76     ="text" id="volt
    e050:	706e692d 3e227475 642f3c0a 0a3e7669     -input">.</div>.
    e060:	7669643c 616c6320 223d7373 74747562     <div class="butt
    e070:	722d6e6f 3e22776f 69643c0a 6c632076     on-row">.<div cl
    e080:	3d737361 61747322 2d737574 69646e69     ass="status-indi
    e090:	6f746163 69202272 73223d64 75746174     cator" id="statu
    e0a0:	6e692d73 61636964 22726f74 642f3c3e     s-indicator"></d
    e0b0:	0a3e7669 7475623c 206e6f74 73616c63     iv>.<button clas
    e0c0:	62223d73 6f747475 7320226e 656c7974     s="button" style
    e0d0:	616d223d 6e696772 66656c2d 61203a74     ="margin-left: a
    e0e0:	3b6f7475 6e6f2022 63696c63 73223d6b     uto;" onclick="s
    e0f0:	61567465 7365756c 3e222928 20746553     etValues()">Set 
    e100:	756c6156 2f3c7365 74747562 0a3e6e6f     Values</button>.
    e110:	69642f3c 3c0a3e76 20766964 73616c63     </div>.<div clas
    e120:	62223d73 6f747475 6f722d6e 0a3e2277     s="button-row">.
    e130:	7475623c 206e6f74 73616c63 62223d73     <button class="b
    e140:	6f747475 6f20226e 696c636e 223d6b63     utton" onclick="
    e150:	746e6f63 446c6f72 63697665 70272865     controlDevice('p
    e160:	2c277573 276e6f27 543e2229 206e7275     su','on')">Turn 
    e170:	20555350 2f3c6e4f 74747562 0a3e6e6f     PSU On</button>.
    e180:	7475623c 206e6f74 73616c63 62223d73     <button class="b
    e190:	6f747475 6f20226e 696c636e 223d6b63     utton" onclick="
    e1a0:	746e6f63 446c6f72 63697665 70272865     controlDevice('p
    e1b0:	2c277573 66666f27 3e222927 6e727554     su','off')">Turn
    e1c0:	55535020 66664f20 75622f3c 6e6f7474      PSU Off</button
    e1d0:	2f3c0a3e 3e766964 69643c0a 6c632076     >.</div>.<div cl
    e1e0:	3d737361 70657322 74617261 3e22726f     ass="separator">
    e1f0:	69642f3c 3c0a3e76 20766964 73616c63     </div>.<div clas
    e200:	62223d73 6f747475 6f722d6e 0a3e2277     s="button-row">.
    e210:	7475623c 206e6f74 73616c63 62223d73     <button class="b
    e220:	6f747475 6f20226e 696c636e 223d6b63     utton" onclick="
    e230:	746e6f63 446c6f72 63697665 66272865     controlDevice('f
    e240:	2c276e61 276e6f27 543e2229 206e7275     an','on')">Turn 
    e250:	206e6146 2f3c6e4f 74747562 0a3e6e6f     Fan On</button>.
    e260:	7475623c 206e6f74 73616c63 62223d73     <button class="b
    e270:	6f747475 6f20226e 696c636e 223d6b63     utton" onclick="
    e280:	746e6f63 446c6f72 63697665 66272865     controlDevice('f
    e290:	2c276e61 66666f27 3e222927 6e727554     an','off')">Turn
    e2a0:	6e614620 66664f20 75622f3c 6e6f7474      Fan Off</button
    e2b0:	2f3c0a3e 3e766964 69643c0a 6c632076     >.</div>.<div cl
    e2c0:	3d737361 70657322 74617261 3e22726f     ass="separator">
    e2d0:	69642f3c 3c0a3e76 20766964 73616c63     </div>.<div clas
    e2e0:	70223d73 65736572 6f722d74 0a3e2277     s="preset-row">.
    e2f0:	7475623c 206e6f74 73616c63 70223d73     <button class="p
    e300:	65736572 75622d74 6e6f7474 6e6f2022     reset-button" on
    e310:	63696c63 73223d6b 72507465 74657365     click="setPreset
    e320:	22293128 2056353e 2f3c4131 74747562     (1)">5V 1A</butt
    e330:	0a3e6e6f 7475623c 206e6f74 73616c63     on>.<button clas
    e340:	70223d73 65736572 75622d74 6e6f7474     s="preset-button
    e350:	6e6f2022 63696c63 73223d6b 72507465     " onclick="setPr
    e360:	74657365 22293228 5632313e 3c413220     eset(2)">12V 2A<
    e370:	7475622f 3e6e6f74 75623c0a 6e6f7474     /button>.<button
    e380:	616c6320 223d7373 73657270 622d7465      class="preset-b
    e390:	6f747475 6f20226e 696c636e 223d6b63     utton" onclick="
    e3a0:	50746573 65736572 29332874 34323e22     setPreset(3)">24
    e3b0:	41322056 75622f3c 6e6f7474 2f3c0a3e     V 2A</button>.</
    e3c0:	3e766964 642f3c0a 0a3e7669 7263733c     div>.</div>.<scr
    e3d0:	3e747069 6e75660a 6f697463 6566206e     ipt>.function fe
    e3e0:	56686374 65756c61 20292873 65660a7b     tchValues() {.fe
    e3f0:	28686374 65672f27 61765f74 2927736c     tch('/get_vals')
    e400:	68742e0a 72286e65 6f707365 2065736e     ..then(response 
    e410:	72203e3d 6f707365 2e65736e 6e6f736a     => response.json
    e420:	0a292928 6568742e 6164286e 3d206174     ())..then(data =
    e430:	0a7b203e 75636f64 746e656d 7465672e     > {.document.get
    e440:	6d656c45 42746e65 28644979 706d6127     ElementById('amp
    e450:	7465732d 762e2927 65756c61 64203d20     -set').value = d
    e460:	2e617461 2e706d61 69466f74 28646578     ata.amp.toFixed(
    e470:	0a3b2932 75636f64 746e656d 7465672e     2);.document.get
    e480:	6d656c45 42746e65 28644979 6c6f7627     ElementById('vol
    e490:	65732d74 2e292774 756c6176 203d2065     t-set').value = 
    e4a0:	61746164 6c6f762e 6f742e74 65786946     data.volt.toFixe
    e4b0:	29322864 6f640a3b 656d7563 672e746e     d(2);.document.g
    e4c0:	6c457465 6e656d65 49794274 77272864     etElementById('w
    e4d0:	2d747461 70736964 2779616c 61762e29     att-display').va
    e4e0:	2065756c 6164203d 772e6174 2e747461     lue = data.watt.
    e4f0:	69466f74 28646578 0a3b2932 75636f64     toFixed(2);.docu
    e500:	746e656d 7465672e 6d656c45 42746e65     ment.getElementB
    e510:	28644979 706d6127 6d6d642d 762e2927     yId('amp-dmm').v
    e520:	65756c61 64203d20 2e617461 44706d61     alue = data.ampD
    e530:	742e4d4d 7869466f 32286465 640a3b29     MM.toFixed(2);.d
    e540:	6d75636f 2e746e65 45746567 656d656c     ocument.getEleme
    e550:	7942746e 27286449 746c6f76 6d6d642d     ntById('volt-dmm
    e560:	762e2927 65756c61 64203d20 2e617461     ').value = data.
    e570:	746c6f76 2e4d4d44 69466f74 28646578     voltDMM.toFixed(
    e580:	0a3b2932 202f2f0a 61647055 74206574     2);..// Update t
    e590:	73206568 75746174 6e692073 61636964     he status indica
    e5a0:	20726f74 6f6c6f63 61622072 20646573     tor color based 
    e5b0:	6f206e6f 74537475 0a657461 736e6f63     on outState.cons
    e5c0:	74732074 73757461 69646e49 6f746163     t statusIndicato
    e5d0:	203d2072 75636f64 746e656d 7465672e     r = document.get
    e5e0:	6d656c45 42746e65 28644979 61747327     ElementById('sta
    e5f0:	2d737574 69646e69 6f746163 3b292772     tus-indicator');
    e600:	2066690a 74616428 756f2e61 61745374     .if (data.outSta
    e610:	3d206574 30203d3d 0a7b2029 74617473     te === 0) {.stat
    e620:	6e497375 61636964 2e726f74 6c797473     usIndicator.styl
    e630:	61622e65 72676b63 646e756f 27203d20     e.background = '
    e640:	63636323 2f203b27 7267202f 7d0a7961     #ccc'; // gray.}
    e650:	736c6520 66692065 61642820 6f2e6174      else if (data.o
    e660:	74537475 20657461 203d3d3d 7b202931     utState === 1) {
    e670:	6174730a 49737574 6369646e 726f7461     .statusIndicator
    e680:	7974732e 622e656c 676b6361 6e756f72     .style.backgroun
    e690:	203d2064 38322327 35343761 2f203b27     d = '#28a745'; /
    e6a0:	7267202f 0a6e6565 6c65207d 69206573     / green.} else i
    e6b0:	64282066 2e617461 5374756f 65746174     f (data.outState
    e6c0:	3d3d3d20 20293220 74730a7b 73757461      === 2) {.status
    e6d0:	69646e49 6f746163 74732e72 2e656c79     Indicator.style.
    e6e0:	6b636162 756f7267 3d20646e 64232720     background = '#d
    e6f0:	34353363 203b2735 72202f2f 7d0a6465     c3545'; // red.}
    e700:	0a297d0a 7461632e 65286863 726f7272     .})..catch(error
    e710:	203e3d20 736e6f63 2e656c6f 6f727265      => console.erro
    e720:	45272872 726f7272 74656620 6e696863     r('Error fetchin
    e730:	61762067 7365756c 202c273a 6f727265     g values:', erro
    e740:	3b292972 0a0a7d0a 636e7566 6e6f6974     r));.}..function
    e750:	74657320 756c6156 29287365 630a7b20      setValues() {.c
    e760:	74736e6f 706d6120 70203d20 65737261     onst amp = parse
    e770:	616f6c46 6f642874 656d7563 672e746e     Float(document.g
    e780:	6c457465 6e656d65 49794274 61272864     etElementById('a
    e790:	692d706d 7475706e 762e2927 65756c61     mp-input').value
    e7a0:	630a3b29 74736e6f 6c6f7620 203d2074     );.const volt = 
    e7b0:	73726170 6f6c4665 64287461 6d75636f     parseFloat(docum
    e7c0:	2e746e65 45746567 656d656c 7942746e     ent.getElementBy
    e7d0:	27286449 746c6f76 706e692d 29277475     Id('volt-input')
    e7e0:	6c61762e 3b296575 7465660a 60286863     .value);.fetch(`
    e7f0:	7465732f 6c61765f 6d613f73 7b243d70     /set_vals?amp=${
    e800:	7d706d61 6c6f7626 7b243d74 746c6f76     amp}&volt=${volt
    e810:	0a29607d 6568742e 6572286e 6e6f7073     }`)..then(respon
    e820:	3d206573 6572203e 6e6f7073 6a2e6573     se => response.j
    e830:	286e6f73 2e0a2929 6e656874 74616428     son())..then(dat
    e840:	3e3d2061 690a7b20 64282066 2e617461     a => {.if (data.
    e850:	63637573 29737365 660a7b20 68637465     success) {.fetch
    e860:	756c6156 29287365 207d0a3b 65736c65     Values();.} else
    e870:	610a7b20 7472656c 72452728 20726f72      {.alert('Error 
    e880:	74746573 20676e69 756c6176 29277365     setting values')
    e890:	0a7d0a3b 2e0a297d 63746163 72652868     ;.}.})..catch(er
    e8a0:	20726f72 63203e3d 6f736e6f 652e656c     ror => console.e
    e8b0:	726f7272 72452728 20726f72 74746573     rror('Error sett
    e8c0:	20676e69 756c6176 273a7365 7265202c     ing values:', er
    e8d0:	29726f72 7d0a3b29 75660a0a 6974636e     ror));.}..functi
    e8e0:	63206e6f 72746e6f 65446c6f 65636976     on controlDevice
    e8f0:	76656428 2c656369 74636120 296e6f69     (device, action)
    e900:	660a7b20 68637465 632f6028 72746e6f      {.fetch(`/contr
    e910:	643f6c6f 63697665 7b243d65 69766564     ol?device=${devi
    e920:	267d6563 69746361 243d6e6f 7463617b     ce}&action=${act
    e930:	7d6e6f69 2e0a2960 6e656874 73657228     ion}`)..then(res
    e940:	736e6f70 3e3d2065 73657220 736e6f70     ponse => respons
    e950:	736a2e65 29286e6f 742e0a29 286e6568     e.json())..then(
    e960:	61746164 203e3d20 66690a7b 61642820     data => {.if (da
    e970:	732e6174 65636375 20297373 6c610a7b     ta.success) {.al
    e980:	28747265 647b2460 63697665 6f742e65     ert(`${device.to
    e990:	65707055 73614372 7d292865 617b2420     UpperCase()} ${a
    e9a0:	6f697463 6f742e6e 65707055 73614372     ction.toUpperCas
    e9b0:	7d292865 63755320 73736563 606c7566     e()} Successful`
    e9c0:	7d0a3b29 736c6520 0a7b2065 72656c61     );.} else {.aler
    e9d0:	45602874 726f7272 617b2420 6f697463     t(`Error ${actio
    e9e0:	6e697d6e 7b242067 69766564 607d6563     n}ing ${device}`
    e9f0:	7d0a3b29 0a297d0a 7461632e 65286863     );.}.})..catch(e
    ea00:	726f7272 203e3d20 736e6f63 2e656c6f     rror => console.
    ea10:	6f727265 45602872 726f7272 617b2420     error(`Error ${a
    ea20:	6f697463 6e697d6e 7b242067 69766564     ction}ing ${devi
    ea30:	3a7d6563 65202c60 726f7272 0a3b2929     ce}:`, error));.
    ea40:	660a0a7d 74636e75 206e6f69 50746573     }..function setP
    ea50:	65736572 72702874 74657365 0a7b2029     reset(preset) {.
    ea60:	2074656c 2c706d61 6c6f7620 690a3b74     let amp, volt;.i
    ea70:	70282066 65736572 3d3d2074 20293120     f (preset == 1) 
    ea80:	6d610a7b 203d2070 35322e31 6f760a3b     {.amp = 1.25;.vo
    ea90:	3d20746c 332e3520 207d0a3b 65736c65     lt = 5.3;.} else
    eaa0:	20666920 65727028 20746573 32203d3d      if (preset == 2
    eab0:	0a7b2029 20706d61 2e32203d 760a3b30     ) {.amp = 2.0;.v
    eac0:	20746c6f 3231203d 0a3b302e 6c65207d     olt = 12.0;.} el
    ead0:	69206573 70282066 65736572 3d3d2074     se if (preset ==
    eae0:	20293320 6d610a7b 203d2070 3b302e32      3) {.amp = 2.0;
    eaf0:	6c6f760a 203d2074 302e3432 0a7d0a3b     .volt = 24.0;.}.
    eb00:	75636f64 746e656d 7465672e 6d656c45     document.getElem
    eb10:	42746e65 28644979 706d6127 706e692d     entById('amp-inp
    eb20:	29277475 6c61762e 3d206575 706d6120     ut').value = amp
    eb30:	6f640a3b 656d7563 672e746e 6c457465     ;.document.getEl
    eb40:	6e656d65 49794274 76272864 2d746c6f     ementById('volt-
    eb50:	75706e69 2e292774 756c6176 203d2065     input').value = 
    eb60:	746c6f76 65730a3b 6c615674 28736575     volt;.setValues(
    eb70:	7d0a3b29 65730a0a 746e4974 61767265     );.}..setInterva
    eb80:	6566286c 56686374 65756c61 31202c73     l(fetchValues, 1
    eb90:	29303030 2f3c0a3b 69726373 0a3e7470     000);.</script>.
    eba0:	6f622f3c 0a3e7964 74682f3c 0a3e6c6d     </body>.</html>.
    ebb0:	00000000 00003d64 00003cb4 00003cb4     ....d=...<...<..
    ebc0:	00003cb2 00003d56 00003d56 00003d4c     .<..V=..V=..L=..
    ebd0:	00003cb2 00003d56 00003d4c 00003d56     .<..V=..L=..V=..
    ebe0:	00003cb2 00003d5c 00003d5c 00003d5c     .<..\=..\=..\=..
    ebf0:	00003dec 00004070 00004052 0000400c     .=..p@..R@...@..
    ec00:	00003f2a 0000400c 00004044 0000400c     *?...@..D@...@..
    ec10:	00003f2a 00004052 00004052 00004044     *?..R@..R@..D@..
    ec20:	00003f2a 00003f22 00003f22 00003f22     *?.."?.."?.."?..
    ec30:	00004288 000046d0 00004590 00004590     .B...F...E...E..
    ec40:	0000458c 000046a8 000046a8 0000469a     .E...F...F...F..
    ec50:	0000458c 000046a8 0000469a 000046a8     .E...F...F...F..
    ec60:	0000458c 000046b0 000046b0 000046b0     .E...F...F...F..
    ec70:	000048b4                                .H..

0000ec74 <_global_impure_ptr>:
    ec74:	200000a0 00006514 00006588 00006588     ... .e...e...e..
    ec84:	000064f8 00006588 00006588 00006588     .d...e...e...e..
    ec94:	00006588 00006588 00006588 00006500     .e...e...e...e..
    eca4:	00005fe2 00006588 00005f9c 00005fec     ._...e..._..._..
    ecb4:	00006588 00006038 00006222 00006222     .e..8`.."b.."b..
    ecc4:	00006222 00006222 00006222 00006222     "b.."b.."b.."b..
    ecd4:	00006222 00006222 00006222 00006588     "b.."b.."b...e..
    ece4:	00006588 00006588 00006588 00006588     .e...e...e...e..
    ecf4:	00006588 00006588 00006588 00006588     .e...e...e...e..
    ed04:	00006588 00006040 00006188 00006588     .e..@`...a...e..
    ed14:	00006188 00006588 00006588 00006588     .a...e...e...e..
    ed24:	00006588 00006252 00006588 00006588     .e..Rb...e...e..
    ed34:	0000625a 00006588 00006588 00006588     Zb...e...e...e..
    ed44:	00006588 00006588 000062fc 00006588     .e...e...b...e..
    ed54:	00006588 0000632e 00006588 00006588     .e...c...e...e..
    ed64:	00006588 00006588 00006588 00006588     .e...e...e...e..
    ed74:	00006588 00006588 00006588 00006588     .e...e...e...e..
    ed84:	00006428 0000645c 00006188 00006188     (d..\d...a...a..
    ed94:	00006188 0000646e 0000645c 00006588     .a..nd..\d...e..
    eda4:	00006588 00006476 00006588 00006390     .e..vd...e...c..
    edb4:	00006556 000064cc 000063c6 00006588     Ve...d...c...e..
    edc4:	000063ce 00006588 00006524 00006588     .c...e..$e...e..
    edd4:	00006588 00006486 00464e49 00666e69     .e...d..INF.inf.
    ede4:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    edf4:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    ee04:	37363534 62613938 66656463 00000000     456789abcdef....
    ee14:	6c756e28 0000296c 00000030              (null)..0...

0000ee20 <blanks.7223>:
    ee20:	20202020 20202020 20202020 20202020                     

0000ee30 <zeroes.7224>:
    ee30:	30303030 30303030 30303030 30303030     0000000000000000
    ee40:	00007600 00007740 00007740 00007740     .v..@w..@w..@w..
    ee50:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ee60:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ee70:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ee80:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ee90:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    eea0:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    eeb0:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    eec0:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    eed0:	00007740 0000759c 00007740 00007740     @w...u..@w..@w..
    eee0:	00007740 00007740 0000784a 00007740     @w..@w..Jx..@w..
    eef0:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ef00:	0000782e 0000782e 0000782e 0000782e     .x...x...x...x..
    ef10:	0000782e 0000782e 0000782e 0000782e     .x...x...x...x..
    ef20:	0000782e 0000782e 00007740 00007740     .x...x..@w..@w..
    ef30:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ef40:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ef50:	00007820 000077fe 00007740 000077fe      x...w..@w...w..
    ef60:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ef70:	000077f8 00007740 00007740 000077ec     .w..@w..@w...w..
    ef80:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    ef90:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    efa0:	000077e6 00007740 00007740 000077ca     .w..@w..@w...w..
    efb0:	00007740 00007740 00007740 00007740     @w..@w..@w..@w..
    efc0:	00007740 00007740 00007740 000077ba     @w..@w..@w...w..
    efd0:	000077b4 000077fe 000077fe 000077fe     .w...w...w...w..
    efe0:	000077a4 00007608 00007740 00007740     .w...v..@w..@w..
    eff0:	0000771c 00007740 0000776a 0000775a     .w..@w..jw..Zw..
    f000:	00007702 00007740 00007740 000076fa     .w..@w..@w...v..
    f010:	00007740 00007658 00007740 00007740     @w..Xv..@w..@w..
    f020:	000077e6 000078ca 00007aa0 000078ca     .w...x...z...x..
    f030:	00007aa0 00007aa0 0000788e 00007852     .z...z...x..Rx..
    f040:	00007852 00007852 00007852 00007852     Rx..Rx..Rx..Rx..
    f050:	00007852 00007852 00007852 00007852     Rx..Rx..Rx..Rx..
    f060:	00007aa0 00007aa0 00007aa0 00007aa0     .z...z...z...z..
    f070:	00007aa0 00007aa0 00007aa0 00007a84     .z...z...z...z..
    f080:	00007aa0 00007aa0 00007aa0 00007a3a     .z...z...z..:z..
    f090:	00007a2c 00007aa0 00007aa0 00007914     ,z...z...z...y..
    f0a0:	00007aa0 00007aa0 00007aa0 00007aa0     .z...z...z...z..
    f0b0:	000078e4 00007aa0 00007aa0 00007aa0     .x...z...z...z..
    f0c0:	00007aa0 00007aa0 000078d8 00007aa0     .z...z...x...z..
    f0d0:	00007aa0 00007aa0 00007aa0 00007a92     .z...z...z...z..
    f0e0:	00007aa0 00007aa0 00007aa0 00007aa0     .z...z...z...z..
    f0f0:	00007aa0 00007aa0 00007aa0 00007a84     .z...z...z...z..
    f100:	00007aa0 00007aa0 00007aa0 00007a3a     .z...z...z..:z..
    f110:	00007a2c 00007aa0 00007aa0 00007914     ,z...z...z...y..
    f120:	00007aa0 00007aa0 00007aa0 00007aa0     .z...z...z...z..
    f130:	000078e4 00007aa0 00007aa0 00007aa0     .x...z...z...z..
    f140:	00007aa0 00007aa0 000078d8 00007aa0     .z...z...x...z..
    f150:	00007aa0 00007aa0 00007aa0 00007a92     .z...z...z...z..
    f160:	00007cca 00007c22 00007cca 00007c22     .|.."|...|.."|..
    f170:	00007c22 00007c6e 00007c5e 00007c5e     "|..n|..^|..^|..
    f180:	00007c5e 00007c5e 00007c5e 00007c5e     ^|..^|..^|..^|..
    f190:	00007c5e 00007cba 00007cba 00007c22     ^|...|...|.."|..
    f1a0:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f1b0:	00007c22 00007c22 00007c52 00007c52     "|.."|..R|..R|..
    f1c0:	00007c52 00007c52 00007c52 00007c52     R|..R|..R|..R|..
    f1d0:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f1e0:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f1f0:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f200:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f210:	00007c22 00007bee 00007c22 00007c22     "|...{.."|.."|..
    f220:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f230:	00007c22 00007c22 00007c52 00007c52     "|.."|..R|..R|..
    f240:	00007c52 00007c52 00007c52 00007c52     R|..R|..R|..R|..
    f250:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f260:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f270:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f280:	00007c22 00007c22 00007c22 00007c22     "|.."|.."|.."|..
    f290:	00007c22 00007bee 646c2565 00000000     "|...{..e%ld....

0000f2a0 <basefix.7294>:
    f2a0:	0001000a 00030002 00050004 00070006     ................
    f2b0:	00090008 000b000a 000d000c 000f000e     ................
    f2c0:	00000010 69666e49 7974696e 00000000     ....Infinity....
    f2d0:	004e614e 00000043 49534f50 00000058     NaN.C...POSIX...
    f2e0:	0000002e 00000000                       ........

0000f2e8 <__mprec_bigtens>:
    f2e8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    f2f8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    f308:	7f73bf3c 75154fdd                       <.s..O.u

0000f310 <__mprec_tens>:
    f310:	00000000 3ff00000 00000000 40240000     .......?......$@
    f320:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    f330:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    f340:	00000000 412e8480 00000000 416312d0     .......A......cA
    f350:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    f360:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    f370:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    f380:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    f390:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    f3a0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    f3b0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    f3c0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    f3d0:	79d99db4 44ea7843                       ...yCx.D

0000f3d8 <p05.6055>:
    f3d8:	00000005 00000019 0000007d 0000a900     ........}.......
    f3e8:	0000a99a 0000a99a 0000a99a 0000a99a     ................
    f3f8:	0000a99a 0000a99a 0000a99a 0000a99a     ................
    f408:	0000a98e 0000a98e 0000a98e 0000a98e     ................
    f418:	0000a98e 0000a99a 0000a99a 0000a99a     ................
    f428:	0000a99a 0000a99a 0000a99a 0000a99a     ................
    f438:	0000a99a 0000a99a 0000a99a 0000a99a     ................
    f448:	0000a99a 0000a99a 0000a99a 0000a99a     ................
    f458:	0000a99a 0000a99a 0000a99a 0000a98e     ................
    f468:	0000a99a 0000a99a 0000a99a 0000a99a     ................
    f478:	0000a99a 0000a99a 0000a99a 0000a99a     ................
    f488:	0000a99a 0000a99a 0000a934 0000a99a     ........4.......
    f498:	0000a9d6 0000b32c 0000b34e 0000b344     ....,...N...D...
    f4a8:	0000b33e 0000b322 0000b34e 0000666e     >..."...N...nf..
    f4b8:	74696e69 00000079 00006e61              inity...an..

0000f4c4 <fpi.6141>:
    f4c4:	00000035 fffffbce 000003cb 00000001     5...............
    f4d4:	00000000                                ....

0000f4d8 <fpinan.6177>:
    f4d8:	00000034 fffffbce 000003cb 00000001     4...............
	...

0000f4f0 <tinytens>:
    f4f0:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    f500:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    f510:	64ac6f43 11680628                       Co.d(.h.

0000f518 <_ctype_>:
    f518:	20202000 20202020 28282020 20282828     .         ((((( 
    f528:	20202020 20202020 20202020 20202020                     
    f538:	10108820 10101010 10101010 10101010      ...............
    f548:	04040410 04040404 10040404 10101010     ................
    f558:	41411010 41414141 01010101 01010101     ..AAAAAA........
    f568:	01010101 01010101 01010101 10101010     ................
    f578:	42421010 42424242 02020202 02020202     ..BBBBBB........
    f588:	02020202 02020202 02020202 10101010     ................
    f598:	00000020 00000000 00000000 00000000      ...............
	...

0000f61c <__hexdig>:
	...
    f64c:	13121110 17161514 00001918 00000000     ................
    f65c:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
    f67c:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

0000f71c <_init>:
    f71c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f71e:	46c0      	nop			; (mov r8, r8)
    f720:	bcf8      	pop	{r3, r4, r5, r6, r7}
    f722:	bc08      	pop	{r3}
    f724:	469e      	mov	lr, r3
    f726:	4770      	bx	lr

0000f728 <__init_array_start>:
    f728:	00008291 	.word	0x00008291

0000f72c <__frame_dummy_init_array_entry>:
    f72c:	000000cd                                ....

0000f730 <_fini>:
    f730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f732:	46c0      	nop			; (mov r8, r8)
    f734:	bcf8      	pop	{r3, r4, r5, r6, r7}
    f736:	bc08      	pop	{r3}
    f738:	469e      	mov	lr, r3
    f73a:	4770      	bx	lr

0000f73c <__fini_array_start>:
    f73c:	000000a5 	.word	0x000000a5
